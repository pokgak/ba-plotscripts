<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 09:53:29.879" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.456" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:53:30.464" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:53:31.440" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:53:30.454" endtime="20201112 09:53:31.441"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.443" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:53:31.442" endtime="20201112 09:53:31.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.453" endtime="20201112 09:53:31.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:31.446" endtime="20201112 09:53:31.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.445" endtime="20201112 09:53:31.629"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.643" endtime="20201112 09:53:31.667"></status>
</kw>
<msg timestamp="20201112 09:53:31.668" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.641" endtime="20201112 09:53:31.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.670" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.669" endtime="20201112 09:53:31.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.673" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:31.671" endtime="20201112 09:53:31.674"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:31.639" endtime="20201112 09:53:31.675"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:31.636" endtime="20201112 09:53:31.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.635" endtime="20201112 09:53:31.675"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:31.679" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:31.678" endtime="20201112 09:53:31.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.676" endtime="20201112 09:53:31.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.634" endtime="20201112 09:53:31.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.633" endtime="20201112 09:53:31.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.681" endtime="20201112 09:53:31.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.632" endtime="20201112 09:53:31.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.684" endtime="20201112 09:53:31.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.630" endtime="20201112 09:53:31.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.451" endtime="20201112 09:53:31.686"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:31.693" endtime="20201112 09:53:31.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.691" endtime="20201112 09:53:31.713"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.727" endtime="20201112 09:53:31.748"></status>
</kw>
<msg timestamp="20201112 09:53:31.748" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.726" endtime="20201112 09:53:31.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.751" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.749" endtime="20201112 09:53:31.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.754" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:31.752" endtime="20201112 09:53:31.754"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:31.723" endtime="20201112 09:53:31.755"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:31.721" endtime="20201112 09:53:31.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.719" endtime="20201112 09:53:31.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:31.759" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:31.759" endtime="20201112 09:53:31.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.756" endtime="20201112 09:53:31.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.718" endtime="20201112 09:53:31.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.717" endtime="20201112 09:53:31.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.761" endtime="20201112 09:53:31.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.715" endtime="20201112 09:53:31.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.713" endtime="20201112 09:53:31.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.690" endtime="20201112 09:53:31.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.771" endtime="20201112 09:53:31.784"></status>
</kw>
<msg timestamp="20201112 09:53:31.784" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.769" endtime="20201112 09:53:31.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.787" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.785" endtime="20201112 09:53:31.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.788" endtime="20201112 09:53:31.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.767" endtime="20201112 09:53:31.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.765" endtime="20201112 09:53:31.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.795" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 09:53:31.794" endtime="20201112 09:53:31.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.797" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 09:53:31.796" endtime="20201112 09:53:31.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.791" endtime="20201112 09:53:31.798"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:31.686" endtime="20201112 09:53:31.798" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:53:29.991" endtime="20201112 09:53:31.802"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.855" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:53:31.863" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:53:32.902" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:53:31.854" endtime="20201112 09:53:32.904"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.911" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:53:32.906" endtime="20201112 09:53:32.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.852" endtime="20201112 09:53:32.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:32.917" endtime="20201112 09:53:33.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.914" endtime="20201112 09:53:33.137"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.150" endtime="20201112 09:53:33.174"></status>
</kw>
<msg timestamp="20201112 09:53:33.174" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.149" endtime="20201112 09:53:33.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.177" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.175" endtime="20201112 09:53:33.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.180" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:33.178" endtime="20201112 09:53:33.180"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:33.146" endtime="20201112 09:53:33.181"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:33.144" endtime="20201112 09:53:33.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.143" endtime="20201112 09:53:33.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:33.185" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:33.185" endtime="20201112 09:53:33.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.183" endtime="20201112 09:53:33.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.142" endtime="20201112 09:53:33.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.141" endtime="20201112 09:53:33.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.187" endtime="20201112 09:53:33.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.140" endtime="20201112 09:53:33.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.190" endtime="20201112 09:53:33.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.138" endtime="20201112 09:53:33.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.850" endtime="20201112 09:53:33.192"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:33.198" endtime="20201112 09:53:33.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.197" endtime="20201112 09:53:33.218"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.231" endtime="20201112 09:53:33.251"></status>
</kw>
<msg timestamp="20201112 09:53:33.252" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.230" endtime="20201112 09:53:33.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.255" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.253" endtime="20201112 09:53:33.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.257" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:33.256" endtime="20201112 09:53:33.258"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:33.227" endtime="20201112 09:53:33.259"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:33.225" endtime="20201112 09:53:33.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.223" endtime="20201112 09:53:33.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:33.263" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:33.262" endtime="20201112 09:53:33.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.260" endtime="20201112 09:53:33.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.223" endtime="20201112 09:53:33.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.222" endtime="20201112 09:53:33.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.265" endtime="20201112 09:53:33.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.221" endtime="20201112 09:53:33.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.219" endtime="20201112 09:53:33.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.195" endtime="20201112 09:53:33.267"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 09:53:33.270" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.277" endtime="20201112 09:53:33.292"></status>
</kw>
<msg timestamp="20201112 09:53:33.293" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.276" endtime="20201112 09:53:33.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.295" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.294" endtime="20201112 09:53:33.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.296" endtime="20201112 09:53:33.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.273" endtime="20201112 09:53:33.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.271" endtime="20201112 09:53:33.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.305" endtime="20201112 09:53:33.575"></status>
</kw>
<msg timestamp="20201112 09:53:33.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068224944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068230306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:33.304" endtime="20201112 09:53:33.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068224944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068230306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:33.577" endtime="20201112 09:53:33.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.583" endtime="20201112 09:53:33.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.301" endtime="20201112 09:53:33.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.299" endtime="20201112 09:53:33.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.589" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:33.588" endtime="20201112 09:53:33.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.594" level="INFO">VALUE: [{'time': 0.068224944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068230306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.362000000008749e-06, 'source_diff': 5.362000000008749e-06}, {'time': 0.068234347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0409999999962976e-06, 'source_diff': 4.0409999999962976e-06}, {'time': 0.068238319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9720000000048605e-06, 'source_diff': 3.9720000000048605e-06}, {'time': 0.068241847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999887623e-06, 'source_diff': 3.5279999999887623e-06}, {'time': 0.068245014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1670000000122434e-06, 'source_diff': 3.1670000000122434e-06}, {'time': 0.068251014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999992123e-06, 'source_diff': 5.999999999992123e-06}, {'time': 0.068256222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.208000000006541e-06, 'source_diff': 5.208000000006541e-06}, {'time': 0.068258625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.068264861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999992803e-06, 'source_diff': 6.235999999992803e-06}, {'time': 0.068269569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.708000000006041e-06, 'source_diff': 4.708000000006041e-06}, {'time': 0.068274611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.068280528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916999999994177e-06, 'source_diff': 5.916999999994177e-06}, {'time': 0.068283681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1530000000057345e-06, 'source_diff': 3.1530000000057345e-06}, {'time': 0.068287556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.068293569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.012999999999158e-06, 'source_diff': 6.012999999999158e-06}, {'time': 0.068299236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.068301875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.068305125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2499999999963114e-06, 'source_diff': 3.2499999999963114e-06}, {'time': 0.068311097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.972000000006861e-06, 'source_diff': 5.972000000006861e-06}, {'time': 0.068315264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.068320069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8049999999966175e-06, 'source_diff': 4.8049999999966175e-06}, {'time': 0.068322458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3890000000054146e-06, 'source_diff': 2.3890000000054146e-06}, {'time': 0.068327542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.08400000000242e-06, 'source_diff': 5.08400000000242e-06}, {'time': 0.068332222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999993023e-06, 'source_diff': 4.679999999993023e-06}, {'time': 0.068335014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.068337431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4170000000045544e-06, 'source_diff': 2.4170000000045544e-06}, {'time': 0.068341472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0409999999962976e-06, 'source_diff': 4.0409999999962976e-06}, {'time': 0.068345694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.068351986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.29200000000496e-06, 'source_diff': 6.29200000000496e-06}, {'time': 0.068357208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.068360056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.068365903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.068368375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4719999999894826e-06, 'source_diff': 2.4719999999894826e-06}, {'time': 0.068374278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.068379583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.304999999997118e-06, 'source_diff': 5.304999999997118e-06}, {'time': 0.068385639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.05600000000428e-06, 'source_diff': 6.05600000000428e-06}, {'time': 0.068389153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999961313e-06, 'source_diff': 3.5139999999961313e-06}, {'time': 0.068394944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791000000004987e-06, 'source_diff': 5.791000000004987e-06}, {'time': 0.068397986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.041999999994771e-06, 'source_diff': 3.041999999994771e-06}, {'time': 0.068403333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.068407278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.945000000005194e-06, 'source_diff': 3.945000000005194e-06}, {'time': 0.068410722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.443999999991343e-06, 'source_diff': 3.443999999991343e-06}, {'time': 0.068415639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000007055e-06, 'source_diff': 4.917000000007055e-06}, {'time': 0.06842175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.068427458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.707999999993163e-06, 'source_diff': 5.707999999993163e-06}, {'time': 0.068432194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7360000000051805e-06, 'source_diff': 4.7360000000051805e-06}, {'time': 0.068436042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.068440097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.055000000002806e-06, 'source_diff': 4.055000000002806e-06}, {'time': 0.068444375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999996451e-06, 'source_diff': 4.277999999996451e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:33.591" endtime="20201112 09:53:33.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.586" endtime="20201112 09:53:33.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:33.609" level="INFO">${debug-compressed} = {'time': [0.068224944, 0.068230306, 0.068234347, 0.068238319, 0.068241847, 0.068245014, 0.068251014, 0.068256222, 0.068258625, 0.068264861, 0.068269569, 0.068274611, 0.068280528, 0.068283681, 0.068287...</msg>
<status status="PASS" starttime="20201112 09:53:33.595" endtime="20201112 09:53:33.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.613" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:33.612" endtime="20201112 09:53:33.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.616" level="INFO">VALUE: {'time': [0.068224944, 0.068230306, 0.068234347, 0.068238319, 0.068241847, 0.068245014, 0.068251014, 0.068256222, 0.068258625, 0.068264861, 0.068269569, 0.068274611, 0.068280528, 0.068283681, 0.068287556, 0.068293569, 0.068299236, 0.068301875, 0.068305125, 0.068311097, 0.068315264, 0.068320069, 0.068322458, 0.068327542, 0.068332222, 0.068335014, 0.068337431, 0.068341472, 0.068345694, 0.068351986, 0.068357208, 0.068360056, 0.068365903, 0.068368375, 0.068374278, 0.068379583, 0.068385639, 0.068389153, 0.068394944, 0.068397986, 0.068403333, 0.068407278, 0.068410722, 0.068415639, 0.06842175, 0.068427458, 0.068432194, 0.068436042, 0.068440097, 0.068444375], 'sourceeventsource_diff': [0, 5.362000000008749e-06, 4.0409999999962976e-06, 3.9720000000048605e-06, 3.5279999999887623e-06, 3.1670000000122434e-06, 5.999999999992123e-06, 5.208000000006541e-06, 2.4029999999980456e-06, 6.235999999992803e-06, 4.708000000006041e-06, 5.041999999996771e-06, 5.916999999994177e-06, 3.1530000000057345e-06, 3.875000000000406e-06, 6.012999999999158e-06, 5.667000000000866e-06, 2.6389999999987257e-06, 3.2499999999963114e-06, 5.972000000006861e-06, 4.166999999999366e-06, 4.8049999999966175e-06, 2.3890000000054146e-06, 5.08400000000242e-06, 4.679999999993023e-06, 2.79200000000146e-06, 2.4170000000045544e-06, 4.0409999999962976e-06, 4.221999999998172e-06, 6.29200000000496e-06, 5.221999999999172e-06, 2.8479999999997396e-06, 5.847000000003266e-06, 2.4719999999894826e-06, 5.903000000001546e-06, 5.304999999997118e-06, 6.05600000000428e-06, 3.5139999999961313e-06, 5.791000000004987e-06, 3.041999999994771e-06, 5.347000000002766e-06, 3.945000000005194e-06, 3.443999999991343e-06, 4.917000000007055e-06, 6.111000000003086e-06, 5.707999999993163e-06, 4.7360000000051805e-06, 3.84800000000074e-06, 4.055000000002806e-06, 4.277999999996451e-06], 'diff': [0, 5.362000000008749e-06, 4.0409999999962976e-06, 3.9720000000048605e-06, 3.5279999999887623e-06, 3.1670000000122434e-06, 5.999999999992123e-06, 5.208000000006541e-06, 2.4029999999980456e-06, 6.235999999992803e-06, 4.708000000006041e-06, 5.041999999996771e-06, 5.916999999994177e-06, 3.1530000000057345e-06, 3.875000000000406e-06, 6.012999999999158e-06, 5.667000000000866e-06, 2.6389999999987257e-06, 3.2499999999963114e-06, 5.972000000006861e-06, 4.166999999999366e-06, 4.8049999999966175e-06, 2.3890000000054146e-06, 5.08400000000242e-06, 4.679999999993023e-06, 2.79200000000146e-06, 2.4170000000045544e-06, 4.0409999999962976e-06, 4.221999999998172e-06, 6.29200000000496e-06, 5.221999999999172e-06, 2.8479999999997396e-06, 5.847000000003266e-06, 2.4719999999894826e-06, 5.903000000001546e-06, 5.304999999997118e-06, 6.05600000000428e-06, 3.5139999999961313e-06, 5.791000000004987e-06, 3.041999999994771e-06, 5.347000000002766e-06, 3.945000000005194e-06, 3.443999999991343e-06, 4.917000000007055e-06, 6.111000000003086e-06, 5.707999999993163e-06, 4.7360000000051805e-06, 3.84800000000074e-06, 4.055000000002806e-06, 4.277999999996451e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:33.614" endtime="20201112 09:53:33.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.610" endtime="20201112 09:53:33.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:33.621" level="INFO">${RESULT} = [{'time': 0.068230306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.362000000008749e-06, 'source_diff': 5.362000000008749e-06}, {'time': 0.068238319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:33.618" endtime="20201112 09:53:33.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:33.629" level="INFO">${GPIO_OVERHEAD} = {'time': [0.068230306, 0.068238319, 0.068245014, 0.068256222, 0.068264861, 0.068274611, 0.068283681, 0.068293569, 0.068301875, 0.068311097, 0.068320069, 0.068327542, 0.068335014, 0.068341472, 0.068351...</msg>
<status status="PASS" starttime="20201112 09:53:33.622" endtime="20201112 09:53:33.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.633" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:33.632" endtime="20201112 09:53:33.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.635" level="INFO">VALUE: [5.362000000008749e-06, 3.9720000000048605e-06, 3.1670000000122434e-06, 5.208000000006541e-06, 6.235999999992803e-06, 5.041999999996771e-06, 3.1530000000057345e-06, 6.012999999999158e-06, 2.6389999999987257e-06, 5.972000000006861e-06, 4.8049999999966175e-06, 5.08400000000242e-06, 2.79200000000146e-06, 4.0409999999962976e-06, 6.29200000000496e-06, 2.8479999999997396e-06, 2.4719999999894826e-06, 5.304999999997118e-06, 3.5139999999961313e-06, 3.041999999994771e-06, 3.945000000005194e-06, 4.917000000007055e-06, 5.707999999993163e-06, 3.84800000000074e-06, 4.277999999996451e-06]</msg>
<status status="PASS" starttime="20201112 09:53:33.634" endtime="20201112 09:53:33.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.630" endtime="20201112 09:53:33.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.638" endtime="20201112 09:53:33.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:33.642" endtime="20201112 09:53:33.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.640" endtime="20201112 09:53:33.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.637" endtime="20201112 09:53:33.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.270" endtime="20201112 09:53:33.663"></status>
</kw>
<msg timestamp="20201112 09:53:33.663" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.671" endtime="20201112 09:53:33.685"></status>
</kw>
<msg timestamp="20201112 09:53:33.685" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.670" endtime="20201112 09:53:33.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.688" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.686" endtime="20201112 09:53:33.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.689" endtime="20201112 09:53:33.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.667" endtime="20201112 09:53:33.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.665" endtime="20201112 09:53:33.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.698" endtime="20201112 09:53:33.967"></status>
</kw>
<msg timestamp="20201112 09:53:33.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017947625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017952847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:33.696" endtime="20201112 09:53:33.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017947625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017952847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:33.970" endtime="20201112 09:53:33.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.975" endtime="20201112 09:53:33.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.694" endtime="20201112 09:53:33.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.692" endtime="20201112 09:53:33.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.982" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:33.981" endtime="20201112 09:53:33.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.985" level="INFO">VALUE: [{'time': 0.017947625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017952847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.017958667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.017961111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4439999999972817e-06, 'source_diff': 2.4439999999972817e-06}, {'time': 0.017966569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.458000000003321e-06, 'source_diff': 5.458000000003321e-06}, {'time': 0.017969778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2089999999970753e-06, 'source_diff': 3.2089999999970753e-06}, {'time': 0.017972153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.375000000002375e-06, 'source_diff': 2.375000000002375e-06}, {'time': 0.017976181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.017978847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.017982528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.681000000001905e-06, 'source_diff': 3.681000000001905e-06}, {'time': 0.017988681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.017991722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0410000000022364e-06, 'source_diff': 3.0410000000022364e-06}, {'time': 0.017996306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5839999999984504e-06, 'source_diff': 4.5839999999984504e-06}, {'time': 0.018001597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}, {'time': 0.018007444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018012931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.486999999998465e-06, 'source_diff': 5.486999999998465e-06}, {'time': 0.018016028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.01802125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.018024986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018028194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.018032806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.61199999999759e-06, 'source_diff': 4.61199999999759e-06}, {'time': 0.018038236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.018040875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.639000000002195e-06, 'source_diff': 2.639000000002195e-06}, {'time': 0.018046597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018049097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018055431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.334000000000201e-06, 'source_diff': 6.334000000000201e-06}, {'time': 0.018060653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.018063125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018065861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018072083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018074681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5979999999994896e-06, 'source_diff': 2.5979999999994896e-06}, {'time': 0.018078222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5410000000027364e-06, 'source_diff': 3.5410000000027364e-06}, {'time': 0.018083875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.018088431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.018090806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.375000000002375e-06, 'source_diff': 2.375000000002375e-06}, {'time': 0.01809625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.018099111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018104194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.0181105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.018116458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9579999999968825e-06, 'source_diff': 5.9579999999968825e-06}, {'time': 0.018121389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.931000000003155e-06, 'source_diff': 4.931000000003155e-06}, {'time': 0.018125306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018127958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.018133, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018137847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018143125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.018145861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018151903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.018154681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.018160653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:33.983" endtime="20201112 09:53:33.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.979" endtime="20201112 09:53:33.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:34.000" level="INFO">${debug-compressed} = {'time': [0.017947625, 0.017952847, 0.017958667, 0.017961111, 0.017966569, 0.017969778, 0.017972153, 0.017976181, 0.017978847, 0.017982528, 0.017988681, 0.017991722, 0.017996306, 0.018001597, 0.018007...</msg>
<status status="PASS" starttime="20201112 09:53:33.988" endtime="20201112 09:53:34.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.004" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:34.003" endtime="20201112 09:53:34.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.008" level="INFO">VALUE: {'time': [0.017947625, 0.017952847, 0.017958667, 0.017961111, 0.017966569, 0.017969778, 0.017972153, 0.017976181, 0.017978847, 0.017982528, 0.017988681, 0.017991722, 0.017996306, 0.018001597, 0.018007444, 0.018012931, 0.018016028, 0.01802125, 0.018024986, 0.018028194, 0.018032806, 0.018038236, 0.018040875, 0.018046597, 0.018049097, 0.018055431, 0.018060653, 0.018063125, 0.018065861, 0.018072083, 0.018074681, 0.018078222, 0.018083875, 0.018088431, 0.018090806, 0.01809625, 0.018099111, 0.018104194, 0.0181105, 0.018116458, 0.018121389, 0.018125306, 0.018127958, 0.018133, 0.018137847, 0.018143125, 0.018145861, 0.018151903, 0.018154681, 0.018160653], 'sourceeventsource_diff': [0, 5.222000000002641e-06, 5.820000000000131e-06, 2.4439999999972817e-06, 5.458000000003321e-06, 3.2089999999970753e-06, 2.375000000002375e-06, 4.027999999999671e-06, 2.665999999998392e-06, 3.681000000001905e-06, 6.1529999999983265e-06, 3.0410000000022364e-06, 4.5839999999984504e-06, 5.291000000001017e-06, 5.846999999999797e-06, 5.486999999998465e-06, 3.097000000000516e-06, 5.221999999999172e-06, 3.736000000000711e-06, 3.208000000001071e-06, 4.61199999999759e-06, 5.430000000000712e-06, 2.639000000002195e-06, 5.721999999999672e-06, 2.4999999999990308e-06, 6.334000000000201e-06, 5.221999999999172e-06, 2.471999999999891e-06, 2.735999999999711e-06, 6.222000000000172e-06, 2.5979999999994896e-06, 3.5410000000027364e-06, 5.6529999999978264e-06, 4.555999999999311e-06, 2.375000000002375e-06, 5.444000000000282e-06, 2.860999999999836e-06, 5.082999999999477e-06, 6.306000000001061e-06, 5.9579999999968825e-06, 4.931000000003155e-06, 3.916999999999116e-06, 2.651999999998822e-06, 5.042000000000241e-06, 4.846999999998797e-06, 5.278000000000921e-06, 2.735999999999711e-06, 6.042000000001241e-06, 2.7779999999984206e-06, 5.971999999999922e-06], 'diff': [0, 5.222000000002641e-06, 5.820000000000131e-06, 2.4439999999972817e-06, 5.458000000003321e-06, 3.2089999999970753e-06, 2.375000000002375e-06, 4.027999999999671e-06, 2.665999999998392e-06, 3.681000000001905e-06, 6.1529999999983265e-06, 3.0410000000022364e-06, 4.5839999999984504e-06, 5.291000000001017e-06, 5.846999999999797e-06, 5.486999999998465e-06, 3.097000000000516e-06, 5.221999999999172e-06, 3.736000000000711e-06, 3.208000000001071e-06, 4.61199999999759e-06, 5.430000000000712e-06, 2.639000000002195e-06, 5.721999999999672e-06, 2.4999999999990308e-06, 6.334000000000201e-06, 5.221999999999172e-06, 2.471999999999891e-06, 2.735999999999711e-06, 6.222000000000172e-06, 2.5979999999994896e-06, 3.5410000000027364e-06, 5.6529999999978264e-06, 4.555999999999311e-06, 2.375000000002375e-06, 5.444000000000282e-06, 2.860999999999836e-06, 5.082999999999477e-06, 6.306000000001061e-06, 5.9579999999968825e-06, 4.931000000003155e-06, 3.916999999999116e-06, 2.651999999998822e-06, 5.042000000000241e-06, 4.846999999998797e-06, 5.278000000000921e-06, 2.735999999999711e-06, 6.042000000001241e-06, 2.7779999999984206e-06, 5.971999999999922e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:34.005" endtime="20201112 09:53:34.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.001" endtime="20201112 09:53:34.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:34.012" level="INFO">${RESULT} = [{'time': 0.017952847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.017961111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:34.009" endtime="20201112 09:53:34.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:34.021" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017952847, 0.017961111, 0.017969778, 0.017976181, 0.017982528, 0.017991722, 0.018001597, 0.018012931, 0.01802125, 0.018028194, 0.018038236, 0.018046597, 0.018055431, 0.018063125, 0.0180720...</msg>
<status status="PASS" starttime="20201112 09:53:34.013" endtime="20201112 09:53:34.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.025" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:34.024" endtime="20201112 09:53:34.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.028" level="INFO">VALUE: [5.222000000002641e-06, 2.4439999999972817e-06, 3.2089999999970753e-06, 4.027999999999671e-06, 3.681000000001905e-06, 3.0410000000022364e-06, 5.291000000001017e-06, 5.486999999998465e-06, 5.221999999999172e-06, 3.208000000001071e-06, 5.430000000000712e-06, 5.721999999999672e-06, 6.334000000000201e-06, 2.471999999999891e-06, 6.222000000000172e-06, 3.5410000000027364e-06, 4.555999999999311e-06, 5.444000000000282e-06, 5.082999999999477e-06, 5.9579999999968825e-06, 3.916999999999116e-06, 5.042000000000241e-06, 5.278000000000921e-06, 6.042000000001241e-06, 5.971999999999922e-06]</msg>
<status status="PASS" starttime="20201112 09:53:34.026" endtime="20201112 09:53:34.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.022" endtime="20201112 09:53:34.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.031" endtime="20201112 09:53:34.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:34.035" endtime="20201112 09:53:34.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.033" endtime="20201112 09:53:34.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.030" endtime="20201112 09:53:34.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.663" endtime="20201112 09:53:34.055"></status>
</kw>
<msg timestamp="20201112 09:53:34.055" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.063" endtime="20201112 09:53:34.076"></status>
</kw>
<msg timestamp="20201112 09:53:34.077" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.061" endtime="20201112 09:53:34.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.079" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.078" endtime="20201112 09:53:34.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.080" endtime="20201112 09:53:34.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.059" endtime="20201112 09:53:34.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.057" endtime="20201112 09:53:34.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.090" endtime="20201112 09:53:34.354"></status>
</kw>
<msg timestamp="20201112 09:53:34.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017308875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017313931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:34.089" endtime="20201112 09:53:34.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017308875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017313931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:34.357" endtime="20201112 09:53:34.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.363" endtime="20201112 09:53:34.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.085" endtime="20201112 09:53:34.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.083" endtime="20201112 09:53:34.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.369" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:34.368" endtime="20201112 09:53:34.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.373" level="INFO">VALUE: [{'time': 0.017308875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017313931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.017317958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027000000000197e-06, 'source_diff': 4.027000000000197e-06}, {'time': 0.017322236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.017326986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.017332444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.017335917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.017341333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.017343694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.017349917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.017353, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.083000000000946e-06, 'source_diff': 3.083000000000946e-06}, {'time': 0.017357042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.017362833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791000000001517e-06, 'source_diff': 5.791000000001517e-06}, {'time': 0.017367028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.017370222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.194000000001501e-06, 'source_diff': 3.194000000001501e-06}, {'time': 0.017375639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416999999997146e-06, 'source_diff': 5.416999999997146e-06}, {'time': 0.017378806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.017383833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.027000000001197e-06, 'source_diff': 5.027000000001197e-06}, {'time': 0.017386625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.017391722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017396944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.017401861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017406208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017411431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.223000000002115e-06, 'source_diff': 5.223000000002115e-06}, {'time': 0.017417097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.017423139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.017427611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.017433653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.017437389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017442111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017445833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017451736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.017456361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.017458889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.017461292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.017464764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017469431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017475653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017481, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017485111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017489764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017494569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.017498722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.017504569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017508875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.017512042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.0175155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.017518153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.017524319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.017528361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:34.370" endtime="20201112 09:53:34.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.366" endtime="20201112 09:53:34.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:34.388" level="INFO">${debug-compressed} = {'time': [0.017308875, 0.017313931, 0.017317958, 0.017322236, 0.017326986, 0.017332444, 0.017335917, 0.017341333, 0.017343694, 0.017349917, 0.017353, 0.017357042, 0.017362833, 0.017367028, 0.017370222...</msg>
<status status="PASS" starttime="20201112 09:53:34.375" endtime="20201112 09:53:34.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.392" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:34.391" endtime="20201112 09:53:34.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.395" level="INFO">VALUE: {'time': [0.017308875, 0.017313931, 0.017317958, 0.017322236, 0.017326986, 0.017332444, 0.017335917, 0.017341333, 0.017343694, 0.017349917, 0.017353, 0.017357042, 0.017362833, 0.017367028, 0.017370222, 0.017375639, 0.017378806, 0.017383833, 0.017386625, 0.017391722, 0.017396944, 0.017401861, 0.017406208, 0.017411431, 0.017417097, 0.017423139, 0.017427611, 0.017433653, 0.017437389, 0.017442111, 0.017445833, 0.017451736, 0.017456361, 0.017458889, 0.017461292, 0.017464764, 0.017469431, 0.017475653, 0.017481, 0.017485111, 0.017489764, 0.017494569, 0.017498722, 0.017504569, 0.017508875, 0.017512042, 0.0175155, 0.017518153, 0.017524319, 0.017528361], 'sourceeventsource_diff': [0, 5.055999999999811e-06, 4.027000000000197e-06, 4.277999999999921e-06, 4.7499999999978115e-06, 5.457999999999852e-06, 3.4730000000003647e-06, 5.416000000001142e-06, 2.360999999999336e-06, 6.2229999999996455e-06, 3.083000000000946e-06, 4.041999999999241e-06, 5.791000000001517e-06, 4.1949999999985055e-06, 3.194000000001501e-06, 5.416999999997146e-06, 3.167000000001835e-06, 5.027000000001197e-06, 2.7919999999979905e-06, 5.096999999999047e-06, 5.222000000002641e-06, 4.917000000000116e-06, 4.346999999998297e-06, 5.223000000002115e-06, 5.665999999997923e-06, 6.042000000001241e-06, 4.471999999998422e-06, 6.042000000001241e-06, 3.736000000000711e-06, 4.721999999998672e-06, 3.722000000001141e-06, 5.9029999999980765e-06, 4.625000000001156e-06, 2.5279999999981706e-06, 2.403000000001515e-06, 3.472000000000891e-06, 4.666999999999866e-06, 6.222000000000172e-06, 5.346999999999297e-06, 4.111000000001086e-06, 4.653000000000296e-06, 4.805000000000087e-06, 4.152999999999796e-06, 5.846999999999797e-06, 4.305999999999061e-06, 3.1669999999983656e-06, 3.458000000001321e-06, 2.653000000001765e-06, 6.165999999998423e-06, 4.041999999999241e-06], 'diff': [0, 5.055999999999811e-06, 4.027000000000197e-06, 4.277999999999921e-06, 4.7499999999978115e-06, 5.457999999999852e-06, 3.4730000000003647e-06, 5.416000000001142e-06, 2.360999999999336e-06, 6.2229999999996455e-06, 3.083000000000946e-06, 4.041999999999241e-06, 5.791000000001517e-06, 4.1949999999985055e-06, 3.194000000001501e-06, 5.416999999997146e-06, 3.167000000001835e-06, 5.027000000001197e-06, 2.7919999999979905e-06, 5.096999999999047e-06, 5.222000000002641e-06, 4.917000000000116e-06, 4.346999999998297e-06, 5.223000000002115e-06, 5.665999999997923e-06, 6.042000000001241e-06, 4.471999999998422e-06, 6.042000000001241e-06, 3.736000000000711e-06, 4.721999999998672e-06, 3.722000000001141e-06, 5.9029999999980765e-06, 4.625000000001156e-06, 2.5279999999981706e-06, 2.403000000001515e-06, 3.472000000000891e-06, 4.666999999999866e-06, 6.222000000000172e-06, 5.346999999999297e-06, 4.111000000001086e-06, 4.653000000000296e-06, 4.805000000000087e-06, 4.152999999999796e-06, 5.846999999999797e-06, 4.305999999999061e-06, 3.1669999999983656e-06, 3.458000000001321e-06, 2.653000000001765e-06, 6.165999999998423e-06, 4.041999999999241e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:34.393" endtime="20201112 09:53:34.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.389" endtime="20201112 09:53:34.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:34.399" level="INFO">${RESULT} = [{'time': 0.017313931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.017322236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:34.396" endtime="20201112 09:53:34.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:34.407" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017313931, 0.017322236, 0.017332444, 0.017341333, 0.017349917, 0.017357042, 0.017367028, 0.017375639, 0.017383833, 0.017391722, 0.017401861, 0.017411431, 0.017423139, 0.017433653, 0.017442...</msg>
<status status="PASS" starttime="20201112 09:53:34.400" endtime="20201112 09:53:34.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.411" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:34.410" endtime="20201112 09:53:34.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.414" level="INFO">VALUE: [5.055999999999811e-06, 4.277999999999921e-06, 5.457999999999852e-06, 5.416000000001142e-06, 6.2229999999996455e-06, 4.041999999999241e-06, 4.1949999999985055e-06, 5.416999999997146e-06, 5.027000000001197e-06, 5.096999999999047e-06, 4.917000000000116e-06, 5.223000000002115e-06, 6.042000000001241e-06, 6.042000000001241e-06, 4.721999999998672e-06, 5.9029999999980765e-06, 2.5279999999981706e-06, 3.472000000000891e-06, 6.222000000000172e-06, 4.111000000001086e-06, 4.805000000000087e-06, 5.846999999999797e-06, 3.1669999999983656e-06, 2.653000000001765e-06, 4.041999999999241e-06]</msg>
<status status="PASS" starttime="20201112 09:53:34.412" endtime="20201112 09:53:34.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.408" endtime="20201112 09:53:34.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.417" endtime="20201112 09:53:34.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:34.420" endtime="20201112 09:53:34.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.419" endtime="20201112 09:53:34.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.415" endtime="20201112 09:53:34.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.056" endtime="20201112 09:53:34.441"></status>
</kw>
<msg timestamp="20201112 09:53:34.441" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.449" endtime="20201112 09:53:34.464"></status>
</kw>
<msg timestamp="20201112 09:53:34.464" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.447" endtime="20201112 09:53:34.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.467" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.465" endtime="20201112 09:53:34.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.468" endtime="20201112 09:53:34.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.445" endtime="20201112 09:53:34.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.443" endtime="20201112 09:53:34.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.477" endtime="20201112 09:53:34.741"></status>
</kw>
<msg timestamp="20201112 09:53:34.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018234764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018239111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:34.475" endtime="20201112 09:53:34.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018234764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018239111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:34.744" endtime="20201112 09:53:34.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.749" endtime="20201112 09:53:34.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.473" endtime="20201112 09:53:34.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.471" endtime="20201112 09:53:34.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.755" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:34.754" endtime="20201112 09:53:34.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.759" level="INFO">VALUE: [{'time': 0.018234764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018239111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.018242347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.0182485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.018251986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018257528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.018263556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018267792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018274028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018277236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2079999999976017e-06, 'source_diff': 3.2079999999976017e-06}, {'time': 0.018281639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018284431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.01829075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.018295486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.018298292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.018303333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.018306278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9449999999972554e-06, 'source_diff': 2.9449999999972554e-06}, {'time': 0.018311611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.018317819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.018322667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.018325764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.018331681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916999999997646e-06, 'source_diff': 5.916999999997646e-06}, {'time': 0.018336667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.018342569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.901999999998603e-06, 'source_diff': 5.901999999998603e-06}, {'time': 0.018347972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.018352083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018354819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018357292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.018361264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.018364931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.667000000002335e-06, 'source_diff': 3.667000000002335e-06}, {'time': 0.018368458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.526999999999697e-06, 'source_diff': 3.526999999999697e-06}, {'time': 0.018374569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.018379486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018381889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.018384931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.018388028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.018393694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.018399611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.018403889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.01840675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018411847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.0184165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018422042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018425014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018429139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.018434736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018437639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.018443111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.472000000002891e-06, 'source_diff': 5.472000000002891e-06}, {'time': 0.018447708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.01845025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:34.756" endtime="20201112 09:53:34.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.752" endtime="20201112 09:53:34.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:34.774" level="INFO">${debug-compressed} = {'time': [0.018234764, 0.018239111, 0.018242347, 0.0182485, 0.018251986, 0.018257528, 0.018263556, 0.018267792, 0.018274028, 0.018277236, 0.018281639, 0.018284431, 0.01829075, 0.018295486, 0.018298292...</msg>
<status status="PASS" starttime="20201112 09:53:34.761" endtime="20201112 09:53:34.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.778" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:34.777" endtime="20201112 09:53:34.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.781" level="INFO">VALUE: {'time': [0.018234764, 0.018239111, 0.018242347, 0.0182485, 0.018251986, 0.018257528, 0.018263556, 0.018267792, 0.018274028, 0.018277236, 0.018281639, 0.018284431, 0.01829075, 0.018295486, 0.018298292, 0.018303333, 0.018306278, 0.018311611, 0.018317819, 0.018322667, 0.018325764, 0.018331681, 0.018336667, 0.018342569, 0.018347972, 0.018352083, 0.018354819, 0.018357292, 0.018361264, 0.018364931, 0.018368458, 0.018374569, 0.018379486, 0.018381889, 0.018384931, 0.018388028, 0.018393694, 0.018399611, 0.018403889, 0.01840675, 0.018411847, 0.0184165, 0.018422042, 0.018425014, 0.018429139, 0.018434736, 0.018437639, 0.018443111, 0.018447708, 0.01845025], 'sourceeventsource_diff': [0, 4.346999999998297e-06, 3.236000000000211e-06, 6.153000000001796e-06, 3.486000000000461e-06, 5.541999999997271e-06, 6.028000000001671e-06, 4.236000000001211e-06, 6.235999999999742e-06, 3.2079999999976017e-06, 4.403000000000046e-06, 2.79200000000146e-06, 6.319000000001157e-06, 4.735999999998242e-06, 2.80600000000103e-06, 5.041000000000767e-06, 2.9449999999972554e-06, 5.332999999999727e-06, 6.208000000000602e-06, 4.84800000000174e-06, 3.097000000000516e-06, 5.916999999997646e-06, 4.986000000001961e-06, 5.901999999998603e-06, 5.403000000001046e-06, 4.111000000001086e-06, 2.735999999999711e-06, 2.4729999999993646e-06, 3.971999999997922e-06, 3.667000000002335e-06, 3.526999999999697e-06, 6.110999999999617e-06, 4.917000000000116e-06, 2.4029999999980456e-06, 3.04200000000171e-06, 3.097000000000516e-06, 5.665999999997923e-06, 5.917000000001116e-06, 4.277999999999921e-06, 2.860999999999836e-06, 5.096999999999047e-06, 4.653000000000296e-06, 5.542000000000741e-06, 2.972000000000391e-06, 4.125000000000656e-06, 5.596999999999547e-06, 2.9029999999985456e-06, 5.472000000002891e-06, 4.596999999998547e-06, 2.54200000000121e-06], 'diff': [0, 4.346999999998297e-06, 3.236000000000211e-06, 6.153000000001796e-06, 3.486000000000461e-06, 5.541999999997271e-06, 6.028000000001671e-06, 4.236000000001211e-06, 6.235999999999742e-06, 3.2079999999976017e-06, 4.403000000000046e-06, 2.79200000000146e-06, 6.319000000001157e-06, 4.735999999998242e-06, 2.80600000000103e-06, 5.041000000000767e-06, 2.9449999999972554e-06, 5.332999999999727e-06, 6.208000000000602e-06, 4.84800000000174e-06, 3.097000000000516e-06, 5.916999999997646e-06, 4.986000000001961e-06, 5.901999999998603e-06, 5.403000000001046e-06, 4.111000000001086e-06, 2.735999999999711e-06, 2.4729999999993646e-06, 3.971999999997922e-06, 3.667000000002335e-06, 3.526999999999697e-06, 6.110999999999617e-06, 4.917000000000116e-06, 2.4029999999980456e-06, 3.04200000000171e-06, 3.097000000000516e-06, 5.665999999997923e-06, 5.917000000001116e-06, 4.277999999999921e-06, 2.860999999999836e-06, 5.096999999999047e-06, 4.653000000000296e-06, 5.542000000000741e-06, 2.972000000000391e-06, 4.125000000000656e-06, 5.596999999999547e-06, 2.9029999999985456e-06, 5.472000000002891e-06, 4.596999999998547e-06, 2.54200000000121e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:34.779" endtime="20201112 09:53:34.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.775" endtime="20201112 09:53:34.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:34.785" level="INFO">${RESULT} = [{'time': 0.018239111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.0182485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:34.783" endtime="20201112 09:53:34.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:34.793" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018239111, 0.0182485, 0.018257528, 0.018267792, 0.018277236, 0.018284431, 0.018295486, 0.018303333, 0.018311611, 0.018322667, 0.018331681, 0.018342569, 0.018352083, 0.018357292, 0.01836493...</msg>
<status status="PASS" starttime="20201112 09:53:34.786" endtime="20201112 09:53:34.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.797" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:34.796" endtime="20201112 09:53:34.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.800" level="INFO">VALUE: [4.346999999998297e-06, 6.153000000001796e-06, 5.541999999997271e-06, 4.236000000001211e-06, 3.2079999999976017e-06, 2.79200000000146e-06, 4.735999999998242e-06, 5.041000000000767e-06, 5.332999999999727e-06, 4.84800000000174e-06, 5.916999999997646e-06, 5.901999999998603e-06, 4.111000000001086e-06, 2.4729999999993646e-06, 3.667000000002335e-06, 6.110999999999617e-06, 2.4029999999980456e-06, 3.097000000000516e-06, 5.917000000001116e-06, 2.860999999999836e-06, 4.653000000000296e-06, 2.972000000000391e-06, 5.596999999999547e-06, 5.472000000002891e-06, 2.54200000000121e-06]</msg>
<status status="PASS" starttime="20201112 09:53:34.798" endtime="20201112 09:53:34.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.794" endtime="20201112 09:53:34.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.803" endtime="20201112 09:53:34.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:34.807" endtime="20201112 09:53:34.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.805" endtime="20201112 09:53:34.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.801" endtime="20201112 09:53:34.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.442" endtime="20201112 09:53:34.827"></status>
</kw>
<msg timestamp="20201112 09:53:34.827" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.836" endtime="20201112 09:53:34.849"></status>
</kw>
<msg timestamp="20201112 09:53:34.850" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.834" endtime="20201112 09:53:34.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.852" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.851" endtime="20201112 09:53:34.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.853" endtime="20201112 09:53:34.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.831" endtime="20201112 09:53:34.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.829" endtime="20201112 09:53:34.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.862" endtime="20201112 09:53:35.126"></status>
</kw>
<msg timestamp="20201112 09:53:35.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018246958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018250319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:34.861" endtime="20201112 09:53:35.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018246958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018250319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:35.129" endtime="20201112 09:53:35.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.134" endtime="20201112 09:53:35.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.858" endtime="20201112 09:53:35.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.856" endtime="20201112 09:53:35.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.141" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:35.140" endtime="20201112 09:53:35.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.144" level="INFO">VALUE: [{'time': 0.018246958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018250319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018254333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.018259333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.018263417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.018269375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018274236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.018277264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.018279681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.018285153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018287889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.018293292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402999999997576e-06, 'source_diff': 5.402999999997576e-06}, {'time': 0.018298333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.018303694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018307472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.018311194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.018314764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.018319472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.018323931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.459000000001795e-06, 'source_diff': 4.459000000001795e-06}, {'time': 0.018329625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6939999999970625e-06, 'source_diff': 5.6939999999970625e-06}, {'time': 0.018332639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.01400000000257e-06, 'source_diff': 3.01400000000257e-06}, {'time': 0.018337736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018340958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018344694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018348111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018350764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.018356236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472000000002891e-06, 'source_diff': 5.472000000002891e-06}, {'time': 0.018360528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018364708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.018370181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.018373389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.018379111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018383528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018386875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018391667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018397389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018403625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018407153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018411944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.018414611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.018417583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018420681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0979999999999897e-06, 'source_diff': 3.0979999999999897e-06}, {'time': 0.018424736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.018430444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018434111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.018439903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.018444806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018447486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.018451972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.018456569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:35.142" endtime="20201112 09:53:35.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.137" endtime="20201112 09:53:35.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:35.159" level="INFO">${debug-compressed} = {'time': [0.018246958, 0.018250319, 0.018254333, 0.018259333, 0.018263417, 0.018269375, 0.018274236, 0.018277264, 0.018279681, 0.018285153, 0.018287889, 0.018293292, 0.018298333, 0.018303694, 0.018307...</msg>
<status status="PASS" starttime="20201112 09:53:35.147" endtime="20201112 09:53:35.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.163" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:35.162" endtime="20201112 09:53:35.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.166" level="INFO">VALUE: {'time': [0.018246958, 0.018250319, 0.018254333, 0.018259333, 0.018263417, 0.018269375, 0.018274236, 0.018277264, 0.018279681, 0.018285153, 0.018287889, 0.018293292, 0.018298333, 0.018303694, 0.018307472, 0.018311194, 0.018314764, 0.018319472, 0.018323931, 0.018329625, 0.018332639, 0.018337736, 0.018340958, 0.018344694, 0.018348111, 0.018350764, 0.018356236, 0.018360528, 0.018364708, 0.018370181, 0.018373389, 0.018379111, 0.018383528, 0.018386875, 0.018391667, 0.018397389, 0.018403625, 0.018407153, 0.018411944, 0.018414611, 0.018417583, 0.018420681, 0.018424736, 0.018430444, 0.018434111, 0.018439903, 0.018444806, 0.018447486, 0.018451972, 0.018456569], 'sourceeventsource_diff': [0, 3.361000000000336e-06, 4.014000000000101e-06, 4.9999999999980616e-06, 4.08400000000142e-06, 5.958000000000352e-06, 4.860999999998367e-06, 3.02800000000214e-06, 2.4169999999976155e-06, 5.471999999999422e-06, 2.7360000000031803e-06, 5.402999999997576e-06, 5.041000000000767e-06, 5.360999999998867e-06, 3.77800000000289e-06, 3.7219999999976716e-06, 3.57000000000135e-06, 4.707999999999102e-06, 4.459000000001795e-06, 5.6939999999970625e-06, 3.01400000000257e-06, 5.096999999999047e-06, 3.222000000000641e-06, 3.736000000000711e-06, 3.4169999999986156e-06, 2.6529999999982956e-06, 5.472000000002891e-06, 4.291999999999491e-06, 4.179999999999462e-06, 5.472999999998895e-06, 3.208000000001071e-06, 5.721999999999672e-06, 4.416999999999616e-06, 3.347000000000766e-06, 4.791999999999991e-06, 5.721999999999672e-06, 6.235999999999742e-06, 3.5279999999991707e-06, 4.791000000000517e-06, 2.667000000001335e-06, 2.972000000000391e-06, 3.0979999999999897e-06, 4.054999999999337e-06, 5.708000000000102e-06, 3.6669999999988656e-06, 5.792000000000991e-06, 4.903000000000546e-06, 2.679999999997962e-06, 4.486000000001461e-06, 4.596999999998547e-06], 'diff': [0, 3.361000000000336e-06, 4.014000000000101e-06, 4.9999999999980616e-06, 4.08400000000142e-06, 5.958000000000352e-06, 4.860999999998367e-06, 3.02800000000214e-06, 2.4169999999976155e-06, 5.471999999999422e-06, 2.7360000000031803e-06, 5.402999999997576e-06, 5.041000000000767e-06, 5.360999999998867e-06, 3.77800000000289e-06, 3.7219999999976716e-06, 3.57000000000135e-06, 4.707999999999102e-06, 4.459000000001795e-06, 5.6939999999970625e-06, 3.01400000000257e-06, 5.096999999999047e-06, 3.222000000000641e-06, 3.736000000000711e-06, 3.4169999999986156e-06, 2.6529999999982956e-06, 5.472000000002891e-06, 4.291999999999491e-06, 4.179999999999462e-06, 5.472999999998895e-06, 3.208000000001071e-06, 5.721999999999672e-06, 4.416999999999616e-06, 3.347000000000766e-06, 4.791999999999991e-06, 5.721999999999672e-06, 6.235999999999742e-06, 3.5279999999991707e-06, 4.791000000000517e-06, 2.667000000001335e-06, 2.972000000000391e-06, 3.0979999999999897e-06, 4.054999999999337e-06, 5.708000000000102e-06, 3.6669999999988656e-06, 5.792000000000991e-06, 4.903000000000546e-06, 2.679999999997962e-06, 4.486000000001461e-06, 4.596999999998547e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:35.164" endtime="20201112 09:53:35.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.160" endtime="20201112 09:53:35.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:35.171" level="INFO">${RESULT} = [{'time': 0.018250319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018259333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:35.168" endtime="20201112 09:53:35.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:35.180" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018250319, 0.018259333, 0.018269375, 0.018277264, 0.018285153, 0.018293292, 0.018303694, 0.018311194, 0.018319472, 0.018329625, 0.018337736, 0.018344694, 0.018350764, 0.018360528, 0.018370...</msg>
<status status="PASS" starttime="20201112 09:53:35.172" endtime="20201112 09:53:35.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.184" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:35.183" endtime="20201112 09:53:35.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.187" level="INFO">VALUE: [3.361000000000336e-06, 4.9999999999980616e-06, 5.958000000000352e-06, 3.02800000000214e-06, 5.471999999999422e-06, 5.402999999997576e-06, 5.360999999998867e-06, 3.7219999999976716e-06, 4.707999999999102e-06, 5.6939999999970625e-06, 5.096999999999047e-06, 3.736000000000711e-06, 2.6529999999982956e-06, 4.291999999999491e-06, 5.472999999998895e-06, 5.721999999999672e-06, 3.347000000000766e-06, 5.721999999999672e-06, 3.5279999999991707e-06, 2.667000000001335e-06, 3.0979999999999897e-06, 5.708000000000102e-06, 5.792000000000991e-06, 2.679999999997962e-06, 4.596999999998547e-06]</msg>
<status status="PASS" starttime="20201112 09:53:35.185" endtime="20201112 09:53:35.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.181" endtime="20201112 09:53:35.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.190" endtime="20201112 09:53:35.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:35.194" endtime="20201112 09:53:35.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.193" endtime="20201112 09:53:35.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.189" endtime="20201112 09:53:35.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.828" endtime="20201112 09:53:35.215"></status>
</kw>
<msg timestamp="20201112 09:53:35.215" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.224" endtime="20201112 09:53:35.237"></status>
</kw>
<msg timestamp="20201112 09:53:35.237" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.222" endtime="20201112 09:53:35.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.240" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.238" endtime="20201112 09:53:35.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.241" endtime="20201112 09:53:35.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.220" endtime="20201112 09:53:35.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.217" endtime="20201112 09:53:35.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.250" endtime="20201112 09:53:35.515"></status>
</kw>
<msg timestamp="20201112 09:53:35.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018396208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018399042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:35.248" endtime="20201112 09:53:35.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018396208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018399042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:35.518" endtime="20201112 09:53:35.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.523" endtime="20201112 09:53:35.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.246" endtime="20201112 09:53:35.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.244" endtime="20201112 09:53:35.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.530" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:35.529" endtime="20201112 09:53:35.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.533" level="INFO">VALUE: [{'time': 0.018396208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018399042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8340000000001697e-06, 'source_diff': 2.8340000000001697e-06}, {'time': 0.018402542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.018407181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018409972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.790999999998517e-06, 'source_diff': 2.790999999998517e-06}, {'time': 0.018414764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018417736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018420278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.018423208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.018427486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018432389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018434986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.018439153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.01844425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018449347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018454014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.018463403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.01846925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018472722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.018476208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018481944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.018487903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.018493875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018500111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018504153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018507014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018511236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018516569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.018519042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.018524347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.018528431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.018533736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.304999999997118e-06, 'source_diff': 5.304999999997118e-06}, {'time': 0.018539847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.018543167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3199999999976304e-06, 'source_diff': 3.3199999999976304e-06}, {'time': 0.018546458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.290999999999017e-06, 'source_diff': 3.290999999999017e-06}, {'time': 0.018550306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.018556292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018560819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.018564319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.018570153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.018572639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.018576222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.018580514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018583056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.018585847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.790999999998517e-06, 'source_diff': 2.790999999998517e-06}, {'time': 0.018590319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.018595042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722999999998145e-06, 'source_diff': 4.722999999998145e-06}, {'time': 0.018597764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018601069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3050000000020563e-06, 'source_diff': 3.3050000000020563e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:35.531" endtime="20201112 09:53:35.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.526" endtime="20201112 09:53:35.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:35.548" level="INFO">${debug-compressed} = {'time': [0.018396208, 0.018399042, 0.018402542, 0.018407181, 0.018409972, 0.018414764, 0.018417736, 0.018420278, 0.018423208, 0.018427486, 0.018432389, 0.018434986, 0.018439153, 0.01844425, 0.0184493...</msg>
<status status="PASS" starttime="20201112 09:53:35.536" endtime="20201112 09:53:35.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.552" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:35.551" endtime="20201112 09:53:35.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.555" level="INFO">VALUE: {'time': [0.018396208, 0.018399042, 0.018402542, 0.018407181, 0.018409972, 0.018414764, 0.018417736, 0.018420278, 0.018423208, 0.018427486, 0.018432389, 0.018434986, 0.018439153, 0.01844425, 0.018449347, 0.018454014, 0.018458, 0.018463403, 0.01846925, 0.018472722, 0.018476208, 0.018481944, 0.018487903, 0.018493875, 0.018500111, 0.018504153, 0.018507014, 0.018511236, 0.018516569, 0.018519042, 0.018524347, 0.018528431, 0.018533736, 0.018539847, 0.018543167, 0.018546458, 0.018550306, 0.018556292, 0.018560819, 0.018564319, 0.018570153, 0.018572639, 0.018576222, 0.018580514, 0.018583056, 0.018585847, 0.018590319, 0.018595042, 0.018597764, 0.018601069], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 2.8340000000001697e-06, 3.500000000000031e-06, 4.639000000000726e-06, 2.790999999998517e-06, 4.791999999999991e-06, 2.972000000000391e-06, 2.54200000000121e-06, 2.929999999998212e-06, 4.277999999999921e-06, 4.903000000000546e-06, 2.597000000000016e-06, 4.166999999999366e-06, 5.096999999999047e-06, 5.097000000002516e-06, 4.666999999999866e-06, 3.9859999999974915e-06, 5.403000000001046e-06, 5.846999999999797e-06, 3.472000000000891e-06, 3.486000000000461e-06, 5.735999999999242e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 6.235999999999742e-06, 4.041999999999241e-06, 2.860999999999836e-06, 4.222000000001641e-06, 5.332999999999727e-06, 2.4729999999993646e-06, 5.305000000000587e-06, 4.08400000000142e-06, 5.304999999997118e-06, 6.111000000003086e-06, 3.3199999999976304e-06, 3.290999999999017e-06, 3.84800000000074e-06, 5.985999999999492e-06, 4.527000000000697e-06, 3.500000000000031e-06, 5.8339999999997005e-06, 2.485999999999461e-06, 3.583000000001446e-06, 4.291999999999491e-06, 2.54200000000121e-06, 2.790999999998517e-06, 4.472000000001891e-06, 4.722999999998145e-06, 2.722000000000141e-06, 3.3050000000020563e-06], 'diff': [0, 2.8340000000001697e-06, 3.500000000000031e-06, 4.639000000000726e-06, 2.790999999998517e-06, 4.791999999999991e-06, 2.972000000000391e-06, 2.54200000000121e-06, 2.929999999998212e-06, 4.277999999999921e-06, 4.903000000000546e-06, 2.597000000000016e-06, 4.166999999999366e-06, 5.096999999999047e-06, 5.097000000002516e-06, 4.666999999999866e-06, 3.9859999999974915e-06, 5.403000000001046e-06, 5.846999999999797e-06, 3.472000000000891e-06, 3.486000000000461e-06, 5.735999999999242e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 6.235999999999742e-06, 4.041999999999241e-06, 2.860999999999836e-06, 4.222000000001641e-06, 5.332999999999727e-06, 2.4729999999993646e-06, 5.305000000000587e-06, 4.08400000000142e-06, 5.304999999997118e-06, 6.111000000003086e-06, 3.3199999999976304e-06, 3.290999999999017e-06, 3.84800000000074e-06, 5.985999999999492e-06, 4.527000000000697e-06, 3.500000000000031e-06, 5.8339999999997005e-06, 2.485999999999461e-06, 3.583000000001446e-06, 4.291999999999491e-06, 2.54200000000121e-06, 2.790999999998517e-06, 4.472000000001891e-06, 4.722999999998145e-06, 2.722000000000141e-06, 3.3050000000020563e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:35.553" endtime="20201112 09:53:35.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.549" endtime="20201112 09:53:35.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:35.560" level="INFO">${RESULT} = [{'time': 0.018399042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8340000000001697e-06, 'source_diff': 2.8340000000001697e-06}, {'time': 0.018407181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:35.557" endtime="20201112 09:53:35.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:35.568" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018399042, 0.018407181, 0.018414764, 0.018420278, 0.018427486, 0.018434986, 0.01844425, 0.018454014, 0.018463403, 0.018472722, 0.018481944, 0.018493875, 0.018504153, 0.018511236, 0.0185190...</msg>
<status status="PASS" starttime="20201112 09:53:35.561" endtime="20201112 09:53:35.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.572" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:35.571" endtime="20201112 09:53:35.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.574" level="INFO">VALUE: [2.8340000000001697e-06, 4.639000000000726e-06, 4.791999999999991e-06, 2.54200000000121e-06, 4.277999999999921e-06, 2.597000000000016e-06, 5.096999999999047e-06, 4.666999999999866e-06, 5.403000000001046e-06, 3.472000000000891e-06, 5.735999999999242e-06, 5.971999999999922e-06, 4.041999999999241e-06, 4.222000000001641e-06, 2.4729999999993646e-06, 4.08400000000142e-06, 6.111000000003086e-06, 3.290999999999017e-06, 5.985999999999492e-06, 3.500000000000031e-06, 2.485999999999461e-06, 4.291999999999491e-06, 2.790999999998517e-06, 4.722999999998145e-06, 3.3050000000020563e-06]</msg>
<status status="PASS" starttime="20201112 09:53:35.573" endtime="20201112 09:53:35.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.569" endtime="20201112 09:53:35.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.577" endtime="20201112 09:53:35.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:35.582" endtime="20201112 09:53:35.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.579" endtime="20201112 09:53:35.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.576" endtime="20201112 09:53:35.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.216" endtime="20201112 09:53:35.602"></status>
</kw>
<msg timestamp="20201112 09:53:35.603" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.610" endtime="20201112 09:53:35.625"></status>
</kw>
<msg timestamp="20201112 09:53:35.625" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.609" endtime="20201112 09:53:35.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.628" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.626" endtime="20201112 09:53:35.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.629" endtime="20201112 09:53:35.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.606" endtime="20201112 09:53:35.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.604" endtime="20201112 09:53:35.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.637" endtime="20201112 09:53:35.904"></status>
</kw>
<msg timestamp="20201112 09:53:35.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017569069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017575403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:35.636" endtime="20201112 09:53:35.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017569069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017575403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:35.907" endtime="20201112 09:53:35.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.913" endtime="20201112 09:53:35.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.633" endtime="20201112 09:53:35.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.632" endtime="20201112 09:53:35.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.919" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:35.918" endtime="20201112 09:53:35.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.922" level="INFO">VALUE: [{'time': 0.017569069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017575403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.334000000000201e-06, 'source_diff': 6.334000000000201e-06}, {'time': 0.017579389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017582944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.554999999998837e-06, 'source_diff': 3.554999999998837e-06}, {'time': 0.017588097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.017590569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017595792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.017600347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.554999999999837e-06, 'source_diff': 4.554999999999837e-06}, {'time': 0.017605431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.08400000000242e-06, 'source_diff': 5.08400000000242e-06}, {'time': 0.017610028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017613569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.017616056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.487000000002404e-06, 'source_diff': 2.487000000002404e-06}, {'time': 0.017619208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.151999999999322e-06, 'source_diff': 3.151999999999322e-06}, {'time': 0.017623056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.017627278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.017631875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.017634611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017639889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.01764525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.017648528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2779999999989207e-06, 'source_diff': 3.2779999999989207e-06}, {'time': 0.017654806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.017660667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.017665403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.017671083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.017675722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017680569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017686542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.017690792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.017695333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017698222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.017702458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.017706917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.458999999998325e-06, 'source_diff': 4.458999999998325e-06}, {'time': 0.017712208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}, {'time': 0.017714722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.017717056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3339999999996697e-06, 'source_diff': 2.3339999999996697e-06}, {'time': 0.017721583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.017725375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.017729306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.01773325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.017738431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.017742708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277000000000447e-06, 'source_diff': 4.277000000000447e-06}, {'time': 0.017747806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.09800000000199e-06, 'source_diff': 5.09800000000199e-06}, {'time': 0.017752097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017756458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.017761056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59800000000149e-06, 'source_diff': 4.59800000000149e-06}, {'time': 0.017763514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.017767875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.017773972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.017778444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.017783875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:35.920" endtime="20201112 09:53:35.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.916" endtime="20201112 09:53:35.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:35.938" level="INFO">${debug-compressed} = {'time': [0.017569069, 0.017575403, 0.017579389, 0.017582944, 0.017588097, 0.017590569, 0.017595792, 0.017600347, 0.017605431, 0.017610028, 0.017613569, 0.017616056, 0.017619208, 0.017623056, 0.017627...</msg>
<status status="PASS" starttime="20201112 09:53:35.925" endtime="20201112 09:53:35.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.941" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:35.940" endtime="20201112 09:53:35.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.945" level="INFO">VALUE: {'time': [0.017569069, 0.017575403, 0.017579389, 0.017582944, 0.017588097, 0.017590569, 0.017595792, 0.017600347, 0.017605431, 0.017610028, 0.017613569, 0.017616056, 0.017619208, 0.017623056, 0.017627278, 0.017631875, 0.017634611, 0.017639889, 0.01764525, 0.017648528, 0.017654806, 0.017660667, 0.017665403, 0.017671083, 0.017675722, 0.017680569, 0.017686542, 0.017690792, 0.017695333, 0.017698222, 0.017702458, 0.017706917, 0.017712208, 0.017714722, 0.017717056, 0.017721583, 0.017725375, 0.017729306, 0.01773325, 0.017738431, 0.017742708, 0.017747806, 0.017752097, 0.017756458, 0.017761056, 0.017763514, 0.017767875, 0.017773972, 0.017778444, 0.017783875], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 6.334000000000201e-06, 3.986000000000961e-06, 3.554999999998837e-06, 5.153000000000796e-06, 2.471999999999891e-06, 5.222999999998645e-06, 4.554999999999837e-06, 5.08400000000242e-06, 4.596999999998547e-06, 3.540999999999267e-06, 2.487000000002404e-06, 3.151999999999322e-06, 3.84800000000074e-06, 4.221999999998172e-06, 4.597000000002016e-06, 2.735999999999711e-06, 5.277999999997451e-06, 5.361000000002336e-06, 3.2779999999989207e-06, 6.2779999999984515e-06, 5.861000000002836e-06, 4.735999999998242e-06, 5.680000000000962e-06, 4.639000000000726e-06, 4.846999999998797e-06, 5.9729999999993955e-06, 4.250000000000781e-06, 4.541000000000267e-06, 2.8889999999989757e-06, 4.236000000001211e-06, 4.458999999998325e-06, 5.291000000001017e-06, 2.5139999999986007e-06, 2.3339999999996697e-06, 4.527000000000697e-06, 3.79200000000246e-06, 3.9309999999986855e-06, 3.943999999998782e-06, 5.180999999999936e-06, 4.277000000000447e-06, 5.09800000000199e-06, 4.291000000000017e-06, 4.360999999997867e-06, 4.59800000000149e-06, 2.458000000000321e-06, 4.360999999997867e-06, 6.097000000000047e-06, 4.472000000001891e-06, 5.431000000000186e-06], 'diff': [0, 6.334000000000201e-06, 3.986000000000961e-06, 3.554999999998837e-06, 5.153000000000796e-06, 2.471999999999891e-06, 5.222999999998645e-06, 4.554999999999837e-06, 5.08400000000242e-06, 4.596999999998547e-06, 3.540999999999267e-06, 2.487000000002404e-06, 3.151999999999322e-06, 3.84800000000074e-06, 4.221999999998172e-06, 4.597000000002016e-06, 2.735999999999711e-06, 5.277999999997451e-06, 5.361000000002336e-06, 3.2779999999989207e-06, 6.2779999999984515e-06, 5.861000000002836e-06, 4.735999999998242e-06, 5.680000000000962e-06, 4.639000000000726e-06, 4.846999999998797e-06, 5.9729999999993955e-06, 4.250000000000781e-06, 4.541000000000267e-06, 2.8889999999989757e-06, 4.236000000001211e-06, 4.458999999998325e-06, 5.291000000001017e-06, 2.5139999999986007e-06, 2.3339999999996697e-06, 4.527000000000697e-06, 3.79200000000246e-06, 3.9309999999986855e-06, 3.943999999998782e-06, 5.180999999999936e-06, 4.277000000000447e-06, 5.09800000000199e-06, 4.291000000000017e-06, 4.360999999997867e-06, 4.59800000000149e-06, 2.458000000000321e-06, 4.360999999997867e-06, 6.097000000000047e-06, 4.472000000001891e-06, 5.431000000000186e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:35.942" endtime="20201112 09:53:35.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.938" endtime="20201112 09:53:35.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:35.949" level="INFO">${RESULT} = [{'time': 0.017575403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.334000000000201e-06, 'source_diff': 6.334000000000201e-06}, {'time': 0.017582944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:35.946" endtime="20201112 09:53:35.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:35.957" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017575403, 0.017582944, 0.017590569, 0.017600347, 0.017610028, 0.017616056, 0.017623056, 0.017631875, 0.017639889, 0.017648528, 0.017660667, 0.017671083, 0.017680569, 0.017690792, 0.017698...</msg>
<status status="PASS" starttime="20201112 09:53:35.950" endtime="20201112 09:53:35.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.961" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:35.960" endtime="20201112 09:53:35.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.964" level="INFO">VALUE: [6.334000000000201e-06, 3.554999999998837e-06, 2.471999999999891e-06, 4.554999999999837e-06, 4.596999999998547e-06, 2.487000000002404e-06, 3.84800000000074e-06, 4.597000000002016e-06, 5.277999999997451e-06, 3.2779999999989207e-06, 5.861000000002836e-06, 5.680000000000962e-06, 4.846999999998797e-06, 4.250000000000781e-06, 2.8889999999989757e-06, 4.458999999998325e-06, 2.5139999999986007e-06, 4.527000000000697e-06, 3.9309999999986855e-06, 5.180999999999936e-06, 5.09800000000199e-06, 4.360999999997867e-06, 2.458000000000321e-06, 6.097000000000047e-06, 5.431000000000186e-06]</msg>
<status status="PASS" starttime="20201112 09:53:35.962" endtime="20201112 09:53:35.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.958" endtime="20201112 09:53:35.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.967" endtime="20201112 09:53:35.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:35.970" endtime="20201112 09:53:35.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.969" endtime="20201112 09:53:35.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.965" endtime="20201112 09:53:35.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.603" endtime="20201112 09:53:35.991"></status>
</kw>
<msg timestamp="20201112 09:53:35.991" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.999" endtime="20201112 09:53:36.012"></status>
</kw>
<msg timestamp="20201112 09:53:36.013" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.997" endtime="20201112 09:53:36.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.015" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.014" endtime="20201112 09:53:36.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.016" endtime="20201112 09:53:36.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.995" endtime="20201112 09:53:36.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.993" endtime="20201112 09:53:36.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.025" endtime="20201112 09:53:36.291"></status>
</kw>
<msg timestamp="20201112 09:53:36.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017480722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017484583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:36.024" endtime="20201112 09:53:36.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017480722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017484583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:36.293" endtime="20201112 09:53:36.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.299" endtime="20201112 09:53:36.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.021" endtime="20201112 09:53:36.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.019" endtime="20201112 09:53:36.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.305" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:36.304" endtime="20201112 09:53:36.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.309" level="INFO">VALUE: [{'time': 0.017480722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017484583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017488806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222999999997645e-06, 'source_diff': 4.222999999997645e-06}, {'time': 0.017495083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.277000000002447e-06, 'source_diff': 6.277000000002447e-06}, {'time': 0.017498889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8059999999985605e-06, 'source_diff': 3.8059999999985605e-06}, {'time': 0.017502722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.017505278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}, {'time': 0.017510056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.017516236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.017521333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017525542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.209000000001545e-06, 'source_diff': 4.209000000001545e-06}, {'time': 0.017530764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.017534389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.017540611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017543694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0829999999974766e-06, 'source_diff': 3.0829999999974766e-06}, {'time': 0.017546417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.723000000003084e-06, 'source_diff': 2.723000000003084e-06}, {'time': 0.017549264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8469999999967965e-06, 'source_diff': 2.8469999999967965e-06}, {'time': 0.017552306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.017555611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.304999999998587e-06, 'source_diff': 3.304999999998587e-06}, {'time': 0.017559139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.017563181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.017569153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017571681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.017575667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017581528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017586611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.017591972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.017595569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5969999999975466e-06, 'source_diff': 3.5969999999975466e-06}, {'time': 0.017598097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.017604194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.017610181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.986999999998965e-06, 'source_diff': 5.986999999998965e-06}, {'time': 0.017614833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.017618264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.431000000001655e-06, 'source_diff': 3.431000000001655e-06}, {'time': 0.017621222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9579999999973516e-06, 'source_diff': 2.9579999999973516e-06}, {'time': 0.017624139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.017628819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.017634667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.017637514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017642931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.017648889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017654486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017659153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017664319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.017667542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.017671889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017678014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.017681917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.017686833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.017689417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5839999999999197e-06, 'source_diff': 2.5839999999999197e-06}, {'time': 0.017695458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:36.306" endtime="20201112 09:53:36.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.302" endtime="20201112 09:53:36.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:36.325" level="INFO">${debug-compressed} = {'time': [0.017480722, 0.017484583, 0.017488806, 0.017495083, 0.017498889, 0.017502722, 0.017505278, 0.017510056, 0.017516236, 0.017521333, 0.017525542, 0.017530764, 0.017534389, 0.017540611, 0.017543...</msg>
<status status="PASS" starttime="20201112 09:53:36.311" endtime="20201112 09:53:36.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.329" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:36.328" endtime="20201112 09:53:36.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.332" level="INFO">VALUE: {'time': [0.017480722, 0.017484583, 0.017488806, 0.017495083, 0.017498889, 0.017502722, 0.017505278, 0.017510056, 0.017516236, 0.017521333, 0.017525542, 0.017530764, 0.017534389, 0.017540611, 0.017543694, 0.017546417, 0.017549264, 0.017552306, 0.017555611, 0.017559139, 0.017563181, 0.017569153, 0.017571681, 0.017575667, 0.017581528, 0.017586611, 0.017591972, 0.017595569, 0.017598097, 0.017604194, 0.017610181, 0.017614833, 0.017618264, 0.017621222, 0.017624139, 0.017628819, 0.017634667, 0.017637514, 0.017642931, 0.017648889, 0.017654486, 0.017659153, 0.017664319, 0.017667542, 0.017671889, 0.017678014, 0.017681917, 0.017686833, 0.017689417, 0.017695458], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 3.861000000000836e-06, 4.222999999997645e-06, 6.277000000002447e-06, 3.8059999999985605e-06, 3.832999999998227e-06, 2.55600000000078e-06, 4.778000000000421e-06, 6.180000000001462e-06, 5.096999999999047e-06, 4.209000000001545e-06, 5.221999999999172e-06, 3.625000000000156e-06, 6.222000000000172e-06, 3.0829999999974766e-06, 2.723000000003084e-06, 2.8469999999967965e-06, 3.04200000000171e-06, 3.304999999998587e-06, 3.52800000000264e-06, 4.041999999999241e-06, 5.971999999999922e-06, 2.5279999999981706e-06, 3.986000000000961e-06, 5.860999999999367e-06, 5.082999999999477e-06, 5.361000000002336e-06, 3.5969999999975466e-06, 2.52800000000164e-06, 6.097000000000047e-06, 5.986999999998965e-06, 4.652000000000822e-06, 3.431000000001655e-06, 2.9579999999973516e-06, 2.917000000001585e-06, 4.679999999999962e-06, 5.8479999999992704e-06, 2.847000000000266e-06, 5.417000000000616e-06, 5.958000000000352e-06, 5.596999999999547e-06, 4.666999999999866e-06, 5.166000000000892e-06, 3.2230000000001147e-06, 4.346999999998297e-06, 6.124999999999187e-06, 3.902999999999546e-06, 4.916000000000642e-06, 2.5839999999999197e-06, 6.041000000001767e-06], 'diff': [0, 3.861000000000836e-06, 4.222999999997645e-06, 6.277000000002447e-06, 3.8059999999985605e-06, 3.832999999998227e-06, 2.55600000000078e-06, 4.778000000000421e-06, 6.180000000001462e-06, 5.096999999999047e-06, 4.209000000001545e-06, 5.221999999999172e-06, 3.625000000000156e-06, 6.222000000000172e-06, 3.0829999999974766e-06, 2.723000000003084e-06, 2.8469999999967965e-06, 3.04200000000171e-06, 3.304999999998587e-06, 3.52800000000264e-06, 4.041999999999241e-06, 5.971999999999922e-06, 2.5279999999981706e-06, 3.986000000000961e-06, 5.860999999999367e-06, 5.082999999999477e-06, 5.361000000002336e-06, 3.5969999999975466e-06, 2.52800000000164e-06, 6.097000000000047e-06, 5.986999999998965e-06, 4.652000000000822e-06, 3.431000000001655e-06, 2.9579999999973516e-06, 2.917000000001585e-06, 4.679999999999962e-06, 5.8479999999992704e-06, 2.847000000000266e-06, 5.417000000000616e-06, 5.958000000000352e-06, 5.596999999999547e-06, 4.666999999999866e-06, 5.166000000000892e-06, 3.2230000000001147e-06, 4.346999999998297e-06, 6.124999999999187e-06, 3.902999999999546e-06, 4.916000000000642e-06, 2.5839999999999197e-06, 6.041000000001767e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:36.330" endtime="20201112 09:53:36.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.326" endtime="20201112 09:53:36.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:36.336" level="INFO">${RESULT} = [{'time': 0.017484583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017495083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:36.334" endtime="20201112 09:53:36.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:36.344" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017484583, 0.017495083, 0.017502722, 0.017510056, 0.017521333, 0.017530764, 0.017540611, 0.017546417, 0.017552306, 0.017559139, 0.017569153, 0.017575667, 0.017586611, 0.017595569, 0.017604...</msg>
<status status="PASS" starttime="20201112 09:53:36.337" endtime="20201112 09:53:36.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.349" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:36.348" endtime="20201112 09:53:36.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.351" level="INFO">VALUE: [3.861000000000836e-06, 6.277000000002447e-06, 3.832999999998227e-06, 4.778000000000421e-06, 5.096999999999047e-06, 5.221999999999172e-06, 6.222000000000172e-06, 2.723000000003084e-06, 3.04200000000171e-06, 3.52800000000264e-06, 5.971999999999922e-06, 3.986000000000961e-06, 5.082999999999477e-06, 3.5969999999975466e-06, 6.097000000000047e-06, 4.652000000000822e-06, 2.9579999999973516e-06, 4.679999999999962e-06, 2.847000000000266e-06, 5.958000000000352e-06, 4.666999999999866e-06, 3.2230000000001147e-06, 6.124999999999187e-06, 4.916000000000642e-06, 6.041000000001767e-06]</msg>
<status status="PASS" starttime="20201112 09:53:36.350" endtime="20201112 09:53:36.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.345" endtime="20201112 09:53:36.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.354" endtime="20201112 09:53:36.356"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:36.358" endtime="20201112 09:53:36.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.356" endtime="20201112 09:53:36.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.353" endtime="20201112 09:53:36.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.992" endtime="20201112 09:53:36.378"></status>
</kw>
<msg timestamp="20201112 09:53:36.379" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.386" endtime="20201112 09:53:36.400"></status>
</kw>
<msg timestamp="20201112 09:53:36.401" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.385" endtime="20201112 09:53:36.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.403" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.402" endtime="20201112 09:53:36.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.404" endtime="20201112 09:53:36.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.382" endtime="20201112 09:53:36.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.380" endtime="20201112 09:53:36.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.413" endtime="20201112 09:53:36.678"></status>
</kw>
<msg timestamp="20201112 09:53:36.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017313889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017316278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:36.412" endtime="20201112 09:53:36.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017313889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017316278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:36.681" endtime="20201112 09:53:36.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.686" endtime="20201112 09:53:36.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.409" endtime="20201112 09:53:36.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.407" endtime="20201112 09:53:36.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.693" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:36.692" endtime="20201112 09:53:36.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.697" level="INFO">VALUE: [{'time': 0.017313889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017316278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.389000000001945e-06, 'source_diff': 2.389000000001945e-06}, {'time': 0.017322528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.017325875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.017331111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.017335639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017339681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.017345403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017351444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.017357167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.017360028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017363125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017367472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017370444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017375764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.017379292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.017384667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.017389972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.017392431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4589999999997947e-06, 'source_diff': 2.4589999999997947e-06}, {'time': 0.017397319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.888000000001502e-06, 'source_diff': 4.888000000001502e-06}, {'time': 0.017402403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0839999999989505e-06, 'source_diff': 5.0839999999989505e-06}, {'time': 0.017405319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.017408167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.017411083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9160000000021113e-06, 'source_diff': 2.9160000000021113e-06}, {'time': 0.017414861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.017418806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.017422167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017424472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.017430014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.017432736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017438778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.017444319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.017450625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.017456264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.017462389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.017465222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.017467958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017472611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017475347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017478, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.017481153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017485458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.017491306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.84800000000274e-06, 'source_diff': 5.84800000000274e-06}, {'time': 0.017495083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.017497931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.017502167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.017505708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.017510625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017515028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017518556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:36.694" endtime="20201112 09:53:36.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.690" endtime="20201112 09:53:36.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:36.712" level="INFO">${debug-compressed} = {'time': [0.017313889, 0.017316278, 0.017322528, 0.017325875, 0.017331111, 0.017335639, 0.017339681, 0.017345403, 0.017351444, 0.017357167, 0.017360028, 0.017363125, 0.017367472, 0.017370444, 0.017375...</msg>
<status status="PASS" starttime="20201112 09:53:36.699" endtime="20201112 09:53:36.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.716" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:36.715" endtime="20201112 09:53:36.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.719" level="INFO">VALUE: {'time': [0.017313889, 0.017316278, 0.017322528, 0.017325875, 0.017331111, 0.017335639, 0.017339681, 0.017345403, 0.017351444, 0.017357167, 0.017360028, 0.017363125, 0.017367472, 0.017370444, 0.017375764, 0.017379292, 0.017384667, 0.017389972, 0.017392431, 0.017397319, 0.017402403, 0.017405319, 0.017408167, 0.017411083, 0.017414861, 0.017418806, 0.017422167, 0.017424472, 0.017430014, 0.017432736, 0.017438778, 0.017444319, 0.017450625, 0.017456264, 0.017462389, 0.017465222, 0.017467958, 0.017472611, 0.017475347, 0.017478, 0.017481153, 0.017485458, 0.017491306, 0.017495083, 0.017497931, 0.017502167, 0.017505708, 0.017510625, 0.017515028, 0.017518556], 'sourceeventsource_diff': [0, 2.389000000001945e-06, 6.249999999999312e-06, 3.347000000000766e-06, 5.235999999998742e-06, 4.528000000000171e-06, 4.041999999999241e-06, 5.721999999999672e-06, 6.041000000001767e-06, 5.7229999999991454e-06, 2.860999999999836e-06, 3.097000000000516e-06, 4.346999999998297e-06, 2.972000000000391e-06, 5.319999999999631e-06, 3.52800000000264e-06, 5.374999999998437e-06, 5.305000000000587e-06, 2.4589999999997947e-06, 4.888000000001502e-06, 5.0839999999989505e-06, 2.915999999998642e-06, 2.8479999999997396e-06, 2.9160000000021113e-06, 3.7779999999994207e-06, 3.9449999999982555e-06, 3.361000000000336e-06, 2.305000000001056e-06, 5.542000000000741e-06, 2.722000000000141e-06, 6.041999999997771e-06, 5.541000000001267e-06, 6.306000000001061e-06, 5.6389999999982565e-06, 6.124999999999187e-06, 2.833000000000696e-06, 2.735999999999711e-06, 4.653000000000296e-06, 2.735999999999711e-06, 2.653000000001765e-06, 3.1529999999987957e-06, 4.304999999999587e-06, 5.84800000000274e-06, 3.776999999999947e-06, 2.8479999999997396e-06, 4.2359999999977416e-06, 3.540999999999267e-06, 4.917000000000116e-06, 4.403000000000046e-06, 3.52800000000264e-06], 'diff': [0, 2.389000000001945e-06, 6.249999999999312e-06, 3.347000000000766e-06, 5.235999999998742e-06, 4.528000000000171e-06, 4.041999999999241e-06, 5.721999999999672e-06, 6.041000000001767e-06, 5.7229999999991454e-06, 2.860999999999836e-06, 3.097000000000516e-06, 4.346999999998297e-06, 2.972000000000391e-06, 5.319999999999631e-06, 3.52800000000264e-06, 5.374999999998437e-06, 5.305000000000587e-06, 2.4589999999997947e-06, 4.888000000001502e-06, 5.0839999999989505e-06, 2.915999999998642e-06, 2.8479999999997396e-06, 2.9160000000021113e-06, 3.7779999999994207e-06, 3.9449999999982555e-06, 3.361000000000336e-06, 2.305000000001056e-06, 5.542000000000741e-06, 2.722000000000141e-06, 6.041999999997771e-06, 5.541000000001267e-06, 6.306000000001061e-06, 5.6389999999982565e-06, 6.124999999999187e-06, 2.833000000000696e-06, 2.735999999999711e-06, 4.653000000000296e-06, 2.735999999999711e-06, 2.653000000001765e-06, 3.1529999999987957e-06, 4.304999999999587e-06, 5.84800000000274e-06, 3.776999999999947e-06, 2.8479999999997396e-06, 4.2359999999977416e-06, 3.540999999999267e-06, 4.917000000000116e-06, 4.403000000000046e-06, 3.52800000000264e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:36.717" endtime="20201112 09:53:36.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.713" endtime="20201112 09:53:36.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:36.723" level="INFO">${RESULT} = [{'time': 0.017316278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.389000000001945e-06, 'source_diff': 2.389000000001945e-06}, {'time': 0.017325875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:36.720" endtime="20201112 09:53:36.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:36.731" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017316278, 0.017325875, 0.017335639, 0.017345403, 0.017357167, 0.017363125, 0.017370444, 0.017379292, 0.017389972, 0.017397319, 0.017405319, 0.017411083, 0.017418806, 0.017424472, 0.017432...</msg>
<status status="PASS" starttime="20201112 09:53:36.724" endtime="20201112 09:53:36.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.735" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:36.734" endtime="20201112 09:53:36.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.737" level="INFO">VALUE: [2.389000000001945e-06, 3.347000000000766e-06, 4.528000000000171e-06, 5.721999999999672e-06, 5.7229999999991454e-06, 3.097000000000516e-06, 2.972000000000391e-06, 3.52800000000264e-06, 5.305000000000587e-06, 4.888000000001502e-06, 2.915999999998642e-06, 2.9160000000021113e-06, 3.9449999999982555e-06, 2.305000000001056e-06, 2.722000000000141e-06, 5.541000000001267e-06, 5.6389999999982565e-06, 2.833000000000696e-06, 4.653000000000296e-06, 2.653000000001765e-06, 4.304999999999587e-06, 3.776999999999947e-06, 4.2359999999977416e-06, 4.917000000000116e-06, 3.52800000000264e-06]</msg>
<status status="PASS" starttime="20201112 09:53:36.736" endtime="20201112 09:53:36.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.732" endtime="20201112 09:53:36.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.741" endtime="20201112 09:53:36.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:36.744" endtime="20201112 09:53:36.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.743" endtime="20201112 09:53:36.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.739" endtime="20201112 09:53:36.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.379" endtime="20201112 09:53:36.765"></status>
</kw>
<msg timestamp="20201112 09:53:36.765" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.773" endtime="20201112 09:53:36.787"></status>
</kw>
<msg timestamp="20201112 09:53:36.787" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.771" endtime="20201112 09:53:36.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.790" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.788" endtime="20201112 09:53:36.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.791" endtime="20201112 09:53:36.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.768" endtime="20201112 09:53:36.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.767" endtime="20201112 09:53:36.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.801" endtime="20201112 09:53:37.065"></status>
</kw>
<msg timestamp="20201112 09:53:37.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017462875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017465806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:36.799" endtime="20201112 09:53:37.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017462875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017465806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:37.067" endtime="20201112 09:53:37.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.073" endtime="20201112 09:53:37.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.796" endtime="20201112 09:53:37.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.794" endtime="20201112 09:53:37.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.079" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:37.078" endtime="20201112 09:53:37.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.083" level="INFO">VALUE: [{'time': 0.017462875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017465806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.017469764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.017473486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017477597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017480403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8059999999975604e-06, 'source_diff': 2.8059999999975604e-06}, {'time': 0.017485486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.083000000002946e-06, 'source_diff': 5.083000000002946e-06}, {'time': 0.017489014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017493444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.017497972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.01750425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.017506986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017511611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.017514403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.017518778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3749999999974365e-06, 'source_diff': 4.3749999999974365e-06}, {'time': 0.017521139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3610000000028053e-06, 'source_diff': 2.3610000000028053e-06}, {'time': 0.017524667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017527889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017531806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.017536097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017541389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017547236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017549833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.017555431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.017560222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.017565708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.017568611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.017571917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3059999999980605e-06, 'source_diff': 3.3059999999980605e-06}, {'time': 0.017575014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017577556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.017581514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.017587556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.017590958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.017594139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.181000000001405e-06, 'source_diff': 3.181000000001405e-06}, {'time': 0.017599222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.017604639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416999999997146e-06, 'source_diff': 5.416999999997146e-06}, {'time': 0.017608111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017611833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017615375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.017621542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.017627153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017632111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.017634486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.375000000002375e-06, 'source_diff': 2.375000000002375e-06}, {'time': 0.017636903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.017641861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.017647639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017653319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.017658153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.017661347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.194000000001501e-06, 'source_diff': 3.194000000001501e-06}, {'time': 0.017665861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:37.081" endtime="20201112 09:53:37.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.076" endtime="20201112 09:53:37.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:37.098" level="INFO">${debug-compressed} = {'time': [0.017462875, 0.017465806, 0.017469764, 0.017473486, 0.017477597, 0.017480403, 0.017485486, 0.017489014, 0.017493444, 0.017497972, 0.01750425, 0.017506986, 0.017511611, 0.017514403, 0.0175187...</msg>
<status status="PASS" starttime="20201112 09:53:37.085" endtime="20201112 09:53:37.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.102" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:37.101" endtime="20201112 09:53:37.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.105" level="INFO">VALUE: {'time': [0.017462875, 0.017465806, 0.017469764, 0.017473486, 0.017477597, 0.017480403, 0.017485486, 0.017489014, 0.017493444, 0.017497972, 0.01750425, 0.017506986, 0.017511611, 0.017514403, 0.017518778, 0.017521139, 0.017524667, 0.017527889, 0.017531806, 0.017536097, 0.017541389, 0.017547236, 0.017549833, 0.017555431, 0.017560222, 0.017565708, 0.017568611, 0.017571917, 0.017575014, 0.017577556, 0.017581514, 0.017587556, 0.017590958, 0.017594139, 0.017599222, 0.017604639, 0.017608111, 0.017611833, 0.017615375, 0.017621542, 0.017627153, 0.017632111, 0.017634486, 0.017636903, 0.017641861, 0.017647639, 0.017653319, 0.017658153, 0.017661347, 0.017665861], 'sourceeventsource_diff': [0, 2.931000000001155e-06, 3.957999999998352e-06, 3.722000000001141e-06, 4.111000000001086e-06, 2.8059999999975604e-06, 5.083000000002946e-06, 3.5279999999991707e-06, 4.429999999999712e-06, 4.528000000000171e-06, 6.2779999999984515e-06, 2.735999999999711e-06, 4.625000000001156e-06, 2.79200000000146e-06, 4.3749999999974365e-06, 2.3610000000028053e-06, 3.5279999999991707e-06, 3.222000000000641e-06, 3.916999999999116e-06, 4.291000000000017e-06, 5.292000000000491e-06, 5.846999999999797e-06, 2.597000000000016e-06, 5.5979999999990204e-06, 4.791000000000517e-06, 5.485999999998992e-06, 2.903000000002015e-06, 3.3059999999980605e-06, 3.097000000000516e-06, 2.54200000000121e-06, 3.957999999998352e-06, 6.042000000001241e-06, 3.401999999999572e-06, 3.181000000001405e-06, 5.082999999999477e-06, 5.416999999997146e-06, 3.472000000000891e-06, 3.722000000001141e-06, 3.5419999999987406e-06, 6.167000000001366e-06, 5.610999999999117e-06, 4.957999999999352e-06, 2.375000000002375e-06, 2.4169999999976155e-06, 4.957999999999352e-06, 5.778000000001421e-06, 5.680000000000962e-06, 4.8339999999987004e-06, 3.194000000001501e-06, 4.514000000000601e-06], 'diff': [0, 2.931000000001155e-06, 3.957999999998352e-06, 3.722000000001141e-06, 4.111000000001086e-06, 2.8059999999975604e-06, 5.083000000002946e-06, 3.5279999999991707e-06, 4.429999999999712e-06, 4.528000000000171e-06, 6.2779999999984515e-06, 2.735999999999711e-06, 4.625000000001156e-06, 2.79200000000146e-06, 4.3749999999974365e-06, 2.3610000000028053e-06, 3.5279999999991707e-06, 3.222000000000641e-06, 3.916999999999116e-06, 4.291000000000017e-06, 5.292000000000491e-06, 5.846999999999797e-06, 2.597000000000016e-06, 5.5979999999990204e-06, 4.791000000000517e-06, 5.485999999998992e-06, 2.903000000002015e-06, 3.3059999999980605e-06, 3.097000000000516e-06, 2.54200000000121e-06, 3.957999999998352e-06, 6.042000000001241e-06, 3.401999999999572e-06, 3.181000000001405e-06, 5.082999999999477e-06, 5.416999999997146e-06, 3.472000000000891e-06, 3.722000000001141e-06, 3.5419999999987406e-06, 6.167000000001366e-06, 5.610999999999117e-06, 4.957999999999352e-06, 2.375000000002375e-06, 2.4169999999976155e-06, 4.957999999999352e-06, 5.778000000001421e-06, 5.680000000000962e-06, 4.8339999999987004e-06, 3.194000000001501e-06, 4.514000000000601e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:37.103" endtime="20201112 09:53:37.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.099" endtime="20201112 09:53:37.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:37.109" level="INFO">${RESULT} = [{'time': 0.017465806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.017473486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:37.107" endtime="20201112 09:53:37.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:37.117" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017465806, 0.017473486, 0.017480403, 0.017489014, 0.017497972, 0.017506986, 0.017514403, 0.017521139, 0.017527889, 0.017536097, 0.017547236, 0.017555431, 0.017565708, 0.017571917, 0.017577...</msg>
<status status="PASS" starttime="20201112 09:53:37.110" endtime="20201112 09:53:37.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.121" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:37.120" endtime="20201112 09:53:37.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.124" level="INFO">VALUE: [2.931000000001155e-06, 3.722000000001141e-06, 2.8059999999975604e-06, 3.5279999999991707e-06, 4.528000000000171e-06, 2.735999999999711e-06, 2.79200000000146e-06, 2.3610000000028053e-06, 3.222000000000641e-06, 4.291000000000017e-06, 5.846999999999797e-06, 5.5979999999990204e-06, 5.485999999998992e-06, 3.3059999999980605e-06, 2.54200000000121e-06, 6.042000000001241e-06, 3.181000000001405e-06, 5.416999999997146e-06, 3.722000000001141e-06, 6.167000000001366e-06, 4.957999999999352e-06, 2.4169999999976155e-06, 5.778000000001421e-06, 4.8339999999987004e-06, 4.514000000000601e-06]</msg>
<status status="PASS" starttime="20201112 09:53:37.122" endtime="20201112 09:53:37.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.118" endtime="20201112 09:53:37.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.127" endtime="20201112 09:53:37.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:37.130" endtime="20201112 09:53:37.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.129" endtime="20201112 09:53:37.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.125" endtime="20201112 09:53:37.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.765" endtime="20201112 09:53:37.151"></status>
</kw>
<msg timestamp="20201112 09:53:37.151" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.159" endtime="20201112 09:53:37.173"></status>
</kw>
<msg timestamp="20201112 09:53:37.174" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.157" endtime="20201112 09:53:37.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.176" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.175" endtime="20201112 09:53:37.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.177" endtime="20201112 09:53:37.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.155" endtime="20201112 09:53:37.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.153" endtime="20201112 09:53:37.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.187" endtime="20201112 09:53:37.452"></status>
</kw>
<msg timestamp="20201112 09:53:37.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017462833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017468556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:37.185" endtime="20201112 09:53:37.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017462833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017468556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:37.455" endtime="20201112 09:53:37.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.460" endtime="20201112 09:53:37.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.183" endtime="20201112 09:53:37.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.181" endtime="20201112 09:53:37.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.466" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:37.465" endtime="20201112 09:53:37.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.470" level="INFO">VALUE: [{'time': 0.017462833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017468556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.017473403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017476528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1250000000031253e-06, 'source_diff': 3.1250000000031253e-06}, {'time': 0.017479486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9579999999973516e-06, 'source_diff': 2.9579999999973516e-06}, {'time': 0.017483278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.017487014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7359999999972415e-06, 'source_diff': 3.7359999999972415e-06}, {'time': 0.017492722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.017498569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017501472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.017505028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5559999999983105e-06, 'source_diff': 3.5559999999983105e-06}, {'time': 0.017509556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017513667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017517278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.017519833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5549999999978368e-06, 'source_diff': 2.5549999999978368e-06}, {'time': 0.017522667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8340000000001697e-06, 'source_diff': 2.8340000000001697e-06}, {'time': 0.017526181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.017531472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}, {'time': 0.017537014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.017542556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.017545667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017549208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.017552222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0139999999991007e-06, 'source_diff': 3.0139999999991007e-06}, {'time': 0.017555833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.017560611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.017564472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017570264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.017573042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.017579389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.347000000000297e-06, 'source_diff': 6.347000000000297e-06}, {'time': 0.017585111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017588917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8059999999985605e-06, 'source_diff': 3.8059999999985605e-06}, {'time': 0.017592764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017598236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017600639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.017604264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.017608181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.017610486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.017615931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.017621028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017623875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017629222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017634819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017639667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.017642222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5549999999978368e-06, 'source_diff': 2.5549999999978368e-06}, {'time': 0.017647069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.017652042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.017658139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.01766225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017666069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.017670194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:37.468" endtime="20201112 09:53:37.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.463" endtime="20201112 09:53:37.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:37.486" level="INFO">${debug-compressed} = {'time': [0.017462833, 0.017468556, 0.017473403, 0.017476528, 0.017479486, 0.017483278, 0.017487014, 0.017492722, 0.017498569, 0.017501472, 0.017505028, 0.017509556, 0.017513667, 0.017517278, 0.017519...</msg>
<status status="PASS" starttime="20201112 09:53:37.472" endtime="20201112 09:53:37.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.490" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:37.489" endtime="20201112 09:53:37.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.493" level="INFO">VALUE: {'time': [0.017462833, 0.017468556, 0.017473403, 0.017476528, 0.017479486, 0.017483278, 0.017487014, 0.017492722, 0.017498569, 0.017501472, 0.017505028, 0.017509556, 0.017513667, 0.017517278, 0.017519833, 0.017522667, 0.017526181, 0.017531472, 0.017537014, 0.017542556, 0.017545667, 0.017549208, 0.017552222, 0.017555833, 0.017560611, 0.017564472, 0.017570264, 0.017573042, 0.017579389, 0.017585111, 0.017588917, 0.017592764, 0.017598236, 0.017600639, 0.017604264, 0.017608181, 0.017610486, 0.017615931, 0.017621028, 0.017623875, 0.017629222, 0.017634819, 0.017639667, 0.017642222, 0.017647069, 0.017652042, 0.017658139, 0.01766225, 0.017666069, 0.017670194], 'sourceeventsource_diff': [0, 5.7229999999991454e-06, 4.846999999998797e-06, 3.1250000000031253e-06, 2.9579999999973516e-06, 3.79200000000246e-06, 3.7359999999972415e-06, 5.708000000000102e-06, 5.846999999999797e-06, 2.903000000002015e-06, 3.5559999999983105e-06, 4.528000000000171e-06, 4.111000000001086e-06, 3.611000000000586e-06, 2.5549999999978368e-06, 2.8340000000001697e-06, 3.5139999999996008e-06, 5.291000000001017e-06, 5.542000000000741e-06, 5.542000000000741e-06, 3.111000000000086e-06, 3.540999999999267e-06, 3.0139999999991007e-06, 3.611000000000586e-06, 4.778000000000421e-06, 3.861000000000836e-06, 5.791999999997521e-06, 2.77800000000189e-06, 6.347000000000297e-06, 5.721999999999672e-06, 3.8059999999985605e-06, 3.847000000001266e-06, 5.471999999999422e-06, 2.403000000001515e-06, 3.625000000000156e-06, 3.916999999999116e-06, 2.305000000001056e-06, 5.444999999999756e-06, 5.096999999999047e-06, 2.847000000000266e-06, 5.346999999999297e-06, 5.596999999999547e-06, 4.84800000000174e-06, 2.5549999999978368e-06, 4.847000000002266e-06, 4.972999999998395e-06, 6.097000000000047e-06, 4.111000000001086e-06, 3.818999999998657e-06, 4.125000000000656e-06], 'diff': [0, 5.7229999999991454e-06, 4.846999999998797e-06, 3.1250000000031253e-06, 2.9579999999973516e-06, 3.79200000000246e-06, 3.7359999999972415e-06, 5.708000000000102e-06, 5.846999999999797e-06, 2.903000000002015e-06, 3.5559999999983105e-06, 4.528000000000171e-06, 4.111000000001086e-06, 3.611000000000586e-06, 2.5549999999978368e-06, 2.8340000000001697e-06, 3.5139999999996008e-06, 5.291000000001017e-06, 5.542000000000741e-06, 5.542000000000741e-06, 3.111000000000086e-06, 3.540999999999267e-06, 3.0139999999991007e-06, 3.611000000000586e-06, 4.778000000000421e-06, 3.861000000000836e-06, 5.791999999997521e-06, 2.77800000000189e-06, 6.347000000000297e-06, 5.721999999999672e-06, 3.8059999999985605e-06, 3.847000000001266e-06, 5.471999999999422e-06, 2.403000000001515e-06, 3.625000000000156e-06, 3.916999999999116e-06, 2.305000000001056e-06, 5.444999999999756e-06, 5.096999999999047e-06, 2.847000000000266e-06, 5.346999999999297e-06, 5.596999999999547e-06, 4.84800000000174e-06, 2.5549999999978368e-06, 4.847000000002266e-06, 4.972999999998395e-06, 6.097000000000047e-06, 4.111000000001086e-06, 3.818999999998657e-06, 4.125000000000656e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:37.491" endtime="20201112 09:53:37.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.487" endtime="20201112 09:53:37.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:37.497" level="INFO">${RESULT} = [{'time': 0.017468556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.017476528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:37.495" endtime="20201112 09:53:37.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:37.505" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017468556, 0.017476528, 0.017483278, 0.017492722, 0.017501472, 0.017509556, 0.017517278, 0.017522667, 0.017531472, 0.017542556, 0.017549208, 0.017555833, 0.017564472, 0.017573042, 0.017585...</msg>
<status status="PASS" starttime="20201112 09:53:37.498" endtime="20201112 09:53:37.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.509" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:37.508" endtime="20201112 09:53:37.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.512" level="INFO">VALUE: [5.7229999999991454e-06, 3.1250000000031253e-06, 3.79200000000246e-06, 5.708000000000102e-06, 2.903000000002015e-06, 4.528000000000171e-06, 3.611000000000586e-06, 2.8340000000001697e-06, 5.291000000001017e-06, 5.542000000000741e-06, 3.540999999999267e-06, 3.611000000000586e-06, 3.861000000000836e-06, 2.77800000000189e-06, 5.721999999999672e-06, 3.847000000001266e-06, 2.403000000001515e-06, 3.916999999999116e-06, 5.444999999999756e-06, 2.847000000000266e-06, 5.596999999999547e-06, 2.5549999999978368e-06, 4.972999999998395e-06, 4.111000000001086e-06, 4.125000000000656e-06]</msg>
<status status="PASS" starttime="20201112 09:53:37.510" endtime="20201112 09:53:37.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.506" endtime="20201112 09:53:37.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.515" endtime="20201112 09:53:37.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:37.519" endtime="20201112 09:53:37.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.517" endtime="20201112 09:53:37.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.513" endtime="20201112 09:53:37.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.152" endtime="20201112 09:53:37.539"></status>
</kw>
<msg timestamp="20201112 09:53:37.540" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.548" endtime="20201112 09:53:37.562"></status>
</kw>
<msg timestamp="20201112 09:53:37.563" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.546" endtime="20201112 09:53:37.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.565" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.564" endtime="20201112 09:53:37.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.566" endtime="20201112 09:53:37.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.543" endtime="20201112 09:53:37.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.541" endtime="20201112 09:53:37.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.575" endtime="20201112 09:53:37.840"></status>
</kw>
<msg timestamp="20201112 09:53:37.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018388042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018392986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:37.574" endtime="20201112 09:53:37.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018388042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018392986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:37.843" endtime="20201112 09:53:37.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.848" endtime="20201112 09:53:37.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.571" endtime="20201112 09:53:37.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.569" endtime="20201112 09:53:37.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.854" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:37.853" endtime="20201112 09:53:37.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.858" level="INFO">VALUE: [{'time': 0.018388042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018392986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.018398069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.018403333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.264000000001351e-06, 'source_diff': 5.264000000001351e-06}, {'time': 0.018408486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018412028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.018418306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.018422528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018426056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018431375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.018435653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018440222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.018443611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.018449778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.018455806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018461403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018464931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018469042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018471806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.018474556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.018478472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.018484514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.018487472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.018492389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018495931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.018499333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.018504, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018508917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018512153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018516306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018520528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018524389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.018527792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.403000000002515e-06, 'source_diff': 3.403000000002515e-06}, {'time': 0.018530694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.901999999999072e-06, 'source_diff': 2.901999999999072e-06}, {'time': 0.018534125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4309999999981855e-06, 'source_diff': 3.4309999999981855e-06}, {'time': 0.018539222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.01854425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018548736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018552458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018558375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916999999997646e-06, 'source_diff': 5.916999999997646e-06}, {'time': 0.018562597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018566444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018570736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018574139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.018580375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018586556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018590208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.651999999999822e-06, 'source_diff': 3.651999999999822e-06}, {'time': 0.018595236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018597653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.018600569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9160000000021113e-06, 'source_diff': 2.9160000000021113e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:37.855" endtime="20201112 09:53:37.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.851" endtime="20201112 09:53:37.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:37.873" level="INFO">${debug-compressed} = {'time': [0.018388042, 0.018392986, 0.018398069, 0.018403333, 0.018408486, 0.018412028, 0.018418306, 0.018422528, 0.018426056, 0.018431375, 0.018435653, 0.018440222, 0.018443611, 0.018449778, 0.018455...</msg>
<status status="PASS" starttime="20201112 09:53:37.861" endtime="20201112 09:53:37.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.877" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:37.876" endtime="20201112 09:53:37.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.880" level="INFO">VALUE: {'time': [0.018388042, 0.018392986, 0.018398069, 0.018403333, 0.018408486, 0.018412028, 0.018418306, 0.018422528, 0.018426056, 0.018431375, 0.018435653, 0.018440222, 0.018443611, 0.018449778, 0.018455806, 0.018461403, 0.018464931, 0.018469042, 0.018471806, 0.018474556, 0.018478472, 0.018484514, 0.018487472, 0.018492389, 0.018495931, 0.018499333, 0.018504, 0.018508917, 0.018512153, 0.018516306, 0.018520528, 0.018524389, 0.018527792, 0.018530694, 0.018534125, 0.018539222, 0.01854425, 0.018548736, 0.018552458, 0.018558375, 0.018562597, 0.018566444, 0.018570736, 0.018574139, 0.018580375, 0.018586556, 0.018590208, 0.018595236, 0.018597653, 0.018600569], 'sourceeventsource_diff': [0, 4.943999999999782e-06, 5.082999999999477e-06, 5.264000000001351e-06, 5.153000000000796e-06, 3.5419999999987406e-06, 6.2779999999984515e-06, 4.222000000001641e-06, 3.5279999999991707e-06, 5.319000000000157e-06, 4.277999999999921e-06, 4.568999999999407e-06, 3.3889999999994758e-06, 6.167000000001366e-06, 6.028000000001671e-06, 5.596999999999547e-06, 3.5279999999991707e-06, 4.111000000001086e-06, 2.7639999999988507e-06, 2.749999999999281e-06, 3.915999999999642e-06, 6.042000000001241e-06, 2.958000000000821e-06, 4.917000000000116e-06, 3.5419999999987406e-06, 3.401999999999572e-06, 4.666999999999866e-06, 4.917000000000116e-06, 3.236000000000211e-06, 4.152999999999796e-06, 4.222000000001641e-06, 3.8609999999973665e-06, 3.403000000002515e-06, 2.901999999999072e-06, 3.4309999999981855e-06, 5.097000000002516e-06, 5.028000000000671e-06, 4.485999999997992e-06, 3.722000000001141e-06, 5.916999999997646e-06, 4.222000000001641e-06, 3.847000000001266e-06, 4.291999999999491e-06, 3.4029999999990457e-06, 6.235999999999742e-06, 6.181000000000936e-06, 3.651999999999822e-06, 5.028000000000671e-06, 2.4169999999976155e-06, 2.9160000000021113e-06], 'diff': [0, 4.943999999999782e-06, 5.082999999999477e-06, 5.264000000001351e-06, 5.153000000000796e-06, 3.5419999999987406e-06, 6.2779999999984515e-06, 4.222000000001641e-06, 3.5279999999991707e-06, 5.319000000000157e-06, 4.277999999999921e-06, 4.568999999999407e-06, 3.3889999999994758e-06, 6.167000000001366e-06, 6.028000000001671e-06, 5.596999999999547e-06, 3.5279999999991707e-06, 4.111000000001086e-06, 2.7639999999988507e-06, 2.749999999999281e-06, 3.915999999999642e-06, 6.042000000001241e-06, 2.958000000000821e-06, 4.917000000000116e-06, 3.5419999999987406e-06, 3.401999999999572e-06, 4.666999999999866e-06, 4.917000000000116e-06, 3.236000000000211e-06, 4.152999999999796e-06, 4.222000000001641e-06, 3.8609999999973665e-06, 3.403000000002515e-06, 2.901999999999072e-06, 3.4309999999981855e-06, 5.097000000002516e-06, 5.028000000000671e-06, 4.485999999997992e-06, 3.722000000001141e-06, 5.916999999997646e-06, 4.222000000001641e-06, 3.847000000001266e-06, 4.291999999999491e-06, 3.4029999999990457e-06, 6.235999999999742e-06, 6.181000000000936e-06, 3.651999999999822e-06, 5.028000000000671e-06, 2.4169999999976155e-06, 2.9160000000021113e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:37.878" endtime="20201112 09:53:37.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.874" endtime="20201112 09:53:37.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:37.885" level="INFO">${RESULT} = [{'time': 0.018392986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.018403333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:37.882" endtime="20201112 09:53:37.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:37.893" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018392986, 0.018403333, 0.018412028, 0.018422528, 0.018431375, 0.018440222, 0.018449778, 0.018461403, 0.018469042, 0.018474556, 0.018484514, 0.018492389, 0.018499333, 0.018508917, 0.018516...</msg>
<status status="PASS" starttime="20201112 09:53:37.886" endtime="20201112 09:53:37.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.897" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:37.896" endtime="20201112 09:53:37.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.899" level="INFO">VALUE: [4.943999999999782e-06, 5.264000000001351e-06, 3.5419999999987406e-06, 4.222000000001641e-06, 5.319000000000157e-06, 4.568999999999407e-06, 6.167000000001366e-06, 5.596999999999547e-06, 4.111000000001086e-06, 2.749999999999281e-06, 6.042000000001241e-06, 4.917000000000116e-06, 3.401999999999572e-06, 4.917000000000116e-06, 4.152999999999796e-06, 3.8609999999973665e-06, 2.901999999999072e-06, 5.097000000002516e-06, 4.485999999997992e-06, 5.916999999997646e-06, 3.847000000001266e-06, 3.4029999999990457e-06, 6.181000000000936e-06, 5.028000000000671e-06, 2.9160000000021113e-06]</msg>
<status status="PASS" starttime="20201112 09:53:37.898" endtime="20201112 09:53:37.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.894" endtime="20201112 09:53:37.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.902" endtime="20201112 09:53:37.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:37.906" endtime="20201112 09:53:37.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.904" endtime="20201112 09:53:37.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.901" endtime="20201112 09:53:37.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.540" endtime="20201112 09:53:37.927"></status>
</kw>
<msg timestamp="20201112 09:53:37.927" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.935" endtime="20201112 09:53:37.949"></status>
</kw>
<msg timestamp="20201112 09:53:37.949" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.934" endtime="20201112 09:53:37.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.952" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.950" endtime="20201112 09:53:37.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.953" endtime="20201112 09:53:37.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.931" endtime="20201112 09:53:37.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.929" endtime="20201112 09:53:37.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.962" endtime="20201112 09:53:38.225"></status>
</kw>
<msg timestamp="20201112 09:53:38.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018199653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018202458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:37.960" endtime="20201112 09:53:38.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018199653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018202458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:38.229" endtime="20201112 09:53:38.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.234" endtime="20201112 09:53:38.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.958" endtime="20201112 09:53:38.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.956" endtime="20201112 09:53:38.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.241" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:38.240" endtime="20201112 09:53:38.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.244" level="INFO">VALUE: [{'time': 0.018199653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018202458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8050000000015562e-06, 'source_diff': 2.8050000000015562e-06}, {'time': 0.018206903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.018209792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.018214181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.018220222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.018223944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.018226694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.018229583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.0182335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018238097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.018244347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018248847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.018251528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.018256514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.018261917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402999999997576e-06, 'source_diff': 5.402999999997576e-06}, {'time': 0.018266097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.018272069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018277153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.08400000000242e-06, 'source_diff': 5.08400000000242e-06}, {'time': 0.018281875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.018285361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018289639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018293306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.018297903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.018302069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018304542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.018309139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018312139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0000000000030003e-06, 'source_diff': 3.0000000000030003e-06}, {'time': 0.018315153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0139999999991007e-06, 'source_diff': 3.0139999999991007e-06}, {'time': 0.018319264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.018322292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.018327167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.01833125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.018334625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018340667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.018346111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4439999999968125e-06, 'source_diff': 5.4439999999968125e-06}, {'time': 0.018350278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.167000000002835e-06, 'source_diff': 4.167000000002835e-06}, {'time': 0.018356181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.018360722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.018366014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018371986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018375778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.018381708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.930000000001212e-06, 'source_diff': 5.930000000001212e-06}, {'time': 0.018384597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.018389708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.018395111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402999999997576e-06, 'source_diff': 5.402999999997576e-06}, {'time': 0.018397972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018403153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018409042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.018412889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:38.242" endtime="20201112 09:53:38.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.238" endtime="20201112 09:53:38.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:38.260" level="INFO">${debug-compressed} = {'time': [0.018199653, 0.018202458, 0.018206903, 0.018209792, 0.018214181, 0.018220222, 0.018223944, 0.018226694, 0.018229583, 0.0182335, 0.018238097, 0.018244347, 0.018248847, 0.018251528, 0.01825651...</msg>
<status status="PASS" starttime="20201112 09:53:38.247" endtime="20201112 09:53:38.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.264" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:38.263" endtime="20201112 09:53:38.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.267" level="INFO">VALUE: {'time': [0.018199653, 0.018202458, 0.018206903, 0.018209792, 0.018214181, 0.018220222, 0.018223944, 0.018226694, 0.018229583, 0.0182335, 0.018238097, 0.018244347, 0.018248847, 0.018251528, 0.018256514, 0.018261917, 0.018266097, 0.018272069, 0.018277153, 0.018281875, 0.018285361, 0.018289639, 0.018293306, 0.018297903, 0.018302069, 0.018304542, 0.018309139, 0.018312139, 0.018315153, 0.018319264, 0.018322292, 0.018327167, 0.01833125, 0.018334625, 0.018340667, 0.018346111, 0.018350278, 0.018356181, 0.018360722, 0.018366014, 0.018371986, 0.018375778, 0.018381708, 0.018384597, 0.018389708, 0.018395111, 0.018397972, 0.018403153, 0.018409042, 0.018412889], 'sourceeventsource_diff': [0, 2.8050000000015562e-06, 4.4449999999987555e-06, 2.8889999999989757e-06, 4.389000000000476e-06, 6.041000000001767e-06, 3.7219999999976716e-06, 2.7500000000027502e-06, 2.8889999999989757e-06, 3.916999999999116e-06, 4.597000000002016e-06, 6.249999999999312e-06, 4.4999999999975615e-06, 2.681000000000905e-06, 4.986000000001961e-06, 5.402999999997576e-06, 4.179999999999462e-06, 5.971999999999922e-06, 5.08400000000242e-06, 4.721999999998672e-06, 3.486000000000461e-06, 4.277999999999921e-06, 3.6669999999988656e-06, 4.597000000002016e-06, 4.165999999999892e-06, 2.4729999999993646e-06, 4.596999999998547e-06, 3.0000000000030003e-06, 3.0139999999991007e-06, 4.1109999999976166e-06, 3.02800000000214e-06, 4.8749999999979365e-06, 4.083000000001946e-06, 3.374999999999906e-06, 6.042000000001241e-06, 5.4439999999968125e-06, 4.167000000002835e-06, 5.9029999999980765e-06, 4.541000000000267e-06, 5.292000000000491e-06, 5.971999999999922e-06, 3.7919999999989906e-06, 5.930000000001212e-06, 2.8889999999989757e-06, 5.111000000002086e-06, 5.402999999997576e-06, 2.860999999999836e-06, 5.180999999999936e-06, 5.889000000001976e-06, 3.847000000001266e-06], 'diff': [0, 2.8050000000015562e-06, 4.4449999999987555e-06, 2.8889999999989757e-06, 4.389000000000476e-06, 6.041000000001767e-06, 3.7219999999976716e-06, 2.7500000000027502e-06, 2.8889999999989757e-06, 3.916999999999116e-06, 4.597000000002016e-06, 6.249999999999312e-06, 4.4999999999975615e-06, 2.681000000000905e-06, 4.986000000001961e-06, 5.402999999997576e-06, 4.179999999999462e-06, 5.971999999999922e-06, 5.08400000000242e-06, 4.721999999998672e-06, 3.486000000000461e-06, 4.277999999999921e-06, 3.6669999999988656e-06, 4.597000000002016e-06, 4.165999999999892e-06, 2.4729999999993646e-06, 4.596999999998547e-06, 3.0000000000030003e-06, 3.0139999999991007e-06, 4.1109999999976166e-06, 3.02800000000214e-06, 4.8749999999979365e-06, 4.083000000001946e-06, 3.374999999999906e-06, 6.042000000001241e-06, 5.4439999999968125e-06, 4.167000000002835e-06, 5.9029999999980765e-06, 4.541000000000267e-06, 5.292000000000491e-06, 5.971999999999922e-06, 3.7919999999989906e-06, 5.930000000001212e-06, 2.8889999999989757e-06, 5.111000000002086e-06, 5.402999999997576e-06, 2.860999999999836e-06, 5.180999999999936e-06, 5.889000000001976e-06, 3.847000000001266e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:38.265" endtime="20201112 09:53:38.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.261" endtime="20201112 09:53:38.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:38.271" level="INFO">${RESULT} = [{'time': 0.018202458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8050000000015562e-06, 'source_diff': 2.8050000000015562e-06}, {'time': 0.018209792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:38.268" endtime="20201112 09:53:38.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:38.279" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018202458, 0.018209792, 0.018220222, 0.018226694, 0.0182335, 0.018244347, 0.018251528, 0.018261917, 0.018272069, 0.018281875, 0.018289639, 0.018297903, 0.018304542, 0.018312139, 0.01831926...</msg>
<status status="PASS" starttime="20201112 09:53:38.272" endtime="20201112 09:53:38.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.284" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:38.283" endtime="20201112 09:53:38.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.286" level="INFO">VALUE: [2.8050000000015562e-06, 2.8889999999989757e-06, 6.041000000001767e-06, 2.7500000000027502e-06, 3.916999999999116e-06, 6.249999999999312e-06, 2.681000000000905e-06, 5.402999999997576e-06, 5.971999999999922e-06, 4.721999999998672e-06, 4.277999999999921e-06, 4.597000000002016e-06, 2.4729999999993646e-06, 3.0000000000030003e-06, 4.1109999999976166e-06, 4.8749999999979365e-06, 3.374999999999906e-06, 5.4439999999968125e-06, 5.9029999999980765e-06, 5.292000000000491e-06, 3.7919999999989906e-06, 2.8889999999989757e-06, 5.402999999997576e-06, 5.180999999999936e-06, 3.847000000001266e-06]</msg>
<status status="PASS" starttime="20201112 09:53:38.285" endtime="20201112 09:53:38.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.280" endtime="20201112 09:53:38.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.289" endtime="20201112 09:53:38.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:38.293" endtime="20201112 09:53:38.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.291" endtime="20201112 09:53:38.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.287" endtime="20201112 09:53:38.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.928" endtime="20201112 09:53:38.313"></status>
</kw>
<msg timestamp="20201112 09:53:38.314" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.321" endtime="20201112 09:53:38.335"></status>
</kw>
<msg timestamp="20201112 09:53:38.336" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:38.320" endtime="20201112 09:53:38.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.338" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:38.337" endtime="20201112 09:53:38.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.339" endtime="20201112 09:53:38.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.317" endtime="20201112 09:53:38.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.315" endtime="20201112 09:53:38.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.348" endtime="20201112 09:53:38.612"></status>
</kw>
<msg timestamp="20201112 09:53:38.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017379708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017385056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:38.346" endtime="20201112 09:53:38.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017379708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017385056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:38.615" endtime="20201112 09:53:38.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.621" endtime="20201112 09:53:38.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.344" endtime="20201112 09:53:38.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.342" endtime="20201112 09:53:38.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.627" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:38.626" endtime="20201112 09:53:38.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.631" level="INFO">VALUE: [{'time': 0.017379708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017385056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.34799999999877e-06, 'source_diff': 5.34799999999877e-06}, {'time': 0.017388972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.017393667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.695000000002475e-06, 'source_diff': 4.695000000002475e-06}, {'time': 0.017396986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3189999999981568e-06, 'source_diff': 3.3189999999981568e-06}, {'time': 0.017403167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.017408125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.017413347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.017416333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.017419736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.403000000002515e-06, 'source_diff': 3.403000000002515e-06}, {'time': 0.017425181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.017428569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.388000000000002e-06, 'source_diff': 3.388000000000002e-06}, {'time': 0.017431042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.017437097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.017440306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2090000000005448e-06, 'source_diff': 3.2090000000005448e-06}, {'time': 0.017446611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.017452875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.017457986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.017462139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.017468306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.017474111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.017477931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8199999999981304e-06, 'source_diff': 3.8199999999981304e-06}, {'time': 0.017480875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.944000000001251e-06, 'source_diff': 2.944000000001251e-06}, {'time': 0.017484278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017486639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.017490472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.833000000001696e-06, 'source_diff': 3.833000000001696e-06}, {'time': 0.017492889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.017497736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017502403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017507431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.017513292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017517639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.017521167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017525972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.01753175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.017535472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017540694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.017545431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.737000000001185e-06, 'source_diff': 4.737000000001185e-06}, {'time': 0.017550903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017554875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.017559722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017565333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017571556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.017575472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9160000000031114e-06, 'source_diff': 3.9160000000031114e-06}, {'time': 0.017579319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.017585542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.017591083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.017594431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.017598597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.017604403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:38.628" endtime="20201112 09:53:38.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.624" endtime="20201112 09:53:38.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:38.757" level="INFO">${debug-compressed} = {'time': [0.017379708, 0.017385056, 0.017388972, 0.017393667, 0.017396986, 0.017403167, 0.017408125, 0.017413347, 0.017416333, 0.017419736, 0.017425181, 0.017428569, 0.017431042, 0.017437097, 0.017440...</msg>
<status status="PASS" starttime="20201112 09:53:38.743" endtime="20201112 09:53:38.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.761" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:38.760" endtime="20201112 09:53:38.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.764" level="INFO">VALUE: {'time': [0.017379708, 0.017385056, 0.017388972, 0.017393667, 0.017396986, 0.017403167, 0.017408125, 0.017413347, 0.017416333, 0.017419736, 0.017425181, 0.017428569, 0.017431042, 0.017437097, 0.017440306, 0.017446611, 0.017452875, 0.017457986, 0.017462139, 0.017468306, 0.017474111, 0.017477931, 0.017480875, 0.017484278, 0.017486639, 0.017490472, 0.017492889, 0.017497736, 0.017502403, 0.017507431, 0.017513292, 0.017517639, 0.017521167, 0.017525972, 0.01753175, 0.017535472, 0.017540694, 0.017545431, 0.017550903, 0.017554875, 0.017559722, 0.017565333, 0.017571556, 0.017575472, 0.017579319, 0.017585542, 0.017591083, 0.017594431, 0.017598597, 0.017604403], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 5.34799999999877e-06, 3.915999999999642e-06, 4.695000000002475e-06, 3.3189999999981568e-06, 6.181000000000936e-06, 4.957999999999352e-06, 5.221999999999172e-06, 2.985999999999961e-06, 3.403000000002515e-06, 5.444999999999756e-06, 3.388000000000002e-06, 2.4729999999993646e-06, 6.054999999997868e-06, 3.2090000000005448e-06, 6.305000000001587e-06, 6.2639999999988816e-06, 5.111000000002086e-06, 4.152999999999796e-06, 6.166999999997896e-06, 5.805000000001087e-06, 3.8199999999981304e-06, 2.944000000001251e-06, 3.4029999999990457e-06, 2.360999999999336e-06, 3.833000000001696e-06, 2.417000000001085e-06, 4.846999999998797e-06, 4.666999999999866e-06, 5.028000000000671e-06, 5.860999999999367e-06, 4.347000000001766e-06, 3.5279999999991707e-06, 4.805000000000087e-06, 5.7779999999979514e-06, 3.722000000001141e-06, 5.221999999999172e-06, 4.737000000001185e-06, 5.471999999999422e-06, 3.972000000001391e-06, 4.846999999998797e-06, 5.610999999999117e-06, 6.2229999999996455e-06, 3.9160000000031114e-06, 3.846999999997797e-06, 6.2229999999996455e-06, 5.541000000001267e-06, 3.3480000000002397e-06, 4.165999999999892e-06, 5.806000000000561e-06], 'diff': [0, 5.34799999999877e-06, 3.915999999999642e-06, 4.695000000002475e-06, 3.3189999999981568e-06, 6.181000000000936e-06, 4.957999999999352e-06, 5.221999999999172e-06, 2.985999999999961e-06, 3.403000000002515e-06, 5.444999999999756e-06, 3.388000000000002e-06, 2.4729999999993646e-06, 6.054999999997868e-06, 3.2090000000005448e-06, 6.305000000001587e-06, 6.2639999999988816e-06, 5.111000000002086e-06, 4.152999999999796e-06, 6.166999999997896e-06, 5.805000000001087e-06, 3.8199999999981304e-06, 2.944000000001251e-06, 3.4029999999990457e-06, 2.360999999999336e-06, 3.833000000001696e-06, 2.417000000001085e-06, 4.846999999998797e-06, 4.666999999999866e-06, 5.028000000000671e-06, 5.860999999999367e-06, 4.347000000001766e-06, 3.5279999999991707e-06, 4.805000000000087e-06, 5.7779999999979514e-06, 3.722000000001141e-06, 5.221999999999172e-06, 4.737000000001185e-06, 5.471999999999422e-06, 3.972000000001391e-06, 4.846999999998797e-06, 5.610999999999117e-06, 6.2229999999996455e-06, 3.9160000000031114e-06, 3.846999999997797e-06, 6.2229999999996455e-06, 5.541000000001267e-06, 3.3480000000002397e-06, 4.165999999999892e-06, 5.806000000000561e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:38.762" endtime="20201112 09:53:38.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.758" endtime="20201112 09:53:38.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:38.768" level="INFO">${RESULT} = [{'time': 0.017385056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.34799999999877e-06, 'source_diff': 5.34799999999877e-06}, {'time': 0.017393667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:38.766" endtime="20201112 09:53:38.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:38.776" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017385056, 0.017393667, 0.017403167, 0.017413347, 0.017419736, 0.017428569, 0.017437097, 0.017446611, 0.017457986, 0.017468306, 0.017477931, 0.017484278, 0.017490472, 0.017497736, 0.017507...</msg>
<status status="PASS" starttime="20201112 09:53:38.769" endtime="20201112 09:53:38.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.780" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:38.779" endtime="20201112 09:53:38.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.783" level="INFO">VALUE: [5.34799999999877e-06, 4.695000000002475e-06, 6.181000000000936e-06, 5.221999999999172e-06, 3.403000000002515e-06, 3.388000000000002e-06, 6.054999999997868e-06, 6.305000000001587e-06, 5.111000000002086e-06, 6.166999999997896e-06, 3.8199999999981304e-06, 3.4029999999990457e-06, 3.833000000001696e-06, 4.846999999998797e-06, 5.028000000000671e-06, 4.347000000001766e-06, 4.805000000000087e-06, 3.722000000001141e-06, 4.737000000001185e-06, 3.972000000001391e-06, 5.610999999999117e-06, 3.9160000000031114e-06, 6.2229999999996455e-06, 3.3480000000002397e-06, 5.806000000000561e-06]</msg>
<status status="PASS" starttime="20201112 09:53:38.781" endtime="20201112 09:53:38.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.777" endtime="20201112 09:53:38.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.786" endtime="20201112 09:53:38.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:38.789" endtime="20201112 09:53:38.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.788" endtime="20201112 09:53:38.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.784" endtime="20201112 09:53:38.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.314" endtime="20201112 09:53:38.810"></status>
</kw>
<msg timestamp="20201112 09:53:38.810" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.818" endtime="20201112 09:53:38.832"></status>
</kw>
<msg timestamp="20201112 09:53:38.832" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:38.816" endtime="20201112 09:53:38.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.835" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:38.833" endtime="20201112 09:53:38.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.836" endtime="20201112 09:53:38.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.814" endtime="20201112 09:53:38.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.812" endtime="20201112 09:53:38.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.844" endtime="20201112 09:53:39.109"></status>
</kw>
<msg timestamp="20201112 09:53:39.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01736775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017371153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:38.843" endtime="20201112 09:53:39.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01736775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017371153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:39.112" endtime="20201112 09:53:39.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.117" endtime="20201112 09:53:39.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.840" endtime="20201112 09:53:39.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.839" endtime="20201112 09:53:39.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.125" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:39.124" endtime="20201112 09:53:39.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.128" level="INFO">VALUE: [{'time': 0.01736775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017371153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017375944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.017379847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.017382639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.017385625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.017389333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.017393806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.473000000001365e-06, 'source_diff': 4.473000000001365e-06}, {'time': 0.017399986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.017403083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017409236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.017413972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.017418625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017423111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.017427833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017431875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.017436278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017442083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.01744725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.017451986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.017457931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.017461931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.017464694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.762999999999377e-06, 'source_diff': 2.762999999999377e-06}, {'time': 0.017470972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.017473667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6949999999970053e-06, 'source_diff': 2.6949999999970053e-06}, {'time': 0.017479472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.017483736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.017486458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017489236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.017494833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.597000000003016e-06, 'source_diff': 5.597000000003016e-06}, {'time': 0.0174985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.017503556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.017509389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.017515486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.017521389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.017523792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.017527417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.017532222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.017535986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.017540611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.017546167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.017552042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.017558139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.017561444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.304999999998587e-06, 'source_diff': 3.304999999998587e-06}, {'time': 0.017564653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2090000000005448e-06, 'source_diff': 3.2090000000005448e-06}, {'time': 0.017569375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.017574236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.017576708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017581056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.017586403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:39.126" endtime="20201112 09:53:39.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.121" endtime="20201112 09:53:39.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:39.143" level="INFO">${debug-compressed} = {'time': [0.01736775, 0.017371153, 0.017375944, 0.017379847, 0.017382639, 0.017385625, 0.017389333, 0.017393806, 0.017399986, 0.017403083, 0.017409236, 0.017413972, 0.017418625, 0.017423111, 0.0174278...</msg>
<status status="PASS" starttime="20201112 09:53:39.131" endtime="20201112 09:53:39.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.147" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:39.146" endtime="20201112 09:53:39.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.150" level="INFO">VALUE: {'time': [0.01736775, 0.017371153, 0.017375944, 0.017379847, 0.017382639, 0.017385625, 0.017389333, 0.017393806, 0.017399986, 0.017403083, 0.017409236, 0.017413972, 0.017418625, 0.017423111, 0.017427833, 0.017431875, 0.017436278, 0.017442083, 0.01744725, 0.017451986, 0.017457931, 0.017461931, 0.017464694, 0.017470972, 0.017473667, 0.017479472, 0.017483736, 0.017486458, 0.017489236, 0.017494833, 0.0174985, 0.017503556, 0.017509389, 0.017515486, 0.017521389, 0.017523792, 0.017527417, 0.017532222, 0.017535986, 0.017540611, 0.017546167, 0.017552042, 0.017558139, 0.017561444, 0.017564653, 0.017569375, 0.017574236, 0.017576708, 0.017581056, 0.017586403], 'sourceeventsource_diff': [0, 3.4029999999990457e-06, 4.791000000000517e-06, 3.902999999999546e-06, 2.7919999999979905e-06, 2.985999999999961e-06, 3.708000000001571e-06, 4.473000000001365e-06, 6.179999999997993e-06, 3.097000000000516e-06, 6.153000000001796e-06, 4.735999999998242e-06, 4.653000000000296e-06, 4.486000000001461e-06, 4.721999999998672e-06, 4.041999999999241e-06, 4.403000000000046e-06, 5.805000000001087e-06, 5.167000000000366e-06, 4.735999999998242e-06, 5.945000000000256e-06, 4.000000000000531e-06, 2.762999999999377e-06, 6.278000000001921e-06, 2.6949999999970053e-06, 5.805000000001087e-06, 4.264000000000351e-06, 2.722000000000141e-06, 2.7779999999984206e-06, 5.597000000003016e-06, 3.6669999999988656e-06, 5.055999999999811e-06, 5.833000000000227e-06, 6.097000000000047e-06, 5.9029999999980765e-06, 2.403000000001515e-06, 3.625000000000156e-06, 4.805000000000087e-06, 3.763999999999851e-06, 4.625000000001156e-06, 5.556000000000311e-06, 5.874999999998937e-06, 6.097000000000047e-06, 3.304999999998587e-06, 3.2090000000005448e-06, 4.722000000002141e-06, 4.860999999998367e-06, 2.471999999999891e-06, 4.34800000000124e-06, 5.346999999999297e-06], 'diff': [0, 3.4029999999990457e-06, 4.791000000000517e-06, 3.902999999999546e-06, 2.7919999999979905e-06, 2.985999999999961e-06, 3.708000000001571e-06, 4.473000000001365e-06, 6.179999999997993e-06, 3.097000000000516e-06, 6.153000000001796e-06, 4.735999999998242e-06, 4.653000000000296e-06, 4.486000000001461e-06, 4.721999999998672e-06, 4.041999999999241e-06, 4.403000000000046e-06, 5.805000000001087e-06, 5.167000000000366e-06, 4.735999999998242e-06, 5.945000000000256e-06, 4.000000000000531e-06, 2.762999999999377e-06, 6.278000000001921e-06, 2.6949999999970053e-06, 5.805000000001087e-06, 4.264000000000351e-06, 2.722000000000141e-06, 2.7779999999984206e-06, 5.597000000003016e-06, 3.6669999999988656e-06, 5.055999999999811e-06, 5.833000000000227e-06, 6.097000000000047e-06, 5.9029999999980765e-06, 2.403000000001515e-06, 3.625000000000156e-06, 4.805000000000087e-06, 3.763999999999851e-06, 4.625000000001156e-06, 5.556000000000311e-06, 5.874999999998937e-06, 6.097000000000047e-06, 3.304999999998587e-06, 3.2090000000005448e-06, 4.722000000002141e-06, 4.860999999998367e-06, 2.471999999999891e-06, 4.34800000000124e-06, 5.346999999999297e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:39.148" endtime="20201112 09:53:39.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.144" endtime="20201112 09:53:39.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:39.154" level="INFO">${RESULT} = [{'time': 0.017371153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017379847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:39.152" endtime="20201112 09:53:39.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:39.162" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017371153, 0.017379847, 0.017385625, 0.017393806, 0.017403083, 0.017413972, 0.017423111, 0.017431875, 0.017442083, 0.017451986, 0.017461931, 0.017470972, 0.017479472, 0.017486458, 0.017494...</msg>
<status status="PASS" starttime="20201112 09:53:39.155" endtime="20201112 09:53:39.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.166" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:39.165" endtime="20201112 09:53:39.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.169" level="INFO">VALUE: [3.4029999999990457e-06, 3.902999999999546e-06, 2.985999999999961e-06, 4.473000000001365e-06, 3.097000000000516e-06, 4.735999999998242e-06, 4.486000000001461e-06, 4.041999999999241e-06, 5.805000000001087e-06, 4.735999999998242e-06, 4.000000000000531e-06, 6.278000000001921e-06, 5.805000000001087e-06, 2.722000000000141e-06, 5.597000000003016e-06, 5.055999999999811e-06, 6.097000000000047e-06, 2.403000000001515e-06, 4.805000000000087e-06, 4.625000000001156e-06, 5.874999999998937e-06, 3.304999999998587e-06, 4.722000000002141e-06, 2.471999999999891e-06, 5.346999999999297e-06]</msg>
<status status="PASS" starttime="20201112 09:53:39.167" endtime="20201112 09:53:39.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.163" endtime="20201112 09:53:39.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.172" endtime="20201112 09:53:39.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:39.175" endtime="20201112 09:53:39.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.174" endtime="20201112 09:53:39.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.170" endtime="20201112 09:53:39.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.811" endtime="20201112 09:53:39.196"></status>
</kw>
<msg timestamp="20201112 09:53:39.196" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.204" endtime="20201112 09:53:39.218"></status>
</kw>
<msg timestamp="20201112 09:53:39.219" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.203" endtime="20201112 09:53:39.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.221" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.220" endtime="20201112 09:53:39.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.222" endtime="20201112 09:53:39.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.200" endtime="20201112 09:53:39.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.198" endtime="20201112 09:53:39.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.232" endtime="20201112 09:53:39.514"></status>
</kw>
<msg timestamp="20201112 09:53:39.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017561181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:39.231" endtime="20201112 09:53:39.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017561181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:39.517" endtime="20201112 09:53:39.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.522" endtime="20201112 09:53:39.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.227" endtime="20201112 09:53:39.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.225" endtime="20201112 09:53:39.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.529" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:39.528" endtime="20201112 09:53:39.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.532" level="INFO">VALUE: [{'time': 0.017558583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017561181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5979999999994896e-06, 'source_diff': 2.5979999999994896e-06}, {'time': 0.017565597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.017571181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.58400000000292e-06, 'source_diff': 5.58400000000292e-06}, {'time': 0.017576611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.429999999997243e-06, 'source_diff': 5.429999999997243e-06}, {'time': 0.017580653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.017585611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.017590056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.017594875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.017600972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.017604319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.017608806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.487000000000935e-06, 'source_diff': 4.487000000000935e-06}, {'time': 0.017611667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017615014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.017619222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.017622139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.017624569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4300000000011812e-06, 'source_diff': 2.4300000000011812e-06}, {'time': 0.017627903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3340000000006698e-06, 'source_diff': 3.3340000000006698e-06}, {'time': 0.017631569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.665999999999392e-06, 'source_diff': 3.665999999999392e-06}, {'time': 0.017635222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017639097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017643181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.017646597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.017652819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017655167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.017659708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017665694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.017670528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.83400000000217e-06, 'source_diff': 4.83400000000217e-06}, {'time': 0.017675944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.415999999997673e-06, 'source_diff': 5.415999999997673e-06}, {'time': 0.017679986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.017683528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.01768625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017692222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017695694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017700542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84799999999827e-06, 'source_diff': 4.84799999999827e-06}, {'time': 0.017705083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017709375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.017713347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.017718514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.017723556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017727333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.017731056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7229999999971453e-06, 'source_diff': 3.7229999999971453e-06}, {'time': 0.017735097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.017738194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017744236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.017749208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.017755028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.017758972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.944000000002251e-06, 'source_diff': 3.944000000002251e-06}, {'time': 0.017762639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.017767736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:39.530" endtime="20201112 09:53:39.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.526" endtime="20201112 09:53:39.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:39.547" level="INFO">${debug-compressed} = {'time': [0.017558583, 0.017561181, 0.017565597, 0.017571181, 0.017576611, 0.017580653, 0.017585611, 0.017590056, 0.017594875, 0.017600972, 0.017604319, 0.017608806, 0.017611667, 0.017615014, 0.017619...</msg>
<status status="PASS" starttime="20201112 09:53:39.535" endtime="20201112 09:53:39.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.551" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:39.550" endtime="20201112 09:53:39.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.554" level="INFO">VALUE: {'time': [0.017558583, 0.017561181, 0.017565597, 0.017571181, 0.017576611, 0.017580653, 0.017585611, 0.017590056, 0.017594875, 0.017600972, 0.017604319, 0.017608806, 0.017611667, 0.017615014, 0.017619222, 0.017622139, 0.017624569, 0.017627903, 0.017631569, 0.017635222, 0.017639097, 0.017643181, 0.017646597, 0.017652819, 0.017655167, 0.017659708, 0.017665694, 0.017670528, 0.017675944, 0.017679986, 0.017683528, 0.01768625, 0.017692222, 0.017695694, 0.017700542, 0.017705083, 0.017709375, 0.017713347, 0.017718514, 0.017723556, 0.017727333, 0.017731056, 0.017735097, 0.017738194, 0.017744236, 0.017749208, 0.017755028, 0.017758972, 0.017762639, 0.017767736], 'sourceeventsource_diff': [0, 2.5979999999994896e-06, 4.416000000000142e-06, 5.58400000000292e-06, 5.429999999997243e-06, 4.04200000000271e-06, 4.957999999999352e-06, 4.4449999999987555e-06, 4.818999999999657e-06, 6.097000000000047e-06, 3.347000000000766e-06, 4.487000000000935e-06, 2.860999999999836e-06, 3.3469999999972966e-06, 4.208000000002071e-06, 2.9169999999981155e-06, 2.4300000000011812e-06, 3.3340000000006698e-06, 3.665999999999392e-06, 3.6529999999992957e-06, 3.875000000000406e-06, 4.08400000000142e-06, 3.415999999999142e-06, 6.222000000000172e-06, 2.3479999999992396e-06, 4.541000000000267e-06, 5.985999999999492e-06, 4.83400000000217e-06, 5.415999999997673e-06, 4.04200000000271e-06, 3.5419999999987406e-06, 2.722000000000141e-06, 5.971999999999922e-06, 3.472000000000891e-06, 4.84799999999827e-06, 4.541000000000267e-06, 4.291999999999491e-06, 3.972000000001391e-06, 5.167000000000366e-06, 5.042000000000241e-06, 3.776999999999947e-06, 3.7229999999971453e-06, 4.040999999999767e-06, 3.097000000000516e-06, 6.042000000001241e-06, 4.971999999998922e-06, 5.820000000000131e-06, 3.944000000002251e-06, 3.6669999999988656e-06, 5.096999999999047e-06], 'diff': [0, 2.5979999999994896e-06, 4.416000000000142e-06, 5.58400000000292e-06, 5.429999999997243e-06, 4.04200000000271e-06, 4.957999999999352e-06, 4.4449999999987555e-06, 4.818999999999657e-06, 6.097000000000047e-06, 3.347000000000766e-06, 4.487000000000935e-06, 2.860999999999836e-06, 3.3469999999972966e-06, 4.208000000002071e-06, 2.9169999999981155e-06, 2.4300000000011812e-06, 3.3340000000006698e-06, 3.665999999999392e-06, 3.6529999999992957e-06, 3.875000000000406e-06, 4.08400000000142e-06, 3.415999999999142e-06, 6.222000000000172e-06, 2.3479999999992396e-06, 4.541000000000267e-06, 5.985999999999492e-06, 4.83400000000217e-06, 5.415999999997673e-06, 4.04200000000271e-06, 3.5419999999987406e-06, 2.722000000000141e-06, 5.971999999999922e-06, 3.472000000000891e-06, 4.84799999999827e-06, 4.541000000000267e-06, 4.291999999999491e-06, 3.972000000001391e-06, 5.167000000000366e-06, 5.042000000000241e-06, 3.776999999999947e-06, 3.7229999999971453e-06, 4.040999999999767e-06, 3.097000000000516e-06, 6.042000000001241e-06, 4.971999999998922e-06, 5.820000000000131e-06, 3.944000000002251e-06, 3.6669999999988656e-06, 5.096999999999047e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:39.552" endtime="20201112 09:53:39.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.548" endtime="20201112 09:53:39.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:39.559" level="INFO">${RESULT} = [{'time': 0.017561181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5979999999994896e-06, 'source_diff': 2.5979999999994896e-06}, {'time': 0.017571181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:39.556" endtime="20201112 09:53:39.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:39.567" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017561181, 0.017571181, 0.017580653, 0.017590056, 0.017600972, 0.017608806, 0.017615014, 0.017622139, 0.017627903, 0.017635222, 0.017643181, 0.017652819, 0.017659708, 0.017670528, 0.017679...</msg>
<status status="PASS" starttime="20201112 09:53:39.560" endtime="20201112 09:53:39.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.571" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:39.570" endtime="20201112 09:53:39.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.573" level="INFO">VALUE: [2.5979999999994896e-06, 5.58400000000292e-06, 4.04200000000271e-06, 4.4449999999987555e-06, 6.097000000000047e-06, 4.487000000000935e-06, 3.3469999999972966e-06, 2.9169999999981155e-06, 3.3340000000006698e-06, 3.6529999999992957e-06, 4.08400000000142e-06, 6.222000000000172e-06, 4.541000000000267e-06, 4.83400000000217e-06, 4.04200000000271e-06, 2.722000000000141e-06, 3.472000000000891e-06, 4.541000000000267e-06, 3.972000000001391e-06, 5.042000000000241e-06, 3.7229999999971453e-06, 3.097000000000516e-06, 4.971999999998922e-06, 3.944000000002251e-06, 5.096999999999047e-06]</msg>
<status status="PASS" starttime="20201112 09:53:39.572" endtime="20201112 09:53:39.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.567" endtime="20201112 09:53:39.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.576" endtime="20201112 09:53:39.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:39.580" endtime="20201112 09:53:39.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.578" endtime="20201112 09:53:39.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.575" endtime="20201112 09:53:39.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.197" endtime="20201112 09:53:39.601"></status>
</kw>
<msg timestamp="20201112 09:53:39.601" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.608" endtime="20201112 09:53:39.624"></status>
</kw>
<msg timestamp="20201112 09:53:39.624" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.607" endtime="20201112 09:53:39.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.627" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.625" endtime="20201112 09:53:39.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.628" endtime="20201112 09:53:39.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.604" endtime="20201112 09:53:39.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.603" endtime="20201112 09:53:39.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.636" endtime="20201112 09:53:39.900"></status>
</kw>
<msg timestamp="20201112 09:53:39.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018247417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018251528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:39.635" endtime="20201112 09:53:39.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018247417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018251528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:39.903" endtime="20201112 09:53:39.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.908" endtime="20201112 09:53:39.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.632" endtime="20201112 09:53:39.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.631" endtime="20201112 09:53:39.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.915" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:39.914" endtime="20201112 09:53:39.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.918" level="INFO">VALUE: [{'time': 0.018247417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018251528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018257681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.018261986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.018266139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018271472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.018274514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.018279556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018283278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018286014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018289986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.018295653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.018300514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.018304472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.018308319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018312236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018318208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018322306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.018328486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.018333014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018337986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.018343792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.018346722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.018350347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018356264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.018359681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018362153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018367069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.018371972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018376264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018381, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.018384583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5829999999979767e-06, 'source_diff': 3.5829999999979767e-06}, {'time': 0.018389833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.018393347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.018395889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5419999999977405e-06, 'source_diff': 2.5419999999977405e-06}, {'time': 0.018400861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.018406111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.018411069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.018415667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59800000000149e-06, 'source_diff': 4.59800000000149e-06}, {'time': 0.018419583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.018422625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.018425153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.018430583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.018435236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018438583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018442181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5979999999970202e-06, 'source_diff': 3.5979999999970202e-06}, {'time': 0.018445097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9160000000021113e-06, 'source_diff': 2.9160000000021113e-06}, {'time': 0.018451194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018456361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.018459333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:39.916" endtime="20201112 09:53:39.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.911" endtime="20201112 09:53:39.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:39.934" level="INFO">${debug-compressed} = {'time': [0.018247417, 0.018251528, 0.018257681, 0.018261986, 0.018266139, 0.018271472, 0.018274514, 0.018279556, 0.018283278, 0.018286014, 0.018289986, 0.018295653, 0.018300514, 0.018304472, 0.018308...</msg>
<status status="PASS" starttime="20201112 09:53:39.921" endtime="20201112 09:53:39.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.938" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:39.937" endtime="20201112 09:53:39.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.941" level="INFO">VALUE: {'time': [0.018247417, 0.018251528, 0.018257681, 0.018261986, 0.018266139, 0.018271472, 0.018274514, 0.018279556, 0.018283278, 0.018286014, 0.018289986, 0.018295653, 0.018300514, 0.018304472, 0.018308319, 0.018312236, 0.018318208, 0.018322306, 0.018328486, 0.018333014, 0.018337986, 0.018343792, 0.018346722, 0.018350347, 0.018356264, 0.018359681, 0.018362153, 0.018367069, 0.018371972, 0.018376264, 0.018381, 0.018384583, 0.018389833, 0.018393347, 0.018395889, 0.018400861, 0.018406111, 0.018411069, 0.018415667, 0.018419583, 0.018422625, 0.018425153, 0.018430583, 0.018435236, 0.018438583, 0.018442181, 0.018445097, 0.018451194, 0.018456361, 0.018459333], 'sourceeventsource_diff': [0, 4.111000000001086e-06, 6.153000000001796e-06, 4.304999999999587e-06, 4.152999999999796e-06, 5.332999999999727e-06, 3.0419999999982406e-06, 5.042000000000241e-06, 3.722000000001141e-06, 2.735999999999711e-06, 3.972000000001391e-06, 5.666999999997396e-06, 4.861000000001836e-06, 3.957999999998352e-06, 3.847000000001266e-06, 3.916999999999116e-06, 5.971999999999922e-06, 4.09800000000099e-06, 6.180000000001462e-06, 4.528000000000171e-06, 4.971999999998922e-06, 5.806000000000561e-06, 2.929999999998212e-06, 3.625000000000156e-06, 5.917000000001116e-06, 3.4169999999986156e-06, 2.471999999999891e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.291999999999491e-06, 4.736000000001711e-06, 3.5829999999979767e-06, 5.250000000001781e-06, 3.5139999999996008e-06, 2.5419999999977405e-06, 4.972000000002391e-06, 5.2499999999983116e-06, 4.957999999999352e-06, 4.59800000000149e-06, 3.915999999999642e-06, 3.04200000000171e-06, 2.5279999999981706e-06, 5.430000000000712e-06, 4.653000000000296e-06, 3.347000000000766e-06, 3.5979999999970202e-06, 2.9160000000021113e-06, 6.097000000000047e-06, 5.167000000000366e-06, 2.972000000000391e-06], 'diff': [0, 4.111000000001086e-06, 6.153000000001796e-06, 4.304999999999587e-06, 4.152999999999796e-06, 5.332999999999727e-06, 3.0419999999982406e-06, 5.042000000000241e-06, 3.722000000001141e-06, 2.735999999999711e-06, 3.972000000001391e-06, 5.666999999997396e-06, 4.861000000001836e-06, 3.957999999998352e-06, 3.847000000001266e-06, 3.916999999999116e-06, 5.971999999999922e-06, 4.09800000000099e-06, 6.180000000001462e-06, 4.528000000000171e-06, 4.971999999998922e-06, 5.806000000000561e-06, 2.929999999998212e-06, 3.625000000000156e-06, 5.917000000001116e-06, 3.4169999999986156e-06, 2.471999999999891e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.291999999999491e-06, 4.736000000001711e-06, 3.5829999999979767e-06, 5.250000000001781e-06, 3.5139999999996008e-06, 2.5419999999977405e-06, 4.972000000002391e-06, 5.2499999999983116e-06, 4.957999999999352e-06, 4.59800000000149e-06, 3.915999999999642e-06, 3.04200000000171e-06, 2.5279999999981706e-06, 5.430000000000712e-06, 4.653000000000296e-06, 3.347000000000766e-06, 3.5979999999970202e-06, 2.9160000000021113e-06, 6.097000000000047e-06, 5.167000000000366e-06, 2.972000000000391e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:39.939" endtime="20201112 09:53:39.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.935" endtime="20201112 09:53:39.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:39.945" level="INFO">${RESULT} = [{'time': 0.018251528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018261986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:39.943" endtime="20201112 09:53:39.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:39.953" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018251528, 0.018261986, 0.018271472, 0.018279556, 0.018286014, 0.018295653, 0.018304472, 0.018312236, 0.018322306, 0.018333014, 0.018343792, 0.018350347, 0.018359681, 0.018367069, 0.018376...</msg>
<status status="PASS" starttime="20201112 09:53:39.946" endtime="20201112 09:53:39.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.957" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:39.956" endtime="20201112 09:53:39.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.960" level="INFO">VALUE: [4.111000000001086e-06, 4.304999999999587e-06, 5.332999999999727e-06, 5.042000000000241e-06, 2.735999999999711e-06, 5.666999999997396e-06, 3.957999999998352e-06, 3.916999999999116e-06, 4.09800000000099e-06, 4.528000000000171e-06, 5.806000000000561e-06, 3.625000000000156e-06, 3.4169999999986156e-06, 4.916000000000642e-06, 4.291999999999491e-06, 3.5829999999979767e-06, 3.5139999999996008e-06, 4.972000000002391e-06, 4.957999999999352e-06, 3.915999999999642e-06, 2.5279999999981706e-06, 4.653000000000296e-06, 3.5979999999970202e-06, 6.097000000000047e-06, 2.972000000000391e-06]</msg>
<status status="PASS" starttime="20201112 09:53:39.959" endtime="20201112 09:53:39.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.954" endtime="20201112 09:53:39.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.963" endtime="20201112 09:53:39.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:39.966" endtime="20201112 09:53:39.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.965" endtime="20201112 09:53:39.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.962" endtime="20201112 09:53:39.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.601" endtime="20201112 09:53:39.987"></status>
</kw>
<msg timestamp="20201112 09:53:39.987" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.996" endtime="20201112 09:53:40.010"></status>
</kw>
<msg timestamp="20201112 09:53:40.011" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.994" endtime="20201112 09:53:40.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.013" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.012" endtime="20201112 09:53:40.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.014" endtime="20201112 09:53:40.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.991" endtime="20201112 09:53:40.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.989" endtime="20201112 09:53:40.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.023" endtime="20201112 09:53:40.287"></status>
</kw>
<msg timestamp="20201112 09:53:40.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018326264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018330111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.022" endtime="20201112 09:53:40.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018326264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018330111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.290" endtime="20201112 09:53:40.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.296" endtime="20201112 09:53:40.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.019" endtime="20201112 09:53:40.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.017" endtime="20201112 09:53:40.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.302" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:40.301" endtime="20201112 09:53:40.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.306" level="INFO">VALUE: [{'time': 0.018326264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018330111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018334569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.018340194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.018344292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.018350333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.018354611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018358917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.018361958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0410000000022364e-06, 'source_diff': 3.0410000000022364e-06}, {'time': 0.018366056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09799999999752e-06, 'source_diff': 4.09799999999752e-06}, {'time': 0.018370917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.018374125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.018378417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018382819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.018386111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.018390903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018393458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5550000000013062e-06, 'source_diff': 2.5550000000013062e-06}, {'time': 0.018397667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.208999999998075e-06, 'source_diff': 4.208999999998075e-06}, {'time': 0.018403264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018408681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.018413778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018418069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018423792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.723000000002615e-06, 'source_diff': 5.723000000002615e-06}, {'time': 0.018428014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018431361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018435097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018438319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.0184435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018447333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.018450403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.07000000000085e-06, 'source_diff': 3.07000000000085e-06}, {'time': 0.018452778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.018458014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018462361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.018467958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018473181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.223000000002115e-06, 'source_diff': 5.223000000002115e-06}, {'time': 0.018477472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018480028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5559999999973104e-06, 'source_diff': 2.5559999999973104e-06}, {'time': 0.018483986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958000000001821e-06, 'source_diff': 3.958000000001821e-06}, {'time': 0.018490292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.018493625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.018496167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.018498514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.018502486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.018507667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018512181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018514611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4300000000011812e-06, 'source_diff': 2.4300000000011812e-06}, {'time': 0.018517139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.018522736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.597000000003016e-06, 'source_diff': 5.597000000003016e-06}, {'time': 0.018525653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.018531097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:40.303" endtime="20201112 09:53:40.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.299" endtime="20201112 09:53:40.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:40.321" level="INFO">${debug-compressed} = {'time': [0.018326264, 0.018330111, 0.018334569, 0.018340194, 0.018344292, 0.018350333, 0.018354611, 0.018358917, 0.018361958, 0.018366056, 0.018370917, 0.018374125, 0.018378417, 0.018382819, 0.018386...</msg>
<status status="PASS" starttime="20201112 09:53:40.308" endtime="20201112 09:53:40.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.324" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:40.323" endtime="20201112 09:53:40.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.327" level="INFO">VALUE: {'time': [0.018326264, 0.018330111, 0.018334569, 0.018340194, 0.018344292, 0.018350333, 0.018354611, 0.018358917, 0.018361958, 0.018366056, 0.018370917, 0.018374125, 0.018378417, 0.018382819, 0.018386111, 0.018390903, 0.018393458, 0.018397667, 0.018403264, 0.018408681, 0.018413778, 0.018418069, 0.018423792, 0.018428014, 0.018431361, 0.018435097, 0.018438319, 0.0184435, 0.018447333, 0.018450403, 0.018452778, 0.018458014, 0.018462361, 0.018467958, 0.018473181, 0.018477472, 0.018480028, 0.018483986, 0.018490292, 0.018493625, 0.018496167, 0.018498514, 0.018502486, 0.018507667, 0.018512181, 0.018514611, 0.018517139, 0.018522736, 0.018525653, 0.018531097], 'sourceeventsource_diff': [0, 3.847000000001266e-06, 4.457999999998852e-06, 5.625000000002156e-06, 4.09800000000099e-06, 6.040999999998298e-06, 4.277999999999921e-06, 4.305999999999061e-06, 3.0410000000022364e-06, 4.09799999999752e-06, 4.861000000001836e-06, 3.208000000001071e-06, 4.291999999999491e-06, 4.402000000000572e-06, 3.2919999999984906e-06, 4.791999999999991e-06, 2.5550000000013062e-06, 4.208999999998075e-06, 5.596999999999547e-06, 5.417000000000616e-06, 5.096999999999047e-06, 4.291000000000017e-06, 5.723000000002615e-06, 4.221999999998172e-06, 3.347000000000766e-06, 3.736000000000711e-06, 3.222000000000641e-06, 5.180999999999936e-06, 3.832999999998227e-06, 3.07000000000085e-06, 2.3749999999989058e-06, 5.235999999998742e-06, 4.347000000001766e-06, 5.596999999999547e-06, 5.223000000002115e-06, 4.291000000000017e-06, 2.5559999999973104e-06, 3.958000000001821e-06, 6.305999999997591e-06, 3.333000000001196e-06, 2.54200000000121e-06, 2.346999999999766e-06, 3.971999999997922e-06, 5.180999999999936e-06, 4.514000000000601e-06, 2.4300000000011812e-06, 2.5279999999981706e-06, 5.597000000003016e-06, 2.9169999999981155e-06, 5.444000000000282e-06], 'diff': [0, 3.847000000001266e-06, 4.457999999998852e-06, 5.625000000002156e-06, 4.09800000000099e-06, 6.040999999998298e-06, 4.277999999999921e-06, 4.305999999999061e-06, 3.0410000000022364e-06, 4.09799999999752e-06, 4.861000000001836e-06, 3.208000000001071e-06, 4.291999999999491e-06, 4.402000000000572e-06, 3.2919999999984906e-06, 4.791999999999991e-06, 2.5550000000013062e-06, 4.208999999998075e-06, 5.596999999999547e-06, 5.417000000000616e-06, 5.096999999999047e-06, 4.291000000000017e-06, 5.723000000002615e-06, 4.221999999998172e-06, 3.347000000000766e-06, 3.736000000000711e-06, 3.222000000000641e-06, 5.180999999999936e-06, 3.832999999998227e-06, 3.07000000000085e-06, 2.3749999999989058e-06, 5.235999999998742e-06, 4.347000000001766e-06, 5.596999999999547e-06, 5.223000000002115e-06, 4.291000000000017e-06, 2.5559999999973104e-06, 3.958000000001821e-06, 6.305999999997591e-06, 3.333000000001196e-06, 2.54200000000121e-06, 2.346999999999766e-06, 3.971999999997922e-06, 5.180999999999936e-06, 4.514000000000601e-06, 2.4300000000011812e-06, 2.5279999999981706e-06, 5.597000000003016e-06, 2.9169999999981155e-06, 5.444000000000282e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:40.325" endtime="20201112 09:53:40.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.322" endtime="20201112 09:53:40.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:40.332" level="INFO">${RESULT} = [{'time': 0.018330111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018340194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:40.329" endtime="20201112 09:53:40.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:40.340" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018330111, 0.018340194, 0.018350333, 0.018358917, 0.018366056, 0.018374125, 0.018382819, 0.018390903, 0.018397667, 0.018408681, 0.018418069, 0.018428014, 0.018435097, 0.0184435, 0.01845040...</msg>
<status status="PASS" starttime="20201112 09:53:40.333" endtime="20201112 09:53:40.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.344" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:40.343" endtime="20201112 09:53:40.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.346" level="INFO">VALUE: [3.847000000001266e-06, 5.625000000002156e-06, 6.040999999998298e-06, 4.305999999999061e-06, 4.09799999999752e-06, 3.208000000001071e-06, 4.402000000000572e-06, 4.791999999999991e-06, 4.208999999998075e-06, 5.417000000000616e-06, 4.291000000000017e-06, 4.221999999998172e-06, 3.736000000000711e-06, 5.180999999999936e-06, 3.07000000000085e-06, 5.235999999998742e-06, 5.596999999999547e-06, 4.291000000000017e-06, 3.958000000001821e-06, 3.333000000001196e-06, 2.346999999999766e-06, 5.180999999999936e-06, 2.4300000000011812e-06, 5.597000000003016e-06, 5.444000000000282e-06]</msg>
<status status="PASS" starttime="20201112 09:53:40.345" endtime="20201112 09:53:40.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.341" endtime="20201112 09:53:40.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.350" endtime="20201112 09:53:40.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:40.353" endtime="20201112 09:53:40.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.352" endtime="20201112 09:53:40.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.348" endtime="20201112 09:53:40.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.988" endtime="20201112 09:53:40.375"></status>
</kw>
<msg timestamp="20201112 09:53:40.375" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.382" endtime="20201112 09:53:40.397"></status>
</kw>
<msg timestamp="20201112 09:53:40.397" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.381" endtime="20201112 09:53:40.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.400" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.398" endtime="20201112 09:53:40.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.401" endtime="20201112 09:53:40.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.378" endtime="20201112 09:53:40.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.377" endtime="20201112 09:53:40.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.410" endtime="20201112 09:53:40.674"></status>
</kw>
<msg timestamp="20201112 09:53:40.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017374958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017381125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.408" endtime="20201112 09:53:40.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017374958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017381125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.677" endtime="20201112 09:53:40.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.682" endtime="20201112 09:53:40.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.406" endtime="20201112 09:53:40.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.404" endtime="20201112 09:53:40.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.688" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:40.687" endtime="20201112 09:53:40.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.692" level="INFO">VALUE: [{'time': 0.017374958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017381125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.01738625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.017392583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.333000000000727e-06, 'source_diff': 6.333000000000727e-06}, {'time': 0.017397056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.473000000001365e-06, 'source_diff': 4.473000000001365e-06}, {'time': 0.017401222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.017407472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.017412, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017415264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2639999999993508e-06, 'source_diff': 3.2639999999993508e-06}, {'time': 0.01741775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.017421986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.017426333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017429375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.017434264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.017439875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017442597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017447514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017451417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.017457292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.0174635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.017469792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.017476028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.017481611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.017485708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017489819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017495556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.736999999998715e-06, 'source_diff': 5.736999999998715e-06}, {'time': 0.017500944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.388000000002002e-06, 'source_diff': 5.388000000002002e-06}, {'time': 0.017506069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.017511778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.017516194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.017519917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7230000000006147e-06, 'source_diff': 3.7230000000006147e-06}, {'time': 0.0175235, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.017528486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.017532792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.017537194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.017539542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.348000000002709e-06, 'source_diff': 2.348000000002709e-06}, {'time': 0.017542014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017544625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.017547653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.017553625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017557361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017559764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.0175655, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.736000000002711e-06, 'source_diff': 5.736000000002711e-06}, {'time': 0.017570097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017572514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.017574875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.017580792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.017586431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.017590736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.017594583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:40.689" endtime="20201112 09:53:40.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.685" endtime="20201112 09:53:40.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:40.707" level="INFO">${debug-compressed} = {'time': [0.017374958, 0.017381125, 0.01738625, 0.017392583, 0.017397056, 0.017401222, 0.017407472, 0.017412, 0.017415264, 0.01741775, 0.017421986, 0.017426333, 0.017429375, 0.017434264, 0.017439875, ...</msg>
<status status="PASS" starttime="20201112 09:53:40.694" endtime="20201112 09:53:40.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.711" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:40.710" endtime="20201112 09:53:40.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.714" level="INFO">VALUE: {'time': [0.017374958, 0.017381125, 0.01738625, 0.017392583, 0.017397056, 0.017401222, 0.017407472, 0.017412, 0.017415264, 0.01741775, 0.017421986, 0.017426333, 0.017429375, 0.017434264, 0.017439875, 0.017442597, 0.017447514, 0.017451417, 0.017457292, 0.0174635, 0.017469792, 0.017476028, 0.017481611, 0.017485708, 0.017489819, 0.017495556, 0.017500944, 0.017506069, 0.017511778, 0.017516194, 0.017519917, 0.0175235, 0.017528486, 0.017532792, 0.017537194, 0.017539542, 0.017542014, 0.017544625, 0.017547653, 0.017553625, 0.017557361, 0.017559764, 0.0175655, 0.017570097, 0.017572514, 0.017574875, 0.017580792, 0.017586431, 0.017590736, 0.017594583], 'sourceeventsource_diff': [0, 6.167000000001366e-06, 5.1249999999981866e-06, 6.333000000000727e-06, 4.473000000001365e-06, 4.165999999999892e-06, 6.249999999999312e-06, 4.528000000000171e-06, 3.2639999999993508e-06, 2.485999999999461e-06, 4.236000000001211e-06, 4.346999999998297e-06, 3.04200000000171e-06, 4.889000000000976e-06, 5.610999999999117e-06, 2.722000000000141e-06, 4.917000000000116e-06, 3.902999999999546e-06, 5.874999999998937e-06, 6.208000000000602e-06, 6.292000000001491e-06, 6.235999999999742e-06, 5.582999999999977e-06, 4.096999999998047e-06, 4.111000000001086e-06, 5.736999999998715e-06, 5.388000000002002e-06, 5.1249999999981866e-06, 5.7089999999995755e-06, 4.416000000000142e-06, 3.7230000000006147e-06, 3.583000000001446e-06, 4.985999999998492e-06, 4.305999999999061e-06, 4.402000000000572e-06, 2.348000000002709e-06, 2.471999999999891e-06, 2.610999999999586e-06, 3.0279999999986706e-06, 5.971999999999922e-06, 3.736000000000711e-06, 2.4029999999980456e-06, 5.736000000002711e-06, 4.596999999998547e-06, 2.417000000001085e-06, 2.360999999999336e-06, 5.917000000001116e-06, 5.6389999999982565e-06, 4.304999999999587e-06, 3.847000000001266e-06], 'diff': [0, 6.167000000001366e-06, 5.1249999999981866e-06, 6.333000000000727e-06, 4.473000000001365e-06, 4.165999999999892e-06, 6.249999999999312e-06, 4.528000000000171e-06, 3.2639999999993508e-06, 2.485999999999461e-06, 4.236000000001211e-06, 4.346999999998297e-06, 3.04200000000171e-06, 4.889000000000976e-06, 5.610999999999117e-06, 2.722000000000141e-06, 4.917000000000116e-06, 3.902999999999546e-06, 5.874999999998937e-06, 6.208000000000602e-06, 6.292000000001491e-06, 6.235999999999742e-06, 5.582999999999977e-06, 4.096999999998047e-06, 4.111000000001086e-06, 5.736999999998715e-06, 5.388000000002002e-06, 5.1249999999981866e-06, 5.7089999999995755e-06, 4.416000000000142e-06, 3.7230000000006147e-06, 3.583000000001446e-06, 4.985999999998492e-06, 4.305999999999061e-06, 4.402000000000572e-06, 2.348000000002709e-06, 2.471999999999891e-06, 2.610999999999586e-06, 3.0279999999986706e-06, 5.971999999999922e-06, 3.736000000000711e-06, 2.4029999999980456e-06, 5.736000000002711e-06, 4.596999999998547e-06, 2.417000000001085e-06, 2.360999999999336e-06, 5.917000000001116e-06, 5.6389999999982565e-06, 4.304999999999587e-06, 3.847000000001266e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:40.712" endtime="20201112 09:53:40.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.708" endtime="20201112 09:53:40.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:40.718" level="INFO">${RESULT} = [{'time': 0.017381125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.017392583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:40.716" endtime="20201112 09:53:40.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:40.727" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017381125, 0.017392583, 0.017401222, 0.017412, 0.01741775, 0.017426333, 0.017434264, 0.017442597, 0.017451417, 0.0174635, 0.017476028, 0.017485708, 0.017495556, 0.017506069, 0.017516194, 0...</msg>
<status status="PASS" starttime="20201112 09:53:40.719" endtime="20201112 09:53:40.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.731" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:40.730" endtime="20201112 09:53:40.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.733" level="INFO">VALUE: [6.167000000001366e-06, 6.333000000000727e-06, 4.165999999999892e-06, 4.528000000000171e-06, 2.485999999999461e-06, 4.346999999998297e-06, 4.889000000000976e-06, 2.722000000000141e-06, 3.902999999999546e-06, 6.208000000000602e-06, 6.235999999999742e-06, 4.096999999998047e-06, 5.736999999998715e-06, 5.1249999999981866e-06, 4.416000000000142e-06, 3.583000000001446e-06, 4.305999999999061e-06, 2.348000000002709e-06, 2.610999999999586e-06, 5.971999999999922e-06, 2.4029999999980456e-06, 4.596999999998547e-06, 2.360999999999336e-06, 5.6389999999982565e-06, 3.847000000001266e-06]</msg>
<status status="PASS" starttime="20201112 09:53:40.732" endtime="20201112 09:53:40.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.727" endtime="20201112 09:53:40.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.737" endtime="20201112 09:53:40.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:40.740" endtime="20201112 09:53:40.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.738" endtime="20201112 09:53:40.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.735" endtime="20201112 09:53:40.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.375" endtime="20201112 09:53:40.761"></status>
</kw>
<msg timestamp="20201112 09:53:40.761" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.768" endtime="20201112 09:53:40.783"></status>
</kw>
<msg timestamp="20201112 09:53:40.784" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.767" endtime="20201112 09:53:40.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.786" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.785" endtime="20201112 09:53:40.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.787" endtime="20201112 09:53:40.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.764" endtime="20201112 09:53:40.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.763" endtime="20201112 09:53:40.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.796" endtime="20201112 09:53:41.062"></status>
</kw>
<msg timestamp="20201112 09:53:41.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017393597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017398458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.794" endtime="20201112 09:53:41.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017393597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017398458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.065" endtime="20201112 09:53:41.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.070" endtime="20201112 09:53:41.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.792" endtime="20201112 09:53:41.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.790" endtime="20201112 09:53:41.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.076" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:41.075" endtime="20201112 09:53:41.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.080" level="INFO">VALUE: [{'time': 0.017393597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017398458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.017404306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.84800000000274e-06, 'source_diff': 5.84800000000274e-06}, {'time': 0.017409403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017413694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017417042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.017423014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017429181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.017432347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1660000000023614e-06, 'source_diff': 3.1660000000023614e-06}, {'time': 0.017434833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.017437861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.017443833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017447306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.017452847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.017456903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.017460167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2639999999993508e-06, 'source_diff': 3.2639999999993508e-06}, {'time': 0.017463208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0410000000022364e-06, 'source_diff': 3.0410000000022364e-06}, {'time': 0.017465625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.017469542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.917000000002585e-06, 'source_diff': 3.917000000002585e-06}, {'time': 0.017473764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.017477375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.017483583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.017485931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.017490792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.017493194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.017499056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.86199999999884e-06, 'source_diff': 5.86199999999884e-06}, {'time': 0.017501708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6520000000022914e-06, 'source_diff': 2.6520000000022914e-06}, {'time': 0.017506958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.017510167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2090000000005448e-06, 'source_diff': 3.2090000000005448e-06}, {'time': 0.01751275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.017518736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.017521389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.017525583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.194000000002501e-06, 'source_diff': 4.194000000002501e-06}, {'time': 0.017530472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8889999999975065e-06, 'source_diff': 4.8889999999975065e-06}, {'time': 0.017533139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.017535806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.017541403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017544014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.017548764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.017554639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.017558056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.017562528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.017566736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.017570375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.017574083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.01757825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017582097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017587514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416999999997146e-06, 'source_diff': 5.416999999997146e-06}, {'time': 0.017591361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017594778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:41.077" endtime="20201112 09:53:41.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.073" endtime="20201112 09:53:41.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:41.096" level="INFO">${debug-compressed} = {'time': [0.017393597, 0.017398458, 0.017404306, 0.017409403, 0.017413694, 0.017417042, 0.017423014, 0.017429181, 0.017432347, 0.017434833, 0.017437861, 0.017443833, 0.017447306, 0.017452847, 0.017456...</msg>
<status status="PASS" starttime="20201112 09:53:41.082" endtime="20201112 09:53:41.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.100" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:41.099" endtime="20201112 09:53:41.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.103" level="INFO">VALUE: {'time': [0.017393597, 0.017398458, 0.017404306, 0.017409403, 0.017413694, 0.017417042, 0.017423014, 0.017429181, 0.017432347, 0.017434833, 0.017437861, 0.017443833, 0.017447306, 0.017452847, 0.017456903, 0.017460167, 0.017463208, 0.017465625, 0.017469542, 0.017473764, 0.017477375, 0.017483583, 0.017485931, 0.017490792, 0.017493194, 0.017499056, 0.017501708, 0.017506958, 0.017510167, 0.01751275, 0.017518736, 0.017521389, 0.017525583, 0.017530472, 0.017533139, 0.017535806, 0.017541403, 0.017544014, 0.017548764, 0.017554639, 0.017558056, 0.017562528, 0.017566736, 0.017570375, 0.017574083, 0.01757825, 0.017582097, 0.017587514, 0.017591361, 0.017594778], 'sourceeventsource_diff': [0, 4.860999999998367e-06, 5.84800000000274e-06, 5.096999999999047e-06, 4.291000000000017e-06, 3.3480000000002397e-06, 5.971999999999922e-06, 6.166999999997896e-06, 3.1660000000023614e-06, 2.485999999999461e-06, 3.0279999999986706e-06, 5.971999999999922e-06, 3.4730000000003647e-06, 5.541000000001267e-06, 4.0559999999988106e-06, 3.2639999999993508e-06, 3.0410000000022364e-06, 2.4169999999976155e-06, 3.917000000002585e-06, 4.221999999998172e-06, 3.611000000000586e-06, 6.208000000000602e-06, 2.3479999999992396e-06, 4.861000000001836e-06, 2.401999999998572e-06, 5.86199999999884e-06, 2.6520000000022914e-06, 5.2499999999983116e-06, 3.2090000000005448e-06, 2.583000000000446e-06, 5.985999999999492e-06, 2.6529999999982956e-06, 4.194000000002501e-06, 4.8889999999975065e-06, 2.667000000001335e-06, 2.667000000001335e-06, 5.596999999999547e-06, 2.610999999999586e-06, 4.750000000001281e-06, 5.874999999998937e-06, 3.4169999999986156e-06, 4.472000000001891e-06, 4.207999999998602e-06, 3.6389999999997258e-06, 3.708000000001571e-06, 4.166999999999366e-06, 3.847000000001266e-06, 5.416999999997146e-06, 3.847000000001266e-06, 3.4169999999986156e-06], 'diff': [0, 4.860999999998367e-06, 5.84800000000274e-06, 5.096999999999047e-06, 4.291000000000017e-06, 3.3480000000002397e-06, 5.971999999999922e-06, 6.166999999997896e-06, 3.1660000000023614e-06, 2.485999999999461e-06, 3.0279999999986706e-06, 5.971999999999922e-06, 3.4730000000003647e-06, 5.541000000001267e-06, 4.0559999999988106e-06, 3.2639999999993508e-06, 3.0410000000022364e-06, 2.4169999999976155e-06, 3.917000000002585e-06, 4.221999999998172e-06, 3.611000000000586e-06, 6.208000000000602e-06, 2.3479999999992396e-06, 4.861000000001836e-06, 2.401999999998572e-06, 5.86199999999884e-06, 2.6520000000022914e-06, 5.2499999999983116e-06, 3.2090000000005448e-06, 2.583000000000446e-06, 5.985999999999492e-06, 2.6529999999982956e-06, 4.194000000002501e-06, 4.8889999999975065e-06, 2.667000000001335e-06, 2.667000000001335e-06, 5.596999999999547e-06, 2.610999999999586e-06, 4.750000000001281e-06, 5.874999999998937e-06, 3.4169999999986156e-06, 4.472000000001891e-06, 4.207999999998602e-06, 3.6389999999997258e-06, 3.708000000001571e-06, 4.166999999999366e-06, 3.847000000001266e-06, 5.416999999997146e-06, 3.847000000001266e-06, 3.4169999999986156e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:41.101" endtime="20201112 09:53:41.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.097" endtime="20201112 09:53:41.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:41.108" level="INFO">${RESULT} = [{'time': 0.017398458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.017409403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:41.105" endtime="20201112 09:53:41.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:41.115" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017398458, 0.017409403, 0.017417042, 0.017429181, 0.017434833, 0.017443833, 0.017452847, 0.017460167, 0.017465625, 0.017473764, 0.017483583, 0.017490792, 0.017499056, 0.017506958, 0.017512...</msg>
<status status="PASS" starttime="20201112 09:53:41.109" endtime="20201112 09:53:41.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.120" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:41.119" endtime="20201112 09:53:41.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.122" level="INFO">VALUE: [4.860999999998367e-06, 5.096999999999047e-06, 3.3480000000002397e-06, 6.166999999997896e-06, 2.485999999999461e-06, 5.971999999999922e-06, 5.541000000001267e-06, 3.2639999999993508e-06, 2.4169999999976155e-06, 4.221999999998172e-06, 6.208000000000602e-06, 4.861000000001836e-06, 5.86199999999884e-06, 5.2499999999983116e-06, 2.583000000000446e-06, 2.6529999999982956e-06, 4.8889999999975065e-06, 2.667000000001335e-06, 2.610999999999586e-06, 5.874999999998937e-06, 4.472000000001891e-06, 3.6389999999997258e-06, 4.166999999999366e-06, 5.416999999997146e-06, 3.4169999999986156e-06]</msg>
<status status="PASS" starttime="20201112 09:53:41.121" endtime="20201112 09:53:41.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.116" endtime="20201112 09:53:41.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.125" endtime="20201112 09:53:41.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:41.129" endtime="20201112 09:53:41.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.127" endtime="20201112 09:53:41.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.124" endtime="20201112 09:53:41.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.761" endtime="20201112 09:53:41.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.268" endtime="20201112 09:53:41.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:41.154" endtime="20201112 09:53:41.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.152" endtime="20201112 09:53:41.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.151" endtime="20201112 09:53:41.175"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:33.193" endtime="20201112 09:53:41.175" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:41.183" endtime="20201112 09:53:41.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.181" endtime="20201112 09:53:41.203"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.216" endtime="20201112 09:53:41.237"></status>
</kw>
<msg timestamp="20201112 09:53:41.238" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.214" endtime="20201112 09:53:41.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.240" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.239" endtime="20201112 09:53:41.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.243" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:41.241" endtime="20201112 09:53:41.244"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:41.211" endtime="20201112 09:53:41.244"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:41.209" endtime="20201112 09:53:41.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.208" endtime="20201112 09:53:41.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:41.249" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:41.248" endtime="20201112 09:53:41.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.246" endtime="20201112 09:53:41.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.207" endtime="20201112 09:53:41.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.206" endtime="20201112 09:53:41.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.250" endtime="20201112 09:53:41.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.205" endtime="20201112 09:53:41.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.203" endtime="20201112 09:53:41.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.180" endtime="20201112 09:53:41.253"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 09:53:41.255" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.264" endtime="20201112 09:53:41.279"></status>
</kw>
<msg timestamp="20201112 09:53:41.280" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.262" endtime="20201112 09:53:41.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.282" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.281" endtime="20201112 09:53:41.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.283" endtime="20201112 09:53:41.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.259" endtime="20201112 09:53:41.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.257" endtime="20201112 09:53:41.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.292" endtime="20201112 09:53:41.581"></status>
</kw>
<msg timestamp="20201112 09:53:41.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070514639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070520944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.291" endtime="20201112 09:53:41.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070514639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070520944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.585" endtime="20201112 09:53:41.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.593" endtime="20201112 09:53:41.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.288" endtime="20201112 09:53:41.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.286" endtime="20201112 09:53:41.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:41.600" level="INFO">${RESULT} = [{'time': 0.070520944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.070525056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:41.597" endtime="20201112 09:53:41.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:41.614" level="INFO">${OVERHEAD} = {'time': [0.070520944, 0.070525056, 0.070529569, 0.070535056, 0.070539486, 0.070545556, 0.070549736, 0.07055725, 0.070563986, 0.070571736, 0.070578, 0.070583375, 0.070590569, 0.070595625, 0.070600681,...</msg>
<status status="PASS" starttime="20201112 09:53:41.601" endtime="20201112 09:53:41.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.618" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:41.617" endtime="20201112 09:53:41.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.621" level="INFO">VALUE: [6.304999999998118e-06, 1.8620000000052483e-06, 1.8749999999984057e-06, 1.8620000000052483e-06, 1.860999999991897e-06, 1.8619999999913706e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.9029999999975455e-06, 1.860999999991897e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8750000000122835e-06, 1.860999999991897e-06, 1.8620000000052483e-06, 1.860999999991897e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8619999999913706e-06, 1.8619999999913706e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.8749999999984057e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.846999999999266e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.9029999999975455e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.9170000000040543e-06, 1.8610000000057747e-06]</msg>
<status status="PASS" starttime="20201112 09:53:41.619" endtime="20201112 09:53:41.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.615" endtime="20201112 09:53:41.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.624" endtime="20201112 09:53:41.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:41.627" endtime="20201112 09:53:41.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.626" endtime="20201112 09:53:41.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.622" endtime="20201112 09:53:41.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.256" endtime="20201112 09:53:41.648"></status>
</kw>
<msg timestamp="20201112 09:53:41.648" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.656" endtime="20201112 09:53:41.672"></status>
</kw>
<msg timestamp="20201112 09:53:41.672" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.655" endtime="20201112 09:53:41.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.674" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.673" endtime="20201112 09:53:41.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.676" endtime="20201112 09:53:41.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.652" endtime="20201112 09:53:41.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.650" endtime="20201112 09:53:41.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.684" endtime="20201112 09:53:41.965"></status>
</kw>
<msg timestamp="20201112 09:53:41.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018259208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018261028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.683" endtime="20201112 09:53:41.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018259208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018261028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.969" endtime="20201112 09:53:41.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.977" endtime="20201112 09:53:41.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.680" endtime="20201112 09:53:41.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.679" endtime="20201112 09:53:41.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:41.984" level="INFO">${RESULT} = [{'time': 0.018261028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018268, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:53:41.981" endtime="20201112 09:53:41.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:41.998" level="INFO">${OVERHEAD} = {'time': [0.018261028, 0.018268, 0.018272292, 0.018276278, 0.018283153, 0.018289778, 0.018296722, 0.018303528, 0.018307583, 0.018311597, 0.018319403, 0.018325097, 0.018331458, 0.018337875, 0.018343153...</msg>
<status status="PASS" starttime="20201112 09:53:41.985" endtime="20201112 09:53:41.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.002" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:42.001" endtime="20201112 09:53:42.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.005" level="INFO">VALUE: [1.8199999999995997e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.77800000000089e-06, 1.8049999999970867e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.846999999999266e-06, 1.8889999999979756e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 09:53:42.003" endtime="20201112 09:53:42.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.999" endtime="20201112 09:53:42.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.008" endtime="20201112 09:53:42.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:42.012" endtime="20201112 09:53:42.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.010" endtime="20201112 09:53:42.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.006" endtime="20201112 09:53:42.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.649" endtime="20201112 09:53:42.033"></status>
</kw>
<msg timestamp="20201112 09:53:42.033" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.040" endtime="20201112 09:53:42.056"></status>
</kw>
<msg timestamp="20201112 09:53:42.056" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.039" endtime="20201112 09:53:42.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.059" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.057" endtime="20201112 09:53:42.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.060" endtime="20201112 09:53:42.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.036" endtime="20201112 09:53:42.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.035" endtime="20201112 09:53:42.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.069" endtime="20201112 09:53:42.355"></status>
</kw>
<msg timestamp="20201112 09:53:42.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018001722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018003583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.067" endtime="20201112 09:53:42.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018001722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018003583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.359" endtime="20201112 09:53:42.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.367" endtime="20201112 09:53:42.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.065" endtime="20201112 09:53:42.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.063" endtime="20201112 09:53:42.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:42.374" level="INFO">${RESULT} = [{'time': 0.018003583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018011333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:42.370" endtime="20201112 09:53:42.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:42.389" level="INFO">${OVERHEAD} = {'time': [0.018003583, 0.018011333, 0.018019042, 0.018024653, 0.018028903, 0.018033472, 0.018040292, 0.018047653, 0.018054486, 0.018058611, 0.018064611, 0.018069222, 0.018074528, 0.018081028, 0.018086...</msg>
<status status="PASS" starttime="20201112 09:53:42.375" endtime="20201112 09:53:42.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.393" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:42.392" endtime="20201112 09:53:42.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.395" level="INFO">VALUE: [1.8609999999988358e-06, 1.846999999999266e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.8750000000018752e-06, 1.8889999999979756e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.834000000002639e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.819000000000126e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8619999999983095e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 09:53:42.394" endtime="20201112 09:53:42.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.390" endtime="20201112 09:53:42.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.399" endtime="20201112 09:53:42.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:42.402" endtime="20201112 09:53:42.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.401" endtime="20201112 09:53:42.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.397" endtime="20201112 09:53:42.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.033" endtime="20201112 09:53:42.423"></status>
</kw>
<msg timestamp="20201112 09:53:42.423" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.431" endtime="20201112 09:53:42.446"></status>
</kw>
<msg timestamp="20201112 09:53:42.446" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.429" endtime="20201112 09:53:42.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.449" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.447" endtime="20201112 09:53:42.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.450" endtime="20201112 09:53:42.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.427" endtime="20201112 09:53:42.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.425" endtime="20201112 09:53:42.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.459" endtime="20201112 09:53:42.746"></status>
</kw>
<msg timestamp="20201112 09:53:42.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017935444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017937306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.457" endtime="20201112 09:53:42.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017935444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017937306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.751" endtime="20201112 09:53:42.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.759" endtime="20201112 09:53:42.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.455" endtime="20201112 09:53:42.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.453" endtime="20201112 09:53:42.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:42.765" level="INFO">${RESULT} = [{'time': 0.017937306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.862000000001779e-06, 'source_diff': 1.862000000001779e-06}, {'time': 0.017941306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:42.762" endtime="20201112 09:53:42.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:42.779" level="INFO">${OVERHEAD} = {'time': [0.017937306, 0.017941306, 0.017945306, 0.017951806, 0.0179575, 0.017964069, 0.0179685, 0.01797575, 0.017981556, 0.017988764, 0.017995694, 0.018001556, 0.018007958, 0.01801225, 0.018019944, 0...</msg>
<status status="PASS" starttime="20201112 09:53:42.766" endtime="20201112 09:53:42.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.783" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:42.782" endtime="20201112 09:53:42.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.786" level="INFO">VALUE: [1.862000000001779e-06, 1.848000000002209e-06, 1.848000000002209e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.9169999999971155e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.915999999997642e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.9449999999997247e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 09:53:42.785" endtime="20201112 09:53:42.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.780" endtime="20201112 09:53:42.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.789" endtime="20201112 09:53:42.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:42.793" endtime="20201112 09:53:42.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.791" endtime="20201112 09:53:42.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.788" endtime="20201112 09:53:42.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.424" endtime="20201112 09:53:42.813"></status>
</kw>
<msg timestamp="20201112 09:53:42.814" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.821" endtime="20201112 09:53:42.836"></status>
</kw>
<msg timestamp="20201112 09:53:42.837" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.820" endtime="20201112 09:53:42.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.839" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.838" endtime="20201112 09:53:42.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.840" endtime="20201112 09:53:42.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.817" endtime="20201112 09:53:42.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.816" endtime="20201112 09:53:42.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.849" endtime="20201112 09:53:43.135"></status>
</kw>
<msg timestamp="20201112 09:53:43.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017957306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017959181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.847" endtime="20201112 09:53:43.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017957306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017959181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.139" endtime="20201112 09:53:43.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.147" endtime="20201112 09:53:43.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.845" endtime="20201112 09:53:43.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.843" endtime="20201112 09:53:43.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:43.154" level="INFO">${RESULT} = [{'time': 0.017959181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.017964472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:43.151" endtime="20201112 09:53:43.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:43.168" level="INFO">${OVERHEAD} = {'time': [0.017959181, 0.017964472, 0.017972181, 0.017979097, 0.017986917, 0.017994542, 0.017999792, 0.018003792, 0.018011097, 0.018018292, 0.018024861, 0.018032736, 0.018039292, 0.018045042, 0.018049...</msg>
<status status="PASS" starttime="20201112 09:53:43.155" endtime="20201112 09:53:43.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.172" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:43.171" endtime="20201112 09:53:43.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.175" level="INFO">VALUE: [1.8750000000018752e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.848000000002209e-06, 1.8479999999987395e-06, 1.848000000002209e-06, 1.8610000000023053e-06, 1.9160000000011113e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.846999999999266e-06, 1.862000000001779e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.7770000000014163e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201112 09:53:43.173" endtime="20201112 09:53:43.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.169" endtime="20201112 09:53:43.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.178" endtime="20201112 09:53:43.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:43.182" endtime="20201112 09:53:43.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.180" endtime="20201112 09:53:43.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.177" endtime="20201112 09:53:43.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.814" endtime="20201112 09:53:43.202"></status>
</kw>
<msg timestamp="20201112 09:53:43.203" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.210" endtime="20201112 09:53:43.225"></status>
</kw>
<msg timestamp="20201112 09:53:43.226" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.209" endtime="20201112 09:53:43.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.228" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.227" endtime="20201112 09:53:43.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.229" endtime="20201112 09:53:43.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.206" endtime="20201112 09:53:43.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.205" endtime="20201112 09:53:43.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.238" endtime="20201112 09:53:43.523"></status>
</kw>
<msg timestamp="20201112 09:53:43.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018030681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018032542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.237" endtime="20201112 09:53:43.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018030681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018032542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.527" endtime="20201112 09:53:43.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.535" endtime="20201112 09:53:43.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.234" endtime="20201112 09:53:43.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.232" endtime="20201112 09:53:43.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:43.542" level="INFO">${RESULT} = [{'time': 0.018032542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018039667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:43.539" endtime="20201112 09:53:43.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:43.556" level="INFO">${OVERHEAD} = {'time': [0.018032542, 0.018039667, 0.018047056, 0.018053056, 0.01805775, 0.018063736, 0.018070403, 0.018078111, 0.018084181, 0.018091181, 0.018097361, 0.018104056, 0.018111431, 0.018117056, 0.0181210...</msg>
<status status="PASS" starttime="20201112 09:53:43.543" endtime="20201112 09:53:43.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.560" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:43.559" endtime="20201112 09:53:43.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.563" level="INFO">VALUE: [1.8609999999988358e-06, 1.8479999999987395e-06, 1.8060000000000298e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.8479999999987395e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.903000000001015e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8470000000027353e-06]</msg>
<status status="PASS" starttime="20201112 09:53:43.561" endtime="20201112 09:53:43.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.557" endtime="20201112 09:53:43.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.566" endtime="20201112 09:53:43.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:43.570" endtime="20201112 09:53:43.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.568" endtime="20201112 09:53:43.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.564" endtime="20201112 09:53:43.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.203" endtime="20201112 09:53:43.590"></status>
</kw>
<msg timestamp="20201112 09:53:43.591" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.598" endtime="20201112 09:53:43.613"></status>
</kw>
<msg timestamp="20201112 09:53:43.614" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.596" endtime="20201112 09:53:43.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.616" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.615" endtime="20201112 09:53:43.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.617" endtime="20201112 09:53:43.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.594" endtime="20201112 09:53:43.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.592" endtime="20201112 09:53:43.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.626" endtime="20201112 09:53:43.915"></status>
</kw>
<msg timestamp="20201112 09:53:43.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017859486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017861319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.625" endtime="20201112 09:53:43.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017859486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017861319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.919" endtime="20201112 09:53:43.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.927" endtime="20201112 09:53:43.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.622" endtime="20201112 09:53:43.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.620" endtime="20201112 09:53:43.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:43.934" level="INFO">${RESULT} = [{'time': 0.017861319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.017865389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:43.930" endtime="20201112 09:53:43.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:43.948" level="INFO">${OVERHEAD} = {'time': [0.017861319, 0.017865389, 0.017873208, 0.017879569, 0.017883889, 0.017889139, 0.017896458, 0.017901208, 0.017905597, 0.017913153, 0.017920889, 0.017927083, 0.017933264, 0.017937458, 0.017941...</msg>
<status status="PASS" starttime="20201112 09:53:43.935" endtime="20201112 09:53:43.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.953" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:43.952" endtime="20201112 09:53:43.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.955" level="INFO">VALUE: [1.832999999999696e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8060000000000298e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.9169999999971155e-06, 1.8199999999995997e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 09:53:43.954" endtime="20201112 09:53:44.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.949" endtime="20201112 09:53:44.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.063" endtime="20201112 09:53:44.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:44.067" endtime="20201112 09:53:44.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.065" endtime="20201112 09:53:44.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.062" endtime="20201112 09:53:44.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.591" endtime="20201112 09:53:44.087"></status>
</kw>
<msg timestamp="20201112 09:53:44.088" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.095" endtime="20201112 09:53:44.111"></status>
</kw>
<msg timestamp="20201112 09:53:44.111" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.094" endtime="20201112 09:53:44.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.114" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.112" endtime="20201112 09:53:44.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.115" endtime="20201112 09:53:44.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.091" endtime="20201112 09:53:44.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.089" endtime="20201112 09:53:44.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.124" endtime="20201112 09:53:44.424"></status>
</kw>
<msg timestamp="20201112 09:53:44.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017840569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017842417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.122" endtime="20201112 09:53:44.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017840569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017842417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.433" endtime="20201112 09:53:44.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.451" endtime="20201112 09:53:44.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.120" endtime="20201112 09:53:44.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.118" endtime="20201112 09:53:44.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:44.465" level="INFO">${RESULT} = [{'time': 0.017842417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.017846667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:44.458" endtime="20201112 09:53:44.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:44.482" level="INFO">${OVERHEAD} = {'time': [0.017842417, 0.017846667, 0.017852667, 0.0178595, 0.017867292, 0.017873542, 0.017879625, 0.017884361, 0.017890167, 0.017894861, 0.017899861, 0.017904917, 0.017909361, 0.017916431, 0.01792055...</msg>
<status status="PASS" starttime="20201112 09:53:44.467" endtime="20201112 09:53:44.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.486" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:44.485" endtime="20201112 09:53:44.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.488" level="INFO">VALUE: [1.8479999999987395e-06, 1.7920000000004599e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8479999999987395e-06, 1.819000000000126e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.8199999999995997e-06, 1.819000000000126e-06, 1.848000000002209e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.8750000000018752e-06, 1.8619999999983095e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.931000000000155e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 09:53:44.487" endtime="20201112 09:53:44.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.483" endtime="20201112 09:53:44.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.492" endtime="20201112 09:53:44.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:44.495" endtime="20201112 09:53:44.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.494" endtime="20201112 09:53:44.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.490" endtime="20201112 09:53:44.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.088" endtime="20201112 09:53:44.516"></status>
</kw>
<msg timestamp="20201112 09:53:44.516" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.524" endtime="20201112 09:53:44.539"></status>
</kw>
<msg timestamp="20201112 09:53:44.539" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.522" endtime="20201112 09:53:44.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.541" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.540" endtime="20201112 09:53:44.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.542" endtime="20201112 09:53:44.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.520" endtime="20201112 09:53:44.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.518" endtime="20201112 09:53:44.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.551" endtime="20201112 09:53:44.840"></status>
</kw>
<msg timestamp="20201112 09:53:44.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017914222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017916139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.550" endtime="20201112 09:53:44.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017914222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017916139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.844" endtime="20201112 09:53:44.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.852" endtime="20201112 09:53:44.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.547" endtime="20201112 09:53:44.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.546" endtime="20201112 09:53:44.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:44.859" level="INFO">${RESULT} = [{'time': 0.017916139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.017921194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:44.855" endtime="20201112 09:53:44.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:44.873" level="INFO">${OVERHEAD} = {'time': [0.017916139, 0.017921194, 0.017926556, 0.017932014, 0.017937306, 0.017941819, 0.017947806, 0.01795375, 0.017959681, 0.017965375, 0.01797175, 0.017978306, 0.017982431, 0.017986931, 0.01799319...</msg>
<status status="PASS" starttime="20201112 09:53:44.860" endtime="20201112 09:53:44.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.877" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:44.876" endtime="20201112 09:53:44.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.879" level="INFO">VALUE: [1.917000000000585e-06, 1.9160000000011113e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8619999999983095e-06, 1.917000000000585e-06, 1.7920000000004599e-06, 1.9160000000011113e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.9160000000011113e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.889000000001445e-06, 1.8470000000027353e-06, 1.8060000000000298e-06, 1.8750000000018752e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 09:53:44.878" endtime="20201112 09:53:44.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.874" endtime="20201112 09:53:44.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.883" endtime="20201112 09:53:44.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:44.886" endtime="20201112 09:53:44.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.885" endtime="20201112 09:53:44.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.881" endtime="20201112 09:53:44.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.517" endtime="20201112 09:53:44.907"></status>
</kw>
<msg timestamp="20201112 09:53:44.907" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.915" endtime="20201112 09:53:44.930"></status>
</kw>
<msg timestamp="20201112 09:53:44.931" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.913" endtime="20201112 09:53:44.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.933" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.932" endtime="20201112 09:53:44.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.934" endtime="20201112 09:53:44.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.911" endtime="20201112 09:53:44.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.909" endtime="20201112 09:53:44.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.943" endtime="20201112 09:53:45.229"></status>
</kw>
<msg timestamp="20201112 09:53:45.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017976042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017977889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.941" endtime="20201112 09:53:45.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017976042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017977889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.233" endtime="20201112 09:53:45.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.242" endtime="20201112 09:53:45.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.939" endtime="20201112 09:53:45.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.937" endtime="20201112 09:53:45.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:45.248" level="INFO">${RESULT} = [{'time': 0.017977889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.017982319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:45.245" endtime="20201112 09:53:45.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:45.262" level="INFO">${OVERHEAD} = {'time': [0.017977889, 0.017982319, 0.017988708, 0.017994514, 0.017999083, 0.018006458, 0.018013333, 0.018018083, 0.018022389, 0.018028639, 0.018036014, 0.018042458, 0.018049333, 0.018056153, 0.018063...</msg>
<status status="PASS" starttime="20201112 09:53:45.249" endtime="20201112 09:53:45.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.267" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:45.266" endtime="20201112 09:53:45.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.269" level="INFO">VALUE: [1.846999999999266e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.77800000000089e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.8339999999991696e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.834000000002639e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 09:53:45.268" endtime="20201112 09:53:45.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.263" endtime="20201112 09:53:45.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.273" endtime="20201112 09:53:45.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:45.276" endtime="20201112 09:53:45.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.274" endtime="20201112 09:53:45.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.271" endtime="20201112 09:53:45.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.908" endtime="20201112 09:53:45.297"></status>
</kw>
<msg timestamp="20201112 09:53:45.297" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.305" endtime="20201112 09:53:45.320"></status>
</kw>
<msg timestamp="20201112 09:53:45.321" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.303" endtime="20201112 09:53:45.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.323" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.322" endtime="20201112 09:53:45.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.324" endtime="20201112 09:53:45.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.301" endtime="20201112 09:53:45.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.299" endtime="20201112 09:53:45.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.334" endtime="20201112 09:53:45.624"></status>
</kw>
<msg timestamp="20201112 09:53:45.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017877014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017878847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.333" endtime="20201112 09:53:45.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017877014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017878847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.628" endtime="20201112 09:53:45.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.636" endtime="20201112 09:53:45.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.330" endtime="20201112 09:53:45.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.328" endtime="20201112 09:53:45.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:45.643" level="INFO">${RESULT} = [{'time': 0.017878847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.017884153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:45.640" endtime="20201112 09:53:45.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:45.657" level="INFO">${OVERHEAD} = {'time': [0.017878847, 0.017884153, 0.017891653, 0.017898958, 0.017904972, 0.017908972, 0.017914653, 0.017921208, 0.017927917, 0.017935042, 0.017939403, 0.017946278, 0.017953097, 0.017960778, 0.017966...</msg>
<status status="PASS" starttime="20201112 09:53:45.644" endtime="20201112 09:53:45.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.662" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:45.661" endtime="20201112 09:53:45.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.664" level="INFO">VALUE: [1.832999999999696e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.915999999997642e-06, 1.8750000000018752e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8750000000018752e-06, 1.8060000000000298e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.915999999997642e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.848000000002209e-06]</msg>
<status status="PASS" starttime="20201112 09:53:45.663" endtime="20201112 09:53:45.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.658" endtime="20201112 09:53:45.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.668" endtime="20201112 09:53:45.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:45.671" endtime="20201112 09:53:45.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.670" endtime="20201112 09:53:45.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.666" endtime="20201112 09:53:45.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.297" endtime="20201112 09:53:45.692"></status>
</kw>
<msg timestamp="20201112 09:53:45.692" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.699" endtime="20201112 09:53:45.714"></status>
</kw>
<msg timestamp="20201112 09:53:45.715" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.698" endtime="20201112 09:53:45.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.717" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.716" endtime="20201112 09:53:45.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.718" endtime="20201112 09:53:45.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.695" endtime="20201112 09:53:45.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.694" endtime="20201112 09:53:45.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.727" endtime="20201112 09:53:46.016"></status>
</kw>
<msg timestamp="20201112 09:53:46.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017832806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017834653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.725" endtime="20201112 09:53:46.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017832806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017834653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.020" endtime="20201112 09:53:46.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.028" endtime="20201112 09:53:46.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.723" endtime="20201112 09:53:46.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.721" endtime="20201112 09:53:46.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:46.035" level="INFO">${RESULT} = [{'time': 0.017834653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.017841486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:46.032" endtime="20201112 09:53:46.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:46.049" level="INFO">${OVERHEAD} = {'time': [0.017834653, 0.017841486, 0.017848069, 0.017853611, 0.017860667, 0.017865167, 0.017872542, 0.017878222, 0.017885222, 0.017889972, 0.017897361, 0.017902042, 0.017909042, 0.017914417, 0.017920...</msg>
<status status="PASS" starttime="20201112 09:53:46.036" endtime="20201112 09:53:46.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.053" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:46.052" endtime="20201112 09:53:46.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.056" level="INFO">VALUE: [1.846999999999266e-06, 1.8750000000018752e-06, 1.9020000000015413e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.77800000000089e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.8199999999995997e-06, 1.889000000001445e-06, 1.8479999999987395e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.9020000000015413e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.848000000002209e-06]</msg>
<status status="PASS" starttime="20201112 09:53:46.054" endtime="20201112 09:53:46.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.050" endtime="20201112 09:53:46.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.059" endtime="20201112 09:53:46.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:46.063" endtime="20201112 09:53:46.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.061" endtime="20201112 09:53:46.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.058" endtime="20201112 09:53:46.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.692" endtime="20201112 09:53:46.083"></status>
</kw>
<msg timestamp="20201112 09:53:46.084" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.091" endtime="20201112 09:53:46.107"></status>
</kw>
<msg timestamp="20201112 09:53:46.108" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.090" endtime="20201112 09:53:46.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.110" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.109" endtime="20201112 09:53:46.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.111" endtime="20201112 09:53:46.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.087" endtime="20201112 09:53:46.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.085" endtime="20201112 09:53:46.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.120" endtime="20201112 09:53:46.408"></status>
</kw>
<msg timestamp="20201112 09:53:46.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017941042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017942931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.119" endtime="20201112 09:53:46.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017941042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017942931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.412" endtime="20201112 09:53:46.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.420" endtime="20201112 09:53:46.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.116" endtime="20201112 09:53:46.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.114" endtime="20201112 09:53:46.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:46.427" level="INFO">${RESULT} = [{'time': 0.017942931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.017947472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:46.423" endtime="20201112 09:53:46.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:46.441" level="INFO">${OVERHEAD} = {'time': [0.017942931, 0.017947472, 0.017953042, 0.017959042, 0.017963361, 0.017967431, 0.017973597, 0.017979778, 0.017987292, 0.017991722, 0.017998097, 0.018004542, 0.018011917, 0.018019722, 0.018025...</msg>
<status status="PASS" starttime="20201112 09:53:46.428" endtime="20201112 09:53:46.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.445" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:46.444" endtime="20201112 09:53:46.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.447" level="INFO">VALUE: [1.8889999999979756e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.9169999999971155e-06, 1.8609999999988358e-06, 1.8330000000031654e-06, 1.8050000000005562e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.846999999999266e-06, 1.8060000000000298e-06, 1.8619999999983095e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8880000000019714e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.9029999999975455e-06, 1.8479999999987395e-06, 1.8479999999987395e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.889000000001445e-06, 1.834000000002639e-06, 1.8749999999984057e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.862000000001779e-06]</msg>
<status status="PASS" starttime="20201112 09:53:46.446" endtime="20201112 09:53:46.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.442" endtime="20201112 09:53:46.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.451" endtime="20201112 09:53:46.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:46.454" endtime="20201112 09:53:46.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.453" endtime="20201112 09:53:46.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.450" endtime="20201112 09:53:46.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.084" endtime="20201112 09:53:46.475"></status>
</kw>
<msg timestamp="20201112 09:53:46.475" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.483" endtime="20201112 09:53:46.498"></status>
</kw>
<msg timestamp="20201112 09:53:46.499" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.481" endtime="20201112 09:53:46.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.501" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.500" endtime="20201112 09:53:46.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.502" endtime="20201112 09:53:46.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.479" endtime="20201112 09:53:46.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.477" endtime="20201112 09:53:46.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.511" endtime="20201112 09:53:46.800"></status>
</kw>
<msg timestamp="20201112 09:53:46.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017821, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017822861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:53:46.510" endtime="20201112 09:53:46.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017821, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017822861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:53:46.804" endtime="20201112 09:53:46.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.812" endtime="20201112 09:53:46.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.507" endtime="20201112 09:53:46.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.505" endtime="20201112 09:53:46.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:46.819" level="INFO">${RESULT} = [{'time': 0.017822861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.017826875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:46.815" endtime="20201112 09:53:46.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:46.833" level="INFO">${OVERHEAD} = {'time': [0.017822861, 0.017826875, 0.017831792, 0.017839056, 0.0178465, 0.017852306, 0.017858056, 0.017862194, 0.017867736, 0.017872306, 0.017876861, 0.017883486, 0.017890556, 0.017897611, 0.01790173...</msg>
<status status="PASS" starttime="20201112 09:53:46.820" endtime="20201112 09:53:46.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.837" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:46.836" endtime="20201112 09:53:46.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.839" level="INFO">VALUE: [1.8609999999988358e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.862000000001779e-06, 1.8750000000018752e-06, 1.9169999999971155e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.8050000000005562e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.9449999999997247e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.903000000001015e-06, 1.7910000000009862e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8050000000005562e-06, 1.8609999999988358e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 09:53:46.838" endtime="20201112 09:53:46.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.834" endtime="20201112 09:53:46.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.843" endtime="20201112 09:53:46.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:46.846" endtime="20201112 09:53:46.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.845" endtime="20201112 09:53:46.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.841" endtime="20201112 09:53:46.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.476" endtime="20201112 09:53:46.867"></status>
</kw>
<msg timestamp="20201112 09:53:46.867" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.875" endtime="20201112 09:53:46.890"></status>
</kw>
<msg timestamp="20201112 09:53:46.890" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.873" endtime="20201112 09:53:46.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.893" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.891" endtime="20201112 09:53:46.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.894" endtime="20201112 09:53:46.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.871" endtime="20201112 09:53:46.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.869" endtime="20201112 09:53:46.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.903" endtime="20201112 09:53:47.192"></status>
</kw>
<msg timestamp="20201112 09:53:47.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017796111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017798, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:53:46.901" endtime="20201112 09:53:47.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017796111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017798, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:53:47.196" endtime="20201112 09:53:47.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.204" endtime="20201112 09:53:47.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.899" endtime="20201112 09:53:47.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.897" endtime="20201112 09:53:47.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:47.211" level="INFO">${RESULT} = [{'time': 0.017798, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.017804861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:53:47.207" endtime="20201112 09:53:47.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:47.225" level="INFO">${OVERHEAD} = {'time': [0.017798, 0.017804861, 0.01780975, 0.01781575, 0.017823, 0.017828042, 0.017834861, 0.017840486, 0.017848306, 0.017855528, 0.017862306, 0.017867125, 0.017874069, 0.017881069, 0.017888111, 0.0...</msg>
<status status="PASS" starttime="20201112 09:53:47.212" endtime="20201112 09:53:47.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.230" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:47.229" endtime="20201112 09:53:47.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.232" level="INFO">VALUE: [1.889000000001445e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.862000000001779e-06, 1.8479999999987395e-06, 1.8479999999987395e-06, 1.915999999997642e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.915999999997642e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201112 09:53:47.231" endtime="20201112 09:53:47.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.226" endtime="20201112 09:53:47.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.236" endtime="20201112 09:53:47.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:47.239" endtime="20201112 09:53:47.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.238" endtime="20201112 09:53:47.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.234" endtime="20201112 09:53:47.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.868" endtime="20201112 09:53:47.260"></status>
</kw>
<msg timestamp="20201112 09:53:47.260" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.268" endtime="20201112 09:53:47.283"></status>
</kw>
<msg timestamp="20201112 09:53:47.283" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.266" endtime="20201112 09:53:47.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.286" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.284" endtime="20201112 09:53:47.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.287" endtime="20201112 09:53:47.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.264" endtime="20201112 09:53:47.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.262" endtime="20201112 09:53:47.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.295" endtime="20201112 09:53:47.584"></status>
</kw>
<msg timestamp="20201112 09:53:47.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017921, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017922861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:53:47.294" endtime="20201112 09:53:47.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017921, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017922861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:53:47.588" endtime="20201112 09:53:47.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.597" endtime="20201112 09:53:47.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.292" endtime="20201112 09:53:47.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.290" endtime="20201112 09:53:47.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:47.603" level="INFO">${RESULT} = [{'time': 0.017922861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.017928458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:47.600" endtime="20201112 09:53:47.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:47.617" level="INFO">${OVERHEAD} = {'time': [0.017922861, 0.017928458, 0.017934806, 0.017939111, 0.017943194, 0.017948958, 0.017956431, 0.017963694, 0.017969694, 0.01797375, 0.017978625, 0.017983431, 0.017990389, 0.017995181, 0.0179995...</msg>
<status status="PASS" starttime="20201112 09:53:47.604" endtime="20201112 09:53:47.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.622" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:47.621" endtime="20201112 09:53:47.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.624" level="INFO">VALUE: [1.8609999999988358e-06, 1.889000000001445e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.8470000000027353e-06, 1.917000000000585e-06, 1.9029999999975455e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8889999999979756e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.917000000000585e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8470000000027353e-06]</msg>
<status status="PASS" starttime="20201112 09:53:47.623" endtime="20201112 09:53:47.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.618" endtime="20201112 09:53:47.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.628" endtime="20201112 09:53:47.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:47.631" endtime="20201112 09:53:47.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.630" endtime="20201112 09:53:47.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.626" endtime="20201112 09:53:47.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.261" endtime="20201112 09:53:47.652"></status>
</kw>
<msg timestamp="20201112 09:53:47.652" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.660" endtime="20201112 09:53:47.674"></status>
</kw>
<msg timestamp="20201112 09:53:47.675" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.658" endtime="20201112 09:53:47.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.677" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.676" endtime="20201112 09:53:47.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.678" endtime="20201112 09:53:47.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.655" endtime="20201112 09:53:47.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.654" endtime="20201112 09:53:47.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.687" endtime="20201112 09:53:47.976"></status>
</kw>
<msg timestamp="20201112 09:53:47.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017795278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017797153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.685" endtime="20201112 09:53:47.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017795278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017797153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.981" endtime="20201112 09:53:47.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.989" endtime="20201112 09:53:47.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.683" endtime="20201112 09:53:47.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.681" endtime="20201112 09:53:47.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:47.995" level="INFO">${RESULT} = [{'time': 0.017797153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.017801708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:47.992" endtime="20201112 09:53:47.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:48.010" level="INFO">${OVERHEAD} = {'time': [0.017797153, 0.017801708, 0.017806389, 0.017810708, 0.017817653, 0.017824708, 0.017831153, 0.017837264, 0.017842903, 0.017850583, 0.017857528, 0.017864528, 0.017869903, 0.017876583, 0.017881...</msg>
<status status="PASS" starttime="20201112 09:53:47.996" endtime="20201112 09:53:48.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.014" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:48.013" endtime="20201112 09:53:48.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.017" level="INFO">VALUE: [1.8749999999984057e-06, 1.7769999999979469e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.9160000000011113e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.9160000000011113e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.7910000000009862e-06, 1.8610000000023053e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.8619999999983095e-06, 1.8750000000018752e-06, 1.9020000000015413e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201112 09:53:48.015" endtime="20201112 09:53:48.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.011" endtime="20201112 09:53:48.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.020" endtime="20201112 09:53:48.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:48.023" endtime="20201112 09:53:48.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.022" endtime="20201112 09:53:48.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.019" endtime="20201112 09:53:48.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.653" endtime="20201112 09:53:48.044"></status>
</kw>
<msg timestamp="20201112 09:53:48.044" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.052" endtime="20201112 09:53:48.067"></status>
</kw>
<msg timestamp="20201112 09:53:48.067" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.051" endtime="20201112 09:53:48.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.070" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.068" endtime="20201112 09:53:48.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.071" endtime="20201112 09:53:48.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.048" endtime="20201112 09:53:48.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.046" endtime="20201112 09:53:48.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.080" endtime="20201112 09:53:48.367"></status>
</kw>
<msg timestamp="20201112 09:53:48.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017937264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017939139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.078" endtime="20201112 09:53:48.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017937264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017939139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.372" endtime="20201112 09:53:48.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.380" endtime="20201112 09:53:48.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.076" endtime="20201112 09:53:48.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.074" endtime="20201112 09:53:48.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:48.389" level="INFO">${RESULT} = [{'time': 0.017939139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.017944653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:48.385" endtime="20201112 09:53:48.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:48.402" level="INFO">${OVERHEAD} = {'time': [0.017939139, 0.017944653, 0.017951, 0.017958306, 0.017963431, 0.017971056, 0.0179775, 0.017984694, 0.017989181, 0.017997056, 0.018001556, 0.018008514, 0.018013889, 0.0180215, 0.018025833, 0....</msg>
<status status="PASS" starttime="20201112 09:53:48.390" endtime="20201112 09:53:48.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.407" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:48.406" endtime="20201112 09:53:48.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.410" level="INFO">VALUE: [1.8749999999984057e-06, 1.8750000000018752e-06, 1.8060000000000298e-06, 1.8479999999987395e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.848000000002209e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.7920000000004599e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8199999999995997e-06, 1.9029999999975455e-06, 1.8609999999988358e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 09:53:48.408" endtime="20201112 09:53:48.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.403" endtime="20201112 09:53:48.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.415" endtime="20201112 09:53:48.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:48.419" endtime="20201112 09:53:48.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.417" endtime="20201112 09:53:48.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.413" endtime="20201112 09:53:48.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.045" endtime="20201112 09:53:48.440"></status>
</kw>
<msg timestamp="20201112 09:53:48.440" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.448" endtime="20201112 09:53:48.463"></status>
</kw>
<msg timestamp="20201112 09:53:48.464" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.446" endtime="20201112 09:53:48.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.466" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.465" endtime="20201112 09:53:48.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.467" endtime="20201112 09:53:48.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.443" endtime="20201112 09:53:48.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.442" endtime="20201112 09:53:48.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.476" endtime="20201112 09:53:48.772"></status>
</kw>
<msg timestamp="20201112 09:53:48.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018398306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018400167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.475" endtime="20201112 09:53:48.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018398306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018400167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.782" endtime="20201112 09:53:48.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.800" endtime="20201112 09:53:48.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.472" endtime="20201112 09:53:48.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.471" endtime="20201112 09:53:48.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:48.814" level="INFO">${RESULT} = [{'time': 0.018400167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018405903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:48.807" endtime="20201112 09:53:48.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:48.830" level="INFO">${OVERHEAD} = {'time': [0.018400167, 0.018405903, 0.018410458, 0.018416153, 0.018422667, 0.018428111, 0.018435986, 0.018443528, 0.018449778, 0.018455028, 0.018459972, 0.018465653, 0.018471486, 0.018478111, 0.018482...</msg>
<status status="PASS" starttime="20201112 09:53:48.816" endtime="20201112 09:53:48.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.834" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:48.833" endtime="20201112 09:53:48.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.837" level="INFO">VALUE: [1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.9020000000015413e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.862000000001779e-06, 1.848000000002209e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8619999999983095e-06]</msg>
<status status="PASS" starttime="20201112 09:53:48.836" endtime="20201112 09:53:48.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.831" endtime="20201112 09:53:48.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.841" endtime="20201112 09:53:48.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:48.844" endtime="20201112 09:53:48.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.842" endtime="20201112 09:53:48.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.839" endtime="20201112 09:53:48.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.440" endtime="20201112 09:53:48.865"></status>
</kw>
<msg timestamp="20201112 09:53:48.865" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.872" endtime="20201112 09:53:48.887"></status>
</kw>
<msg timestamp="20201112 09:53:48.888" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.871" endtime="20201112 09:53:48.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.890" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.889" endtime="20201112 09:53:48.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.891" endtime="20201112 09:53:48.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.868" endtime="20201112 09:53:48.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.867" endtime="20201112 09:53:48.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.901" endtime="20201112 09:53:49.187"></status>
</kw>
<msg timestamp="20201112 09:53:49.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017998111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018000014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.899" endtime="20201112 09:53:49.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017998111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018000014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.191" endtime="20201112 09:53:49.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.199" endtime="20201112 09:53:49.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.896" endtime="20201112 09:53:49.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.894" endtime="20201112 09:53:49.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:49.206" level="INFO">${RESULT} = [{'time': 0.018000014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018006222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:49.203" endtime="20201112 09:53:49.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:49.219" level="INFO">${OVERHEAD} = {'time': [0.018000014, 0.018006222, 0.018011222, 0.018016111, 0.018023097, 0.018028972, 0.018036514, 0.018041042, 0.018045597, 0.018050931, 0.018055986, 0.018060222, 0.018068056, 0.018075417, 0.018080...</msg>
<status status="PASS" starttime="20201112 09:53:49.207" endtime="20201112 09:53:49.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.224" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:49.222" endtime="20201112 09:53:49.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.226" level="INFO">VALUE: [1.903000000001015e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.7920000000004599e-06, 1.846999999999266e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.8619999999983095e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.862000000001779e-06]</msg>
<status status="PASS" starttime="20201112 09:53:49.225" endtime="20201112 09:53:49.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.220" endtime="20201112 09:53:49.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.239" endtime="20201112 09:53:49.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:49.243" endtime="20201112 09:53:49.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.241" endtime="20201112 09:53:49.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.237" endtime="20201112 09:53:49.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.865" endtime="20201112 09:53:49.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.254" endtime="20201112 09:53:49.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:49.268" endtime="20201112 09:53:49.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.266" endtime="20201112 09:53:49.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.265" endtime="20201112 09:53:49.288"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:41.177" endtime="20201112 09:53:49.289" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:49.296" endtime="20201112 09:53:49.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.294" endtime="20201112 09:53:49.316"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.329" endtime="20201112 09:53:49.351"></status>
</kw>
<msg timestamp="20201112 09:53:49.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.327" endtime="20201112 09:53:49.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.354" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.353" endtime="20201112 09:53:49.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.357" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:49.355" endtime="20201112 09:53:49.358"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:49.325" endtime="20201112 09:53:49.358"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:49.322" endtime="20201112 09:53:49.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.321" endtime="20201112 09:53:49.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:49.363" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:49.362" endtime="20201112 09:53:49.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.360" endtime="20201112 09:53:49.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.320" endtime="20201112 09:53:49.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.320" endtime="20201112 09:53:49.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.365" endtime="20201112 09:53:49.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.318" endtime="20201112 09:53:49.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.316" endtime="20201112 09:53:49.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.293" endtime="20201112 09:53:49.367"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.376" endtime="20201112 09:53:49.399"></status>
</kw>
<msg timestamp="20201112 09:53:49.399" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.375" endtime="20201112 09:53:49.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.402" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.400" endtime="20201112 09:53:49.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.403" endtime="20201112 09:53:49.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.372" endtime="20201112 09:53:49.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.370" endtime="20201112 09:53:49.407"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.409" endtime="20201112 09:53:49.410"></status>
</kw>
<msg timestamp="20201112 09:53:49.411" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:49.407" endtime="20201112 09:53:49.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.415" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:49.414" endtime="20201112 09:53:49.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.417" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:49.416" endtime="20201112 09:53:49.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.412" endtime="20201112 09:53:49.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.422" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:49.421" endtime="20201112 09:53:49.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.424" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:49.423" endtime="20201112 09:53:49.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.419" endtime="20201112 09:53:49.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.431" endtime="20201112 09:53:49.728"></status>
</kw>
<msg timestamp="20201112 09:53:49.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071058181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071101042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.430" endtime="20201112 09:53:49.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071058181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071101042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.732" endtime="20201112 09:53:49.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.740" endtime="20201112 09:53:49.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.427" endtime="20201112 09:53:49.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.425" endtime="20201112 09:53:49.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:49.747" level="INFO">${RESULT} = [{'time': 0.071101042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2861000000005145e-05, 'source_diff': 4.2861000000005145e-05}, {'time': 0.071114569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:49.744" endtime="20201112 09:53:49.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:49.761" level="INFO">${OVERHEAD} = {'time': [0.071101042, 0.071114569, 0.071126611, 0.071137097, 0.071150194, 0.071163972, 0.071175278, 0.071185875, 0.071199833, 0.071213819, 0.071225139, 0.071238972, 0.071249139, 0.071261056, 0.071272...</msg>
<status status="PASS" starttime="20201112 09:53:49.748" endtime="20201112 09:53:49.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.766" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 09:53:49.765" endtime="20201112 09:53:49.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.769" level="INFO">VALUE: [4.2861000000005145e-05, 8.041000000000298e-06, 8.055000000006807e-06, 8.054999999992929e-06, 7.999999999994123e-06, 8.041000000000298e-06, 8.055999999992403e-06, 8.055999999992403e-06, 8.083000000005947e-06, 8.041000000000298e-06, 8.07000000001279e-06, 8.054999999992929e-06, 8.000000000008e-06, 8.05600000000628e-06, 8.055000000006807e-06, 8.05600000000628e-06, 8.055999999992403e-06, 8.054999999992929e-06, 8.055000000006807e-06, 8.054999999992929e-06, 8.05600000000628e-06, 8.055000000006807e-06, 8.02800000000714e-06, 8.054999999992929e-06, 8.041000000000298e-06, 8.055999999992403e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.027999999993263e-06, 8.068999999999438e-06, 8.04200000001365e-06, 8.068999999999438e-06, 8.054999999992929e-06, 8.041999999999772e-06, 7.971999999994983e-06, 8.041999999999772e-06, 8.05600000000628e-06, 8.069999999998911e-06, 8.054999999992929e-06, 8.041000000000298e-06, 8.068999999999438e-06, 8.027999999993263e-06, 8.055000000006807e-06, 8.055999999992403e-06, 8.041999999999772e-06, 8.026999999993789e-06, 8.082999999992069e-06, 8.041999999999772e-06, 8.055000000006807e-06, 8.068999999999438e-06]</msg>
<status status="PASS" starttime="20201112 09:53:49.767" endtime="20201112 09:53:49.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.762" endtime="20201112 09:53:49.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.772" endtime="20201112 09:53:49.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:49.776" endtime="20201112 09:53:49.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.774" endtime="20201112 09:53:49.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.770" endtime="20201112 09:53:49.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.368" endtime="20201112 09:53:49.796"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:49.290" endtime="20201112 09:53:49.797" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:49.805" endtime="20201112 09:53:49.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.804" endtime="20201112 09:53:49.825"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.840" endtime="20201112 09:53:49.861"></status>
</kw>
<msg timestamp="20201112 09:53:49.862" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.838" endtime="20201112 09:53:49.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.864" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.863" endtime="20201112 09:53:49.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.867" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:49.865" endtime="20201112 09:53:49.868"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:49.835" endtime="20201112 09:53:49.869"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:49.832" endtime="20201112 09:53:49.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.831" endtime="20201112 09:53:49.870"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:49.873" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:49.873" endtime="20201112 09:53:49.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.870" endtime="20201112 09:53:49.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.830" endtime="20201112 09:53:49.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.829" endtime="20201112 09:53:49.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.875" endtime="20201112 09:53:49.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.828" endtime="20201112 09:53:49.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.826" endtime="20201112 09:53:49.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.802" endtime="20201112 09:53:49.878"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.888" endtime="20201112 09:53:49.956"></status>
</kw>
<msg timestamp="20201112 09:53:49.956" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.886" endtime="20201112 09:53:49.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.959" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.957" endtime="20201112 09:53:49.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.960" endtime="20201112 09:53:49.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.883" endtime="20201112 09:53:49.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.881" endtime="20201112 09:53:49.963"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.965" endtime="20201112 09:53:49.967"></status>
</kw>
<msg timestamp="20201112 09:53:49.967" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:49.964" endtime="20201112 09:53:49.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.972" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:49.970" endtime="20201112 09:53:49.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.974" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:49.973" endtime="20201112 09:53:49.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.968" endtime="20201112 09:53:49.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.979" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:49.977" endtime="20201112 09:53:49.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.981" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:49.980" endtime="20201112 09:53:49.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.975" endtime="20201112 09:53:49.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.990" endtime="20201112 09:53:50.281"></status>
</kw>
<msg timestamp="20201112 09:53:50.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073635597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073669667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.987" endtime="20201112 09:53:50.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073635597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073669667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.285" endtime="20201112 09:53:50.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.293" endtime="20201112 09:53:50.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.984" endtime="20201112 09:53:50.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.982" endtime="20201112 09:53:50.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:50.300" level="INFO">${RESULT} = [{'time': 0.073669667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.406999999999716e-05, 'source_diff': 3.406999999999716e-05}, {'time': 0.074643014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:50.296" endtime="20201112 09:53:50.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:50.316" level="INFO">${OVERHEAD} = {'time': [0.073669667, 0.074643014, 0.075614167, 0.076584333, 0.077556375, 0.078529722, 0.079500333, 0.080473514, 0.081447417, 0.082419431, 0.083391986, 0.084363583, 0.085336181, 0.086309111, 0.087280...</msg>
<status status="PASS" starttime="20201112 09:53:50.301" endtime="20201112 09:53:50.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.321" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 09:53:50.320" endtime="20201112 09:53:50.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.324" level="INFO">VALUE: [3.406999999999716e-05, 3.4180999999994244e-05, 3.416700000000161e-05, 3.418000000000865e-05, 3.4180999999994244e-05, 3.4152999999995104e-05, 3.418000000000865e-05, 3.416700000000161e-05, 3.4180999999994244e-05, 3.420900000000726e-05, 3.417999999999477e-05, 3.416600000000214e-05, 3.4208999999993384e-05, 3.417999999999477e-05, 3.416600000000214e-05, 3.418100000000812e-05, 3.416600000000214e-05, 3.424999999999956e-05, 3.4166999999987735e-05, 3.416700000000161e-05, 3.417999999999477e-05, 3.4166999999987735e-05, 3.415200000000951e-05, 3.417999999999477e-05, 3.415300000000898e-05, 3.417999999999477e-05, 3.4180999999994244e-05, 3.419400000000128e-05, 3.417999999999477e-05, 3.4152999999995104e-05, 3.4152999999995104e-05, 3.423599999999305e-05, 3.419400000000128e-05, 3.419500000000075e-05, 3.4138999999988595e-05, 3.416700000000161e-05, 3.424999999999956e-05, 3.4180999999994244e-05, 3.419400000000128e-05, 3.416600000000214e-05, 3.416700000000161e-05, 3.416700000000161e-05, 3.420900000000726e-05, 3.417999999999477e-05, 3.4180999999994244e-05, 3.417999999999477e-05, 3.416700000000161e-05, 3.418000000000865e-05, 3.413900000000247e-05, 3.419400000000128e-05]</msg>
<status status="PASS" starttime="20201112 09:53:50.322" endtime="20201112 09:53:50.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.317" endtime="20201112 09:53:50.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.327" endtime="20201112 09:53:50.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:50.330" endtime="20201112 09:53:50.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.329" endtime="20201112 09:53:50.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.325" endtime="20201112 09:53:50.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.879" endtime="20201112 09:53:50.351"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:49.799" endtime="20201112 09:53:50.352" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:50.360" endtime="20201112 09:53:50.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.359" endtime="20201112 09:53:50.380"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.395" endtime="20201112 09:53:50.414"></status>
</kw>
<msg timestamp="20201112 09:53:50.415" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.392" endtime="20201112 09:53:50.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.417" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.416" endtime="20201112 09:53:50.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.421" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:50.418" endtime="20201112 09:53:50.421"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:50.389" endtime="20201112 09:53:50.422"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:50.387" endtime="20201112 09:53:50.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.386" endtime="20201112 09:53:50.423"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:50.426" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:50.426" endtime="20201112 09:53:50.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.423" endtime="20201112 09:53:50.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.385" endtime="20201112 09:53:50.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.384" endtime="20201112 09:53:50.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.428" endtime="20201112 09:53:50.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.383" endtime="20201112 09:53:50.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.381" endtime="20201112 09:53:50.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.357" endtime="20201112 09:53:50.431"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.441" endtime="20201112 09:53:50.638"></status>
</kw>
<msg timestamp="20201112 09:53:50.639" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.439" endtime="20201112 09:53:50.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.641" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.640" endtime="20201112 09:53:50.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.642" endtime="20201112 09:53:50.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.436" endtime="20201112 09:53:50.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.434" endtime="20201112 09:53:50.645"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.647" endtime="20201112 09:53:50.649"></status>
</kw>
<msg timestamp="20201112 09:53:50.649" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:50.646" endtime="20201112 09:53:50.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.654" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:50.653" endtime="20201112 09:53:50.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.656" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:50.655" endtime="20201112 09:53:50.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.650" endtime="20201112 09:53:50.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.661" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:50.660" endtime="20201112 09:53:50.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.663" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:50.662" endtime="20201112 09:53:50.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.657" endtime="20201112 09:53:50.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.671" endtime="20201112 09:53:50.964"></status>
</kw>
<msg timestamp="20201112 09:53:50.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073955319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074020056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.669" endtime="20201112 09:53:50.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073955319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074020056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.968" endtime="20201112 09:53:50.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.976" endtime="20201112 09:53:50.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.666" endtime="20201112 09:53:50.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.664" endtime="20201112 09:53:50.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:50.983" level="INFO">${RESULT} = [{'time': 0.074020056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.473699999999527e-05, 'source_diff': 6.473699999999527e-05}, {'time': 0.077573194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:50.980" endtime="20201112 09:53:50.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:50.997" level="INFO">${OVERHEAD} = {'time': [0.074020056, 0.077573194, 0.081126986, 0.084680639, 0.088235778, 0.091790222, 0.095345333, 0.098902, 0.102455222, 0.106011333, 0.109564931, 0.113119111, 0.116673069, 0.120226486, 0.123779611...</msg>
<status status="PASS" starttime="20201112 09:53:50.984" endtime="20201112 09:53:50.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.002" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 09:53:51.001" endtime="20201112 09:53:51.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.005" level="INFO">VALUE: [6.473699999999527e-05, 6.434699999999238e-05, 6.436099999999889e-05, 6.434700000000626e-05, 6.43750000000054e-05, 6.434700000000626e-05, 6.434700000000626e-05, 6.441699999999717e-05, 6.44159999999977e-05, 6.436099999999889e-05, 6.429200000000745e-05, 6.437499999999152e-05, 6.434700000000626e-05, 6.436099999999889e-05, 6.444399999999684e-05, 6.437499999997764e-05, 6.433299999999975e-05, 6.43750000000054e-05, 6.437499999997764e-05, 6.433299999999975e-05, 6.436099999998501e-05, 6.43750000000054e-05, 6.43750000000054e-05, 6.434699999999238e-05, 6.434699999999238e-05, 6.429199999999358e-05, 6.433299999999975e-05, 6.434799999999186e-05, 6.436100000001277e-05, 6.440300000001842e-05, 6.436099999998501e-05, 6.427800000000095e-05, 6.438899999999803e-05, 6.431900000000712e-05, 6.433299999999975e-05, 6.436199999998449e-05, 6.433399999999923e-05, 6.444499999999631e-05, 6.436099999998501e-05, 6.431999999997884e-05, 6.434800000001961e-05, 6.436099999998501e-05, 6.434699999999238e-05, 6.438899999999803e-05, 6.43750000000054e-05, 6.43750000000054e-05, 6.43750000000054e-05, 6.43750000000054e-05, 6.436099999998501e-05, 6.438899999999803e-05]</msg>
<status status="PASS" starttime="20201112 09:53:51.003" endtime="20201112 09:53:51.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.998" endtime="20201112 09:53:51.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.008" endtime="20201112 09:53:51.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:51.012" endtime="20201112 09:53:51.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.010" endtime="20201112 09:53:51.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.006" endtime="20201112 09:53:51.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.432" endtime="20201112 09:53:51.032"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:50.354" endtime="20201112 09:53:51.033" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:51.048" endtime="20201112 09:53:51.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.045" endtime="20201112 09:53:51.071"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.100" endtime="20201112 09:53:51.130"></status>
</kw>
<msg timestamp="20201112 09:53:51.131" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.097" endtime="20201112 09:53:51.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.136" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.133" endtime="20201112 09:53:51.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.142" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:51.139" endtime="20201112 09:53:51.142"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:51.091" endtime="20201112 09:53:51.143"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:51.086" endtime="20201112 09:53:51.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.083" endtime="20201112 09:53:51.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:51.147" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:51.147" endtime="20201112 09:53:51.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.144" endtime="20201112 09:53:51.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.081" endtime="20201112 09:53:51.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.080" endtime="20201112 09:53:51.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.150" endtime="20201112 09:53:51.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.077" endtime="20201112 09:53:51.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.073" endtime="20201112 09:53:51.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.042" endtime="20201112 09:53:51.152"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.162" endtime="20201112 09:53:51.184"></status>
</kw>
<msg timestamp="20201112 09:53:51.185" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.160" endtime="20201112 09:53:51.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.187" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.186" endtime="20201112 09:53:51.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.189" endtime="20201112 09:53:51.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.158" endtime="20201112 09:53:51.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.155" endtime="20201112 09:53:51.191"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.194" endtime="20201112 09:53:51.195"></status>
</kw>
<msg timestamp="20201112 09:53:51.196" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:51.192" endtime="20201112 09:53:51.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.200" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:51.199" endtime="20201112 09:53:51.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.202" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:51.201" endtime="20201112 09:53:51.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.197" endtime="20201112 09:53:51.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.207" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:51.206" endtime="20201112 09:53:51.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.209" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:51.208" endtime="20201112 09:53:51.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.204" endtime="20201112 09:53:51.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.217" endtime="20201112 09:53:51.513"></status>
</kw>
<msg timestamp="20201112 09:53:51.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.103301167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.103307069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.215" endtime="20201112 09:53:51.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.103301167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.103307069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.517" endtime="20201112 09:53:51.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.526" endtime="20201112 09:53:51.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.213" endtime="20201112 09:53:51.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.211" endtime="20201112 09:53:51.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:51.534" level="INFO">${RESULT} = [{'time': 0.103307069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.902000000002072e-06, 'source_diff': 5.902000000002072e-06}, {'time': 0.103319486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:51.530" endtime="20201112 09:53:51.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:51.547" level="INFO">${OVERHEAD} = {'time': [0.103307069, 0.103319486, 0.103332819, 0.103344764, 0.1033585, 0.10337175, 0.103386194, 0.103399694, 0.103412639, 0.103426694, 0.103440125, 0.10345525, 0.10346675, 0.10348175, 0.103494014, 0...</msg>
<status status="PASS" starttime="20201112 09:53:51.535" endtime="20201112 09:53:51.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.552" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 09:53:51.551" endtime="20201112 09:53:51.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.555" level="INFO">VALUE: [5.902000000002072e-06, 1.514000000008009e-06, 1.4580000000097293e-06, 1.5420000000071488e-06, 1.4580000000097293e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.5970000000059548e-06, 1.5420000000071488e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.5000000000015001e-06, 1.4309999999961853e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5129999999946575e-06, 1.5270000000011663e-06, 1.582999999999446e-06, 1.5129999999946575e-06, 1.5559999999997798e-06, 1.5420000000071488e-06, 1.5270000000011663e-06, 1.5559999999997798e-06, 1.4720000000023603e-06, 1.5139999999941312e-06, 1.5409999999937973e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.5139999999941312e-06, 1.52800000000064e-06, 1.514000000008009e-06, 1.52800000000064e-06, 1.5139999999941312e-06, 1.5139999999941312e-06, 1.5139999999941312e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5139999999941312e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.5139999999941312e-06, 1.52800000000064e-06, 1.5699999999924108e-06, 1.52800000000064e-06, 1.514000000008009e-06]</msg>
<status status="PASS" starttime="20201112 09:53:51.553" endtime="20201112 09:53:51.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.548" endtime="20201112 09:53:51.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.558" endtime="20201112 09:53:51.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:51.561" endtime="20201112 09:53:51.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.560" endtime="20201112 09:53:51.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.556" endtime="20201112 09:53:51.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.153" endtime="20201112 09:53:51.582"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:51.036" endtime="20201112 09:53:51.583" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:51.591" endtime="20201112 09:53:51.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.589" endtime="20201112 09:53:51.611"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.626" endtime="20201112 09:53:51.645"></status>
</kw>
<msg timestamp="20201112 09:53:51.645" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.624" endtime="20201112 09:53:51.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.648" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.646" endtime="20201112 09:53:51.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.651" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:51.649" endtime="20201112 09:53:51.651"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:51.620" endtime="20201112 09:53:51.652"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:51.618" endtime="20201112 09:53:51.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.616" endtime="20201112 09:53:51.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:51.657" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:51.656" endtime="20201112 09:53:51.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.654" endtime="20201112 09:53:51.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.616" endtime="20201112 09:53:51.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.615" endtime="20201112 09:53:51.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.659" endtime="20201112 09:53:51.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.613" endtime="20201112 09:53:51.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.612" endtime="20201112 09:53:51.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.588" endtime="20201112 09:53:51.662"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.671" endtime="20201112 09:53:51.740"></status>
</kw>
<msg timestamp="20201112 09:53:51.741" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.670" endtime="20201112 09:53:51.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.743" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.742" endtime="20201112 09:53:51.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.744" endtime="20201112 09:53:51.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.667" endtime="20201112 09:53:51.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.665" endtime="20201112 09:53:51.747"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.749" endtime="20201112 09:53:51.751"></status>
</kw>
<msg timestamp="20201112 09:53:51.751" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:51.748" endtime="20201112 09:53:51.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.756" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:51.755" endtime="20201112 09:53:51.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.758" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:51.757" endtime="20201112 09:53:51.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.752" endtime="20201112 09:53:51.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.763" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:51.762" endtime="20201112 09:53:51.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.765" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:51.764" endtime="20201112 09:53:51.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.759" endtime="20201112 09:53:51.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.774" endtime="20201112 09:53:52.065"></status>
</kw>
<msg timestamp="20201112 09:53:52.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071813347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071822236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.771" endtime="20201112 09:53:52.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071813347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071822236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.069" endtime="20201112 09:53:52.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.077" endtime="20201112 09:53:52.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.768" endtime="20201112 09:53:52.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.766" endtime="20201112 09:53:52.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:52.084" level="INFO">${RESULT} = [{'time': 0.071822236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.072801875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:52.081" endtime="20201112 09:53:52.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:52.101" level="INFO">${OVERHEAD} = {'time': [0.071822236, 0.072801875, 0.073784764, 0.074764208, 0.075744847, 0.076727056, 0.077706833, 0.078688292, 0.079668833, 0.080651708, 0.081631319, 0.082614292, 0.083596111, 0.084578125, 0.085561...</msg>
<status status="PASS" starttime="20201112 09:53:52.086" endtime="20201112 09:53:52.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.105" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 09:53:52.104" endtime="20201112 09:53:52.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.108" level="INFO">VALUE: [8.888999999998037e-06, 8.888999999998037e-06, 8.806000000000092e-06, 8.875000000005406e-06, 8.875000000005406e-06, 8.861999999998371e-06, 8.875000000005406e-06, 8.889000000011915e-06, 8.915999999997704e-06, 8.902000000005073e-06, 8.874999999991529e-06, 8.889000000011915e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.805000000000618e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.874999999991529e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.861999999998371e-06, 8.903000000004546e-06, 8.875000000005406e-06, 8.847000000006267e-06, 8.958000000003352e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.847000000006267e-06, 8.818999999993249e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.943999999996843e-06, 8.847000000006267e-06, 8.888999999998037e-06, 8.862000000012249e-06, 8.887999999998564e-06, 8.874999999991529e-06, 8.860999999998898e-06, 8.874999999991529e-06, 8.874999999991529e-06, 8.860999999998898e-06, 8.916999999997177e-06, 8.875000000005406e-06]</msg>
<status status="PASS" starttime="20201112 09:53:52.107" endtime="20201112 09:53:52.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.102" endtime="20201112 09:53:52.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.111" endtime="20201112 09:53:52.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:52.115" endtime="20201112 09:53:52.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.113" endtime="20201112 09:53:52.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.110" endtime="20201112 09:53:52.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.663" endtime="20201112 09:53:52.136"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:51.585" endtime="20201112 09:53:52.136" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:52.144" endtime="20201112 09:53:52.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.143" endtime="20201112 09:53:52.164"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.179" endtime="20201112 09:53:52.198"></status>
</kw>
<msg timestamp="20201112 09:53:52.199" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.176" endtime="20201112 09:53:52.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.201" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.200" endtime="20201112 09:53:52.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.205" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:52.202" endtime="20201112 09:53:52.205"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:52.174" endtime="20201112 09:53:52.206"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:52.171" endtime="20201112 09:53:52.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.170" endtime="20201112 09:53:52.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:52.211" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:52.210" endtime="20201112 09:53:52.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.208" endtime="20201112 09:53:52.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.169" endtime="20201112 09:53:52.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.168" endtime="20201112 09:53:52.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.212" endtime="20201112 09:53:52.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.167" endtime="20201112 09:53:52.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.165" endtime="20201112 09:53:52.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.141" endtime="20201112 09:53:52.215"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.225" endtime="20201112 09:53:52.423"></status>
</kw>
<msg timestamp="20201112 09:53:52.424" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.223" endtime="20201112 09:53:52.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.427" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.425" endtime="20201112 09:53:52.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.428" endtime="20201112 09:53:52.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.220" endtime="20201112 09:53:52.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.218" endtime="20201112 09:53:52.431"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.433" endtime="20201112 09:53:52.435"></status>
</kw>
<msg timestamp="20201112 09:53:52.436" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:52.432" endtime="20201112 09:53:52.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.440" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:52.439" endtime="20201112 09:53:52.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.443" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:52.442" endtime="20201112 09:53:52.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.436" endtime="20201112 09:53:52.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.448" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:52.447" endtime="20201112 09:53:52.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.450" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:52.449" endtime="20201112 09:53:52.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.445" endtime="20201112 09:53:52.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.458" endtime="20201112 09:53:52.765"></status>
</kw>
<msg timestamp="20201112 09:53:52.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073982292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073998667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.456" endtime="20201112 09:53:52.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073982292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073998667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.770" endtime="20201112 09:53:52.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.778" endtime="20201112 09:53:52.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.453" endtime="20201112 09:53:52.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.452" endtime="20201112 09:53:52.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:52.785" level="INFO">${RESULT} = [{'time': 0.073998667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.637499999999903e-05, 'source_diff': 1.637499999999903e-05}, {'time': 0.077568806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:52.782" endtime="20201112 09:53:52.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:52.799" level="INFO">${OVERHEAD} = {'time': [0.073998667, 0.077568806, 0.081139694, 0.084710417, 0.088281181, 0.091850639, 0.095422958, 0.098993472, 0.102563306, 0.106134806, 0.109705847, 0.113275597, 0.116844931, 0.120417319, 0.123990...</msg>
<status status="PASS" starttime="20201112 09:53:52.786" endtime="20201112 09:53:52.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.804" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 09:53:52.802" endtime="20201112 09:53:52.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.806" level="INFO">VALUE: [1.637499999999903e-05, 1.637499999999903e-05, 1.636099999999252e-05, 1.637499999999903e-05, 1.6389000000005538e-05, 1.638899999999166e-05, 1.6429999999997835e-05, 1.637499999999903e-05, 1.6389000000005538e-05, 1.6347999999999363e-05, 1.640299999999817e-05, 1.6361000000006398e-05, 1.6389000000005538e-05, 1.636099999999252e-05, 1.637499999999903e-05, 1.637499999998515e-05, 1.6389000000005538e-05, 1.636099999999252e-05, 1.6388999999977782e-05, 1.636099999999252e-05, 1.6415999999991326e-05, 1.643099999998343e-05, 1.6389000000005538e-05, 1.6375000000012907e-05, 1.637499999998515e-05, 1.6334000000006732e-05, 1.630499999999424e-05, 1.6375000000012907e-05, 1.637499999998515e-05, 1.6375000000012907e-05, 1.6375000000012907e-05, 1.634699999999989e-05, 1.6375000000012907e-05, 1.636099999999252e-05, 1.6375000000012907e-05, 1.637499999998515e-05, 1.6444000000004344e-05, 1.633300000000726e-05, 1.6305999999993714e-05, 1.6389000000005538e-05, 1.6361000000020276e-05, 1.637499999998515e-05, 1.6417000000018556e-05, 1.6388999999977782e-05, 1.6431000000011187e-05, 1.6417000000018556e-05, 1.6417000000018556e-05, 1.6375000000012907e-05, 1.6375000000012907e-05, 1.6389000000005538e-05]</msg>
<status status="PASS" starttime="20201112 09:53:52.805" endtime="20201112 09:53:52.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.800" endtime="20201112 09:53:52.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.810" endtime="20201112 09:53:52.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:52.813" endtime="20201112 09:53:52.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.812" endtime="20201112 09:53:52.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.808" endtime="20201112 09:53:52.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.216" endtime="20201112 09:53:52.834"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:52.138" endtime="20201112 09:53:52.835" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:53:31.807" endtime="20201112 09:53:52.843"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.912" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:53:52.920" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:53:53.926" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:53:52.910" endtime="20201112 09:53:53.926"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.929" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:53:53.927" endtime="20201112 09:53:53.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.909" endtime="20201112 09:53:53.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:53.932" endtime="20201112 09:53:54.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.931" endtime="20201112 09:53:54.119"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.132" endtime="20201112 09:53:54.156"></status>
</kw>
<msg timestamp="20201112 09:53:54.156" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.131" endtime="20201112 09:53:54.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.159" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.157" endtime="20201112 09:53:54.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.162" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:54.160" endtime="20201112 09:53:54.163"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:54.128" endtime="20201112 09:53:54.164"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:54.126" endtime="20201112 09:53:54.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.124" endtime="20201112 09:53:54.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:54.173" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:54.169" endtime="20201112 09:53:54.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.165" endtime="20201112 09:53:54.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.123" endtime="20201112 09:53:54.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.123" endtime="20201112 09:53:54.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.177" endtime="20201112 09:53:54.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.122" endtime="20201112 09:53:54.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.183" endtime="20201112 09:53:54.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.120" endtime="20201112 09:53:54.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.907" endtime="20201112 09:53:54.188"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:54.201" endtime="20201112 09:53:54.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.198" endtime="20201112 09:53:54.225"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.253" endtime="20201112 09:53:54.275"></status>
</kw>
<msg timestamp="20201112 09:53:54.276" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.250" endtime="20201112 09:53:54.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.279" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.277" endtime="20201112 09:53:54.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.282" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:54.280" endtime="20201112 09:53:54.282"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:54.244" endtime="20201112 09:53:54.283"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:54.239" endtime="20201112 09:53:54.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.236" endtime="20201112 09:53:54.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:54.294" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:54.293" endtime="20201112 09:53:54.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.285" endtime="20201112 09:53:54.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.234" endtime="20201112 09:53:54.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.233" endtime="20201112 09:53:54.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.296" endtime="20201112 09:53:54.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.230" endtime="20201112 09:53:54.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.226" endtime="20201112 09:53:54.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.195" endtime="20201112 09:53:54.299"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.311" endtime="20201112 09:53:54.328"></status>
</kw>
<msg timestamp="20201112 09:53:54.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.309" endtime="20201112 09:53:54.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.330" endtime="20201112 09:53:54.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.333" endtime="20201112 09:53:54.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.305" endtime="20201112 09:53:54.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.303" endtime="20201112 09:53:54.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.342" endtime="20201112 09:53:54.645"></status>
</kw>
<msg timestamp="20201112 09:53:54.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.098733931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.098775778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.340" endtime="20201112 09:53:54.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.098733931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.098775778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.649" endtime="20201112 09:53:54.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.657" endtime="20201112 09:53:54.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.338" endtime="20201112 09:53:54.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.336" endtime="20201112 09:53:54.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:54.665" level="INFO">${RESULT} = [{'time': 0.098775778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1846999999997636e-05, 'source_diff': 4.1846999999997636e-05}, {'time': 0.098784403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:54.661" endtime="20201112 09:53:54.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:54.678" level="INFO">${ACCURACY} = {'time': [0.098775778, 0.098784403, 0.098791097, 0.098798306, 0.098805597, 0.098811417, 0.098820083, 0.098828514, 0.098834125, 0.098843542, 0.098851472, 0.098859208, 0.098868319, 0.098874194, 0.098881...</msg>
<status status="PASS" starttime="20201112 09:53:54.666" endtime="20201112 09:53:54.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.683" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 09:53:54.682" endtime="20201112 09:53:54.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.686" level="INFO">VALUE: [4.1846999999997636e-05, 3.209000000004014e-06, 2.7359999999893025e-06, 3.209000000004014e-06, 3.7639999999894425e-06, 2.722999999996145e-06, 2.7080000000040405e-06, 3.1670000000122434e-06, 3.2219999999971716e-06, 3.195000000011383e-06, 3.1939999999980317e-06, 2.6939999999975317e-06, 3.2079999999906628e-06, 2.7219999999966715e-06, 3.2079999999906628e-06, 3.2360000000036804e-06, 3.2080000000045406e-06, 3.2080000000045406e-06, 2.7769999999954775e-06, 3.209000000004014e-06, 2.7089999999896364e-06, 3.209000000004014e-06, 2.7080000000040405e-06, 3.1939999999980317e-06, 3.165999999998892e-06, 3.2089999999901364e-06, 3.7090000000045142e-06, 2.7079999999901627e-06, 2.7079999999901627e-06, 2.750000000009689e-06, 2.7079999999901627e-06, 3.209000000004014e-06, 3.2080000000045406e-06, 2.722999999996145e-06, 3.209000000004014e-06, 2.7080000000040405e-06, 2.76400000000232e-06, 2.7079999999901627e-06, 3.2219999999971716e-06, 2.7639999999884424e-06, 2.6939999999975317e-06, 3.2220000000110494e-06, 3.6809999999914966e-06, 2.7080000000040405e-06, 3.2080000000045406e-06, 3.26400000000282e-06, 3.209000000004014e-06, 3.2219999999971716e-06, 3.2080000000045406e-06, 3.665999999999392e-06]</msg>
<status status="PASS" starttime="20201112 09:53:54.684" endtime="20201112 09:53:54.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.679" endtime="20201112 09:53:54.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.690" endtime="20201112 09:53:54.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:54.693" endtime="20201112 09:53:54.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.691" endtime="20201112 09:53:54.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.688" endtime="20201112 09:53:54.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.301" endtime="20201112 09:53:54.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.300" endtime="20201112 09:53:54.714"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.723" endtime="20201112 09:53:54.741"></status>
</kw>
<msg timestamp="20201112 09:53:54.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.721" endtime="20201112 09:53:54.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.743" endtime="20201112 09:53:54.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.745" endtime="20201112 09:53:54.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.719" endtime="20201112 09:53:54.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.716" endtime="20201112 09:53:54.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.755" endtime="20201112 09:53:55.036"></status>
</kw>
<msg timestamp="20201112 09:53:55.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020903319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020907514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.753" endtime="20201112 09:53:55.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020903319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020907514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.040" endtime="20201112 09:53:55.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.049" endtime="20201112 09:53:55.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.750" endtime="20201112 09:53:55.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.749" endtime="20201112 09:53:55.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:55.056" level="INFO">${RESULT} = [{'time': 0.020907514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.020916444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:55.052" endtime="20201112 09:53:55.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:55.070" level="INFO">${ACCURACY} = {'time': [0.020907514, 0.020916444, 0.020926431, 0.020932611, 0.020941778, 0.020948653, 0.020954764, 0.0209625, 0.020969931, 0.020977778, 0.020987583, 0.020994819, 0.021003625, 0.021012611, 0.02102266...</msg>
<status status="PASS" starttime="20201112 09:53:55.057" endtime="20201112 09:53:55.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.075" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 09:53:55.074" endtime="20201112 09:53:55.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.078" level="INFO">VALUE: [4.1949999999985055e-06, 3.7079999999981017e-06, 4.1949999999985055e-06, 3.6940000000020012e-06, 3.709000000001045e-06, 3.653000000002765e-06, 3.722000000001141e-06, 3.693999999998532e-06, 4.778000000000421e-06, 4.264000000000351e-06, 3.708000000001571e-06, 4.208000000002071e-06, 4.208000000002071e-06, 3.708000000001571e-06, 4.208999999998075e-06, 4.721999999998672e-06, 3.7219999999976716e-06, 3.7079999999981017e-06, 4.221999999998172e-06, 3.709000000001045e-06, 3.708000000001571e-06, 4.708000000002571e-06, 4.152000000000322e-06, 4.264000000000351e-06, 3.722000000001141e-06, 3.695000000001475e-06, 3.7229999999971453e-06, 4.222000000001641e-06, 4.721999999998672e-06, 3.667000000002335e-06, 4.208000000002071e-06, 4.6389999999972564e-06, 4.221999999998172e-06, 4.250000000000781e-06, 3.722000000001141e-06, 3.7089999999975753e-06, 4.222000000001641e-06, 3.736000000000711e-06, 3.722000000001141e-06, 4.208999999998075e-06, 4.305999999999061e-06, 3.7370000000001846e-06, 3.7089999999975753e-06, 3.722000000001141e-06, 4.2359999999977416e-06, 3.667000000002335e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.208000000002071e-06, 4.193999999999032e-06]</msg>
<status status="PASS" starttime="20201112 09:53:55.076" endtime="20201112 09:53:55.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.071" endtime="20201112 09:53:55.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.081" endtime="20201112 09:53:55.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.085" endtime="20201112 09:53:55.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.083" endtime="20201112 09:53:55.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.080" endtime="20201112 09:53:55.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.715" endtime="20201112 09:53:55.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.714" endtime="20201112 09:53:55.106"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.115" endtime="20201112 09:53:55.133"></status>
</kw>
<msg timestamp="20201112 09:53:55.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.113" endtime="20201112 09:53:55.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.134" endtime="20201112 09:53:55.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.137" endtime="20201112 09:53:55.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.111" endtime="20201112 09:53:55.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.108" endtime="20201112 09:53:55.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.147" endtime="20201112 09:53:55.431"></status>
</kw>
<msg timestamp="20201112 09:53:55.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02007025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020075431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:55.146" endtime="20201112 09:53:55.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02007025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020075431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:55.436" endtime="20201112 09:53:55.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.444" endtime="20201112 09:53:55.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.143" endtime="20201112 09:53:55.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.141" endtime="20201112 09:53:55.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:55.451" level="INFO">${RESULT} = [{'time': 0.020075431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.020085722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:55.448" endtime="20201112 09:53:55.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:55.465" level="INFO">${ACCURACY} = {'time': [0.020075431, 0.020085722, 0.020094417, 0.020103389, 0.020113333, 0.020123486, 0.020131667, 0.020142278, 0.020149333, 0.02016025, 0.020168583, 0.020177292, 0.020188278, 0.020197667, 0.0202055...</msg>
<status status="PASS" starttime="20201112 09:53:55.452" endtime="20201112 09:53:55.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.470" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 09:53:55.469" endtime="20201112 09:53:55.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.472" level="INFO">VALUE: [5.180999999999936e-06, 5.264000000001351e-06, 4.722999999998145e-06, 4.6949999999990055e-06, 5.236000000002211e-06, 4.707999999999102e-06, 4.7089999999985754e-06, 5.1949999999995056e-06, 4.693999999999532e-06, 4.708000000002571e-06, 5.235999999998742e-06, 4.6949999999990055e-06, 5.2089999999990755e-06, 5.235999999998742e-06, 4.693999999999532e-06, 5.721999999999672e-06, 4.723000000001615e-06, 4.709000000002045e-06, 5.2089999999990755e-06, 5.222000000002641e-06, 4.693999999999532e-06, 5.207999999999602e-06, 4.6949999999990055e-06, 4.708000000002571e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.2499999999983116e-06, 5.180999999999936e-06, 5.2089999999990755e-06, 5.208000000003071e-06, 5.195000000002975e-06, 5.180999999999936e-06, 5.2089999999990755e-06, 4.709000000002045e-06, 4.723000000001615e-06, 5.207999999999602e-06, 4.708000000002571e-06, 4.735999999998242e-06, 4.723000000001615e-06, 4.707999999999102e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.209000000002545e-06, 5.207999999999602e-06, 5.694000000000532e-06, 4.778000000000421e-06, 5.721999999999672e-06, 5.207999999999602e-06, 4.708000000002571e-06, 5.235999999998742e-06]</msg>
<status status="PASS" starttime="20201112 09:53:55.471" endtime="20201112 09:53:55.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.466" endtime="20201112 09:53:55.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.476" endtime="20201112 09:53:55.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.480" endtime="20201112 09:53:55.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.478" endtime="20201112 09:53:55.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.474" endtime="20201112 09:53:55.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.107" endtime="20201112 09:53:55.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.106" endtime="20201112 09:53:55.501"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.510" endtime="20201112 09:53:55.527"></status>
</kw>
<msg timestamp="20201112 09:53:55.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.508" endtime="20201112 09:53:55.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.529" endtime="20201112 09:53:55.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.531" endtime="20201112 09:53:55.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.505" endtime="20201112 09:53:55.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.503" endtime="20201112 09:53:55.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.542" endtime="20201112 09:53:55.829"></status>
</kw>
<msg timestamp="20201112 09:53:55.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020222986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.540" endtime="20201112 09:53:55.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020222986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.833" endtime="20201112 09:53:55.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.841" endtime="20201112 09:53:55.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.537" endtime="20201112 09:53:55.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.536" endtime="20201112 09:53:55.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:55.849" level="INFO">${RESULT} = [{'time': 0.020228694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.02023875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:53:55.845" endtime="20201112 09:53:55.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:55.863" level="INFO">${ACCURACY} = {'time': [0.020228694, 0.02023875, 0.020247694, 0.020259542, 0.020268722, 0.020279958, 0.020291653, 0.020301611, 0.020313542, 0.020323, 0.020333583, 0.020342569, 0.020354556, 0.020366, 0.020375056, 0....</msg>
<status status="PASS" starttime="20201112 09:53:55.850" endtime="20201112 09:53:55.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.867" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 09:53:55.866" endtime="20201112 09:53:55.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.870" level="INFO">VALUE: [5.708000000000102e-06, 5.6389999999982565e-06, 5.735999999999242e-06, 5.7229999999991454e-06, 5.721999999999672e-06, 5.666000000001392e-06, 5.735999999999242e-06, 5.708000000000102e-06, 5.7089999999995755e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.194000000001032e-06, 5.7089999999995755e-06, 6.6669999999983964e-06, 6.2090000000000756e-06, 5.721999999999672e-06, 6.208000000000602e-06, 5.721999999999672e-06, 5.694000000000532e-06, 6.2090000000000756e-06, 5.7089999999995755e-06, 6.222000000000172e-06, 6.208000000000602e-06, 5.708000000000102e-06, 5.695000000000006e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 5.736999999998715e-06, 5.694000000000532e-06, 6.249999999999312e-06, 5.722000000003141e-06, 5.735999999999242e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.208000000000602e-06, 5.708000000000102e-06, 6.222000000000172e-06, 5.7089999999995755e-06, 6.250000000002781e-06, 5.721999999999672e-06, 5.694000000000532e-06, 6.2079999999971325e-06, 6.264000000002351e-06, 6.181000000000936e-06, 5.708000000000102e-06, 6.208000000000602e-06, 5.708000000000102e-06]</msg>
<status status="PASS" starttime="20201112 09:53:55.868" endtime="20201112 09:53:55.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.863" endtime="20201112 09:53:55.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.874" endtime="20201112 09:53:55.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.877" endtime="20201112 09:53:55.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.876" endtime="20201112 09:53:55.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.872" endtime="20201112 09:53:55.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.502" endtime="20201112 09:53:55.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.501" endtime="20201112 09:53:55.898"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.907" endtime="20201112 09:53:55.923"></status>
</kw>
<msg timestamp="20201112 09:53:55.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.905" endtime="20201112 09:53:55.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.925" endtime="20201112 09:53:55.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.928" endtime="20201112 09:53:55.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.903" endtime="20201112 09:53:55.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.901" endtime="20201112 09:53:55.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.938" endtime="20201112 09:53:56.224"></status>
</kw>
<msg timestamp="20201112 09:53:56.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020108278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.937" endtime="20201112 09:53:56.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020108278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.228" endtime="20201112 09:53:56.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.237" endtime="20201112 09:53:56.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.934" endtime="20201112 09:53:56.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.932" endtime="20201112 09:53:56.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:56.244" level="INFO">${RESULT} = [{'time': 0.020115556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.020125528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:56.240" endtime="20201112 09:53:56.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:56.258" level="INFO">${ACCURACY} = {'time': [0.020115556, 0.020125528, 0.020136764, 0.020148444, 0.02015975, 0.020172444, 0.020184472, 0.020194708, 0.020204361, 0.020216514, 0.020226444, 0.020238542, 0.020250778, 0.020263333, 0.0202743...</msg>
<status status="PASS" starttime="20201112 09:53:56.245" endtime="20201112 09:53:56.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.262" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 09:53:56.261" endtime="20201112 09:53:56.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.265" level="INFO">VALUE: [7.2779999999994516e-06, 6.709000000000576e-06, 7.195000000001506e-06, 6.708000000001102e-06, 7.194000000002032e-06, 6.736000000000242e-06, 7.2079999999981326e-06, 7.2079999999981326e-06, 7.236000000000742e-06, 6.722000000000672e-06, 7.2079999999981326e-06, 6.695000000001006e-06, 7.125000000000187e-06, 7.194000000002032e-06, 7.165999999999423e-06, 6.763999999999382e-06, 7.194000000002032e-06, 7.167000000002366e-06, 6.722000000000672e-06, 7.222000000001172e-06, 7.222000000001172e-06, 6.763999999999382e-06, 6.639000000002726e-06, 7.208000000001602e-06, 6.708000000001102e-06, 7.708000000002102e-06, 7.2219999999977025e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.7079999999976325e-06, 7.193999999998563e-06, 6.708000000001102e-06, 6.7230000000001455e-06, 7.209000000001076e-06, 7.236000000000742e-06, 6.694000000001532e-06, 6.708000000001102e-06, 7.250000000000312e-06, 7.222000000001172e-06, 7.209000000001076e-06, 6.708000000001102e-06, 7.2219999999977025e-06, 7.208000000001602e-06, 7.208000000001602e-06, 7.208000000001602e-06, 7.2219999999977025e-06, 7.193999999998563e-06, 6.749999999999812e-06, 7.2230000000006456e-06]</msg>
<status status="PASS" starttime="20201112 09:53:56.264" endtime="20201112 09:53:56.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.259" endtime="20201112 09:53:56.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.269" endtime="20201112 09:53:56.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:56.272" endtime="20201112 09:53:56.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.271" endtime="20201112 09:53:56.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.267" endtime="20201112 09:53:56.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.899" endtime="20201112 09:53:56.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.899" endtime="20201112 09:53:56.293"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.302" endtime="20201112 09:53:56.318"></status>
</kw>
<msg timestamp="20201112 09:53:56.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.301" endtime="20201112 09:53:56.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.319" endtime="20201112 09:53:56.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.322" endtime="20201112 09:53:56.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.298" endtime="20201112 09:53:56.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.296" endtime="20201112 09:53:56.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.332" endtime="20201112 09:53:56.618"></status>
</kw>
<msg timestamp="20201112 09:53:56.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020089819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.331" endtime="20201112 09:53:56.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020089819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.623" endtime="20201112 09:53:56.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.631" endtime="20201112 09:53:56.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.328" endtime="20201112 09:53:56.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.326" endtime="20201112 09:53:56.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:56.638" level="INFO">${RESULT} = [{'time': 0.020097542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.020108597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:56.635" endtime="20201112 09:53:56.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:56.653" level="INFO">${ACCURACY} = {'time': [0.020097542, 0.020108597, 0.020120764, 0.020133625, 0.020144625, 0.020157597, 0.020168792, 0.020179514, 0.020190625, 0.020202625, 0.020215736, 0.020226542, 0.020238403, 0.020251708, 0.020264...</msg>
<status status="PASS" starttime="20201112 09:53:56.639" endtime="20201112 09:53:56.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.657" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 09:53:56.656" endtime="20201112 09:53:56.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.660" level="INFO">VALUE: [7.723000000001146e-06, 8.207999999999133e-06, 8.707999999999633e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.166999999999897e-06, 7.721999999998203e-06, 8.222000000002172e-06, 8.223000000001646e-06, 7.708999999998106e-06, 8.221999999998703e-06, 7.722000000001672e-06, 8.153000000000327e-06, 8.237000000001216e-06, 7.709000000001576e-06, 8.207999999999133e-06, 8.166999999999897e-06, 7.721999999998203e-06, 8.221999999998703e-06, 8.208999999998606e-06, 7.708000000002102e-06, 8.221999999998703e-06, 7.707999999998633e-06, 8.236000000001742e-06, 7.722000000001672e-06, 7.722999999997676e-06, 7.694000000002532e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.721999999998203e-06, 8.208999999998606e-06, 8.166000000000423e-06, 8.250000000001312e-06, 7.735999999997772e-06, 8.209000000002076e-06, 8.723000000002146e-06, 8.207999999999133e-06, 8.221999999998703e-06, 7.693999999999063e-06, 8.236000000001742e-06, 7.722000000001672e-06, 7.750000000000812e-06, 8.208000000002602e-06, 8.153000000000327e-06, 8.721999999999203e-06, 8.207999999999133e-06, 7.708000000002102e-06]</msg>
<status status="PASS" starttime="20201112 09:53:56.659" endtime="20201112 09:53:56.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.654" endtime="20201112 09:53:56.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.664" endtime="20201112 09:53:56.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:56.667" endtime="20201112 09:53:56.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.666" endtime="20201112 09:53:56.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.662" endtime="20201112 09:53:56.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.294" endtime="20201112 09:53:56.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.294" endtime="20201112 09:53:56.688"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.697" endtime="20201112 09:53:56.713"></status>
</kw>
<msg timestamp="20201112 09:53:56.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.696" endtime="20201112 09:53:56.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.715" endtime="20201112 09:53:56.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.717" endtime="20201112 09:53:56.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.693" endtime="20201112 09:53:56.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.691" endtime="20201112 09:53:56.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.728" endtime="20201112 09:53:57.014"></status>
</kw>
<msg timestamp="20201112 09:53:57.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.726" endtime="20201112 09:53:57.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.018" endtime="20201112 09:53:57.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.026" endtime="20201112 09:53:57.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.723" endtime="20201112 09:53:57.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.721" endtime="20201112 09:53:57.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:57.033" level="INFO">${RESULT} = [{'time': 0.020109847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.020124833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:57.030" endtime="20201112 09:53:57.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:57.047" level="INFO">${ACCURACY} = {'time': [0.020109847, 0.020124833, 0.020137569, 0.020149819, 0.020163708, 0.020174847, 0.020188778, 0.020202514, 0.020216806, 0.020230625, 0.020242875, 0.020254542, 0.020266889, 0.020279917, 0.020292...</msg>
<status status="PASS" starttime="20201112 09:53:57.034" endtime="20201112 09:53:57.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.052" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 09:53:57.051" endtime="20201112 09:53:57.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.054" level="INFO">VALUE: [8.721999999999203e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.722000000002672e-06, 9.221999999999703e-06, 9.139000000001757e-06, 9.166999999997427e-06, 8.721999999999203e-06, 9.208999999999606e-06, 9.195000000000036e-06, 9.236000000002742e-06, 8.736000000002242e-06, 9.195000000000036e-06, 9.208000000000133e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.762999999998439e-06, 8.723000000002146e-06, 9.195000000000036e-06, 9.236000000002742e-06, 9.722000000000203e-06, 9.180999999996997e-06, 9.221999999999703e-06, 8.709000000002576e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.208000000000133e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.695000000003006e-06, 9.263999999998412e-06, 8.707999999999633e-06, 8.749999999998342e-06, 9.235999999999273e-06, 9.194000000000563e-06, 8.722999999998676e-06, 8.735999999998773e-06, 8.735999999998773e-06, 9.236000000002742e-06, 8.750000000001812e-06, 8.667000000000397e-06, 9.181000000000467e-06, 8.652000000001353e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.721999999999203e-06, 9.680000000001493e-06]</msg>
<status status="PASS" starttime="20201112 09:53:57.053" endtime="20201112 09:53:57.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.048" endtime="20201112 09:53:57.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.058" endtime="20201112 09:53:57.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:57.062" endtime="20201112 09:53:57.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.060" endtime="20201112 09:53:57.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.056" endtime="20201112 09:53:57.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.689" endtime="20201112 09:53:57.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.689" endtime="20201112 09:53:57.083"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.092" endtime="20201112 09:53:57.109"></status>
</kw>
<msg timestamp="20201112 09:53:57.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.090" endtime="20201112 09:53:57.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.111" endtime="20201112 09:53:57.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.113" endtime="20201112 09:53:57.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.087" endtime="20201112 09:53:57.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.085" endtime="20201112 09:53:57.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.124" endtime="20201112 09:53:57.410"></status>
</kw>
<msg timestamp="20201112 09:53:57.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020189653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020199361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.122" endtime="20201112 09:53:57.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020189653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020199361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.414" endtime="20201112 09:53:57.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.423" endtime="20201112 09:53:57.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.120" endtime="20201112 09:53:57.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.118" endtime="20201112 09:53:57.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:57.430" level="INFO">${RESULT} = [{'time': 0.020199361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.020213431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:57.426" endtime="20201112 09:53:57.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:57.444" level="INFO">${ACCURACY} = {'time': [0.020199361, 0.020213431, 0.020227347, 0.020243389, 0.020257333, 0.020271403, 0.020284125, 0.020299097, 0.020315458, 0.020330264, 0.020344194, 0.020359125, 0.020373458, 0.020389361, 0.020402...</msg>
<status status="PASS" starttime="20201112 09:53:57.431" endtime="20201112 09:53:57.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.448" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 09:53:57.447" endtime="20201112 09:53:57.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.451" level="INFO">VALUE: [9.708000000000633e-06, 1.0223000000000176e-05, 9.722000000000203e-06, 9.763999999998912e-06, 1.0221999999997233e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0193999999998093e-05, 1.0194000000001563e-05, 9.708000000000633e-06, 9.679999999998024e-06, 9.722000000000203e-06, 1.0750000000000343e-05, 9.722000000000203e-06, 9.722999999999676e-06, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0208000000001133e-05, 9.749999999999343e-06, 1.0236000000000273e-05, 1.0221999999997233e-05, 9.707999999997163e-06, 9.722000000000203e-06, 1.0209000000000606e-05, 1.0236000000000273e-05, 9.652999999998357e-06, 9.708000000000633e-06, 1.0208000000001133e-05, 9.694000000001063e-06, 9.722999999999676e-06, 1.0207999999997663e-05, 1.0236000000000273e-05, 9.722000000000203e-06, 1.0208000000001133e-05, 9.694000000001063e-06, 1.0694000000002063e-05, 9.722999999999676e-06, 1.0264000000002882e-05, 9.722000000000203e-06, 1.0222000000000703e-05, 1.0208999999997137e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 9.665999999998454e-06, 9.708000000000633e-06, 9.735999999999773e-06, 1.0209000000000606e-05, 1.0223000000000176e-05, 1.0221999999997233e-05, 1.0208000000001133e-05]</msg>
<status status="PASS" starttime="20201112 09:53:57.449" endtime="20201112 09:53:57.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.444" endtime="20201112 09:53:57.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.455" endtime="20201112 09:53:57.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:57.458" endtime="20201112 09:53:57.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.457" endtime="20201112 09:53:57.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.453" endtime="20201112 09:53:57.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.084" endtime="20201112 09:53:57.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.083" endtime="20201112 09:53:57.479"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.488" endtime="20201112 09:53:57.506"></status>
</kw>
<msg timestamp="20201112 09:53:57.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.487" endtime="20201112 09:53:57.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.507" endtime="20201112 09:53:57.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.510" endtime="20201112 09:53:57.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.484" endtime="20201112 09:53:57.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.482" endtime="20201112 09:53:57.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.522" endtime="20201112 09:53:57.808"></status>
</kw>
<msg timestamp="20201112 09:53:57.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020190986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.520" endtime="20201112 09:53:57.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020190986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.812" endtime="20201112 09:53:57.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.821" endtime="20201112 09:53:57.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.517" endtime="20201112 09:53:57.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.515" endtime="20201112 09:53:57.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:57.828" level="INFO">${RESULT} = [{'time': 0.020190986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1222000000001703e-05, 'source_diff': 1.1222000000001703e-05}, {'time': 0.020204014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:57.824" endtime="20201112 09:53:57.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:57.841" level="INFO">${ACCURACY} = {'time': [0.020190986, 0.020204014, 0.020221014, 0.020236056, 0.020251986, 0.02026775, 0.020282958, 0.020299889, 0.020316639, 0.020334056, 0.020348111, 0.020361917, 0.020376972, 0.020390653, 0.0204066...</msg>
<status status="PASS" starttime="20201112 09:53:57.829" endtime="20201112 09:53:57.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.846" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 09:53:57.845" endtime="20201112 09:53:57.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.849" level="INFO">VALUE: [1.1222000000001703e-05, 1.0694999999998067e-05, 1.0721999999997733e-05, 1.1708999999998637e-05, 1.0693999999998594e-05, 1.1222000000001703e-05, 1.1207999999998663e-05, 1.1208000000002133e-05, 1.0722000000001203e-05, 1.1708999999998637e-05, 1.1166999999999427e-05, 1.0709000000001107e-05, 1.0708000000001633e-05, 1.0722000000001203e-05, 1.0694000000002063e-05, 1.0693999999998594e-05, 1.0708999999997637e-05, 1.0679999999999024e-05, 1.1707999999999164e-05, 1.0693999999998594e-05, 1.1221999999998233e-05, 1.1193999999999094e-05, 1.0638999999999788e-05, 1.1208999999998137e-05, 1.1250000000000843e-05, 1.1193999999999094e-05, 1.0708000000001633e-05, 1.0736000000000773e-05, 1.1207999999998663e-05, 1.1222000000001703e-05, 1.1207999999998663e-05, 1.1693999999999594e-05, 1.1722000000002203e-05, 1.1207999999998663e-05, 1.0737000000000246e-05, 1.1207999999998663e-05, 1.1193999999999094e-05, 1.1735999999998303e-05, 1.1194999999998567e-05, 1.1180999999998997e-05, 1.0666999999998927e-05, 1.0722000000001203e-05, 1.1193999999999094e-05, 1.1209000000001607e-05, 1.1235999999997803e-05, 1.0652999999999357e-05, 1.0750000000000343e-05, 1.1236000000001273e-05, 1.1207999999998663e-05, 1.0694000000002063e-05]</msg>
<status status="PASS" starttime="20201112 09:53:57.847" endtime="20201112 09:53:57.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.842" endtime="20201112 09:53:57.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.852" endtime="20201112 09:53:57.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:57.856" endtime="20201112 09:53:57.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.854" endtime="20201112 09:53:57.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.851" endtime="20201112 09:53:57.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.480" endtime="20201112 09:53:57.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.480" endtime="20201112 09:53:57.877"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.886" endtime="20201112 09:53:57.904"></status>
</kw>
<msg timestamp="20201112 09:53:57.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.884" endtime="20201112 09:53:57.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.905" endtime="20201112 09:53:57.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.908" endtime="20201112 09:53:57.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.882" endtime="20201112 09:53:57.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.880" endtime="20201112 09:53:57.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.918" endtime="20201112 09:53:58.205"></status>
</kw>
<msg timestamp="20201112 09:53:58.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020158403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.916" endtime="20201112 09:53:58.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020158403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.209" endtime="20201112 09:53:58.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.218" endtime="20201112 09:53:58.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.914" endtime="20201112 09:53:58.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.912" endtime="20201112 09:53:58.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:58.225" level="INFO">${RESULT} = [{'time': 0.020170125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1722000000002203e-05, 'source_diff': 1.1722000000002203e-05}, {'time': 0.02018525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:53:58.221" endtime="20201112 09:53:58.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:58.240" level="INFO">${ACCURACY} = {'time': [0.020170125, 0.02018525, 0.020200972, 0.020217375, 0.020233194, 0.020248125, 0.020264944, 0.020280167, 0.020296292, 0.020313014, 0.020331, 0.020345931, 0.020362264, 0.020377222, 0.020393333,...</msg>
<status status="PASS" starttime="20201112 09:53:58.226" endtime="20201112 09:53:58.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.244" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 09:53:58.243" endtime="20201112 09:53:58.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.247" level="INFO">VALUE: [1.1722000000002203e-05, 1.2235999999998803e-05, 1.1778000000000483e-05, 1.2749999999998873e-05, 1.1721999999998733e-05, 1.2207999999999664e-05, 1.1707999999999164e-05, 1.1723000000001677e-05, 1.1723000000001677e-05, 1.2194999999999567e-05, 1.1707999999999164e-05, 1.2209000000002607e-05, 1.1750000000001343e-05, 1.2207999999999664e-05, 1.1707999999999164e-05, 1.2708000000000164e-05, 1.2235999999998803e-05, 1.1693999999999594e-05, 1.2194999999999567e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.2208000000003133e-05, 1.2167000000000427e-05, 1.1763999999997443e-05, 1.2249999999998373e-05, 1.2292000000000552e-05, 1.2221999999999233e-05, 1.1708000000002633e-05, 1.2222000000002703e-05, 1.2221999999999233e-05, 1.2208999999999137e-05, 1.1709000000002107e-05, 1.1707999999999164e-05, 1.1653000000000358e-05, 1.2222999999998707e-05, 1.2735999999999303e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.2722999999999207e-05, 1.1721999999998733e-05, 1.1680999999999497e-05, 1.1736000000001773e-05, 1.2208000000003133e-05, 1.2208999999999137e-05, 1.2180999999999997e-05, 1.2222000000002703e-05, 1.1693999999999594e-05, 1.2708000000000164e-05]</msg>
<status status="PASS" starttime="20201112 09:53:58.245" endtime="20201112 09:53:58.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.241" endtime="20201112 09:53:58.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.251" endtime="20201112 09:53:58.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:58.254" endtime="20201112 09:53:58.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.253" endtime="20201112 09:53:58.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.249" endtime="20201112 09:53:58.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.878" endtime="20201112 09:53:58.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.877" endtime="20201112 09:53:58.275"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.284" endtime="20201112 09:53:58.301"></status>
</kw>
<msg timestamp="20201112 09:53:58.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.283" endtime="20201112 09:53:58.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.303" endtime="20201112 09:53:58.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.305" endtime="20201112 09:53:58.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.280" endtime="20201112 09:53:58.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.278" endtime="20201112 09:53:58.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.316" endtime="20201112 09:53:58.603"></status>
</kw>
<msg timestamp="20201112 09:53:58.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020300083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.314" endtime="20201112 09:53:58.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020300083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.607" endtime="20201112 09:53:58.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.616" endtime="20201112 09:53:58.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.312" endtime="20201112 09:53:58.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.310" endtime="20201112 09:53:58.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:58.623" level="INFO">${RESULT} = [{'time': 0.020300083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2680000000001024e-05, 'source_diff': 1.2680000000001024e-05}, {'time': 0.020319014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:58.619" endtime="20201112 09:53:58.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:58.636" level="INFO">${ACCURACY} = {'time': [0.020300083, 0.020319014, 0.020337111, 0.020352903, 0.020369042, 0.020386042, 0.020402903, 0.020421931, 0.020440944, 0.020456986, 0.020473806, 0.020491042, 0.020507847, 0.020524139, 0.020539...</msg>
<status status="PASS" starttime="20201112 09:53:58.624" endtime="20201112 09:53:58.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.641" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 09:53:58.640" endtime="20201112 09:53:58.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.644" level="INFO">VALUE: [1.2680000000001024e-05, 1.3222000000000234e-05, 1.3264000000002413e-05, 1.2749999999998873e-05, 1.3209000000000137e-05, 1.3222999999999707e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.3180000000001524e-05, 1.3236999999999277e-05, 1.2723000000002677e-05, 1.2694000000000594e-05, 1.2721999999999734e-05, 1.3222000000000234e-05, 1.3209000000000137e-05, 1.3709000000000637e-05, 1.3721999999997264e-05, 1.3208000000000664e-05, 1.2694000000000594e-05, 1.2707999999996694e-05, 1.3709000000000637e-05, 1.2708999999999637e-05, 1.3749999999999873e-05, 1.3194000000001094e-05, 1.2708000000000164e-05, 1.3194000000001094e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.3208000000000664e-05, 1.3208000000000664e-05, 1.2735999999999303e-05, 1.2708999999999637e-05, 1.2708999999999637e-05, 1.3222000000000234e-05, 1.3194999999997098e-05, 1.2736000000002773e-05, 1.2777999999998013e-05, 1.2708999999999637e-05, 1.3208000000000664e-05, 1.2735999999999303e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.2708000000000164e-05, 1.3222999999999707e-05, 1.2735999999999303e-05, 1.3209000000000137e-05, 1.2721999999999734e-05, 1.3209000000000137e-05, 1.2721999999999734e-05]</msg>
<status status="PASS" starttime="20201112 09:53:58.642" endtime="20201112 09:53:58.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.637" endtime="20201112 09:53:58.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.648" endtime="20201112 09:53:58.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:58.651" endtime="20201112 09:53:58.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.650" endtime="20201112 09:53:58.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.646" endtime="20201112 09:53:58.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.276" endtime="20201112 09:53:58.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.275" endtime="20201112 09:53:58.672"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.681" endtime="20201112 09:53:58.697"></status>
</kw>
<msg timestamp="20201112 09:53:58.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.680" endtime="20201112 09:53:58.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.699" endtime="20201112 09:53:58.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.701" endtime="20201112 09:53:58.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.677" endtime="20201112 09:53:58.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.675" endtime="20201112 09:53:58.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.711" endtime="20201112 09:53:58.998"></status>
</kw>
<msg timestamp="20201112 09:53:59.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020159875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020173597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.710" endtime="20201112 09:53:59.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020159875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020173597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.002" endtime="20201112 09:53:59.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.011" endtime="20201112 09:53:59.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.707" endtime="20201112 09:53:59.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.705" endtime="20201112 09:53:59.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:59.018" level="INFO">${RESULT} = [{'time': 0.020173597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3722000000000734e-05, 'source_diff': 1.3722000000000734e-05}, {'time': 0.020192764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:59.014" endtime="20201112 09:53:59.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:59.032" level="INFO">${ACCURACY} = {'time': [0.020173597, 0.020192764, 0.020212014, 0.020231986, 0.020250861, 0.020268597, 0.020288667, 0.020307083, 0.020324694, 0.02034375, 0.020361736, 0.020379972, 0.020397583, 0.020417944, 0.0204376...</msg>
<status status="PASS" starttime="20201112 09:53:59.019" endtime="20201112 09:53:59.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.036" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 09:53:59.035" endtime="20201112 09:53:59.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.039" level="INFO">VALUE: [1.3722000000000734e-05, 1.4207999999998194e-05, 1.4166999999998958e-05, 1.4693999999999124e-05, 1.3707999999997694e-05, 1.4207999999998194e-05, 1.3763999999999443e-05, 1.429099999999961e-05, 1.4222000000001234e-05, 1.3722000000000734e-05, 1.3721999999997264e-05, 1.3722000000000734e-05, 1.4194000000002094e-05, 1.4208000000001664e-05, 1.3709000000000637e-05, 1.3708000000001164e-05, 1.4179999999999054e-05, 1.4209000000001137e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.4208999999997668e-05, 1.3708999999997168e-05, 1.4222000000001234e-05, 1.3707999999997694e-05, 1.3665999999998985e-05, 1.3735999999996834e-05, 1.4165999999999485e-05, 1.4208999999997668e-05, 1.3708000000001164e-05, 1.3722000000000734e-05, 1.3708000000001164e-05, 1.4236000000000804e-05, 1.3723000000000207e-05, 1.4209000000001137e-05, 1.4666999999999458e-05, 1.3708000000001164e-05, 1.4250000000000373e-05, 1.4138999999999818e-05, 1.4221999999997764e-05, 1.4180999999998528e-05, 1.3736000000000304e-05, 1.4208000000001664e-05, 1.3708000000001164e-05, 1.3722000000000734e-05, 1.3694999999997598e-05, 1.3723000000000207e-05, 1.3723000000000207e-05, 1.3736000000000304e-05, 1.3708000000001164e-05, 1.4221999999997764e-05]</msg>
<status status="PASS" starttime="20201112 09:53:59.037" endtime="20201112 09:53:59.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.032" endtime="20201112 09:53:59.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.043" endtime="20201112 09:53:59.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.046" endtime="20201112 09:53:59.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.045" endtime="20201112 09:53:59.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.041" endtime="20201112 09:53:59.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.673" endtime="20201112 09:53:59.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.673" endtime="20201112 09:53:59.067"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.076" endtime="20201112 09:53:59.093"></status>
</kw>
<msg timestamp="20201112 09:53:59.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.074" endtime="20201112 09:53:59.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.095" endtime="20201112 09:53:59.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.098" endtime="20201112 09:53:59.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.072" endtime="20201112 09:53:59.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.070" endtime="20201112 09:53:59.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.108" endtime="20201112 09:53:59.393"></status>
</kw>
<msg timestamp="20201112 09:53:59.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02022125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:59.106" endtime="20201112 09:53:59.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02022125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:59.398" endtime="20201112 09:53:59.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.406" endtime="20201112 09:53:59.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.104" endtime="20201112 09:53:59.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.102" endtime="20201112 09:53:59.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:59.413" level="INFO">${RESULT} = [{'time': 0.020235972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4722000000001734e-05, 'source_diff': 1.4722000000001734e-05}, {'time': 0.020253958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:59.410" endtime="20201112 09:53:59.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:59.427" level="INFO">${ACCURACY} = {'time': [0.020235972, 0.020253958, 0.020273069, 0.020291194, 0.020310292, 0.020331042, 0.020349958, 0.020368403, 0.020386042, 0.020405111, 0.020424958, 0.020446375, 0.020466028, 0.020483958, 0.020504...</msg>
<status status="PASS" starttime="20201112 09:53:59.414" endtime="20201112 09:53:59.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.432" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 09:53:59.431" endtime="20201112 09:53:59.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.434" level="INFO">VALUE: [1.4722000000001734e-05, 1.5221999999998764e-05, 1.4722000000001734e-05, 1.5235999999998334e-05, 1.4709000000001637e-05, 1.4723000000001207e-05, 1.5193999999999624e-05, 1.5735999999998834e-05, 1.4750000000000874e-05, 1.5207999999999194e-05, 1.5264000000000943e-05, 1.5235999999998334e-05, 1.5222000000002234e-05, 1.5221999999998764e-05, 1.5222000000002234e-05, 1.4722999999997738e-05, 1.4721999999998264e-05, 1.5278000000000513e-05, 1.4721999999998264e-05, 1.5193999999999624e-05, 1.4708999999998168e-05, 1.4624999999997279e-05, 1.5223000000001707e-05, 1.4708000000002164e-05, 1.4693999999999124e-05, 1.5708000000003164e-05, 1.5208999999998668e-05, 1.5221999999998764e-05, 1.4707999999998694e-05, 1.5180999999999528e-05, 1.4666999999999458e-05, 1.5221999999998764e-05, 1.4693999999999124e-05, 1.4723000000001207e-05, 1.5208999999998668e-05, 1.5207999999999194e-05, 1.5221999999998764e-05, 1.5193999999999624e-05, 1.5235999999998334e-05, 1.4723000000001207e-05, 1.5222000000002234e-05, 1.5207999999999194e-05, 1.5207999999999194e-05, 1.4625000000000749e-05, 1.5207999999999194e-05, 1.5207999999999194e-05, 1.5195000000002568e-05, 1.5208000000002664e-05, 1.4736000000001304e-05, 1.5195000000002568e-05]</msg>
<status status="PASS" starttime="20201112 09:53:59.433" endtime="20201112 09:53:59.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.428" endtime="20201112 09:53:59.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.443" endtime="20201112 09:53:59.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.446" endtime="20201112 09:53:59.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.444" endtime="20201112 09:53:59.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.441" endtime="20201112 09:53:59.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.068" endtime="20201112 09:53:59.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.067" endtime="20201112 09:53:59.467"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.476" endtime="20201112 09:53:59.494"></status>
</kw>
<msg timestamp="20201112 09:53:59.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.474" endtime="20201112 09:53:59.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.495" endtime="20201112 09:53:59.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.498" endtime="20201112 09:53:59.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.472" endtime="20201112 09:53:59.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.470" endtime="20201112 09:53:59.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.508" endtime="20201112 09:53:59.794"></status>
</kw>
<msg timestamp="20201112 09:53:59.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.507" endtime="20201112 09:53:59.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.798" endtime="20201112 09:53:59.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.807" endtime="20201112 09:53:59.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.504" endtime="20201112 09:53:59.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.502" endtime="20201112 09:53:59.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:59.814" level="INFO">${RESULT} = [{'time': 0.020263417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6195000000000098e-05, 'source_diff': 1.6195000000000098e-05}, {'time': 0.020284472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:59.810" endtime="20201112 09:53:59.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:59.829" level="INFO">${ACCURACY} = {'time': [0.020263417, 0.020284472, 0.020304625, 0.020325458, 0.020344514, 0.020366431, 0.020387556, 0.020408472, 0.020427167, 0.020446319, 0.020467375, 0.020486556, 0.020505181, 0.020527403, 0.020546...</msg>
<status status="PASS" starttime="20201112 09:53:59.815" endtime="20201112 09:53:59.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.833" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 09:53:59.832" endtime="20201112 09:53:59.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.836" level="INFO">VALUE: [1.6195000000000098e-05, 1.5722000000002734e-05, 1.6235999999999334e-05, 1.6180000000001055e-05, 1.5707999999999694e-05, 1.5764000000001444e-05, 1.6223000000002707e-05, 1.5721999999999264e-05, 1.566700000000046e-05, 1.577700000000154e-05, 1.5681000000000028e-05, 1.5778000000001013e-05, 1.6208999999999668e-05, 1.6208999999999668e-05, 1.5707999999999694e-05, 1.5708000000003164e-05, 1.5707999999999694e-05, 1.6207999999996725e-05, 1.5736999999998308e-05, 1.5707999999999694e-05, 1.6208000000000194e-05, 1.6208000000000194e-05, 1.6235999999999334e-05, 1.6722000000000264e-05, 1.6236999999998808e-05, 1.6180000000001055e-05, 1.5721999999999264e-05, 1.6208000000000194e-05, 1.6208000000000194e-05, 1.6208999999999668e-05, 1.6223000000002707e-05, 1.5707999999999694e-05, 1.6221999999999764e-05, 1.6208000000000194e-05, 1.6195000000000098e-05, 1.6236000000002804e-05, 1.6236999999998808e-05, 1.6221999999999764e-05, 1.6208000000000194e-05, 1.6180000000001055e-05, 1.6221999999999764e-05, 1.615299999999792e-05, 1.5707999999999694e-05, 1.6207999999996725e-05, 1.6208000000000194e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.6221999999999764e-05]</msg>
<status status="PASS" starttime="20201112 09:53:59.834" endtime="20201112 09:53:59.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.830" endtime="20201112 09:53:59.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.840" endtime="20201112 09:53:59.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.843" endtime="20201112 09:53:59.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.842" endtime="20201112 09:53:59.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.838" endtime="20201112 09:53:59.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.468" endtime="20201112 09:53:59.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.467" endtime="20201112 09:53:59.864"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.873" endtime="20201112 09:53:59.889"></status>
</kw>
<msg timestamp="20201112 09:53:59.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.872" endtime="20201112 09:53:59.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.891" endtime="20201112 09:53:59.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.893" endtime="20201112 09:53:59.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.869" endtime="20201112 09:53:59.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.867" endtime="20201112 09:53:59.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.904" endtime="20201112 09:54:00.189"></status>
</kw>
<msg timestamp="20201112 09:54:00.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020214972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02023225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:59.902" endtime="20201112 09:54:00.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020214972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02023225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:00.193" endtime="20201112 09:54:00.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.202" endtime="20201112 09:54:00.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.900" endtime="20201112 09:54:00.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.898" endtime="20201112 09:54:00.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:00.209" level="INFO">${RESULT} = [{'time': 0.02023225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7277999999999044e-05, 'source_diff': 1.7277999999999044e-05}, {'time': 0.020252306, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:00.205" endtime="20201112 09:54:00.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:00.223" level="INFO">${ACCURACY} = {'time': [0.02023225, 0.020252306, 0.020274292, 0.020295431, 0.020315389, 0.020335083, 0.020356, 0.020377111, 0.020400056, 0.020420361, 0.020443222, 0.020465139, 0.020487514, 0.020509181, 0.020531111,...</msg>
<status status="PASS" starttime="20201112 09:54:00.210" endtime="20201112 09:54:00.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.227" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 09:54:00.226" endtime="20201112 09:54:00.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.230" level="INFO">VALUE: [1.7277999999999044e-05, 1.6722999999999738e-05, 1.7223000000000238e-05, 1.7236999999999808e-05, 1.7208000000001195e-05, 1.6666000000001985e-05, 1.7222000000000764e-05, 1.6708000000000695e-05, 1.6695000000000598e-05, 1.7236000000000334e-05, 1.6735999999999834e-05, 1.7222000000000764e-05, 1.7707999999998225e-05, 1.7209000000000668e-05, 1.7208000000001195e-05, 1.7221999999997295e-05, 1.7708000000001695e-05, 1.7193999999998155e-05, 1.6749999999999404e-05, 1.7208000000001195e-05, 1.7209000000000668e-05, 1.6708000000000695e-05, 1.7709000000001168e-05, 1.7722000000001265e-05, 1.72089999999972e-05, 1.7209000000000668e-05, 1.6723000000003208e-05, 1.7222000000000764e-05, 1.7221999999997295e-05, 1.7193999999998155e-05, 1.768099999999856e-05, 1.6722000000000264e-05, 1.7223000000000238e-05, 1.6708000000000695e-05, 1.7208000000001195e-05, 1.6736000000003304e-05, 1.7221999999997295e-05, 1.7222000000000764e-05, 1.7236000000000334e-05, 1.668100000000103e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.72089999999972e-05, 1.77089999999977e-05, 1.6694000000001125e-05, 1.7222000000000764e-05, 1.7222000000000764e-05, 1.7263e-05, 1.6722000000000264e-05, 1.6722000000000264e-05]</msg>
<status status="PASS" starttime="20201112 09:54:00.229" endtime="20201112 09:54:00.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.224" endtime="20201112 09:54:00.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.234" endtime="20201112 09:54:00.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:00.237" endtime="20201112 09:54:00.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.236" endtime="20201112 09:54:00.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.232" endtime="20201112 09:54:00.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.865" endtime="20201112 09:54:00.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.864" endtime="20201112 09:54:00.258"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.267" endtime="20201112 09:54:00.284"></status>
</kw>
<msg timestamp="20201112 09:54:00.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.266" endtime="20201112 09:54:00.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.286" endtime="20201112 09:54:00.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.289" endtime="20201112 09:54:00.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.263" endtime="20201112 09:54:00.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.261" endtime="20201112 09:54:00.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.299" endtime="20201112 09:54:00.585"></status>
</kw>
<msg timestamp="20201112 09:54:00.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020261306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.297" endtime="20201112 09:54:00.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020261306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.589" endtime="20201112 09:54:00.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.597" endtime="20201112 09:54:00.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.295" endtime="20201112 09:54:00.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.293" endtime="20201112 09:54:00.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:00.604" level="INFO">${RESULT} = [{'time': 0.020261306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.816699999999949e-05, 'source_diff': 1.816699999999949e-05}, {'time': 0.020282583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:00.601" endtime="20201112 09:54:00.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:00.618" level="INFO">${ACCURACY} = {'time': [0.020261306, 0.020282583, 0.020305264, 0.020328486, 0.020352611, 0.020374333, 0.020397514, 0.020420639, 0.020443181, 0.020467528, 0.020488556, 0.020511208, 0.020532264, 0.020553319, 0.020575...</msg>
<status status="PASS" starttime="20201112 09:54:00.605" endtime="20201112 09:54:00.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.623" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 09:54:00.622" endtime="20201112 09:54:00.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.625" level="INFO">VALUE: [1.816699999999949e-05, 1.8693999999999655e-05, 1.8291999999999614e-05, 1.7707999999998225e-05, 1.8721999999998795e-05, 1.7708000000001695e-05, 1.819499999999863e-05, 1.8722000000002265e-05, 1.7709000000001168e-05, 1.82089999999982e-05, 1.7737000000000308e-05, 1.8207999999998725e-05, 1.81950000000021e-05, 1.7708000000001695e-05, 1.7736000000000834e-05, 1.8222000000001765e-05, 1.7708000000001695e-05, 1.769499999999813e-05, 1.8221999999998295e-05, 1.816700000000296e-05, 1.8194000000002625e-05, 1.8222000000001765e-05, 1.8207999999998725e-05, 1.8250000000000904e-05, 1.8221999999998295e-05, 1.7694000000002125e-05, 1.8264000000000474e-05, 1.8209000000001668e-05, 1.8237000000000808e-05, 1.816700000000296e-05, 1.8207999999998725e-05, 1.8222000000001765e-05, 1.8193999999999155e-05, 1.77089999999977e-05, 1.8166000000000015e-05, 1.8166000000000015e-05, 1.7722000000001265e-05, 1.8221999999998295e-05, 1.7721999999997795e-05, 1.8208000000002195e-05, 1.8221999999998295e-05, 1.8250000000000904e-05, 1.766699999999899e-05, 1.8207999999998725e-05, 1.7735999999997365e-05, 1.8221999999998295e-05, 1.8207999999998725e-05, 1.819499999999863e-05, 1.815299999999992e-05, 1.7721999999997795e-05]</msg>
<status status="PASS" starttime="20201112 09:54:00.624" endtime="20201112 09:54:00.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.619" endtime="20201112 09:54:00.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.629" endtime="20201112 09:54:00.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:00.633" endtime="20201112 09:54:00.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.631" endtime="20201112 09:54:00.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.627" endtime="20201112 09:54:00.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.259" endtime="20201112 09:54:00.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.259" endtime="20201112 09:54:00.654"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.663" endtime="20201112 09:54:00.681"></status>
</kw>
<msg timestamp="20201112 09:54:00.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.661" endtime="20201112 09:54:00.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.682" endtime="20201112 09:54:00.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.685" endtime="20201112 09:54:00.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.659" endtime="20201112 09:54:00.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.656" endtime="20201112 09:54:00.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.695" endtime="20201112 09:54:00.982"></status>
</kw>
<msg timestamp="20201112 09:54:00.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020268042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02028725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:00.694" endtime="20201112 09:54:00.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020268042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02028725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:00.986" endtime="20201112 09:54:00.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.995" endtime="20201112 09:54:00.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.691" endtime="20201112 09:54:00.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.689" endtime="20201112 09:54:00.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:01.002" level="INFO">${RESULT} = [{'time': 0.02028725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9207999999999725e-05, 'source_diff': 1.9207999999999725e-05}, {'time': 0.020310556, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:00.998" endtime="20201112 09:54:01.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:01.015" level="INFO">${ACCURACY} = {'time': [0.02028725, 0.020310556, 0.020335431, 0.020358458, 0.020381333, 0.020405347, 0.020427597, 0.020451306, 0.020474236, 0.020496181, 0.020519333, 0.020544278, 0.02056825, 0.020591444, 0.02061448...</msg>
<status status="PASS" starttime="20201112 09:54:01.003" endtime="20201112 09:54:01.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.020" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 09:54:01.019" endtime="20201112 09:54:01.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.023" level="INFO">VALUE: [1.9207999999999725e-05, 1.919499999999963e-05, 1.870900000000217e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8736000000001835e-05, 1.9249999999998435e-05, 1.87089999999987e-05, 1.9207999999999725e-05, 1.923699999999834e-05, 1.9207999999999725e-05, 1.9292000000000614e-05, 1.9207999999999725e-05, 1.9221999999999295e-05, 1.9207999999999725e-05, 1.9221999999999295e-05, 1.87089999999987e-05, 1.9207999999999725e-05, 1.8708000000002695e-05, 1.92089999999992e-05, 1.9207999999999725e-05, 1.9221999999999295e-05, 1.9207999999999725e-05, 1.9235999999998865e-05, 1.9207999999999725e-05, 1.87089999999987e-05, 1.9207999999999725e-05, 1.9221999999999295e-05, 1.9235999999998865e-05, 1.8735999999998365e-05, 1.9221999999999295e-05, 1.9235999999998865e-05, 1.9194000000000155e-05, 1.9207999999999725e-05, 1.9680000000001086e-05, 1.86950000000026e-05, 1.8652000000000946e-05, 1.9208000000003195e-05, 1.9207999999999725e-05, 1.9237000000001808e-05, 1.92089999999992e-05, 1.9207999999999725e-05, 1.8708000000002695e-05, 1.9236000000002335e-05, 1.8722000000002265e-05, 1.8693999999999655e-05, 1.8735999999998365e-05, 1.9207999999999725e-05, 1.877700000000107e-05, 1.9250000000001904e-05]</msg>
<status status="PASS" starttime="20201112 09:54:01.021" endtime="20201112 09:54:01.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.016" endtime="20201112 09:54:01.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.027" endtime="20201112 09:54:01.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:01.030" endtime="20201112 09:54:01.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.029" endtime="20201112 09:54:01.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.025" endtime="20201112 09:54:01.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.655" endtime="20201112 09:54:01.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.654" endtime="20201112 09:54:01.051"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.060" endtime="20201112 09:54:01.077"></status>
</kw>
<msg timestamp="20201112 09:54:01.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.058" endtime="20201112 09:54:01.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.079" endtime="20201112 09:54:01.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.082" endtime="20201112 09:54:01.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.056" endtime="20201112 09:54:01.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.054" endtime="20201112 09:54:01.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.092" endtime="20201112 09:54:01.376"></status>
</kw>
<msg timestamp="20201112 09:54:01.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020086653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020106917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.090" endtime="20201112 09:54:01.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020086653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020106917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.381" endtime="20201112 09:54:01.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.389" endtime="20201112 09:54:01.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.088" endtime="20201112 09:54:01.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.086" endtime="20201112 09:54:01.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:01.396" level="INFO">${RESULT} = [{'time': 0.020106917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0263999999999005e-05, 'source_diff': 2.0263999999999005e-05}, {'time': 0.020130861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:01.393" endtime="20201112 09:54:01.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:01.411" level="INFO">${ACCURACY} = {'time': [0.020106917, 0.020130861, 0.020155028, 0.020180903, 0.020205264, 0.020230889, 0.020254917, 0.020278917, 0.020302167, 0.020325958, 0.020351028, 0.020373944, 0.020397931, 0.020422069, 0.020445...</msg>
<status status="PASS" starttime="20201112 09:54:01.397" endtime="20201112 09:54:01.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.416" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 09:54:01.415" endtime="20201112 09:54:01.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.419" level="INFO">VALUE: [2.0263999999999005e-05, 2.0208000000000725e-05, 1.97089999999997e-05, 2.02090000000002e-05, 2.0249999999999435e-05, 1.9721999999999795e-05, 1.9750000000002405e-05, 1.97089999999997e-05, 2.016699999999802e-05, 1.962500000000228e-05, 2.019500000000063e-05, 1.9721999999999795e-05, 1.97089999999997e-05, 1.9721999999999795e-05, 1.97089999999997e-05, 2.0208000000000725e-05, 1.969500000000013e-05, 1.9721999999999795e-05, 2.0263999999999005e-05, 1.9721999999999795e-05, 1.972300000000274e-05, 1.9721999999999795e-05, 2.0721999999997326e-05, 1.9721999999999795e-05, 2.069499999999766e-05, 2.0235999999999865e-05, 1.973699999999884e-05, 1.977700000000207e-05, 2.0235999999999865e-05, 2.0222000000000295e-05, 2.0263999999999005e-05, 2.0235999999999865e-05, 2.022299999999977e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 2.0722000000000795e-05, 1.97089999999997e-05, 1.972299999999927e-05, 1.9708000000000225e-05, 2.0722000000000795e-05, 2.068099999999809e-05, 1.9708000000000225e-05, 1.969500000000013e-05, 1.9750000000002405e-05, 1.97089999999997e-05, 2.0207999999997256e-05, 1.9721999999999795e-05, 1.97089999999997e-05, 1.969500000000013e-05]</msg>
<status status="PASS" starttime="20201112 09:54:01.417" endtime="20201112 09:54:01.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.412" endtime="20201112 09:54:01.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.422" endtime="20201112 09:54:01.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:01.426" endtime="20201112 09:54:01.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.424" endtime="20201112 09:54:01.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.421" endtime="20201112 09:54:01.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.052" endtime="20201112 09:54:01.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.052" endtime="20201112 09:54:01.447"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.456" endtime="20201112 09:54:01.474"></status>
</kw>
<msg timestamp="20201112 09:54:01.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.454" endtime="20201112 09:54:01.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.475" endtime="20201112 09:54:01.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.478" endtime="20201112 09:54:01.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.451" endtime="20201112 09:54:01.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.449" endtime="20201112 09:54:01.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.489" endtime="20201112 09:54:01.775"></status>
</kw>
<msg timestamp="20201112 09:54:01.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020140125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.487" endtime="20201112 09:54:01.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020140125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.780" endtime="20201112 09:54:01.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.788" endtime="20201112 09:54:01.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.484" endtime="20201112 09:54:01.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.482" endtime="20201112 09:54:01.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:01.795" level="INFO">${RESULT} = [{'time': 0.020140125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0707999999997756e-05, 'source_diff': 2.0707999999997756e-05}, {'time': 0.020167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:01.791" endtime="20201112 09:54:01.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:01.809" level="INFO">${ACCURACY} = {'time': [0.020140125, 0.020167, 0.020192861, 0.020219806, 0.020244972, 0.020269889, 0.020296819, 0.020322056, 0.020346069, 0.020370222, 0.020395153, 0.020421208, 0.020444944, 0.020471056, 0.020497861...</msg>
<status status="PASS" starttime="20201112 09:54:01.796" endtime="20201112 09:54:01.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.814" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 09:54:01.812" endtime="20201112 09:54:01.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.816" level="INFO">VALUE: [2.0707999999997756e-05, 2.0722000000000795e-05, 2.0777999999999075e-05, 2.073699999999984e-05, 2.0708000000001225e-05, 2.069499999999766e-05, 2.0708000000001225e-05, 2.07090000000007e-05, 2.0722000000000795e-05, 2.1707999999998756e-05, 2.07090000000007e-05, 2.1707999999998756e-05, 2.0708000000001225e-05, 2.12090000000012e-05, 2.116699999999902e-05, 2.1236000000000865e-05, 2.12229999999973e-05, 2.118099999999859e-05, 2.1165999999999546e-05, 2.0708000000001225e-05, 2.0707999999997756e-05, 2.0749999999999935e-05, 2.1736000000001365e-05, 2.0722000000000795e-05, 2.0637999999999906e-05, 2.166699999999952e-05, 2.1208000000001725e-05, 2.12090000000012e-05, 2.1222000000001295e-05, 2.0708000000001225e-05, 2.119499999999816e-05, 2.1193999999998686e-05, 2.1222000000001295e-05, 2.0708000000001225e-05, 2.0708000000001225e-05, 2.169499999999866e-05, 2.1208000000001725e-05, 2.1721999999998326e-05, 2.068099999999809e-05, 2.122300000000077e-05, 2.1235999999997396e-05, 2.0707999999997756e-05, 2.119500000000163e-05, 2.1249999999996966e-05, 2.0721999999997326e-05, 2.0694000000001656e-05, 2.1207999999998256e-05, 2.1235999999997396e-05, 2.0722000000000795e-05, 2.115299999999945e-05]</msg>
<status status="PASS" starttime="20201112 09:54:01.815" endtime="20201112 09:54:01.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.810" endtime="20201112 09:54:01.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.820" endtime="20201112 09:54:01.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:01.824" endtime="20201112 09:54:01.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.822" endtime="20201112 09:54:01.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.818" endtime="20201112 09:54:01.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.448" endtime="20201112 09:54:01.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.447" endtime="20201112 09:54:01.845"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.854" endtime="20201112 09:54:01.872"></status>
</kw>
<msg timestamp="20201112 09:54:01.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.852" endtime="20201112 09:54:01.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.873" endtime="20201112 09:54:01.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.876" endtime="20201112 09:54:01.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.849" endtime="20201112 09:54:01.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.847" endtime="20201112 09:54:01.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.886" endtime="20201112 09:54:02.171"></status>
</kw>
<msg timestamp="20201112 09:54:02.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020315903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020338125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.885" endtime="20201112 09:54:02.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020315903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020338125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.176" endtime="20201112 09:54:02.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.184" endtime="20201112 09:54:02.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.882" endtime="20201112 09:54:02.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.880" endtime="20201112 09:54:02.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:02.191" level="INFO">${RESULT} = [{'time': 0.020338125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2221999999998826e-05, 'source_diff': 2.2221999999998826e-05}, {'time': 0.020365181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:02.188" endtime="20201112 09:54:02.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:02.205" level="INFO">${ACCURACY} = {'time': [0.020338125, 0.020365181, 0.020393222, 0.020420028, 0.020446014, 0.020471111, 0.02049925, 0.020527111, 0.020552, 0.020576167, 0.020600903, 0.020629069, 0.020655264, 0.020683, 0.020709292, 0....</msg>
<status status="PASS" starttime="20201112 09:54:02.192" endtime="20201112 09:54:02.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.210" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 09:54:02.209" endtime="20201112 09:54:02.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.212" level="INFO">VALUE: [2.2221999999998826e-05, 2.22229999999983e-05, 2.2207999999999256e-05, 2.169499999999866e-05, 2.1707999999998756e-05, 2.1707999999998756e-05, 2.2193999999999686e-05, 2.1708000000002226e-05, 2.1736000000001365e-05, 2.17229999999978e-05, 2.1722000000001795e-05, 2.2193999999999686e-05, 2.2707999999999756e-05, 2.2221999999998826e-05, 2.2250000000001435e-05, 2.1722000000001795e-05, 2.1722000000001795e-05, 2.1736000000001365e-05, 2.2221999999998826e-05, 2.1778000000000075e-05, 2.220899999999873e-05, 2.1791999999999645e-05, 2.168099999999909e-05, 2.2222000000002295e-05, 2.1750000000000935e-05, 2.2207999999999256e-05, 2.2193999999999686e-05, 2.17229999999978e-05, 2.1707999999998756e-05, 2.1721999999998326e-05, 2.2222000000002295e-05, 2.2236000000001865e-05, 2.172300000000127e-05, 2.22090000000022e-05, 2.219499999999916e-05, 2.220899999999873e-05, 2.1722000000001795e-05, 2.2207999999999256e-05, 2.222300000000177e-05, 2.220899999999873e-05, 2.170899999999823e-05, 2.2722000000002796e-05, 2.1707999999998756e-05, 2.2221999999998826e-05, 2.2207999999999256e-05, 2.2207999999999256e-05, 2.17090000000017e-05, 2.1749999999997466e-05, 2.2207999999999256e-05, 2.1791999999999645e-05]</msg>
<status status="PASS" starttime="20201112 09:54:02.211" endtime="20201112 09:54:02.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.206" endtime="20201112 09:54:02.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.216" endtime="20201112 09:54:02.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:02.220" endtime="20201112 09:54:02.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.218" endtime="20201112 09:54:02.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.214" endtime="20201112 09:54:02.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.845" endtime="20201112 09:54:02.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.845" endtime="20201112 09:54:02.241"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.250" endtime="20201112 09:54:02.267"></status>
</kw>
<msg timestamp="20201112 09:54:02.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.248" endtime="20201112 09:54:02.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.269" endtime="20201112 09:54:02.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.271" endtime="20201112 09:54:02.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.245" endtime="20201112 09:54:02.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.243" endtime="20201112 09:54:02.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.282" endtime="20201112 09:54:02.568"></status>
</kw>
<msg timestamp="20201112 09:54:02.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020227194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020250389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.280" endtime="20201112 09:54:02.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020227194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020250389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.572" endtime="20201112 09:54:02.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.581" endtime="20201112 09:54:02.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.277" endtime="20201112 09:54:02.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.275" endtime="20201112 09:54:02.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:02.588" level="INFO">${RESULT} = [{'time': 0.020250389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319500000000016e-05, 'source_diff': 2.319500000000016e-05}, {'time': 0.020275694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:02.584" endtime="20201112 09:54:02.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:02.602" level="INFO">${ACCURACY} = {'time': [0.020250389, 0.020275694, 0.020301806, 0.020328431, 0.020354472, 0.020381653, 0.020407458, 0.020436569, 0.020464375, 0.02049375, 0.020521667, 0.020548653, 0.020577458, 0.020603653, 0.0206308...</msg>
<status status="PASS" starttime="20201112 09:54:02.589" endtime="20201112 09:54:02.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.607" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 09:54:02.606" endtime="20201112 09:54:02.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.610" level="INFO">VALUE: [2.319500000000016e-05, 2.2666000000001046e-05, 2.315299999999798e-05, 2.263900000000138e-05, 2.3207999999996787e-05, 2.270899999999923e-05, 2.3194000000000686e-05, 2.3152000000001977e-05, 2.2694000000000186e-05, 2.3208000000000256e-05, 2.320899999999973e-05, 2.316700000000102e-05, 2.3194000000000686e-05, 2.2721999999999326e-05, 2.3694000000001186e-05, 2.318100000000059e-05, 2.370900000000023e-05, 2.323699999999887e-05, 2.268100000000009e-05, 2.3208000000000256e-05, 2.2707999999999756e-05, 2.3208000000000256e-05, 2.268100000000009e-05, 2.27229999999988e-05, 2.270899999999923e-05, 2.3208000000000256e-05, 2.3263999999998536e-05, 2.27090000000027e-05, 2.2694000000000186e-05, 2.3250000000002435e-05, 2.2722000000002796e-05, 2.3221999999999826e-05, 2.3194000000000686e-05, 2.2736000000002365e-05, 2.3208000000000256e-05, 2.2736000000002365e-05, 2.269499999999966e-05, 2.3277999999998106e-05, 2.3208000000000256e-05, 2.3194000000000686e-05, 2.3208000000000256e-05, 2.3721999999996857e-05, 2.3208000000000256e-05, 2.2722000000002796e-05, 2.2707999999999756e-05, 2.3208000000000256e-05, 2.2707999999999756e-05, 2.3208000000000256e-05, 2.3208000000000256e-05, 2.3235999999999396e-05]</msg>
<status status="PASS" starttime="20201112 09:54:02.608" endtime="20201112 09:54:02.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.603" endtime="20201112 09:54:02.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.614" endtime="20201112 09:54:02.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:02.617" endtime="20201112 09:54:02.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.616" endtime="20201112 09:54:02.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.612" endtime="20201112 09:54:02.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.242" endtime="20201112 09:54:02.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.241" endtime="20201112 09:54:02.638"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.647" endtime="20201112 09:54:02.665"></status>
</kw>
<msg timestamp="20201112 09:54:02.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.646" endtime="20201112 09:54:02.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.666" endtime="20201112 09:54:02.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.669" endtime="20201112 09:54:02.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.643" endtime="20201112 09:54:02.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.641" endtime="20201112 09:54:02.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.679" endtime="20201112 09:54:02.966"></status>
</kw>
<msg timestamp="20201112 09:54:02.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.678" endtime="20201112 09:54:02.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.970" endtime="20201112 09:54:02.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.979" endtime="20201112 09:54:02.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.675" endtime="20201112 09:54:02.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.673" endtime="20201112 09:54:02.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:02.986" level="INFO">${RESULT} = [{'time': 0.020272625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3722000000000326e-05, 'source_diff': 2.3722000000000326e-05}, {'time': 0.020301667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:02.982" endtime="20201112 09:54:02.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:03.000" level="INFO">${ACCURACY} = {'time': [0.020272625, 0.020301667, 0.020328597, 0.020354736, 0.020383694, 0.020412986, 0.020443014, 0.020471917, 0.020498597, 0.020524736, 0.020554639, 0.020582944, 0.020611931, 0.020640944, 0.020668...</msg>
<status status="PASS" starttime="20201112 09:54:02.987" endtime="20201112 09:54:03.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.005" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 09:54:03.004" endtime="20201112 09:54:03.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.008" level="INFO">VALUE: [2.3722000000000326e-05, 2.366699999999805e-05, 2.4194000000001686e-05, 2.3721999999996857e-05, 2.3637999999999437e-05, 2.4236000000000396e-05, 2.4735999999997427e-05, 2.370900000000023e-05, 2.4208000000001256e-05, 2.3735999999999896e-05, 2.3708000000000756e-05, 2.4207999999997787e-05, 2.420900000000073e-05, 2.4236000000000396e-05, 2.4180000000002116e-05, 2.369500000000066e-05, 2.420900000000073e-05, 2.4208000000001256e-05, 2.3707999999997287e-05, 2.3735999999999896e-05, 2.3763999999999036e-05, 2.416700000000202e-05, 2.4221999999997357e-05, 2.4222000000000826e-05, 2.3708000000000756e-05, 2.3707999999997287e-05, 2.4263999999999536e-05, 2.366700000000152e-05, 2.3735999999999896e-05, 2.419500000000116e-05, 2.4208000000001256e-05, 2.4222000000000826e-05, 2.420900000000073e-05, 2.4194000000001686e-05, 2.370900000000023e-05, 2.3722000000000326e-05, 2.4193999999998217e-05, 2.420900000000073e-05, 2.4180000000002116e-05, 2.370900000000023e-05, 2.370900000000023e-05, 2.370900000000023e-05, 2.3721999999996857e-05, 2.3708000000000756e-05, 2.3708000000000756e-05, 2.3708000000000756e-05, 2.3708000000000756e-05, 2.4263000000000062e-05, 2.4236000000000396e-05, 2.4736000000000896e-05]</msg>
<status status="PASS" starttime="20201112 09:54:03.006" endtime="20201112 09:54:03.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.001" endtime="20201112 09:54:03.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.012" endtime="20201112 09:54:03.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.015" endtime="20201112 09:54:03.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.013" endtime="20201112 09:54:03.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.010" endtime="20201112 09:54:03.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.639" endtime="20201112 09:54:03.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.639" endtime="20201112 09:54:03.036"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.045" endtime="20201112 09:54:03.062"></status>
</kw>
<msg timestamp="20201112 09:54:03.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.043" endtime="20201112 09:54:03.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.064" endtime="20201112 09:54:03.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.066" endtime="20201112 09:54:03.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.041" endtime="20201112 09:54:03.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.039" endtime="20201112 09:54:03.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.077" endtime="20201112 09:54:03.362"></status>
</kw>
<msg timestamp="20201112 09:54:03.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020251292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020276514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.075" endtime="20201112 09:54:03.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020251292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020276514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.367" endtime="20201112 09:54:03.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.375" endtime="20201112 09:54:03.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.073" endtime="20201112 09:54:03.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.071" endtime="20201112 09:54:03.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:03.382" level="INFO">${RESULT} = [{'time': 0.020276514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5221999999998357e-05, 'source_diff': 2.5221999999998357e-05}, {'time': 0.020307389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:03.379" endtime="20201112 09:54:03.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:03.396" level="INFO">${ACCURACY} = {'time': [0.020276514, 0.020307389, 0.020338181, 0.020367417, 0.020395278, 0.020423458, 0.020453389, 0.020484375, 0.020514306, 0.020542542, 0.020572153, 0.020600403, 0.020629319, 0.020659444, 0.020688...</msg>
<status status="PASS" starttime="20201112 09:54:03.383" endtime="20201112 09:54:03.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.401" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 09:54:03.400" endtime="20201112 09:54:03.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.403" level="INFO">VALUE: [2.5221999999998357e-05, 2.4735999999997427e-05, 2.47230000000008e-05, 2.522299999999783e-05, 2.520899999999826e-05, 2.5207999999998787e-05, 2.4721999999997857e-05, 2.5193999999999217e-05, 2.47230000000008e-05, 2.569499999999919e-05, 2.520899999999826e-05, 2.5221999999998357e-05, 2.5193999999999217e-05, 2.5221999999998357e-05, 2.4736000000000896e-05, 2.5207999999998787e-05, 2.5221999999998357e-05, 2.4722000000001326e-05, 2.4736000000000896e-05, 2.4708000000001756e-05, 2.468099999999862e-05, 2.5222000000001826e-05, 2.47230000000008e-05, 2.470900000000123e-05, 2.4750000000000466e-05, 2.5264000000000536e-05, 2.513900000000041e-05, 2.470899999999776e-05, 2.5193999999999217e-05, 2.5222000000001826e-05, 2.4722000000001326e-05, 2.5221999999998357e-05, 2.4722000000001326e-05, 2.4736000000000896e-05, 2.4722000000001326e-05, 2.5207999999998787e-05, 2.5193999999999217e-05, 2.4722000000001326e-05, 2.5235999999997927e-05, 2.469499999999819e-05, 2.4735999999997427e-05, 2.5207999999998787e-05, 2.4722000000001326e-05, 2.4708000000001756e-05, 2.4721999999997857e-05, 2.4707999999998287e-05, 2.4722000000001326e-05, 2.57230000000018e-05, 2.469499999999819e-05, 2.520899999999826e-05]</msg>
<status status="PASS" starttime="20201112 09:54:03.402" endtime="20201112 09:54:03.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.397" endtime="20201112 09:54:03.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.407" endtime="20201112 09:54:03.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.411" endtime="20201112 09:54:03.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.409" endtime="20201112 09:54:03.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.405" endtime="20201112 09:54:03.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.037" endtime="20201112 09:54:03.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.036" endtime="20201112 09:54:03.432"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.441" endtime="20201112 09:54:03.459"></status>
</kw>
<msg timestamp="20201112 09:54:03.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.439" endtime="20201112 09:54:03.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.461" endtime="20201112 09:54:03.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.463" endtime="20201112 09:54:03.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.436" endtime="20201112 09:54:03.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.434" endtime="20201112 09:54:03.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.473" endtime="20201112 09:54:03.760"></status>
</kw>
<msg timestamp="20201112 09:54:03.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020236486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.472" endtime="20201112 09:54:03.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020236486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.765" endtime="20201112 09:54:03.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.773" endtime="20201112 09:54:03.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.469" endtime="20201112 09:54:03.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.467" endtime="20201112 09:54:03.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:03.780" level="INFO">${RESULT} = [{'time': 0.020262236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5749999999997997e-05, 'source_diff': 2.5749999999997997e-05}, {'time': 0.020290819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:03.777" endtime="20201112 09:54:03.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:03.794" level="INFO">${ACCURACY} = {'time': [0.020262236, 0.020290819, 0.020318944, 0.020350056, 0.020379861, 0.020411042, 0.020440153, 0.020471972, 0.020501903, 0.020533181, 0.020564222, 0.020594236, 0.020625208, 0.020654139, 0.020685...</msg>
<status status="PASS" starttime="20201112 09:54:03.781" endtime="20201112 09:54:03.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.799" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 09:54:03.798" endtime="20201112 09:54:03.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.802" level="INFO">VALUE: [2.5749999999997997e-05, 2.6222000000002826e-05, 2.5735999999998427e-05, 2.622299999999883e-05, 2.5721999999998857e-05, 2.6236000000002396e-05, 2.6292000000000676e-05, 2.6250000000001966e-05, 2.5749999999997997e-05, 2.57230000000018e-05, 2.5707999999999287e-05, 2.5735999999998427e-05, 2.6194000000000217e-05, 2.6207999999999787e-05, 2.570900000000223e-05, 2.5693999999999717e-05, 2.6264000000001536e-05, 2.6277999999997637e-05, 2.6762999999999093e-05, 2.5708000000002756e-05, 2.6207999999999787e-05, 2.618100000000012e-05, 2.620900000000273e-05, 2.570899999999876e-05, 2.5749999999997997e-05, 2.6249999999998497e-05, 2.6207999999999787e-05, 2.5707999999999287e-05, 2.6207999999999787e-05, 2.6264000000001536e-05, 2.6221999999999357e-05, 2.6207999999999787e-05, 2.5721999999998857e-05, 2.5693999999999717e-05, 2.6207999999999787e-05, 2.6221999999999357e-05, 2.57230000000018e-05, 2.57230000000018e-05, 2.569499999999919e-05, 2.6207999999999787e-05, 2.6263999999998067e-05, 2.620899999999926e-05, 2.6207999999999787e-05, 2.6221999999999357e-05, 2.5693999999999717e-05, 2.5708000000002756e-05, 2.6194000000000217e-05, 2.5707999999999287e-05, 2.6222000000002826e-05, 2.6207999999999787e-05]</msg>
<status status="PASS" starttime="20201112 09:54:03.800" endtime="20201112 09:54:03.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.795" endtime="20201112 09:54:03.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.805" endtime="20201112 09:54:03.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.809" endtime="20201112 09:54:03.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.807" endtime="20201112 09:54:03.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.804" endtime="20201112 09:54:03.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.433" endtime="20201112 09:54:03.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.432" endtime="20201112 09:54:03.830"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.839" endtime="20201112 09:54:03.857"></status>
</kw>
<msg timestamp="20201112 09:54:03.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.837" endtime="20201112 09:54:03.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.858" endtime="20201112 09:54:03.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.861" endtime="20201112 09:54:03.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.835" endtime="20201112 09:54:03.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.833" endtime="20201112 09:54:03.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.871" endtime="20201112 09:54:04.158"></status>
</kw>
<msg timestamp="20201112 09:54:04.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020273042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02030025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:03.870" endtime="20201112 09:54:04.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020273042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02030025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:04.162" endtime="20201112 09:54:04.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.171" endtime="20201112 09:54:04.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.867" endtime="20201112 09:54:04.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.865" endtime="20201112 09:54:04.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:04.178" level="INFO">${RESULT} = [{'time': 0.02030025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7207999999997318e-05, 'source_diff': 2.7207999999997318e-05}, {'time': 0.020331167, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:04.174" endtime="20201112 09:54:04.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:04.191" level="INFO">${ACCURACY} = {'time': [0.02030025, 0.020331167, 0.020364556, 0.020397542, 0.020430458, 0.020463194, 0.020494556, 0.020524222, 0.020557542, 0.020590431, 0.020622625, 0.020656583, 0.020688264, 0.020719153, 0.0207495...</msg>
<status status="PASS" starttime="20201112 09:54:04.179" endtime="20201112 09:54:04.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.196" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 09:54:04.195" endtime="20201112 09:54:04.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.199" level="INFO">VALUE: [2.7207999999997318e-05, 2.720900000000026e-05, 2.72369999999994e-05, 2.769500000000119e-05, 2.6721999999999857e-05, 2.6680000000001147e-05, 2.769500000000119e-05, 2.7264000000002536e-05, 2.769500000000119e-05, 2.722299999999983e-05, 2.7235999999999927e-05, 2.7722000000000857e-05, 2.6721999999999857e-05, 2.6749999999998997e-05, 2.7208000000000787e-05, 2.72369999999994e-05, 2.672299999999933e-05, 2.6721999999999857e-05, 2.669500000000019e-05, 2.6736000000002896e-05, 2.7263999999999067e-05, 2.7222000000000357e-05, 2.7222000000000357e-05, 2.7222000000000357e-05, 2.669500000000019e-05, 2.7208000000000787e-05, 2.7222000000000357e-05, 2.722299999999983e-05, 2.7722000000000857e-05, 2.669500000000019e-05, 2.7222000000000357e-05, 2.7193999999997748e-05, 2.7736000000000427e-05, 2.672299999999933e-05, 2.7208000000000787e-05, 2.669500000000019e-05, 2.7222000000000357e-05, 2.720900000000026e-05, 2.6721999999999857e-05, 2.7208000000000787e-05, 2.7208000000000787e-05, 2.7138999999998942e-05, 2.7222000000000357e-05, 2.6694000000000717e-05, 2.6652000000002007e-05, 2.6721999999999857e-05, 2.7208000000000787e-05, 2.7222000000000357e-05, 2.722299999999983e-05, 2.7193999999997748e-05]</msg>
<status status="PASS" starttime="20201112 09:54:04.197" endtime="20201112 09:54:04.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.192" endtime="20201112 09:54:04.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.203" endtime="20201112 09:54:04.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:04.206" endtime="20201112 09:54:04.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.205" endtime="20201112 09:54:04.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.201" endtime="20201112 09:54:04.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.831" endtime="20201112 09:54:04.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.830" endtime="20201112 09:54:04.227"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.236" endtime="20201112 09:54:04.254"></status>
</kw>
<msg timestamp="20201112 09:54:04.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.235" endtime="20201112 09:54:04.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.256" endtime="20201112 09:54:04.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.259" endtime="20201112 09:54:04.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.232" endtime="20201112 09:54:04.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.230" endtime="20201112 09:54:04.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.269" endtime="20201112 09:54:04.556"></status>
</kw>
<msg timestamp="20201112 09:54:04.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.267" endtime="20201112 09:54:04.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.560" endtime="20201112 09:54:04.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.569" endtime="20201112 09:54:04.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.265" endtime="20201112 09:54:04.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.263" endtime="20201112 09:54:04.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:04.576" level="INFO">${RESULT} = [{'time': 0.020266819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7693999999998248e-05, 'source_diff': 2.7693999999998248e-05}, {'time': 0.020301083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:04.572" endtime="20201112 09:54:04.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:04.591" level="INFO">${ACCURACY} = {'time': [0.020266819, 0.020301083, 0.020335056, 0.020367667, 0.020398986, 0.020432097, 0.020464847, 0.020498694, 0.020530875, 0.020564, 0.020596847, 0.020630097, 0.020664097, 0.020695819, 0.020725958...</msg>
<status status="PASS" starttime="20201112 09:54:04.577" endtime="20201112 09:54:04.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.595" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 09:54:04.594" endtime="20201112 09:54:04.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.598" level="INFO">VALUE: [2.7693999999998248e-05, 2.8736000000001427e-05, 2.822300000000083e-05, 2.819499999999822e-05, 2.8208000000001787e-05, 2.8707999999998818e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7707999999997818e-05, 2.8278000000003106e-05, 2.8222000000001357e-05, 2.8221999999997888e-05, 2.7708000000001287e-05, 2.7722000000000857e-05, 2.8194000000002217e-05, 2.7790999999999233e-05, 2.82370000000004e-05, 2.7708000000001287e-05, 2.7749999999999997e-05, 2.8179999999999178e-05, 2.770899999999729e-05, 2.8264000000000067e-05, 2.770899999999729e-05, 2.8222000000001357e-05, 2.8304999999999303e-05, 2.8179999999999178e-05, 2.7694000000001717e-05, 2.7778000000002606e-05, 2.768100000000162e-05, 2.872300000000133e-05, 2.818099999999865e-05, 2.8222000000001357e-05, 2.7694000000001717e-05, 2.7721999999997388e-05, 2.8208000000001787e-05, 2.7736000000000427e-05, 2.868099999999915e-05, 2.8722000000001857e-05, 2.8208000000001787e-05, 2.8736000000001427e-05, 2.869500000000219e-05, 2.770900000000076e-05, 2.820899999999779e-05, 2.7722000000000857e-05, 2.7749999999999997e-05, 2.8207999999998318e-05, 2.7722000000000857e-05, 2.770899999999729e-05, 2.7735999999996958e-05]</msg>
<status status="PASS" starttime="20201112 09:54:04.596" endtime="20201112 09:54:04.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.592" endtime="20201112 09:54:04.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.609" endtime="20201112 09:54:04.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:04.612" endtime="20201112 09:54:04.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.611" endtime="20201112 09:54:04.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.607" endtime="20201112 09:54:04.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.228" endtime="20201112 09:54:04.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.228" endtime="20201112 09:54:04.633"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.642" endtime="20201112 09:54:04.660"></status>
</kw>
<msg timestamp="20201112 09:54:04.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.641" endtime="20201112 09:54:04.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.661" endtime="20201112 09:54:04.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.664" endtime="20201112 09:54:04.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.638" endtime="20201112 09:54:04.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.636" endtime="20201112 09:54:04.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.674" endtime="20201112 09:54:04.962"></status>
</kw>
<msg timestamp="20201112 09:54:04.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020464333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.673" endtime="20201112 09:54:04.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020464333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.966" endtime="20201112 09:54:04.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.974" endtime="20201112 09:54:04.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.670" endtime="20201112 09:54:04.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.668" endtime="20201112 09:54:04.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:04.981" level="INFO">${RESULT} = [{'time': 0.020464333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9222000000002357e-05, 'source_diff': 2.9222000000002357e-05}, {'time': 0.020495514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:04.978" endtime="20201112 09:54:04.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:04.995" level="INFO">${ACCURACY} = {'time': [0.020464333, 0.020495514, 0.020530444, 0.020564417, 0.020596347, 0.020628722, 0.020663639, 0.0206955, 0.020727542, 0.020762722, 0.020797542, 0.020831347, 0.020864653, 0.020896444, 0.02092758...</msg>
<status status="PASS" starttime="20201112 09:54:04.982" endtime="20201112 09:54:04.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.000" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 09:54:04.999" endtime="20201112 09:54:05.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.003" level="INFO">VALUE: [2.9222000000002357e-05, 2.8735999999997958e-05, 2.8721999999998388e-05, 2.919500000000269e-05, 2.9193999999999748e-05, 2.8721999999998388e-05, 2.9207999999999318e-05, 2.8693999999999248e-05, 2.9236000000001927e-05, 2.9250000000001497e-05, 2.868099999999915e-05, 2.9221999999998888e-05, 2.870900000000176e-05, 2.9207999999999318e-05, 2.8735999999997958e-05, 2.872299999999786e-05, 2.8721999999998388e-05, 2.8679999999999678e-05, 2.9262999999998124e-05, 2.9207999999999318e-05, 2.9707999999999818e-05, 2.8736000000001427e-05, 2.9207999999999318e-05, 2.8693999999999248e-05, 2.9166000000000608e-05, 2.8736000000001427e-05, 2.9207999999999318e-05, 2.9694000000000248e-05, 2.920900000000226e-05, 2.8721999999998388e-05, 2.8722000000001857e-05, 2.9750000000001997e-05, 2.8721999999998388e-05, 2.8721999999998388e-05, 2.9735999999998958e-05, 2.9236000000001927e-05, 2.9236000000001927e-05, 2.920899999999879e-05, 2.9207999999999318e-05, 2.918099999999965e-05, 2.9207999999999318e-05, 2.8721999999998388e-05, 2.9750000000001997e-05, 2.9207999999999318e-05, 2.9221999999998888e-05, 2.9166000000000608e-05, 2.919499999999922e-05, 2.8722000000001857e-05, 2.9291000000000733e-05, 2.8653000000000012e-05]</msg>
<status status="PASS" starttime="20201112 09:54:05.001" endtime="20201112 09:54:05.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.996" endtime="20201112 09:54:05.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.006" endtime="20201112 09:54:05.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:05.010" endtime="20201112 09:54:05.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.008" endtime="20201112 09:54:05.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.005" endtime="20201112 09:54:05.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.634" endtime="20201112 09:54:05.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.634" endtime="20201112 09:54:05.031"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.040" endtime="20201112 09:54:05.057"></status>
</kw>
<msg timestamp="20201112 09:54:05.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.038" endtime="20201112 09:54:05.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.059" endtime="20201112 09:54:05.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.062" endtime="20201112 09:54:05.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.036" endtime="20201112 09:54:05.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.034" endtime="20201112 09:54:05.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.072" endtime="20201112 09:54:05.358"></status>
</kw>
<msg timestamp="20201112 09:54:05.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020171319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.071" endtime="20201112 09:54:05.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020171319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.363" endtime="20201112 09:54:05.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.371" endtime="20201112 09:54:05.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.068" endtime="20201112 09:54:05.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.066" endtime="20201112 09:54:05.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:05.378" level="INFO">${RESULT} = [{'time': 0.020201542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.022299999999936e-05, 'source_diff': 3.022299999999936e-05}, {'time': 0.020234958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:05.374" endtime="20201112 09:54:05.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:05.392" level="INFO">${ACCURACY} = {'time': [0.020201542, 0.020234958, 0.020269556, 0.020304431, 0.020340875, 0.020375736, 0.020410917, 0.020443764, 0.020477694, 0.0205105, 0.020543611, 0.020576792, 0.020609875, 0.020645528, 0.02067776...</msg>
<status status="PASS" starttime="20201112 09:54:05.379" endtime="20201112 09:54:05.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.396" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 09:54:05.395" endtime="20201112 09:54:05.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.399" level="INFO">VALUE: [3.022299999999936e-05, 3.07639999999991e-05, 3.0278000000001637e-05, 2.972300000000233e-05, 3.0221999999999888e-05, 3.0235999999999458e-05, 3.072299999999986e-05, 2.9707999999999818e-05, 2.9707999999999818e-05, 2.9721999999999388e-05, 2.9694000000000248e-05, 2.972299999999886e-05, 3.0221999999999888e-05, 3.020899999999979e-05, 2.9722000000002857e-05, 3.0221999999999888e-05, 2.9707999999999818e-05, 2.9721999999999388e-05, 3.022299999999936e-05, 3.0208000000000318e-05, 3.0236000000002927e-05, 3.0221999999999888e-05, 2.970899999999929e-05, 2.9735999999998958e-05, 2.970899999999929e-05, 3.022300000000283e-05, 3.0221999999999888e-05, 3.0235999999999458e-05, 3.0208000000000318e-05, 3.074999999999953e-05, 3.0278000000001637e-05, 2.9763999999998098e-05, 3.020899999999979e-05, 2.9707999999999818e-05, 3.0208000000000318e-05, 3.0208000000000318e-05, 3.0250000000002497e-05, 3.019500000000022e-05, 2.972299999999886e-05, 2.9707999999999818e-05, 3.0221999999999888e-05, 3.0221999999999888e-05, 3.0181000000000652e-05, 3.0235999999999458e-05, 3.020899999999979e-05, 2.9721999999999388e-05, 3.0221999999999888e-05, 3.0221999999999888e-05, 2.9722000000002857e-05, 3.0221999999999888e-05]</msg>
<status status="PASS" starttime="20201112 09:54:05.398" endtime="20201112 09:54:05.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.393" endtime="20201112 09:54:05.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.403" endtime="20201112 09:54:05.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:05.407" endtime="20201112 09:54:05.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.405" endtime="20201112 09:54:05.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.401" endtime="20201112 09:54:05.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.032" endtime="20201112 09:54:05.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.031" endtime="20201112 09:54:05.428"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.437" endtime="20201112 09:54:05.454"></status>
</kw>
<msg timestamp="20201112 09:54:05.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.435" endtime="20201112 09:54:05.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.455" endtime="20201112 09:54:05.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.458" endtime="20201112 09:54:05.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.432" endtime="20201112 09:54:05.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.430" endtime="20201112 09:54:05.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.469" endtime="20201112 09:54:05.755"></status>
</kw>
<msg timestamp="20201112 09:54:05.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.467" endtime="20201112 09:54:05.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.760" endtime="20201112 09:54:05.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.768" endtime="20201112 09:54:05.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.464" endtime="20201112 09:54:05.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.463" endtime="20201112 09:54:05.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:05.775" level="INFO">${RESULT} = [{'time': 0.020270181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.122300000000036e-05, 'source_diff': 3.122300000000036e-05}, {'time': 0.020304847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:05.771" endtime="20201112 09:54:05.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:05.789" level="INFO">${ACCURACY} = {'time': [0.020270181, 0.020304847, 0.020339903, 0.020374972, 0.020409875, 0.020444, 0.020479153, 0.020515222, 0.020550722, 0.020586028, 0.020622069, 0.020658194, 0.020691889, 0.020726042, 0.020761847...</msg>
<status status="PASS" starttime="20201112 09:54:05.776" endtime="20201112 09:54:05.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.793" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 09:54:05.792" endtime="20201112 09:54:05.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.796" level="INFO">VALUE: [3.122300000000036e-05, 3.119400000000175e-05, 3.120900000000079e-05, 3.122200000000089e-05, 3.120800000000132e-05, 3.122200000000089e-05, 3.074999999999953e-05, 3.177799999999967e-05, 3.122200000000089e-05, 3.120900000000079e-05, 3.1276999999999694e-05, 3.122200000000089e-05, 3.123600000000046e-05, 3.120900000000079e-05, 3.120800000000132e-05, 3.119399999999828e-05, 3.063899999999897e-05, 3.069500000000072e-05, 3.166699999999911e-05, 3.072299999999986e-05, 3.119499999999775e-05, 3.069400000000125e-05, 3.070800000000082e-05, 3.069499999999725e-05, 3.120800000000132e-05, 3.120800000000132e-05, 3.120899999999732e-05, 3.072299999999986e-05, 3.072299999999986e-05, 3.123600000000046e-05, 3.170900000000129e-05, 3.0762999999999624e-05, 3.125000000000003e-05, 3.072299999999986e-05, 3.117999999999871e-05, 3.120900000000079e-05, 3.070800000000082e-05, 3.07639999999991e-05, 3.070800000000082e-05, 3.122200000000089e-05, 3.122200000000089e-05, 3.070900000000029e-05, 3.170900000000129e-05, 3.120800000000132e-05, 3.12639999999996e-05, 3.0790999999998764e-05, 3.068000000000168e-05, 3.169500000000172e-05, 3.122300000000036e-05, 3.070800000000082e-05]</msg>
<status status="PASS" starttime="20201112 09:54:05.794" endtime="20201112 09:54:05.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.790" endtime="20201112 09:54:05.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.800" endtime="20201112 09:54:05.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:05.803" endtime="20201112 09:54:05.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.802" endtime="20201112 09:54:05.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.798" endtime="20201112 09:54:05.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.429" endtime="20201112 09:54:05.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.428" endtime="20201112 09:54:05.824"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.833" endtime="20201112 09:54:05.852"></status>
</kw>
<msg timestamp="20201112 09:54:05.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.832" endtime="20201112 09:54:05.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.853" endtime="20201112 09:54:05.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.856" endtime="20201112 09:54:05.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.829" endtime="20201112 09:54:05.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.827" endtime="20201112 09:54:05.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.866" endtime="20201112 09:54:06.153"></status>
</kw>
<msg timestamp="20201112 09:54:06.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.865" endtime="20201112 09:54:06.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.157" endtime="20201112 09:54:06.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.166" endtime="20201112 09:54:06.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.862" endtime="20201112 09:54:06.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.860" endtime="20201112 09:54:06.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:06.173" level="INFO">${RESULT} = [{'time': 0.020230931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.758400000000166e-05, 'source_diff': 8.758400000000166e-05}, {'time': 0.020300306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:06.169" endtime="20201112 09:54:06.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:06.188" level="INFO">${ACCURACY} = {'time': [0.020230931, 0.020300306, 0.020358306, 0.020411306, 0.020467333, 0.020522347, 0.020581333, 0.020633347, 0.020689333, 0.020742347, 0.020801347, 0.020855347, 0.020914375, 0.020968361, 0.021027...</msg>
<status status="PASS" starttime="20201112 09:54:06.174" endtime="20201112 09:54:06.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.192" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 09:54:06.191" endtime="20201112 09:54:06.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.195" level="INFO">VALUE: [8.758400000000166e-05, 3.976400000000116e-05, 3.9472999999998204e-05, 3.936200000000112e-05, 3.9361000000001645e-05, 3.991600000000095e-05, 3.997199999999923e-05, 3.947199999999873e-05, 3.951400000000091e-05, 3.902799999999998e-05, 3.945800000000263e-05, 3.976400000000116e-05, 3.9917000000000424e-05, 3.9389000000000784e-05, 3.9694999999999314e-05, 3.994400000000009e-05, 3.927799999999676e-05, 3.9318999999999465e-05, 3.926399999999719e-05, 3.94859999999983e-05, 3.901400000000041e-05, 3.9708999999998884e-05, 3.954200000000005e-05, 3.933399999999851e-05, 3.9125000000000965e-05, 4.001399999999794e-05, 3.923700000000099e-05, 3.9291000000000326e-05, 3.945799999999916e-05, 3.963799999999809e-05, 3.9054999999999646e-05, 3.9667000000000174e-05, 3.976399999999769e-05, 3.9125000000000965e-05, 3.9360999999998175e-05, 3.972199999999898e-05, 3.9903000000000854e-05, 3.923599999999805e-05, 3.9874999999998245e-05, 3.9153000000000104e-05, 4.002799999999751e-05, 3.9903000000000854e-05, 3.9096999999998355e-05, 3.9389000000000784e-05, 3.9597000000002325e-05, 3.9360999999998175e-05, 3.902799999999998e-05, 4.002800000000098e-05, 3.9930999999999994e-05, 3.977800000000073e-05]</msg>
<status status="PASS" starttime="20201112 09:54:06.193" endtime="20201112 09:54:06.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.189" endtime="20201112 09:54:06.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.199" endtime="20201112 09:54:06.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:06.202" endtime="20201112 09:54:06.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.201" endtime="20201112 09:54:06.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.197" endtime="20201112 09:54:06.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.825" endtime="20201112 09:54:06.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.825" endtime="20201112 09:54:06.223"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.232" endtime="20201112 09:54:06.251"></status>
</kw>
<msg timestamp="20201112 09:54:06.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.231" endtime="20201112 09:54:06.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.252" endtime="20201112 09:54:06.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.255" endtime="20201112 09:54:06.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.228" endtime="20201112 09:54:06.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.226" endtime="20201112 09:54:06.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.265" endtime="20201112 09:54:06.552"></status>
</kw>
<msg timestamp="20201112 09:54:06.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.264" endtime="20201112 09:54:06.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.556" endtime="20201112 09:54:06.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.564" endtime="20201112 09:54:06.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.261" endtime="20201112 09:54:06.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.259" endtime="20201112 09:54:06.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:06.571" level="INFO">${RESULT} = [{'time': 0.020280944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.892999999999911e-05, 'source_diff': 4.892999999999911e-05}, {'time': 0.020334181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:06.568" endtime="20201112 09:54:06.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:06.585" level="INFO">${ACCURACY} = {'time': [0.020280944, 0.020334181, 0.020394181, 0.020450194, 0.020509194, 0.020561208, 0.020619194, 0.020674208, 0.020733222, 0.020788264, 0.02084525, 0.020900236, 0.020959236, 0.02101525, 0.02107325...</msg>
<status status="PASS" starttime="20201112 09:54:06.572" endtime="20201112 09:54:06.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.590" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 09:54:06.589" endtime="20201112 09:54:06.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.592" level="INFO">VALUE: [4.892999999999911e-05, 4.0167000000000674e-05, 4.033399999999951e-05, 4.095800000000066e-05, 4.0819000000000966e-05, 4.019400000000034e-05, 4.020799999999991e-05, 4.072199999999998e-05, 4.023599999999905e-05, 4.020799999999991e-05, 4.047199999999973e-05, 4.027799999999776e-05, 4.0096999999999355e-05, 4.0596999999999855e-05, 4.005600000000012e-05, 4.0624999999998995e-05, 4.0610999999999425e-05, 4.0417000000000924e-05, 4.08059999999974e-05, 4.034800000000255e-05, 4.0445000000000064e-05, 4.0458999999999634e-05, 4.0667000000001174e-05, 4.0888999999998815e-05, 4.018000000000077e-05, 4.0681000000000744e-05, 4.0110999999998925e-05, 4.041599999999798e-05, 4.025000000000209e-05, 4.0889000000002285e-05, 4.025000000000209e-05, 4.0596999999999855e-05, 4.0110999999998925e-05, 4.018000000000077e-05, 4.0403000000001354e-05, 4.082000000000044e-05, 4.020799999999991e-05, 4.0846999999996636e-05, 4.0319000000000466e-05, 4.0388999999998315e-05, 4.0945000000000564e-05, 4.0945000000000564e-05, 4.0667000000001174e-05, 4.0639000000002035e-05, 4.072199999999998e-05, 4.0973000000003174e-05, 4.0416999999997455e-05, 4.033399999999951e-05, 4.030600000000037e-05, 4.033399999999951e-05]</msg>
<status status="PASS" starttime="20201112 09:54:06.591" endtime="20201112 09:54:06.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.586" endtime="20201112 09:54:06.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.596" endtime="20201112 09:54:06.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:06.600" endtime="20201112 09:54:06.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.598" endtime="20201112 09:54:06.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.594" endtime="20201112 09:54:06.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.224" endtime="20201112 09:54:06.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.224" endtime="20201112 09:54:06.621"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.630" endtime="20201112 09:54:06.649"></status>
</kw>
<msg timestamp="20201112 09:54:06.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.628" endtime="20201112 09:54:06.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.650" endtime="20201112 09:54:06.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.653" endtime="20201112 09:54:06.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.626" endtime="20201112 09:54:06.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.623" endtime="20201112 09:54:06.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.665" endtime="20201112 09:54:06.951"></status>
</kw>
<msg timestamp="20201112 09:54:06.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020317556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.663" endtime="20201112 09:54:06.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020317556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.955" endtime="20201112 09:54:06.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.964" endtime="20201112 09:54:06.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.660" endtime="20201112 09:54:06.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.658" endtime="20201112 09:54:06.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:06.971" level="INFO">${RESULT} = [{'time': 0.020317556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.052800000000107e-05, 'source_diff': 5.052800000000107e-05}, {'time': 0.020373833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:06.967" endtime="20201112 09:54:06.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:06.985" level="INFO">${ACCURACY} = {'time': [0.020317556, 0.020373833, 0.020433847, 0.020488833, 0.020549847, 0.020603861, 0.020664861, 0.020719917, 0.020780875, 0.020834875, 0.020895875, 0.020949889, 0.021010889, 0.021065889, 0.021125...</msg>
<status status="PASS" starttime="20201112 09:54:06.972" endtime="20201112 09:54:06.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.989" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 09:54:06.988" endtime="20201112 09:54:06.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.992" level="INFO">VALUE: [5.052800000000107e-05, 4.173600000000055e-05, 4.120800000000091e-05, 4.1624999999999995e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.147200000000073e-05, 4.155600000000162e-05, 4.1917000000002425e-05, 4.154199999999858e-05, 4.154200000000205e-05, 4.152799999999901e-05, 4.1888999999999815e-05, 4.1902999999999385e-05, 4.1459000000000634e-05, 4.134800000000008e-05, 4.176399999999969e-05, 4.124999999999962e-05, 4.1124999999999495e-05, 4.186200000000015e-05, 4.1110999999999925e-05, 4.165199999999966e-05, 4.190199999999991e-05, 4.113799999999959e-05, 4.120800000000091e-05, 4.1277000000002756e-05, 4.148599999999683e-05, 4.1596999999997386e-05, 4.200000000000037e-05, 4.194399999999862e-05, 4.12920000000018e-05, 4.1361000000000175e-05, 4.144399999999812e-05, 4.194400000000209e-05, 4.1653000000002605e-05, 4.144399999999812e-05, 4.104200000000155e-05, 4.1195000000000814e-05, 4.151399999999944e-05, 4.1624999999999995e-05, 4.1388999999999315e-05, 4.182000000000144e-05, 4.1723000000000454e-05, 4.133400000000051e-05, 4.133400000000051e-05, 4.1832999999998066e-05, 4.123600000000005e-05, 4.1833000000001536e-05, 4.195799999999819e-05, 4.1110999999999925e-05]</msg>
<status status="PASS" starttime="20201112 09:54:06.991" endtime="20201112 09:54:06.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.986" endtime="20201112 09:54:06.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.996" endtime="20201112 09:54:06.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:06.999" endtime="20201112 09:54:07.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.998" endtime="20201112 09:54:07.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.994" endtime="20201112 09:54:07.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.622" endtime="20201112 09:54:07.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.621" endtime="20201112 09:54:07.021"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.029" endtime="20201112 09:54:07.047"></status>
</kw>
<msg timestamp="20201112 09:54:07.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.028" endtime="20201112 09:54:07.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.049" endtime="20201112 09:54:07.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.052" endtime="20201112 09:54:07.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.025" endtime="20201112 09:54:07.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.023" endtime="20201112 09:54:07.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.062" endtime="20201112 09:54:07.347"></status>
</kw>
<msg timestamp="20201112 09:54:07.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:07.060" endtime="20201112 09:54:07.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:07.352" endtime="20201112 09:54:07.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.360" endtime="20201112 09:54:07.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.058" endtime="20201112 09:54:07.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.056" endtime="20201112 09:54:07.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:07.367" level="INFO">${RESULT} = [{'time': 0.020226, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.119400000000093e-05, 'source_diff': 5.119400000000093e-05}, {'time': 0.020281306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:54:07.364" endtime="20201112 09:54:07.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:07.381" level="INFO">${ACCURACY} = {'time': [0.020226, 0.020281306, 0.020341306, 0.020397306, 0.020456347, 0.020510319, 0.020571333, 0.020627333, 0.020689333, 0.020744333, 0.020805417, 0.020862347, 0.020924347, 0.020982361, 0.021043361...</msg>
<status status="PASS" starttime="20201112 09:54:07.368" endtime="20201112 09:54:07.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.386" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 09:54:07.385" endtime="20201112 09:54:07.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.388" level="INFO">VALUE: [5.119400000000093e-05, 4.301399999999747e-05, 4.236200000000065e-05, 4.2209000000001384e-05, 4.2625000000000995e-05, 4.223599999999758e-05, 4.273600000000155e-05, 4.2083000000001786e-05, 4.2290999999999856e-05, 4.2818999999999496e-05, 4.252800000000001e-05, 4.275000000000112e-05, 4.245799999999869e-05, 4.2389000000000315e-05, 4.295799999999919e-05, 4.2111000000000925e-05, 4.2653000000000135e-05, 4.2889000000000815e-05, 4.2653000000000135e-05, 4.229199999999933e-05, 4.225000000000062e-05, 4.223600000000105e-05, 4.22920000000028e-05, 4.206999999999822e-05, 4.2402999999999885e-05, 4.2737000000001024e-05, 4.2223000000000954e-05, 4.2209000000001384e-05, 4.2152999999999635e-05, 4.244399999999912e-05, 4.2582999999998816e-05, 4.247200000000173e-05, 4.2097000000001356e-05, 4.2639000000000565e-05, 4.2361000000001175e-05, 4.277699999999732e-05, 4.2582999999998816e-05, 4.2625000000000995e-05, 4.2889000000000815e-05, 4.252800000000001e-05, 4.272200000000198e-05, 4.2332999999998566e-05, 4.252800000000001e-05, 4.276400000000069e-05, 4.2861000000001676e-05, 4.2959000000002134e-05, 4.2139000000000065e-05, 4.209800000000083e-05, 4.197199999999776e-05, 4.266600000000023e-05]</msg>
<status status="PASS" starttime="20201112 09:54:07.387" endtime="20201112 09:54:07.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.382" endtime="20201112 09:54:07.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.392" endtime="20201112 09:54:07.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:07.396" endtime="20201112 09:54:07.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.394" endtime="20201112 09:54:07.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.390" endtime="20201112 09:54:07.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.021" endtime="20201112 09:54:07.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.021" endtime="20201112 09:54:07.417"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.426" endtime="20201112 09:54:07.444"></status>
</kw>
<msg timestamp="20201112 09:54:07.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.424" endtime="20201112 09:54:07.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.445" endtime="20201112 09:54:07.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.448" endtime="20201112 09:54:07.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.421" endtime="20201112 09:54:07.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.419" endtime="20201112 09:54:07.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.459" endtime="20201112 09:54:07.744"></status>
</kw>
<msg timestamp="20201112 09:54:07.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020221083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.457" endtime="20201112 09:54:07.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020221083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.748" endtime="20201112 09:54:07.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.757" endtime="20201112 09:54:07.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.454" endtime="20201112 09:54:07.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.452" endtime="20201112 09:54:07.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:07.764" level="INFO">${RESULT} = [{'time': 0.020273153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.206999999999781e-05, 'source_diff': 5.206999999999781e-05}, {'time': 0.020328472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:07.760" endtime="20201112 09:54:07.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:07.779" level="INFO">${ACCURACY} = {'time': [0.020273153, 0.020328472, 0.020388458, 0.020447444, 0.020510444, 0.020567472, 0.020628472, 0.020683486, 0.0207445, 0.020800486, 0.0208605, 0.020918514, 0.0209815, 0.021039514, 0.021099528, 0...</msg>
<status status="PASS" starttime="20201112 09:54:07.765" endtime="20201112 09:54:07.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.783" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 09:54:07.782" endtime="20201112 09:54:07.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.786" level="INFO">VALUE: [5.206999999999781e-05, 4.351400000000144e-05, 4.3041000000000607e-05, 4.3874999999998776e-05, 4.340199999999794e-05, 4.348599999999883e-05, 4.3082999999999316e-05, 4.3111000000001926e-05, 4.3360999999998706e-05, 4.3569000000000246e-05, 4.325000000000162e-05, 4.3610999999998956e-05, 4.38060000000004e-05, 4.3152999999997166e-05, 4.372199999999951e-05, 4.381999999999997e-05, 4.304200000000008e-05, 4.3153000000000635e-05, 4.354200000000058e-05, 4.3445000000003064e-05, 4.3902999999997916e-05, 4.351400000000144e-05, 4.3167000000000205e-05, 4.340200000000141e-05, 4.334800000000208e-05, 4.344400000000012e-05, 4.327700000000129e-05, 4.3833000000000066e-05, 4.3347000000002606e-05, 4.352800000000101e-05, 4.326400000000119e-05, 4.3332999999999566e-05, 4.3596999999999386e-05, 4.329200000000033e-05, 4.369400000000037e-05, 4.39860000000028e-05, 4.345799999999969e-05, 4.3902999999997916e-05, 4.33059999999999e-05, 4.3223000000001954e-05, 4.3125000000001495e-05, 4.376399999999822e-05, 4.302800000000051e-05, 4.315199999999769e-05, 4.3639000000001565e-05, 4.372199999999951e-05, 4.379100000000136e-05, 4.347200000000273e-05, 4.366600000000123e-05, 4.402799999999804e-05]</msg>
<status status="PASS" starttime="20201112 09:54:07.784" endtime="20201112 09:54:07.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.780" endtime="20201112 09:54:07.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.790" endtime="20201112 09:54:07.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:07.793" endtime="20201112 09:54:07.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.792" endtime="20201112 09:54:07.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.788" endtime="20201112 09:54:07.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.418" endtime="20201112 09:54:07.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.417" endtime="20201112 09:54:07.814"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.823" endtime="20201112 09:54:07.842"></status>
</kw>
<msg timestamp="20201112 09:54:07.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.822" endtime="20201112 09:54:07.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.843" endtime="20201112 09:54:07.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.846" endtime="20201112 09:54:07.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.819" endtime="20201112 09:54:07.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.817" endtime="20201112 09:54:07.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.856" endtime="20201112 09:54:08.146"></status>
</kw>
<msg timestamp="20201112 09:54:08.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020211472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.855" endtime="20201112 09:54:08.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020211472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.150" endtime="20201112 09:54:08.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.159" endtime="20201112 09:54:08.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.852" endtime="20201112 09:54:08.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.850" endtime="20201112 09:54:08.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:08.166" level="INFO">${RESULT} = [{'time': 0.020264292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.281999999999856e-05, 'source_diff': 5.281999999999856e-05}, {'time': 0.020323597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:08.162" endtime="20201112 09:54:08.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:08.179" level="INFO">${ACCURACY} = {'time': [0.020264292, 0.020323597, 0.020384569, 0.020442639, 0.020506597, 0.020563597, 0.020626611, 0.020684611, 0.020748694, 0.020808625, 0.020871653, 0.020928653, 0.020992653, 0.021051667, 0.021115...</msg>
<status status="PASS" starttime="20201112 09:54:08.167" endtime="20201112 09:54:08.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.184" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 09:54:08.183" endtime="20201112 09:54:08.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.187" level="INFO">VALUE: [5.281999999999856e-05, 4.470799999999747e-05, 4.402700000000204e-05, 4.43329999999971e-05, 4.4583000000000816e-05, 4.4138999999998596e-05, 4.4110999999999456e-05, 4.4666999999998236e-05, 4.416600000000173e-05, 4.502799999999904e-05, 4.4124999999999026e-05, 4.4416999999997986e-05, 4.4874999999999776e-05, 4.429200000000133e-05, 4.477800000000226e-05, 4.501399999999947e-05, 4.4459000000000165e-05, 4.452800000000201e-05, 4.48060000000014e-05, 4.4459000000000165e-05, 4.4847000000000636e-05, 4.431899999999753e-05, 4.479100000000236e-05, 4.46800000000018e-05, 4.4319000000000996e-05, 4.4638999999999096e-05, 4.48329999999976e-05, 4.4874999999999776e-05, 4.420800000000044e-05, 4.41939999999974e-05, 4.469400000000137e-05, 4.474999999999965e-05, 4.495800000000119e-05, 4.4819000000001497e-05, 4.4930999999998056e-05, 4.4861000000000206e-05, 4.4888999999999346e-05, 4.402800000000151e-05, 4.501399999999947e-05, 4.477800000000226e-05, 4.484799999999664e-05, 4.423600000000305e-05, 4.484800000000011e-05, 4.490200000000291e-05, 4.4555000000001677e-05, 4.498600000000033e-05, 4.4555000000001677e-05, 4.456899999999778e-05, 4.4610999999999956e-05, 4.4153000000001635e-05]</msg>
<status status="PASS" starttime="20201112 09:54:08.185" endtime="20201112 09:54:08.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.180" endtime="20201112 09:54:08.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.190" endtime="20201112 09:54:08.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:08.194" endtime="20201112 09:54:08.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.192" endtime="20201112 09:54:08.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.189" endtime="20201112 09:54:08.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.815" endtime="20201112 09:54:08.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.815" endtime="20201112 09:54:08.215"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.224" endtime="20201112 09:54:08.243"></status>
</kw>
<msg timestamp="20201112 09:54:08.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.222" endtime="20201112 09:54:08.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.245" endtime="20201112 09:54:08.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.247" endtime="20201112 09:54:08.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.220" endtime="20201112 09:54:08.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.218" endtime="20201112 09:54:08.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.258" endtime="20201112 09:54:08.544"></status>
</kw>
<msg timestamp="20201112 09:54:08.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020262569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0203165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:08.256" endtime="20201112 09:54:08.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020262569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0203165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:08.548" endtime="20201112 09:54:08.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.557" endtime="20201112 09:54:08.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.254" endtime="20201112 09:54:08.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.252" endtime="20201112 09:54:08.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:08.563" level="INFO">${RESULT} = [{'time': 0.0203165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.393100000000012e-05, 'source_diff': 5.393100000000012e-05}, {'time': 0.020375764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:08.560" endtime="20201112 09:54:08.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:08.576" level="INFO">${ACCURACY} = {'time': [0.0203165, 0.020375764, 0.020439764, 0.020497792, 0.020559778, 0.020618792, 0.020683806, 0.020744792, 0.020808806, 0.020865819, 0.020928819, 0.020986833, 0.021051861, 0.021109861, 0.02117186...</msg>
<status status="PASS" starttime="20201112 09:54:08.564" endtime="20201112 09:54:08.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.581" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 09:54:08.580" endtime="20201112 09:54:08.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.583" level="INFO">VALUE: [5.393100000000012e-05, 4.60000000000009e-05, 4.554199999999911e-05, 4.5916999999999486e-05, 4.583400000000154e-05, 4.5445000000001595e-05, 4.536200000000018e-05, 4.5945000000002095e-05, 4.583399999999807e-05, 4.515199999999969e-05, 4.588800000000087e-05, 4.5388999999999846e-05, 4.598600000000133e-05, 4.542999999999908e-05, 4.556899999999878e-05, 4.595800000000219e-05, 4.502800000000251e-05, 4.544399999999865e-05, 4.579200000000283e-05, 4.5166999999998736e-05, 4.570800000000194e-05, 4.5125000000000026e-05, 4.504200000000208e-05, 4.526399999999972e-05, 4.572200000000151e-05, 4.551399999999997e-05, 4.5459000000001165e-05, 4.5709000000001415e-05, 4.597200000000176e-05, 4.5652999999999666e-05, 4.5473000000000735e-05, 4.515199999999969e-05, 4.513800000000012e-05, 4.601400000000047e-05, 4.522200000000101e-05, 4.5833000000002067e-05, 4.567999999999933e-05, 4.531899999999853e-05, 4.60000000000009e-05, 4.5652999999999666e-05, 4.5666999999999236e-05, 4.572200000000151e-05, 4.5611000000000956e-05, 4.549999999999693e-05, 4.5152999999999166e-05, 4.5639000000000096e-05, 4.5417000000002455e-05, 4.5652999999999666e-05, 4.509800000000036e-05, 4.506999999999775e-05]</msg>
<status status="PASS" starttime="20201112 09:54:08.582" endtime="20201112 09:54:08.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.577" endtime="20201112 09:54:08.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.587" endtime="20201112 09:54:08.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:08.590" endtime="20201112 09:54:08.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.589" endtime="20201112 09:54:08.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.585" endtime="20201112 09:54:08.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.216" endtime="20201112 09:54:08.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.215" endtime="20201112 09:54:08.611"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.620" endtime="20201112 09:54:08.640"></status>
</kw>
<msg timestamp="20201112 09:54:08.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.618" endtime="20201112 09:54:08.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.641" endtime="20201112 09:54:08.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.644" endtime="20201112 09:54:08.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.616" endtime="20201112 09:54:08.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.614" endtime="20201112 09:54:08.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.654" endtime="20201112 09:54:08.939"></status>
</kw>
<msg timestamp="20201112 09:54:08.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019682431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.652" endtime="20201112 09:54:08.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019682431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.943" endtime="20201112 09:54:08.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.951" endtime="20201112 09:54:08.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.649" endtime="20201112 09:54:08.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.648" endtime="20201112 09:54:08.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:08.958" level="INFO">${RESULT} = [{'time': 0.019737417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4985999999999924e-05, 'source_diff': 5.4985999999999924e-05}, {'time': 0.019796708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:08.954" endtime="20201112 09:54:08.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:08.971" level="INFO">${ACCURACY} = {'time': [0.019737417, 0.019796708, 0.019859736, 0.019918708, 0.019984736, 0.020045736, 0.020110736, 0.020170778, 0.020234764, 0.02029675, 0.020362764, 0.020423778, 0.020487778, 0.020548778, 0.0206117...</msg>
<status status="PASS" starttime="20201112 09:54:08.959" endtime="20201112 09:54:08.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.976" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 09:54:08.975" endtime="20201112 09:54:08.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.978" level="INFO">VALUE: [5.4985999999999924e-05, 4.693000000000058e-05, 4.623599999999811e-05, 4.697199999999929e-05, 4.693000000000058e-05, 4.622200000000201e-05, 4.645799999999922e-05, 4.6125000000001026e-05, 4.630599999999943e-05, 4.66529999999972e-05, 4.68329999999996e-05, 4.6194999999998876e-05, 4.652800000000054e-05, 4.648600000000183e-05, 4.602800000000004e-05, 4.623599999999811e-05, 4.6430999999999556e-05, 4.6403000000000416e-05, 4.602800000000004e-05, 4.698600000000233e-05, 4.6625000000001526e-05, 4.630499999999996e-05, 4.623599999999811e-05, 4.704100000000114e-05, 4.652700000000107e-05, 4.605499999999971e-05, 4.609699999999842e-05, 4.6403000000000416e-05, 4.6166999999999736e-05, 4.702800000000104e-05, 4.654200000000011e-05, 4.606899999999928e-05, 4.597200000000176e-05, 4.697199999999929e-05, 4.6444999999999126e-05, 4.609699999999842e-05, 4.630599999999943e-05, 4.640199999999747e-05, 4.6208999999998446e-05, 4.6653000000000666e-05, 4.608399999999832e-05, 4.6403000000000416e-05, 4.6139000000000596e-05, 4.676299999999828e-05, 4.616600000000026e-05, 4.6889000000001346e-05, 4.620799999999897e-05, 4.634699999999867e-05, 4.627800000000029e-05, 4.631899999999953e-05]</msg>
<status status="PASS" starttime="20201112 09:54:08.977" endtime="20201112 09:54:08.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.972" endtime="20201112 09:54:08.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.982" endtime="20201112 09:54:08.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:08.985" endtime="20201112 09:54:09.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.984" endtime="20201112 09:54:09.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.980" endtime="20201112 09:54:09.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.612" endtime="20201112 09:54:09.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.612" endtime="20201112 09:54:09.006"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.015" endtime="20201112 09:54:09.032"></status>
</kw>
<msg timestamp="20201112 09:54:09.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.013" endtime="20201112 09:54:09.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.034" endtime="20201112 09:54:09.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.036" endtime="20201112 09:54:09.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.011" endtime="20201112 09:54:09.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.009" endtime="20201112 09:54:09.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.046" endtime="20201112 09:54:09.333"></status>
</kw>
<msg timestamp="20201112 09:54:09.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.045" endtime="20201112 09:54:09.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.337" endtime="20201112 09:54:09.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.345" endtime="20201112 09:54:09.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.042" endtime="20201112 09:54:09.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.041" endtime="20201112 09:54:09.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:09.352" level="INFO">${RESULT} = [{'time': 0.019714292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6528000000000134e-05, 'source_diff': 5.6528000000000134e-05}, {'time': 0.019774583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:09.348" endtime="20201112 09:54:09.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:09.366" level="INFO">${ACCURACY} = {'time': [0.019714292, 0.019774583, 0.019840569, 0.019903597, 0.019968597, 0.020031597, 0.020097611, 0.020159597, 0.020223611, 0.020286625, 0.020350639, 0.020412653, 0.020477653, 0.020540639, 0.020604...</msg>
<status status="PASS" starttime="20201112 09:54:09.353" endtime="20201112 09:54:09.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.370" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 09:54:09.369" endtime="20201112 09:54:09.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.373" level="INFO">VALUE: [5.6528000000000134e-05, 4.705499999999724e-05, 4.742999999999761e-05, 4.790299999999845e-05, 4.776400000000222e-05, 4.7653000000001666e-05, 4.7417000000000986e-05, 4.706900000000028e-05, 4.736099999999924e-05, 4.73330000000001e-05, 4.734699999999967e-05, 4.727799999999782e-05, 4.747199999999979e-05, 4.757000000000025e-05, 4.755600000000068e-05, 4.724999999999868e-05, 4.7972999999999766e-05, 4.772200000000004e-05, 4.741599999999804e-05, 4.7194999999999876e-05, 4.7722999999999516e-05, 4.716600000000126e-05, 4.762499999999906e-05, 4.722199999999954e-05, 4.734699999999967e-05, 4.747199999999979e-05, 4.711099999999899e-05, 4.7153000000001166e-05, 4.794400000000115e-05, 4.7153000000001166e-05, 4.734699999999967e-05, 4.781900000000103e-05, 4.725000000000215e-05, 4.723599999999911e-05, 4.791699999999802e-05, 4.709800000000236e-05, 4.7959000000000196e-05, 4.708399999999932e-05, 4.7167000000000736e-05, 4.7486999999998836e-05, 4.786099999999974e-05, 4.705500000000071e-05, 4.779100000000189e-05, 4.765199999999872e-05, 4.779099999999842e-05, 4.711099999999899e-05, 4.780499999999799e-05, 4.73330000000001e-05, 4.786099999999974e-05, 4.73330000000001e-05]</msg>
<status status="PASS" starttime="20201112 09:54:09.371" endtime="20201112 09:54:09.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.367" endtime="20201112 09:54:09.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.376" endtime="20201112 09:54:09.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:09.380" endtime="20201112 09:54:09.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.378" endtime="20201112 09:54:09.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.375" endtime="20201112 09:54:09.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.007" endtime="20201112 09:54:09.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.006" endtime="20201112 09:54:09.401"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.409" endtime="20201112 09:54:09.428"></status>
</kw>
<msg timestamp="20201112 09:54:09.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.408" endtime="20201112 09:54:09.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.429" endtime="20201112 09:54:09.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.432" endtime="20201112 09:54:09.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.405" endtime="20201112 09:54:09.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.403" endtime="20201112 09:54:09.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.441" endtime="20201112 09:54:09.726"></status>
</kw>
<msg timestamp="20201112 09:54:09.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019919292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.440" endtime="20201112 09:54:09.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019919292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.730" endtime="20201112 09:54:09.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.738" endtime="20201112 09:54:09.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.437" endtime="20201112 09:54:09.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.436" endtime="20201112 09:54:09.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:09.745" level="INFO">${RESULT} = [{'time': 0.019976708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7415999999997636e-05, 'source_diff': 5.7415999999997636e-05}, {'time': 0.020039, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:09.742" endtime="20201112 09:54:09.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:09.758" level="INFO">${ACCURACY} = {'time': [0.019976708, 0.020039, 0.020103986, 0.020166, 0.020233014, 0.020295014, 0.020364028, 0.020428014, 0.020495069, 0.020557069, 0.020623042, 0.020685028, 0.020751042, 0.020814056, 0.020879069, 0...</msg>
<status status="PASS" starttime="20201112 09:54:09.746" endtime="20201112 09:54:09.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.763" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 09:54:09.762" endtime="20201112 09:54:09.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.765" level="INFO">VALUE: [5.7415999999997636e-05, 4.879200000000236e-05, 4.834700000000067e-05, 4.85139999999995e-05, 4.8431000000001556e-05, 4.886100000000074e-05, 4.897199999999782e-05, 4.862500000000006e-05, 4.870800000000147e-05, 4.900000000000043e-05, 4.888899999999988e-05, 4.858400000000082e-05, 4.807000000000075e-05, 4.86529999999992e-05, 4.809700000000042e-05, 4.813899999999913e-05, 4.881899999999856e-05, 4.895799999999825e-05, 4.898600000000086e-05, 4.895800000000172e-05, 4.82079999999975e-05, 4.888899999999988e-05, 4.820800000000097e-05, 4.884700000000117e-05, 4.809700000000042e-05, 4.81940000000014e-05, 4.822200000000054e-05, 4.8403000000002416e-05, 4.886100000000074e-05, 4.888899999999988e-05, 4.836100000000024e-05, 4.899999999999696e-05, 4.879199999999889e-05, 4.808400000000032e-05, 4.877799999999932e-05, 4.809700000000042e-05, 4.891599999999954e-05, 4.872200000000104e-05, 4.898600000000086e-05, 4.870800000000147e-05, 4.854199999999864e-05, 4.904199999999914e-05, 4.830500000000196e-05, 4.895799999999825e-05, 4.809700000000042e-05, 4.802799999999857e-05, 4.894400000000215e-05, 4.820800000000097e-05, 4.883299999999813e-05, 4.829200000000186e-05]</msg>
<status status="PASS" starttime="20201112 09:54:09.764" endtime="20201112 09:54:09.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.759" endtime="20201112 09:54:09.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.773" endtime="20201112 09:54:09.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:09.777" endtime="20201112 09:54:09.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.775" endtime="20201112 09:54:09.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.772" endtime="20201112 09:54:09.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.402" endtime="20201112 09:54:09.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.401" endtime="20201112 09:54:09.797"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.806" endtime="20201112 09:54:09.824"></status>
</kw>
<msg timestamp="20201112 09:54:09.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.804" endtime="20201112 09:54:09.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.826" endtime="20201112 09:54:09.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.828" endtime="20201112 09:54:09.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.802" endtime="20201112 09:54:09.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.800" endtime="20201112 09:54:09.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.838" endtime="20201112 09:54:10.123"></status>
</kw>
<msg timestamp="20201112 09:54:10.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019841875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.836" endtime="20201112 09:54:10.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019841875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.127" endtime="20201112 09:54:10.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.136" endtime="20201112 09:54:10.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.834" endtime="20201112 09:54:10.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.832" endtime="20201112 09:54:10.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:10.142" level="INFO">${RESULT} = [{'time': 0.019841875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8277999999998414e-05, 'source_diff': 5.8277999999998414e-05}, {'time': 0.019905167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:10.139" endtime="20201112 09:54:10.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:10.156" level="INFO">${ACCURACY} = {'time': [0.019841875, 0.019905167, 0.019972181, 0.020034181, 0.020103222, 0.020166222, 0.020235194, 0.020297208, 0.020363194, 0.020426278, 0.020493208, 0.020555236, 0.020624236, 0.02068925, 0.0207552...</msg>
<status status="PASS" starttime="20201112 09:54:10.143" endtime="20201112 09:54:10.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.160" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 09:54:10.159" endtime="20201112 09:54:10.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.163" level="INFO">VALUE: [5.8277999999998414e-05, 4.923600000000111e-05, 4.988899999999741e-05, 4.9417000000002986e-05, 4.988900000000088e-05, 4.944400000000265e-05, 4.940200000000047e-05, 4.972200000000204e-05, 4.93330000000021e-05, 4.995899999999873e-05, 4.9901999999997504e-05, 4.995800000000272e-05, 4.902799999999957e-05, 4.983299999999913e-05, 4.905599999999871e-05, 4.975000000000118e-05, 4.986099999999827e-05, 4.963899999999716e-05, 4.988899999999741e-05, 4.963900000000063e-05, 4.909700000000142e-05, 4.940299999999995e-05, 4.948599999999789e-05, 4.959799999999792e-05, 4.986200000000121e-05, 4.956999999999878e-05, 4.916599999999979e-05, 4.979099999999695e-05, 4.93469999999982e-05, 4.916599999999979e-05, 4.95270000000006e-05, 4.999999999999796e-05, 4.924999999999721e-05, 4.93469999999982e-05, 4.920800000000197e-05, 4.958299999999888e-05, 4.911099999999752e-05, 5.0014000000001e-05, 4.948600000000136e-05, 4.927799999999982e-05, 4.952800000000007e-05, 4.9458999999998227e-05, 4.926400000000025e-05, 4.938900000000038e-05, 4.906899999999881e-05, 4.9722999999998047e-05, 4.959699999999845e-05, 4.922199999999807e-05, 4.980499999999999e-05, 4.923600000000111e-05]</msg>
<status status="PASS" starttime="20201112 09:54:10.161" endtime="20201112 09:54:10.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.157" endtime="20201112 09:54:10.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.166" endtime="20201112 09:54:10.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:10.170" endtime="20201112 09:54:10.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.168" endtime="20201112 09:54:10.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.165" endtime="20201112 09:54:10.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.798" endtime="20201112 09:54:10.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.798" endtime="20201112 09:54:10.190"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.199" endtime="20201112 09:54:10.217"></status>
</kw>
<msg timestamp="20201112 09:54:10.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.197" endtime="20201112 09:54:10.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.218" endtime="20201112 09:54:10.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.221" endtime="20201112 09:54:10.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.195" endtime="20201112 09:54:10.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.193" endtime="20201112 09:54:10.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.231" endtime="20201112 09:54:10.517"></status>
</kw>
<msg timestamp="20201112 09:54:10.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019496611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.229" endtime="20201112 09:54:10.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019496611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.522" endtime="20201112 09:54:10.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.530" endtime="20201112 09:54:10.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.227" endtime="20201112 09:54:10.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.225" endtime="20201112 09:54:10.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:10.536" level="INFO">${RESULT} = [{'time': 0.019556208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.959699999999804e-05, 'source_diff': 5.959699999999804e-05}, {'time': 0.019621486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:10.533" endtime="20201112 09:54:10.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:10.550" level="INFO">${ACCURACY} = {'time': [0.019556208, 0.019621486, 0.019689486, 0.019751486, 0.0198205, 0.019886556, 0.0199545, 0.020017528, 0.020087542, 0.020153542, 0.020221597, 0.020287556, 0.020354556, 0.020418556, 0.020486569,...</msg>
<status status="PASS" starttime="20201112 09:54:10.537" endtime="20201112 09:54:10.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.554" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 09:54:10.553" endtime="20201112 09:54:10.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.557" level="INFO">VALUE: [5.959699999999804e-05, 5.016700000000027e-05, 4.997199999999882e-05, 5.00279999999971e-05, 5.002800000000057e-05, 5.066700000000077e-05, 5.083300000000013e-05, 5.08469999999997e-05, 5.016700000000027e-05, 5.041700000000052e-05, 5.091600000000154e-05, 5.058400000000282e-05, 5.090299999999798e-05, 5.058399999999935e-05, 5.048599999999889e-05, 5.097199999999982e-05, 5.019399999999993e-05, 5.069400000000043e-05, 5.008299999999938e-05, 5.031900000000006e-05, 5.072199999999957e-05, 5.077800000000132e-05, 5.090299999999798e-05, 5.052800000000107e-05, 5.066700000000077e-05, 5.038899999999791e-05, 5.059699999999945e-05, 5.08469999999997e-05, 5.016700000000027e-05, 5.093100000000059e-05, 5.087499999999884e-05, 5.016700000000027e-05, 5.048599999999889e-05, 5.095899999999973e-05, 5.01530000000007e-05, 5.027700000000135e-05, 5.055500000000074e-05, 5.069400000000043e-05, 5.024999999999821e-05, 5.022199999999907e-05, 5.029100000000092e-05, 5.055499999999727e-05, 5.080600000000046e-05, 5.008300000000285e-05, 5.080499999999752e-05, 5.0943999999997214e-05, 5.058299999999988e-05, 5.098599999999939e-05, 5.009699999999895e-05, 5.10279999999981e-05]</msg>
<status status="PASS" starttime="20201112 09:54:10.555" endtime="20201112 09:54:10.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.550" endtime="20201112 09:54:10.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.560" endtime="20201112 09:54:10.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:10.564" endtime="20201112 09:54:10.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.562" endtime="20201112 09:54:10.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.559" endtime="20201112 09:54:10.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.191" endtime="20201112 09:54:10.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.191" endtime="20201112 09:54:10.584"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.593" endtime="20201112 09:54:10.612"></status>
</kw>
<msg timestamp="20201112 09:54:10.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.592" endtime="20201112 09:54:10.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.614" endtime="20201112 09:54:10.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.616" endtime="20201112 09:54:10.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.589" endtime="20201112 09:54:10.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.587" endtime="20201112 09:54:10.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.626" endtime="20201112 09:54:10.912"></status>
</kw>
<msg timestamp="20201112 09:54:10.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019621778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.625" endtime="20201112 09:54:10.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019621778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.916" endtime="20201112 09:54:10.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.924" endtime="20201112 09:54:10.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.622" endtime="20201112 09:54:10.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.620" endtime="20201112 09:54:10.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:10.931" level="INFO">${RESULT} = [{'time': 0.019681931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.015300000000029e-05, 'source_diff': 6.015300000000029e-05}, {'time': 0.019748208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:10.927" endtime="20201112 09:54:10.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:10.945" level="INFO">${ACCURACY} = {'time': [0.019681931, 0.019748208, 0.019817194, 0.019880222, 0.019950222, 0.020017236, 0.020085222, 0.020151236, 0.020222264, 0.020287236, 0.020357264, 0.020422264, 0.020492264, 0.020558278, 0.020627...</msg>
<status status="PASS" starttime="20201112 09:54:10.932" endtime="20201112 09:54:10.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.949" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 09:54:10.948" endtime="20201112 09:54:10.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.952" level="INFO">VALUE: [6.015300000000029e-05, 5.12080000000005e-05, 5.183300000000113e-05, 5.113899999999866e-05, 5.188899999999941e-05, 5.201399999999953e-05, 5.1415999999998574e-05, 5.12080000000005e-05, 5.112499999999909e-05, 5.137499999999934e-05, 5.143100000000109e-05, 5.179199999999842e-05, 5.147200000000032e-05, 5.132000000000053e-05, 5.162500000000306e-05, 5.15279999999986e-05, 5.138899999999891e-05, 5.190299999999898e-05, 5.180599999999799e-05, 5.133299999999716e-05, 5.193000000000211e-05, 5.118000000000136e-05, 5.097199999999982e-05, 5.108300000000038e-05, 5.1708000000001e-05, 5.133300000000063e-05, 5.15279999999986e-05, 5.155600000000121e-05, 5.166700000000177e-05, 5.127800000000182e-05, 5.145900000000023e-05, 5.156900000000131e-05, 5.112499999999909e-05, 5.162499999999959e-05, 5.13470000000002e-05, 5.201399999999953e-05, 5.1915999999999074e-05, 5.18340000000006e-05, 5.115299999999823e-05, 5.120899999999998e-05, 5.148599999999989e-05, 5.183300000000113e-05, 5.1679999999998394e-05, 5.1443999999997714e-05, 5.102800000000157e-05, 5.199999999999996e-05, 5.191699999999855e-05, 5.147200000000032e-05, 5.127799999999835e-05, 5.122200000000007e-05]</msg>
<status status="PASS" starttime="20201112 09:54:10.951" endtime="20201112 09:54:10.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.946" endtime="20201112 09:54:10.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.956" endtime="20201112 09:54:10.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:10.959" endtime="20201112 09:54:10.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.957" endtime="20201112 09:54:10.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.954" endtime="20201112 09:54:10.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.585" endtime="20201112 09:54:10.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.585" endtime="20201112 09:54:10.980"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.988" endtime="20201112 09:54:11.008"></status>
</kw>
<msg timestamp="20201112 09:54:11.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.987" endtime="20201112 09:54:11.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.009" endtime="20201112 09:54:11.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.012" endtime="20201112 09:54:11.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.984" endtime="20201112 09:54:11.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.982" endtime="20201112 09:54:11.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.022" endtime="20201112 09:54:11.307"></status>
</kw>
<msg timestamp="20201112 09:54:11.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019488458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019549861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.020" endtime="20201112 09:54:11.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019488458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019549861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.311" endtime="20201112 09:54:11.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.320" endtime="20201112 09:54:11.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.018" endtime="20201112 09:54:11.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.016" endtime="20201112 09:54:11.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:11.326" level="INFO">${RESULT} = [{'time': 0.019549861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.140300000000154e-05, 'source_diff': 6.140300000000154e-05}, {'time': 0.019614111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:11.323" endtime="20201112 09:54:11.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:11.339" level="INFO">${ACCURACY} = {'time': [0.019549861, 0.019614111, 0.019684097, 0.019749125, 0.019820111, 0.019886125, 0.019957139, 0.020025125, 0.020094181, 0.020162153, 0.020231167, 0.020297167, 0.020367167, 0.020432194, 0.020501...</msg>
<status status="PASS" starttime="20201112 09:54:11.327" endtime="20201112 09:54:11.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.344" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 09:54:11.343" endtime="20201112 09:54:11.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.346" level="INFO">VALUE: [6.140300000000154e-05, 5.225000000000021e-05, 5.288900000000041e-05, 5.248600000000089e-05, 5.258300000000188e-05, 5.265299999999973e-05, 5.259699999999798e-05, 5.251400000000003e-05, 5.258399999999788e-05, 5.28609999999978e-05, 5.21530000000027e-05, 5.288900000000041e-05, 5.277799999999985e-05, 5.2665999999999824e-05, 5.2693999999998964e-05, 5.287500000000084e-05, 5.297200000000182e-05, 5.247200000000132e-05, 5.238899999999991e-05, 5.306999999999881e-05, 5.2402000000000004e-05, 5.294400000000268e-05, 5.294499999999869e-05, 5.2693999999998964e-05, 5.223600000000064e-05, 5.28609999999978e-05, 5.2485999999997424e-05, 5.247200000000132e-05, 5.243099999999862e-05, 5.25279999999996e-05, 5.225000000000021e-05, 5.238899999999991e-05, 5.2693999999998964e-05, 5.245900000000123e-05, 5.240299999999948e-05, 5.294500000000216e-05, 5.2721999999998104e-05, 5.276400000000028e-05, 5.275000000000071e-05, 5.226399999999978e-05, 5.202800000000257e-05, 5.21669999999988e-05, 5.227800000000282e-05, 5.291699999999955e-05, 5.207000000000128e-05, 5.226400000000325e-05, 5.272200000000157e-05, 5.229199999999892e-05, 5.281999999999856e-05, 5.254200000000264e-05]</msg>
<status status="PASS" starttime="20201112 09:54:11.345" endtime="20201112 09:54:11.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.340" endtime="20201112 09:54:11.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.350" endtime="20201112 09:54:11.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:11.353" endtime="20201112 09:54:11.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.352" endtime="20201112 09:54:11.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.348" endtime="20201112 09:54:11.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.981" endtime="20201112 09:54:11.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.980" endtime="20201112 09:54:11.374"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.382" endtime="20201112 09:54:11.402"></status>
</kw>
<msg timestamp="20201112 09:54:11.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.381" endtime="20201112 09:54:11.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.403" endtime="20201112 09:54:11.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.406" endtime="20201112 09:54:11.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.378" endtime="20201112 09:54:11.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.376" endtime="20201112 09:54:11.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.416" endtime="20201112 09:54:11.701"></status>
</kw>
<msg timestamp="20201112 09:54:11.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019618667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.414" endtime="20201112 09:54:11.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019618667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.705" endtime="20201112 09:54:11.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.713" endtime="20201112 09:54:11.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.412" endtime="20201112 09:54:11.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.410" endtime="20201112 09:54:11.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:11.720" level="INFO">${RESULT} = [{'time': 0.019618667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.211100000000011e-05, 'source_diff': 6.211100000000011e-05}, {'time': 0.019684931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:11.716" endtime="20201112 09:54:11.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:11.734" level="INFO">${ACCURACY} = {'time': [0.019618667, 0.019684931, 0.019755944, 0.019821944, 0.019893958, 0.019960972, 0.020033972, 0.020100958, 0.020171972, 0.020239972, 0.020311986, 0.020381042, 0.020451, 0.020520014, 0.020590028...</msg>
<status status="PASS" starttime="20201112 09:54:11.721" endtime="20201112 09:54:11.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.738" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 09:54:11.737" endtime="20201112 09:54:11.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.741" level="INFO">VALUE: [6.211100000000011e-05, 5.35280000000006e-05, 5.30410000000002e-05, 5.375000000000171e-05, 5.359699999999898e-05, 5.35410000000007e-05, 5.3985999999998924e-05, 5.3263999999997313e-05, 5.334699999999873e-05, 5.363899999999769e-05, 5.390300000000098e-05, 5.370899999999901e-05, 5.376400000000128e-05, 5.368099999999987e-05, 5.31669999999998e-05, 5.319499999999894e-05, 5.336100000000177e-05, 5.365300000000073e-05, 5.393100000000012e-05, 5.36670000000003e-05, 5.322299999999808e-05, 5.387499999999837e-05, 5.341700000000005e-05, 5.333299999999916e-05, 5.326300000000131e-05, 5.368099999999987e-05, 5.362499999999812e-05, 5.35280000000006e-05, 5.3221999999998604e-05, 5.355500000000027e-05, 5.3971999999999354e-05, 5.347200000000232e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.368099999999987e-05, 5.370900000000248e-05, 5.33340000000021e-05, 5.344500000000266e-05, 5.388899999999794e-05, 5.3221999999998604e-05, 5.325000000000121e-05, 5.333299999999916e-05, 5.379099999999748e-05, 5.3152000000000754e-05, 5.33470000000022e-05, 5.358299999999941e-05, 5.30410000000002e-05, 5.305499999999977e-05, 5.347200000000232e-05, 5.3707999999999534e-05]</msg>
<status status="PASS" starttime="20201112 09:54:11.739" endtime="20201112 09:54:11.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.734" endtime="20201112 09:54:11.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.744" endtime="20201112 09:54:11.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:11.748" endtime="20201112 09:54:11.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.746" endtime="20201112 09:54:11.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.743" endtime="20201112 09:54:11.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.375" endtime="20201112 09:54:11.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.374" endtime="20201112 09:54:11.769"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.777" endtime="20201112 09:54:11.796"></status>
</kw>
<msg timestamp="20201112 09:54:11.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.776" endtime="20201112 09:54:11.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.797" endtime="20201112 09:54:11.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.800" endtime="20201112 09:54:11.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.773" endtime="20201112 09:54:11.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.771" endtime="20201112 09:54:11.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.810" endtime="20201112 09:54:12.096"></status>
</kw>
<msg timestamp="20201112 09:54:12.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019721556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.808" endtime="20201112 09:54:12.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019721556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.100" endtime="20201112 09:54:12.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.108" endtime="20201112 09:54:12.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.806" endtime="20201112 09:54:12.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.804" endtime="20201112 09:54:12.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:12.115" level="INFO">${RESULT} = [{'time': 0.019721556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.357000000000237e-05, 'source_diff': 6.357000000000237e-05}, {'time': 0.019788875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:12.112" endtime="20201112 09:54:12.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:12.128" level="INFO">${ACCURACY} = {'time': [0.019721556, 0.019788875, 0.019862833, 0.019929861, 0.020001861, 0.020070861, 0.020141875, 0.020210861, 0.020282875, 0.020352875, 0.020423903, 0.020493944, 0.020566931, 0.020635903, 0.020710...</msg>
<status status="PASS" starttime="20201112 09:54:12.116" endtime="20201112 09:54:12.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.133" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 09:54:12.132" endtime="20201112 09:54:12.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.135" level="INFO">VALUE: [6.357000000000237e-05, 5.491700000000155e-05, 5.408299999999991e-05, 5.4930000000001644e-05, 5.43609999999993e-05, 5.40549999999973e-05, 5.412499999999862e-05, 5.480500000000152e-05, 5.4471999999999854e-05, 5.438899999999844e-05, 5.434699999999973e-05, 5.433300000000016e-05, 5.418100000000037e-05, 5.425000000000221e-05, 5.497299999999983e-05, 5.468100000000087e-05, 5.4680000000001394e-05, 5.4401999999998535e-05, 5.4735999999999674e-05, 5.465299999999826e-05, 5.404099999999773e-05, 5.40410000000012e-05, 5.4430000000001144e-05, 5.4458000000000284e-05, 5.441700000000105e-05, 5.440299999999801e-05, 5.415300000000123e-05, 5.459699999999998e-05, 5.440300000000148e-05, 5.434699999999973e-05, 5.480600000000099e-05, 5.408399999999938e-05, 5.454200000000117e-05, 5.483300000000066e-05, 5.41809999999969e-05, 5.465300000000173e-05, 5.4958000000000784e-05, 5.50410000000022e-05, 5.402699999999816e-05, 5.4665999999998355e-05, 5.479200000000142e-05, 5.4680000000001394e-05, 5.484700000000023e-05, 5.484700000000023e-05, 5.484700000000023e-05, 5.412499999999862e-05, 5.4985999999999924e-05, 5.465299999999826e-05, 5.415300000000123e-05, 5.445899999999976e-05]</msg>
<status status="PASS" starttime="20201112 09:54:12.134" endtime="20201112 09:54:12.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.129" endtime="20201112 09:54:12.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.139" endtime="20201112 09:54:12.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:12.142" endtime="20201112 09:54:12.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.141" endtime="20201112 09:54:12.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.137" endtime="20201112 09:54:12.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.770" endtime="20201112 09:54:12.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.769" endtime="20201112 09:54:12.163"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.171" endtime="20201112 09:54:12.190"></status>
</kw>
<msg timestamp="20201112 09:54:12.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.170" endtime="20201112 09:54:12.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.191" endtime="20201112 09:54:12.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.194" endtime="20201112 09:54:12.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.167" endtime="20201112 09:54:12.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.165" endtime="20201112 09:54:12.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.204" endtime="20201112 09:54:12.490"></status>
</kw>
<msg timestamp="20201112 09:54:12.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019509944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019574042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.202" endtime="20201112 09:54:12.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019509944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019574042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.494" endtime="20201112 09:54:12.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.502" endtime="20201112 09:54:12.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.200" endtime="20201112 09:54:12.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.198" endtime="20201112 09:54:12.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:12.509" level="INFO">${RESULT} = [{'time': 0.019574042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.409799999999855e-05, 'source_diff': 6.409799999999855e-05}, {'time': 0.019642319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:12.505" endtime="20201112 09:54:12.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:12.523" level="INFO">${ACCURACY} = {'time': [0.019574042, 0.019642319, 0.019716333, 0.019785347, 0.019858333, 0.019926347, 0.020001417, 0.020070389, 0.020142389, 0.020212417, 0.020286389, 0.020354375, 0.020426389, 0.020497403, 0.020572...</msg>
<status status="PASS" starttime="20201112 09:54:12.510" endtime="20201112 09:54:12.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.527" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 09:54:12.526" endtime="20201112 09:54:12.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.530" level="INFO">VALUE: [6.409799999999855e-05, 5.536099999999683e-05, 5.5985999999997454e-05, 5.554099999999923e-05, 5.5151999999999285e-05, 5.5763999999999814e-05, 5.566699999999883e-05, 5.5736000000000674e-05, 5.511100000000005e-05, 5.5777999999999384e-05, 5.586099999999733e-05, 5.5444000000001714e-05, 5.5527999999999134e-05, 5.591700000000255e-05, 5.5249999999999744e-05, 5.533400000000063e-05, 5.547300000000033e-05, 5.6014000000000064e-05, 5.5499999999999994e-05, 5.507000000000081e-05, 5.5430000000002144e-05, 5.558299999999794e-05, 5.559700000000098e-05, 5.5472000000000854e-05, 5.552699999999966e-05, 5.5708000000001534e-05, 5.511100000000005e-05, 5.5541999999998704e-05, 5.58749999999969e-05, 5.515299999999876e-05, 5.505599999999777e-05, 5.563899999999969e-05, 5.5527999999999134e-05, 5.5805999999998523e-05, 5.545900000000076e-05, 5.577800000000285e-05, 5.566699999999883e-05, 5.5722000000001104e-05, 5.53610000000003e-05, 5.601299999999712e-05, 5.530499999999855e-05, 5.5679999999998925e-05, 5.554099999999923e-05, 5.509700000000048e-05, 5.565299999999926e-05, 5.5458000000001284e-05, 5.583300000000166e-05, 5.5443999999998245e-05, 5.579200000000242e-05, 5.587500000000037e-05]</msg>
<status status="PASS" starttime="20201112 09:54:12.529" endtime="20201112 09:54:12.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.524" endtime="20201112 09:54:12.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.534" endtime="20201112 09:54:12.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:12.537" endtime="20201112 09:54:12.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.535" endtime="20201112 09:54:12.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.532" endtime="20201112 09:54:12.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.164" endtime="20201112 09:54:12.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.163" endtime="20201112 09:54:12.558"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.566" endtime="20201112 09:54:12.585"></status>
</kw>
<msg timestamp="20201112 09:54:12.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.565" endtime="20201112 09:54:12.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.586" endtime="20201112 09:54:12.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.589" endtime="20201112 09:54:12.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.562" endtime="20201112 09:54:12.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.560" endtime="20201112 09:54:12.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.599" endtime="20201112 09:54:12.885"></status>
</kw>
<msg timestamp="20201112 09:54:12.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.597" endtime="20201112 09:54:12.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.889" endtime="20201112 09:54:12.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.897" endtime="20201112 09:54:12.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.595" endtime="20201112 09:54:12.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.593" endtime="20201112 09:54:12.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:12.904" level="INFO">${RESULT} = [{'time': 0.019811375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.473599999999927e-05, 'source_diff': 6.473599999999927e-05}, {'time': 0.019881667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:12.900" endtime="20201112 09:54:12.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:12.917" level="INFO">${ACCURACY} = {'time': [0.019811375, 0.019881667, 0.019954722, 0.020023694, 0.020096681, 0.020167694, 0.020240694, 0.020312708, 0.02038575, 0.020456736, 0.020532722, 0.020601736, 0.02067475, 0.02074475, 0.020819736...</msg>
<status status="PASS" starttime="20201112 09:54:12.905" endtime="20201112 09:54:12.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.922" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 09:54:12.921" endtime="20201112 09:54:12.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.924" level="INFO">VALUE: [6.473599999999927e-05, 5.661099999999808e-05, 5.7028000000000634e-05, 5.6236000000001174e-05, 5.60280000000031e-05, 5.609700000000148e-05, 5.6652000000000785e-05, 5.6471999999998385e-05, 5.630600000000249e-05, 5.6791999999999954e-05, 5.659699999999851e-05, 5.659699999999851e-05, 5.6749999999997774e-05, 5.631899999999912e-05, 5.6763999999997344e-05, 5.616699999999933e-05, 5.6499999999997524e-05, 5.61670000000028e-05, 5.66809999999994e-05, 5.5986000000000924e-05, 5.694499999999922e-05, 5.663899999999722e-05, 5.683399999999866e-05, 5.6221999999998135e-05, 5.6943999999999745e-05, 5.6152000000000285e-05, 5.684699999999876e-05, 5.6471999999998385e-05, 5.659699999999851e-05, 5.6291999999999454e-05, 5.6735999999998205e-05, 5.658299999999894e-05, 5.6222000000001604e-05, 5.6971999999998885e-05, 5.634699999999826e-05, 5.6264000000000314e-05, 5.616699999999933e-05, 5.688900000000094e-05, 5.695900000000226e-05, 5.6514000000000564e-05, 5.643099999999915e-05, 5.6457999999998815e-05, 5.6916000000000605e-05, 5.6930000000000175e-05, 5.6193999999998995e-05, 5.627700000000041e-05, 5.615299999999976e-05, 5.615299999999976e-05, 5.611100000000105e-05, 5.640300000000001e-05]</msg>
<status status="PASS" starttime="20201112 09:54:12.923" endtime="20201112 09:54:12.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.918" endtime="20201112 09:54:12.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.928" endtime="20201112 09:54:12.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:12.931" endtime="20201112 09:54:12.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.930" endtime="20201112 09:54:12.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.926" endtime="20201112 09:54:12.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.559" endtime="20201112 09:54:12.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.558" endtime="20201112 09:54:12.952"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.960" endtime="20201112 09:54:12.979"></status>
</kw>
<msg timestamp="20201112 09:54:12.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.959" endtime="20201112 09:54:12.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.980" endtime="20201112 09:54:12.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.983" endtime="20201112 09:54:12.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.956" endtime="20201112 09:54:12.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.954" endtime="20201112 09:54:12.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.993" endtime="20201112 09:54:13.279"></status>
</kw>
<msg timestamp="20201112 09:54:13.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019773597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.991" endtime="20201112 09:54:13.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019773597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.283" endtime="20201112 09:54:13.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.292" endtime="20201112 09:54:13.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.989" endtime="20201112 09:54:13.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.987" endtime="20201112 09:54:13.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:13.298" level="INFO">${RESULT} = [{'time': 0.019773597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.62220000000012e-05, 'source_diff': 6.62220000000012e-05}, {'time': 0.019845875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:13.295" endtime="20201112 09:54:13.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:13.312" level="INFO">${ACCURACY} = {'time': [0.019773597, 0.019845875, 0.019922889, 0.019993889, 0.020068889, 0.020140889, 0.020216917, 0.020286903, 0.020361917, 0.020431944, 0.020507944, 0.020580931, 0.020657972, 0.020727958, 0.020803...</msg>
<status status="PASS" starttime="20201112 09:54:13.299" endtime="20201112 09:54:13.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.316" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 09:54:13.315" endtime="20201112 09:54:13.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.319" level="INFO">VALUE: [6.62220000000012e-05, 5.740299999999754e-05, 5.7791999999997484e-05, 5.7236000000002174e-05, 5.7792000000000954e-05, 5.715299999999729e-05, 5.7042000000000204e-05, 5.768099999999693e-05, 5.722299999999861e-05, 5.734699999999926e-05, 5.704100000000073e-05, 5.793100000000065e-05, 5.780500000000105e-05, 5.787500000000237e-05, 5.7721999999999635e-05, 5.7457999999999815e-05, 5.711099999999858e-05, 5.759699999999951e-05, 5.71809999999999e-05, 5.795899999999979e-05, 5.7971999999999885e-05, 5.763900000000169e-05, 5.759700000000298e-05, 5.711100000000205e-05, 5.765300000000126e-05, 5.7764000000001814e-05, 5.7292000000000454e-05, 5.780499999999758e-05, 5.730500000000055e-05, 5.704100000000073e-05, 5.794500000000022e-05, 5.7388000000001965e-05, 5.7735999999999205e-05, 5.73610000000023e-05, 5.7971999999999885e-05, 5.734700000000273e-05, 5.7985999999999455e-05, 5.8014000000002064e-05, 5.784699999999976e-05, 5.709699999999901e-05, 5.7500000000001994e-05, 5.769499999999997e-05, 5.790299999999804e-05, 5.7833999999999663e-05, 5.740300000000101e-05, 5.762499999999865e-05, 5.7833999999999663e-05, 5.7764000000001814e-05, 5.702699999999769e-05, 5.708299999999944e-05]</msg>
<status status="PASS" starttime="20201112 09:54:13.317" endtime="20201112 09:54:13.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.313" endtime="20201112 09:54:13.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.322" endtime="20201112 09:54:13.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.326" endtime="20201112 09:54:13.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.324" endtime="20201112 09:54:13.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.321" endtime="20201112 09:54:13.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.953" endtime="20201112 09:54:13.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.952" endtime="20201112 09:54:13.346"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.355" endtime="20201112 09:54:13.374"></status>
</kw>
<msg timestamp="20201112 09:54:13.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.353" endtime="20201112 09:54:13.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.376" endtime="20201112 09:54:13.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.378" endtime="20201112 09:54:13.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.351" endtime="20201112 09:54:13.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.349" endtime="20201112 09:54:13.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.388" endtime="20201112 09:54:13.673"></status>
</kw>
<msg timestamp="20201112 09:54:13.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.387" endtime="20201112 09:54:13.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.677" endtime="20201112 09:54:13.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.686" endtime="20201112 09:54:13.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.384" endtime="20201112 09:54:13.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.382" endtime="20201112 09:54:13.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:13.692" level="INFO">${RESULT} = [{'time': 0.019627472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.673600000000127e-05, 'source_diff': 6.673600000000127e-05}, {'time': 0.019699778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:13.689" endtime="20201112 09:54:13.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:13.706" level="INFO">${ACCURACY} = {'time': [0.019627472, 0.019699778, 0.019774764, 0.019846778, 0.019923778, 0.019995833, 0.020072778, 0.020144819, 0.020219806, 0.020291847, 0.020366819, 0.020437819, 0.020515833, 0.020587861, 0.020663...</msg>
<status status="PASS" starttime="20201112 09:54:13.693" endtime="20201112 09:54:13.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.710" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 09:54:13.709" endtime="20201112 09:54:13.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.713" level="INFO">VALUE: [6.673600000000127e-05, 5.815300000000176e-05, 5.8792000000001954e-05, 5.841699999999811e-05, 5.836099999999983e-05, 5.831900000000112e-05, 5.8584000000000414e-05, 5.8485999999999955e-05, 5.8097999999999483e-05, 5.813899999999872e-05, 5.8637999999999746e-05, 5.827699999999894e-05, 5.8180000000001425e-05, 5.836099999999983e-05, 5.855499999999833e-05, 5.834699999999679e-05, 5.8597999999999983e-05, 5.85689999999979e-05, 5.884700000000076e-05, 5.902699999999969e-05, 5.891699999999861e-05, 5.840299999999854e-05, 5.8513999999999095e-05, 5.8791999999998484e-05, 5.8306000000001024e-05, 5.8485999999999955e-05, 5.834700000000026e-05, 5.8943999999998276e-05, 5.8763999999999345e-05, 5.8972000000000885e-05, 5.8249999999999275e-05, 5.838899999999897e-05, 5.8929999999998706e-05, 5.8208000000000565e-05, 5.8485999999999955e-05, 5.8277999999998414e-05, 5.8971999999997415e-05, 5.8708000000001065e-05, 5.8986000000000455e-05, 5.8722000000000635e-05, 5.809700000000001e-05, 5.836099999999983e-05, 5.870900000000054e-05, 5.872300000000011e-05, 5.873699999999968e-05, 5.8736000000000205e-05, 5.8499999999999525e-05, 5.890299999999904e-05, 5.8222000000000135e-05, 5.879100000000248e-05]</msg>
<status status="PASS" starttime="20201112 09:54:13.711" endtime="20201112 09:54:13.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.706" endtime="20201112 09:54:13.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.716" endtime="20201112 09:54:13.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.720" endtime="20201112 09:54:13.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.718" endtime="20201112 09:54:13.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.715" endtime="20201112 09:54:13.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.347" endtime="20201112 09:54:13.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.347" endtime="20201112 09:54:13.741"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.749" endtime="20201112 09:54:13.768"></status>
</kw>
<msg timestamp="20201112 09:54:13.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.747" endtime="20201112 09:54:13.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.770" endtime="20201112 09:54:13.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.772" endtime="20201112 09:54:13.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.745" endtime="20201112 09:54:13.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.743" endtime="20201112 09:54:13.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.782" endtime="20201112 09:54:14.068"></status>
</kw>
<msg timestamp="20201112 09:54:14.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01985375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:13.781" endtime="20201112 09:54:14.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01985375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:14.073" endtime="20201112 09:54:14.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.081" endtime="20201112 09:54:14.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.778" endtime="20201112 09:54:14.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.777" endtime="20201112 09:54:14.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:14.088" level="INFO">${RESULT} = [{'time': 0.01985375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.808300000000003e-05, 'source_diff': 6.808300000000003e-05}, {'time': 0.019929014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:14.085" endtime="20201112 09:54:14.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:14.103" level="INFO">${ACCURACY} = {'time': [0.01985375, 0.019929014, 0.020007014, 0.020079014, 0.020156028, 0.020229042, 0.020306028, 0.020378056, 0.020457056, 0.020529083, 0.020605056, 0.020680069, 0.020758097, 0.020833083, 0.0209110...</msg>
<status status="PASS" starttime="20201112 09:54:14.089" endtime="20201112 09:54:14.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.107" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 09:54:14.106" endtime="20201112 09:54:14.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.110" level="INFO">VALUE: [6.808300000000003e-05, 5.991699999999961e-05, 5.9707999999998596e-05, 5.984699999999829e-05, 5.9027999999999164e-05, 5.963900000000022e-05, 5.9514000000000095e-05, 5.973699999999721e-05, 5.995900000000179e-05, 5.9916000000000136e-05, 5.915299999999929e-05, 5.958299999999847e-05, 5.931899999999865e-05, 5.9957999999998846e-05, 5.981899999999915e-05, 5.93750000000004e-05, 5.933299999999822e-05, 5.9943999999999276e-05, 5.965299999999979e-05, 5.90689999999984e-05, 5.9722000000001635e-05, 5.9291999999998984e-05, 5.9486000000000955e-05, 5.938899999999997e-05, 5.9222000000001135e-05, 5.9348000000000734e-05, 5.993099999999918e-05, 5.954099999999976e-05, 5.9665999999999886e-05, 5.984699999999829e-05, 5.986099999999786e-05, 5.9527999999999665e-05, 5.9151999999999816e-05, 5.981899999999915e-05, 5.9722000000001635e-05, 5.9236000000000705e-05, 5.9722000000001635e-05, 5.9458000000001815e-05, 5.9443999999998776e-05, 5.9236000000000705e-05, 5.990300000000004e-05, 5.9084000000000914e-05, 5.969500000000197e-05, 5.915299999999929e-05, 5.9806000000002524e-05, 5.970899999999807e-05, 5.927699999999994e-05, 5.95689999999989e-05, 5.9472000000001385e-05, 5.912500000000015e-05]</msg>
<status status="PASS" starttime="20201112 09:54:14.108" endtime="20201112 09:54:14.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.104" endtime="20201112 09:54:14.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.113" endtime="20201112 09:54:14.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:14.117" endtime="20201112 09:54:14.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.115" endtime="20201112 09:54:14.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.112" endtime="20201112 09:54:14.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.741" endtime="20201112 09:54:14.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.741" endtime="20201112 09:54:14.137"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.146" endtime="20201112 09:54:14.165"></status>
</kw>
<msg timestamp="20201112 09:54:14.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.144" endtime="20201112 09:54:14.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.166" endtime="20201112 09:54:14.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.169" endtime="20201112 09:54:14.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.142" endtime="20201112 09:54:14.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.140" endtime="20201112 09:54:14.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.179" endtime="20201112 09:54:14.465"></status>
</kw>
<msg timestamp="20201112 09:54:14.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019541917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.177" endtime="20201112 09:54:14.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019541917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.469" endtime="20201112 09:54:14.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.478" endtime="20201112 09:54:14.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.175" endtime="20201112 09:54:14.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.173" endtime="20201112 09:54:14.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:14.485" level="INFO">${RESULT} = [{'time': 0.019610861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.894400000000134e-05, 'source_diff': 6.894400000000134e-05}, {'time': 0.019687083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:14.481" endtime="20201112 09:54:14.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:14.498" level="INFO">${ACCURACY} = {'time': [0.019610861, 0.019687083, 0.019766083, 0.019841097, 0.019921139, 0.019995097, 0.020075125, 0.020148111, 0.020228139, 0.020302139, 0.020381153, 0.020454167, 0.020532222, 0.020605167, 0.020685...</msg>
<status status="PASS" starttime="20201112 09:54:14.485" endtime="20201112 09:54:14.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.502" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 09:54:14.501" endtime="20201112 09:54:14.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.505" level="INFO">VALUE: [6.894400000000134e-05, 6.084700000000276e-05, 6.059699999999904e-05, 6.083299999999972e-05, 6.0569999999999374e-05, 6.0957999999999846e-05, 6.0291999999999984e-05, 6.005499999999983e-05, 6.0735999999998735e-05, 6.0207999999999096e-05, 6.084699999999929e-05, 6.0777999999997445e-05, 6.0528000000000665e-05, 6.070899999999907e-05, 6.022300000000161e-05, 6.0069999999998874e-05, 6.0111999999997584e-05, 6.052699999999772e-05, 6.013900000000072e-05, 6.012500000000115e-05, 6.059699999999904e-05, 6.029100000000051e-05, 6.0500000000001525e-05, 6.065299999999732e-05, 6.0778000000000915e-05, 6.033299999999922e-05, 6.0207999999999096e-05, 6.066700000000036e-05, 6.0291999999999984e-05, 6.0833999999999194e-05, 6.072299999999864e-05, 6.047299999999839e-05, 6.016699999999986e-05, 6.0278000000000415e-05, 6.0028000000000165e-05, 6.0152000000000816e-05, 6.1013999999998125e-05, 6.05689999999999e-05, 6.0165999999996916e-05, 6.0430000000000206e-05, 6.0778000000000915e-05, 6.013900000000072e-05, 6.0250000000001275e-05, 6.018099999999943e-05, 6.0097999999998014e-05, 6.031900000000312e-05, 6.0069999999998874e-05, 6.0194999999999e-05, 6.0778000000000915e-05, 6.047299999999839e-05]</msg>
<status status="PASS" starttime="20201112 09:54:14.503" endtime="20201112 09:54:14.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.499" endtime="20201112 09:54:14.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.508" endtime="20201112 09:54:14.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:14.512" endtime="20201112 09:54:14.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.510" endtime="20201112 09:54:14.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.507" endtime="20201112 09:54:14.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.138" endtime="20201112 09:54:14.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.138" endtime="20201112 09:54:14.533"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.541" endtime="20201112 09:54:14.560"></status>
</kw>
<msg timestamp="20201112 09:54:14.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.539" endtime="20201112 09:54:14.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.561" endtime="20201112 09:54:14.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.564" endtime="20201112 09:54:14.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.537" endtime="20201112 09:54:14.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.535" endtime="20201112 09:54:14.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.574" endtime="20201112 09:54:14.860"></status>
</kw>
<msg timestamp="20201112 09:54:14.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019722444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.573" endtime="20201112 09:54:14.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019722444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.864" endtime="20201112 09:54:14.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.872" endtime="20201112 09:54:14.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.570" endtime="20201112 09:54:14.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.568" endtime="20201112 09:54:14.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:14.879" level="INFO">${RESULT} = [{'time': 0.019722444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.991599999999973e-05, 'source_diff': 6.991599999999973e-05}, {'time': 0.019799722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:14.876" endtime="20201112 09:54:14.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:14.892" level="INFO">${ACCURACY} = {'time': [0.019722444, 0.019799722, 0.019878736, 0.019955764, 0.02003375, 0.020109764, 0.020188764, 0.020262778, 0.020343764, 0.020420792, 0.020500792, 0.020576819, 0.020654806, 0.020731806, 0.0208108...</msg>
<status status="PASS" starttime="20201112 09:54:14.880" endtime="20201112 09:54:14.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.897" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 09:54:14.896" endtime="20201112 09:54:14.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.899" level="INFO">VALUE: [6.991599999999973e-05, 6.177799999999845e-05, 6.118000000000096e-05, 6.172200000000017e-05, 6.159700000000004e-05, 6.147199999999992e-05, 6.129200000000098e-05, 6.116699999999739e-05, 6.145800000000035e-05, 6.13339999999997e-05, 6.1888999999999e-05, 6.173599999999974e-05, 6.109800000000248e-05, 6.13889999999985e-05, 6.166600000000189e-05, 6.201299999999965e-05, 6.180499999999811e-05, 6.152700000000219e-05, 6.155500000000133e-05, 6.141599999999817e-05, 6.10560000000003e-05, 6.131899999999718e-05, 6.177800000000191e-05, 6.184700000000029e-05, 6.197200000000042e-05, 6.140200000000207e-05, 6.13339999999997e-05, 6.17499999999993e-05, 6.18340000000002e-05, 6.108399999999944e-05, 6.191700000000161e-05, 6.172200000000017e-05, 6.187499999999943e-05, 6.119400000000053e-05, 6.148599999999949e-05, 6.115299999999782e-05, 6.202800000000216e-05, 6.166700000000136e-05, 6.179199999999802e-05, 6.127799999999795e-05, 6.148599999999949e-05, 6.106999999999987e-05, 6.15279999999982e-05, 6.115300000000129e-05, 6.1195e-05, 6.150000000000252e-05, 6.181899999999768e-05, 6.144500000000025e-05, 6.184700000000029e-05, 6.181999999999716e-05]</msg>
<status status="PASS" starttime="20201112 09:54:14.898" endtime="20201112 09:54:14.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.893" endtime="20201112 09:54:14.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.908" endtime="20201112 09:54:14.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:14.912" endtime="20201112 09:54:14.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.910" endtime="20201112 09:54:14.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.906" endtime="20201112 09:54:14.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.533" endtime="20201112 09:54:14.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.533" endtime="20201112 09:54:14.932"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.941" endtime="20201112 09:54:14.960"></status>
</kw>
<msg timestamp="20201112 09:54:14.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.939" endtime="20201112 09:54:14.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.962" endtime="20201112 09:54:14.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.964" endtime="20201112 09:54:14.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.937" endtime="20201112 09:54:14.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.935" endtime="20201112 09:54:14.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.974" endtime="20201112 09:54:15.261"></status>
</kw>
<msg timestamp="20201112 09:54:15.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019701792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.973" endtime="20201112 09:54:15.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019701792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.265" endtime="20201112 09:54:15.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.273" endtime="20201112 09:54:15.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.970" endtime="20201112 09:54:15.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.968" endtime="20201112 09:54:15.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:15.280" level="INFO">${RESULT} = [{'time': 0.019701792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.119499999999959e-05, 'source_diff': 7.119499999999959e-05}, {'time': 0.019776069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:15.276" endtime="20201112 09:54:15.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:15.293" level="INFO">${ACCURACY} = {'time': [0.019701792, 0.019776069, 0.019857083, 0.019934111, 0.020016097, 0.020093097, 0.020173125, 0.020250194, 0.020329111, 0.020404153, 0.020485153, 0.020560153, 0.020641153, 0.020719153, 0.020798...</msg>
<status status="PASS" starttime="20201112 09:54:15.281" endtime="20201112 09:54:15.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.297" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 09:54:15.296" endtime="20201112 09:54:15.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.300" level="INFO">VALUE: [7.119499999999959e-05, 6.201299999999965e-05, 6.227699999999947e-05, 6.287500000000043e-05, 6.256899999999843e-05, 6.251399999999963e-05, 6.273600000000074e-05, 6.269399999999856e-05, 6.295800000000185e-05, 6.211100000000011e-05, 6.255599999999834e-05, 6.226400000000284e-05, 6.241699999999864e-05, 6.297200000000142e-05, 6.241699999999864e-05, 6.236100000000036e-05, 6.255499999999886e-05, 6.268000000000246e-05, 6.27080000000016e-05, 6.30279999999997e-05, 6.209700000000054e-05, 6.229199999999852e-05, 6.300000000000056e-05, 6.234700000000079e-05, 6.237499999999993e-05, 6.220799999999763e-05, 6.259700000000104e-05, 6.291699999999914e-05, 6.254200000000223e-05, 6.28479999999973e-05, 6.294499999999828e-05, 6.208400000000044e-05, 6.236199999999983e-05, 6.286200000000033e-05, 6.297299999999742e-05, 6.2889e-05, 6.229199999999852e-05, 6.251399999999963e-05, 6.229100000000251e-05, 6.251399999999963e-05, 6.247200000000092e-05, 6.283300000000172e-05, 6.22499999999998e-05, 6.222200000000067e-05, 6.266700000000236e-05, 6.204200000000173e-05, 6.259700000000104e-05, 6.290299999999957e-05, 6.272300000000064e-05, 6.2582999999998e-05]</msg>
<status status="PASS" starttime="20201112 09:54:15.298" endtime="20201112 09:54:15.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.294" endtime="20201112 09:54:15.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.303" endtime="20201112 09:54:15.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.307" endtime="20201112 09:54:15.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.305" endtime="20201112 09:54:15.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.302" endtime="20201112 09:54:15.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.933" endtime="20201112 09:54:15.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.933" endtime="20201112 09:54:15.328"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.336" endtime="20201112 09:54:15.355"></status>
</kw>
<msg timestamp="20201112 09:54:15.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.335" endtime="20201112 09:54:15.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.357" endtime="20201112 09:54:15.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.360" endtime="20201112 09:54:15.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.332" endtime="20201112 09:54:15.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.330" endtime="20201112 09:54:15.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.369" endtime="20201112 09:54:15.656"></status>
</kw>
<msg timestamp="20201112 09:54:15.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019634097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019706528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.368" endtime="20201112 09:54:15.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019634097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019706528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.660" endtime="20201112 09:54:15.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.668" endtime="20201112 09:54:15.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.365" endtime="20201112 09:54:15.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.364" endtime="20201112 09:54:15.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:15.675" level="INFO">${RESULT} = [{'time': 0.019706528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.243100000000127e-05, 'source_diff': 7.243100000000127e-05}, {'time': 0.019783833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:15.671" endtime="20201112 09:54:15.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:15.689" level="INFO">${ACCURACY} = {'time': [0.019706528, 0.019783833, 0.019866833, 0.019945847, 0.020025833, 0.020102847, 0.020185861, 0.020262861, 0.020342875, 0.020420931, 0.020503889, 0.020582889, 0.020662889, 0.020739903, 0.020819...</msg>
<status status="PASS" starttime="20201112 09:54:15.676" endtime="20201112 09:54:15.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.694" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 09:54:15.693" endtime="20201112 09:54:15.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.696" level="INFO">VALUE: [7.243100000000127e-05, 6.311100000000111e-05, 6.311100000000111e-05, 6.373599999999827e-05, 6.370799999999913e-05, 6.327799999999995e-05, 6.323599999999777e-05, 6.370799999999913e-05, 6.336100000000136e-05, 6.376400000000088e-05, 6.358300000000247e-05, 6.395799999999938e-05, 6.327799999999995e-05, 6.315299999999982e-05, 6.330599999999909e-05, 6.315200000000035e-05, 6.32639999999969e-05, 6.32089999999981e-05, 6.37500000000013e-05, 6.336099999999789e-05, 6.362500000000118e-05, 6.30829999999985e-05, 6.398600000000199e-05, 6.387499999999796e-05, 6.311100000000111e-05, 6.315299999999982e-05, 6.369499999999903e-05, 6.337499999999746e-05, 6.323600000000124e-05, 6.366699999999989e-05, 6.354200000000323e-05, 6.323600000000124e-05, 6.401400000000113e-05, 6.379200000000002e-05, 6.376299999999793e-05, 6.344499999999878e-05, 6.32500000000008e-05, 6.374999999999784e-05, 6.323600000000124e-05, 6.345799999999888e-05, 6.341699999999964e-05, 6.398600000000199e-05, 6.311100000000111e-05, 6.384699999999882e-05, 6.363900000000075e-05, 6.363900000000075e-05, 6.35699999999989e-05, 6.394499999999928e-05, 6.351400000000063e-05, 6.344400000000278e-05]</msg>
<status status="PASS" starttime="20201112 09:54:15.695" endtime="20201112 09:54:15.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.690" endtime="20201112 09:54:15.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.700" endtime="20201112 09:54:15.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.703" endtime="20201112 09:54:15.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.702" endtime="20201112 09:54:15.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.698" endtime="20201112 09:54:15.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.328" endtime="20201112 09:54:15.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.328" endtime="20201112 09:54:15.724"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.733" endtime="20201112 09:54:15.752"></status>
</kw>
<msg timestamp="20201112 09:54:15.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.731" endtime="20201112 09:54:15.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.753" endtime="20201112 09:54:15.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.756" endtime="20201112 09:54:15.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.729" endtime="20201112 09:54:15.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.727" endtime="20201112 09:54:15.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.766" endtime="20201112 09:54:16.051"></status>
</kw>
<msg timestamp="20201112 09:54:16.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.764" endtime="20201112 09:54:16.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.055" endtime="20201112 09:54:16.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.063" endtime="20201112 09:54:16.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.762" endtime="20201112 09:54:16.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.760" endtime="20201112 09:54:16.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:16.070" level="INFO">${RESULT} = [{'time': 0.019737278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.322200000000126e-05, 'source_diff': 7.322200000000126e-05}, {'time': 0.019816556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:16.066" endtime="20201112 09:54:16.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:16.083" level="INFO">${ACCURACY} = {'time': [0.019737278, 0.019816556, 0.019898569, 0.019975569, 0.020056556, 0.020136556, 0.020218583, 0.020296597, 0.020380625, 0.020458611, 0.020541611, 0.020618625, 0.020700611, 0.020776639, 0.020857...</msg>
<status status="PASS" starttime="20201112 09:54:16.071" endtime="20201112 09:54:16.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.087" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 09:54:16.086" endtime="20201112 09:54:16.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.090" level="INFO">VALUE: [7.322200000000126e-05, 6.473699999999874e-05, 6.44020000000016e-05, 6.440199999999813e-05, 6.438899999999803e-05, 6.458399999999948e-05, 6.455499999999739e-05, 6.413900000000125e-05, 6.481900000000068e-05, 6.434700000000279e-05, 6.405500000000036e-05, 6.477800000000145e-05, 6.413900000000125e-05, 6.429200000000052e-05, 6.436100000000236e-05, 6.408399999999898e-05, 6.430600000000009e-05, 6.479200000000102e-05, 6.449999999999859e-05, 6.483300000000025e-05, 6.413900000000125e-05, 6.413899999999778e-05, 6.491600000000167e-05, 6.423600000000224e-05, 6.447199999999945e-05, 6.44440000000003e-05, 6.440300000000107e-05, 6.419499999999953e-05, 6.429199999999705e-05, 6.450000000000206e-05, 6.429200000000052e-05, 6.4583e-05, 6.418099999999996e-05, 6.42639999999979e-05, 6.436200000000183e-05, 6.4889000000002e-05, 6.451400000000163e-05, 6.472200000000317e-05, 6.448700000000196e-05, 6.452700000000172e-05, 6.434699999999932e-05, 6.4583e-05, 6.477700000000197e-05, 6.477800000000145e-05, 6.427799999999748e-05, 6.416700000000039e-05, 6.447199999999945e-05, 6.495800000000038e-05, 6.491700000000114e-05, 6.429199999999705e-05]</msg>
<status status="PASS" starttime="20201112 09:54:16.089" endtime="20201112 09:54:16.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.084" endtime="20201112 09:54:16.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.093" endtime="20201112 09:54:16.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:16.097" endtime="20201112 09:54:16.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.095" endtime="20201112 09:54:16.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.092" endtime="20201112 09:54:16.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.725" endtime="20201112 09:54:16.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.725" endtime="20201112 09:54:16.118"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.126" endtime="20201112 09:54:16.146"></status>
</kw>
<msg timestamp="20201112 09:54:16.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.125" endtime="20201112 09:54:16.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.147" endtime="20201112 09:54:16.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.150" endtime="20201112 09:54:16.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.122" endtime="20201112 09:54:16.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.120" endtime="20201112 09:54:16.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.160" endtime="20201112 09:54:16.445"></status>
</kw>
<msg timestamp="20201112 09:54:16.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019755833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01983025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:16.158" endtime="20201112 09:54:16.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019755833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01983025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:16.449" endtime="20201112 09:54:16.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.457" endtime="20201112 09:54:16.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.156" endtime="20201112 09:54:16.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.154" endtime="20201112 09:54:16.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:16.464" level="INFO">${RESULT} = [{'time': 0.01983025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.441700000000023e-05, 'source_diff': 7.441700000000023e-05}, {'time': 0.019909556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:16.460" endtime="20201112 09:54:16.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:16.477" level="INFO">${ACCURACY} = {'time': [0.01983025, 0.019909556, 0.019993542, 0.020073542, 0.020155556, 0.020234597, 0.020318569, 0.020396583, 0.020480583, 0.020559597, 0.020644597, 0.020722597, 0.020807639, 0.020888639, 0.0209706...</msg>
<status status="PASS" starttime="20201112 09:54:16.465" endtime="20201112 09:54:16.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.482" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 09:54:16.481" endtime="20201112 09:54:16.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.484" level="INFO">VALUE: [7.441700000000023e-05, 6.533399999999676e-05, 6.515299999999835e-05, 6.547299999999992e-05, 6.566700000000189e-05, 6.580499999999864e-05, 6.583300000000125e-05, 6.540199999999913e-05, 6.598600000000052e-05, 6.520800000000063e-05, 6.55280000000022e-05, 6.552799999999873e-05, 6.588899999999953e-05, 6.583300000000125e-05, 6.588899999999953e-05, 6.54029999999986e-05, 6.515300000000182e-05, 6.577800000000245e-05, 6.509800000000301e-05, 6.505600000000084e-05, 6.558400000000048e-05, 6.502699999999875e-05, 6.50700000000004e-05, 6.573600000000027e-05, 6.536099999999989e-05, 6.506899999999746e-05, 6.59159999999992e-05, 6.583300000000125e-05, 6.583299999999778e-05, 6.558299999999753e-05, 6.515300000000182e-05, 6.515300000000182e-05, 6.594500000000128e-05, 6.598599999999705e-05, 6.584699999999735e-05, 6.544500000000078e-05, 6.505500000000136e-05, 6.50700000000004e-05, 6.561100000000014e-05, 6.519500000000053e-05, 6.513900000000225e-05, 6.509700000000007e-05, 6.595799999999791e-05, 6.518000000000149e-05, 6.586100000000039e-05, 6.50830000000005e-05, 6.586099999999692e-05, 6.545900000000035e-05, 6.513899999999878e-05, 6.569500000000103e-05]</msg>
<status status="PASS" starttime="20201112 09:54:16.483" endtime="20201112 09:54:16.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.478" endtime="20201112 09:54:16.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.487" endtime="20201112 09:54:16.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:16.491" endtime="20201112 09:54:16.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.489" endtime="20201112 09:54:16.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.486" endtime="20201112 09:54:16.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.119" endtime="20201112 09:54:16.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.118" endtime="20201112 09:54:16.512"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.520" endtime="20201112 09:54:16.540"></status>
</kw>
<msg timestamp="20201112 09:54:16.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.519" endtime="20201112 09:54:16.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.542" endtime="20201112 09:54:16.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.544" endtime="20201112 09:54:16.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.516" endtime="20201112 09:54:16.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.514" endtime="20201112 09:54:16.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.554" endtime="20201112 09:54:16.838"></status>
</kw>
<msg timestamp="20201112 09:54:16.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:16.552" endtime="20201112 09:54:16.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:16.842" endtime="20201112 09:54:16.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.851" endtime="20201112 09:54:16.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.550" endtime="20201112 09:54:16.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.548" endtime="20201112 09:54:16.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:16.857" level="INFO">${RESULT} = [{'time': 0.0197075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.561099999999973e-05, 'source_diff': 7.561099999999973e-05}, {'time': 0.019789847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:16.854" endtime="20201112 09:54:16.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:16.871" level="INFO">${ACCURACY} = {'time': [0.0197075, 0.019789847, 0.019873792, 0.019952875, 0.020038819, 0.020119833, 0.020203833, 0.020285847, 0.020371833, 0.020449861, 0.020532847, 0.020614861, 0.020698889, 0.020777889, 0.02086291...</msg>
<status status="PASS" starttime="20201112 09:54:16.858" endtime="20201112 09:54:16.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.875" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 09:54:16.874" endtime="20201112 09:54:16.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.878" level="INFO">VALUE: [7.561099999999973e-05, 6.680499999999964e-05, 6.677799999999998e-05, 6.641699999999917e-05, 6.67770000000005e-05, 6.647200000000145e-05, 6.701400000000066e-05, 6.638900000000003e-05, 6.604099999999932e-05, 6.602799999999923e-05, 6.609700000000107e-05, 6.677799999999998e-05, 6.612500000000021e-05, 6.627799999999948e-05, 6.668100000000246e-05, 6.663900000000028e-05, 6.666699999999942e-05, 6.682000000000216e-05, 6.686100000000139e-05, 6.694499999999881e-05, 6.698599999999805e-05, 6.669499999999856e-05, 6.647200000000145e-05, 6.686099999999792e-05, 6.677799999999998e-05, 6.652799999999973e-05, 6.642999999999927e-05, 6.616699999999892e-05, 6.684700000000182e-05, 6.615300000000282e-05, 6.611100000000064e-05, 6.697199999999848e-05, 6.616699999999892e-05, 6.644500000000178e-05, 6.662500000000071e-05, 6.634700000000132e-05, 6.648599999999755e-05, 6.626300000000043e-05, 6.686100000000139e-05, 6.67220000000017e-05, 6.629199999999905e-05, 6.695799999999891e-05, 6.688900000000053e-05, 6.630599999999862e-05, 6.683400000000173e-05, 6.670799999999866e-05, 6.680599999999912e-05, 6.615299999999935e-05, 6.615299999999935e-05, 6.665299999999985e-05]</msg>
<status status="PASS" starttime="20201112 09:54:16.876" endtime="20201112 09:54:16.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.872" endtime="20201112 09:54:16.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.881" endtime="20201112 09:54:16.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:16.885" endtime="20201112 09:54:16.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.883" endtime="20201112 09:54:16.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.880" endtime="20201112 09:54:16.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.513" endtime="20201112 09:54:16.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.512" endtime="20201112 09:54:16.906"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.914" endtime="20201112 09:54:16.934"></status>
</kw>
<msg timestamp="20201112 09:54:16.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.913" endtime="20201112 09:54:16.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.936" endtime="20201112 09:54:16.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.938" endtime="20201112 09:54:16.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.910" endtime="20201112 09:54:16.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.908" endtime="20201112 09:54:16.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.948" endtime="20201112 09:54:17.234"></status>
</kw>
<msg timestamp="20201112 09:54:17.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.946" endtime="20201112 09:54:17.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.238" endtime="20201112 09:54:17.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.246" endtime="20201112 09:54:17.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.944" endtime="20201112 09:54:17.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.942" endtime="20201112 09:54:17.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:17.253" level="INFO">${RESULT} = [{'time': 0.019707764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.591699999999826e-05, 'source_diff': 7.591699999999826e-05}, {'time': 0.019790028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:17.249" endtime="20201112 09:54:17.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:17.267" level="INFO">${ACCURACY} = {'time': [0.019707764, 0.019790028, 0.019874056, 0.019956069, 0.020041056, 0.020123083, 0.020209069, 0.020288083, 0.020372097, 0.020455083, 0.020540125, 0.020620139, 0.020707139, 0.020790153, 0.020876...</msg>
<status status="PASS" starttime="20201112 09:54:17.254" endtime="20201112 09:54:17.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.271" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 09:54:17.270" endtime="20201112 09:54:17.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.274" level="INFO">VALUE: [7.591699999999826e-05, 6.759700000000257e-05, 6.768099999999999e-05, 6.802699999999828e-05, 6.709800000000155e-05, 6.784699999999935e-05, 6.726299999999796e-05, 6.720799999999916e-05, 6.75969999999991e-05, 6.774999999999837e-05, 6.74030000000006e-05, 6.77359999999988e-05, 6.798599999999905e-05, 6.734699999999885e-05, 6.781900000000021e-05, 6.734700000000232e-05, 6.781999999999969e-05, 6.711200000000112e-05, 6.793100000000024e-05, 6.799999999999862e-05, 6.715300000000035e-05, 6.723600000000177e-05, 6.740200000000113e-05, 6.77220000000027e-05, 6.77220000000027e-05, 6.730500000000014e-05, 6.741700000000017e-05, 6.713899999999731e-05, 6.77090000000026e-05, 6.744399999999984e-05, 6.762499999999824e-05, 6.762500000000171e-05, 6.70969999999986e-05, 6.727800000000048e-05, 6.788899999999806e-05, 6.790299999999763e-05, 6.779200000000055e-05, 6.715199999999741e-05, 6.702700000000075e-05, 6.787499999999849e-05, 6.702700000000075e-05, 6.733299999999928e-05, 6.719399999999959e-05, 6.797200000000295e-05, 6.79030000000011e-05, 6.751400000000116e-05, 6.750000000000159e-05, 6.729200000000005e-05, 6.70419999999998e-05, 6.719499999999906e-05]</msg>
<status status="PASS" starttime="20201112 09:54:17.272" endtime="20201112 09:54:17.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.268" endtime="20201112 09:54:17.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.278" endtime="20201112 09:54:17.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.281" endtime="20201112 09:54:17.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.279" endtime="20201112 09:54:17.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.276" endtime="20201112 09:54:17.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.906" endtime="20201112 09:54:17.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.906" endtime="20201112 09:54:17.302"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.310" endtime="20201112 09:54:17.329"></status>
</kw>
<msg timestamp="20201112 09:54:17.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.309" endtime="20201112 09:54:17.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.331" endtime="20201112 09:54:17.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.333" endtime="20201112 09:54:17.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.306" endtime="20201112 09:54:17.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.304" endtime="20201112 09:54:17.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.343" endtime="20201112 09:54:17.629"></status>
</kw>
<msg timestamp="20201112 09:54:17.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:17.342" endtime="20201112 09:54:17.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:17.633" endtime="20201112 09:54:17.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.641" endtime="20201112 09:54:17.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.339" endtime="20201112 09:54:17.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.338" endtime="20201112 09:54:17.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:17.648" level="INFO">${RESULT} = [{'time': 0.01969325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.680599999999871e-05, 'source_diff': 7.680599999999871e-05}, {'time': 0.019774528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:17.644" endtime="20201112 09:54:17.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:17.661" level="INFO">${ACCURACY} = {'time': [0.01969325, 0.019774528, 0.019862542, 0.019945542, 0.020033569, 0.020115556, 0.020200556, 0.020281625, 0.020368583, 0.020449583, 0.020537611, 0.020617611, 0.020703611, 0.020787639, 0.0208746...</msg>
<status status="PASS" starttime="20201112 09:54:17.649" endtime="20201112 09:54:17.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.666" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 09:54:17.665" endtime="20201112 09:54:17.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.668" level="INFO">VALUE: [7.680599999999871e-05, 6.830600000000062e-05, 6.880600000000112e-05, 6.880600000000112e-05, 6.854100000000182e-05, 6.827799999999801e-05, 6.897299999999995e-05, 6.906900000000146e-05, 6.898600000000005e-05, 6.890199999999916e-05, 6.841700000000117e-05, 6.822199999999973e-05, 6.829200000000105e-05, 6.848599999999955e-05, 6.902800000000223e-05, 6.888899999999906e-05, 6.894500000000081e-05, 6.813800000000231e-05, 6.897200000000048e-05, 6.82359999999993e-05, 6.891700000000167e-05, 6.832000000000019e-05, 6.863899999999881e-05, 6.899999999999962e-05, 6.838899999999856e-05, 6.80969999999996e-05, 6.829199999999758e-05, 6.830599999999715e-05, 6.865300000000185e-05, 6.883300000000078e-05, 6.882000000000069e-05, 6.82229999999992e-05, 6.830600000000062e-05, 6.809799999999908e-05, 6.80420000000008e-05, 6.820899999999963e-05, 6.852799999999826e-05, 6.825000000000234e-05, 6.859799999999958e-05, 6.816599999999798e-05, 6.876399999999894e-05, 6.802799999999776e-05, 6.897200000000048e-05, 6.861099999999967e-05, 6.895800000000091e-05, 6.862499999999924e-05, 6.888899999999906e-05, 6.82359999999993e-05, 6.837499999999899e-05, 6.899999999999962e-05]</msg>
<status status="PASS" starttime="20201112 09:54:17.667" endtime="20201112 09:54:17.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.662" endtime="20201112 09:54:17.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.672" endtime="20201112 09:54:17.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.675" endtime="20201112 09:54:17.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.673" endtime="20201112 09:54:17.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.670" endtime="20201112 09:54:17.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.303" endtime="20201112 09:54:17.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.302" endtime="20201112 09:54:17.696"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.704" endtime="20201112 09:54:17.723"></status>
</kw>
<msg timestamp="20201112 09:54:17.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.703" endtime="20201112 09:54:17.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.725" endtime="20201112 09:54:17.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.727" endtime="20201112 09:54:17.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.700" endtime="20201112 09:54:17.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.698" endtime="20201112 09:54:17.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.737" endtime="20201112 09:54:18.023"></status>
</kw>
<msg timestamp="20201112 09:54:18.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019634097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.736" endtime="20201112 09:54:18.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019634097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.028" endtime="20201112 09:54:18.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.036" endtime="20201112 09:54:18.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.733" endtime="20201112 09:54:18.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.732" endtime="20201112 09:54:18.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:18.043" level="INFO">${RESULT} = [{'time': 0.019634097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.783299999999937e-05, 'source_diff': 7.783299999999937e-05}, {'time': 0.019716431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:18.039" endtime="20201112 09:54:18.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:18.056" level="INFO">${ACCURACY} = {'time': [0.019634097, 0.019716431, 0.019805389, 0.019887389, 0.019976417, 0.020058403, 0.020147431, 0.020231431, 0.020317431, 0.020399444, 0.020488444, 0.020569444, 0.020655514, 0.020738472, 0.020826...</msg>
<status status="PASS" starttime="20201112 09:54:18.043" endtime="20201112 09:54:18.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.060" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 09:54:18.059" endtime="20201112 09:54:18.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.063" level="INFO">VALUE: [7.783299999999937e-05, 6.984800000000083e-05, 6.929199999999858e-05, 6.940299999999913e-05, 6.969499999999809e-05, 6.956999999999797e-05, 6.950000000000012e-05, 6.92230000000002e-05, 6.994500000000181e-05, 6.986100000000092e-05, 6.983300000000178e-05, 6.926299999999996e-05, 6.915299999999888e-05, 6.977799999999951e-05, 6.970799999999819e-05, 6.944400000000184e-05, 6.979199999999908e-05, 6.994399999999887e-05, 6.911100000000017e-05, 6.95970000000011e-05, 6.950000000000012e-05, 6.973700000000027e-05, 6.951400000000316e-05, 6.984800000000083e-05, 6.976300000000046e-05, 6.983399999999779e-05, 6.920800000000116e-05, 6.997200000000148e-05, 6.97909999999996e-05, 6.926399999999944e-05, 6.916699999999845e-05, 6.997199999999801e-05, 6.913899999999931e-05, 6.944399999999837e-05, 6.984699999999788e-05, 6.97360000000008e-05, 6.959699999999763e-05, 6.926399999999944e-05, 6.904199999999833e-05, 6.969500000000156e-05, 6.913899999999931e-05, 6.947200000000098e-05, 6.915199999999941e-05, 6.944399999999837e-05, 6.982000000000169e-05, 6.976399999999994e-05, 6.936100000000042e-05, 6.956900000000196e-05, 6.948599999999708e-05, 6.995799999999844e-05]</msg>
<status status="PASS" starttime="20201112 09:54:18.061" endtime="20201112 09:54:18.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.057" endtime="20201112 09:54:18.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.066" endtime="20201112 09:54:18.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:18.070" endtime="20201112 09:54:18.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.068" endtime="20201112 09:54:18.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.065" endtime="20201112 09:54:18.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.697" endtime="20201112 09:54:18.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.696" endtime="20201112 09:54:18.090"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.099" endtime="20201112 09:54:18.119"></status>
</kw>
<msg timestamp="20201112 09:54:18.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.097" endtime="20201112 09:54:18.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.120" endtime="20201112 09:54:18.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.123" endtime="20201112 09:54:18.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.095" endtime="20201112 09:54:18.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.093" endtime="20201112 09:54:18.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.133" endtime="20201112 09:54:18.418"></status>
</kw>
<msg timestamp="20201112 09:54:18.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:18.131" endtime="20201112 09:54:18.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:18.422" endtime="20201112 09:54:18.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.430" endtime="20201112 09:54:18.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.129" endtime="20201112 09:54:18.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.127" endtime="20201112 09:54:18.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:18.437" level="INFO">${RESULT} = [{'time': 0.019830389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.888899999999865e-05, 'source_diff': 7.888899999999865e-05}, {'time': 0.019912667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:18.434" endtime="20201112 09:54:18.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:18.450" level="INFO">${ACCURACY} = {'time': [0.019830389, 0.019912667, 0.020000681, 0.020084694, 0.020174694, 0.020257722, 0.02034575, 0.02042975, 0.020520708, 0.020603736, 0.020693736, 0.02077975, 0.02086775, 0.020953764, 0.021044778,...</msg>
<status status="PASS" starttime="20201112 09:54:18.438" endtime="20201112 09:54:18.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.455" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 09:54:18.454" endtime="20201112 09:54:18.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.457" level="INFO">VALUE: [7.888899999999865e-05, 7.01109999999977e-05, 7.026400000000044e-05, 7.034700000000185e-05, 7.027700000000053e-05, 7.098599999999858e-05, 7.026400000000044e-05, 7.080599999999965e-05, 7.095799999999944e-05, 7.037500000000099e-05, 7.083299999999931e-05, 7.093099999999977e-05, 7.013900000000031e-05, 7.083299999999931e-05, 7.097199999999901e-05, 7.043099999999927e-05, 7.034800000000133e-05, 7.040300000000013e-05, 7.02230000000012e-05, 7.00979999999976e-05, 7.044399999999937e-05, 7.063900000000081e-05, 7.094399999999987e-05, 7.091599999999726e-05, 7.102800000000076e-05, 7.047200000000198e-05, 7.012500000000074e-05, 7.077800000000051e-05, 7.054199999999983e-05, 7.032000000000219e-05, 6.997199999999801e-05, 7.097299999999848e-05, 7.019499999999859e-05, 7.097300000000195e-05, 7.076400000000094e-05, 7.02230000000012e-05, 7.069400000000309e-05, 7.065200000000091e-05, 7.055499999999992e-05, 7.006899999999899e-05, 7.001400000000019e-05, 7.077800000000051e-05, 7.065300000000038e-05, 7.013900000000031e-05, 7.040300000000013e-05, 7.052800000000026e-05, 7.076400000000094e-05, 7.016699999999945e-05, 7.084800000000183e-05, 7.052700000000078e-05]</msg>
<status status="PASS" starttime="20201112 09:54:18.456" endtime="20201112 09:54:18.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.451" endtime="20201112 09:54:18.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.461" endtime="20201112 09:54:18.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:18.464" endtime="20201112 09:54:18.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.462" endtime="20201112 09:54:18.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.459" endtime="20201112 09:54:18.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.091" endtime="20201112 09:54:18.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.091" endtime="20201112 09:54:18.485"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.493" endtime="20201112 09:54:18.513"></status>
</kw>
<msg timestamp="20201112 09:54:18.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.492" endtime="20201112 09:54:18.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.514" endtime="20201112 09:54:18.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.517" endtime="20201112 09:54:18.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.489" endtime="20201112 09:54:18.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.487" endtime="20201112 09:54:18.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.527" endtime="20201112 09:54:18.812"></status>
</kw>
<msg timestamp="20201112 09:54:18.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.525" endtime="20201112 09:54:18.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.816" endtime="20201112 09:54:18.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.825" endtime="20201112 09:54:18.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.523" endtime="20201112 09:54:18.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.521" endtime="20201112 09:54:18.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:18.832" level="INFO">${RESULT} = [{'time': 0.019686986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.008300000000163e-05, 'source_diff': 8.008300000000163e-05}, {'time': 0.019771264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:18.829" endtime="20201112 09:54:18.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:18.847" level="INFO">${ACCURACY} = {'time': [0.019686986, 0.019771264, 0.019861264, 0.01994825, 0.020038264, 0.020124292, 0.020215292, 0.020300278, 0.020390319, 0.020474333, 0.020563319, 0.020646319, 0.020737319, 0.020824347, 0.0209133...</msg>
<status status="PASS" starttime="20201112 09:54:18.833" endtime="20201112 09:54:18.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.852" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 09:54:18.851" endtime="20201112 09:54:18.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.854" level="INFO">VALUE: [8.008300000000163e-05, 7.198599999999958e-05, 7.10559999999999e-05, 7.194400000000087e-05, 7.127800000000101e-05, 7.137499999999852e-05, 7.123599999999883e-05, 7.175000000000237e-05, 7.104100000000085e-05, 7.148599999999908e-05, 7.166600000000148e-05, 7.133299999999981e-05, 7.158300000000006e-05, 7.172199999999976e-05, 7.159699999999963e-05, 7.163900000000181e-05, 7.132000000000319e-05, 7.17910000000016e-05, 7.116700000000045e-05, 7.109699999999913e-05, 7.152799999999779e-05, 7.202799999999829e-05, 7.137500000000199e-05, 7.133399999999929e-05, 7.195899999999991e-05, 7.154099999999788e-05, 7.151400000000169e-05, 7.141600000000123e-05, 7.165199999999844e-05, 7.176399999999847e-05, 7.149999999999865e-05, 7.181900000000074e-05, 7.133299999999981e-05, 7.158300000000006e-05, 7.186099999999945e-05, 7.130600000000015e-05, 7.193100000000077e-05, 7.109800000000208e-05, 7.14170000000007e-05, 7.140300000000113e-05, 7.105499999999695e-05, 7.133299999999981e-05, 7.11109999999987e-05, 7.152799999999779e-05, 7.108299999999956e-05, 7.199999999999915e-05, 7.191699999999773e-05, 7.127800000000101e-05, 7.179200000000108e-05, 7.102799999999729e-05]</msg>
<status status="PASS" starttime="20201112 09:54:18.853" endtime="20201112 09:54:18.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.848" endtime="20201112 09:54:18.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.857" endtime="20201112 09:54:18.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:18.861" endtime="20201112 09:54:18.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.859" endtime="20201112 09:54:18.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.856" endtime="20201112 09:54:18.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.486" endtime="20201112 09:54:18.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.485" endtime="20201112 09:54:18.882"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.890" endtime="20201112 09:54:18.910"></status>
</kw>
<msg timestamp="20201112 09:54:18.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.889" endtime="20201112 09:54:18.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.912" endtime="20201112 09:54:18.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.914" endtime="20201112 09:54:18.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.886" endtime="20201112 09:54:18.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.884" endtime="20201112 09:54:18.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.924" endtime="20201112 09:54:19.209"></status>
</kw>
<msg timestamp="20201112 09:54:19.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.923" endtime="20201112 09:54:19.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.213" endtime="20201112 09:54:19.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.222" endtime="20201112 09:54:19.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.920" endtime="20201112 09:54:19.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.919" endtime="20201112 09:54:19.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:19.228" level="INFO">${RESULT} = [{'time': 0.019792556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.14170000000003e-05, 'source_diff': 8.14170000000003e-05}, {'time': 0.019876847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:19.225" endtime="20201112 09:54:19.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:19.242" level="INFO">${ACCURACY} = {'time': [0.019792556, 0.019876847, 0.019965861, 0.020053875, 0.020142889, 0.020228875, 0.020319903, 0.020406903, 0.020496917, 0.020583903, 0.020674931, 0.020762931, 0.020852931, 0.020936972, 0.021028...</msg>
<status status="PASS" starttime="20201112 09:54:19.229" endtime="20201112 09:54:19.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.246" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 09:54:19.245" endtime="20201112 09:54:19.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.248" level="INFO">VALUE: [8.14170000000003e-05, 7.236099999999995e-05, 7.204200000000133e-05, 7.248600000000008e-05, 7.26110000000002e-05, 7.240299999999866e-05, 7.243100000000127e-05, 7.238899999999909e-05, 7.247299999999998e-05, 7.243100000000127e-05, 7.213899999999884e-05, 7.24309999999978e-05, 7.297300000000048e-05, 7.211100000000317e-05, 7.288899999999959e-05, 7.249999999999965e-05, 7.25690000000015e-05, 7.288899999999959e-05, 7.268099999999805e-05, 7.304199999999886e-05, 7.254199999999836e-05, 7.280600000000165e-05, 7.287500000000002e-05, 7.277799999999904e-05, 7.272300000000023e-05, 7.262499999999977e-05, 7.216700000000145e-05, 7.301399999999972e-05, 7.222200000000026e-05, 7.284700000000088e-05, 7.297200000000101e-05, 7.304199999999886e-05, 7.22499999999994e-05, 7.288899999999959e-05, 7.209799999999961e-05, 7.219500000000059e-05, 7.240300000000213e-05, 7.227699999999906e-05, 7.272199999999729e-05, 7.209799999999961e-05, 7.230500000000167e-05, 7.290299999999916e-05, 7.219400000000112e-05, 7.290199999999969e-05, 7.281900000000174e-05, 7.290199999999969e-05, 7.268000000000205e-05, 7.216700000000145e-05, 7.284700000000088e-05, 7.231899999999777e-05]</msg>
<status status="PASS" starttime="20201112 09:54:19.247" endtime="20201112 09:54:19.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.242" endtime="20201112 09:54:19.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.252" endtime="20201112 09:54:19.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:19.255" endtime="20201112 09:54:19.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.254" endtime="20201112 09:54:19.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.250" endtime="20201112 09:54:19.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.883" endtime="20201112 09:54:19.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.882" endtime="20201112 09:54:19.276"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.285" endtime="20201112 09:54:19.305"></status>
</kw>
<msg timestamp="20201112 09:54:19.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.284" endtime="20201112 09:54:19.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.306" endtime="20201112 09:54:19.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.309" endtime="20201112 09:54:19.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.281" endtime="20201112 09:54:19.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.279" endtime="20201112 09:54:19.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.319" endtime="20201112 09:54:19.604"></status>
</kw>
<msg timestamp="20201112 09:54:19.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019812278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.317" endtime="20201112 09:54:19.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019812278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.608" endtime="20201112 09:54:19.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.616" endtime="20201112 09:54:19.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.314" endtime="20201112 09:54:19.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.313" endtime="20201112 09:54:19.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:19.623" level="INFO">${RESULT} = [{'time': 0.019894569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.22910000000017e-05, 'source_diff': 8.22910000000017e-05}, {'time': 0.019980889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:19.620" endtime="20201112 09:54:19.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:19.636" level="INFO">${ACCURACY} = {'time': [0.019894569, 0.019980889, 0.020072861, 0.020160889, 0.020251903, 0.020337889, 0.020427917, 0.020513903, 0.020605931, 0.020692972, 0.020782972, 0.020872014, 0.020962944, 0.021051958, 0.021142...</msg>
<status status="PASS" starttime="20201112 09:54:19.624" endtime="20201112 09:54:19.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.641" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 09:54:19.640" endtime="20201112 09:54:19.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.643" level="INFO">VALUE: [8.22910000000017e-05, 7.387500000000102e-05, 7.315299999999941e-05, 7.302800000000276e-05, 7.309700000000113e-05, 7.336100000000095e-05, 7.373600000000133e-05, 7.345900000000141e-05, 7.341699999999923e-05, 7.337500000000052e-05, 7.315299999999941e-05, 7.344500000000184e-05, 7.354099999999988e-05, 7.395799999999897e-05, 7.361099999999773e-05, 7.323600000000083e-05, 7.323600000000083e-05, 7.390300000000016e-05, 7.383299999999884e-05, 7.383300000000231e-05, 7.366699999999948e-05, 7.383400000000179e-05, 7.391699999999973e-05, 7.337499999999705e-05, 7.380599999999918e-05, 7.354099999999988e-05, 7.323600000000083e-05, 7.352699999999684e-05, 7.319399999999865e-05, 7.351399999999675e-05, 7.304200000000233e-05, 7.319399999999865e-05, 7.347199999999804e-05, 7.330599999999868e-05, 7.304200000000233e-05, 7.401400000000072e-05, 7.304199999999886e-05, 7.351400000000022e-05, 7.351300000000074e-05, 7.35699999999985e-05, 7.351400000000022e-05, 7.320799999999822e-05, 7.36249999999973e-05, 7.337500000000052e-05, 7.365299999999991e-05, 7.365299999999991e-05, 7.306899999999852e-05, 7.376400000000047e-05, 7.354099999999988e-05, 7.320799999999822e-05]</msg>
<status status="PASS" starttime="20201112 09:54:19.642" endtime="20201112 09:54:19.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.637" endtime="20201112 09:54:19.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.647" endtime="20201112 09:54:19.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:19.650" endtime="20201112 09:54:19.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.649" endtime="20201112 09:54:19.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.645" endtime="20201112 09:54:19.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.277" endtime="20201112 09:54:19.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.277" endtime="20201112 09:54:19.671"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.680" endtime="20201112 09:54:19.700"></status>
</kw>
<msg timestamp="20201112 09:54:19.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.678" endtime="20201112 09:54:19.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.701" endtime="20201112 09:54:19.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.704" endtime="20201112 09:54:19.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.676" endtime="20201112 09:54:19.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.674" endtime="20201112 09:54:19.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.714" endtime="20201112 09:54:20.000"></status>
</kw>
<msg timestamp="20201112 09:54:20.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019617264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.712" endtime="20201112 09:54:20.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019617264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.004" endtime="20201112 09:54:20.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.012" endtime="20201112 09:54:20.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.710" endtime="20201112 09:54:20.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.708" endtime="20201112 09:54:20.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:20.019" level="INFO">${RESULT} = [{'time': 0.019617264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.327799999999913e-05, 'source_diff': 8.327799999999913e-05}, {'time': 0.019705542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:20.016" endtime="20201112 09:54:20.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:20.032" level="INFO">${ACCURACY} = {'time': [0.019617264, 0.019705542, 0.019796569, 0.019884569, 0.019977569, 0.020064597, 0.020157583, 0.020247597, 0.020339597, 0.020426681, 0.020517611, 0.020604653, 0.020696639, 0.020784653, 0.020877...</msg>
<status status="PASS" starttime="20201112 09:54:20.020" endtime="20201112 09:54:20.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.037" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 09:54:20.036" endtime="20201112 09:54:20.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.039" level="INFO">VALUE: [8.327799999999913e-05, 7.448599999999861e-05, 7.456900000000002e-05, 7.469400000000015e-05, 7.409700000000213e-05, 7.412500000000127e-05, 7.468000000000058e-05, 7.463899999999787e-05, 7.470799999999972e-05, 7.498699999999858e-05, 7.402800000000029e-05, 7.473599999999886e-05, 7.473599999999886e-05, 7.480600000000018e-05, 7.495899999999944e-05, 7.45699999999995e-05, 7.444500000000284e-05, 7.445899999999894e-05, 7.466600000000101e-05, 7.499999999999868e-05, 7.47500000000019e-05, 7.463900000000134e-05, 7.44439999999999e-05, 7.416699999999998e-05, 7.469400000000015e-05, 7.487499999999855e-05, 7.495799999999997e-05, 7.500000000000215e-05, 7.448599999999861e-05, 7.454200000000036e-05, 7.490300000000116e-05, 7.461099999999873e-05, 7.447199999999904e-05, 7.451400000000122e-05, 7.43050000000002e-05, 7.409699999999866e-05, 7.405499999999995e-05, 7.416600000000051e-05, 7.490300000000116e-05, 7.424999999999793e-05, 7.479200000000061e-05, 7.44309999999998e-05, 7.480600000000018e-05, 7.497299999999901e-05, 7.429200000000011e-05, 7.433400000000229e-05, 7.46110000000022e-05, 7.408400000000204e-05, 7.404199999999986e-05, 7.497199999999954e-05]</msg>
<status status="PASS" starttime="20201112 09:54:20.038" endtime="20201112 09:54:20.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.033" endtime="20201112 09:54:20.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.046" endtime="20201112 09:54:20.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:20.050" endtime="20201112 09:54:20.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.048" endtime="20201112 09:54:20.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.045" endtime="20201112 09:54:20.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.672" endtime="20201112 09:54:20.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.672" endtime="20201112 09:54:20.071"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.079" endtime="20201112 09:54:20.099"></status>
</kw>
<msg timestamp="20201112 09:54:20.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.078" endtime="20201112 09:54:20.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.101" endtime="20201112 09:54:20.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.103" endtime="20201112 09:54:20.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.075" endtime="20201112 09:54:20.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.073" endtime="20201112 09:54:20.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.113" endtime="20201112 09:54:20.398"></status>
</kw>
<msg timestamp="20201112 09:54:20.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:20.112" endtime="20201112 09:54:20.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:20.403" endtime="20201112 09:54:20.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.411" endtime="20201112 09:54:20.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.109" endtime="20201112 09:54:20.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.107" endtime="20201112 09:54:20.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:20.418" level="INFO">${RESULT} = [{'time': 0.019810306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.430599999999927e-05, 'source_diff': 8.430599999999927e-05}, {'time': 0.019898597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:20.414" endtime="20201112 09:54:20.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:20.432" level="INFO">${ACCURACY} = {'time': [0.019810306, 0.019898597, 0.019993611, 0.020082611, 0.020174653, 0.020264639, 0.020359653, 0.020448667, 0.020541653, 0.020630667, 0.020723667, 0.020811694, 0.020905694, 0.020994736, 0.021087...</msg>
<status status="PASS" starttime="20201112 09:54:20.419" endtime="20201112 09:54:20.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.437" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 09:54:20.436" endtime="20201112 09:54:20.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.439" level="INFO">VALUE: [8.430599999999927e-05, 7.587499999999955e-05, 7.516700000000098e-05, 7.574999999999943e-05, 7.505600000000043e-05, 7.565300000000191e-05, 7.504199999999739e-05, 7.595900000000044e-05, 7.527800000000154e-05, 7.570899999999672e-05, 7.504200000000086e-05, 7.536099999999948e-05, 7.554099999999841e-05, 7.523599999999936e-05, 7.551399999999875e-05, 7.590300000000216e-05, 7.572200000000029e-05, 7.573599999999986e-05, 7.531900000000077e-05, 7.555600000000093e-05, 7.54029999999982e-05, 7.534800000000286e-05, 7.552799999999832e-05, 7.534799999999939e-05, 7.570900000000019e-05, 7.595900000000044e-05, 7.59029999999987e-05, 7.52639999999985e-05, 7.547200000000004e-05, 7.555500000000145e-05, 7.548599999999961e-05, 7.577799999999857e-05, 7.584799999999989e-05, 7.601399999999925e-05, 7.501399999999825e-05, 7.594399999999793e-05, 7.536099999999948e-05, 7.520899999999969e-05, 7.536099999999948e-05, 7.505600000000043e-05, 7.573699999999933e-05, 7.537499999999905e-05, 7.529100000000163e-05, 7.584700000000041e-05, 7.552699999999885e-05, 7.559700000000016e-05, 7.572299999999976e-05, 7.570800000000072e-05, 7.520800000000022e-05, 7.547200000000004e-05]</msg>
<status status="PASS" starttime="20201112 09:54:20.438" endtime="20201112 09:54:20.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.433" endtime="20201112 09:54:20.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.443" endtime="20201112 09:54:20.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:20.446" endtime="20201112 09:54:20.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.444" endtime="20201112 09:54:20.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.441" endtime="20201112 09:54:20.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.072" endtime="20201112 09:54:20.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.071" endtime="20201112 09:54:20.467"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.475" endtime="20201112 09:54:20.496"></status>
</kw>
<msg timestamp="20201112 09:54:20.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.474" endtime="20201112 09:54:20.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.497" endtime="20201112 09:54:20.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.500" endtime="20201112 09:54:20.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.471" endtime="20201112 09:54:20.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.469" endtime="20201112 09:54:20.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.510" endtime="20201112 09:54:20.796"></status>
</kw>
<msg timestamp="20201112 09:54:20.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019574944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.508" endtime="20201112 09:54:20.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019574944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.800" endtime="20201112 09:54:20.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.808" endtime="20201112 09:54:20.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.506" endtime="20201112 09:54:20.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.504" endtime="20201112 09:54:20.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:20.815" level="INFO">${RESULT} = [{'time': 0.019574944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.547199999999963e-05, 'source_diff': 8.547199999999963e-05}, {'time': 0.019667208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:20.812" endtime="20201112 09:54:20.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:20.828" level="INFO">${ACCURACY} = {'time': [0.019574944, 0.019667208, 0.019761222, 0.019852236, 0.01994825, 0.02003925, 0.02013525, 0.020224278, 0.020319278, 0.020410264, 0.020503347, 0.020592292, 0.020686306, 0.020777319, 0.020873306...</msg>
<status status="PASS" starttime="20201112 09:54:20.816" endtime="20201112 09:54:20.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.833" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 09:54:20.832" endtime="20201112 09:54:20.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.835" level="INFO">VALUE: [8.547199999999963e-05, 7.692999999999936e-05, 7.616599999999904e-05, 7.677799999999957e-05, 7.704199999999939e-05, 7.695800000000197e-05, 7.677799999999957e-05, 7.65969999999977e-05, 7.654199999999889e-05, 7.624999999999993e-05, 7.691600000000326e-05, 7.626400000000297e-05, 7.686200000000046e-05, 7.70129999999973e-05, 7.665300000000291e-05, 7.658299999999812e-05, 7.697199999999807e-05, 7.615299999999894e-05, 7.616699999999851e-05, 7.611100000000023e-05, 7.632000000000125e-05, 7.675000000000043e-05, 7.695800000000197e-05, 7.651399999999975e-05, 7.65969999999977e-05, 7.688900000000012e-05, 7.652699999999985e-05, 7.60839999999971e-05, 7.698600000000111e-05, 7.631900000000177e-05, 7.616599999999904e-05, 7.683300000000184e-05, 7.65969999999977e-05, 7.670799999999825e-05, 7.638899999999962e-05, 7.675000000000043e-05, 7.606900000000152e-05, 7.695900000000144e-05, 7.666700000000248e-05, 7.700000000000068e-05, 7.624999999999993e-05, 7.636199999999996e-05, 7.680599999999871e-05, 7.68189999999988e-05, 7.620800000000122e-05, 7.666599999999954e-05, 7.659700000000116e-05, 7.64029999999992e-05, 7.606899999999805e-05, 7.638899999999962e-05]</msg>
<status status="PASS" starttime="20201112 09:54:20.834" endtime="20201112 09:54:20.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.829" endtime="20201112 09:54:20.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.839" endtime="20201112 09:54:20.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:20.842" endtime="20201112 09:54:20.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.841" endtime="20201112 09:54:20.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.837" endtime="20201112 09:54:20.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.468" endtime="20201112 09:54:20.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.467" endtime="20201112 09:54:20.864"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.873" endtime="20201112 09:54:20.892"></status>
</kw>
<msg timestamp="20201112 09:54:20.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.871" endtime="20201112 09:54:20.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.894" endtime="20201112 09:54:20.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.896" endtime="20201112 09:54:20.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.869" endtime="20201112 09:54:20.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.866" endtime="20201112 09:54:20.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.906" endtime="20201112 09:54:21.191"></status>
</kw>
<msg timestamp="20201112 09:54:21.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020579472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020665431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.905" endtime="20201112 09:54:21.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020579472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020665431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.195" endtime="20201112 09:54:21.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.204" endtime="20201112 09:54:21.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.902" endtime="20201112 09:54:21.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.900" endtime="20201112 09:54:21.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.210" level="INFO">${RESULT} = [{'time': 0.020665431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.595900000000004e-05, 'source_diff': 8.595900000000004e-05}, {'time': 0.020757722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:21.207" endtime="20201112 09:54:21.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:21.223" level="INFO">${ACCURACY} = {'time': [0.020665431, 0.020757722, 0.02085175, 0.020941736, 0.021035736, 0.021126764, 0.021221778, 0.021311792, 0.021405792, 0.021496778, 0.021590806, 0.021680792, 0.021775806, 0.021867833, 0.0219648...</msg>
<status status="PASS" starttime="20201112 09:54:21.211" endtime="20201112 09:54:21.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.228" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 09:54:21.227" endtime="20201112 09:54:21.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.230" level="INFO">VALUE: [8.595900000000004e-05, 7.70969999999982e-05, 7.774999999999796e-05, 7.747199999999857e-05, 7.727800000000007e-05, 7.711099999999776e-05, 7.723600000000136e-05, 7.723599999999789e-05, 7.793099999999983e-05, 7.770900000000219e-05, 7.754199999999989e-05, 7.763900000000087e-05, 7.727800000000007e-05, 7.723600000000136e-05, 7.770799999999925e-05, 7.791599999999732e-05, 7.741600000000029e-05, 7.711099999999776e-05, 7.747200000000204e-05, 7.75830000000026e-05, 7.711100000000123e-05, 7.754199999999989e-05, 7.798600000000211e-05, 7.716699999999951e-05, 7.79030000000007e-05, 7.776399999999753e-05, 7.706899999999905e-05, 7.786200000000146e-05, 7.755499999999999e-05, 7.78189999999998e-05, 7.713900000000037e-05, 7.776399999999753e-05, 7.715299999999994e-05, 7.715299999999994e-05, 7.794399999999993e-05, 7.79169999999968e-05, 7.722199999999832e-05, 7.77229999999983e-05, 7.747200000000204e-05, 7.747299999999804e-05, 7.72229999999978e-05, 7.72770000000006e-05, 7.779100000000067e-05, 7.758299999999912e-05, 7.736100000000148e-05, 7.756899999999955e-05, 7.713900000000037e-05, 7.70969999999982e-05, 7.71250000000008e-05, 7.783299999999937e-05]</msg>
<status status="PASS" starttime="20201112 09:54:21.229" endtime="20201112 09:54:21.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.224" endtime="20201112 09:54:21.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.234" endtime="20201112 09:54:21.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.237" endtime="20201112 09:54:21.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.236" endtime="20201112 09:54:21.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.232" endtime="20201112 09:54:21.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.865" endtime="20201112 09:54:21.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.864" endtime="20201112 09:54:21.258"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.267" endtime="20201112 09:54:21.286"></status>
</kw>
<msg timestamp="20201112 09:54:21.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.265" endtime="20201112 09:54:21.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.288" endtime="20201112 09:54:21.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.290" endtime="20201112 09:54:21.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.263" endtime="20201112 09:54:21.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.261" endtime="20201112 09:54:21.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.300" endtime="20201112 09:54:21.586"></status>
</kw>
<msg timestamp="20201112 09:54:21.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.299" endtime="20201112 09:54:21.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.590" endtime="20201112 09:54:21.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.599" endtime="20201112 09:54:21.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.296" endtime="20201112 09:54:21.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.294" endtime="20201112 09:54:21.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.605" level="INFO">${RESULT} = [{'time': 0.019613931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.744500000000197e-05, 'source_diff': 8.744500000000197e-05}, {'time': 0.019707222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:21.602" endtime="20201112 09:54:21.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:21.618" level="INFO">${ACCURACY} = {'time': [0.019613931, 0.019707222, 0.019803264, 0.019894222, 0.019991236, 0.02008525, 0.020181264, 0.020273264, 0.020371278, 0.020462306, 0.020558292, 0.020652306, 0.020750319, 0.020842319, 0.0209373...</msg>
<status status="PASS" starttime="20201112 09:54:21.606" endtime="20201112 09:54:21.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.623" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 09:54:21.622" endtime="20201112 09:54:21.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.625" level="INFO">VALUE: [8.744500000000197e-05, 7.893000000000136e-05, 7.808299999999962e-05, 7.80969999999992e-05, 7.861099999999926e-05, 7.856900000000056e-05, 7.854200000000089e-05, 7.882000000000028e-05, 7.815300000000094e-05, 7.829200000000064e-05, 7.897299999999954e-05, 7.865299999999797e-05, 7.847199999999957e-05, 7.850000000000218e-05, 7.855499999999752e-05, 7.854199999999742e-05, 7.884699999999994e-05, 7.806900000000006e-05, 7.829199999999717e-05, 7.847199999999957e-05, 7.850000000000218e-05, 7.905599999999749e-05, 7.897200000000007e-05, 7.82229999999988e-05, 7.818100000000008e-05, 7.857000000000003e-05, 7.837499999999858e-05, 7.870799999999678e-05, 7.851300000000228e-05, 7.822199999999932e-05, 7.86389999999984e-05, 7.869399999999721e-05, 7.838899999999815e-05, 7.8458e-05, 7.87779999999981e-05, 7.833299999999987e-05, 7.868100000000058e-05, 7.884800000000289e-05, 7.870899999999972e-05, 7.808299999999962e-05, 7.893099999999736e-05, 7.85129999999988e-05, 7.837499999999858e-05, 7.89580000000005e-05, 7.884699999999994e-05, 7.870800000000025e-05, 7.851400000000175e-05, 7.851400000000175e-05, 7.834699999999944e-05, 7.883300000000037e-05]</msg>
<status status="PASS" starttime="20201112 09:54:21.624" endtime="20201112 09:54:21.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.619" endtime="20201112 09:54:21.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.629" endtime="20201112 09:54:21.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.632" endtime="20201112 09:54:21.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.631" endtime="20201112 09:54:21.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.627" endtime="20201112 09:54:21.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.259" endtime="20201112 09:54:21.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.259" endtime="20201112 09:54:21.653"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.662" endtime="20201112 09:54:21.681"></status>
</kw>
<msg timestamp="20201112 09:54:21.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.660" endtime="20201112 09:54:21.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.683" endtime="20201112 09:54:21.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.685" endtime="20201112 09:54:21.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.658" endtime="20201112 09:54:21.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.656" endtime="20201112 09:54:21.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.695" endtime="20201112 09:54:21.980"></status>
</kw>
<msg timestamp="20201112 09:54:21.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.694" endtime="20201112 09:54:21.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.985" endtime="20201112 09:54:21.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.993" endtime="20201112 09:54:21.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.691" endtime="20201112 09:54:21.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.690" endtime="20201112 09:54:21.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:22.000" level="INFO">${RESULT} = [{'time': 0.019703264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.84860000000022e-05, 'source_diff': 8.84860000000022e-05}, {'time': 0.019796542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:21.996" endtime="20201112 09:54:22.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:22.014" level="INFO">${ACCURACY} = {'time': [0.019703264, 0.019796542, 0.019894556, 0.019986556, 0.020084569, 0.020175583, 0.020272653, 0.020365597, 0.020461597, 0.020555611, 0.020651611, 0.020743653, 0.020839639, 0.020934653, 0.021032...</msg>
<status status="PASS" starttime="20201112 09:54:22.001" endtime="20201112 09:54:22.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.019" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 09:54:22.018" endtime="20201112 09:54:22.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.021" level="INFO">VALUE: [8.84860000000022e-05, 7.959800000000017e-05, 7.923699999999936e-05, 7.945900000000047e-05, 7.986100000000051e-05, 7.9151999999999e-05, 7.99030000000027e-05, 7.941599999999882e-05, 7.916600000000204e-05, 7.944400000000143e-05, 7.952799999999885e-05, 7.961100000000026e-05, 7.941700000000176e-05, 7.945900000000047e-05, 7.972199999999735e-05, 7.990299999999922e-05, 7.947300000000004e-05, 8.000000000000021e-05, 7.895899999999997e-05, 7.924999999999946e-05, 7.90970000000002e-05, 7.97779999999991e-05, 7.961100000000026e-05, 7.919399999999771e-05, 7.936100000000001e-05, 7.919400000000118e-05, 7.943099999999786e-05, 7.90970000000002e-05, 7.977699999999963e-05, 7.912499999999933e-05, 7.987500000000008e-05, 7.9458999999997e-05, 7.980499999999877e-05, 7.966599999999907e-05, 7.91380000000029e-05, 8.005499999999902e-05, 7.934700000000044e-05, 7.916699999999804e-05, 7.908300000000063e-05, 7.983300000000138e-05, 7.937499999999958e-05, 7.920800000000075e-05, 7.922199999999685e-05, 7.902800000000182e-05, 7.955499999999852e-05, 7.904199999999792e-05, 7.904200000000139e-05, 8.002699999999988e-05, 7.902699999999888e-05, 7.952799999999885e-05]</msg>
<status status="PASS" starttime="20201112 09:54:22.020" endtime="20201112 09:54:22.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.015" endtime="20201112 09:54:22.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.025" endtime="20201112 09:54:22.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:22.029" endtime="20201112 09:54:22.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.027" endtime="20201112 09:54:22.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.023" endtime="20201112 09:54:22.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.654" endtime="20201112 09:54:22.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.654" endtime="20201112 09:54:22.050"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.058" endtime="20201112 09:54:22.078"></status>
</kw>
<msg timestamp="20201112 09:54:22.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.056" endtime="20201112 09:54:22.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.079" endtime="20201112 09:54:22.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.082" endtime="20201112 09:54:22.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.054" endtime="20201112 09:54:22.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.052" endtime="20201112 09:54:22.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.092" endtime="20201112 09:54:22.378"></status>
</kw>
<msg timestamp="20201112 09:54:22.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.091" endtime="20201112 09:54:22.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.382" endtime="20201112 09:54:22.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.390" endtime="20201112 09:54:22.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.088" endtime="20201112 09:54:22.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.086" endtime="20201112 09:54:22.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:22.397" level="INFO">${RESULT} = [{'time': 0.019672292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89730000000026e-05, 'source_diff': 8.89730000000026e-05}, {'time': 0.019765653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:22.394" endtime="20201112 09:54:22.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:22.410" level="INFO">${ACCURACY} = {'time': [0.019672292, 0.019765653, 0.019865583, 0.019960625, 0.020057625, 0.020149653, 0.020246639, 0.020341639, 0.020438639, 0.020533681, 0.020630667, 0.020725681, 0.020824694, 0.020920694, 0.021019...</msg>
<status status="PASS" starttime="20201112 09:54:22.398" endtime="20201112 09:54:22.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.415" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 09:54:22.414" endtime="20201112 09:54:22.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.417" level="INFO">VALUE: [8.89730000000026e-05, 8.037500000000058e-05, 8.058299999999866e-05, 8.036099999999755e-05, 8.059699999999823e-05, 8.023600000000089e-05, 8.047200000000157e-05, 8.008300000000163e-05, 8.00970000000012e-05, 8.029200000000264e-05, 8.05979999999977e-05, 8.054199999999942e-05, 8.00970000000012e-05, 8.10130000000013e-05, 8.00970000000012e-05, 8.040200000000025e-05, 8.073600000000139e-05, 8.052799999999985e-05, 8.059699999999823e-05, 8.022199999999785e-05, 8.005600000000196e-05, 8.099999999999774e-05, 8.043099999999886e-05, 8.105600000000296e-05, 8.072299999999782e-05, 8.050000000000071e-05, 8.048700000000061e-05, 8.047200000000157e-05, 8.092999999999989e-05, 8.022200000000132e-05, 8.087499999999762e-05, 8.058299999999866e-05, 8.086100000000151e-05, 8.058300000000213e-05, 8.00970000000012e-05, 8.033399999999788e-05, 8.023600000000089e-05, 8.02779999999996e-05, 8.023599999999742e-05, 8.101400000000078e-05, 8.072199999999835e-05, 8.052799999999985e-05, 8.067999999999964e-05, 8.015299999999947e-05, 8.055499999999952e-05, 8.02779999999996e-05, 8.04719999999981e-05, 8.059699999999823e-05, 8.03329999999984e-05, 8.030600000000221e-05]</msg>
<status status="PASS" starttime="20201112 09:54:22.416" endtime="20201112 09:54:22.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.411" endtime="20201112 09:54:22.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.421" endtime="20201112 09:54:22.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:22.424" endtime="20201112 09:54:22.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.423" endtime="20201112 09:54:22.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.419" endtime="20201112 09:54:22.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.050" endtime="20201112 09:54:22.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.050" endtime="20201112 09:54:22.445"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.453" endtime="20201112 09:54:22.473"></status>
</kw>
<msg timestamp="20201112 09:54:22.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.452" endtime="20201112 09:54:22.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.475" endtime="20201112 09:54:22.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.477" endtime="20201112 09:54:22.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.449" endtime="20201112 09:54:22.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.447" endtime="20201112 09:54:22.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.487" endtime="20201112 09:54:22.773"></status>
</kw>
<msg timestamp="20201112 09:54:22.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:22.486" endtime="20201112 09:54:22.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:22.777" endtime="20201112 09:54:22.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.786" endtime="20201112 09:54:22.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.483" endtime="20201112 09:54:22.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.481" endtime="20201112 09:54:22.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:22.792" level="INFO">${RESULT} = [{'time': 0.01969575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.061100000000086e-05, 'source_diff': 9.061100000000086e-05}, {'time': 0.019792056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:22.789" endtime="20201112 09:54:22.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:22.806" level="INFO">${ACCURACY} = {'time': [0.01969575, 0.019792056, 0.019892069, 0.019988056, 0.020088069, 0.020184097, 0.020284083, 0.020380097, 0.020479153, 0.020573111, 0.020672111, 0.020766125, 0.020866181, 0.020962153, 0.0210601...</msg>
<status status="PASS" starttime="20201112 09:54:22.793" endtime="20201112 09:54:22.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.810" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 09:54:22.809" endtime="20201112 09:54:22.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.813" level="INFO">VALUE: [9.061100000000086e-05, 8.143099999999986e-05, 8.174999999999849e-05, 8.134800000000192e-05, 8.170799999999978e-05, 8.200000000000221e-05, 8.152700000000138e-05, 8.145799999999953e-05, 8.193100000000036e-05, 8.190300000000122e-05, 8.172199999999935e-05, 8.151400000000128e-05, 8.176400000000153e-05, 8.158399999999913e-05, 8.102800000000035e-05, 8.116600000000057e-05, 8.152799999999738e-05, 8.158399999999913e-05, 8.136099999999855e-05, 8.1152000000001e-05, 8.138899999999769e-05, 8.145799999999953e-05, 8.136099999999855e-05, 8.172199999999935e-05, 8.113899999999744e-05, 8.201400000000178e-05, 8.105599999999949e-05, 8.199999999999874e-05, 8.168100000000011e-05, 8.166600000000107e-05, 8.166700000000054e-05, 8.19589999999995e-05, 8.184700000000295e-05, 8.16520000000015e-05, 8.13329999999994e-05, 8.144399999999996e-05, 8.116700000000004e-05, 8.137499999999812e-05, 8.172199999999935e-05, 8.167999999999717e-05, 8.134699999999898e-05, 8.184700000000295e-05, 8.152800000000085e-05, 8.152800000000085e-05, 8.17230000000023e-05, 8.136099999999855e-05, 8.198599999999917e-05, 8.124999999999799e-05, 8.134699999999898e-05, 8.136099999999855e-05]</msg>
<status status="PASS" starttime="20201112 09:54:22.811" endtime="20201112 09:54:22.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.807" endtime="20201112 09:54:22.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.816" endtime="20201112 09:54:22.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:22.820" endtime="20201112 09:54:22.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.818" endtime="20201112 09:54:22.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.815" endtime="20201112 09:54:22.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.446" endtime="20201112 09:54:22.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.445" endtime="20201112 09:54:22.840"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.849" endtime="20201112 09:54:22.869"></status>
</kw>
<msg timestamp="20201112 09:54:22.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.847" endtime="20201112 09:54:22.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.870" endtime="20201112 09:54:22.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.872" endtime="20201112 09:54:22.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.845" endtime="20201112 09:54:22.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.843" endtime="20201112 09:54:22.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.882" endtime="20201112 09:54:23.169"></status>
</kw>
<msg timestamp="20201112 09:54:23.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019676194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.881" endtime="20201112 09:54:23.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019676194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.173" endtime="20201112 09:54:23.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.181" endtime="20201112 09:54:23.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.878" endtime="20201112 09:54:23.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.877" endtime="20201112 09:54:23.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.187" level="INFO">${RESULT} = [{'time': 0.019676194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.147200000000216e-05, 'source_diff': 9.147200000000216e-05}, {'time': 0.019771486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:23.184" endtime="20201112 09:54:23.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:23.201" level="INFO">${ACCURACY} = {'time': [0.019676194, 0.019771486, 0.019871486, 0.019966486, 0.020067514, 0.020165556, 0.020265569, 0.020361528, 0.020463542, 0.020559556, 0.020658542, 0.020755583, 0.020856583, 0.020952583, 0.021053...</msg>
<status status="PASS" starttime="20201112 09:54:23.189" endtime="20201112 09:54:23.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.205" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 09:54:23.204" endtime="20201112 09:54:23.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.208" level="INFO">VALUE: [9.147200000000216e-05, 8.229200000000117e-05, 8.279200000000167e-05, 8.254199999999795e-05, 8.24170000000013e-05, 8.276400000000253e-05, 8.241600000000182e-05, 8.220899999999975e-05, 8.255600000000099e-05, 8.240299999999826e-05, 8.218099999999715e-05, 8.262499999999937e-05, 8.275000000000296e-05, 8.240199999999878e-05, 8.216600000000157e-05, 8.215300000000147e-05, 8.254199999999795e-05, 8.262499999999937e-05, 8.274999999999949e-05, 8.213899999999844e-05, 8.299999999999974e-05, 8.207000000000006e-05, 8.208399999999963e-05, 8.241599999999835e-05, 8.241599999999835e-05, 8.252699999999891e-05, 8.208300000000016e-05, 8.26659999999986e-05, 8.240299999999826e-05, 8.240200000000225e-05, 8.293000000000189e-05, 8.230500000000127e-05, 8.255600000000099e-05, 8.258300000000066e-05, 8.273599999999992e-05, 8.208399999999963e-05, 8.29590000000005e-05, 8.267999999999817e-05, 8.227799999999813e-05, 8.267999999999817e-05, 8.204100000000145e-05, 8.240200000000225e-05, 8.276400000000253e-05, 8.23330000000004e-05, 8.290299999999876e-05, 8.284700000000048e-05, 8.248599999999967e-05, 8.286100000000005e-05, 8.277799999999863e-05, 8.209699999999973e-05]</msg>
<status status="PASS" starttime="20201112 09:54:23.206" endtime="20201112 09:54:23.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.202" endtime="20201112 09:54:23.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.211" endtime="20201112 09:54:23.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.215" endtime="20201112 09:54:23.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.213" endtime="20201112 09:54:23.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.210" endtime="20201112 09:54:23.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.841" endtime="20201112 09:54:23.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.841" endtime="20201112 09:54:23.235"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.244" endtime="20201112 09:54:23.264"></status>
</kw>
<msg timestamp="20201112 09:54:23.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.243" endtime="20201112 09:54:23.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.265" endtime="20201112 09:54:23.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.268" endtime="20201112 09:54:23.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.240" endtime="20201112 09:54:23.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.238" endtime="20201112 09:54:23.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.278" endtime="20201112 09:54:23.563"></status>
</kw>
<msg timestamp="20201112 09:54:23.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.276" endtime="20201112 09:54:23.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.567" endtime="20201112 09:54:23.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.575" endtime="20201112 09:54:23.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.274" endtime="20201112 09:54:23.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.272" endtime="20201112 09:54:23.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.582" level="INFO">${RESULT} = [{'time': 0.019894778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.184699999999907e-05, 'source_diff': 9.184699999999907e-05}, {'time': 0.019994083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:23.579" endtime="20201112 09:54:23.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:23.596" level="INFO">${ACCURACY} = {'time': [0.019894778, 0.019994083, 0.020094069, 0.020192069, 0.020292097, 0.020387083, 0.020490097, 0.020588125, 0.020691125, 0.020786125, 0.020889139, 0.020987139, 0.021088167, 0.021184181, 0.021284...</msg>
<status status="PASS" starttime="20201112 09:54:23.583" endtime="20201112 09:54:23.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.601" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 09:54:23.600" endtime="20201112 09:54:23.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.603" level="INFO">VALUE: [9.184699999999907e-05, 8.373600000000092e-05, 8.336100000000055e-05, 8.338800000000021e-05, 8.312499999999987e-05, 8.319400000000171e-05, 8.313899999999944e-05, 8.390299999999976e-05, 8.34720000000011e-05, 8.326399999999956e-05, 8.345800000000153e-05, 8.374999999999702e-05, 8.323600000000042e-05, 8.388900000000019e-05, 8.363899999999994e-05, 8.402700000000041e-05, 8.377700000000016e-05, 8.322200000000085e-05, 8.350000000000024e-05, 8.36110000000008e-05, 8.343100000000186e-05, 8.31390000000029e-05, 8.3152999999999e-05, 8.326399999999956e-05, 8.308300000000116e-05, 8.305600000000149e-05, 8.3459000000001e-05, 8.391599999999985e-05, 8.366699999999908e-05, 8.348600000000067e-05, 8.355499999999905e-05, 8.384700000000148e-05, 8.327699999999966e-05, 8.304200000000192e-05, 8.344400000000196e-05, 8.322200000000085e-05, 8.397199999999813e-05, 8.309700000000073e-05, 8.323600000000042e-05, 8.36529999999995e-05, 8.30980000000002e-05, 8.363899999999994e-05, 8.334700000000098e-05, 8.381999999999834e-05, 8.31110000000003e-05, 8.312499999999987e-05, 8.349999999999677e-05, 8.327799999999913e-05, 8.305600000000149e-05, 8.358299999999819e-05]</msg>
<status status="PASS" starttime="20201112 09:54:23.602" endtime="20201112 09:54:23.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.597" endtime="20201112 09:54:23.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.607" endtime="20201112 09:54:23.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.610" endtime="20201112 09:54:23.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.609" endtime="20201112 09:54:23.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.605" endtime="20201112 09:54:23.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.236" endtime="20201112 09:54:23.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.236" endtime="20201112 09:54:23.631"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.640" endtime="20201112 09:54:23.660"></status>
</kw>
<msg timestamp="20201112 09:54:23.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.638" endtime="20201112 09:54:23.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.662" endtime="20201112 09:54:23.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.664" endtime="20201112 09:54:23.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.636" endtime="20201112 09:54:23.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.634" endtime="20201112 09:54:23.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.674" endtime="20201112 09:54:23.959"></status>
</kw>
<msg timestamp="20201112 09:54:23.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019866528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:23.673" endtime="20201112 09:54:23.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019866528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:23.963" endtime="20201112 09:54:23.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.971" endtime="20201112 09:54:23.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.670" endtime="20201112 09:54:23.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.669" endtime="20201112 09:54:23.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.977" level="INFO">${RESULT} = [{'time': 0.019866528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.302800000000194e-05, 'source_diff': 9.302800000000194e-05}, {'time': 0.019963806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:23.974" endtime="20201112 09:54:23.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:23.991" level="INFO">${ACCURACY} = {'time': [0.019866528, 0.019963806, 0.020066806, 0.020163833, 0.020265833, 0.020362861, 0.020466847, 0.020562861, 0.020666875, 0.020765875, 0.020867889, 0.020966917, 0.021067903, 0.021165931, 0.021268...</msg>
<status status="PASS" starttime="20201112 09:54:23.978" endtime="20201112 09:54:23.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.995" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 09:54:23.994" endtime="20201112 09:54:23.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.998" level="INFO">VALUE: [9.302800000000194e-05, 8.455599999999952e-05, 8.488900000000119e-05, 8.436099999999808e-05, 8.427700000000066e-05, 8.49859999999987e-05, 8.451400000000081e-05, 8.4153e-05, 8.476400000000106e-05, 8.495799999999956e-05, 8.408300000000216e-05, 8.486100000000205e-05, 8.424999999999752e-05, 8.498699999999818e-05, 8.427800000000013e-05, 8.481999999999934e-05, 8.495799999999956e-05, 8.481899999999987e-05, 8.48050000000003e-05, 8.450000000000124e-05, 8.417999999999967e-05, 8.459699999999876e-05, 8.47920000000002e-05, 8.452800000000038e-05, 8.477800000000063e-05, 8.454199999999995e-05, 8.483399999999891e-05, 8.452700000000091e-05, 8.454199999999995e-05, 8.408299999999869e-05, 8.427700000000066e-05, 8.456899999999962e-05, 8.491600000000085e-05, 8.483299999999944e-05, 8.497199999999913e-05, 8.427800000000013e-05, 8.452800000000038e-05, 8.419499999999872e-05, 8.4846999999999e-05, 8.469499999999922e-05, 8.440300000000026e-05, 8.494399999999999e-05, 8.484800000000195e-05, 8.463800000000146e-05, 8.455500000000005e-05, 8.426400000000056e-05, 8.405500000000302e-05, 8.455500000000005e-05, 8.436100000000155e-05, 8.438900000000069e-05]</msg>
<status status="PASS" starttime="20201112 09:54:23.996" endtime="20201112 09:54:23.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.992" endtime="20201112 09:54:23.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.001" endtime="20201112 09:54:24.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:24.005" endtime="20201112 09:54:24.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.003" endtime="20201112 09:54:24.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.000" endtime="20201112 09:54:24.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.632" endtime="20201112 09:54:24.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.632" endtime="20201112 09:54:24.026"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.034" endtime="20201112 09:54:24.055"></status>
</kw>
<msg timestamp="20201112 09:54:24.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.033" endtime="20201112 09:54:24.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.056" endtime="20201112 09:54:24.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.059" endtime="20201112 09:54:24.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.030" endtime="20201112 09:54:24.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.028" endtime="20201112 09:54:24.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.068" endtime="20201112 09:54:24.353"></status>
</kw>
<msg timestamp="20201112 09:54:24.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019543903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019638069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.067" endtime="20201112 09:54:24.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019543903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019638069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.357" endtime="20201112 09:54:24.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.365" endtime="20201112 09:54:24.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.064" endtime="20201112 09:54:24.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.063" endtime="20201112 09:54:24.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:24.372" level="INFO">${RESULT} = [{'time': 0.019638069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.41659999999997e-05, 'source_diff': 9.41659999999997e-05}, {'time': 0.019736375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:24.369" endtime="20201112 09:54:24.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:24.385" level="INFO">${ACCURACY} = {'time': [0.019638069, 0.019736375, 0.019840389, 0.019941389, 0.020046389, 0.020145403, 0.020247403, 0.020346417, 0.020451444, 0.020552444, 0.020655458, 0.020753458, 0.020857458, 0.020956472, 0.021060...</msg>
<status status="PASS" starttime="20201112 09:54:24.373" endtime="20201112 09:54:24.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.390" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 09:54:24.389" endtime="20201112 09:54:24.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.393" level="INFO">VALUE: [9.41659999999997e-05, 8.554200000000095e-05, 8.568100000000065e-05, 8.583300000000044e-05, 8.554200000000095e-05, 8.565299999999804e-05, 8.5153000000001e-05, 8.577799999999816e-05, 8.54859999999992e-05, 8.558300000000019e-05, 8.600000000000274e-05, 8.541599999999788e-05, 8.565199999999856e-05, 8.574999999999902e-05, 8.512500000000187e-05, 8.569400000000074e-05, 8.551400000000181e-05, 8.53469999999995e-05, 8.5153000000001e-05, 8.565299999999804e-05, 8.563900000000194e-05, 8.538900000000169e-05, 8.590299999999829e-05, 8.554099999999801e-05, 8.540199999999831e-05, 8.506900000000012e-05, 8.523600000000242e-05, 8.572200000000335e-05, 8.570800000000031e-05, 8.573599999999945e-05, 8.51249999999984e-05, 8.507000000000306e-05, 8.515299999999754e-05, 8.590299999999829e-05, 8.59859999999997e-05, 8.599999999999927e-05, 8.543000000000092e-05, 8.502700000000141e-05, 8.522199999999938e-05, 8.605600000000102e-05, 8.51669999999971e-05, 8.545800000000006e-05, 8.579199999999773e-05, 8.572199999999988e-05, 8.512500000000187e-05, 8.601399999999884e-05, 8.533299999999994e-05, 8.595900000000004e-05, 8.527800000000113e-05, 8.586100000000305e-05]</msg>
<status status="PASS" starttime="20201112 09:54:24.391" endtime="20201112 09:54:24.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.386" endtime="20201112 09:54:24.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.396" endtime="20201112 09:54:24.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:24.400" endtime="20201112 09:54:24.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.398" endtime="20201112 09:54:24.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.394" endtime="20201112 09:54:24.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.027" endtime="20201112 09:54:24.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.026" endtime="20201112 09:54:24.420"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.429" endtime="20201112 09:54:24.450"></status>
</kw>
<msg timestamp="20201112 09:54:24.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.427" endtime="20201112 09:54:24.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.451" endtime="20201112 09:54:24.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.454" endtime="20201112 09:54:24.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.425" endtime="20201112 09:54:24.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.423" endtime="20201112 09:54:24.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.464" endtime="20201112 09:54:24.751"></status>
</kw>
<msg timestamp="20201112 09:54:24.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019564306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019659931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.462" endtime="20201112 09:54:24.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019564306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019659931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.755" endtime="20201112 09:54:24.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.763" endtime="20201112 09:54:24.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.460" endtime="20201112 09:54:24.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.458" endtime="20201112 09:54:24.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:24.770" level="INFO">${RESULT} = [{'time': 0.019659931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.562499999999849e-05, 'source_diff': 9.562499999999849e-05}, {'time': 0.019760208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:24.766" endtime="20201112 09:54:24.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:24.783" level="INFO">${ACCURACY} = {'time': [0.019659931, 0.019760208, 0.019864194, 0.019963208, 0.020066222, 0.020167236, 0.02027325, 0.02037425, 0.020480306, 0.020582292, 0.020688264, 0.020789292, 0.020895361, 0.020995375, 0.02110133...</msg>
<status status="PASS" starttime="20201112 09:54:24.771" endtime="20201112 09:54:24.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.787" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 09:54:24.786" endtime="20201112 09:54:24.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.790" level="INFO">VALUE: [9.562499999999849e-05, 8.675000000000002e-05, 8.690200000000328e-05, 8.63470000000005e-05, 8.640300000000226e-05, 8.659700000000076e-05, 8.686100000000058e-05, 8.68189999999984e-05, 8.645900000000054e-05, 8.663899999999947e-05, 8.669500000000122e-05, 8.69860000000007e-05, 8.695800000000156e-05, 8.697200000000113e-05, 8.619400000000124e-05, 8.652699999999944e-05, 8.647199999999716e-05, 8.697199999999766e-05, 8.66669999999986e-05, 8.649999999999977e-05, 8.61669999999981e-05, 8.606900000000112e-05, 8.658300000000119e-05, 8.620800000000081e-05, 8.623599999999995e-05, 8.618100000000115e-05, 8.680600000000177e-05, 8.623599999999995e-05, 8.676300000000012e-05, 8.61249999999994e-05, 8.64730000000001e-05, 8.609700000000026e-05, 8.69860000000007e-05, 8.702799999999941e-05, 8.605600000000102e-05, 8.694399999999852e-05, 8.636100000000008e-05, 8.64730000000001e-05, 8.619500000000072e-05, 8.62920000000017e-05, 8.666599999999913e-05, 8.631900000000137e-05, 8.692999999999895e-05, 8.615199999999906e-05, 8.605499999999808e-05, 8.673600000000045e-05, 8.659699999999729e-05, 8.629199999999823e-05, 8.702799999999941e-05, 8.690299999999929e-05]</msg>
<status status="PASS" starttime="20201112 09:54:24.788" endtime="20201112 09:54:24.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.784" endtime="20201112 09:54:24.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.793" endtime="20201112 09:54:24.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:24.797" endtime="20201112 09:54:24.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.795" endtime="20201112 09:54:24.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.792" endtime="20201112 09:54:24.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.421" endtime="20201112 09:54:24.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.421" endtime="20201112 09:54:24.818"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.826" endtime="20201112 09:54:24.846"></status>
</kw>
<msg timestamp="20201112 09:54:24.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.825" endtime="20201112 09:54:24.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.848" endtime="20201112 09:54:24.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.850" endtime="20201112 09:54:24.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.822" endtime="20201112 09:54:24.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.820" endtime="20201112 09:54:24.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.860" endtime="20201112 09:54:25.146"></status>
</kw>
<msg timestamp="20201112 09:54:25.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019572819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.859" endtime="20201112 09:54:25.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019572819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.151" endtime="20201112 09:54:25.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.159" endtime="20201112 09:54:25.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.856" endtime="20201112 09:54:25.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.854" endtime="20201112 09:54:25.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.165" level="INFO">${RESULT} = [{'time': 0.019669403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.658399999999678e-05, 'source_diff': 9.658399999999678e-05}, {'time': 0.019770667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:25.162" endtime="20201112 09:54:25.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:25.180" level="INFO">${ACCURACY} = {'time': [0.019669403, 0.019770667, 0.019874681, 0.019977694, 0.020083722, 0.020186736, 0.020293722, 0.02039675, 0.020502736, 0.02060475, 0.020710792, 0.020813806, 0.020919792, 0.021020806, 0.02112580...</msg>
<status status="PASS" starttime="20201112 09:54:25.166" endtime="20201112 09:54:25.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.184" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 09:54:25.183" endtime="20201112 09:54:25.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.186" level="INFO">VALUE: [9.658399999999678e-05, 8.693099999999843e-05, 8.722300000000086e-05, 8.772200000000188e-05, 8.787499999999768e-05, 8.788900000000072e-05, 8.790300000000029e-05, 8.74310000000024e-05, 8.725000000000052e-05, 8.727800000000313e-05, 8.770899999999832e-05, 8.78059999999993e-05, 8.76669999999996e-05, 8.723700000000043e-05, 8.704199999999898e-05, 8.726300000000062e-05, 8.791600000000038e-05, 8.715200000000006e-05, 8.709699999999779e-05, 8.763900000000047e-05, 8.744400000000249e-05, 8.74860000000012e-05, 8.74860000000012e-05, 8.801399999999737e-05, 8.78059999999993e-05, 8.761099999999786e-05, 8.729199999999923e-05, 8.748700000000068e-05, 8.722200000000138e-05, 8.722200000000138e-05, 8.706899999999865e-05, 8.795799999999909e-05, 8.787499999999768e-05, 8.747199999999816e-05, 8.780600000000277e-05, 8.801399999999737e-05, 8.740299999999979e-05, 8.800000000000127e-05, 8.702799999999941e-05, 8.733400000000141e-05, 8.783400000000191e-05, 8.777700000000069e-05, 8.730499999999933e-05, 8.711099999999736e-05, 8.708299999999822e-05, 8.79860000000017e-05, 8.773599999999798e-05, 8.733300000000194e-05, 8.802800000000041e-05, 8.801400000000084e-05]</msg>
<status status="PASS" starttime="20201112 09:54:25.185" endtime="20201112 09:54:25.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.181" endtime="20201112 09:54:25.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.190" endtime="20201112 09:54:25.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.194" endtime="20201112 09:54:25.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.193" endtime="20201112 09:54:25.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.189" endtime="20201112 09:54:25.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.819" endtime="20201112 09:54:25.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.818" endtime="20201112 09:54:25.215"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.223" endtime="20201112 09:54:25.244"></status>
</kw>
<msg timestamp="20201112 09:54:25.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.222" endtime="20201112 09:54:25.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.246" endtime="20201112 09:54:25.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.248" endtime="20201112 09:54:25.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.219" endtime="20201112 09:54:25.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.217" endtime="20201112 09:54:25.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.258" endtime="20201112 09:54:25.544"></status>
</kw>
<msg timestamp="20201112 09:54:25.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019566278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.256" endtime="20201112 09:54:25.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019566278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.548" endtime="20201112 09:54:25.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.556" endtime="20201112 09:54:25.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.254" endtime="20201112 09:54:25.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.252" endtime="20201112 09:54:25.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.563" level="INFO">${RESULT} = [{'time': 0.019663111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.683300000000103e-05, 'source_diff': 9.683300000000103e-05}, {'time': 0.019764403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:25.559" endtime="20201112 09:54:25.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:25.576" level="INFO">${ACCURACY} = {'time': [0.019663111, 0.019764403, 0.019870417, 0.019972417, 0.020080431, 0.020181431, 0.020286458, 0.020388458, 0.020495458, 0.020596472, 0.020702514, 0.0208035, 0.0209095, 0.021010542, 0.021116542,...</msg>
<status status="PASS" starttime="20201112 09:54:25.564" endtime="20201112 09:54:25.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.580" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 09:54:25.579" endtime="20201112 09:54:25.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.583" level="INFO">VALUE: [9.683300000000103e-05, 8.84999999999983e-05, 8.86250000000019e-05, 8.808399999999869e-05, 8.836199999999808e-05, 8.881999999999987e-05, 8.844400000000002e-05, 8.865200000000156e-05, 8.833299999999947e-05, 8.858299999999972e-05, 8.808300000000269e-05, 8.833299999999947e-05, 8.884699999999954e-05, 8.838900000000122e-05, 8.874999999999855e-05, 8.845899999999907e-05, 8.826400000000109e-05, 8.870899999999932e-05, 8.861099999999886e-05, 8.834699999999904e-05, 8.870799999999984e-05, 8.877800000000116e-05, 8.858299999999972e-05, 8.865300000000104e-05, 8.813900000000097e-05, 8.865300000000104e-05, 8.877799999999769e-05, 8.831999999999937e-05, 8.888900000000172e-05, 8.822299999999839e-05, 8.822299999999839e-05, 8.834799999999851e-05, 8.830500000000033e-05, 8.883299999999997e-05, 8.852700000000144e-05, 8.858299999999972e-05, 8.876399999999812e-05, 8.863900000000147e-05, 8.822199999999891e-05, 8.838899999999775e-05, 8.877699999999822e-05, 8.887499999999868e-05, 8.806999999999912e-05, 8.861100000000233e-05, 8.829200000000023e-05, 8.847200000000263e-05, 8.872199999999941e-05, 8.808300000000269e-05, 8.81800000000002e-05, 8.870799999999984e-05]</msg>
<status status="PASS" starttime="20201112 09:54:25.581" endtime="20201112 09:54:25.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.577" endtime="20201112 09:54:25.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.586" endtime="20201112 09:54:25.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.590" endtime="20201112 09:54:25.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.588" endtime="20201112 09:54:25.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.585" endtime="20201112 09:54:25.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.216" endtime="20201112 09:54:25.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.215" endtime="20201112 09:54:25.611"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.619" endtime="20201112 09:54:25.639"></status>
</kw>
<msg timestamp="20201112 09:54:25.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.618" endtime="20201112 09:54:25.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.641" endtime="20201112 09:54:25.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.643" endtime="20201112 09:54:25.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.615" endtime="20201112 09:54:25.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.613" endtime="20201112 09:54:25.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.654" endtime="20201112 09:54:25.940"></status>
</kw>
<msg timestamp="20201112 09:54:25.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019700944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.652" endtime="20201112 09:54:25.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019700944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.944" endtime="20201112 09:54:25.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.953" endtime="20201112 09:54:25.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.649" endtime="20201112 09:54:25.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.648" endtime="20201112 09:54:25.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.959" level="INFO">${RESULT} = [{'time': 0.019700944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.850000000000136e-05, 'source_diff': 9.850000000000136e-05}, {'time': 0.019805222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:25.956" endtime="20201112 09:54:25.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:25.973" level="INFO">${ACCURACY} = {'time': [0.019700944, 0.019805222, 0.01991125, 0.02001325, 0.020119264, 0.02022425, 0.020331278, 0.020435278, 0.020541333, 0.020643306, 0.020750319, 0.020852333, 0.020960347, 0.021064333, 0.021172361...</msg>
<status status="PASS" starttime="20201112 09:54:25.960" endtime="20201112 09:54:25.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.977" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 09:54:25.976" endtime="20201112 09:54:25.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.979" level="INFO">VALUE: [9.850000000000136e-05, 8.979100000000226e-05, 8.931899999999743e-05, 8.952799999999844e-05, 8.948599999999973e-05, 9.001399999999937e-05, 8.99999999999998e-05, 8.991700000000186e-05, 8.990199999999934e-05, 8.933399999999994e-05, 8.912499999999893e-05, 8.954100000000201e-05, 8.923599999999948e-05, 8.958300000000072e-05, 8.91800000000012e-05, 9.001399999999937e-05, 8.923599999999948e-05, 8.98060000000013e-05, 8.915300000000154e-05, 8.941700000000136e-05, 8.909699999999979e-05, 8.990299999999882e-05, 8.977800000000216e-05, 8.929100000000176e-05, 8.909699999999979e-05, 8.970800000000084e-05, 8.952699999999897e-05, 8.9945000000001e-05, 8.969400000000127e-05, 8.951399999999887e-05, 8.907000000000012e-05, 8.907000000000012e-05, 8.966599999999866e-05, 8.920899999999982e-05, 8.959700000000029e-05, 8.934799999999951e-05, 8.926400000000209e-05, 8.998600000000023e-05, 8.909699999999979e-05, 9.005600000000155e-05, 8.997200000000066e-05, 8.936099999999961e-05, 8.927799999999819e-05, 8.968100000000118e-05, 8.941700000000136e-05, 8.991700000000186e-05, 8.947200000000016e-05, 8.977800000000216e-05, 8.965299999999857e-05, 8.994399999999805e-05]</msg>
<status status="PASS" starttime="20201112 09:54:25.978" endtime="20201112 09:54:25.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.973" endtime="20201112 09:54:25.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.983" endtime="20201112 09:54:25.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.986" endtime="20201112 09:54:26.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.985" endtime="20201112 09:54:26.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.981" endtime="20201112 09:54:26.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.612" endtime="20201112 09:54:26.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.611" endtime="20201112 09:54:26.007"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.016" endtime="20201112 09:54:26.036"></status>
</kw>
<msg timestamp="20201112 09:54:26.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.014" endtime="20201112 09:54:26.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.037" endtime="20201112 09:54:26.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.040" endtime="20201112 09:54:26.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.012" endtime="20201112 09:54:26.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.010" endtime="20201112 09:54:26.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.050" endtime="20201112 09:54:26.335"></status>
</kw>
<msg timestamp="20201112 09:54:26.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019625486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.048" endtime="20201112 09:54:26.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019625486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.339" endtime="20201112 09:54:26.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.348" endtime="20201112 09:54:26.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.046" endtime="20201112 09:54:26.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.044" endtime="20201112 09:54:26.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:26.354" level="INFO">${RESULT} = [{'time': 0.019725208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.9722e-05, 'source_diff': 9.9722e-05}, {'time': 0.0198295, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.075000000000055e-05...</msg>
<status status="PASS" starttime="20201112 09:54:26.351" endtime="20201112 09:54:26.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:26.367" level="INFO">${ACCURACY} = {'time': [0.019725208, 0.0198295, 0.019936514, 0.020041514, 0.020148542, 0.020251556, 0.020359569, 0.020464569, 0.020573583, 0.020677597, 0.020787611, 0.020891597, 0.020999625, 0.021105625, 0.02121565...</msg>
<status status="PASS" starttime="20201112 09:54:26.355" endtime="20201112 09:54:26.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.372" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 09:54:26.371" endtime="20201112 09:54:26.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.374" level="INFO">VALUE: [9.9722e-05, 9.075000000000055e-05, 9.029199999999876e-05, 9.051399999999987e-05, 9.087499999999721e-05, 9.051399999999987e-05, 9.080499999999936e-05, 9.027699999999972e-05, 9.034700000000104e-05, 9.077799999999969e-05, 9.048600000000073e-05, 9.0639e-05, 9.098600000000123e-05, 9.047199999999769e-05, 9.077799999999969e-05, 9.01389999999995e-05, 9.029199999999876e-05, 9.048600000000073e-05, 9.055500000000258e-05, 9.036100000000061e-05, 9.045900000000107e-05, 9.084700000000154e-05, 9.011100000000036e-05, 9.040199999999984e-05, 9.072200000000141e-05, 9.01389999999995e-05, 9.086100000000111e-05, 9.045800000000159e-05, 9.061099999999739e-05, 9.029199999999876e-05, 9.009700000000079e-05, 9.008399999999722e-05, 9.011199999999983e-05, 9.093000000000295e-05, 9.002699999999947e-05, 9.049999999999683e-05, 9.06800000000027e-05, 9.020800000000134e-05, 9.058299999999825e-05, 9.098599999999776e-05, 9.034700000000104e-05, 9.011099999999689e-05, 9.044399999999855e-05, 9.058399999999772e-05, 9.037500000000018e-05, 9.097199999999819e-05, 9.054099999999954e-05, 9.036100000000061e-05, 9.083300000000197e-05, 9.080599999999883e-05]</msg>
<status status="PASS" starttime="20201112 09:54:26.373" endtime="20201112 09:54:26.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.368" endtime="20201112 09:54:26.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.378" endtime="20201112 09:54:26.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:26.381" endtime="20201112 09:54:26.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.380" endtime="20201112 09:54:26.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.376" endtime="20201112 09:54:26.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.008" endtime="20201112 09:54:26.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.008" endtime="20201112 09:54:26.402"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.411" endtime="20201112 09:54:26.431"></status>
</kw>
<msg timestamp="20201112 09:54:26.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.409" endtime="20201112 09:54:26.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.433" endtime="20201112 09:54:26.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.435" endtime="20201112 09:54:26.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.407" endtime="20201112 09:54:26.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.405" endtime="20201112 09:54:26.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.445" endtime="20201112 09:54:26.731"></status>
</kw>
<msg timestamp="20201112 09:54:26.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019769069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.443" endtime="20201112 09:54:26.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019769069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.735" endtime="20201112 09:54:26.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.743" endtime="20201112 09:54:26.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.441" endtime="20201112 09:54:26.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.439" endtime="20201112 09:54:26.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:26.750" level="INFO">${RESULT} = [{'time': 0.019769069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010033300000000106, 'source_diff': 0.00010033300000000106}, {'time': 0.019875417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:26.747" endtime="20201112 09:54:26.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:26.764" level="INFO">${ACCURACY} = {'time': [0.019769069, 0.019875417, 0.019984375, 0.020087389, 0.020196389, 0.020300389, 0.020410417, 0.020517431, 0.020627417, 0.020732458, 0.020842458, 0.020948458, 0.021059458, 0.021166472, 0.021274...</msg>
<status status="PASS" starttime="20201112 09:54:26.751" endtime="20201112 09:54:26.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.769" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 09:54:26.768" endtime="20201112 09:54:26.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.771" level="INFO">VALUE: [0.00010033300000000106, 9.166700000000014e-05, 9.123599999999801e-05, 9.123600000000148e-05, 9.14719999999987e-05, 9.176399999999765e-05, 9.104199999999951e-05, 9.144499999999903e-05, 9.138899999999728e-05, 9.123599999999801e-05, 9.191600000000091e-05, 9.154100000000054e-05, 9.140200000000084e-05, 9.145799999999912e-05, 9.161099999999839e-05, 9.20139999999979e-05, 9.15139999999974e-05, 9.133399999999847e-05, 9.172299999999842e-05, 9.165300000000057e-05, 9.151400000000087e-05, 9.108399999999822e-05, 9.115300000000007e-05, 9.131899999999943e-05, 9.122200000000191e-05, 9.173599999999851e-05, 9.188900000000125e-05, 9.168000000000023e-05, 9.124999999999758e-05, 9.190300000000082e-05, 9.141699999999989e-05, 9.134799999999804e-05, 9.122300000000139e-05, 9.145900000000207e-05, 9.13199999999989e-05, 9.105499999999961e-05, 9.109699999999832e-05, 9.137500000000118e-05, 9.112500000000093e-05, 9.152799999999697e-05, 9.172199999999894e-05, 9.177800000000069e-05, 9.179199999999679e-05, 9.202800000000094e-05, 9.13199999999989e-05, 9.179200000000026e-05, 9.169500000000275e-05, 9.186099999999864e-05, 9.14719999999987e-05, 9.208400000000269e-05]</msg>
<status status="PASS" starttime="20201112 09:54:26.770" endtime="20201112 09:54:26.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.765" endtime="20201112 09:54:26.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.775" endtime="20201112 09:54:26.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:26.778" endtime="20201112 09:54:26.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.777" endtime="20201112 09:54:26.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.773" endtime="20201112 09:54:26.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.403" endtime="20201112 09:54:26.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.402" endtime="20201112 09:54:26.799"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.808" endtime="20201112 09:54:26.829"></status>
</kw>
<msg timestamp="20201112 09:54:26.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.806" endtime="20201112 09:54:26.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.830" endtime="20201112 09:54:26.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.833" endtime="20201112 09:54:26.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.804" endtime="20201112 09:54:26.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.802" endtime="20201112 09:54:26.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.843" endtime="20201112 09:54:27.129"></status>
</kw>
<msg timestamp="20201112 09:54:27.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.841" endtime="20201112 09:54:27.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.133" endtime="20201112 09:54:27.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.141" endtime="20201112 09:54:27.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.839" endtime="20201112 09:54:27.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.837" endtime="20201112 09:54:27.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.148" level="INFO">${RESULT} = [{'time': 0.019788583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010081899999999852, 'source_diff': 0.00010081899999999852}, {'time': 0.019894889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:27.144" endtime="20201112 09:54:27.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:27.161" level="INFO">${ACCURACY} = {'time': [0.019788583, 0.019894889, 0.020004931, 0.020110931, 0.020222917, 0.020330931, 0.020442931, 0.020547931, 0.020656944, 0.020761958, 0.020871972, 0.020977972, 0.021087986, 0.021192, 0.021303, 0...</msg>
<status status="PASS" starttime="20201112 09:54:27.149" endtime="20201112 09:54:27.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.165" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 09:54:27.164" endtime="20201112 09:54:27.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.168" level="INFO">VALUE: [0.00010081899999999852, 9.248599999999926e-05, 9.252800000000144e-05, 9.212499999999846e-05, 9.236099999999914e-05, 9.240300000000132e-05, 9.234800000000251e-05, 9.205600000000008e-05, 9.286099999999964e-05, 9.258300000000025e-05, 9.261099999999939e-05, 9.28330000000005e-05, 9.222199999999944e-05, 9.229200000000076e-05, 9.229199999999729e-05, 9.277800000000169e-05, 9.272199999999994e-05, 9.284799999999954e-05, 9.23199999999999e-05, 9.277799999999822e-05, 9.211199999999836e-05, 9.227699999999825e-05, 9.209699999999932e-05, 9.241599999999794e-05, 9.236100000000261e-05, 9.295800000000062e-05, 9.229100000000129e-05, 9.229200000000076e-05, 9.223600000000248e-05, 9.234699999999957e-05, 9.270899999999985e-05, 9.220900000000282e-05, 9.280599999999736e-05, 9.244500000000003e-05, 9.26659999999982e-05, 9.286100000000311e-05, 9.274999999999908e-05, 9.243000000000098e-05, 9.279199999999779e-05, 9.230600000000033e-05, 9.270800000000037e-05, 9.29720000000002e-05, 9.202799999999747e-05, 9.29590000000001e-05, 9.216700000000064e-05, 9.21940000000003e-05, 9.29720000000002e-05, 9.266600000000166e-05, 9.208299999999975e-05, 9.241700000000089e-05]</msg>
<status status="PASS" starttime="20201112 09:54:27.166" endtime="20201112 09:54:27.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.162" endtime="20201112 09:54:27.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.171" endtime="20201112 09:54:27.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.175" endtime="20201112 09:54:27.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.173" endtime="20201112 09:54:27.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.170" endtime="20201112 09:54:27.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.800" endtime="20201112 09:54:27.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.799" endtime="20201112 09:54:27.195"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.204" endtime="20201112 09:54:27.224"></status>
</kw>
<msg timestamp="20201112 09:54:27.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.203" endtime="20201112 09:54:27.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.226" endtime="20201112 09:54:27.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.228" endtime="20201112 09:54:27.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.200" endtime="20201112 09:54:27.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.198" endtime="20201112 09:54:27.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.238" endtime="20201112 09:54:27.524"></status>
</kw>
<msg timestamp="20201112 09:54:27.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019849986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.237" endtime="20201112 09:54:27.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019849986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.528" endtime="20201112 09:54:27.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.539" endtime="20201112 09:54:27.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.234" endtime="20201112 09:54:27.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.232" endtime="20201112 09:54:27.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.546" level="INFO">${RESULT} = [{'time': 0.019849986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010245799999999972, 'source_diff': 0.00010245799999999972}, {'time': 0.019958278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:27.543" endtime="20201112 09:54:27.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:27.559" level="INFO">${ACCURACY} = {'time': [0.019849986, 0.019958278, 0.020071278, 0.020178319, 0.020290292, 0.020398319, 0.020508333, 0.020617333, 0.020727347, 0.020835347, 0.020946389, 0.021054361, 0.021165389, 0.021272403, 0.021384...</msg>
<status status="PASS" starttime="20201112 09:54:27.547" endtime="20201112 09:54:27.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.564" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 09:54:27.563" endtime="20201112 09:54:27.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.566" level="INFO">VALUE: [0.00010245799999999972, 9.305600000000108e-05, 9.308400000000022e-05, 9.331900000000143e-05, 9.372300000000042e-05, 9.309700000000032e-05, 9.31940000000013e-05, 9.358300000000125e-05, 9.318000000000173e-05, 9.31940000000013e-05, 9.36529999999991e-05, 9.320800000000087e-05, 9.33200000000009e-05, 9.309700000000032e-05, 9.348600000000026e-05, 9.3639000000003e-05, 9.347300000000017e-05, 9.358300000000125e-05, 9.379099999999932e-05, 9.355499999999864e-05, 9.302799999999847e-05, 9.390299999999935e-05, 9.354099999999907e-05, 9.39720000000012e-05, 9.390299999999935e-05, 9.390299999999935e-05, 9.329200000000176e-05, 9.39590000000011e-05, 9.394500000000153e-05, 9.341599999999894e-05, 9.363899999999953e-05, 9.334700000000057e-05, 9.395799999999815e-05, 9.363899999999953e-05, 9.345800000000112e-05, 9.316700000000164e-05, 9.340300000000232e-05, 9.323600000000001e-05, 9.379200000000226e-05, 9.383400000000097e-05, 9.372300000000042e-05, 9.326399999999915e-05, 9.39859999999973e-05, 9.391599999999944e-05, 9.386100000000064e-05, 9.347199999999722e-05, 9.316700000000164e-05, 9.383299999999803e-05, 9.380600000000183e-05, 9.398600000000076e-05]</msg>
<status status="PASS" starttime="20201112 09:54:27.565" endtime="20201112 09:54:27.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.560" endtime="20201112 09:54:27.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.570" endtime="20201112 09:54:27.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.573" endtime="20201112 09:54:27.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.572" endtime="20201112 09:54:27.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.568" endtime="20201112 09:54:27.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.196" endtime="20201112 09:54:27.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.196" endtime="20201112 09:54:27.594"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.603" endtime="20201112 09:54:27.623"></status>
</kw>
<msg timestamp="20201112 09:54:27.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.601" endtime="20201112 09:54:27.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.625" endtime="20201112 09:54:27.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.627" endtime="20201112 09:54:27.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.599" endtime="20201112 09:54:27.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.597" endtime="20201112 09:54:27.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.637" endtime="20201112 09:54:27.923"></status>
</kw>
<msg timestamp="20201112 09:54:27.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.636" endtime="20201112 09:54:27.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.927" endtime="20201112 09:54:27.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.935" endtime="20201112 09:54:27.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.633" endtime="20201112 09:54:27.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.631" endtime="20201112 09:54:27.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.942" level="INFO">${RESULT} = [{'time': 0.019788556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001033619999999992, 'source_diff': 0.0001033619999999992}, {'time': 0.019897833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:27.938" endtime="20201112 09:54:27.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:27.955" level="INFO">${ACCURACY} = {'time': [0.019788556, 0.019897833, 0.020010847, 0.020117861, 0.020229861, 0.020337875, 0.020450875, 0.020559889, 0.020673903, 0.020782917, 0.020893944, 0.021001958, 0.021113944, 0.021224014, 0.021336...</msg>
<status status="PASS" starttime="20201112 09:54:27.943" endtime="20201112 09:54:27.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.960" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 09:54:27.959" endtime="20201112 09:54:27.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.962" level="INFO">VALUE: [0.0001033619999999992, 9.423600000000101e-05, 9.427799999999972e-05, 9.445800000000212e-05, 9.426399999999668e-05, 9.409699999999785e-05, 9.476400000000065e-05, 9.459700000000182e-05, 9.437500000000071e-05, 9.422300000000092e-05, 9.475000000000108e-05, 9.411100000000089e-05, 9.43469999999981e-05, 9.476400000000065e-05, 9.424999999999711e-05, 9.472200000000194e-05, 9.466699999999967e-05, 9.461100000000139e-05, 9.437500000000071e-05, 9.475000000000108e-05, 9.429199999999929e-05, 9.4333999999998e-05, 9.473700000000099e-05, 9.431999999999843e-05, 9.472200000000194e-05, 9.49859999999983e-05, 9.440299999999985e-05, 9.459699999999835e-05, 9.493099999999949e-05, 9.44590000000016e-05, 9.440300000000332e-05, 9.441699999999942e-05, 9.448600000000126e-05, 9.409799999999732e-05, 9.467999999999976e-05, 9.48200000000024e-05, 9.419399999999883e-05, 9.48469999999986e-05, 9.445799999999865e-05, 9.476400000000065e-05, 9.455499999999964e-05, 9.406900000000218e-05, 9.437500000000071e-05, 9.47079999999989e-05, 9.491699999999992e-05, 9.49720000000022e-05, 9.481999999999893e-05, 9.470899999999838e-05, 9.48330000000025e-05, 9.422200000000144e-05]</msg>
<status status="PASS" starttime="20201112 09:54:27.961" endtime="20201112 09:54:27.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.956" endtime="20201112 09:54:27.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.966" endtime="20201112 09:54:27.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.970" endtime="20201112 09:54:27.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.968" endtime="20201112 09:54:27.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.964" endtime="20201112 09:54:27.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.595" endtime="20201112 09:54:27.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.594" endtime="20201112 09:54:27.991"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.001" endtime="20201112 09:54:28.022"></status>
</kw>
<msg timestamp="20201112 09:54:28.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.999" endtime="20201112 09:54:28.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.024" endtime="20201112 09:54:28.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.026" endtime="20201112 09:54:28.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.996" endtime="20201112 09:54:28.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.994" endtime="20201112 09:54:28.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.036" endtime="20201112 09:54:28.322"></status>
</kw>
<msg timestamp="20201112 09:54:28.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021048681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021153292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.035" endtime="20201112 09:54:28.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021048681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021153292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.326" endtime="20201112 09:54:28.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.334" endtime="20201112 09:54:28.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.032" endtime="20201112 09:54:28.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.031" endtime="20201112 09:54:28.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:28.341" level="INFO">${RESULT} = [{'time': 0.021153292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010461100000000098, 'source_diff': 0.00010461100000000098}, {'time': 0.021262556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:28.338" endtime="20201112 09:54:28.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:28.355" level="INFO">${ACCURACY} = {'time': [0.021153292, 0.021262556, 0.021375611, 0.021483583, 0.021597611, 0.021705625, 0.021818597, 0.021926625, 0.022038639, 0.022149639, 0.022264708, 0.022374653, 0.022488722, 0.022598681, 0.022710...</msg>
<status status="PASS" starttime="20201112 09:54:28.342" endtime="20201112 09:54:28.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.360" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 09:54:28.359" endtime="20201112 09:54:28.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.362" level="INFO">VALUE: [0.00010461100000000098, 9.518099999999974e-05, 9.562499999999849e-05, 9.563900000000153e-05, 9.540300000000085e-05, 9.593100000000049e-05, 9.533299999999953e-05, 9.522200000000244e-05, 9.599999999999886e-05, 9.577799999999775e-05, 9.545799999999965e-05, 9.504200000000004e-05, 9.55409999999976e-05, 9.526399999999768e-05, 9.53469999999991e-05, 9.588899999999831e-05, 9.58469999999996e-05, 9.57079999999999e-05, 9.536099999999867e-05, 9.520800000000287e-05, 9.519499999999931e-05, 9.504200000000004e-05, 9.563900000000153e-05, 9.595899999999963e-05, 9.566700000000067e-05, 9.529100000000082e-05, 9.54019999999979e-05, 9.545799999999965e-05, 9.55270000000015e-05, 9.59019999999984e-05, 9.599999999999886e-05, 9.554200000000054e-05, 9.504200000000004e-05, 9.554200000000054e-05, 9.54720000000027e-05, 9.563900000000153e-05, 9.543099999999999e-05, 9.558399999999925e-05, 9.516700000000017e-05, 9.54019999999979e-05, 9.548600000000226e-05, 9.548600000000226e-05, 9.565299999999763e-05, 9.58469999999996e-05, 9.569499999999981e-05, 9.515299999999713e-05, 9.558299999999978e-05, 9.566700000000067e-05, 9.516700000000017e-05, 9.526400000000115e-05]</msg>
<status status="PASS" starttime="20201112 09:54:28.361" endtime="20201112 09:54:28.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.356" endtime="20201112 09:54:28.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.366" endtime="20201112 09:54:28.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:28.369" endtime="20201112 09:54:28.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.368" endtime="20201112 09:54:28.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.364" endtime="20201112 09:54:28.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.992" endtime="20201112 09:54:28.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.991" endtime="20201112 09:54:28.390"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.399" endtime="20201112 09:54:28.420"></status>
</kw>
<msg timestamp="20201112 09:54:28.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.397" endtime="20201112 09:54:28.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.422" endtime="20201112 09:54:28.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.424" endtime="20201112 09:54:28.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.395" endtime="20201112 09:54:28.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.393" endtime="20201112 09:54:28.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.434" endtime="20201112 09:54:28.719"></status>
</kw>
<msg timestamp="20201112 09:54:28.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019574097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.432" endtime="20201112 09:54:28.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019574097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.723" endtime="20201112 09:54:28.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.731" endtime="20201112 09:54:28.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.430" endtime="20201112 09:54:28.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.428" endtime="20201112 09:54:28.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:28.738" level="INFO">${RESULT} = [{'time': 0.019678917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000104820000000002, 'source_diff': 0.000104820000000002}, {'time': 0.019788153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:28.735" endtime="20201112 09:54:28.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:28.751" level="INFO">${ACCURACY} = {'time': [0.019678917, 0.019788153, 0.019902181, 0.020013194, 0.020129194, 0.020241194, 0.020355208, 0.020465222, 0.020580222, 0.020689236, 0.020804236, 0.02091525, 0.021030292, 0.021139278, 0.0212522...</msg>
<status status="PASS" starttime="20201112 09:54:28.739" endtime="20201112 09:54:28.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.756" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 09:54:28.755" endtime="20201112 09:54:28.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.758" level="INFO">VALUE: [0.000104820000000002, 9.663899999999906e-05, 9.666700000000167e-05, 9.633300000000053e-05, 9.630499999999792e-05, 9.677699999999928e-05, 9.616599999999823e-05, 9.661100000000339e-05, 9.680499999999842e-05, 9.647200000000022e-05, 9.651399999999893e-05, 9.679199999999832e-05, 9.688899999999931e-05, 9.697200000000072e-05, 9.627799999999825e-05, 9.701399999999943e-05, 9.682000000000093e-05, 9.633300000000053e-05, 9.699999999999986e-05, 9.647200000000022e-05, 9.644399999999761e-05, 9.612499999999899e-05, 9.672200000000047e-05, 9.638899999999881e-05, 9.633300000000053e-05, 9.699999999999986e-05, 9.62920000000013e-05, 9.66530000000021e-05, 9.66660000000022e-05, 9.674999999999961e-05, 9.609699999999985e-05, 9.605500000000114e-05, 9.611099999999942e-05, 9.693099999999802e-05, 9.615299999999813e-05, 9.677800000000222e-05, 9.68470000000006e-05, 9.688899999999931e-05, 9.686100000000017e-05, 9.680600000000136e-05, 9.674999999999961e-05, 9.609799999999932e-05, 9.627800000000172e-05, 9.613900000000203e-05, 9.618000000000126e-05, 9.69860000000003e-05, 9.65279999999985e-05, 9.663899999999906e-05, 9.677800000000222e-05, 9.618100000000074e-05]</msg>
<status status="PASS" starttime="20201112 09:54:28.757" endtime="20201112 09:54:28.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.752" endtime="20201112 09:54:28.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.762" endtime="20201112 09:54:28.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:28.765" endtime="20201112 09:54:28.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.764" endtime="20201112 09:54:28.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.760" endtime="20201112 09:54:28.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.391" endtime="20201112 09:54:28.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.391" endtime="20201112 09:54:28.786"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.795" endtime="20201112 09:54:28.815"></status>
</kw>
<msg timestamp="20201112 09:54:28.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.793" endtime="20201112 09:54:28.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.817" endtime="20201112 09:54:28.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.819" endtime="20201112 09:54:28.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.791" endtime="20201112 09:54:28.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.789" endtime="20201112 09:54:28.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.829" endtime="20201112 09:54:29.115"></status>
</kw>
<msg timestamp="20201112 09:54:29.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:28.828" endtime="20201112 09:54:29.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:29.120" endtime="20201112 09:54:29.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.128" endtime="20201112 09:54:29.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.825" endtime="20201112 09:54:29.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.823" endtime="20201112 09:54:29.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.134" level="INFO">${RESULT} = [{'time': 0.0197365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010586100000000223, 'source_diff': 0.00010586100000000223}, {'time': 0.019845806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:29.131" endtime="20201112 09:54:29.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:29.147" level="INFO">${ACCURACY} = {'time': [0.0197365, 0.019845806, 0.019960806, 0.020071806, 0.020187806, 0.020299833, 0.020415847, 0.020528847, 0.020642847, 0.020752944, 0.020866875, 0.020979889, 0.021096889, 0.021208917, 0.02132293...</msg>
<status status="PASS" starttime="20201112 09:54:29.135" endtime="20201112 09:54:29.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.152" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 09:54:29.151" endtime="20201112 09:54:29.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.154" level="INFO">VALUE: [0.00010586100000000223, 9.723700000000002e-05, 9.77920000000028e-05, 9.734800000000057e-05, 9.708400000000075e-05, 9.709700000000085e-05, 9.792999999999955e-05, 9.797199999999825e-05, 9.765299999999963e-05, 9.80410000000001e-05, 9.744399999999862e-05, 9.772200000000147e-05, 9.772200000000147e-05, 9.711100000000042e-05, 9.78059999999989e-05, 9.770899999999791e-05, 9.772300000000095e-05, 9.763800000000059e-05, 9.723600000000054e-05, 9.726399999999968e-05, 9.727799999999925e-05, 9.784699999999813e-05, 9.765299999999963e-05, 9.763900000000006e-05, 9.71669999999987e-05, 9.790299999999988e-05, 9.787500000000074e-05, 9.708400000000075e-05, 9.736200000000014e-05, 9.708299999999781e-05, 9.769399999999887e-05, 9.725000000000011e-05, 9.779199999999932e-05, 9.781900000000246e-05, 9.736100000000067e-05, 9.744400000000208e-05, 9.75279999999995e-05, 9.754199999999907e-05, 9.801299999999749e-05, 9.722200000000097e-05, 9.723600000000054e-05, 9.737500000000024e-05, 9.773600000000104e-05, 9.743000000000251e-05, 9.697200000000072e-05, 9.763900000000006e-05, 9.76669999999992e-05, 9.808299999999881e-05, 9.790299999999988e-05, 9.723600000000054e-05]</msg>
<status status="PASS" starttime="20201112 09:54:29.153" endtime="20201112 09:54:29.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.148" endtime="20201112 09:54:29.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.158" endtime="20201112 09:54:29.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.162" endtime="20201112 09:54:29.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.160" endtime="20201112 09:54:29.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.156" endtime="20201112 09:54:29.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.787" endtime="20201112 09:54:29.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.787" endtime="20201112 09:54:29.182"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.191" endtime="20201112 09:54:29.212"></status>
</kw>
<msg timestamp="20201112 09:54:29.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.190" endtime="20201112 09:54:29.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.213" endtime="20201112 09:54:29.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.216" endtime="20201112 09:54:29.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.187" endtime="20201112 09:54:29.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.185" endtime="20201112 09:54:29.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.226" endtime="20201112 09:54:29.513"></status>
</kw>
<msg timestamp="20201112 09:54:29.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.225" endtime="20201112 09:54:29.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.517" endtime="20201112 09:54:29.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.525" endtime="20201112 09:54:29.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.222" endtime="20201112 09:54:29.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.220" endtime="20201112 09:54:29.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.532" level="INFO">${RESULT} = [{'time': 0.019922139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010680599999999749, 'source_diff': 0.00010680599999999749}, {'time': 0.020033417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:29.528" endtime="20201112 09:54:29.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:29.545" level="INFO">${ACCURACY} = {'time': [0.019922139, 0.020033417, 0.020150431, 0.020260444, 0.020378472, 0.020489472, 0.020606458, 0.020717514, 0.020833514, 0.020944542, 0.021060528, 0.021172556, 0.021287542, 0.021399542, 0.021517...</msg>
<status status="PASS" starttime="20201112 09:54:29.533" endtime="20201112 09:54:29.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.549" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 09:54:29.548" endtime="20201112 09:54:29.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.552" level="INFO">VALUE: [0.00010680599999999749, 9.811100000000142e-05, 9.81669999999997e-05, 9.808299999999881e-05, 9.837500000000124e-05, 9.895800000000315e-05, 9.811100000000142e-05, 9.905600000000014e-05, 9.875000000000161e-05, 9.836100000000167e-05, 9.819499999999884e-05, 9.812499999999752e-05, 9.873599999999857e-05, 9.8334000000002e-05, 9.84730000000017e-05, 9.822299999999798e-05, 9.862500000000149e-05, 9.82080000000024e-05, 9.82219999999985e-05, 9.834699999999863e-05, 9.845799999999919e-05, 9.81669999999997e-05, 9.887500000000174e-05, 9.897200000000272e-05, 9.876399999999771e-05, 9.895899999999916e-05, 9.827700000000078e-05, 9.8721999999999e-05, 9.898599999999882e-05, 9.820799999999894e-05, 9.834699999999863e-05, 9.812500000000099e-05, 9.847199999999875e-05, 9.847199999999875e-05, 9.840300000000038e-05, 9.861099999999845e-05, 9.809699999999838e-05, 9.831899999999949e-05, 9.894400000000012e-05, 9.815200000000066e-05, 9.852699999999756e-05, 9.809699999999838e-05, 9.88059999999999e-05, 9.888899999999784e-05, 9.8028e-05, 9.820799999999894e-05, 9.829199999999982e-05, 9.804199999999957e-05, 9.865300000000063e-05, 9.822300000000145e-05]</msg>
<status status="PASS" starttime="20201112 09:54:29.550" endtime="20201112 09:54:29.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.546" endtime="20201112 09:54:29.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.555" endtime="20201112 09:54:29.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.559" endtime="20201112 09:54:29.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.557" endtime="20201112 09:54:29.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.554" endtime="20201112 09:54:29.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.183" endtime="20201112 09:54:29.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.183" endtime="20201112 09:54:29.580"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.588" endtime="20201112 09:54:29.608"></status>
</kw>
<msg timestamp="20201112 09:54:29.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.586" endtime="20201112 09:54:29.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.610" endtime="20201112 09:54:29.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.612" endtime="20201112 09:54:29.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.584" endtime="20201112 09:54:29.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.582" endtime="20201112 09:54:29.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.622" endtime="20201112 09:54:29.907"></status>
</kw>
<msg timestamp="20201112 09:54:29.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019632472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.621" endtime="20201112 09:54:29.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019632472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.912" endtime="20201112 09:54:29.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.920" endtime="20201112 09:54:29.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.618" endtime="20201112 09:54:29.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.617" endtime="20201112 09:54:29.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.926" level="INFO">${RESULT} = [{'time': 0.019632472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010841600000000007, 'source_diff': 0.00010841600000000007}, {'time': 0.019745792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:29.923" endtime="20201112 09:54:29.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:29.941" level="INFO">${ACCURACY} = {'time': [0.019632472, 0.019745792, 0.019861764, 0.019973778, 0.020092819, 0.020204833, 0.020321806, 0.020433847, 0.020551833, 0.020664861, 0.020782861, 0.020897861, 0.021015875, 0.021130903, 0.021246...</msg>
<status status="PASS" starttime="20201112 09:54:29.927" endtime="20201112 09:54:29.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.945" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 09:54:29.944" endtime="20201112 09:54:29.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.948" level="INFO">VALUE: [0.00010841600000000007, 9.977800000000175e-05, 9.938900000000181e-05, 9.909699999999938e-05, 9.923600000000254e-05, 9.998599999999983e-05, 9.954200000000107e-05, 9.973600000000304e-05, 9.9722e-05, 9.959699999999988e-05, 9.9028000000001e-05, 9.976399999999871e-05, 9.947199999999976e-05, 9.933399999999953e-05, 9.947199999999976e-05, 9.987499999999927e-05, 9.961099999999945e-05, 9.976400000000218e-05, 9.951299999999899e-05, 9.913800000000209e-05, 9.997200000000026e-05, 0.00010004200000000157, 9.974999999999914e-05, 9.909699999999938e-05, 9.943100000000052e-05, 9.963899999999859e-05, 9.965300000000163e-05, 9.954200000000107e-05, 9.947299999999923e-05, 9.933300000000006e-05, 9.965199999999869e-05, 9.961099999999945e-05, 9.959699999999988e-05, 9.951400000000193e-05, 9.966699999999773e-05, 0.00010002799999999853, 9.990299999999841e-05, 9.944500000000009e-05, 9.959800000000282e-05, 9.908400000000275e-05, 9.94999999999989e-05, 9.9722e-05, 9.970800000000044e-05, 9.9722e-05, 9.905500000000067e-05, 9.958300000000031e-05, 9.948599999999932e-05, 9.929200000000082e-05, 9.990299999999841e-05, 9.911099999999895e-05]</msg>
<status status="PASS" starttime="20201112 09:54:29.946" endtime="20201112 09:54:29.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.942" endtime="20201112 09:54:29.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.951" endtime="20201112 09:54:29.952"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.955" endtime="20201112 09:54:29.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.953" endtime="20201112 09:54:29.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.950" endtime="20201112 09:54:29.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.580" endtime="20201112 09:54:29.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.580" endtime="20201112 09:54:29.975"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.984" endtime="20201112 09:54:30.005"></status>
</kw>
<msg timestamp="20201112 09:54:30.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.982" endtime="20201112 09:54:30.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.007" endtime="20201112 09:54:30.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.009" endtime="20201112 09:54:30.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.980" endtime="20201112 09:54:30.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.978" endtime="20201112 09:54:30.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.019" endtime="20201112 09:54:30.305"></status>
</kw>
<msg timestamp="20201112 09:54:30.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0194955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:30.018" endtime="20201112 09:54:30.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0194955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:30.309" endtime="20201112 09:54:30.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.317" endtime="20201112 09:54:30.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.015" endtime="20201112 09:54:30.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.013" endtime="20201112 09:54:30.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:30.323" level="INFO">${RESULT} = [{'time': 0.019605069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010956900000000033, 'source_diff': 0.00010956900000000033}, {'time': 0.019719389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:30.320" endtime="20201112 09:54:30.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:30.336" level="INFO">${ACCURACY} = {'time': [0.019605069, 0.019719389, 0.019836417, 0.019949389, 0.020067403, 0.020181431, 0.020299431, 0.020415444, 0.020534431, 0.020649444, 0.020768486, 0.020882486, 0.020999542, 0.0211155, 0.0212345,...</msg>
<status status="PASS" starttime="20201112 09:54:30.324" endtime="20201112 09:54:30.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.341" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 09:54:30.340" endtime="20201112 09:54:30.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.343" level="INFO">VALUE: [0.00010956900000000033, 0.00010102799999999953, 0.00010087500000000027, 0.00010033300000000106, 0.00010084700000000113, 0.00010020900000000041, 0.00010023699999999955, 0.00010081900000000199, 0.0001004999999999999, 0.00010002699999999906, 0.0001001939999999979, 0.0001010419999999991, 0.00010088899999999984, 0.00010058299999999784, 0.00010097200000000126, 0.00010066699999999873, 0.00010051399999999946, 0.0001008610000000007, 0.00010070900000000091, 0.00010004099999999863, 0.0001000549999999982, 0.00010081900000000199, 0.00010055500000000217, 0.00010077799999999928, 0.00010098599999999736, 0.00010061100000000045, 0.00010063899999999959, 0.00010098600000000083, 0.00010015299999999866, 0.00010082000000000146, 0.00010095899999999769, 0.0001010000000000004, 0.00010087500000000027, 0.00010083300000000156, 0.00010008300000000081, 0.00010040299999999891, 0.00010087500000000027, 0.00010044400000000162, 0.00010029200000000182, 0.0001005280000000025, 0.00010029200000000182, 0.00010097300000000073, 0.00010022299999999998, 0.00010038899999999934, 0.00010024999999999964, 0.00010051399999999946, 0.00010087500000000027, 0.00010065299999999916, 0.00010084700000000113, 0.00010063900000000306]</msg>
<status status="PASS" starttime="20201112 09:54:30.342" endtime="20201112 09:54:30.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.337" endtime="20201112 09:54:30.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.362" endtime="20201112 09:54:30.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:30.365" endtime="20201112 09:54:30.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.364" endtime="20201112 09:54:30.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.360" endtime="20201112 09:54:30.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.976" endtime="20201112 09:54:30.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.976" endtime="20201112 09:54:30.386"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.395" endtime="20201112 09:54:30.416"></status>
</kw>
<msg timestamp="20201112 09:54:30.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.393" endtime="20201112 09:54:30.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.418" endtime="20201112 09:54:30.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.420" endtime="20201112 09:54:30.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.391" endtime="20201112 09:54:30.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.389" endtime="20201112 09:54:30.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.430" endtime="20201112 09:54:30.716"></status>
</kw>
<msg timestamp="20201112 09:54:30.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019554181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019664056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.429" endtime="20201112 09:54:30.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019554181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019664056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.720" endtime="20201112 09:54:30.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.728" endtime="20201112 09:54:30.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.426" endtime="20201112 09:54:30.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.425" endtime="20201112 09:54:30.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:30.735" level="INFO">${RESULT} = [{'time': 0.019664056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010987499999999886, 'source_diff': 0.00010987499999999886}, {'time': 0.019779361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:30.732" endtime="20201112 09:54:30.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:30.748" level="INFO">${ACCURACY} = {'time': [0.019664056, 0.019779361, 0.019899361, 0.020014431, 0.020135375, 0.020251389, 0.020372431, 0.020485417, 0.020604431, 0.020718431, 0.020837486, 0.020954458, 0.021073472, 0.021189486, 0.021309...</msg>
<status status="PASS" starttime="20201112 09:54:30.736" endtime="20201112 09:54:30.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.752" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 09:54:30.751" endtime="20201112 09:54:30.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.755" level="INFO">VALUE: [0.00010987499999999886, 0.00010124999999999718, 0.0001010549999999992, 0.00010126400000000021, 0.00010158299999999884, 0.00010152800000000003, 0.0001020000000000014, 0.00010129199999999935, 0.00010123700000000055, 0.00010113900000000009, 0.0001020139999999975, 0.00010183299999999909, 0.00010154100000000013, 0.00010113900000000009, 0.00010195799999999922, 0.0001020139999999975, 0.00010112500000000052, 0.00010199999999999793, 0.00010188899999999737, 0.00010183299999999909, 0.0001018619999999977, 0.0001010549999999992, 0.0001018879999999979, 0.00010165300000000016, 0.00010133299999999859, 0.00010133300000000206, 0.00010152800000000003, 0.0001020139999999975, 0.00010125000000000065, 0.00010195900000000216, 0.0001015419999999996, 0.00010111200000000042, 0.00010115299999999966, 0.00010117999999999933, 0.00010195799999999922, 0.00010165300000000016, 0.00010112500000000052, 0.00010129199999999935, 0.00010105599999999867, 0.00010115300000000313, 0.00010113900000000009, 0.00010165300000000016, 0.00010133399999999806, 0.000101416, 0.0001013480000000011, 0.00010144400000000262, 0.00010111099999999748, 0.00010201400000000097, 0.00010149999999999743, 0.00010136099999999773]</msg>
<status status="PASS" starttime="20201112 09:54:30.753" endtime="20201112 09:54:30.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.749" endtime="20201112 09:54:30.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.758" endtime="20201112 09:54:30.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:30.762" endtime="20201112 09:54:30.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.760" endtime="20201112 09:54:30.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.757" endtime="20201112 09:54:30.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.387" endtime="20201112 09:54:30.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.387" endtime="20201112 09:54:30.782"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.791" endtime="20201112 09:54:30.812"></status>
</kw>
<msg timestamp="20201112 09:54:30.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.789" endtime="20201112 09:54:30.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.813" endtime="20201112 09:54:30.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.816" endtime="20201112 09:54:30.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.787" endtime="20201112 09:54:30.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.785" endtime="20201112 09:54:30.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.825" endtime="20201112 09:54:31.111"></status>
</kw>
<msg timestamp="20201112 09:54:31.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.824" endtime="20201112 09:54:31.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.115" endtime="20201112 09:54:31.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.123" endtime="20201112 09:54:31.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.822" endtime="20201112 09:54:31.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.820" endtime="20201112 09:54:31.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.130" level="INFO">${RESULT} = [{'time': 0.019663722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011148600000000092, 'source_diff': 0.00011148600000000092}, {'time': 0.019780944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:31.127" endtime="20201112 09:54:31.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:31.143" level="INFO">${ACCURACY} = {'time': [0.019663722, 0.019780944, 0.019900972, 0.020016972, 0.020136014, 0.020250986, 0.020373, 0.020488, 0.020609042, 0.020726056, 0.020845069, 0.020963056, 0.021082069, 0.021200069, 0.021321111, 0...</msg>
<status status="PASS" starttime="20201112 09:54:31.131" endtime="20201112 09:54:31.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.147" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 09:54:31.146" endtime="20201112 09:54:31.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.150" level="INFO">VALUE: [0.00011148600000000092, 0.00010223600000000208, 0.00010215300000000066, 0.00010290300000000141, 0.00010245799999999972, 0.00010290299999999794, 0.00010295800000000022, 0.00010281900000000052, 0.00010263900000000159, 0.00010305600000000067, 0.0001025000000000019, 0.00010301400000000197, 0.00010254099999999766, 0.00010281899999999705, 0.00010241700000000048, 0.00010245799999999972, 0.00010290300000000141, 0.00010281900000000052, 0.00010266700000000073, 0.00010259699999999941, 0.00010247199999999929, 0.00010248599999999886, 0.00010227800000000078, 0.00010213900000000109, 0.00010279099999999791, 0.00010254099999999766, 0.00010247199999999929, 0.00010279200000000085, 0.00010243100000000005, 0.00010270799999999997, 0.00010284699999999966, 0.00010284699999999966, 0.00010241700000000048, 0.00010259800000000235, 0.00010240300000000091, 0.0001026940000000004, 0.00010229100000000088, 0.00010261099999999898, 0.00010233299999999959, 0.00010290300000000141, 0.00010219499999999937, 0.00010220799999999947, 0.00010297199999999979, 0.00010291700000000098, 0.00010261099999999898, 0.00010226400000000122, 0.00010248599999999886, 0.00010220799999999947, 0.00010265200000000169, 0.00010212499999999805]</msg>
<status status="PASS" starttime="20201112 09:54:31.149" endtime="20201112 09:54:31.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.144" endtime="20201112 09:54:31.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.153" endtime="20201112 09:54:31.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.157" endtime="20201112 09:54:31.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.155" endtime="20201112 09:54:31.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.152" endtime="20201112 09:54:31.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.783" endtime="20201112 09:54:31.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.783" endtime="20201112 09:54:31.178"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.186" endtime="20201112 09:54:31.207"></status>
</kw>
<msg timestamp="20201112 09:54:31.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.185" endtime="20201112 09:54:31.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.208" endtime="20201112 09:54:31.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.211" endtime="20201112 09:54:31.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.182" endtime="20201112 09:54:31.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.180" endtime="20201112 09:54:31.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.221" endtime="20201112 09:54:31.506"></status>
</kw>
<msg timestamp="20201112 09:54:31.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.219" endtime="20201112 09:54:31.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.510" endtime="20201112 09:54:31.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.518" endtime="20201112 09:54:31.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.217" endtime="20201112 09:54:31.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.215" endtime="20201112 09:54:31.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.525" level="INFO">${RESULT} = [{'time': 0.019562264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011195799999999881, 'source_diff': 0.00011195799999999881}, {'time': 0.019679472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:31.522" endtime="20201112 09:54:31.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:31.539" level="INFO">${ACCURACY} = {'time': [0.019562264, 0.019679472, 0.019802486, 0.019919486, 0.020041486, 0.0201605, 0.020280514, 0.020396583, 0.020519542, 0.020637556, 0.020758583, 0.020877611, 0.020999653, 0.021115583, 0.02123559...</msg>
<status status="PASS" starttime="20201112 09:54:31.526" endtime="20201112 09:54:31.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.543" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 09:54:31.542" endtime="20201112 09:54:31.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.546" level="INFO">VALUE: [0.00011195799999999881, 0.00010398600000000036, 0.00010302800000000154, 0.00010344400000000115, 0.00010338900000000234, 0.00010365300000000216, 0.00010384700000000066, 0.00010395799999999775, 0.00010372300000000001, 0.00010323700000000255, 0.00010379099999999891, 0.00010395800000000122, 0.00010336099999999973, 0.00010383300000000109, 0.00010315299999999819, 0.00010329200000000135, 0.00010333300000000059, 0.00010308299999999687, 0.00010333400000000006, 0.00010374999999999968, 0.00010397300000000026, 0.00010357000000000074, 0.00010349999999999943, 0.00010345800000000072, 0.00010322200000000004, 0.0001033749999999993, 0.00010386100000000023, 0.00010402800000000254, 0.00010355600000000117, 0.00010320899999999994, 0.0001036810000000013, 0.00010377800000000229, 0.00010372300000000001, 0.00010345900000000019, 0.00010304100000000163, 0.0001037079999999975, 0.0001036940000000014, 0.0001036810000000013, 0.00010384700000000066, 0.00010316699999999776, 0.00010366700000000173, 0.00010327799999999832, 0.00010362499999999955, 0.00010398600000000036, 0.00010367999999999836, 0.00010327699999999884, 0.00010326400000000222, 0.00010334700000000016, 0.00010375000000000315, 0.00010395800000000122]</msg>
<status status="PASS" starttime="20201112 09:54:31.544" endtime="20201112 09:54:31.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.540" endtime="20201112 09:54:31.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.549" endtime="20201112 09:54:31.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.553" endtime="20201112 09:54:31.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.551" endtime="20201112 09:54:31.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.548" endtime="20201112 09:54:31.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.179" endtime="20201112 09:54:31.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.178" endtime="20201112 09:54:31.573"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.582" endtime="20201112 09:54:31.603"></status>
</kw>
<msg timestamp="20201112 09:54:31.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.581" endtime="20201112 09:54:31.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.605" endtime="20201112 09:54:31.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.607" endtime="20201112 09:54:31.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.578" endtime="20201112 09:54:31.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.576" endtime="20201112 09:54:31.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.617" endtime="20201112 09:54:31.902"></status>
</kw>
<msg timestamp="20201112 09:54:31.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019567417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.616" endtime="20201112 09:54:31.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019567417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.906" endtime="20201112 09:54:31.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.914" endtime="20201112 09:54:31.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.613" endtime="20201112 09:54:31.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.612" endtime="20201112 09:54:31.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.920" level="INFO">${RESULT} = [{'time': 0.019681014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000113597, 'source_diff': 0.000113597}, {'time': 0.019800319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000104750000000...</msg>
<status status="PASS" starttime="20201112 09:54:31.917" endtime="20201112 09:54:31.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:31.933" level="INFO">${ACCURACY} = {'time': [0.019681014, 0.019800319, 0.019923306, 0.020039333, 0.020162333, 0.020279347, 0.020400375, 0.020519431, 0.020642389, 0.020759389, 0.020880417, 0.020997403, 0.021120417, 0.021237472, 0.021358...</msg>
<status status="PASS" starttime="20201112 09:54:31.921" endtime="20201112 09:54:31.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.938" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 09:54:31.937" endtime="20201112 09:54:31.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.940" level="INFO">VALUE: [0.000113597, 0.00010475000000000068, 0.00010431999999999803, 0.00010436100000000073, 0.00010502700000000059, 0.00010477799999999982, 0.00010416699999999876, 0.00010483400000000156, 0.00010409700000000091, 0.00010484699999999819, 0.00010486099999999776, 0.00010411100000000048, 0.00010461099999999751, 0.00010481899999999905, 0.00010447200000000129, 0.00010416699999999876, 0.00010429199999999889, 0.00010463900000000012, 0.00010469399999999893, 0.00010438899999999987, 0.00010407000000000124, 0.00010481999999999853, 0.0001041940000000019, 0.00010472300000000101, 0.00010441599999999954, 0.00010416599999999929, 0.00010472200000000154, 0.00010434700000000116, 0.00010448600000000086, 0.00010466699999999926, 0.00010412500000000005, 0.00010502800000000007, 0.00010409700000000091, 0.00010483299999999862, 0.0001043620000000002, 0.00010412500000000005, 0.00010418000000000233, 0.0001047079999999985, 0.0001047360000000011, 0.00010412500000000005, 0.00010411099999999701, 0.00010473599999999764, 0.00010422199999999757, 0.00010429199999999889, 0.00010426399999999975, 0.00010412500000000005, 0.00010483400000000156, 0.00010420800000000147, 0.00010479099999999991, 0.00010429099999999941]</msg>
<status status="PASS" starttime="20201112 09:54:31.939" endtime="20201112 09:54:31.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.934" endtime="20201112 09:54:31.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.944" endtime="20201112 09:54:31.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.947" endtime="20201112 09:54:31.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.946" endtime="20201112 09:54:31.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.942" endtime="20201112 09:54:31.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.574" endtime="20201112 09:54:31.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.574" endtime="20201112 09:54:31.968"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.977" endtime="20201112 09:54:31.997"></status>
</kw>
<msg timestamp="20201112 09:54:31.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.975" endtime="20201112 09:54:31.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.999" endtime="20201112 09:54:32.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.001" endtime="20201112 09:54:32.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.973" endtime="20201112 09:54:32.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.971" endtime="20201112 09:54:32.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.012" endtime="20201112 09:54:32.297"></status>
</kw>
<msg timestamp="20201112 09:54:32.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.010" endtime="20201112 09:54:32.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.301" endtime="20201112 09:54:32.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.309" endtime="20201112 09:54:32.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.007" endtime="20201112 09:54:32.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.006" endtime="20201112 09:54:32.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.316" level="INFO">${RESULT} = [{'time': 0.019744236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011412499999999964, 'source_diff': 0.00011412499999999964}, {'time': 0.019861528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:32.313" endtime="20201112 09:54:32.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:32.329" level="INFO">${ACCURACY} = {'time': [0.019744236, 0.019861528, 0.019986528, 0.020107542, 0.020231542, 0.020349542, 0.020472556, 0.020589583, 0.020711667, 0.020830611, 0.020953611, 0.021073625, 0.021198639, 0.021317653, 0.021442...</msg>
<status status="PASS" starttime="20201112 09:54:32.317" endtime="20201112 09:54:32.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.333" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 09:54:32.332" endtime="20201112 09:54:32.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.336" level="INFO">VALUE: [0.00011412499999999964, 0.00010558399999999885, 0.00010595899999999922, 0.00010572299999999854, 0.00010545900000000219, 0.0001053750000000013, 0.00010516699999999976, 0.0001051940000000029, 0.00010531999999999903, 0.00010523599999999814, 0.00010541700000000001, 0.0001060279999999976, 0.00010523599999999814, 0.00010536099999999826, 0.00010527800000000032, 0.00010551399999999753, 0.00010526399999999728, 0.00010601399999999803, 0.00010516699999999976, 0.00010597199999999932, 0.00010586100000000223, 0.00010562500000000155, 0.00010533299999999912, 0.00010538900000000087, 0.00010598599999999889, 0.00010559699999999894, 0.00010584699999999919, 0.00010576400000000125, 0.00010579200000000039, 0.00010511100000000148, 0.00010529199999999989, 0.00010547199999999882, 0.00010506999999999878, 0.00010548600000000186, 0.00010518099999999933, 0.00010541700000000001, 0.00010548600000000186, 0.00010597299999999879, 0.0001053339999999986, 0.00010559700000000241, 0.00010548599999999839, 0.00010595799999999975, 0.0001055689999999998, 0.00010541700000000001, 0.00010505499999999973, 0.00010544499999999915, 0.00010581999999999953, 0.00010572199999999907, 0.00010499999999999746, 0.00010515300000000019]</msg>
<status status="PASS" starttime="20201112 09:54:32.334" endtime="20201112 09:54:32.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.330" endtime="20201112 09:54:32.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.339" endtime="20201112 09:54:32.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:32.343" endtime="20201112 09:54:32.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.341" endtime="20201112 09:54:32.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.338" endtime="20201112 09:54:32.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.969" endtime="20201112 09:54:32.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.969" endtime="20201112 09:54:32.364"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.372" endtime="20201112 09:54:32.393"></status>
</kw>
<msg timestamp="20201112 09:54:32.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.371" endtime="20201112 09:54:32.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.394" endtime="20201112 09:54:32.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.397" endtime="20201112 09:54:32.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.368" endtime="20201112 09:54:32.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.366" endtime="20201112 09:54:32.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.407" endtime="20201112 09:54:32.693"></status>
</kw>
<msg timestamp="20201112 09:54:32.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.405" endtime="20201112 09:54:32.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.697" endtime="20201112 09:54:32.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.705" endtime="20201112 09:54:32.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.403" endtime="20201112 09:54:32.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.401" endtime="20201112 09:54:32.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.712" level="INFO">${RESULT} = [{'time': 0.019654847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011562500000000114, 'source_diff': 0.00011562500000000114}, {'time': 0.019776139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:32.708" endtime="20201112 09:54:32.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:32.724" level="INFO">${ACCURACY} = {'time': [0.019654847, 0.019776139, 0.019900194, 0.020019167, 0.020143167, 0.020261194, 0.020386194, 0.020506222, 0.020629222, 0.020750222, 0.020874222, 0.02099425, 0.021118264, 0.021238292, 0.0213613...</msg>
<status status="PASS" starttime="20201112 09:54:32.712" endtime="20201112 09:54:32.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.729" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 09:54:32.728" endtime="20201112 09:54:32.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.731" level="INFO">VALUE: [0.00011562500000000114, 0.00010662500000000255, 0.00010633300000000012, 0.00010611100000000248, 0.00010691700000000151, 0.00010623599999999914, 0.00010673599999999964, 0.00010693000000000161, 0.0001067499999999992, 0.00010695799999999728, 0.00010652800000000157, 0.00010679199999999792, 0.00010606999999999978, 0.00010684799999999967, 0.00010636099999999926, 0.00010629200000000089, 0.00010697299999999979, 0.00010686099999999976, 0.00010684700000000019, 0.00010649999999999896, 0.00010609699999999944, 0.00010677799999999835, 0.00010645800000000025, 0.00010630499999999751, 0.00010651399999999853, 0.0001061949999999999, 0.00010636099999999926, 0.00010697200000000032, 0.00010697200000000032, 0.00010613800000000215, 0.00010692999999999814, 0.00010695800000000075, 0.00010669400000000093, 0.00010622199999999957, 0.00010686099999999976, 0.00010622199999999957, 0.00010612499999999858, 0.00010648599999999939, 0.00010631900000000055, 0.00010645899999999972, 0.00010697200000000032, 0.00010658300000000037, 0.00010686099999999976, 0.00010627800000000132, 0.00010630600000000046, 0.00010622199999999957, 0.00010686099999999976, 0.0001068889999999989, 0.00010697200000000032, 0.00010659699999999994]</msg>
<status status="PASS" starttime="20201112 09:54:32.730" endtime="20201112 09:54:32.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.725" endtime="20201112 09:54:32.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.735" endtime="20201112 09:54:32.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:32.738" endtime="20201112 09:54:32.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.737" endtime="20201112 09:54:32.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.733" endtime="20201112 09:54:32.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.364" endtime="20201112 09:54:32.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.364" endtime="20201112 09:54:32.759"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.768" endtime="20201112 09:54:32.789"></status>
</kw>
<msg timestamp="20201112 09:54:32.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.766" endtime="20201112 09:54:32.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.791" endtime="20201112 09:54:32.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.793" endtime="20201112 09:54:32.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.764" endtime="20201112 09:54:32.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.762" endtime="20201112 09:54:32.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.803" endtime="20201112 09:54:33.090"></status>
</kw>
<msg timestamp="20201112 09:54:33.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019762653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.802" endtime="20201112 09:54:33.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019762653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.094" endtime="20201112 09:54:33.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.102" endtime="20201112 09:54:33.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.799" endtime="20201112 09:54:33.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.797" endtime="20201112 09:54:33.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:33.109" level="INFO">${RESULT} = [{'time': 0.019762653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011654200000000073, 'source_diff': 0.00011654200000000073}, {'time': 0.019884903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:33.106" endtime="20201112 09:54:33.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:33.123" level="INFO">${ACCURACY} = {'time': [0.019762653, 0.019884903, 0.020010958, 0.020130972, 0.020254972, 0.020377944, 0.020504958, 0.020625972, 0.020751014, 0.020873014, 0.020999028, 0.021122014, 0.021249069, 0.021371042, 0.021498...</msg>
<status status="PASS" starttime="20201112 09:54:33.110" endtime="20201112 09:54:33.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.127" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 09:54:33.126" endtime="20201112 09:54:33.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.130" level="INFO">VALUE: [0.00011654200000000073, 0.00010716699999999829, 0.00010730499999999851, 0.00010763899999999965, 0.00010781899999999858, 0.0001075829999999979, 0.00010791599999999957, 0.00010733299999999765, 0.00010725000000000318, 0.00010770799999999803, 0.00010780599999999849, 0.00010744500000000115, 0.00010763800000000018, 0.0001078340000000011, 0.00010712500000000305, 0.00010776399999999978, 0.00010726399999999928, 0.00010784700000000119, 0.00010722200000000057, 0.00010743100000000158, 0.00010740300000000244, 0.00010745800000000125, 0.0001075560000000017, 0.00010794499999999818, 0.00010704199999999817, 0.00010713899999999915, 0.00010716700000000176, 0.00010731999999999756, 0.00010715199999999925, 0.00010709700000000044, 0.00010712499999999958, 0.00010734700000000069, 0.00010715300000000219, 0.00010723600000000014, 0.0001078889999999999, 0.00010704199999999817, 0.00010715199999999925, 0.00010729099999999894, 0.0001073889999999994, 0.00010786100000000076, 0.00010759700000000094, 0.00010765300000000269, 0.00010727799999999885, 0.00010780599999999849, 0.00010726400000000275, 0.00010701399999999903, 0.00010722300000000004, 0.00010783399999999763, 0.00010794400000000218, 0.0001074019999999995]</msg>
<status status="PASS" starttime="20201112 09:54:33.129" endtime="20201112 09:54:33.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.124" endtime="20201112 09:54:33.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.134" endtime="20201112 09:54:33.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.137" endtime="20201112 09:54:33.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.135" endtime="20201112 09:54:33.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.132" endtime="20201112 09:54:33.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.760" endtime="20201112 09:54:33.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.760" endtime="20201112 09:54:33.158"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.166" endtime="20201112 09:54:33.187"></status>
</kw>
<msg timestamp="20201112 09:54:33.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.165" endtime="20201112 09:54:33.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.189" endtime="20201112 09:54:33.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.191" endtime="20201112 09:54:33.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.162" endtime="20201112 09:54:33.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.160" endtime="20201112 09:54:33.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.201" endtime="20201112 09:54:33.487"></status>
</kw>
<msg timestamp="20201112 09:54:33.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019704222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.200" endtime="20201112 09:54:33.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019704222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.491" endtime="20201112 09:54:33.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.499" endtime="20201112 09:54:33.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.197" endtime="20201112 09:54:33.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.195" endtime="20201112 09:54:33.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:33.505" level="INFO">${RESULT} = [{'time': 0.019704222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001172499999999993, 'source_diff': 0.0001172499999999993}, {'time': 0.0198275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:33.502" endtime="20201112 09:54:33.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:33.518" level="INFO">${ACCURACY} = {'time': [0.019704222, 0.0198275, 0.019954514, 0.020075542, 0.020203542, 0.020325556, 0.020452569, 0.020575583, 0.020703569, 0.020827583, 0.020952625, 0.021075625, 0.021202667, 0.021323639, 0.02144966...</msg>
<status status="PASS" starttime="20201112 09:54:33.506" endtime="20201112 09:54:33.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.523" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 09:54:33.522" endtime="20201112 09:54:33.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.525" level="INFO">VALUE: [0.0001172499999999993, 0.00010854199999999967, 0.00010877800000000035, 0.00010879199999999992, 0.00010854200000000314, 0.00010865300000000022, 0.00010897199999999885, 0.00010836100000000126, 0.00010829099999999994, 0.00010852700000000062, 0.00010806899999999883, 0.000108208000000002, 0.00010872300000000154, 0.00010902799999999713, 0.00010874999999999774, 0.00010822300000000104, 0.00010841700000000301, 0.00010833299999999865, 0.00010884699999999872, 0.00010822200000000157, 0.00010798600000000089, 0.00010886100000000176, 0.00010851400000000053, 0.00010898600000000189, 0.00010809699999999797, 0.00010893099999999961, 0.00010822300000000104, 0.00010876400000000078, 0.00010827799999999985, 0.00010901300000000155, 0.00010884699999999872, 0.00010844399999999921, 0.00010862499999999761, 0.00010884700000000219, 0.00010862500000000108, 0.00010845799999999878, 0.00010897200000000232, 0.00010822299999999757, 0.00010848699999999739, 0.00010829099999999994, 0.000108902000000001, 0.00010829099999999994, 0.00010875000000000121, 0.00010813900000000015, 0.00010873600000000164, 0.00010901400000000103, 0.000108208000000002, 0.00010897199999999885, 0.00010820900000000147, 0.00010897300000000179]</msg>
<status status="PASS" starttime="20201112 09:54:33.524" endtime="20201112 09:54:33.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.519" endtime="20201112 09:54:33.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.529" endtime="20201112 09:54:33.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.532" endtime="20201112 09:54:33.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.531" endtime="20201112 09:54:33.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.527" endtime="20201112 09:54:33.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.159" endtime="20201112 09:54:33.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.158" endtime="20201112 09:54:33.553"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.562" endtime="20201112 09:54:33.581"></status>
</kw>
<msg timestamp="20201112 09:54:33.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.560" endtime="20201112 09:54:33.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.583" endtime="20201112 09:54:33.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.585" endtime="20201112 09:54:33.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.557" endtime="20201112 09:54:33.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.555" endtime="20201112 09:54:33.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.595" endtime="20201112 09:54:33.881"></status>
</kw>
<msg timestamp="20201112 09:54:33.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.594" endtime="20201112 09:54:33.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.885" endtime="20201112 09:54:33.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.893" endtime="20201112 09:54:33.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.591" endtime="20201112 09:54:33.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.590" endtime="20201112 09:54:33.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:33.900" level="INFO">${RESULT} = [{'time': 0.019948694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011862500000000067, 'source_diff': 0.00011862500000000067}, {'time': 0.020074, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:33.896" endtime="20201112 09:54:33.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:33.913" level="INFO">${ACCURACY} = {'time': [0.019948694, 0.020074, 0.020202014, 0.020324014, 0.020450014, 0.020572028, 0.020701056, 0.020823069, 0.020951083, 0.021075083, 0.021203125, 0.021324097, 0.021451139, 0.021573125, 0.021699139...</msg>
<status status="PASS" starttime="20201112 09:54:33.901" endtime="20201112 09:54:33.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.917" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 09:54:33.916" endtime="20201112 09:54:33.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.920" level="INFO">VALUE: [0.00011862500000000067, 0.00010975000000000221, 0.00010984699999999972, 0.00010940300000000097, 0.00010927799999999738, 0.000109902999999998, 0.00010929200000000042, 0.00010984699999999972, 0.00010924999999999824, 0.000109902000000002, 0.00011002799999999813, 0.00010927800000000085, 0.0001098890000000019, 0.00010955600000000024, 0.00010984699999999972, 0.00010929200000000042, 0.0001098479999999992, 0.00010908399999999888, 0.00010945899999999925, 0.00010945799999999978, 0.00010923599999999867, 0.00011006999999999684, 0.00010965299999999775, 0.00010936099999999879, 0.00010949999999999849, 0.0001100280000000016, 0.00010973600000000264, 0.00010911099999999854, 0.0001098479999999992, 0.0001095699999999998, 0.00010952699999999815, 0.00010908300000000287, 0.00010998599999999942, 0.00010913900000000115, 0.00010947200000000282, 0.00010955600000000024, 0.00010979200000000092, 0.00010997299999999932, 0.00010997299999999932, 0.00010925000000000171, 0.0001095549999999973, 0.00010936100000000226, 0.00010952699999999815, 0.00010929099999999747, 0.00010915300000000072, 0.00010927800000000085, 0.00010986099999999929, 0.00010940300000000097, 0.00010998599999999942, 0.00011001399999999856]</msg>
<status status="PASS" starttime="20201112 09:54:33.918" endtime="20201112 09:54:33.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.914" endtime="20201112 09:54:33.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.923" endtime="20201112 09:54:33.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.927" endtime="20201112 09:54:33.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.925" endtime="20201112 09:54:33.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.922" endtime="20201112 09:54:33.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.554" endtime="20201112 09:54:33.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.553" endtime="20201112 09:54:33.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.299" endtime="20201112 09:54:33.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.952" endtime="20201112 09:54:33.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.951" endtime="20201112 09:54:33.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.949" endtime="20201112 09:54:33.972"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:54.189" endtime="20201112 09:54:33.973" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.982" endtime="20201112 09:54:34.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.980" endtime="20201112 09:54:34.002"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.016" endtime="20201112 09:54:34.037"></status>
</kw>
<msg timestamp="20201112 09:54:34.038" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.014" endtime="20201112 09:54:34.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.040" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.039" endtime="20201112 09:54:34.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.043" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:34.042" endtime="20201112 09:54:34.044"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:34.012" endtime="20201112 09:54:34.044"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:34.009" endtime="20201112 09:54:34.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.008" endtime="20201112 09:54:34.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:34.049" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:34.049" endtime="20201112 09:54:34.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.046" endtime="20201112 09:54:34.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.007" endtime="20201112 09:54:34.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.006" endtime="20201112 09:54:34.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.051" endtime="20201112 09:54:34.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.004" endtime="20201112 09:54:34.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.003" endtime="20201112 09:54:34.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.979" endtime="20201112 09:54:34.054"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.066" endtime="20201112 09:54:34.084"></status>
</kw>
<msg timestamp="20201112 09:54:34.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.064" endtime="20201112 09:54:34.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.085" endtime="20201112 09:54:34.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.087" endtime="20201112 09:54:34.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.061" endtime="20201112 09:54:34.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.059" endtime="20201112 09:54:34.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.098" endtime="20201112 09:54:34.386"></status>
</kw>
<msg timestamp="20201112 09:54:34.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074069333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074092819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.095" endtime="20201112 09:54:34.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074069333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074092819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.390" endtime="20201112 09:54:34.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.398" endtime="20201112 09:54:34.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.092" endtime="20201112 09:54:34.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.091" endtime="20201112 09:54:34.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.405" level="INFO">${RESULT} = [{'time': 0.074092819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3486000000003115e-05, 'source_diff': 2.3486000000003115e-05}, {'time': 0.074103319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:34.402" endtime="20201112 09:54:34.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:34.418" level="INFO">${ACCURACY} = {'time': [0.074092819, 0.074103319, 0.074114333, 0.074123403, 0.074135333, 0.074146264, 0.074156139, 0.074166319, 0.074174458, 0.074183278, 0.074192583, 0.074203403, 0.074214403, 0.074224278, 0.074233...</msg>
<status status="PASS" starttime="20201112 09:54:34.406" endtime="20201112 09:54:34.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.423" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 09:54:34.422" endtime="20201112 09:54:34.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.425" level="INFO">VALUE: [2.3486000000003115e-05, 6.0550000000048065e-06, 5.569000000010815e-06, 6.05600000000428e-06, 6.054999999990929e-06, 5.55600000000378e-06, 6.055999999990402e-06, 6.040999999998298e-06, 5.5550000000043065e-06, 5.570000000010289e-06, 6.0550000000048065e-06, 5.624999999995217e-06, 6.05600000000428e-06, 5.542000000011149e-06, 6.0550000000048065e-06, 6.0279999999912626e-06, 5.541999999997271e-06, 5.5550000000043065e-06, 5.55600000000378e-06, 6.040999999998298e-06, 6.540999999998798e-06, 6.05600000000428e-06, 6.0279999999912626e-06, 6.05600000000428e-06, 5.58400000000292e-06, 5.570000000010289e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 5.541999999997271e-06, 5.5689999999969375e-06, 6.0689999999974376e-06, 5.5689999999969375e-06, 5.639000000001726e-06, 6.055999999990402e-06, 6.527999999991763e-06, 5.52800000000464e-06, 5.5550000000043065e-06, 6.096999999996577e-06, 5.540999999997798e-06, 5.542000000011149e-06, 6.0689999999974376e-06, 6.0550000000048065e-06, 5.5689999999969375e-06, 6.527999999991763e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 5.541999999997271e-06, 5.639000000001726e-06, 6.05600000000428e-06]</msg>
<status status="PASS" starttime="20201112 09:54:34.424" endtime="20201112 09:54:34.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.419" endtime="20201112 09:54:34.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.428" endtime="20201112 09:54:34.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.432" endtime="20201112 09:54:34.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.430" endtime="20201112 09:54:34.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.427" endtime="20201112 09:54:34.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.057" endtime="20201112 09:54:34.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.056" endtime="20201112 09:54:34.453"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.462" endtime="20201112 09:54:34.479"></status>
</kw>
<msg timestamp="20201112 09:54:34.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.460" endtime="20201112 09:54:34.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.480" endtime="20201112 09:54:34.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.483" endtime="20201112 09:54:34.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.457" endtime="20201112 09:54:34.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.455" endtime="20201112 09:54:34.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.492" endtime="20201112 09:54:34.776"></status>
</kw>
<msg timestamp="20201112 09:54:34.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02007825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:34.490" endtime="20201112 09:54:34.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02007825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:34.781" endtime="20201112 09:54:34.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.789" endtime="20201112 09:54:34.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.487" endtime="20201112 09:54:34.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.486" endtime="20201112 09:54:34.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.795" level="INFO">${RESULT} = [{'time': 0.02007825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.020088944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:34.792" endtime="20201112 09:54:34.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:34.809" level="INFO">${ACCURACY} = {'time': [0.02007825, 0.020088944, 0.020101083, 0.020110458, 0.02012225, 0.020131069, 0.020141069, 0.020150375, 0.020159958, 0.020169319, 0.020178139, 0.020186944, 0.020198139, 0.020208153, 0.02021723...</msg>
<status status="PASS" starttime="20201112 09:54:34.796" endtime="20201112 09:54:34.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.813" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 09:54:34.812" endtime="20201112 09:54:34.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.816" level="INFO">VALUE: [7.055999999998341e-06, 6.555000000001837e-06, 6.624999999999687e-06, 7.111000000000617e-06, 6.542000000001741e-06, 6.555000000001837e-06, 6.555000000001837e-06, 7.042000000002241e-06, 6.568999999997938e-06, 7.055000000002337e-06, 6.542000000001741e-06, 6.540999999998798e-06, 6.485999999999992e-06, 6.570000000000881e-06, 6.568999999997938e-06, 7.555999999998841e-06, 7.084000000000951e-06, 7.055000000002337e-06, 7.0419999999987715e-06, 7.054999999998868e-06, 7.0279999999992016e-06, 7.055999999998341e-06, 7.056000000001811e-06, 6.569000000001407e-06, 7.056000000001811e-06, 7.040999999999298e-06, 6.485999999999992e-06, 6.526999999999228e-06, 7.055999999998341e-06, 7.556000000002311e-06, 6.541000000002267e-06, 6.569000000001407e-06, 7.054999999998868e-06, 7.0419999999987715e-06, 7.527999999999702e-06, 6.5829999999975075e-06, 7.042000000002241e-06, 6.540999999998798e-06, 7.556000000002311e-06, 7.069999999997911e-06, 6.540999999998798e-06, 7.097000000001047e-06, 6.554999999998368e-06, 6.541999999998271e-06, 7.555999999998841e-06, 7.054999999998868e-06, 6.541999999998271e-06, 7.068999999998438e-06, 7.0279999999992016e-06, 7.000000000000062e-06]</msg>
<status status="PASS" starttime="20201112 09:54:34.814" endtime="20201112 09:54:34.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.810" endtime="20201112 09:54:34.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.819" endtime="20201112 09:54:34.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.823" endtime="20201112 09:54:34.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.821" endtime="20201112 09:54:34.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.817" endtime="20201112 09:54:34.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.454" endtime="20201112 09:54:34.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.453" endtime="20201112 09:54:34.843"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.852" endtime="20201112 09:54:34.868"></status>
</kw>
<msg timestamp="20201112 09:54:34.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.850" endtime="20201112 09:54:34.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.870" endtime="20201112 09:54:34.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.872" endtime="20201112 09:54:34.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.848" endtime="20201112 09:54:34.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.846" endtime="20201112 09:54:34.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.881" endtime="20201112 09:54:35.167"></status>
</kw>
<msg timestamp="20201112 09:54:35.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.879" endtime="20201112 09:54:35.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.172" endtime="20201112 09:54:35.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.180" endtime="20201112 09:54:35.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.877" endtime="20201112 09:54:35.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.875" endtime="20201112 09:54:35.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.186" level="INFO">${RESULT} = [{'time': 0.019672833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.019683833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:35.183" endtime="20201112 09:54:35.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:35.199" level="INFO">${ACCURACY} = {'time': [0.019672833, 0.019683833, 0.019695958, 0.019708028, 0.019721583, 0.019735042, 0.019749028, 0.019761583, 0.019772583, 0.019786653, 0.019798736, 0.019811722, 0.019825778, 0.019835903, 0.019849...</msg>
<status status="PASS" starttime="20201112 09:54:35.187" endtime="20201112 09:54:35.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.204" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 09:54:35.203" endtime="20201112 09:54:35.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.206" level="INFO">VALUE: [7.540999999999798e-06, 7.540999999999798e-06, 7.554999999999368e-06, 7.985999999998022e-06, 7.540999999999798e-06, 8.570000000002881e-06, 8.013999999997162e-06, 7.527000000000228e-06, 7.540999999999798e-06, 8.056000000002811e-06, 7.554999999999368e-06, 7.540999999999798e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.041000000000298e-06, 8.054999999999868e-06, 8.096999999998578e-06, 8.028000000000202e-06, 8.055999999999341e-06, 8.569999999999411e-06, 7.985999999998022e-06, 8.028000000000202e-06, 8.055999999999341e-06, 8.041999999999772e-06, 8.041999999999772e-06, 7.555000000002837e-06, 8.041999999999772e-06, 7.555999999998841e-06, 8.542000000000272e-06, 8.097000000002047e-06, 7.527999999999702e-06, 8.055999999999341e-06, 7.555999999998841e-06, 8.028000000000202e-06, 7.5419999999992715e-06, 8.554999999996898e-06, 7.570000000001881e-06, 8.055000000003337e-06, 7.554999999999368e-06, 8.082999999999008e-06, 8.056000000002811e-06, 7.527999999999702e-06, 8.054999999999868e-06, 8.083999999998481e-06, 8.055999999999341e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.541000000003267e-06]</msg>
<status status="PASS" starttime="20201112 09:54:35.205" endtime="20201112 09:54:35.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.200" endtime="20201112 09:54:35.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.210" endtime="20201112 09:54:35.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:35.214" endtime="20201112 09:54:35.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.212" endtime="20201112 09:54:35.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.208" endtime="20201112 09:54:35.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.844" endtime="20201112 09:54:35.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.844" endtime="20201112 09:54:35.234"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.243" endtime="20201112 09:54:35.261"></status>
</kw>
<msg timestamp="20201112 09:54:35.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.241" endtime="20201112 09:54:35.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.262" endtime="20201112 09:54:35.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.265" endtime="20201112 09:54:35.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.239" endtime="20201112 09:54:35.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.237" endtime="20201112 09:54:35.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.273" endtime="20201112 09:54:35.560"></status>
</kw>
<msg timestamp="20201112 09:54:35.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019671403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.272" endtime="20201112 09:54:35.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019671403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.564" endtime="20201112 09:54:35.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.572" endtime="20201112 09:54:35.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.269" endtime="20201112 09:54:35.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.268" endtime="20201112 09:54:35.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.579" level="INFO">${RESULT} = [{'time': 0.019679903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.499999999998092e-06, 'source_diff': 8.499999999998092e-06}, {'time': 0.019691764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:35.575" endtime="20201112 09:54:35.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:35.592" level="INFO">${ACCURACY} = {'time': [0.019679903, 0.019691764, 0.019704764, 0.019716722, 0.019727958, 0.019740028, 0.019751708, 0.019764083, 0.019774889, 0.019785708, 0.019798958, 0.019810722, 0.019823708, 0.019837028, 0.019849...</msg>
<status status="PASS" starttime="20201112 09:54:35.580" endtime="20201112 09:54:35.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.596" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 09:54:35.595" endtime="20201112 09:54:35.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.599" level="INFO">VALUE: [8.499999999998092e-06, 8.985999999999023e-06, 8.555999999999842e-06, 9.054999999997398e-06, 9.041000000001298e-06, 8.555999999999842e-06, 8.541000000000798e-06, 8.555000000000368e-06, 8.542000000000272e-06, 8.541000000000798e-06, 8.540999999997329e-06, 8.999999999998592e-06, 9.026999999998259e-06, 9.042000000000772e-06, 8.472000000002422e-06, 9.027999999997732e-06, 9.042000000000772e-06, 9.055000000000868e-06, 9.041000000001298e-06, 8.528000000000702e-06, 8.568999999999938e-06, 9.056000000000342e-06, 8.541000000000798e-06, 9.055000000000868e-06, 8.596999999999078e-06, 8.555000000000368e-06, 8.555999999999842e-06, 9.028000000001202e-06, 9.069000000000438e-06, 9.055000000000868e-06, 8.555000000000368e-06, 9.069000000000438e-06, 9.056000000000342e-06, 8.555000000000368e-06, 8.555999999999842e-06, 8.555999999999842e-06, 8.555999999999842e-06, 8.555999999999842e-06, 9.056000000000342e-06, 8.555999999999842e-06, 9.042000000000772e-06, 9.541999999997802e-06, 9.056000000000342e-06, 9.028000000001202e-06, 9.056000000000342e-06, 8.610999999998648e-06, 9.028000000001202e-06, 9.028000000001202e-06, 8.555000000000368e-06, 9.041000000001298e-06]</msg>
<status status="PASS" starttime="20201112 09:54:35.597" endtime="20201112 09:54:35.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.593" endtime="20201112 09:54:35.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.606" endtime="20201112 09:54:35.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:35.610" endtime="20201112 09:54:35.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.608" endtime="20201112 09:54:35.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.605" endtime="20201112 09:54:35.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.235" endtime="20201112 09:54:35.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.235" endtime="20201112 09:54:35.631"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.639" endtime="20201112 09:54:35.657"></status>
</kw>
<msg timestamp="20201112 09:54:35.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.638" endtime="20201112 09:54:35.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.659" endtime="20201112 09:54:35.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.661" endtime="20201112 09:54:35.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.635" endtime="20201112 09:54:35.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.633" endtime="20201112 09:54:35.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.670" endtime="20201112 09:54:35.956"></status>
</kw>
<msg timestamp="20201112 09:54:35.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019670875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.668" endtime="20201112 09:54:35.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019670875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.960" endtime="20201112 09:54:35.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.968" endtime="20201112 09:54:35.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.666" endtime="20201112 09:54:35.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.664" endtime="20201112 09:54:35.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.975" level="INFO">${RESULT} = [{'time': 0.019670875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.019683861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:35.971" endtime="20201112 09:54:35.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:35.988" level="INFO">${ACCURACY} = {'time': [0.019670875, 0.019683861, 0.019696569, 0.01971175, 0.019724694, 0.019736903, 0.019751514, 0.019765889, 0.019779528, 0.019793778, 0.019807639, 0.019820639, 0.019834722, 0.019847708, 0.0198609...</msg>
<status status="PASS" starttime="20201112 09:54:35.976" endtime="20201112 09:54:35.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.992" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 09:54:35.991" endtime="20201112 09:54:35.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.995" level="INFO">VALUE: [9.542000000001272e-06, 1.0097000000000578e-05, 1.0012999999999689e-05, 9.986000000000023e-06, 1.0012999999999689e-05, 1.0070000000000912e-05, 9.542000000001272e-06, 9.555999999997372e-06, 1.0070000000000912e-05, 9.556000000000842e-06, 9.541999999997802e-06, 1.0056000000001342e-05, 9.999999999999593e-06, 1.0054999999998399e-05, 1.0055999999997872e-05, 9.542000000001272e-06, 1.0054999999998399e-05, 9.541000000001798e-06, 9.513999999998662e-06, 1.0054999999998399e-05, 1.0041000000002298e-05, 1.0040999999998829e-05, 1.0554999999998899e-05, 9.583000000000508e-06, 9.528000000001702e-06, 1.0054999999998399e-05, 9.611000000003117e-06, 1.0554999999998899e-05, 9.499999999999093e-06, 9.541000000001798e-06, 1.0056000000001342e-05, 9.556000000000842e-06, 1.0041999999998302e-05, 9.541999999997802e-06, 1.0068999999997968e-05, 9.542000000001272e-06, 9.999999999999593e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.556000000000842e-06, 1.0055999999997872e-05, 9.527999999998232e-06, 1.0110999999996678e-05, 1.0068999999997968e-05, 9.542000000001272e-06, 1.0055000000001868e-05, 9.999999999999593e-06, 1.0041999999998302e-05, 1.0069000000001438e-05, 9.583000000000508e-06]</msg>
<status status="PASS" starttime="20201112 09:54:35.993" endtime="20201112 09:54:35.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.989" endtime="20201112 09:54:35.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.998" endtime="20201112 09:54:36.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.002" endtime="20201112 09:54:36.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.000" endtime="20201112 09:54:36.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.997" endtime="20201112 09:54:36.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.632" endtime="20201112 09:54:36.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.631" endtime="20201112 09:54:36.023"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.031" endtime="20201112 09:54:36.049"></status>
</kw>
<msg timestamp="20201112 09:54:36.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.030" endtime="20201112 09:54:36.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.050" endtime="20201112 09:54:36.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.053" endtime="20201112 09:54:36.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.027" endtime="20201112 09:54:36.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.025" endtime="20201112 09:54:36.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.061" endtime="20201112 09:54:36.348"></status>
</kw>
<msg timestamp="20201112 09:54:36.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.060" endtime="20201112 09:54:36.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.352" endtime="20201112 09:54:36.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.361" endtime="20201112 09:54:36.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.057" endtime="20201112 09:54:36.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.056" endtime="20201112 09:54:36.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.367" level="INFO">${RESULT} = [{'time': 0.019737931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1070000000001912e-05, 'source_diff': 1.1070000000001912e-05}, {'time': 0.019751722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:36.364" endtime="20201112 09:54:36.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:36.425" level="INFO">${ACCURACY} = {'time': [0.019737931, 0.019751722, 0.019767875, 0.019782986, 0.019795736, 0.01981, 0.019824806, 0.019838861, 0.019852944, 0.019865931, 0.019880694, 0.019894861, 0.019909028, 0.019924806, 0.019939819,...</msg>
<status status="PASS" starttime="20201112 09:54:36.368" endtime="20201112 09:54:36.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.430" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 09:54:36.429" endtime="20201112 09:54:36.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.432" level="INFO">VALUE: [1.1070000000001912e-05, 1.0540999999999329e-05, 1.0638999999999788e-05, 1.1041999999999302e-05, 1.0542000000002272e-05, 1.1069000000002438e-05, 1.0556000000001842e-05, 1.0554999999998899e-05, 1.1069000000002438e-05, 1.0555999999998372e-05, 1.1069000000002438e-05, 1.1041999999999302e-05, 1.1083999999998012e-05, 1.1041999999999302e-05, 1.0625000000000218e-05, 1.1055999999998872e-05, 1.1027999999999732e-05, 1.0569999999997942e-05, 1.0556000000001842e-05, 1.1056000000002342e-05, 1.1054999999999399e-05, 1.0555000000002368e-05, 1.0554999999998899e-05, 1.1041999999999302e-05, 1.1055999999998872e-05, 1.1040999999999829e-05, 1.0540999999999329e-05, 1.0555999999998372e-05, 1.1013000000000689e-05, 1.0527999999999232e-05, 1.0583000000001508e-05, 1.0569000000001938e-05, 1.0555999999998372e-05, 1.1040999999999829e-05, 1.1055999999998872e-05, 1.0555999999998372e-05, 1.1056000000002342e-05, 1.1040999999999829e-05, 1.0570000000001412e-05, 1.0554999999998899e-05, 1.0554999999998899e-05, 1.0513999999999663e-05, 1.1555999999999372e-05, 1.1055999999998872e-05, 1.0541000000002798e-05, 1.0554999999998899e-05, 1.0972999999997457e-05, 1.1069999999998442e-05, 1.1054999999999399e-05, 1.1485999999998053e-05]</msg>
<status status="PASS" starttime="20201112 09:54:36.431" endtime="20201112 09:54:36.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.426" endtime="20201112 09:54:36.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.436" endtime="20201112 09:54:36.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.439" endtime="20201112 09:54:36.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.438" endtime="20201112 09:54:36.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.434" endtime="20201112 09:54:36.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.023" endtime="20201112 09:54:36.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.023" endtime="20201112 09:54:36.460"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.469" endtime="20201112 09:54:36.488"></status>
</kw>
<msg timestamp="20201112 09:54:36.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.468" endtime="20201112 09:54:36.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.489" endtime="20201112 09:54:36.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.492" endtime="20201112 09:54:36.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.465" endtime="20201112 09:54:36.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.463" endtime="20201112 09:54:36.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.501" endtime="20201112 09:54:36.786"></status>
</kw>
<msg timestamp="20201112 09:54:36.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02042625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020438278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:36.499" endtime="20201112 09:54:36.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02042625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020438278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:36.790" endtime="20201112 09:54:36.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.799" endtime="20201112 09:54:36.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.496" endtime="20201112 09:54:36.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.495" endtime="20201112 09:54:36.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.805" level="INFO">${RESULT} = [{'time': 0.020438278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.020454417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:36.802" endtime="20201112 09:54:36.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:36.818" level="INFO">${ACCURACY} = {'time': [0.020438278, 0.020454417, 0.020468472, 0.020485486, 0.020499153, 0.020514472, 0.020532528, 0.020548292, 0.020562472, 0.020579292, 0.020595556, 0.020613542, 0.020631611, 0.0206485, 0.02066316...</msg>
<status status="PASS" starttime="20201112 09:54:36.806" endtime="20201112 09:54:36.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.823" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 09:54:36.822" endtime="20201112 09:54:36.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.825" level="INFO">VALUE: [1.2028000000000733e-05, 1.1569999999998942e-05, 1.1554999999999899e-05, 1.2068999999999969e-05, 1.1541999999999802e-05, 1.204099999999736e-05, 1.2014000000001163e-05, 1.1555999999999372e-05, 1.204099999999736e-05, 1.1555999999999372e-05, 1.2069999999999442e-05, 1.2042000000000302e-05, 1.2555000000000899e-05, 1.2055999999999872e-05, 1.1541999999999802e-05, 1.1541999999999802e-05, 1.1555999999999372e-05, 1.2055999999999872e-05, 1.1597000000002078e-05, 1.2055999999999872e-05, 1.2055000000000399e-05, 1.2583999999999512e-05, 1.1541999999999802e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2055999999999872e-05, 1.2082999999999539e-05, 1.2055999999999872e-05, 1.2041000000000829e-05, 1.2028000000000733e-05, 1.1611000000001648e-05, 1.1542000000003272e-05, 1.2055999999999872e-05, 1.2041000000000829e-05, 1.2041000000000829e-05, 1.2055999999999872e-05, 1.1555999999999372e-05, 1.2055000000000399e-05, 1.2055000000000399e-05, 1.2069999999999442e-05, 1.2055000000000399e-05, 1.2055999999999872e-05, 1.2055999999999872e-05, 1.2055999999999872e-05, 1.1554999999999899e-05, 1.2055000000000399e-05, 1.2055000000000399e-05, 1.1554999999999899e-05, 1.1985999999998553e-05, 1.2068999999999969e-05]</msg>
<status status="PASS" starttime="20201112 09:54:36.824" endtime="20201112 09:54:36.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.819" endtime="20201112 09:54:36.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.829" endtime="20201112 09:54:36.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.832" endtime="20201112 09:54:36.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.831" endtime="20201112 09:54:36.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.827" endtime="20201112 09:54:36.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.461" endtime="20201112 09:54:36.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.461" endtime="20201112 09:54:36.853"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.863" endtime="20201112 09:54:36.880"></status>
</kw>
<msg timestamp="20201112 09:54:36.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.861" endtime="20201112 09:54:36.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.882" endtime="20201112 09:54:36.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.884" endtime="20201112 09:54:36.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.858" endtime="20201112 09:54:36.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.856" endtime="20201112 09:54:36.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.893" endtime="20201112 09:54:37.178"></status>
</kw>
<msg timestamp="20201112 09:54:37.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020447306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020460875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.892" endtime="20201112 09:54:37.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020447306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020460875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.183" endtime="20201112 09:54:37.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.191" endtime="20201112 09:54:37.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.889" endtime="20201112 09:54:37.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.887" endtime="20201112 09:54:37.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:37.197" level="INFO">${RESULT} = [{'time': 0.020460875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3569000000001469e-05, 'source_diff': 1.3569000000001469e-05}, {'time': 0.020478875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:37.194" endtime="20201112 09:54:37.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:37.211" level="INFO">${ACCURACY} = {'time': [0.020460875, 0.020478875, 0.020496681, 0.020514736, 0.020530444, 0.020546736, 0.020565444, 0.020582514, 0.020599431, 0.020615431, 0.020631444, 0.020647556, 0.0206655, 0.020683819, 0.02070281...</msg>
<status status="PASS" starttime="20201112 09:54:37.198" endtime="20201112 09:54:37.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.215" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 09:54:37.214" endtime="20201112 09:54:37.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.218" level="INFO">VALUE: [1.3569000000001469e-05, 1.2985999999999553e-05, 1.3041999999997833e-05, 1.2999999999999123e-05, 1.30689999999975e-05, 1.2542000000000803e-05, 1.30689999999975e-05, 1.3070000000000442e-05, 1.3028000000001733e-05, 1.3028000000001733e-05, 1.305499999999793e-05, 1.3042000000001303e-05, 1.2542000000000803e-05, 1.255499999999743e-05, 1.3055000000001399e-05, 1.2542000000000803e-05, 1.2583000000000039e-05, 1.3056000000000872e-05, 1.2556000000000372e-05, 1.2555000000000899e-05, 1.304099999999836e-05, 1.305499999999793e-05, 1.3056000000000872e-05, 1.3097000000000109e-05, 1.3486000000000054e-05, 1.252699999999829e-05, 1.304099999999836e-05, 1.3041000000001829e-05, 1.3056000000000872e-05, 1.2555999999996903e-05, 1.3042000000001303e-05, 1.2542000000000803e-05, 1.3027999999998263e-05, 1.2541000000001329e-05, 1.3570000000000942e-05, 1.2568999999997e-05, 1.2583000000000039e-05, 1.254099999999786e-05, 1.2542000000000803e-05, 1.2555000000000899e-05, 1.3055000000001399e-05, 1.3027999999998263e-05, 1.3042000000001303e-05, 1.3069000000000969e-05, 1.2542000000000803e-05, 1.2500000000002093e-05, 1.3110999999999678e-05, 1.2556000000000372e-05, 1.3041000000001829e-05, 1.2528000000001233e-05]</msg>
<status status="PASS" starttime="20201112 09:54:37.216" endtime="20201112 09:54:37.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.212" endtime="20201112 09:54:37.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.221" endtime="20201112 09:54:37.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:37.225" endtime="20201112 09:54:37.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.223" endtime="20201112 09:54:37.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.220" endtime="20201112 09:54:37.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.854" endtime="20201112 09:54:37.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.854" endtime="20201112 09:54:37.245"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.254" endtime="20201112 09:54:37.272"></status>
</kw>
<msg timestamp="20201112 09:54:37.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.252" endtime="20201112 09:54:37.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.273" endtime="20201112 09:54:37.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.276" endtime="20201112 09:54:37.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.250" endtime="20201112 09:54:37.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.248" endtime="20201112 09:54:37.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.285" endtime="20201112 09:54:37.571"></status>
</kw>
<msg timestamp="20201112 09:54:37.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0203895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:37.283" endtime="20201112 09:54:37.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0203895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:37.575" endtime="20201112 09:54:37.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.583" endtime="20201112 09:54:37.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.281" endtime="20201112 09:54:37.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.279" endtime="20201112 09:54:37.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:37.589" level="INFO">${RESULT} = [{'time': 0.020403542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4041999999998833e-05, 'source_diff': 1.4041999999998833e-05}, {'time': 0.020419542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:37.586" endtime="20201112 09:54:37.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:37.603" level="INFO">${ACCURACY} = {'time': [0.020403542, 0.020419542, 0.020437556, 0.020455222, 0.020472542, 0.020491681, 0.020509292, 0.020527486, 0.020546667, 0.020563236, 0.020579694, 0.020598236, 0.020615306, 0.020632375, 0.020652...</msg>
<status status="PASS" starttime="20201112 09:54:37.590" endtime="20201112 09:54:37.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.607" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 09:54:37.606" endtime="20201112 09:54:37.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.610" level="INFO">VALUE: [1.4041999999998833e-05, 1.3541999999998333e-05, 1.3569999999997473e-05, 1.404099999999936e-05, 1.4055999999998403e-05, 1.4070000000001442e-05, 1.3541999999998333e-05, 1.3555000000001899e-05, 1.4542000000002803e-05, 1.355499999999843e-05, 1.40689999999985e-05, 1.4027999999999263e-05, 1.4055999999998403e-05, 1.3542000000001803e-05, 1.4555999999998903e-05, 1.3555999999997903e-05, 1.3541999999998333e-05, 1.3542000000001803e-05, 1.4041999999998833e-05, 1.4056000000001873e-05, 1.3527999999998763e-05, 1.4042000000002303e-05, 1.3597000000000609e-05, 1.4070000000001442e-05, 1.3556000000001373e-05, 1.3555999999997903e-05, 1.405499999999893e-05, 1.354099999999886e-05, 1.40689999999985e-05, 1.454099999999986e-05, 1.3541000000002329e-05, 1.452700000000029e-05, 1.404099999999936e-05, 1.3555999999997903e-05, 1.355499999999843e-05, 1.3527999999998763e-05, 1.4028000000002733e-05, 1.404099999999936e-05, 1.3556000000001373e-05, 1.404099999999936e-05, 1.3556000000001373e-05, 1.3570000000000942e-05, 1.3541999999998333e-05, 1.4041000000002829e-05, 1.3486000000000054e-05, 1.4041999999998833e-05, 1.4568999999999e-05, 1.3527999999998763e-05, 1.4055000000002399e-05, 1.3556000000001373e-05]</msg>
<status status="PASS" starttime="20201112 09:54:37.608" endtime="20201112 09:54:37.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.604" endtime="20201112 09:54:37.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.613" endtime="20201112 09:54:37.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:37.617" endtime="20201112 09:54:37.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.615" endtime="20201112 09:54:37.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.612" endtime="20201112 09:54:37.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.246" endtime="20201112 09:54:37.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.246" endtime="20201112 09:54:37.638"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.646" endtime="20201112 09:54:37.663"></status>
</kw>
<msg timestamp="20201112 09:54:37.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.645" endtime="20201112 09:54:37.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.665" endtime="20201112 09:54:37.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.667" endtime="20201112 09:54:37.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.642" endtime="20201112 09:54:37.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.640" endtime="20201112 09:54:37.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.676" endtime="20201112 09:54:37.961"></status>
</kw>
<msg timestamp="20201112 09:54:37.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01976275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:37.675" endtime="20201112 09:54:37.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01976275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:37.965" endtime="20201112 09:54:37.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.974" endtime="20201112 09:54:37.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.672" endtime="20201112 09:54:37.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.671" endtime="20201112 09:54:37.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:37.980" level="INFO">${RESULT} = [{'time': 0.01976275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4541999999999333e-05, 'source_diff': 1.4541999999999333e-05}, {'time': 0.019781556, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:37.977" endtime="20201112 09:54:37.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:37.994" level="INFO">${ACCURACY} = {'time': [0.01976275, 0.019781556, 0.0198015, 0.019819583, 0.019838625, 0.019858819, 0.019879958, 0.019896903, 0.019913903, 0.019932625, 0.019952764, 0.019972708, 0.019990958, 0.020008903, 0.020026986...</msg>
<status status="PASS" starttime="20201112 09:54:37.981" endtime="20201112 09:54:37.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.999" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 09:54:37.998" endtime="20201112 09:54:37.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.001" level="INFO">VALUE: [1.4541999999999333e-05, 1.4541999999999333e-05, 1.4555999999998903e-05, 1.5069000000002969e-05, 1.4527999999999763e-05, 1.505499999999993e-05, 1.5569e-05, 1.4570000000001943e-05, 1.4527999999999763e-05, 1.5055999999999403e-05, 1.4556000000002373e-05, 1.455499999999943e-05, 1.504100000000036e-05, 1.4542000000002803e-05, 1.505499999999993e-05, 1.454099999999986e-05, 1.4541999999999333e-05, 1.502699999999732e-05, 1.4555999999998903e-05, 1.5041999999999833e-05, 1.505499999999993e-05, 1.455499999999943e-05, 1.4568999999999e-05, 1.4556000000002373e-05, 1.5069999999998973e-05, 1.504100000000036e-05, 1.5055999999999403e-05, 1.5013999999997224e-05, 1.505499999999993e-05, 1.5041999999999833e-05, 1.5069000000002969e-05, 1.4542000000002803e-05, 1.455499999999943e-05, 1.4541999999999333e-05, 1.4555999999998903e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.455499999999943e-05, 1.5055999999999403e-05, 1.5070000000002443e-05, 1.5542000000000333e-05, 1.50689999999995e-05, 1.455499999999943e-05, 1.5069999999998973e-05, 1.4514000000000193e-05, 1.5055999999999403e-05, 1.5055999999999403e-05, 1.505499999999993e-05, 1.5069000000002969e-05, 1.505499999999993e-05]</msg>
<status status="PASS" starttime="20201112 09:54:38.000" endtime="20201112 09:54:38.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.995" endtime="20201112 09:54:38.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.005" endtime="20201112 09:54:38.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.008" endtime="20201112 09:54:38.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.007" endtime="20201112 09:54:38.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.003" endtime="20201112 09:54:38.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.639" endtime="20201112 09:54:38.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.638" endtime="20201112 09:54:38.029"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.038" endtime="20201112 09:54:38.054"></status>
</kw>
<msg timestamp="20201112 09:54:38.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.036" endtime="20201112 09:54:38.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.055" endtime="20201112 09:54:38.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.058" endtime="20201112 09:54:38.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.034" endtime="20201112 09:54:38.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.032" endtime="20201112 09:54:38.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.068" endtime="20201112 09:54:38.354"></status>
</kw>
<msg timestamp="20201112 09:54:38.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01982675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:38.066" endtime="20201112 09:54:38.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01982675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:38.358" endtime="20201112 09:54:38.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.366" endtime="20201112 09:54:38.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.064" endtime="20201112 09:54:38.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.062" endtime="20201112 09:54:38.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.373" level="INFO">${RESULT} = [{'time': 0.01982675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5555999999999903e-05, 'source_diff': 1.5555999999999903e-05}, {'time': 0.019844958, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:38.370" endtime="20201112 09:54:38.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:38.386" level="INFO">${ACCURACY} = {'time': [0.01982675, 0.019844958, 0.019864889, 0.019885875, 0.019903958, 0.019923083, 0.019942014, 0.019963069, 0.019982042, 0.020000764, 0.020022028, 0.020041139, 0.020060097, 0.020079958, 0.0200988...</msg>
<status status="PASS" starttime="20201112 09:54:38.374" endtime="20201112 09:54:38.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.391" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 09:54:38.390" endtime="20201112 09:54:38.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.393" level="INFO">VALUE: [1.5555999999999903e-05, 1.563899999999785e-05, 1.6042000000000833e-05, 1.5528000000000763e-05, 1.5569e-05, 1.5569e-05, 1.6056000000000403e-05, 1.554100000000086e-05, 1.6083999999999543e-05, 1.5528000000000763e-05, 1.5555999999999903e-05, 1.6527999999998294e-05, 1.558299999999957e-05, 1.604099999999789e-05, 1.559700000000261e-05, 1.552700000000129e-05, 1.559699999999914e-05, 1.561100000000218e-05, 1.554100000000086e-05, 1.6028000000001263e-05, 1.5555999999999903e-05, 1.554100000000086e-05, 1.554099999999739e-05, 1.6056000000000403e-05, 1.5569999999999473e-05, 1.5542000000000333e-05, 1.6013999999998224e-05, 1.60690000000005e-05, 1.605499999999746e-05, 1.6056000000000403e-05, 1.6013999999998224e-05, 1.5542000000000333e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.5541999999996864e-05, 1.655500000000143e-05, 1.555500000000043e-05, 1.60690000000005e-05, 1.6069999999999973e-05, 1.5569999999999473e-05, 1.6056000000000403e-05, 1.6056000000000403e-05, 1.601299999999875e-05, 1.605500000000093e-05, 1.559700000000261e-05, 1.605499999999746e-05, 1.5500000000001624e-05, 1.6069999999999973e-05, 1.5555999999999903e-05, 1.6014000000001694e-05]</msg>
<status status="PASS" starttime="20201112 09:54:38.392" endtime="20201112 09:54:38.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.387" endtime="20201112 09:54:38.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.396" endtime="20201112 09:54:38.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.400" endtime="20201112 09:54:38.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.398" endtime="20201112 09:54:38.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.395" endtime="20201112 09:54:38.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.030" endtime="20201112 09:54:38.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.030" endtime="20201112 09:54:38.421"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.429" endtime="20201112 09:54:38.447"></status>
</kw>
<msg timestamp="20201112 09:54:38.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.428" endtime="20201112 09:54:38.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.448" endtime="20201112 09:54:38.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.451" endtime="20201112 09:54:38.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.425" endtime="20201112 09:54:38.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.423" endtime="20201112 09:54:38.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.460" endtime="20201112 09:54:38.746"></status>
</kw>
<msg timestamp="20201112 09:54:38.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.459" endtime="20201112 09:54:38.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.751" endtime="20201112 09:54:38.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.759" endtime="20201112 09:54:38.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.456" endtime="20201112 09:54:38.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.455" endtime="20201112 09:54:38.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.765" level="INFO">${RESULT} = [{'time': 0.019775069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.702699999999932e-05, 'source_diff': 1.702699999999932e-05}, {'time': 0.019795958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:38.762" endtime="20201112 09:54:38.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:38.779" level="INFO">${ACCURACY} = {'time': [0.019775069, 0.019795958, 0.019817889, 0.019837014, 0.019858083, 0.019878972, 0.019898083, 0.019918083, 0.019937347, 0.019957194, 0.019978042, 0.019997028, 0.020018167, 0.020039056, 0.020060...</msg>
<status status="PASS" starttime="20201112 09:54:38.766" endtime="20201112 09:54:38.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.783" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 09:54:38.782" endtime="20201112 09:54:38.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.786" level="INFO">VALUE: [1.702699999999932e-05, 1.655499999999796e-05, 1.6556000000000903e-05, 1.6542000000001333e-05, 1.705499999999846e-05, 1.655500000000143e-05, 1.655500000000143e-05, 1.652699999999882e-05, 1.6986000000000084e-05, 1.659700000000014e-05, 1.6542000000001333e-05, 1.6458999999999918e-05, 1.6527999999998294e-05, 1.7070000000000973e-05, 1.7056000000001403e-05, 1.7056000000001403e-05, 1.7028000000002264e-05, 1.6556000000000903e-05, 1.6556000000000903e-05, 1.6541999999997864e-05, 1.709699999999717e-05, 1.6513999999998724e-05, 1.7041999999998364e-05, 1.7041999999998364e-05, 1.705499999999846e-05, 1.709700000000064e-05, 1.7084000000000543e-05, 1.706899999999803e-05, 1.7027999999998794e-05, 1.705499999999846e-05, 1.655500000000143e-05, 1.705500000000193e-05, 1.705499999999846e-05, 1.652699999999882e-05, 1.702699999999932e-05, 1.7055999999997934e-05, 1.7486000000000584e-05, 1.705499999999846e-05, 1.654100000000186e-05, 1.705500000000193e-05, 1.654099999999839e-05, 1.7055999999997934e-05, 1.6556000000000903e-05, 1.7527999999999294e-05, 1.705500000000193e-05, 1.7542000000002334e-05, 1.6570000000000473e-05, 1.704100000000236e-05, 1.6527999999998294e-05, 1.7069999999997504e-05]</msg>
<status status="PASS" starttime="20201112 09:54:38.784" endtime="20201112 09:54:38.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.780" endtime="20201112 09:54:38.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.789" endtime="20201112 09:54:38.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.793" endtime="20201112 09:54:38.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.791" endtime="20201112 09:54:38.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.788" endtime="20201112 09:54:38.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.422" endtime="20201112 09:54:38.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.421" endtime="20201112 09:54:38.813"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.822" endtime="20201112 09:54:38.839"></status>
</kw>
<msg timestamp="20201112 09:54:38.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.821" endtime="20201112 09:54:38.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.841" endtime="20201112 09:54:38.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.843" endtime="20201112 09:54:38.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.818" endtime="20201112 09:54:38.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.816" endtime="20201112 09:54:38.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.853" endtime="20201112 09:54:39.139"></status>
</kw>
<msg timestamp="20201112 09:54:39.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.852" endtime="20201112 09:54:39.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.144" endtime="20201112 09:54:39.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.152" endtime="20201112 09:54:39.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.849" endtime="20201112 09:54:39.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.847" endtime="20201112 09:54:39.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.158" level="INFO">${RESULT} = [{'time': 0.019853736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8027999999999794e-05, 'source_diff': 1.8027999999999794e-05}, {'time': 0.019877819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:39.155" endtime="20201112 09:54:39.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:39.172" level="INFO">${ACCURACY} = {'time': [0.019853736, 0.019877819, 0.019901375, 0.019925389, 0.01994575, 0.019966444, 0.019988708, 0.020012819, 0.020035444, 0.020058389, 0.020079389, 0.020100708, 0.020124389, 0.020146472, 0.0201673...</msg>
<status status="PASS" starttime="20201112 09:54:39.159" endtime="20201112 09:54:39.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.176" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 09:54:39.175" endtime="20201112 09:54:39.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.179" level="INFO">VALUE: [1.8027999999999794e-05, 1.80690000000025e-05, 1.7541999999998864e-05, 1.8070000000001973e-05, 1.7556000000001903e-05, 1.754099999999939e-05, 1.80690000000025e-05, 1.854100000000039e-05, 1.804099999999989e-05, 1.7555999999998434e-05, 1.8055999999998934e-05, 1.802699999999685e-05, 1.8041999999999364e-05, 1.806899999999903e-05, 1.8041999999999364e-05, 1.7541999999998864e-05, 1.7556000000001903e-05, 1.804099999999989e-05, 1.7556000000001903e-05, 1.8041999999999364e-05, 1.8098000000001113e-05, 1.7569000000002e-05, 1.7500000000000154e-05, 1.8098000000001113e-05, 1.754099999999939e-05, 1.8055999999998934e-05, 1.7556000000001903e-05, 1.8041999999999364e-05, 1.755500000000243e-05, 1.7541999999998864e-05, 1.8027999999999794e-05, 1.8055999999998934e-05, 1.8528000000000294e-05, 1.8027999999999794e-05, 1.8041999999999364e-05, 1.7513999999999724e-05, 1.8069999999998504e-05, 1.8041999999999364e-05, 1.755499999999896e-05, 1.7542000000002334e-05, 1.8069999999998504e-05, 1.8069999999998504e-05, 1.8555999999999434e-05, 1.809699999999817e-05, 1.7513999999999724e-05, 1.8070000000001973e-05, 1.8000000000000654e-05, 1.7555999999998434e-05, 1.806899999999903e-05, 1.7513999999999724e-05]</msg>
<status status="PASS" starttime="20201112 09:54:39.177" endtime="20201112 09:54:39.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.173" endtime="20201112 09:54:39.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.182" endtime="20201112 09:54:39.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.186" endtime="20201112 09:54:39.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.184" endtime="20201112 09:54:39.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.181" endtime="20201112 09:54:39.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.814" endtime="20201112 09:54:39.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.814" endtime="20201112 09:54:39.206"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.215" endtime="20201112 09:54:39.232"></status>
</kw>
<msg timestamp="20201112 09:54:39.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.213" endtime="20201112 09:54:39.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.234" endtime="20201112 09:54:39.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.236" endtime="20201112 09:54:39.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.211" endtime="20201112 09:54:39.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.209" endtime="20201112 09:54:39.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.246" endtime="20201112 09:54:39.532"></status>
</kw>
<msg timestamp="20201112 09:54:39.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.244" endtime="20201112 09:54:39.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.537" endtime="20201112 09:54:39.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.545" endtime="20201112 09:54:39.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.242" endtime="20201112 09:54:39.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.240" endtime="20201112 09:54:39.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.551" level="INFO">${RESULT} = [{'time': 0.019736083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.906900000000003e-05, 'source_diff': 1.906900000000003e-05}, {'time': 0.019758889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:39.548" endtime="20201112 09:54:39.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:39.566" level="INFO">${ACCURACY} = {'time': [0.019736083, 0.019758889, 0.019781083, 0.019805208, 0.019828958, 0.019850139, 0.019873958, 0.019896222, 0.019920097, 0.019943208, 0.01996825, 0.019991778, 0.020012917, 0.020034861, 0.0200579...</msg>
<status status="PASS" starttime="20201112 09:54:39.552" endtime="20201112 09:54:39.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.570" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 09:54:39.569" endtime="20201112 09:54:39.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.573" level="INFO">VALUE: [1.906900000000003e-05, 1.861100000000171e-05, 1.862500000000128e-05, 1.955500000000096e-05, 1.905500000000046e-05, 1.8541999999999864e-05, 1.855499999999996e-05, 1.905500000000046e-05, 1.905500000000046e-05, 1.902700000000132e-05, 1.95830000000001e-05, 1.9042000000000364e-05, 1.9042000000000364e-05, 1.9042000000000364e-05, 1.858300000000257e-05, 1.8555999999999434e-05, 1.8541999999999864e-05, 1.862500000000128e-05, 1.8541999999999864e-05, 1.8541999999999864e-05, 1.8528000000000294e-05, 1.8556000000002904e-05, 1.8541999999999864e-05, 1.856899999999953e-05, 1.9083999999999074e-05, 1.8541999999999864e-05, 1.855499999999996e-05, 1.855499999999996e-05, 1.9055999999999934e-05, 1.9556000000000434e-05, 1.8597999999998144e-05, 1.8500000000001154e-05, 1.9055999999999934e-05, 1.9513999999998255e-05, 1.855499999999996e-05, 1.90829999999996e-05, 1.9028000000000794e-05, 1.854100000000039e-05, 1.9055999999999934e-05, 1.9055999999999934e-05, 1.855499999999996e-05, 1.909699999999917e-05, 1.862500000000128e-05, 1.8514000000000724e-05, 1.9042000000000364e-05, 1.8555999999999434e-05, 1.855499999999996e-05, 1.9056000000003404e-05, 1.9541999999997395e-05, 1.912499999999831e-05]</msg>
<status status="PASS" starttime="20201112 09:54:39.571" endtime="20201112 09:54:39.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.567" endtime="20201112 09:54:39.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.576" endtime="20201112 09:54:39.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.580" endtime="20201112 09:54:39.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.578" endtime="20201112 09:54:39.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.575" endtime="20201112 09:54:39.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.207" endtime="20201112 09:54:39.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.207" endtime="20201112 09:54:39.600"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.609" endtime="20201112 09:54:39.627"></status>
</kw>
<msg timestamp="20201112 09:54:39.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.607" endtime="20201112 09:54:39.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.629" endtime="20201112 09:54:39.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.631" endtime="20201112 09:54:39.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.605" endtime="20201112 09:54:39.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.603" endtime="20201112 09:54:39.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.641" endtime="20201112 09:54:39.927"></status>
</kw>
<msg timestamp="20201112 09:54:39.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019862514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.640" endtime="20201112 09:54:39.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019862514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.931" endtime="20201112 09:54:39.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.939" endtime="20201112 09:54:39.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.637" endtime="20201112 09:54:39.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.635" endtime="20201112 09:54:39.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.946" level="INFO">${RESULT} = [{'time': 0.019882569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.005499999999799e-05, 'source_diff': 2.005499999999799e-05}, {'time': 0.019904556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:39.943" endtime="20201112 09:54:39.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:39.959" level="INFO">${ACCURACY} = {'time': [0.019882569, 0.019904556, 0.019928458, 0.019950653, 0.019975444, 0.019998653, 0.0200215, 0.020043681, 0.020068444, 0.020093875, 0.020118528, 0.020142778, 0.020168653, 0.020191458, 0.02021554...</msg>
<status status="PASS" starttime="20201112 09:54:39.947" endtime="20201112 09:54:39.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.964" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 09:54:39.963" endtime="20201112 09:54:39.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.966" level="INFO">VALUE: [2.005499999999799e-05, 1.9556000000000434e-05, 1.956900000000053e-05, 1.9583999999999574e-05, 2.004099999999842e-05, 2.0070000000000504e-05, 1.9542000000000864e-05, 2.0084000000000074e-05, 2.005500000000146e-05, 1.95830000000001e-05, 2.0070000000000504e-05, 2.0070000000000504e-05, 2.0056000000000934e-05, 1.955499999999749e-05, 2.0041999999997895e-05, 2.0570000000001004e-05, 1.9527999999997825e-05, 2.011099999999974e-05, 1.955500000000096e-05, 2.005500000000146e-05, 2.0055999999997465e-05, 2.009700000000017e-05, 1.9541999999997395e-05, 2.0056000000000934e-05, 1.955500000000096e-05, 2.0056000000000934e-05, 2.0137999999999406e-05, 1.9542000000000864e-05, 1.961099999999924e-05, 1.9556000000000434e-05, 2.061100000000024e-05, 1.9542000000000864e-05, 1.9513999999998255e-05, 2.0097999999999644e-05, 1.955500000000096e-05, 1.9485999999999115e-05, 1.9556000000000434e-05, 1.954099999999792e-05, 1.952699999999835e-05, 2.054099999999892e-05, 2.012499999999931e-05, 2.005500000000146e-05, 2.0056000000000934e-05, 1.954100000000139e-05, 2.004099999999842e-05, 2.006900000000103e-05, 2.0056000000000934e-05, 1.9541999999997395e-05, 2.00830000000006e-05, 1.955500000000096e-05]</msg>
<status status="PASS" starttime="20201112 09:54:39.965" endtime="20201112 09:54:39.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.960" endtime="20201112 09:54:39.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.970" endtime="20201112 09:54:39.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.973" endtime="20201112 09:54:39.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.972" endtime="20201112 09:54:39.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.968" endtime="20201112 09:54:39.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.601" endtime="20201112 09:54:39.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.601" endtime="20201112 09:54:39.994"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.003" endtime="20201112 09:54:40.020"></status>
</kw>
<msg timestamp="20201112 09:54:40.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.001" endtime="20201112 09:54:40.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.022" endtime="20201112 09:54:40.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.024" endtime="20201112 09:54:40.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.998" endtime="20201112 09:54:40.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.996" endtime="20201112 09:54:40.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.034" endtime="20201112 09:54:40.320"></status>
</kw>
<msg timestamp="20201112 09:54:40.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.032" endtime="20201112 09:54:40.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.324" endtime="20201112 09:54:40.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.332" endtime="20201112 09:54:40.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.030" endtime="20201112 09:54:40.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.028" endtime="20201112 09:54:40.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.339" level="INFO">${RESULT} = [{'time': 0.019823986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0999999999996716e-05, 'source_diff': 2.0999999999996716e-05}, {'time': 0.019849806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:40.335" endtime="20201112 09:54:40.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:40.352" level="INFO">${ACCURACY} = {'time': [0.019823986, 0.019849806, 0.019873944, 0.019897972, 0.019921056, 0.019944819, 0.01996875, 0.019992944, 0.020020139, 0.020045139, 0.020070069, 0.020094139, 0.020118097, 0.020142764, 0.0201690...</msg>
<status status="PASS" starttime="20201112 09:54:40.340" endtime="20201112 09:54:40.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.357" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 09:54:40.356" endtime="20201112 09:54:40.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.359" level="INFO">VALUE: [2.0999999999996716e-05, 2.0556000000001434e-05, 2.105500000000246e-05, 2.106899999999856e-05, 2.1041999999998895e-05, 2.105499999999899e-05, 2.0542000000001864e-05, 2.055499999999849e-05, 2.1555999999998965e-05, 2.1055999999998465e-05, 2.054099999999892e-05, 2.1013999999999755e-05, 2.055500000000196e-05, 2.1041999999998895e-05, 2.1013999999999755e-05, 2.0556000000001434e-05, 2.054100000000239e-05, 2.106900000000203e-05, 2.1042000000002364e-05, 2.0542000000001864e-05, 2.056900000000153e-05, 2.055499999999849e-05, 2.1041999999998895e-05, 2.106900000000203e-05, 2.1027999999999325e-05, 2.05830000000011e-05, 2.056899999999806e-05, 2.058299999999763e-05, 2.0542000000001864e-05, 2.0556000000001434e-05, 2.0555999999997965e-05, 2.1055999999998465e-05, 2.0555999999997965e-05, 2.054100000000239e-05, 2.054100000000239e-05, 2.1055999999998465e-05, 2.154099999999992e-05, 2.111100000000074e-05, 2.105500000000246e-05, 2.1042000000002364e-05, 2.1041999999998895e-05, 2.161100000000124e-05, 2.1055999999998465e-05, 2.0584000000000574e-05, 2.105500000000246e-05, 2.0556000000001434e-05, 2.058299999999763e-05, 2.0486000000000115e-05, 2.055499999999849e-05, 2.1028000000002794e-05]</msg>
<status status="PASS" starttime="20201112 09:54:40.358" endtime="20201112 09:54:40.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.353" endtime="20201112 09:54:40.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.363" endtime="20201112 09:54:40.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.366" endtime="20201112 09:54:40.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.365" endtime="20201112 09:54:40.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.361" endtime="20201112 09:54:40.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.995" endtime="20201112 09:54:40.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.994" endtime="20201112 09:54:40.387"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.395" endtime="20201112 09:54:40.413"></status>
</kw>
<msg timestamp="20201112 09:54:40.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.394" endtime="20201112 09:54:40.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.414" endtime="20201112 09:54:40.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.417" endtime="20201112 09:54:40.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.391" endtime="20201112 09:54:40.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.389" endtime="20201112 09:54:40.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.427" endtime="20201112 09:54:40.713"></status>
</kw>
<msg timestamp="20201112 09:54:40.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.425" endtime="20201112 09:54:40.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.717" endtime="20201112 09:54:40.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.725" endtime="20201112 09:54:40.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.423" endtime="20201112 09:54:40.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.421" endtime="20201112 09:54:40.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.732" level="INFO">${RESULT} = [{'time': 0.019697111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.20969999999987e-05, 'source_diff': 2.20969999999987e-05}, {'time': 0.019723056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:40.728" endtime="20201112 09:54:40.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:40.745" level="INFO">${ACCURACY} = {'time': [0.019697111, 0.019723056, 0.019748403, 0.019772306, 0.019799194, 0.019824028, 0.019850208, 0.019876083, 0.019901306, 0.019927403, 0.019953333, 0.019977153, 0.020004153, 0.020029236, 0.020055...</msg>
<status status="PASS" starttime="20201112 09:54:40.733" endtime="20201112 09:54:40.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.750" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 09:54:40.749" endtime="20201112 09:54:40.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.752" level="INFO">VALUE: [2.20969999999987e-05, 2.2083999999998605e-05, 2.1570000000002004e-05, 2.1569999999998535e-05, 2.1500000000000685e-05, 2.1570000000002004e-05, 2.155499999999949e-05, 2.1999999999997716e-05, 2.2084000000002074e-05, 2.2041999999999895e-05, 2.204100000000042e-05, 2.1556000000002434e-05, 2.1541999999999395e-05, 2.155499999999949e-05, 2.1555999999998965e-05, 2.1555999999998965e-05, 2.155499999999949e-05, 2.161100000000124e-05, 2.1556000000002434e-05, 2.2041999999999895e-05, 2.1556000000002434e-05, 2.1541999999999395e-05, 2.2055999999999465e-05, 2.155499999999949e-05, 2.2041999999999895e-05, 2.154099999999992e-05, 2.2028000000000325e-05, 2.155499999999949e-05, 2.2542000000000395e-05, 2.1569999999998535e-05, 2.2055999999999465e-05, 2.154099999999992e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.2083999999998605e-05, 2.1527999999999825e-05, 2.2583999999999105e-05, 2.204100000000042e-05, 2.208299999999913e-05, 2.155499999999949e-05, 2.155500000000296e-05, 2.155499999999949e-05, 2.2514000000001255e-05, 2.2526999999997882e-05, 2.155500000000296e-05, 2.2541999999996926e-05, 2.2055999999999465e-05, 2.1583999999998105e-05, 2.205499999999999e-05]</msg>
<status status="PASS" starttime="20201112 09:54:40.751" endtime="20201112 09:54:40.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.746" endtime="20201112 09:54:40.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.759" endtime="20201112 09:54:40.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.763" endtime="20201112 09:54:40.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.761" endtime="20201112 09:54:40.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.758" endtime="20201112 09:54:40.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.388" endtime="20201112 09:54:40.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.387" endtime="20201112 09:54:40.784"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.792" endtime="20201112 09:54:40.809"></status>
</kw>
<msg timestamp="20201112 09:54:40.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.791" endtime="20201112 09:54:40.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.811" endtime="20201112 09:54:40.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.813" endtime="20201112 09:54:40.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.788" endtime="20201112 09:54:40.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.786" endtime="20201112 09:54:40.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.823" endtime="20201112 09:54:41.109"></status>
</kw>
<msg timestamp="20201112 09:54:41.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01979225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:40.822" endtime="20201112 09:54:41.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01979225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:41.113" endtime="20201112 09:54:41.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.121" endtime="20201112 09:54:41.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.819" endtime="20201112 09:54:41.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.817" endtime="20201112 09:54:41.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.128" level="INFO">${RESULT} = [{'time': 0.01979225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.256900000000006e-05, 'source_diff': 2.256900000000006e-05}, {'time': 0.019819111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:41.124" endtime="20201112 09:54:41.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:41.142" level="INFO">${ACCURACY} = {'time': [0.01979225, 0.019819111, 0.019848125, 0.019873194, 0.019901556, 0.01992825, 0.019956319, 0.019983319, 0.020012319, 0.020039417, 0.020068222, 0.020094389, 0.020119556, 0.020145625, 0.02017445...</msg>
<status status="PASS" starttime="20201112 09:54:41.129" endtime="20201112 09:54:41.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.146" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 09:54:41.145" endtime="20201112 09:54:41.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.149" level="INFO">VALUE: [2.256900000000006e-05, 2.3028000000001325e-05, 2.3056000000000465e-05, 2.255500000000049e-05, 2.3042000000000895e-05, 2.3056000000000465e-05, 2.254100000000092e-05, 2.305500000000099e-05, 2.305500000000099e-05, 2.3083999999999605e-05, 2.304100000000142e-05, 2.2555999999999965e-05, 2.3070000000000035e-05, 2.35970000000002e-05, 2.3040999999997952e-05, 2.2555999999999965e-05, 2.2570000000003004e-05, 2.3028000000001325e-05, 2.256900000000006e-05, 2.306900000000056e-05, 2.305500000000099e-05, 2.254100000000092e-05, 2.3068999999997092e-05, 2.305500000000099e-05, 2.2556000000003434e-05, 2.2542000000000395e-05, 2.2555999999999965e-05, 2.3013999999998286e-05, 2.3056000000000465e-05, 2.3042000000000895e-05, 2.308300000000013e-05, 2.3056000000000465e-05, 2.3542000000001395e-05, 2.2569999999999535e-05, 2.3556000000000965e-05, 2.3042000000000895e-05, 2.256900000000006e-05, 2.306900000000056e-05, 2.3542000000001395e-05, 2.3013999999998286e-05, 2.304100000000142e-05, 2.25969999999992e-05, 2.3056000000000465e-05, 2.255500000000049e-05, 2.3042000000000895e-05, 2.2985999999999146e-05, 2.3040999999997952e-05, 2.2514000000001255e-05, 2.3056000000000465e-05, 2.2542000000000395e-05]</msg>
<status status="PASS" starttime="20201112 09:54:41.147" endtime="20201112 09:54:41.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.143" endtime="20201112 09:54:41.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.153" endtime="20201112 09:54:41.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.156" endtime="20201112 09:54:41.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.155" endtime="20201112 09:54:41.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.151" endtime="20201112 09:54:41.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.784" endtime="20201112 09:54:41.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.784" endtime="20201112 09:54:41.177"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.186" endtime="20201112 09:54:41.203"></status>
</kw>
<msg timestamp="20201112 09:54:41.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.184" endtime="20201112 09:54:41.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.205" endtime="20201112 09:54:41.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.207" endtime="20201112 09:54:41.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.182" endtime="20201112 09:54:41.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.180" endtime="20201112 09:54:41.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.217" endtime="20201112 09:54:41.502"></status>
</kw>
<msg timestamp="20201112 09:54:41.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.216" endtime="20201112 09:54:41.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.506" endtime="20201112 09:54:41.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.514" endtime="20201112 09:54:41.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.213" endtime="20201112 09:54:41.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.211" endtime="20201112 09:54:41.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.521" level="INFO">${RESULT} = [{'time': 0.019858042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3556000000000965e-05, 'source_diff': 2.3556000000000965e-05}, {'time': 0.019887792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:41.518" endtime="20201112 09:54:41.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:41.534" level="INFO">${ACCURACY} = {'time': [0.019858042, 0.019887792, 0.019913667, 0.019940861, 0.019969986, 0.019999056, 0.020025736, 0.020055694, 0.020081889, 0.020110931, 0.020139875, 0.020168944, 0.020196819, 0.020226083, 0.020254...</msg>
<status status="PASS" starttime="20201112 09:54:41.522" endtime="20201112 09:54:41.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.539" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 09:54:41.538" endtime="20201112 09:54:41.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.541" level="INFO">VALUE: [2.3556000000000965e-05, 2.4056000000001465e-05, 2.3556000000000965e-05, 2.355500000000149e-05, 2.4013999999999286e-05, 2.4042000000001895e-05, 2.3541999999997926e-05, 2.4068999999998092e-05, 2.3555999999997496e-05, 2.3541999999997926e-05, 2.4028000000002325e-05, 2.3972000000000576e-05, 2.355500000000149e-05, 2.3568999999997592e-05, 2.3540999999998452e-05, 2.3512999999999312e-05, 2.4068999999998092e-05, 2.405500000000199e-05, 2.4040999999998952e-05, 2.4026999999999382e-05, 2.4041999999998426e-05, 2.4069999999997566e-05, 2.3542000000001395e-05, 2.3499999999999216e-05, 2.363899999999891e-05, 2.4041999999998426e-05, 2.35970000000002e-05, 2.3542000000001395e-05, 2.4041999999998426e-05, 2.4014000000002755e-05, 2.397300000000005e-05, 2.3499999999999216e-05, 2.4070000000001035e-05, 2.3556000000000965e-05, 2.355500000000149e-05, 2.4056000000001465e-05, 2.3541999999997926e-05, 2.4042000000001895e-05, 2.3554999999998022e-05, 2.456900000000206e-05, 2.3584000000000105e-05, 2.354100000000192e-05, 2.405500000000199e-05, 2.4054999999998522e-05, 2.4056000000001465e-05, 2.3556000000000965e-05, 2.3554999999998022e-05, 2.406900000000156e-05, 2.3542000000001395e-05, 2.3556000000000965e-05]</msg>
<status status="PASS" starttime="20201112 09:54:41.540" endtime="20201112 09:54:41.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.535" endtime="20201112 09:54:41.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.545" endtime="20201112 09:54:41.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.548" endtime="20201112 09:54:41.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.547" endtime="20201112 09:54:41.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.543" endtime="20201112 09:54:41.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.178" endtime="20201112 09:54:41.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.178" endtime="20201112 09:54:41.569"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.578" endtime="20201112 09:54:41.595"></status>
</kw>
<msg timestamp="20201112 09:54:41.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.576" endtime="20201112 09:54:41.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.596" endtime="20201112 09:54:41.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.599" endtime="20201112 09:54:41.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.574" endtime="20201112 09:54:41.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.572" endtime="20201112 09:54:41.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.609" endtime="20201112 09:54:41.893"></status>
</kw>
<msg timestamp="20201112 09:54:41.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.607" endtime="20201112 09:54:41.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.897" endtime="20201112 09:54:41.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.905" endtime="20201112 09:54:41.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.605" endtime="20201112 09:54:41.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.603" endtime="20201112 09:54:41.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.912" level="INFO">${RESULT} = [{'time': 0.019855222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4554999999999022e-05, 'source_diff': 2.4554999999999022e-05}, {'time': 0.019882542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:41.909" endtime="20201112 09:54:41.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:41.925" level="INFO">${ACCURACY} = {'time': [0.019855222, 0.019882542, 0.019910306, 0.019938236, 0.019966653, 0.019995375, 0.020025236, 0.020052431, 0.020081444, 0.020111319, 0.020141681, 0.020170514, 0.020198333, 0.020228694, 0.020257...</msg>
<status status="PASS" starttime="20201112 09:54:41.913" endtime="20201112 09:54:41.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.930" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 09:54:41.929" endtime="20201112 09:54:41.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.932" level="INFO">VALUE: [2.4554999999999022e-05, 2.5041999999999426e-05, 2.5069999999998566e-05, 2.455500000000249e-05, 2.50970000000017e-05, 2.4541999999998926e-05, 2.4554999999999022e-05, 2.5055999999998996e-05, 2.5054999999999522e-05, 2.5068999999999092e-05, 2.5556000000002965e-05, 2.5055999999998996e-05, 2.4568999999998592e-05, 2.5499999999997747e-05, 2.5042000000002895e-05, 2.4570000000001535e-05, 2.4569999999998066e-05, 2.462500000000034e-05, 2.4555999999998496e-05, 2.461100000000077e-05, 2.5568999999999592e-05, 2.5041999999999426e-05, 2.461100000000077e-05, 2.456900000000206e-05, 2.5027999999999856e-05, 2.5055999999998996e-05, 2.5555000000000022e-05, 2.4540999999999452e-05, 2.4556000000001965e-05, 2.4527999999999356e-05, 2.506900000000256e-05, 2.5056000000002465e-05, 2.5527999999996887e-05, 2.4568999999998592e-05, 2.4541999999998926e-05, 2.5014000000000286e-05, 2.4568999999998592e-05, 2.5055999999998996e-05, 2.5082999999998662e-05, 2.4555999999998496e-05, 2.50970000000017e-05, 2.4568999999998592e-05, 2.5027999999999856e-05, 2.50970000000017e-05, 2.45970000000012e-05, 2.4542000000002395e-05, 2.4569999999998066e-05, 2.4554999999999022e-05, 2.5096999999998232e-05, 2.455500000000249e-05]</msg>
<status status="PASS" starttime="20201112 09:54:41.931" endtime="20201112 09:54:41.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.926" endtime="20201112 09:54:41.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.936" endtime="20201112 09:54:41.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.939" endtime="20201112 09:54:41.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.937" endtime="20201112 09:54:41.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.934" endtime="20201112 09:54:41.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.570" endtime="20201112 09:54:41.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.569" endtime="20201112 09:54:41.960"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.968" endtime="20201112 09:54:41.986"></status>
</kw>
<msg timestamp="20201112 09:54:41.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.967" endtime="20201112 09:54:41.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.988" endtime="20201112 09:54:41.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.990" endtime="20201112 09:54:41.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.964" endtime="20201112 09:54:41.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.962" endtime="20201112 09:54:41.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.000" endtime="20201112 09:54:42.285"></status>
</kw>
<msg timestamp="20201112 09:54:42.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:41.999" endtime="20201112 09:54:42.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:42.289" endtime="20201112 09:54:42.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.298" endtime="20201112 09:54:42.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.996" endtime="20201112 09:54:42.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.994" endtime="20201112 09:54:42.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:42.304" level="INFO">${RESULT} = [{'time': 0.019745069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5568999999999592e-05, 'source_diff': 2.5568999999999592e-05}, {'time': 0.019776056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:42.301" endtime="20201112 09:54:42.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:42.318" level="INFO">${ACCURACY} = {'time': [0.019745069, 0.019776056, 0.019804806, 0.019834889, 0.019864875, 0.019893208, 0.019922764, 0.019952153, 0.019983764, 0.020013014, 0.020040917, 0.020071153, 0.020100097, 0.020130778, 0.020159...</msg>
<status status="PASS" starttime="20201112 09:54:42.305" endtime="20201112 09:54:42.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.322" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 09:54:42.321" endtime="20201112 09:54:42.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.325" level="INFO">VALUE: [2.5568999999999592e-05, 2.6014000000001286e-05, 2.6042000000000426e-05, 2.5570000000002535e-05, 2.6042000000000426e-05, 2.6026999999997913e-05, 2.6042000000000426e-05, 2.5500000000001216e-05, 2.6014000000001286e-05, 2.6027999999997387e-05, 2.5555999999999496e-05, 2.6028000000000856e-05, 2.5555000000000022e-05, 2.5527999999996887e-05, 2.6069000000000092e-05, 2.5555999999999496e-05, 2.5582999999999162e-05, 2.6042000000000426e-05, 2.6055999999999996e-05, 2.6069000000000092e-05, 2.5986000000002146e-05, 2.6555000000001022e-05, 2.548700000000112e-05, 2.6069999999999566e-05, 2.5512999999997843e-05, 2.6028000000000856e-05, 2.6055999999999996e-05, 2.6069000000000092e-05, 2.5569999999999066e-05, 2.6013999999997817e-05, 2.6055999999999996e-05, 2.5541999999999926e-05, 2.562500000000134e-05, 2.5583999999998636e-05, 2.6055000000000522e-05, 2.5541999999999926e-05, 2.6069000000000092e-05, 2.5555000000000022e-05, 2.6055999999999996e-05, 2.5555000000000022e-05, 2.5528000000000356e-05, 2.5528000000000356e-05, 2.6096999999999232e-05, 2.6042000000000426e-05, 2.561100000000177e-05, 2.6042000000000426e-05, 2.5555000000000022e-05, 2.6096999999999232e-05, 2.5541999999999926e-05, 2.6055000000000522e-05]</msg>
<status status="PASS" starttime="20201112 09:54:42.323" endtime="20201112 09:54:42.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.319" endtime="20201112 09:54:42.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.328" endtime="20201112 09:54:42.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:42.332" endtime="20201112 09:54:42.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.330" endtime="20201112 09:54:42.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.327" endtime="20201112 09:54:42.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.961" endtime="20201112 09:54:42.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.960" endtime="20201112 09:54:42.353"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.361" endtime="20201112 09:54:42.379"></status>
</kw>
<msg timestamp="20201112 09:54:42.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.360" endtime="20201112 09:54:42.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.381" endtime="20201112 09:54:42.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.383" endtime="20201112 09:54:42.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.357" endtime="20201112 09:54:42.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.355" endtime="20201112 09:54:42.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.393" endtime="20201112 09:54:42.678"></status>
</kw>
<msg timestamp="20201112 09:54:42.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019807847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.391" endtime="20201112 09:54:42.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019807847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.682" endtime="20201112 09:54:42.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.690" endtime="20201112 09:54:42.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.389" endtime="20201112 09:54:42.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.387" endtime="20201112 09:54:42.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:42.697" level="INFO">${RESULT} = [{'time': 0.019834917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7070000000000566e-05, 'source_diff': 2.7070000000000566e-05}, {'time': 0.019865236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:42.693" endtime="20201112 09:54:42.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:42.711" level="INFO">${ACCURACY} = {'time': [0.019834917, 0.019865236, 0.019896167, 0.019926972, 0.019957042, 0.019986861, 0.020019111, 0.020050125, 0.020079861, 0.020112194, 0.020141875, 0.020172194, 0.020202125, 0.02023325, 0.0202640...</msg>
<status status="PASS" starttime="20201112 09:54:42.698" endtime="20201112 09:54:42.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.715" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 09:54:42.714" endtime="20201112 09:54:42.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.718" level="INFO">VALUE: [2.7070000000000566e-05, 2.7069000000001092e-05, 2.7027999999998387e-05, 2.7110999999999802e-05, 2.6556000000000496e-05, 2.7042000000001426e-05, 2.6541999999997457e-05, 2.6568999999997123e-05, 2.7042000000001426e-05, 2.6555000000001022e-05, 2.6556000000000496e-05, 2.7055000000001522e-05, 2.6556000000000496e-05, 2.7028000000001856e-05, 2.7054999999998053e-05, 2.6556000000000496e-05, 2.7000000000002716e-05, 2.6569000000000592e-05, 2.6985999999999677e-05, 2.7027999999998387e-05, 2.7042000000001426e-05, 2.7041000000001952e-05, 2.7054999999998053e-05, 2.7042000000001426e-05, 2.6556000000000496e-05, 2.6570000000000066e-05, 2.6540999999997983e-05, 2.7055000000001522e-05, 2.7054999999998053e-05, 2.6624999999998872e-05, 2.7042000000001426e-05, 2.6556000000000496e-05, 2.6556000000000496e-05, 2.7042000000001426e-05, 2.6569000000000592e-05, 2.7069000000001092e-05, 2.6555000000001022e-05, 2.7070000000000566e-05, 2.6542000000000926e-05, 2.7556000000001496e-05, 2.7082999999997193e-05, 2.7070000000000566e-05, 2.7570000000001066e-05, 2.6570000000000066e-05, 2.7055999999997526e-05, 2.7040999999998483e-05, 2.6555000000001022e-05, 2.7042000000001426e-05, 2.6542000000000926e-05, 2.6570000000000066e-05]</msg>
<status status="PASS" starttime="20201112 09:54:42.716" endtime="20201112 09:54:42.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.712" endtime="20201112 09:54:42.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.721" endtime="20201112 09:54:42.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:42.725" endtime="20201112 09:54:42.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.723" endtime="20201112 09:54:42.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.720" endtime="20201112 09:54:42.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.354" endtime="20201112 09:54:42.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.353" endtime="20201112 09:54:42.746"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.754" endtime="20201112 09:54:42.772"></status>
</kw>
<msg timestamp="20201112 09:54:42.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.753" endtime="20201112 09:54:42.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.773" endtime="20201112 09:54:42.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.776" endtime="20201112 09:54:42.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.750" endtime="20201112 09:54:42.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.748" endtime="20201112 09:54:42.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.786" endtime="20201112 09:54:43.070"></status>
</kw>
<msg timestamp="20201112 09:54:43.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.784" endtime="20201112 09:54:43.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.074" endtime="20201112 09:54:43.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.082" endtime="20201112 09:54:43.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.782" endtime="20201112 09:54:43.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.780" endtime="20201112 09:54:43.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.089" level="INFO">${RESULT} = [{'time': 0.019728458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7541000000002452e-05, 'source_diff': 2.7541000000002452e-05}, {'time': 0.019758597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:43.086" endtime="20201112 09:54:43.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:43.102" level="INFO">${ACCURACY} = {'time': [0.019728458, 0.019758597, 0.019792403, 0.019826278, 0.019856444, 0.019886681, 0.019917431, 0.019949611, 0.019982583, 0.020015611, 0.020046486, 0.020079556, 0.020112306, 0.02014625, 0.0201766...</msg>
<status status="PASS" starttime="20201112 09:54:43.090" endtime="20201112 09:54:43.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.107" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 09:54:43.106" endtime="20201112 09:54:43.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.109" level="INFO">VALUE: [2.7541000000002452e-05, 2.7554999999998553e-05, 2.8027999999999387e-05, 2.8027999999999387e-05, 2.7583000000001162e-05, 2.8069999999998096e-05, 2.7569999999997596e-05, 2.7541999999998457e-05, 2.7583000000001162e-05, 2.7541999999998457e-05, 2.8027999999999387e-05, 2.8041999999998957e-05, 2.8027999999999387e-05, 2.8000000000000247e-05, 2.7541999999998457e-05, 2.7514000000002786e-05, 2.7554999999998553e-05, 2.8083999999997666e-05, 2.8069000000002092e-05, 2.8040999999999483e-05, 2.8054999999999053e-05, 2.8026999999999913e-05, 2.8554999999999553e-05, 2.7556000000001496e-05, 2.8055999999998527e-05, 2.8054999999999053e-05, 2.7555999999998027e-05, 2.8110999999997333e-05, 2.7542000000001926e-05, 2.8055999999998527e-05, 2.8096999999997763e-05, 2.7542000000001926e-05, 2.7569999999997596e-05, 2.7570000000001066e-05, 2.7541000000002452e-05, 2.8041000000002952e-05, 2.8054999999999053e-05, 2.8056000000001996e-05, 2.7541999999998457e-05, 2.8056000000001996e-05, 2.8041999999998957e-05, 2.7540999999998983e-05, 2.7541000000002452e-05, 2.8054999999999053e-05, 2.8070000000001566e-05, 2.7513999999999317e-05, 2.7554999999998553e-05, 2.7555999999998027e-05, 2.7569000000001592e-05, 2.7527999999998887e-05]</msg>
<status status="PASS" starttime="20201112 09:54:43.108" endtime="20201112 09:54:43.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.103" endtime="20201112 09:54:43.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.113" endtime="20201112 09:54:43.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.116" endtime="20201112 09:54:43.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.115" endtime="20201112 09:54:43.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.111" endtime="20201112 09:54:43.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.746" endtime="20201112 09:54:43.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.746" endtime="20201112 09:54:43.137"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.146" endtime="20201112 09:54:43.163"></status>
</kw>
<msg timestamp="20201112 09:54:43.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.144" endtime="20201112 09:54:43.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.165" endtime="20201112 09:54:43.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.167" endtime="20201112 09:54:43.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.142" endtime="20201112 09:54:43.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.140" endtime="20201112 09:54:43.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.177" endtime="20201112 09:54:43.463"></status>
</kw>
<msg timestamp="20201112 09:54:43.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019777764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.176" endtime="20201112 09:54:43.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019777764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.467" endtime="20201112 09:54:43.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.476" endtime="20201112 09:54:43.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.173" endtime="20201112 09:54:43.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.171" endtime="20201112 09:54:43.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.482" level="INFO">${RESULT} = [{'time': 0.019777764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8555999999999027e-05, 'source_diff': 2.8555999999999027e-05}, {'time': 0.019809889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:43.479" endtime="20201112 09:54:43.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:43.496" level="INFO">${ACCURACY} = {'time': [0.019777764, 0.019809889, 0.019843903, 0.019876792, 0.019909625, 0.01994075, 0.019972903, 0.020005597, 0.020039486, 0.020072667, 0.020106542, 0.020140903, 0.020173806, 0.020204639, 0.0202365...</msg>
<status status="PASS" starttime="20201112 09:54:43.483" endtime="20201112 09:54:43.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.500" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 09:54:43.499" endtime="20201112 09:54:43.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.503" level="INFO">VALUE: [2.8555999999999027e-05, 2.9514000000001317e-05, 2.9041999999999957e-05, 2.8570000000002066e-05, 2.9082999999999193e-05, 2.8582999999998693e-05, 2.9041999999999957e-05, 2.8554999999999553e-05, 2.9041999999999957e-05, 2.8541999999999457e-05, 2.9028000000000387e-05, 2.9097000000002232e-05, 2.8555999999999027e-05, 2.8555999999999027e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.8568999999999123e-05, 2.9000000000001247e-05, 2.9055000000000053e-05, 2.9027000000000913e-05, 2.8540999999999983e-05, 2.8541999999999457e-05, 2.9041999999999957e-05, 2.8569999999998597e-05, 2.8541999999999457e-05, 2.9068999999999623e-05, 2.8986000000001677e-05, 2.9041999999999957e-05, 2.8568999999999123e-05, 2.8556000000002496e-05, 2.9041999999999957e-05, 2.9569000000000123e-05, 2.9068999999999623e-05, 2.9041999999999957e-05, 2.9055999999999527e-05, 2.9028000000000387e-05, 2.9112000000001276e-05, 2.9055999999999527e-05, 2.9027000000000913e-05, 2.9055000000000053e-05, 2.8540999999999983e-05, 2.8554999999999553e-05, 2.8596999999998263e-05, 2.9026999999997444e-05, 2.8555999999999027e-05, 2.8554999999999553e-05, 2.8554999999999553e-05, 2.8554999999999553e-05, 2.9055999999999527e-05, 2.8554999999999553e-05]</msg>
<status status="PASS" starttime="20201112 09:54:43.501" endtime="20201112 09:54:43.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.497" endtime="20201112 09:54:43.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.506" endtime="20201112 09:54:43.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.510" endtime="20201112 09:54:43.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.508" endtime="20201112 09:54:43.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.505" endtime="20201112 09:54:43.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.138" endtime="20201112 09:54:43.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.137" endtime="20201112 09:54:43.531"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.539" endtime="20201112 09:54:43.557"></status>
</kw>
<msg timestamp="20201112 09:54:43.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.538" endtime="20201112 09:54:43.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.559" endtime="20201112 09:54:43.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.561" endtime="20201112 09:54:43.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.535" endtime="20201112 09:54:43.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.533" endtime="20201112 09:54:43.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.571" endtime="20201112 09:54:43.856"></status>
</kw>
<msg timestamp="20201112 09:54:43.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.570" endtime="20201112 09:54:43.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.860" endtime="20201112 09:54:43.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.868" endtime="20201112 09:54:43.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.567" endtime="20201112 09:54:43.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.565" endtime="20201112 09:54:43.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.875" level="INFO">${RESULT} = [{'time': 0.019752625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0013999999998348e-05, 'source_diff': 3.0013999999998348e-05}, {'time': 0.019788681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:43.871" endtime="20201112 09:54:43.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:43.888" level="INFO">${ACCURACY} = {'time': [0.019752625, 0.019788681, 0.019821639, 0.019854556, 0.019888694, 0.01992075, 0.019955542, 0.019990639, 0.020026514, 0.020058833, 0.020093889, 0.020128917, 0.020161903, 0.020194542, 0.0202279...</msg>
<status status="PASS" starttime="20201112 09:54:43.876" endtime="20201112 09:54:43.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.893" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 09:54:43.892" endtime="20201112 09:54:43.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.895" level="INFO">VALUE: [3.0013999999998348e-05, 3.0056000000000527e-05, 2.9569999999999597e-05, 2.9999999999998778e-05, 3.0124999999998903e-05, 3.0042000000000957e-05, 3.0070000000000097e-05, 3.0056000000000527e-05, 3.0055999999997057e-05, 3.0125000000002372e-05, 3.0056000000000527e-05, 3.0070000000000097e-05, 3.0041999999997487e-05, 2.9556000000000027e-05, 3.055500000000155e-05, 2.9555000000000553e-05, 2.9555000000000553e-05, 3.0042000000000957e-05, 3.0083000000000193e-05, 3.0042000000000957e-05, 3.0069000000000623e-05, 2.9556000000000027e-05, 2.9542000000000457e-05, 3.0041999999997487e-05, 2.9556000000000027e-05, 2.9612000000001776e-05, 2.9526999999997944e-05, 2.9499999999998278e-05, 2.9541000000000983e-05, 2.9541000000000983e-05, 3.0054999999997584e-05, 2.9555000000000553e-05, 2.9542000000000457e-05, 2.9457999999999568e-05, 3.0056000000000527e-05, 3.052800000000189e-05, 2.9555000000000553e-05, 3.0499999999999278e-05, 3.0056000000000527e-05, 2.9569999999999597e-05, 2.9542000000000457e-05, 3.0055000000001053e-05, 3.0042000000000957e-05, 2.9569999999999597e-05, 2.9542000000000457e-05, 3.0055000000001053e-05, 2.9528000000000887e-05, 2.9556000000000027e-05, 2.9556000000000027e-05, 3.0056000000000527e-05]</msg>
<status status="PASS" starttime="20201112 09:54:43.894" endtime="20201112 09:54:43.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.889" endtime="20201112 09:54:43.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.899" endtime="20201112 09:54:43.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.902" endtime="20201112 09:54:43.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.900" endtime="20201112 09:54:43.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.897" endtime="20201112 09:54:43.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.532" endtime="20201112 09:54:43.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.531" endtime="20201112 09:54:43.923"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.931" endtime="20201112 09:54:43.949"></status>
</kw>
<msg timestamp="20201112 09:54:43.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.930" endtime="20201112 09:54:43.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.950" endtime="20201112 09:54:43.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.953" endtime="20201112 09:54:43.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.927" endtime="20201112 09:54:43.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.925" endtime="20201112 09:54:43.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.963" endtime="20201112 09:54:44.247"></status>
</kw>
<msg timestamp="20201112 09:54:44.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019814792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019845347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.961" endtime="20201112 09:54:44.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019814792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019845347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.252" endtime="20201112 09:54:44.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.260" endtime="20201112 09:54:44.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.959" endtime="20201112 09:54:44.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.957" endtime="20201112 09:54:44.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:44.266" level="INFO">${RESULT} = [{'time': 0.019845347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0554999999998084e-05, 'source_diff': 3.0554999999998084e-05}, {'time': 0.019881681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:44.263" endtime="20201112 09:54:44.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:44.281" level="INFO">${ACCURACY} = {'time': [0.019845347, 0.019881681, 0.019918486, 0.019954736, 0.019991361, 0.020024569, 0.020058444, 0.02009175, 0.020124597, 0.020157694, 0.020192569, 0.020226903, 0.020261819, 0.020295403, 0.0203285...</msg>
<status status="PASS" starttime="20201112 09:54:44.267" endtime="20201112 09:54:44.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.285" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 09:54:44.284" endtime="20201112 09:54:44.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.287" level="INFO">VALUE: [3.0554999999998084e-05, 3.056999999999713e-05, 3.1054999999998584e-05, 3.055500000000155e-05, 3.104199999999849e-05, 3.1068999999998154e-05, 3.0513000000002843e-05, 3.105599999999806e-05, 3.058300000000069e-05, 3.1054999999998584e-05, 3.055500000000155e-05, 3.11249999999999e-05, 3.1540999999999514e-05, 3.05700000000006e-05, 3.104199999999849e-05, 3.05700000000006e-05, 3.055600000000103e-05, 3.054199999999799e-05, 3.104200000000196e-05, 3.05700000000006e-05, 3.105500000000205e-05, 3.052799999999842e-05, 3.055599999999756e-05, 3.055600000000103e-05, 3.104199999999849e-05, 3.047299999999961e-05, 3.054200000000146e-05, 3.0554999999998084e-05, 3.106999999999763e-05, 3.105599999999806e-05, 3.05700000000006e-05, 3.0540999999998514e-05, 3.154199999999899e-05, 3.104199999999849e-05, 3.054200000000146e-05, 3.101399999999935e-05, 3.105600000000153e-05, 3.106900000000162e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.156999999999813e-05, 3.10700000000011e-05, 3.0554999999998084e-05, 3.104200000000196e-05, 3.055599999999756e-05, 3.054200000000146e-05, 3.156900000000212e-05, 3.1040999999999014e-05, 3.105600000000153e-05, 3.10700000000011e-05]</msg>
<status status="PASS" starttime="20201112 09:54:44.286" endtime="20201112 09:54:44.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.282" endtime="20201112 09:54:44.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.291" endtime="20201112 09:54:44.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.294" endtime="20201112 09:54:44.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.293" endtime="20201112 09:54:44.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.290" endtime="20201112 09:54:44.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.924" endtime="20201112 09:54:44.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.923" endtime="20201112 09:54:44.315"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.324" endtime="20201112 09:54:44.342"></status>
</kw>
<msg timestamp="20201112 09:54:44.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.322" endtime="20201112 09:54:44.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.343" endtime="20201112 09:54:44.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.345" endtime="20201112 09:54:44.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.320" endtime="20201112 09:54:44.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.318" endtime="20201112 09:54:44.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.355" endtime="20201112 09:54:44.641"></status>
</kw>
<msg timestamp="20201112 09:54:44.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.354" endtime="20201112 09:54:44.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.645" endtime="20201112 09:54:44.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.653" endtime="20201112 09:54:44.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.351" endtime="20201112 09:54:44.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.350" endtime="20201112 09:54:44.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:44.660" level="INFO">${RESULT} = [{'time': 0.019765125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.155600000000203e-05, 'source_diff': 3.155600000000203e-05}, {'time': 0.019802444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:44.657" endtime="20201112 09:54:44.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:44.673" level="INFO">${ACCURACY} = {'time': [0.019765125, 0.019802444, 0.019838069, 0.019874389, 0.019912139, 0.0199475, 0.019985014, 0.020022028, 0.020058153, 0.020096139, 0.020133097, 0.020170111, 0.020207306, 0.020243222, 0.02027911...</msg>
<status status="PASS" starttime="20201112 09:54:44.661" endtime="20201112 09:54:44.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.678" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 09:54:44.677" endtime="20201112 09:54:44.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.680" level="INFO">VALUE: [3.155600000000203e-05, 3.2512999999997905e-05, 3.200000000000078e-05, 3.155599999999856e-05, 3.204199999999949e-05, 3.2096999999998294e-05, 3.204199999999949e-05, 3.205599999999906e-05, 3.155599999999856e-05, 3.205599999999906e-05, 3.1540999999999514e-05, 3.206900000000262e-05, 3.15700000000016e-05, 3.205500000000305e-05, 3.204199999999949e-05, 3.209700000000176e-05, 3.2068999999999154e-05, 3.205599999999906e-05, 3.205599999999906e-05, 3.205599999999906e-05, 3.155599999999856e-05, 3.2054999999999584e-05, 3.154199999999899e-05, 3.2041000000000014e-05, 3.255599999999956e-05, 3.1554999999999084e-05, 3.2041000000000014e-05, 3.2027000000000444e-05, 3.2041000000000014e-05, 3.154199999999899e-05, 3.206999999999863e-05, 3.155599999999856e-05, 3.154200000000246e-05, 3.1554999999999084e-05, 3.154199999999899e-05, 3.201400000000035e-05, 3.204199999999949e-05, 3.204199999999949e-05, 3.2041000000000014e-05, 3.159700000000126e-05, 3.2110999999997863e-05, 3.2527000000000944e-05, 3.205600000000253e-05, 3.152799999999942e-05, 3.2096999999998294e-05, 3.204199999999949e-05, 3.204200000000296e-05, 3.200000000000078e-05, 3.148600000000071e-05, 3.205600000000253e-05]</msg>
<status status="PASS" starttime="20201112 09:54:44.679" endtime="20201112 09:54:44.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.674" endtime="20201112 09:54:44.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.684" endtime="20201112 09:54:44.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.687" endtime="20201112 09:54:44.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.686" endtime="20201112 09:54:44.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.682" endtime="20201112 09:54:44.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.316" endtime="20201112 09:54:44.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.316" endtime="20201112 09:54:44.708"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.716" endtime="20201112 09:54:44.734"></status>
</kw>
<msg timestamp="20201112 09:54:44.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.715" endtime="20201112 09:54:44.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.736" endtime="20201112 09:54:44.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.738" endtime="20201112 09:54:44.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.713" endtime="20201112 09:54:44.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.711" endtime="20201112 09:54:44.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.748" endtime="20201112 09:54:45.033"></status>
</kw>
<msg timestamp="20201112 09:54:45.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.747" endtime="20201112 09:54:45.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.038" endtime="20201112 09:54:45.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.046" endtime="20201112 09:54:45.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.744" endtime="20201112 09:54:45.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.742" endtime="20201112 09:54:45.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:45.052" level="INFO">${RESULT} = [{'time': 0.019680069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2555000000000084e-05, 'source_diff': 3.2555000000000084e-05}, {'time': 0.019716944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:45.049" endtime="20201112 09:54:45.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:45.066" level="INFO">${ACCURACY} = {'time': [0.019680069, 0.019716944, 0.019754403, 0.019791264, 0.019828083, 0.019866222, 0.019904208, 0.019942028, 0.019980972, 0.020016181, 0.020053417, 0.020090472, 0.020126361, 0.020162069, 0.020198...</msg>
<status status="PASS" starttime="20201112 09:54:45.053" endtime="20201112 09:54:45.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.070" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 09:54:45.069" endtime="20201112 09:54:45.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.073" level="INFO">VALUE: [3.2555000000000084e-05, 3.2555000000000084e-05, 3.305600000000006e-05, 3.255599999999956e-05, 3.3055000000000584e-05, 3.2568999999999654e-05, 3.2527000000000944e-05, 3.255599999999956e-05, 3.3055000000000584e-05, 3.306999999999963e-05, 3.309799999999877e-05, 3.361100000000283e-05, 3.3055000000000584e-05, 3.2568999999999654e-05, 3.302800000000092e-05, 3.355600000000056e-05, 3.305600000000006e-05, 3.298599999999874e-05, 3.3110999999998864e-05, 3.2555000000000084e-05, 3.305600000000006e-05, 3.305600000000006e-05, 3.251399999999738e-05, 3.3069000000000154e-05, 3.3054999999997114e-05, 3.251400000000085e-05, 3.3055000000000584e-05, 3.3041000000001014e-05, 3.3055000000000584e-05, 3.2555000000000084e-05, 3.305600000000006e-05, 3.3055000000000584e-05, 3.302800000000092e-05, 3.254199999999999e-05, 3.254199999999999e-05, 3.255599999999956e-05, 3.355600000000056e-05, 3.304200000000049e-05, 3.2541000000000514e-05, 3.3026999999997975e-05, 3.3041000000001014e-05, 3.3055000000000584e-05, 3.2555000000000084e-05, 3.2527000000000944e-05, 3.255599999999956e-05, 3.2555000000000084e-05, 3.3041000000001014e-05, 3.255599999999956e-05, 3.30839999999992e-05, 3.263799999999803e-05]</msg>
<status status="PASS" starttime="20201112 09:54:45.071" endtime="20201112 09:54:45.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.067" endtime="20201112 09:54:45.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.076" endtime="20201112 09:54:45.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:45.080" endtime="20201112 09:54:45.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.078" endtime="20201112 09:54:45.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.075" endtime="20201112 09:54:45.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.709" endtime="20201112 09:54:45.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.708" endtime="20201112 09:54:45.100"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.109" endtime="20201112 09:54:45.127"></status>
</kw>
<msg timestamp="20201112 09:54:45.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.107" endtime="20201112 09:54:45.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.129" endtime="20201112 09:54:45.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.131" endtime="20201112 09:54:45.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.105" endtime="20201112 09:54:45.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.103" endtime="20201112 09:54:45.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.141" endtime="20201112 09:54:45.427"></status>
</kw>
<msg timestamp="20201112 09:54:45.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019713125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.139" endtime="20201112 09:54:45.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019713125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.431" endtime="20201112 09:54:45.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.439" endtime="20201112 09:54:45.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.137" endtime="20201112 09:54:45.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.135" endtime="20201112 09:54:45.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:45.446" level="INFO">${RESULT} = [{'time': 0.019746667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.354199999999752e-05, 'source_diff': 3.354199999999752e-05}, {'time': 0.019782986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:45.443" endtime="20201112 09:54:45.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:45.459" level="INFO">${ACCURACY} = {'time': [0.019746667, 0.019782986, 0.019819931, 0.019856861, 0.019896, 0.019934944, 0.019972097, 0.020009639, 0.020046778, 0.020084944, 0.020123833, 0.020163708, 0.020200028, 0.020239028, 0.020277028...</msg>
<status status="PASS" starttime="20201112 09:54:45.447" endtime="20201112 09:54:45.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.464" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 09:54:45.463" endtime="20201112 09:54:45.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.466" level="INFO">VALUE: [3.354199999999752e-05, 3.3554999999997615e-05, 3.405599999999759e-05, 3.354200000000099e-05, 3.352800000000142e-05, 3.4040999999998545e-05, 3.4569000000001654e-05, 3.405599999999759e-05, 3.405600000000106e-05, 3.3527000000001944e-05, 3.3541000000001514e-05, 3.4054999999998115e-05, 3.405599999999759e-05, 3.354199999999752e-05, 3.349999999999881e-05, 3.404200000000149e-05, 3.3554999999997615e-05, 3.351399999999838e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.400000000000278e-05, 3.405599999999759e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.454200000000199e-05, 3.405600000000106e-05, 3.3555000000001084e-05, 3.354199999999752e-05, 3.4054999999998115e-05, 3.355599999999709e-05, 3.405600000000106e-05, 3.4097000000000294e-05, 3.3554999999997615e-05, 3.3541000000001514e-05, 3.3541000000001514e-05, 3.354199999999752e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.354199999999752e-05, 3.354200000000099e-05, 3.4041000000002014e-05, 3.411199999999934e-05, 3.404200000000149e-05, 3.350000000000228e-05, 3.355600000000056e-05, 3.4110999999999864e-05, 3.4097000000000294e-05, 3.3624999999998934e-05, 3.355600000000056e-05, 3.3596999999999794e-05]</msg>
<status status="PASS" starttime="20201112 09:54:45.465" endtime="20201112 09:54:45.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.460" endtime="20201112 09:54:45.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.470" endtime="20201112 09:54:45.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:45.473" endtime="20201112 09:54:45.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.472" endtime="20201112 09:54:45.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.468" endtime="20201112 09:54:45.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.101" endtime="20201112 09:54:45.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.101" endtime="20201112 09:54:45.494"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.502" endtime="20201112 09:54:45.521"></status>
</kw>
<msg timestamp="20201112 09:54:45.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.501" endtime="20201112 09:54:45.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.523" endtime="20201112 09:54:45.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.525" endtime="20201112 09:54:45.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.498" endtime="20201112 09:54:45.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.496" endtime="20201112 09:54:45.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.535" endtime="20201112 09:54:45.821"></status>
</kw>
<msg timestamp="20201112 09:54:45.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.533" endtime="20201112 09:54:45.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.825" endtime="20201112 09:54:45.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.833" endtime="20201112 09:54:45.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.531" endtime="20201112 09:54:45.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.529" endtime="20201112 09:54:45.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:45.840" level="INFO">${RESULT} = [{'time': 0.019812222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.615299999999976e-05, 'source_diff': 5.615299999999976e-05}, {'time': 0.019877597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:45.837" endtime="20201112 09:54:45.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:45.854" level="INFO">${ACCURACY} = {'time': [0.019812222, 0.019877597, 0.019941597, 0.020006583, 0.020072597, 0.020136611, 0.020202611, 0.020265625, 0.020329681, 0.020394653, 0.020458639, 0.020523653, 0.020586653, 0.020652653, 0.020717...</msg>
<status status="PASS" starttime="20201112 09:54:45.841" endtime="20201112 09:54:45.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.859" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 09:54:45.858" endtime="20201112 09:54:45.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.862" level="INFO">VALUE: [5.615299999999976e-05, 6.0500000000001525e-05, 6.0179999999999956e-05, 6.004100000000026e-05, 6.0430000000000206e-05, 6.031899999999965e-05, 6.011099999999811e-05, 6.087499999999843e-05, 6.0361999999997834e-05, 6.0263999999997375e-05, 6.0819999999999624e-05, 6.0083999999998444e-05, 6.0721999999999166e-05, 6.0250000000001275e-05, 6.0055999999999304e-05, 6.08750000000019e-05, 6.0777999999997445e-05, 6.088900000000147e-05, 6.0694000000000026e-05, 6.0097999999998014e-05, 6.0166000000000386e-05, 6.011099999999811e-05, 6.088900000000147e-05, 6.0707999999999596e-05, 6.0707999999999596e-05, 6.0179999999999956e-05, 6.0499999999998055e-05, 6.018099999999943e-05, 6.061099999999861e-05, 5.994500000000222e-05, 6.03750000000014e-05, 6.0194999999999e-05, 6.0264000000000845e-05, 6.0194999999999e-05, 6.0319999999999124e-05, 6.047299999999839e-05, 6.0749999999998305e-05, 6.0721999999999166e-05, 6.0291999999999984e-05, 6.051299999999815e-05, 6.0236000000001705e-05, 6.0166000000000386e-05, 6.0694000000000026e-05, 6.0179999999999956e-05, 6.0416000000000636e-05, 6.0221999999998665e-05, 6.0514000000001095e-05, 6.034700000000226e-05, 6.016700000000333e-05, 6.055500000000033e-05]</msg>
<status status="PASS" starttime="20201112 09:54:45.860" endtime="20201112 09:54:45.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.855" endtime="20201112 09:54:45.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.869" endtime="20201112 09:54:45.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:45.872" endtime="20201112 09:54:45.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.871" endtime="20201112 09:54:45.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.867" endtime="20201112 09:54:45.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.495" endtime="20201112 09:54:45.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.494" endtime="20201112 09:54:45.893"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.902" endtime="20201112 09:54:45.921"></status>
</kw>
<msg timestamp="20201112 09:54:45.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.900" endtime="20201112 09:54:45.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.923" endtime="20201112 09:54:45.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.925" endtime="20201112 09:54:45.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.898" endtime="20201112 09:54:45.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.895" endtime="20201112 09:54:45.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.935" endtime="20201112 09:54:46.222"></status>
</kw>
<msg timestamp="20201112 09:54:46.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019790486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.934" endtime="20201112 09:54:46.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019790486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.226" endtime="20201112 09:54:46.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.234" endtime="20201112 09:54:46.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.931" endtime="20201112 09:54:46.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.930" endtime="20201112 09:54:46.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:46.242" level="INFO">${RESULT} = [{'time': 0.019790486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.108299999999997e-05, 'source_diff': 6.108299999999997e-05}, {'time': 0.019856486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:46.238" endtime="20201112 09:54:46.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:46.255" level="INFO">${ACCURACY} = {'time': [0.019790486, 0.019856486, 0.019921583, 0.019986528, 0.020050514, 0.020115528, 0.020181542, 0.020248542, 0.020312528, 0.020379583, 0.020444556, 0.020509569, 0.020574569, 0.020638569, 0.020702...</msg>
<status status="PASS" starttime="20201112 09:54:46.243" endtime="20201112 09:54:46.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.260" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 09:54:46.259" endtime="20201112 09:54:46.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.262" level="INFO">VALUE: [6.108299999999997e-05, 6.129200000000098e-05, 6.147199999999992e-05, 6.149999999999906e-05, 6.141699999999764e-05, 6.136099999999936e-05, 6.193100000000118e-05, 6.180600000000105e-05, 6.129200000000098e-05, 6.165199999999885e-05, 6.118100000000043e-05, 6.187499999999943e-05, 6.166600000000189e-05, 6.161099999999961e-05, 6.105500000000083e-05, 6.152800000000166e-05, 6.141599999999817e-05, 6.119400000000053e-05, 6.0999999999998555e-05, 6.118100000000043e-05, 6.151399999999863e-05, 6.163900000000222e-05, 6.15560000000008e-05, 6.1013999999998125e-05, 6.161099999999961e-05, 6.113900000000172e-05, 6.112499999999868e-05, 6.168100000000093e-05, 6.154200000000123e-05, 6.112500000000215e-05, 6.155599999999734e-05, 6.140300000000154e-05, 6.116600000000139e-05, 6.136099999999936e-05, 6.119400000000053e-05, 6.172200000000017e-05, 6.13750000000024e-05, 6.125000000000227e-05, 6.134699999999979e-05, 6.123599999999924e-05, 6.186099999999986e-05, 6.187499999999943e-05, 6.130500000000108e-05, 6.144500000000025e-05, 6.136100000000283e-05, 6.172299999999964e-05, 6.176399999999888e-05, 6.194500000000075e-05, 6.115299999999782e-05, 6.180600000000105e-05]</msg>
<status status="PASS" starttime="20201112 09:54:46.261" endtime="20201112 09:54:46.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.256" endtime="20201112 09:54:46.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.266" endtime="20201112 09:54:46.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.269" endtime="20201112 09:54:46.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.267" endtime="20201112 09:54:46.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.264" endtime="20201112 09:54:46.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.894" endtime="20201112 09:54:46.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.893" endtime="20201112 09:54:46.290"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.298" endtime="20201112 09:54:46.317"></status>
</kw>
<msg timestamp="20201112 09:54:46.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.297" endtime="20201112 09:54:46.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.318" endtime="20201112 09:54:46.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.321" endtime="20201112 09:54:46.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.294" endtime="20201112 09:54:46.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.292" endtime="20201112 09:54:46.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.331" endtime="20201112 09:54:46.615"></status>
</kw>
<msg timestamp="20201112 09:54:46.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.329" endtime="20201112 09:54:46.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.619" endtime="20201112 09:54:46.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.627" endtime="20201112 09:54:46.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.326" endtime="20201112 09:54:46.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.325" endtime="20201112 09:54:46.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:46.634" level="INFO">${RESULT} = [{'time': 0.019927708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2582999999998e-05, 'source_diff': 6.2582999999998e-05}, {'time': 0.019993694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201112 09:54:46.631" endtime="20201112 09:54:46.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:46.647" level="INFO">${ACCURACY} = {'time': [0.019927708, 0.019993694, 0.020061708, 0.020127708, 0.020192722, 0.020257708, 0.020324736, 0.020392764, 0.020458736, 0.02052675, 0.020592736, 0.020660833, 0.02072775, 0.020794764, 0.02086084...</msg>
<status status="PASS" starttime="20201112 09:54:46.635" endtime="20201112 09:54:46.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.652" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 09:54:46.651" endtime="20201112 09:54:46.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.654" level="INFO">VALUE: [6.2582999999998e-05, 6.261100000000061e-05, 6.250000000000006e-05, 6.269400000000203e-05, 6.273600000000074e-05, 6.205499999999836e-05, 6.251399999999963e-05, 6.27080000000016e-05, 6.216700000000186e-05, 6.201399999999913e-05, 6.215299999999882e-05, 6.276399999999988e-05, 6.234700000000079e-05, 6.22499999999998e-05, 6.29439999999988e-05, 6.230600000000155e-05, 6.266699999999889e-05, 6.273600000000074e-05, 6.234700000000079e-05, 6.218100000000143e-05, 6.269400000000203e-05, 6.276399999999988e-05, 6.277799999999945e-05, 6.231899999999818e-05, 6.254100000000276e-05, 6.20690000000014e-05, 6.230499999999861e-05, 6.263899999999975e-05, 6.27500000000003e-05, 6.27080000000016e-05, 6.270900000000107e-05, 6.195900000000032e-05, 6.209700000000054e-05, 6.201399999999913e-05, 6.268099999999846e-05, 6.205599999999784e-05, 6.280600000000205e-05, 6.273600000000074e-05, 6.197200000000042e-05, 6.243100000000168e-05, 6.20690000000014e-05, 6.242999999999874e-05, 6.280499999999911e-05, 6.197200000000042e-05, 6.286100000000086e-05, 6.234700000000079e-05, 6.244400000000178e-05, 6.22499999999998e-05, 6.223600000000024e-05, 6.215300000000229e-05]</msg>
<status status="PASS" starttime="20201112 09:54:46.653" endtime="20201112 09:54:46.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.648" endtime="20201112 09:54:46.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.658" endtime="20201112 09:54:46.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.661" endtime="20201112 09:54:46.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.660" endtime="20201112 09:54:46.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.656" endtime="20201112 09:54:46.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.291" endtime="20201112 09:54:46.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.290" endtime="20201112 09:54:46.682"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.691" endtime="20201112 09:54:46.711"></status>
</kw>
<msg timestamp="20201112 09:54:46.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.689" endtime="20201112 09:54:46.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.712" endtime="20201112 09:54:46.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.715" endtime="20201112 09:54:46.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.687" endtime="20201112 09:54:46.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.685" endtime="20201112 09:54:46.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.725" endtime="20201112 09:54:47.010"></status>
</kw>
<msg timestamp="20201112 09:54:47.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019808278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.723" endtime="20201112 09:54:47.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019808278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.015" endtime="20201112 09:54:47.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.023" endtime="20201112 09:54:47.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.721" endtime="20201112 09:54:47.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.719" endtime="20201112 09:54:47.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:47.029" level="INFO">${RESULT} = [{'time': 0.019808278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.319499999999853e-05, 'source_diff': 6.319499999999853e-05}, {'time': 0.019874278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:47.026" endtime="20201112 09:54:47.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:47.043" level="INFO">${ACCURACY} = {'time': [0.019808278, 0.019874278, 0.019940319, 0.020007306, 0.020074319, 0.020140306, 0.020208333, 0.020274319, 0.020340333, 0.020407347, 0.020475375, 0.020544375, 0.020613375, 0.020679361, 0.020747...</msg>
<status status="PASS" starttime="20201112 09:54:47.030" endtime="20201112 09:54:47.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.047" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 09:54:47.046" endtime="20201112 09:54:47.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.050" level="INFO">VALUE: [6.319499999999853e-05, 6.384699999999882e-05, 6.32080000000021e-05, 6.391700000000014e-05, 6.336100000000136e-05, 6.359800000000151e-05, 6.330499999999961e-05, 6.291599999999967e-05, 6.374999999999784e-05, 6.298600000000099e-05, 6.362500000000118e-05, 6.327799999999995e-05, 6.381899999999968e-05, 6.311100000000111e-05, 6.319399999999906e-05, 6.341699999999964e-05, 6.381999999999916e-05, 6.386099999999839e-05, 6.380600000000305e-05, 6.323600000000124e-05, 6.311099999999764e-05, 6.297200000000142e-05, 6.293099999999871e-05, 6.376400000000088e-05, 6.369399999999956e-05, 6.329100000000004e-05, 6.354100000000029e-05, 6.323599999999777e-05, 6.386100000000186e-05, 6.319399999999906e-05, 6.369399999999956e-05, 6.312500000000068e-05, 6.390300000000057e-05, 6.379200000000002e-05, 6.367999999999999e-05, 6.380599999999959e-05, 6.338899999999703e-05, 6.293099999999871e-05, 6.376400000000088e-05, 6.372200000000217e-05, 6.348600000000149e-05, 6.298600000000099e-05, 6.376299999999793e-05, 6.393099999999971e-05, 6.367999999999999e-05, 6.319400000000253e-05, 6.311100000000111e-05, 6.348599999999802e-05, 6.304099999999979e-05, 6.380500000000011e-05]</msg>
<status status="PASS" starttime="20201112 09:54:47.048" endtime="20201112 09:54:47.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.044" endtime="20201112 09:54:47.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.053" endtime="20201112 09:54:47.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.056" endtime="20201112 09:54:47.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.055" endtime="20201112 09:54:47.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.052" endtime="20201112 09:54:47.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.683" endtime="20201112 09:54:47.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.683" endtime="20201112 09:54:47.077"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.086" endtime="20201112 09:54:47.105"></status>
</kw>
<msg timestamp="20201112 09:54:47.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.085" endtime="20201112 09:54:47.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.106" endtime="20201112 09:54:47.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.109" endtime="20201112 09:54:47.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.082" endtime="20201112 09:54:47.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.080" endtime="20201112 09:54:47.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.119" endtime="20201112 09:54:47.404"></status>
</kw>
<msg timestamp="20201112 09:54:47.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.117" endtime="20201112 09:54:47.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.409" endtime="20201112 09:54:47.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.417" endtime="20201112 09:54:47.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.115" endtime="20201112 09:54:47.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.113" endtime="20201112 09:54:47.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:47.423" level="INFO">${RESULT} = [{'time': 0.020088167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.47089999999996e-05, 'source_diff': 6.47089999999996e-05}, {'time': 0.020155181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:47.420" endtime="20201112 09:54:47.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:47.438" level="INFO">${ACCURACY} = {'time': [0.020088167, 0.020155181, 0.020222208, 0.020290222, 0.020357194, 0.020424236, 0.020491208, 0.020561222, 0.020630222, 0.020699208, 0.020767264, 0.020834236, 0.02090425, 0.020971236, 0.0210392...</msg>
<status status="PASS" starttime="20201112 09:54:47.424" endtime="20201112 09:54:47.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.442" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 09:54:47.441" endtime="20201112 09:54:47.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.445" level="INFO">VALUE: [6.47089999999996e-05, 6.401400000000113e-05, 6.495799999999691e-05, 6.420799999999963e-05, 6.415199999999788e-05, 6.44029999999976e-05, 6.473599999999927e-05, 6.480500000000111e-05, 6.456900000000043e-05, 6.473599999999927e-05, 6.416700000000039e-05, 6.480499999999764e-05, 6.405599999999984e-05, 6.490300000000157e-05, 6.401399999999766e-05, 6.40699999999994e-05, 6.394499999999928e-05, 6.430600000000009e-05, 6.419499999999953e-05, 6.480600000000059e-05, 6.482000000000016e-05, 6.433299999999975e-05, 6.430600000000009e-05, 6.393000000000024e-05, 6.461099999999914e-05, 6.451400000000163e-05, 6.405500000000036e-05, 6.44029999999976e-05, 6.405499999999689e-05, 6.40280000000007e-05, 6.4583e-05, 6.451400000000163e-05, 6.469399999999709e-05, 6.39439999999998e-05, 6.474999999999884e-05, 6.48340000000032e-05, 6.461099999999914e-05, 6.405599999999984e-05, 6.448600000000249e-05, 6.473699999999874e-05, 6.427800000000095e-05, 6.402700000000122e-05, 6.472299999999917e-05, 6.487499999999896e-05, 6.479099999999807e-05, 6.42630000000019e-05, 6.413899999999778e-05, 6.47219999999997e-05, 6.473599999999927e-05, 6.455500000000086e-05]</msg>
<status status="PASS" starttime="20201112 09:54:47.443" endtime="20201112 09:54:47.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.439" endtime="20201112 09:54:47.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.448" endtime="20201112 09:54:47.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.452" endtime="20201112 09:54:47.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.450" endtime="20201112 09:54:47.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.446" endtime="20201112 09:54:47.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.078" endtime="20201112 09:54:47.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.078" endtime="20201112 09:54:47.472"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.481" endtime="20201112 09:54:47.500"></status>
</kw>
<msg timestamp="20201112 09:54:47.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.479" endtime="20201112 09:54:47.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.502" endtime="20201112 09:54:47.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.504" endtime="20201112 09:54:47.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.477" endtime="20201112 09:54:47.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.475" endtime="20201112 09:54:47.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.514" endtime="20201112 09:54:47.800"></status>
</kw>
<msg timestamp="20201112 09:54:47.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.512" endtime="20201112 09:54:47.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.804" endtime="20201112 09:54:47.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.812" endtime="20201112 09:54:47.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.510" endtime="20201112 09:54:47.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.508" endtime="20201112 09:54:47.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:47.819" level="INFO">${RESULT} = [{'time': 0.019810167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.587499999999996e-05, 'source_diff': 6.587499999999996e-05}, {'time': 0.019878153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:47.815" endtime="20201112 09:54:47.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:47.832" level="INFO">${ACCURACY} = {'time': [0.019810167, 0.019878153, 0.019949153, 0.020019181, 0.020088181, 0.020159208, 0.020228208, 0.020298181, 0.020368208, 0.020438222, 0.020507222, 0.020578208, 0.020647222, 0.020717236, 0.020786...</msg>
<status status="PASS" starttime="20201112 09:54:47.820" endtime="20201112 09:54:47.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.837" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 09:54:47.836" endtime="20201112 09:54:47.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.839" level="INFO">VALUE: [6.587499999999996e-05, 6.530599999999762e-05, 6.577800000000245e-05, 6.545900000000035e-05, 6.499999999999909e-05, 6.53890000000025e-05, 6.59440000000018e-05, 6.50419999999978e-05, 6.538899999999903e-05, 6.499999999999909e-05, 6.562499999999971e-05, 6.586100000000039e-05, 6.573600000000027e-05, 6.566699999999842e-05, 6.523599999999977e-05, 6.556900000000143e-05, 6.536099999999989e-05, 6.499999999999909e-05, 6.591700000000214e-05, 6.5276999999999e-05, 6.52090000000001e-05, 6.580599999999812e-05, 6.530600000000109e-05, 6.587499999999996e-05, 6.582000000000116e-05, 6.518100000000096e-05, 6.538899999999903e-05, 6.549999999999959e-05, 6.512499999999921e-05, 6.567999999999852e-05, 6.568000000000199e-05, 6.540199999999913e-05, 6.574999999999984e-05, 6.592999999999877e-05, 6.57500000000033e-05, 6.536099999999989e-05, 6.593100000000171e-05, 6.527800000000195e-05, 6.548600000000002e-05, 6.569500000000103e-05, 6.561100000000014e-05, 6.501400000000213e-05, 6.572300000000017e-05, 6.555600000000134e-05, 6.559800000000005e-05, 6.526299999999943e-05, 6.547200000000045e-05, 6.59029999999991e-05, 6.555500000000186e-05, 6.524999999999934e-05]</msg>
<status status="PASS" starttime="20201112 09:54:47.838" endtime="20201112 09:54:47.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.833" endtime="20201112 09:54:47.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.843" endtime="20201112 09:54:47.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.846" endtime="20201112 09:54:47.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.844" endtime="20201112 09:54:47.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.841" endtime="20201112 09:54:47.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.473" endtime="20201112 09:54:47.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.473" endtime="20201112 09:54:47.867"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.875" endtime="20201112 09:54:47.896"></status>
</kw>
<msg timestamp="20201112 09:54:47.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.874" endtime="20201112 09:54:47.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.897" endtime="20201112 09:54:47.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.900" endtime="20201112 09:54:47.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.871" endtime="20201112 09:54:47.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.869" endtime="20201112 09:54:47.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.909" endtime="20201112 09:54:48.194"></status>
</kw>
<msg timestamp="20201112 09:54:48.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.908" endtime="20201112 09:54:48.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.198" endtime="20201112 09:54:48.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.207" endtime="20201112 09:54:48.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.905" endtime="20201112 09:54:48.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.904" endtime="20201112 09:54:48.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:48.213" level="INFO">${RESULT} = [{'time': 0.019742667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.601399999999966e-05, 'source_diff': 6.601399999999966e-05}, {'time': 0.019814653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:48.210" endtime="20201112 09:54:48.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:48.228" level="INFO">${ACCURACY} = {'time': [0.019742667, 0.019814653, 0.019883667, 0.019955694, 0.020026694, 0.020096694, 0.020168694, 0.020238708, 0.020309708, 0.020381722, 0.020450708, 0.020522722, 0.020592778, 0.02066175, 0.0207337...</msg>
<status status="PASS" starttime="20201112 09:54:48.214" endtime="20201112 09:54:48.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.233" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 09:54:48.232" endtime="20201112 09:54:48.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.236" level="INFO">VALUE: [6.601399999999966e-05, 6.633400000000123e-05, 6.661100000000114e-05, 6.687500000000096e-05, 6.601300000000018e-05, 6.662499999999724e-05, 6.605500000000236e-05, 6.64159999999997e-05, 6.60969999999976e-05, 6.631900000000218e-05, 6.609700000000107e-05, 6.655499999999939e-05, 6.6583999999998e-05, 6.67640000000004e-05, 6.599999999999662e-05, 6.625000000000034e-05, 6.605599999999837e-05, 6.666699999999942e-05, 6.608299999999803e-05, 6.615299999999935e-05, 6.666599999999995e-05, 6.600000000000009e-05, 6.616699999999892e-05, 6.647299999999745e-05, 6.633299999999828e-05, 6.67229999999977e-05, 6.606900000000193e-05, 6.673600000000127e-05, 6.636100000000089e-05, 6.613899999999978e-05, 6.625000000000034e-05, 6.681899999999921e-05, 6.648600000000102e-05, 6.651400000000016e-05, 6.665299999999985e-05, 6.669499999999856e-05, 6.650000000000059e-05, 6.618100000000196e-05, 6.673600000000127e-05, 6.645900000000135e-05, 6.666699999999942e-05, 6.612500000000021e-05, 6.623700000000024e-05, 6.686200000000087e-05, 6.631900000000218e-05, 6.611100000000064e-05, 6.616599999999945e-05, 6.594399999999834e-05, 6.67220000000017e-05, 6.687499999999749e-05]</msg>
<status status="PASS" starttime="20201112 09:54:48.234" endtime="20201112 09:54:48.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.229" endtime="20201112 09:54:48.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.240" endtime="20201112 09:54:48.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:48.244" endtime="20201112 09:54:48.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.242" endtime="20201112 09:54:48.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.238" endtime="20201112 09:54:48.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.868" endtime="20201112 09:54:48.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.867" endtime="20201112 09:54:48.265"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.274" endtime="20201112 09:54:48.293"></status>
</kw>
<msg timestamp="20201112 09:54:48.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.272" endtime="20201112 09:54:48.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.295" endtime="20201112 09:54:48.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.297" endtime="20201112 09:54:48.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.270" endtime="20201112 09:54:48.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.267" endtime="20201112 09:54:48.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.307" endtime="20201112 09:54:48.593"></status>
</kw>
<msg timestamp="20201112 09:54:48.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020550042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020617903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.306" endtime="20201112 09:54:48.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020550042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020617903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.597" endtime="20201112 09:54:48.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.605" endtime="20201112 09:54:48.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.303" endtime="20201112 09:54:48.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.301" endtime="20201112 09:54:48.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:48.612" level="INFO">${RESULT} = [{'time': 0.020617903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.786099999999892e-05, 'source_diff': 6.786099999999892e-05}, {'time': 0.020688903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:48.609" endtime="20201112 09:54:48.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:48.626" level="INFO">${ACCURACY} = {'time': [0.020617903, 0.020688903, 0.020759903, 0.020829903, 0.020899903, 0.020969931, 0.021041931, 0.021111931, 0.021182944, 0.021252958, 0.021324972, 0.021397972, 0.021470972, 0.021542986, 0.021613...</msg>
<status status="PASS" starttime="20201112 09:54:48.613" endtime="20201112 09:54:48.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.631" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 09:54:48.630" endtime="20201112 09:54:48.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.633" level="INFO">VALUE: [6.786099999999892e-05, 6.784700000000282e-05, 6.791700000000067e-05, 6.70419999999998e-05, 6.698600000000152e-05, 6.719499999999906e-05, 6.709800000000155e-05, 6.719499999999906e-05, 6.756899999999996e-05, 6.749999999999812e-05, 6.695800000000238e-05, 6.768000000000052e-05, 6.74160000000007e-05, 6.769400000000009e-05, 6.720799999999916e-05, 6.751400000000116e-05, 6.743099999999974e-05, 6.779200000000055e-05, 6.766699999999695e-05, 6.761099999999867e-05, 6.755599999999987e-05, 6.755599999999987e-05, 6.797199999999948e-05, 6.773600000000227e-05, 6.731900000000318e-05, 6.768099999999999e-05, 6.700000000000109e-05, 6.736099999999842e-05, 6.795899999999938e-05, 6.770799999999966e-05, 6.700000000000109e-05, 6.698600000000152e-05, 6.712500000000121e-05, 6.743000000000027e-05, 6.775000000000184e-05, 6.769500000000303e-05, 6.729200000000005e-05, 6.712499999999774e-05, 6.780600000000012e-05, 6.700000000000109e-05, 6.719500000000253e-05, 6.70419999999998e-05, 6.705599999999937e-05, 6.74160000000007e-05, 6.698700000000099e-05, 6.761100000000214e-05, 6.784699999999935e-05, 6.77909999999976e-05, 6.751399999999769e-05, 6.762499999999824e-05]</msg>
<status status="PASS" starttime="20201112 09:54:48.632" endtime="20201112 09:54:48.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.627" endtime="20201112 09:54:48.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.637" endtime="20201112 09:54:48.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:48.640" endtime="20201112 09:54:48.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.639" endtime="20201112 09:54:48.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.635" endtime="20201112 09:54:48.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.266" endtime="20201112 09:54:48.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.265" endtime="20201112 09:54:48.661"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.669" endtime="20201112 09:54:48.689"></status>
</kw>
<msg timestamp="20201112 09:54:48.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.668" endtime="20201112 09:54:48.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.690" endtime="20201112 09:54:48.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.692" endtime="20201112 09:54:48.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.665" endtime="20201112 09:54:48.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.663" endtime="20201112 09:54:48.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.702" endtime="20201112 09:54:48.989"></status>
</kw>
<msg timestamp="20201112 09:54:48.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019770736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.701" endtime="20201112 09:54:48.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019770736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.993" endtime="20201112 09:54:49.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.001" endtime="20201112 09:54:49.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.698" endtime="20201112 09:54:49.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.697" endtime="20201112 09:54:49.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:49.008" level="INFO">${RESULT} = [{'time': 0.019770736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.794400000000034e-05, 'source_diff': 6.794400000000034e-05}, {'time': 0.01984175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:49.005" endtime="20201112 09:54:49.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:49.022" level="INFO">${ACCURACY} = {'time': [0.019770736, 0.01984175, 0.019914792, 0.019987806, 0.020059764, 0.020132764, 0.020206806, 0.020277778, 0.020350806, 0.020422792, 0.020493806, 0.020564806, 0.020637819, 0.020710889, 0.0207818...</msg>
<status status="PASS" starttime="20201112 09:54:49.009" endtime="20201112 09:54:49.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.027" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 09:54:49.026" endtime="20201112 09:54:49.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.029" level="INFO">VALUE: [6.794400000000034e-05, 6.887499999999949e-05, 6.876399999999894e-05, 6.87229999999997e-05, 6.87359999999998e-05, 6.816700000000092e-05, 6.870900000000013e-05, 6.80969999999996e-05, 6.794499999999981e-05, 6.89169999999982e-05, 6.824999999999887e-05, 6.843100000000074e-05, 6.862500000000271e-05, 6.862499999999924e-05, 6.806900000000046e-05, 6.819400000000059e-05, 6.82359999999993e-05, 6.804100000000132e-05, 6.799999999999862e-05, 6.829200000000105e-05, 6.811099999999917e-05, 6.855600000000087e-05, 6.861099999999967e-05, 6.823600000000277e-05, 6.848599999999955e-05, 6.843100000000074e-05, 6.830600000000062e-05, 6.837499999999899e-05, 6.852699999999878e-05, 6.879199999999808e-05, 6.874999999999937e-05, 6.793000000000077e-05, 6.804100000000132e-05, 6.888899999999906e-05, 6.874999999999937e-05, 6.827800000000148e-05, 6.869400000000109e-05, 6.851399999999869e-05, 6.868100000000099e-05, 6.874999999999937e-05, 6.863900000000228e-05, 6.812499999999874e-05, 6.805600000000037e-05, 6.886099999999992e-05, 6.843099999999727e-05, 6.87359999999998e-05, 6.825000000000234e-05, 6.888899999999906e-05, 6.815200000000188e-05, 6.841700000000117e-05]</msg>
<status status="PASS" starttime="20201112 09:54:49.028" endtime="20201112 09:54:49.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.023" endtime="20201112 09:54:49.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.033" endtime="20201112 09:54:49.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:49.036" endtime="20201112 09:54:49.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.035" endtime="20201112 09:54:49.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.031" endtime="20201112 09:54:49.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.662" endtime="20201112 09:54:49.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.661" endtime="20201112 09:54:49.058"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.066" endtime="20201112 09:54:49.086"></status>
</kw>
<msg timestamp="20201112 09:54:49.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.065" endtime="20201112 09:54:49.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.088" endtime="20201112 09:54:49.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.090" endtime="20201112 09:54:49.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.062" endtime="20201112 09:54:49.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.060" endtime="20201112 09:54:49.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.100" endtime="20201112 09:54:49.386"></status>
</kw>
<msg timestamp="20201112 09:54:49.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.099" endtime="20201112 09:54:49.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.390" endtime="20201112 09:54:49.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.399" endtime="20201112 09:54:49.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.096" endtime="20201112 09:54:49.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.095" endtime="20201112 09:54:49.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:49.405" level="INFO">${RESULT} = [{'time': 0.019828111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.950000000000012e-05, 'source_diff': 6.950000000000012e-05}, {'time': 0.019903111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:49.402" endtime="20201112 09:54:49.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:49.419" level="INFO">${ACCURACY} = {'time': [0.019828111, 0.019903111, 0.019977139, 0.020051139, 0.020125139, 0.020197153, 0.020270167, 0.020345236, 0.020419181, 0.020492181, 0.020567194, 0.020639181, 0.020714194, 0.020786236, 0.020859...</msg>
<status status="PASS" starttime="20201112 09:54:49.406" endtime="20201112 09:54:49.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.423" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 09:54:49.422" endtime="20201112 09:54:49.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.426" level="INFO">VALUE: [6.950000000000012e-05, 6.948600000000055e-05, 6.97360000000008e-05, 6.968099999999852e-05, 6.94169999999987e-05, 6.980599999999865e-05, 6.930599999999815e-05, 6.99299999999993e-05, 6.962500000000024e-05, 6.948700000000002e-05, 6.967999999999905e-05, 6.948700000000002e-05, 6.930499999999867e-05, 6.963899999999981e-05, 6.990200000000016e-05, 6.975000000000037e-05, 6.980499999999917e-05, 6.994399999999887e-05, 6.911100000000017e-05, 6.94169999999987e-05, 6.932000000000119e-05, 6.930599999999815e-05, 6.97360000000008e-05, 6.944500000000131e-05, 6.941599999999923e-05, 6.948599999999708e-05, 6.912499999999974e-05, 6.994399999999887e-05, 6.984799999999736e-05, 6.92909999999991e-05, 6.99299999999993e-05, 6.919400000000159e-05, 6.919400000000159e-05, 6.919399999999812e-05, 6.936100000000042e-05, 6.950000000000012e-05, 6.941599999999923e-05, 6.919399999999812e-05, 6.975000000000037e-05, 6.90559999999979e-05, 6.969499999999809e-05, 6.930600000000162e-05, 6.94160000000027e-05, 6.95559999999984e-05, 6.988800000000059e-05, 6.951300000000021e-05, 6.895900000000038e-05, 6.983300000000178e-05, 6.931900000000171e-05, 6.89160000000022e-05]</msg>
<status status="PASS" starttime="20201112 09:54:49.424" endtime="20201112 09:54:49.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.420" endtime="20201112 09:54:49.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.429" endtime="20201112 09:54:49.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:49.433" endtime="20201112 09:54:49.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.431" endtime="20201112 09:54:49.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.428" endtime="20201112 09:54:49.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.059" endtime="20201112 09:54:49.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.058" endtime="20201112 09:54:49.454"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.462" endtime="20201112 09:54:49.482"></status>
</kw>
<msg timestamp="20201112 09:54:49.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.461" endtime="20201112 09:54:49.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.483" endtime="20201112 09:54:49.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.486" endtime="20201112 09:54:49.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.458" endtime="20201112 09:54:49.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.456" endtime="20201112 09:54:49.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.496" endtime="20201112 09:54:49.780"></status>
</kw>
<msg timestamp="20201112 09:54:49.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020038333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.494" endtime="20201112 09:54:49.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020038333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.784" endtime="20201112 09:54:49.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.793" endtime="20201112 09:54:49.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.492" endtime="20201112 09:54:49.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.490" endtime="20201112 09:54:49.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:49.799" level="INFO">${RESULT} = [{'time': 0.020108736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.040300000000013e-05, 'source_diff': 7.040300000000013e-05}, {'time': 0.020184833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:49.796" endtime="20201112 09:54:49.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:49.813" level="INFO">${ACCURACY} = {'time': [0.020108736, 0.020184833, 0.020257764, 0.02033075, 0.020403764, 0.020478806, 0.020551778, 0.020625778, 0.020700792, 0.020773792, 0.020846861, 0.020919819, 0.020992833, 0.021065819, 0.0211388...</msg>
<status status="PASS" starttime="20201112 09:54:49.800" endtime="20201112 09:54:49.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.817" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 09:54:49.816" endtime="20201112 09:54:49.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.820" level="INFO">VALUE: [7.040300000000013e-05, 7.038900000000056e-05, 7.037500000000099e-05, 7.000000000000062e-05, 7.00420000000028e-05, 7.090299999999716e-05, 7.065300000000038e-05, 7.018100000000249e-05, 7.062499999999777e-05, 7.080599999999965e-05, 7.061100000000167e-05, 6.99299999999993e-05, 7.02499999999974e-05, 7.054100000000035e-05, 7.013900000000031e-05, 7.011100000000117e-05, 7.069399999999962e-05, 7.094399999999987e-05, 7.079200000000008e-05, 7.037499999999752e-05, 7.05559999999994e-05, 7.036100000000142e-05, 7.037500000000099e-05, 7.086100000000192e-05, 7.07360000000018e-05, 7.050000000000112e-05, 7.019499999999859e-05, 7.043100000000274e-05, 7.077700000000103e-05, 7.068000000000005e-05, 7.072299999999823e-05, 7.002799999999976e-05, 7.036100000000142e-05, 7.016599999999998e-05, 7.069399999999962e-05, 7.008299999999856e-05, 7.069399999999962e-05, 7.054199999999983e-05, 7.031899999999924e-05, 7.07360000000018e-05, 7.072199999999876e-05, 7.013900000000031e-05, 7.006999999999847e-05, 7.06109999999982e-05, 6.998599999999758e-05, 7.029199999999958e-05, 7.072299999999823e-05, 7.019399999999912e-05, 7.087499999999802e-05, 7.062500000000124e-05]</msg>
<status status="PASS" starttime="20201112 09:54:49.818" endtime="20201112 09:54:49.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.813" endtime="20201112 09:54:49.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.823" endtime="20201112 09:54:49.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:49.826" endtime="20201112 09:54:49.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.825" endtime="20201112 09:54:49.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.822" endtime="20201112 09:54:49.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.455" endtime="20201112 09:54:49.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.454" endtime="20201112 09:54:49.847"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.856" endtime="20201112 09:54:49.874"></status>
</kw>
<msg timestamp="20201112 09:54:49.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.854" endtime="20201112 09:54:49.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.876" endtime="20201112 09:54:49.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.879" endtime="20201112 09:54:49.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.852" endtime="20201112 09:54:49.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.850" endtime="20201112 09:54:49.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.888" endtime="20201112 09:54:50.174"></status>
</kw>
<msg timestamp="20201112 09:54:50.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.887" endtime="20201112 09:54:50.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.178" endtime="20201112 09:54:50.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.187" endtime="20201112 09:54:50.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.884" endtime="20201112 09:54:50.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.883" endtime="20201112 09:54:50.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:50.193" level="INFO">${RESULT} = [{'time': 0.019734639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.11109999999987e-05, 'source_diff': 7.11109999999987e-05}, {'time': 0.019811694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:50.190" endtime="20201112 09:54:50.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.206" level="INFO">${ACCURACY} = {'time': [0.019734639, 0.019811694, 0.019887667, 0.019962736, 0.020038681, 0.020113694, 0.020190681, 0.020264694, 0.020339708, 0.020414708, 0.020489722, 0.020565736, 0.020642722, 0.020716736, 0.020790...</msg>
<status status="PASS" starttime="20201112 09:54:50.194" endtime="20201112 09:54:50.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.211" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.210" endtime="20201112 09:54:50.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.213" level="INFO">VALUE: [7.11109999999987e-05, 7.140200000000166e-05, 7.143100000000027e-05, 7.112499999999827e-05, 7.17499999999989e-05, 7.194400000000087e-05, 7.098699999999805e-05, 7.15690000000005e-05, 7.098600000000205e-05, 7.140200000000166e-05, 7.138899999999809e-05, 7.186099999999945e-05, 7.141599999999776e-05, 7.148599999999908e-05, 7.165300000000138e-05, 7.19170000000012e-05, 7.159799999999911e-05, 7.193100000000077e-05, 7.131999999999972e-05, 7.173599999999933e-05, 7.188900000000206e-05, 7.100000000000162e-05, 7.112500000000174e-05, 7.10559999999999e-05, 7.181900000000074e-05, 7.104200000000033e-05, 7.168000000000105e-05, 7.119400000000012e-05, 7.130500000000067e-05, 7.122199999999926e-05, 7.165300000000138e-05, 7.140300000000113e-05, 7.151399999999822e-05, 7.118100000000002e-05, 7.187499999999902e-05, 7.108299999999956e-05, 7.112500000000174e-05, 7.184699999999988e-05, 7.100000000000162e-05, 7.112500000000174e-05, 7.187499999999902e-05, 7.098700000000152e-05, 7.169400000000062e-05, 7.17910000000016e-05, 7.170800000000019e-05, 7.162499999999877e-05, 7.192999999999783e-05, 7.140299999999766e-05, 7.112500000000174e-05, 7.126399999999797e-05]</msg>
<status status="PASS" starttime="20201112 09:54:50.212" endtime="20201112 09:54:50.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.207" endtime="20201112 09:54:50.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.217" endtime="20201112 09:54:50.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:50.220" endtime="20201112 09:54:50.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.219" endtime="20201112 09:54:50.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.215" endtime="20201112 09:54:50.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.848" endtime="20201112 09:54:50.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.848" endtime="20201112 09:54:50.241"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.250" endtime="20201112 09:54:50.269"></status>
</kw>
<msg timestamp="20201112 09:54:50.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.248" endtime="20201112 09:54:50.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.270" endtime="20201112 09:54:50.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.272" endtime="20201112 09:54:50.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.246" endtime="20201112 09:54:50.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.244" endtime="20201112 09:54:50.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.282" endtime="20201112 09:54:50.568"></status>
</kw>
<msg timestamp="20201112 09:54:50.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019762028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.281" endtime="20201112 09:54:50.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019762028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.572" endtime="20201112 09:54:50.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.580" endtime="20201112 09:54:50.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.278" endtime="20201112 09:54:50.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.277" endtime="20201112 09:54:50.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:50.587" level="INFO">${RESULT} = [{'time': 0.019834931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290299999999916e-05, 'source_diff': 7.290299999999916e-05}, {'time': 0.019910903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:50.583" endtime="20201112 09:54:50.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.601" level="INFO">${ACCURACY} = {'time': [0.019834931, 0.019910903, 0.019985958, 0.020063903, 0.020139931, 0.020217931, 0.020292931, 0.020367944, 0.020443958, 0.020520958, 0.020597986, 0.020672958, 0.020748028, 0.020825986, 0.020901...</msg>
<status status="PASS" starttime="20201112 09:54:50.588" endtime="20201112 09:54:50.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.605" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.604" endtime="20201112 09:54:50.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.608" level="INFO">VALUE: [7.290299999999916e-05, 7.286100000000045e-05, 7.209700000000013e-05, 7.234700000000038e-05, 7.232000000000072e-05, 7.266700000000195e-05, 7.22499999999994e-05, 7.248600000000008e-05, 7.250000000000312e-05, 7.19439999999974e-05, 7.237499999999952e-05, 7.215200000000241e-05, 7.29170000000022e-05, 7.220800000000069e-05, 7.265300000000238e-05, 7.218000000000155e-05, 7.251399999999922e-05, 7.29170000000022e-05, 7.218100000000102e-05, 7.252800000000226e-05, 7.241600000000223e-05, 7.280600000000165e-05, 7.236099999999995e-05, 7.281900000000174e-05, 7.22499999999994e-05, 7.219399999999765e-05, 7.237500000000299e-05, 7.194400000000087e-05, 7.288899999999959e-05, 7.230500000000167e-05, 7.198599999999958e-05, 7.262499999999977e-05, 7.205500000000142e-05, 7.273600000000033e-05, 7.216699999999798e-05, 7.262499999999977e-05, 7.230600000000115e-05, 7.24170000000017e-05, 7.288900000000306e-05, 7.254199999999836e-05, 7.20560000000009e-05, 7.288899999999959e-05, 7.234799999999986e-05, 7.27369999999998e-05, 7.26110000000002e-05, 7.229200000000158e-05, 7.194400000000087e-05, 7.26110000000002e-05, 7.227800000000201e-05, 7.263899999999934e-05]</msg>
<status status="PASS" starttime="20201112 09:54:50.606" endtime="20201112 09:54:50.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.602" endtime="20201112 09:54:50.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.611" endtime="20201112 09:54:50.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:50.615" endtime="20201112 09:54:50.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.613" endtime="20201112 09:54:50.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.610" endtime="20201112 09:54:50.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.242" endtime="20201112 09:54:50.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.242" endtime="20201112 09:54:50.636"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.644" endtime="20201112 09:54:50.664"></status>
</kw>
<msg timestamp="20201112 09:54:50.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.643" endtime="20201112 09:54:50.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.665" endtime="20201112 09:54:50.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.668" endtime="20201112 09:54:50.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.640" endtime="20201112 09:54:50.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.638" endtime="20201112 09:54:50.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.678" endtime="20201112 09:54:50.963"></status>
</kw>
<msg timestamp="20201112 09:54:50.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019808111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.676" endtime="20201112 09:54:50.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019808111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.967" endtime="20201112 09:54:50.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.975" endtime="20201112 09:54:50.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.674" endtime="20201112 09:54:50.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.672" endtime="20201112 09:54:50.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:50.982" level="INFO">${RESULT} = [{'time': 0.019808111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.376400000000047e-05, 'source_diff': 7.376400000000047e-05}, {'time': 0.019884111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:50.978" endtime="20201112 09:54:50.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.995" level="INFO">${ACCURACY} = {'time': [0.019808111, 0.019884111, 0.019962111, 0.020038111, 0.020115139, 0.020193139, 0.020271153, 0.020348139, 0.020425153, 0.020502181, 0.020580167, 0.020657181, 0.020735181, 0.020814194, 0.020893...</msg>
<status status="PASS" starttime="20201112 09:54:50.983" endtime="20201112 09:54:50.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.000" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.998" endtime="20201112 09:54:51.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.002" level="INFO">VALUE: [7.376400000000047e-05, 7.387500000000102e-05, 7.350000000000065e-05, 7.370800000000219e-05, 7.304200000000233e-05, 7.363900000000034e-05, 7.37500000000009e-05, 7.300000000000015e-05, 7.312500000000027e-05, 7.333400000000129e-05, 7.381999999999875e-05, 7.368099999999905e-05, 7.379199999999961e-05, 7.34300000000028e-05, 7.312500000000027e-05, 7.361099999999773e-05, 7.358300000000206e-05, 7.350000000000065e-05, 7.376400000000047e-05, 7.323600000000083e-05, 7.337500000000052e-05, 7.318099999999855e-05, 7.322200000000126e-05, 7.307000000000147e-05, 7.323600000000083e-05, 7.34309999999988e-05, 7.348599999999761e-05, 7.377800000000004e-05, 7.362500000000077e-05, 7.370899999999819e-05, 7.318100000000202e-05, 7.342999999999933e-05, 7.344400000000237e-05, 7.3069000000002e-05, 7.309700000000113e-05, 7.38049999999997e-05, 7.362500000000077e-05, 7.301399999999972e-05, 7.363900000000034e-05, 7.348600000000108e-05, 7.333300000000181e-05, 7.341699999999923e-05, 7.387500000000102e-05, 7.368099999999905e-05, 7.343100000000227e-05, 7.344499999999837e-05, 7.300000000000015e-05, 7.379199999999961e-05, 7.330600000000215e-05, 7.347300000000098e-05]</msg>
<status status="PASS" starttime="20201112 09:54:51.001" endtime="20201112 09:54:51.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.996" endtime="20201112 09:54:51.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.016" endtime="20201112 09:54:51.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.020" endtime="20201112 09:54:51.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.018" endtime="20201112 09:54:51.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.015" endtime="20201112 09:54:51.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.636" endtime="20201112 09:54:51.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.636" endtime="20201112 09:54:51.041"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.049" endtime="20201112 09:54:51.069"></status>
</kw>
<msg timestamp="20201112 09:54:51.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.047" endtime="20201112 09:54:51.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.071" endtime="20201112 09:54:51.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.073" endtime="20201112 09:54:51.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.045" endtime="20201112 09:54:51.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.043" endtime="20201112 09:54:51.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.083" endtime="20201112 09:54:51.369"></status>
</kw>
<msg timestamp="20201112 09:54:51.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.082" endtime="20201112 09:54:51.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.373" endtime="20201112 09:54:51.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.381" endtime="20201112 09:54:51.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.079" endtime="20201112 09:54:51.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.077" endtime="20201112 09:54:51.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:51.388" level="INFO">${RESULT} = [{'time': 0.019855917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.465300000000091e-05, 'source_diff': 7.465300000000091e-05}, {'time': 0.019933931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:51.385" endtime="20201112 09:54:51.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:51.401" level="INFO">${ACCURACY} = {'time': [0.019855917, 0.019933931, 0.020011931, 0.020090958, 0.020170944, 0.020248958, 0.020327028, 0.020404972, 0.020485, 0.020564, 0.020644014, 0.020724014, 0.020804014, 0.020883028, 0.020963014, 0...</msg>
<status status="PASS" starttime="20201112 09:54:51.389" endtime="20201112 09:54:51.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.406" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 09:54:51.405" endtime="20201112 09:54:51.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.408" level="INFO">VALUE: [7.465300000000091e-05, 7.469499999999962e-05, 7.397300000000148e-05, 7.437499999999805e-05, 7.441600000000076e-05, 7.415200000000094e-05, 7.47500000000019e-05, 7.48050000000007e-05, 7.480600000000018e-05, 7.473599999999886e-05, 7.469499999999962e-05, 7.491699999999726e-05, 7.473599999999886e-05, 7.393100000000277e-05, 7.466699999999701e-05, 7.4069999999999e-05, 7.42500000000014e-05, 7.451400000000122e-05, 7.468100000000005e-05, 7.392999999999983e-05, 7.447300000000198e-05, 7.455500000000045e-05, 7.39439999999994e-05, 7.448599999999861e-05, 7.452800000000079e-05, 7.412500000000127e-05, 7.47500000000019e-05, 7.400000000000115e-05, 7.423599999999836e-05, 7.445899999999894e-05, 7.424999999999793e-05, 7.481999999999975e-05, 7.405599999999943e-05, 7.416699999999998e-05, 7.424999999999793e-05, 7.424999999999793e-05, 7.468100000000005e-05, 7.395799999999897e-05, 7.491599999999779e-05, 7.476400000000147e-05, 7.398599999999811e-05, 7.443000000000033e-05, 7.418000000000008e-05, 7.454200000000036e-05, 7.48050000000007e-05, 7.451399999999775e-05, 7.484800000000236e-05, 7.397199999999854e-05, 7.441700000000023e-05, 7.424999999999793e-05]</msg>
<status status="PASS" starttime="20201112 09:54:51.407" endtime="20201112 09:54:51.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.402" endtime="20201112 09:54:51.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.412" endtime="20201112 09:54:51.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.415" endtime="20201112 09:54:51.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.414" endtime="20201112 09:54:51.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.410" endtime="20201112 09:54:51.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.041" endtime="20201112 09:54:51.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.041" endtime="20201112 09:54:51.436"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.445" endtime="20201112 09:54:51.464"></status>
</kw>
<msg timestamp="20201112 09:54:51.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.443" endtime="20201112 09:54:51.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.466" endtime="20201112 09:54:51.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.468" endtime="20201112 09:54:51.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.441" endtime="20201112 09:54:51.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.439" endtime="20201112 09:54:51.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.478" endtime="20201112 09:54:51.764"></status>
</kw>
<msg timestamp="20201112 09:54:51.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019928514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.477" endtime="20201112 09:54:51.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019928514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.768" endtime="20201112 09:54:51.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.776" endtime="20201112 09:54:51.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.474" endtime="20201112 09:54:51.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.472" endtime="20201112 09:54:51.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:51.783" level="INFO">${RESULT} = [{'time': 0.020003764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.524999999999893e-05, 'source_diff': 7.524999999999893e-05}, {'time': 0.020084806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:51.780" endtime="20201112 09:54:51.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:51.796" level="INFO">${ACCURACY} = {'time': [0.020003764, 0.020084806, 0.020163833, 0.020243819, 0.020322819, 0.020401847, 0.020482833, 0.020561819, 0.020641847, 0.020721903, 0.020802861, 0.020883861, 0.020962903, 0.021042861, 0.021122...</msg>
<status status="PASS" starttime="20201112 09:54:51.784" endtime="20201112 09:54:51.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.801" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 09:54:51.800" endtime="20201112 09:54:51.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.803" level="INFO">VALUE: [7.524999999999893e-05, 7.577799999999857e-05, 7.565199999999897e-05, 7.584700000000041e-05, 7.580499999999823e-05, 7.531900000000077e-05, 7.506900000000052e-05, 7.492999999999736e-05, 7.531900000000077e-05, 7.549999999999918e-05, 7.534699999999991e-05, 7.586099999999998e-05, 7.579200000000161e-05, 7.586099999999998e-05, 7.529199999999764e-05, 7.55700000000005e-05, 7.537499999999905e-05, 7.580599999999771e-05, 7.566700000000148e-05, 7.507e-05, 7.574999999999943e-05, 7.595800000000097e-05, 7.499999999999868e-05, 7.505499999999748e-05, 7.500000000000215e-05, 7.544399999999743e-05, 7.522199999999979e-05, 7.588899999999912e-05, 7.520800000000022e-05, 7.534699999999991e-05, 7.548599999999961e-05, 7.527800000000154e-05, 7.505600000000043e-05, 7.568100000000105e-05, 7.509699999999966e-05, 7.561099999999973e-05, 7.519500000000012e-05, 7.574999999999943e-05, 7.51110000000027e-05, 7.554099999999841e-05, 7.536099999999948e-05, 7.519400000000065e-05, 7.550000000000265e-05, 7.568000000000158e-05, 7.584700000000041e-05, 7.587499999999955e-05, 7.519400000000065e-05, 7.573599999999986e-05, 7.512500000000227e-05, 7.594500000000087e-05]</msg>
<status status="PASS" starttime="20201112 09:54:51.802" endtime="20201112 09:54:51.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.797" endtime="20201112 09:54:51.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.807" endtime="20201112 09:54:51.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.810" endtime="20201112 09:54:51.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.809" endtime="20201112 09:54:51.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.805" endtime="20201112 09:54:51.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.437" endtime="20201112 09:54:51.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.437" endtime="20201112 09:54:51.831"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.840" endtime="20201112 09:54:51.858"></status>
</kw>
<msg timestamp="20201112 09:54:51.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.838" endtime="20201112 09:54:51.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.860" endtime="20201112 09:54:51.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.862" endtime="20201112 09:54:51.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.836" endtime="20201112 09:54:51.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.834" endtime="20201112 09:54:51.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.872" endtime="20201112 09:54:52.158"></status>
</kw>
<msg timestamp="20201112 09:54:52.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019693917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019769986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.871" endtime="20201112 09:54:52.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019693917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019769986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.162" endtime="20201112 09:54:52.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.170" endtime="20201112 09:54:52.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.868" endtime="20201112 09:54:52.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.866" endtime="20201112 09:54:52.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.177" level="INFO">${RESULT} = [{'time': 0.019769986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.606900000000152e-05, 'source_diff': 7.606900000000152e-05}, {'time': 0.019851014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:52.174" endtime="20201112 09:54:52.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.191" level="INFO">${ACCURACY} = {'time': [0.019769986, 0.019851014, 0.019931014, 0.020010028, 0.020089028, 0.020168028, 0.020248028, 0.020330083, 0.020411056, 0.020492056, 0.020573083, 0.020653083, 0.020733083, 0.020815097, 0.020896...</msg>
<status status="PASS" starttime="20201112 09:54:52.178" endtime="20201112 09:54:52.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.196" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.195" endtime="20201112 09:54:52.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.198" level="INFO">VALUE: [7.606900000000152e-05, 7.632000000000125e-05, 7.661100000000073e-05, 7.673600000000086e-05, 7.687499999999708e-05, 7.627800000000254e-05, 7.636100000000048e-05, 7.684699999999794e-05, 7.641699999999876e-05, 7.629200000000211e-05, 7.6764e-05, 7.68189999999988e-05, 7.661100000000073e-05, 7.631900000000177e-05, 7.686099999999751e-05, 7.630599999999821e-05, 7.661100000000073e-05, 7.601399999999925e-05, 7.66250000000003e-05, 7.666700000000248e-05, 7.688900000000012e-05, 7.693099999999883e-05, 7.655600000000193e-05, 7.594500000000087e-05, 7.598600000000011e-05, 7.64449999999979e-05, 7.636199999999996e-05, 7.613899999999937e-05, 7.642999999999886e-05, 7.636100000000048e-05, 7.59029999999987e-05, 7.637499999999658e-05, 7.643000000000233e-05, 7.594500000000087e-05, 7.682000000000175e-05, 7.595800000000097e-05, 7.673600000000086e-05, 7.633400000000082e-05, 7.658400000000107e-05, 7.686100000000098e-05, 7.61249999999998e-05, 7.619500000000112e-05, 7.641699999999876e-05, 7.595800000000097e-05, 7.668000000000258e-05, 7.687500000000055e-05, 7.61249999999998e-05, 7.649999999999671e-05, 7.687500000000055e-05, 7.675000000000043e-05]</msg>
<status status="PASS" starttime="20201112 09:54:52.197" endtime="20201112 09:54:52.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.192" endtime="20201112 09:54:52.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.202" endtime="20201112 09:54:52.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.205" endtime="20201112 09:54:52.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.204" endtime="20201112 09:54:52.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.200" endtime="20201112 09:54:52.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.832" endtime="20201112 09:54:52.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.832" endtime="20201112 09:54:52.226"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.235" endtime="20201112 09:54:52.254"></status>
</kw>
<msg timestamp="20201112 09:54:52.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.233" endtime="20201112 09:54:52.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.255" endtime="20201112 09:54:52.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.258" endtime="20201112 09:54:52.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.231" endtime="20201112 09:54:52.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.229" endtime="20201112 09:54:52.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.267" endtime="20201112 09:54:52.553"></status>
</kw>
<msg timestamp="20201112 09:54:52.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.266" endtime="20201112 09:54:52.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.558" endtime="20201112 09:54:52.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.566" endtime="20201112 09:54:52.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.263" endtime="20201112 09:54:52.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.262" endtime="20201112 09:54:52.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.572" level="INFO">${RESULT} = [{'time': 0.019789292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.695900000000144e-05, 'source_diff': 7.695900000000144e-05}, {'time': 0.019872306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:52.569" endtime="20201112 09:54:52.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.586" level="INFO">${ACCURACY} = {'time': [0.019789292, 0.019872306, 0.019954319, 0.020034333, 0.020116333, 0.020196347, 0.020278347, 0.020359375, 0.020441347, 0.020521375, 0.020601389, 0.020681389, 0.020762389, 0.020843417, 0.020924...</msg>
<status status="PASS" starttime="20201112 09:54:52.573" endtime="20201112 09:54:52.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.590" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.589" endtime="20201112 09:54:52.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.593" level="INFO">VALUE: [7.695900000000144e-05, 7.704199999999939e-05, 7.766600000000054e-05, 7.725000000000093e-05, 7.706899999999905e-05, 7.719399999999918e-05, 7.698599999999764e-05, 7.794399999999993e-05, 7.720799999999875e-05, 7.78189999999998e-05, 7.718100000000255e-05, 7.737500000000105e-05, 7.72640000000005e-05, 7.756999999999903e-05, 7.705600000000243e-05, 7.71250000000008e-05, 7.738900000000062e-05, 7.787499999999808e-05, 7.78189999999998e-05, 7.734700000000191e-05, 7.723599999999789e-05, 7.704099999999992e-05, 7.729100000000017e-05, 7.786100000000198e-05, 7.711100000000123e-05, 7.709700000000166e-05, 7.761099999999826e-05, 7.76389999999974e-05, 7.769499999999915e-05, 7.723600000000136e-05, 7.738900000000062e-05, 7.736100000000148e-05, 7.769499999999915e-05, 7.773699999999786e-05, 7.741699999999976e-05, 7.756899999999955e-05, 7.723600000000136e-05, 7.701400000000025e-05, 7.724999999999746e-05, 7.754100000000042e-05, 7.794399999999993e-05, 7.762499999999783e-05, 7.705499999999949e-05, 7.729199999999964e-05, 7.745900000000194e-05, 7.786100000000198e-05, 7.773599999999839e-05, 7.793099999999983e-05, 7.768099999999958e-05, 7.779200000000014e-05]</msg>
<status status="PASS" starttime="20201112 09:54:52.591" endtime="20201112 09:54:52.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.587" endtime="20201112 09:54:52.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.596" endtime="20201112 09:54:52.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.600" endtime="20201112 09:54:52.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.598" endtime="20201112 09:54:52.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.594" endtime="20201112 09:54:52.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.227" endtime="20201112 09:54:52.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.226" endtime="20201112 09:54:52.620"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.629" endtime="20201112 09:54:52.649"></status>
</kw>
<msg timestamp="20201112 09:54:52.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.627" endtime="20201112 09:54:52.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.651" endtime="20201112 09:54:52.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.653" endtime="20201112 09:54:52.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.625" endtime="20201112 09:54:52.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.623" endtime="20201112 09:54:52.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.663" endtime="20201112 09:54:52.948"></status>
</kw>
<msg timestamp="20201112 09:54:52.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019792333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019870861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.661" endtime="20201112 09:54:52.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019792333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019870861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.952" endtime="20201112 09:54:52.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.960" endtime="20201112 09:54:52.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.659" endtime="20201112 09:54:52.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.657" endtime="20201112 09:54:52.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.967" level="INFO">${RESULT} = [{'time': 0.019870861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.852800000000132e-05, 'source_diff': 7.852800000000132e-05}, {'time': 0.019954861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:52.964" endtime="20201112 09:54:52.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.980" level="INFO">${ACCURACY} = {'time': [0.019870861, 0.019954861, 0.020037861, 0.020119861, 0.020200903, 0.020284875, 0.020367903, 0.020450889, 0.020534903, 0.020618917, 0.020701958, 0.020784917, 0.020866972, 0.020947931, 0.021030...</msg>
<status status="PASS" starttime="20201112 09:54:52.968" endtime="20201112 09:54:52.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.985" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.984" endtime="20201112 09:54:52.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.987" level="INFO">VALUE: [7.852800000000132e-05, 7.81250000000018e-05, 7.820799999999975e-05, 7.829200000000064e-05, 7.882000000000028e-05, 7.861099999999926e-05, 7.813900000000137e-05, 7.811099999999876e-05, 7.823599999999889e-05, 7.882000000000028e-05, 7.827699999999813e-05, 7.816700000000051e-05, 7.816600000000104e-05, 7.870899999999972e-05, 7.874999999999896e-05, 7.837499999999858e-05, 7.844400000000043e-05, 7.836099999999901e-05, 7.849999999999871e-05, 7.886099999999951e-05, 7.816700000000051e-05, 7.880600000000071e-05, 7.79449999999994e-05, 7.805599999999996e-05, 7.890299999999822e-05, 7.849999999999871e-05, 7.823599999999889e-05, 7.824999999999846e-05, 7.798699999999811e-05, 7.819400000000018e-05, 7.843000000000086e-05, 7.817999999999714e-05, 7.79579999999995e-05, 7.854099999999795e-05, 7.869400000000068e-05, 7.801400000000125e-05, 7.862499999999883e-05, 7.848600000000261e-05, 7.857000000000003e-05, 7.851400000000175e-05, 7.830600000000021e-05, 7.795900000000244e-05, 7.882000000000028e-05, 7.862499999999883e-05, 7.856900000000056e-05, 7.834799999999892e-05, 7.833299999999987e-05, 7.883300000000037e-05, 7.868000000000111e-05, 7.818100000000008e-05]</msg>
<status status="PASS" starttime="20201112 09:54:52.986" endtime="20201112 09:54:52.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.981" endtime="20201112 09:54:52.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.991" endtime="20201112 09:54:52.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.994" endtime="20201112 09:54:53.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.993" endtime="20201112 09:54:53.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.989" endtime="20201112 09:54:53.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.621" endtime="20201112 09:54:53.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.621" endtime="20201112 09:54:53.015"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.024" endtime="20201112 09:54:53.043"></status>
</kw>
<msg timestamp="20201112 09:54:53.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.022" endtime="20201112 09:54:53.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.045" endtime="20201112 09:54:53.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.047" endtime="20201112 09:54:53.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.020" endtime="20201112 09:54:53.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.018" endtime="20201112 09:54:53.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.057" endtime="20201112 09:54:53.342"></status>
</kw>
<msg timestamp="20201112 09:54:53.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019842944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.056" endtime="20201112 09:54:53.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019842944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.347" endtime="20201112 09:54:53.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.355" endtime="20201112 09:54:53.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.053" endtime="20201112 09:54:53.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.051" endtime="20201112 09:54:53.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:53.362" level="INFO">${RESULT} = [{'time': 0.019922667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.97230000000003e-05, 'source_diff': 7.97230000000003e-05}, {'time': 0.020006681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:53.358" endtime="20201112 09:54:53.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:53.375" level="INFO">${ACCURACY} = {'time': [0.019922667, 0.020006681, 0.020088681, 0.020171681, 0.020253722, 0.020336778, 0.020418722, 0.020502736, 0.02058575, 0.02066975, 0.02075275, 0.020834764, 0.020917764, 0.021001778, 0.021084778...</msg>
<status status="PASS" starttime="20201112 09:54:53.363" endtime="20201112 09:54:53.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.380" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 09:54:53.378" endtime="20201112 09:54:53.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.382" level="INFO">VALUE: [7.97230000000003e-05, 7.923699999999936e-05, 7.961199999999974e-05, 7.948699999999961e-05, 7.938899999999915e-05, 7.993099999999836e-05, 7.955500000000199e-05, 7.994400000000193e-05, 7.976399999999953e-05, 7.970800000000125e-05, 7.936100000000001e-05, 7.969499999999768e-05, 7.980599999999824e-05, 7.938899999999915e-05, 7.943099999999786e-05, 7.893100000000083e-05, 7.90840000000001e-05, 7.948699999999961e-05, 7.938899999999915e-05, 7.937499999999958e-05, 7.899999999999921e-05, 7.9151999999999e-05, 7.941599999999882e-05, 7.937499999999958e-05, 7.911099999999976e-05, 7.949999999999971e-05, 7.949999999999971e-05, 7.919499999999718e-05, 7.970900000000072e-05, 7.961100000000026e-05, 7.954199999999842e-05, 7.94169999999983e-05, 7.94450000000009e-05, 7.986199999999999e-05, 7.979200000000214e-05, 7.944400000000143e-05, 7.927800000000207e-05, 7.993000000000236e-05, 7.934700000000044e-05, 7.941599999999882e-05, 7.926399999999903e-05, 7.95970000000007e-05, 7.931899999999784e-05, 7.923599999999989e-05, 7.970900000000072e-05, 7.979199999999867e-05, 7.980599999999824e-05, 7.898599999999964e-05, 7.979200000000214e-05, 7.912499999999933e-05]</msg>
<status status="PASS" starttime="20201112 09:54:53.381" endtime="20201112 09:54:53.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.376" endtime="20201112 09:54:53.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.386" endtime="20201112 09:54:53.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:53.389" endtime="20201112 09:54:53.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.387" endtime="20201112 09:54:53.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.384" endtime="20201112 09:54:53.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.016" endtime="20201112 09:54:53.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.016" endtime="20201112 09:54:53.410"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.418" endtime="20201112 09:54:53.438"></status>
</kw>
<msg timestamp="20201112 09:54:53.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.417" endtime="20201112 09:54:53.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.440" endtime="20201112 09:54:53.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.442" endtime="20201112 09:54:53.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.414" endtime="20201112 09:54:53.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.412" endtime="20201112 09:54:53.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.452" endtime="20201112 09:54:53.737"></status>
</kw>
<msg timestamp="20201112 09:54:53.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019825083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.451" endtime="20201112 09:54:53.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019825083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.741" endtime="20201112 09:54:53.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.750" endtime="20201112 09:54:53.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.448" endtime="20201112 09:54:53.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.447" endtime="20201112 09:54:53.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:53.756" level="INFO">${RESULT} = [{'time': 0.019825083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.050000000000071e-05, 'source_diff': 8.050000000000071e-05}, {'time': 0.019911097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:53.753" endtime="20201112 09:54:53.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:53.770" level="INFO">${ACCURACY} = {'time': [0.019825083, 0.019911097, 0.019995111, 0.020078111, 0.020162167, 0.020248125, 0.020330139, 0.020413153, 0.020497181, 0.020582181, 0.020665167, 0.020751181, 0.020837194, 0.020920194, 0.021006...</msg>
<status status="PASS" starttime="20201112 09:54:53.757" endtime="20201112 09:54:53.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.775" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 09:54:53.774" endtime="20201112 09:54:53.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.777" level="INFO">VALUE: [8.050000000000071e-05, 8.087499999999762e-05, 8.037500000000058e-05, 8.054199999999942e-05, 8.054200000000289e-05, 7.998599999999717e-05, 7.993100000000183e-05, 8.055599999999899e-05, 7.997300000000054e-05, 8.007000000000153e-05, 8.075000000000096e-05, 8.043099999999886e-05, 8.025000000000046e-05, 8.059699999999823e-05, 8.037499999999712e-05, 7.994399999999846e-05, 8.011100000000076e-05, 8.087500000000108e-05, 8.080599999999924e-05, 7.998600000000064e-05, 8.051400000000028e-05, 8.036100000000101e-05, 8.0458999999998e-05, 8.036100000000101e-05, 8.018100000000208e-05, 8.054199999999942e-05, 8.001399999999978e-05, 8.081899999999934e-05, 8.093099999999936e-05, 7.992999999999889e-05, 8.06520000000005e-05, 8.072200000000182e-05, 8.025000000000046e-05, 8.044399999999896e-05, 8.080499999999977e-05, 8.070799999999878e-05, 7.995799999999803e-05, 8.062500000000083e-05, 8.072199999999835e-05, 8.032000000000178e-05, 8.054200000000289e-05, 8.088900000000065e-05, 8.016700000000251e-05, 8.090200000000075e-05, 8.068099999999911e-05, 8.050000000000071e-05, 8.027700000000013e-05, 7.994400000000193e-05, 8.086100000000151e-05, 8.012500000000033e-05]</msg>
<status status="PASS" starttime="20201112 09:54:53.776" endtime="20201112 09:54:53.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.771" endtime="20201112 09:54:53.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.781" endtime="20201112 09:54:53.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:53.784" endtime="20201112 09:54:53.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.783" endtime="20201112 09:54:53.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.779" endtime="20201112 09:54:53.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.411" endtime="20201112 09:54:53.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.410" endtime="20201112 09:54:53.805"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.814" endtime="20201112 09:54:53.834"></status>
</kw>
<msg timestamp="20201112 09:54:53.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.812" endtime="20201112 09:54:53.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.835" endtime="20201112 09:54:53.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.838" endtime="20201112 09:54:53.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.810" endtime="20201112 09:54:53.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.808" endtime="20201112 09:54:53.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.848" endtime="20201112 09:54:54.134"></status>
</kw>
<msg timestamp="20201112 09:54:54.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.846" endtime="20201112 09:54:54.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.138" endtime="20201112 09:54:54.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.146" endtime="20201112 09:54:54.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.844" endtime="20201112 09:54:54.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.842" endtime="20201112 09:54:54.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.153" level="INFO">${RESULT} = [{'time': 0.019821139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.140300000000072e-05, 'source_diff': 8.140300000000072e-05}, {'time': 0.019906111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:54.149" endtime="20201112 09:54:54.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.166" level="INFO">${ACCURACY} = {'time': [0.019821139, 0.019906111, 0.019992083, 0.020076111, 0.020162083, 0.020246097, 0.020332111, 0.020417139, 0.020504139, 0.020590139, 0.020675153, 0.020760139, 0.020844167, 0.020931167, 0.021016...</msg>
<status status="PASS" starttime="20201112 09:54:54.154" endtime="20201112 09:54:54.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.171" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.170" endtime="20201112 09:54:54.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.173" level="INFO">VALUE: [8.140300000000072e-05, 8.120799999999928e-05, 8.098600000000164e-05, 8.112500000000133e-05, 8.17910000000012e-05, 8.091600000000032e-05, 8.137500000000158e-05, 8.188900000000165e-05, 8.150000000000171e-05, 8.125000000000146e-05, 8.168100000000011e-05, 8.104199999999992e-05, 8.138900000000115e-05, 8.109800000000167e-05, 8.17919999999972e-05, 8.111199999999777e-05, 8.184799999999895e-05, 8.126400000000103e-05, 8.17910000000012e-05, 8.130500000000027e-05, 8.186099999999905e-05, 8.18329999999999e-05, 8.118000000000014e-05, 8.116700000000004e-05, 8.174999999999849e-05, 8.136100000000202e-05, 8.179200000000067e-05, 8.145799999999953e-05, 8.169499999999968e-05, 8.098600000000164e-05, 8.112500000000133e-05, 8.100000000000121e-05, 8.134699999999898e-05, 8.122200000000232e-05, 8.101400000000078e-05, 8.176400000000153e-05, 8.136099999999855e-05, 8.141600000000082e-05, 8.101399999999731e-05, 8.130500000000027e-05, 8.112500000000133e-05, 8.137499999999812e-05, 8.129200000000017e-05, 8.122200000000232e-05, 8.166699999999708e-05, 8.158399999999913e-05, 8.14170000000003e-05, 8.090300000000022e-05, 8.104100000000045e-05, 8.123599999999842e-05]</msg>
<status status="PASS" starttime="20201112 09:54:54.172" endtime="20201112 09:54:54.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.167" endtime="20201112 09:54:54.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.177" endtime="20201112 09:54:54.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.180" endtime="20201112 09:54:54.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.178" endtime="20201112 09:54:54.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.175" endtime="20201112 09:54:54.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.806" endtime="20201112 09:54:54.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.805" endtime="20201112 09:54:54.201"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.209" endtime="20201112 09:54:54.229"></status>
</kw>
<msg timestamp="20201112 09:54:54.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.208" endtime="20201112 09:54:54.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.231" endtime="20201112 09:54:54.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.233" endtime="20201112 09:54:54.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.205" endtime="20201112 09:54:54.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.203" endtime="20201112 09:54:54.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.243" endtime="20201112 09:54:54.529"></status>
</kw>
<msg timestamp="20201112 09:54:54.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019861958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019944278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.241" endtime="20201112 09:54:54.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019861958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019944278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.533" endtime="20201112 09:54:54.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.541" endtime="20201112 09:54:54.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.239" endtime="20201112 09:54:54.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.237" endtime="20201112 09:54:54.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.548" level="INFO">${RESULT} = [{'time': 0.019944278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.232000000000031e-05, 'source_diff': 8.232000000000031e-05}, {'time': 0.020031306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:54.544" endtime="20201112 09:54:54.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.561" level="INFO">${ACCURACY} = {'time': [0.019944278, 0.020031306, 0.020117306, 0.020204306, 0.020289319, 0.020375319, 0.020462333, 0.020547361, 0.020634375, 0.020720375, 0.020808361, 0.020894389, 0.020981389, 0.021066417, 0.021152...</msg>
<status status="PASS" starttime="20201112 09:54:54.549" endtime="20201112 09:54:54.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.565" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.564" endtime="20201112 09:54:54.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.568" level="INFO">VALUE: [8.232000000000031e-05, 8.251399999999881e-05, 8.215300000000147e-05, 8.204199999999745e-05, 8.205500000000102e-05, 8.223599999999942e-05, 8.223599999999942e-05, 8.248599999999967e-05, 8.263899999999894e-05, 8.231900000000084e-05, 8.236099999999955e-05, 8.193100000000036e-05, 8.223599999999942e-05, 8.282000000000081e-05, 8.255600000000099e-05, 8.201399999999831e-05, 8.236200000000249e-05, 8.202799999999788e-05, 8.194400000000046e-05, 8.259700000000023e-05, 8.216600000000157e-05, 8.240199999999878e-05, 8.258300000000066e-05, 8.218100000000061e-05, 8.281900000000134e-05, 8.225000000000246e-05, 8.216700000000104e-05, 8.24309999999974e-05, 8.199999999999874e-05, 8.28330000000009e-05, 8.274999999999949e-05, 8.269500000000068e-05, 8.205600000000049e-05, 8.279200000000167e-05, 8.275000000000296e-05, 8.281900000000134e-05, 8.194400000000046e-05, 8.281900000000134e-05, 8.291600000000232e-05, 8.288899999999919e-05, 8.286199999999952e-05, 8.216700000000104e-05, 8.269399999999774e-05, 8.241699999999783e-05, 8.244500000000043e-05, 8.232000000000031e-05, 8.2152999999998e-05, 8.280600000000124e-05, 8.254200000000142e-05, 8.240200000000225e-05]</msg>
<status status="PASS" starttime="20201112 09:54:54.566" endtime="20201112 09:54:54.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.562" endtime="20201112 09:54:54.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.571" endtime="20201112 09:54:54.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.575" endtime="20201112 09:54:54.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.573" endtime="20201112 09:54:54.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.570" endtime="20201112 09:54:54.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.202" endtime="20201112 09:54:54.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.201" endtime="20201112 09:54:54.596"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.604" endtime="20201112 09:54:54.624"></status>
</kw>
<msg timestamp="20201112 09:54:54.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.603" endtime="20201112 09:54:54.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.626" endtime="20201112 09:54:54.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.628" endtime="20201112 09:54:54.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.600" endtime="20201112 09:54:54.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.598" endtime="20201112 09:54:54.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.638" endtime="20201112 09:54:54.924"></status>
</kw>
<msg timestamp="20201112 09:54:54.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.637" endtime="20201112 09:54:54.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.928" endtime="20201112 09:54:54.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.936" endtime="20201112 09:54:54.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.634" endtime="20201112 09:54:54.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.632" endtime="20201112 09:54:54.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.943" level="INFO">${RESULT} = [{'time': 0.019881361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.358300000000166e-05, 'source_diff': 8.358300000000166e-05}, {'time': 0.019968375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:54.939" endtime="20201112 09:54:54.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.956" level="INFO">${ACCURACY} = {'time': [0.019881361, 0.019968375, 0.020055375, 0.020142375, 0.020228403, 0.020314389, 0.020400417, 0.020489417, 0.020575444, 0.020662417, 0.020749458, 0.020836458, 0.020922458, 0.021011472, 0.021099...</msg>
<status status="PASS" starttime="20201112 09:54:54.944" endtime="20201112 09:54:54.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.960" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.959" endtime="20201112 09:54:54.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.963" level="INFO">VALUE: [8.358300000000166e-05, 8.369399999999874e-05, 8.337500000000012e-05, 8.358300000000166e-05, 8.313899999999944e-05, 8.350000000000024e-05, 8.326399999999956e-05, 8.330599999999827e-05, 8.311099999999683e-05, 8.359799999999723e-05, 8.308299999999769e-05, 8.374999999999702e-05, 8.32910000000027e-05, 8.31110000000003e-05, 8.386100000000105e-05, 8.355499999999905e-05, 8.372199999999788e-05, 8.379200000000267e-05, 8.333299999999794e-05, 8.362500000000037e-05, 8.34720000000011e-05, 8.375000000000049e-05, 8.297300000000007e-05, 8.312499999999987e-05, 8.30980000000002e-05, 8.380600000000224e-05, 8.319400000000171e-05, 8.342999999999892e-05, 8.301400000000278e-05, 8.342999999999892e-05, 8.312499999999987e-05, 8.366699999999908e-05, 8.386100000000105e-05, 8.368100000000211e-05, 8.359700000000123e-05, 8.384700000000148e-05, 8.355599999999852e-05, 8.373600000000092e-05, 8.336100000000055e-05, 8.350000000000024e-05, 8.32919999999987e-05, 8.387500000000062e-05, 8.304199999999845e-05, 8.340299999999926e-05, 8.358300000000166e-05, 8.301399999999931e-05, 8.306899999999812e-05, 8.350000000000024e-05, 8.358299999999819e-05, 8.337500000000012e-05]</msg>
<status status="PASS" starttime="20201112 09:54:54.962" endtime="20201112 09:54:54.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.957" endtime="20201112 09:54:54.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.966" endtime="20201112 09:54:54.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.970" endtime="20201112 09:54:54.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.968" endtime="20201112 09:54:54.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.965" endtime="20201112 09:54:54.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.596" endtime="20201112 09:54:54.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.596" endtime="20201112 09:54:54.991"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.999" endtime="20201112 09:54:55.020"></status>
</kw>
<msg timestamp="20201112 09:54:55.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.998" endtime="20201112 09:54:55.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.021" endtime="20201112 09:54:55.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.023" endtime="20201112 09:54:55.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.995" endtime="20201112 09:54:55.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.993" endtime="20201112 09:54:55.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.034" endtime="20201112 09:54:55.319"></status>
</kw>
<msg timestamp="20201112 09:54:55.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019938931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.032" endtime="20201112 09:54:55.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019938931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.323" endtime="20201112 09:54:55.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.331" endtime="20201112 09:54:55.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.029" endtime="20201112 09:54:55.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.028" endtime="20201112 09:54:55.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:55.338" level="INFO">${RESULT} = [{'time': 0.019938931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.42370000000009e-05, 'source_diff': 8.42370000000009e-05}, {'time': 0.020027931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:55.335" endtime="20201112 09:54:55.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:55.352" level="INFO">${ACCURACY} = {'time': [0.019938931, 0.020027931, 0.020117944, 0.020206958, 0.020296958, 0.020385958, 0.020472986, 0.020559972, 0.020649, 0.020739042, 0.020827014, 0.020916042, 0.021003028, 0.021091069, 0.021181042...</msg>
<status status="PASS" starttime="20201112 09:54:55.339" endtime="20201112 09:54:55.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.357" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 09:54:55.356" endtime="20201112 09:54:55.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.360" level="INFO">VALUE: [8.42370000000009e-05, 8.41249999999974e-05, 8.479099999999726e-05, 8.431899999999937e-05, 8.481899999999987e-05, 8.441600000000035e-05, 8.470799999999931e-05, 8.411099999999783e-05, 8.445799999999906e-05, 8.436099999999808e-05, 8.430600000000274e-05, 8.452800000000038e-05, 8.437500000000112e-05, 8.391599999999985e-05, 8.462500000000137e-05, 8.455599999999952e-05, 8.431999999999884e-05, 8.484799999999848e-05, 8.41249999999974e-05, 8.425000000000099e-05, 8.437500000000112e-05, 8.400000000000074e-05, 8.406899999999912e-05, 8.425000000000099e-05, 8.466700000000008e-05, 8.484700000000248e-05, 8.44859999999982e-05, 8.466700000000008e-05, 8.480599999999977e-05, 8.476399999999759e-05, 8.49309999999999e-05, 8.419499999999872e-05, 8.452700000000091e-05, 8.487499999999815e-05, 8.476400000000106e-05, 8.487499999999815e-05, 8.458300000000266e-05, 8.394400000000246e-05, 8.481899999999987e-05, 8.456999999999909e-05, 8.431900000000284e-05, 8.412500000000087e-05, 8.455599999999952e-05, 8.46249999999979e-05, 8.405599999999902e-05, 8.456999999999909e-05, 8.480599999999977e-05, 8.394399999999899e-05, 8.41249999999974e-05, 8.44309999999994e-05]</msg>
<status status="PASS" starttime="20201112 09:54:55.358" endtime="20201112 09:54:55.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.353" endtime="20201112 09:54:55.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.363" endtime="20201112 09:54:55.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:55.367" endtime="20201112 09:54:55.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.366" endtime="20201112 09:54:55.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.362" endtime="20201112 09:54:55.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.992" endtime="20201112 09:54:55.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.991" endtime="20201112 09:54:55.388"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.397" endtime="20201112 09:54:55.416"></status>
</kw>
<msg timestamp="20201112 09:54:55.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.395" endtime="20201112 09:54:55.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.417" endtime="20201112 09:54:55.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.420" endtime="20201112 09:54:55.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.393" endtime="20201112 09:54:55.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.391" endtime="20201112 09:54:55.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.430" endtime="20201112 09:54:55.715"></status>
</kw>
<msg timestamp="20201112 09:54:55.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.428" endtime="20201112 09:54:55.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.719" endtime="20201112 09:54:55.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.727" endtime="20201112 09:54:55.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.426" endtime="20201112 09:54:55.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.424" endtime="20201112 09:54:55.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:55.734" level="INFO">${RESULT} = [{'time': 0.019847167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.545899999999954e-05, 'source_diff': 8.545899999999954e-05}, {'time': 0.019938208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:55.731" endtime="20201112 09:54:55.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:55.747" level="INFO">${ACCURACY} = {'time': [0.019847167, 0.019938208, 0.020029194, 0.02011825, 0.020207208, 0.020295222, 0.020385292, 0.020476292, 0.020566264, 0.020655236, 0.020745264, 0.020834264, 0.020925278, 0.021016278, 0.0211072...</msg>
<status status="PASS" starttime="20201112 09:54:55.735" endtime="20201112 09:54:55.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.752" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 09:54:55.751" endtime="20201112 09:54:55.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.754" level="INFO">VALUE: [8.545899999999954e-05, 8.527699999999819e-05, 8.568000000000117e-05, 8.54859999999992e-05, 8.51110000000023e-05, 8.591600000000185e-05, 8.505600000000002e-05, 8.59859999999997e-05, 8.555600000000052e-05, 8.558300000000019e-05, 8.551399999999834e-05, 8.534700000000298e-05, 8.54859999999992e-05, 8.54310000000004e-05, 8.54859999999992e-05, 8.586099999999958e-05, 8.54720000000031e-05, 8.583300000000044e-05, 8.531900000000037e-05, 8.519400000000024e-05, 8.518000000000067e-05, 8.536100000000255e-05, 8.595900000000004e-05, 8.53050000000008e-05, 8.52370000000019e-05, 8.505600000000002e-05, 8.519499999999972e-05, 8.518100000000015e-05, 8.51249999999984e-05, 8.51249999999984e-05, 8.587499999999915e-05, 8.559799999999923e-05, 8.524999999999852e-05, 8.541700000000083e-05, 8.537500000000212e-05, 8.527799999999766e-05, 8.493000000000042e-05, 8.519400000000024e-05, 8.536099999999908e-05, 8.537500000000212e-05, 8.500000000000174e-05, 8.555600000000052e-05, 8.563900000000194e-05, 8.543099999999693e-05, 8.54310000000004e-05, 8.582000000000034e-05, 8.554200000000095e-05, 8.550000000000224e-05, 8.509699999999926e-05, 8.565299999999804e-05]</msg>
<status status="PASS" starttime="20201112 09:54:55.753" endtime="20201112 09:54:55.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.748" endtime="20201112 09:54:55.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.758" endtime="20201112 09:54:55.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:55.761" endtime="20201112 09:54:55.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.760" endtime="20201112 09:54:55.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.756" endtime="20201112 09:54:55.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.389" endtime="20201112 09:54:55.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.389" endtime="20201112 09:54:55.782"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.791" endtime="20201112 09:54:55.811"></status>
</kw>
<msg timestamp="20201112 09:54:55.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.789" endtime="20201112 09:54:55.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.813" endtime="20201112 09:54:55.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.815" endtime="20201112 09:54:55.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.787" endtime="20201112 09:54:55.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.785" endtime="20201112 09:54:55.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.825" endtime="20201112 09:54:56.112"></status>
</kw>
<msg timestamp="20201112 09:54:56.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019920972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.824" endtime="20201112 09:54:56.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019920972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.116" endtime="20201112 09:54:56.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.124" endtime="20201112 09:54:56.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.821" endtime="20201112 09:54:56.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.819" endtime="20201112 09:54:56.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.131" level="INFO">${RESULT} = [{'time': 0.019920972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.663899999999947e-05, 'source_diff': 8.663899999999947e-05}, {'time': 0.020013069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:56.128" endtime="20201112 09:54:56.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.144" level="INFO">${ACCURACY} = {'time': [0.019920972, 0.020013069, 0.020104986, 0.020196042, 0.020287, 0.020378014, 0.020469014, 0.020561028, 0.020650028, 0.020741042, 0.020833056, 0.020923069, 0.021015083, 0.021107083, 0.021197097...</msg>
<status status="PASS" starttime="20201112 09:54:56.132" endtime="20201112 09:54:56.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.149" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.148" endtime="20201112 09:54:56.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.151" level="INFO">VALUE: [8.663899999999947e-05, 8.605500000000155e-05, 8.692999999999895e-05, 8.605600000000102e-05, 8.64860000000002e-05, 8.668099999999818e-05, 8.608300000000069e-05, 8.687500000000015e-05, 8.654200000000195e-05, 8.641700000000183e-05, 8.687500000000015e-05, 8.680499999999883e-05, 8.605500000000155e-05, 8.675000000000002e-05, 8.605500000000155e-05, 8.636100000000008e-05, 8.604199999999798e-05, 8.66249999999999e-05, 8.623599999999995e-05, 8.655600000000152e-05, 8.659800000000023e-05, 8.66249999999999e-05, 8.613899999999897e-05, 8.687500000000015e-05, 8.651400000000281e-05, 8.612500000000287e-05, 8.613799999999949e-05, 8.61249999999994e-05, 8.641599999999888e-05, 8.611099999999983e-05, 8.597200000000013e-05, 8.64860000000002e-05, 8.629199999999823e-05, 8.651399999999934e-05, 8.644500000000097e-05, 8.672200000000088e-05, 8.675000000000002e-05, 8.641699999999836e-05, 8.602800000000188e-05, 8.682000000000134e-05, 8.6153000000002e-05, 8.601399999999884e-05, 8.673600000000045e-05, 8.626399999999909e-05, 8.6153000000002e-05, 8.61249999999994e-05, 8.624999999999952e-05, 8.605500000000155e-05, 8.642999999999845e-05, 8.626400000000256e-05]</msg>
<status status="PASS" starttime="20201112 09:54:56.150" endtime="20201112 09:54:56.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.145" endtime="20201112 09:54:56.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.159" endtime="20201112 09:54:56.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.162" endtime="20201112 09:54:56.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.160" endtime="20201112 09:54:56.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.157" endtime="20201112 09:54:56.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.783" endtime="20201112 09:54:56.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.783" endtime="20201112 09:54:56.183"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.191" endtime="20201112 09:54:56.212"></status>
</kw>
<msg timestamp="20201112 09:54:56.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.190" endtime="20201112 09:54:56.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.213" endtime="20201112 09:54:56.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.216" endtime="20201112 09:54:56.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.187" endtime="20201112 09:54:56.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.185" endtime="20201112 09:54:56.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.225" endtime="20201112 09:54:56.510"></status>
</kw>
<msg timestamp="20201112 09:54:56.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.224" endtime="20201112 09:54:56.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.514" endtime="20201112 09:54:56.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.522" endtime="20201112 09:54:56.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.221" endtime="20201112 09:54:56.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.220" endtime="20201112 09:54:56.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.529" level="INFO">${RESULT} = [{'time': 0.019852514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.69310000000019e-05, 'source_diff': 8.69310000000019e-05}, {'time': 0.019944542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:56.526" endtime="20201112 09:54:56.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.543" level="INFO">${ACCURACY} = {'time': [0.019852514, 0.019944542, 0.020037542, 0.020127556, 0.020217556, 0.020310611, 0.020402569, 0.020494583, 0.020586583, 0.020676583, 0.020766597, 0.020858597, 0.020949625, 0.021039653, 0.021130...</msg>
<status status="PASS" starttime="20201112 09:54:56.530" endtime="20201112 09:54:56.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.547" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.546" endtime="20201112 09:54:56.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.549" level="INFO">VALUE: [8.69310000000019e-05, 8.713899999999997e-05, 8.74449999999985e-05, 8.74310000000024e-05, 8.780600000000277e-05, 8.727799999999966e-05, 8.78189999999994e-05, 8.759700000000176e-05, 8.741599999999988e-05, 8.692999999999895e-05, 8.71250000000004e-05, 8.697200000000113e-05, 8.763900000000047e-05, 8.706999999999812e-05, 8.723599999999748e-05, 8.71799999999992e-05, 8.786100000000158e-05, 8.704199999999898e-05, 8.786100000000158e-05, 8.698700000000018e-05, 8.786099999999811e-05, 8.758299999999872e-05, 8.744399999999902e-05, 8.71250000000004e-05, 8.779100000000026e-05, 8.756899999999915e-05, 8.705499999999908e-05, 8.726400000000009e-05, 8.755599999999905e-05, 8.773600000000145e-05, 8.700000000000027e-05, 8.783400000000191e-05, 8.747200000000163e-05, 8.76669999999996e-05, 8.74860000000012e-05, 8.740200000000031e-05, 8.756899999999915e-05, 8.700000000000027e-05, 8.779100000000026e-05, 8.744399999999902e-05, 8.704099999999951e-05, 8.69999999999968e-05, 8.76250000000009e-05, 8.737500000000065e-05, 8.795900000000204e-05, 8.737500000000065e-05, 8.7944999999999e-05, 8.748599999999773e-05, 8.704199999999898e-05, 8.768099999999918e-05]</msg>
<status status="PASS" starttime="20201112 09:54:56.548" endtime="20201112 09:54:56.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.543" endtime="20201112 09:54:56.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.553" endtime="20201112 09:54:56.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.556" endtime="20201112 09:54:56.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.555" endtime="20201112 09:54:56.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.551" endtime="20201112 09:54:56.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.184" endtime="20201112 09:54:56.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.183" endtime="20201112 09:54:56.577"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.586" endtime="20201112 09:54:56.606"></status>
</kw>
<msg timestamp="20201112 09:54:56.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.584" endtime="20201112 09:54:56.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.607" endtime="20201112 09:54:56.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.610" endtime="20201112 09:54:56.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.582" endtime="20201112 09:54:56.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.580" endtime="20201112 09:54:56.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.620" endtime="20201112 09:54:56.905"></status>
</kw>
<msg timestamp="20201112 09:54:56.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019907403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.618" endtime="20201112 09:54:56.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019907403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.909" endtime="20201112 09:54:56.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.917" endtime="20201112 09:54:56.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.616" endtime="20201112 09:54:56.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.614" endtime="20201112 09:54:56.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.924" level="INFO">${RESULT} = [{'time': 0.019907403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.868100000000018e-05, 'source_diff': 8.868100000000018e-05}, {'time': 0.019998403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:56.920" endtime="20201112 09:54:56.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.938" level="INFO">${ACCURACY} = {'time': [0.019907403, 0.019998403, 0.020091431, 0.020184431, 0.020278444, 0.020369431, 0.020461444, 0.020552458, 0.020644458, 0.020738486, 0.020830486, 0.020924514, 0.021018528, 0.021109514, 0.021200...</msg>
<status status="PASS" starttime="20201112 09:54:56.925" endtime="20201112 09:54:56.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.942" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.941" endtime="20201112 09:54:56.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.945" level="INFO">VALUE: [8.868100000000018e-05, 8.865300000000104e-05, 8.876400000000159e-05, 8.831999999999937e-05, 8.891599999999791e-05, 8.834800000000198e-05, 8.838799999999827e-05, 8.862499999999843e-05, 8.855500000000058e-05, 8.813900000000097e-05, 8.815299999999707e-05, 8.807000000000259e-05, 8.807000000000259e-05, 8.859699999999929e-05, 8.79860000000017e-05, 8.84730000000021e-05, 8.873599999999898e-05, 8.826400000000109e-05, 8.793099999999943e-05, 8.879100000000126e-05, 8.836099999999861e-05, 8.794399999999952e-05, 8.837499999999818e-05, 8.805500000000008e-05, 8.805500000000008e-05, 8.884699999999954e-05, 8.843000000000045e-05, 8.837499999999818e-05, 8.879199999999726e-05, 8.88060000000003e-05, 8.801400000000084e-05, 8.861099999999886e-05, 8.893100000000043e-05, 8.793099999999943e-05, 8.81120000000013e-05, 8.875000000000202e-05, 8.838900000000122e-05, 8.805500000000008e-05, 8.837499999999818e-05, 8.822200000000238e-05, 8.798599999999823e-05, 8.843099999999993e-05, 8.84449999999995e-05, 8.881999999999987e-05, 8.88060000000003e-05, 8.875000000000202e-05, 8.806999999999912e-05, 8.888900000000172e-05, 8.866600000000113e-05, 8.840299999999732e-05]</msg>
<status status="PASS" starttime="20201112 09:54:56.943" endtime="20201112 09:54:56.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.939" endtime="20201112 09:54:56.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.948" endtime="20201112 09:54:56.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.952" endtime="20201112 09:54:56.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.950" endtime="20201112 09:54:56.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.947" endtime="20201112 09:54:56.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.578" endtime="20201112 09:54:56.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.578" endtime="20201112 09:54:56.973"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.981" endtime="20201112 09:54:57.001"></status>
</kw>
<msg timestamp="20201112 09:54:57.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.980" endtime="20201112 09:54:57.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.003" endtime="20201112 09:54:57.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.005" endtime="20201112 09:54:57.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.977" endtime="20201112 09:54:57.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.975" endtime="20201112 09:54:57.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.015" endtime="20201112 09:54:57.300"></status>
</kw>
<msg timestamp="20201112 09:54:57.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.013" endtime="20201112 09:54:57.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.304" endtime="20201112 09:54:57.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.312" endtime="20201112 09:54:57.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.011" endtime="20201112 09:54:57.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.009" endtime="20201112 09:54:57.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:57.319" level="INFO">${RESULT} = [{'time': 0.019734903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.963900000000247e-05, 'source_diff': 8.963900000000247e-05}, {'time': 0.019827931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:57.316" endtime="20201112 09:54:57.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:57.332" level="INFO">${ACCURACY} = {'time': [0.019734903, 0.019827931, 0.019919931, 0.020012917, 0.020104931, 0.0202, 0.020292944, 0.020387958, 0.020482972, 0.020574972, 0.020666986, 0.02076, 0.020854042, 0.020948, 0.021041028, 0.02113...</msg>
<status status="PASS" starttime="20201112 09:54:57.320" endtime="20201112 09:54:57.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.337" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 09:54:57.336" endtime="20201112 09:54:57.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.339" level="INFO">VALUE: [8.963900000000247e-05, 8.983400000000044e-05, 8.976399999999912e-05, 8.922300000000286e-05, 8.957000000000062e-05, 8.968099999999771e-05, 8.96800000000017e-05, 8.91800000000012e-05, 8.986100000000011e-05, 8.904100000000151e-05, 8.89999999999988e-05, 8.993100000000143e-05, 8.934799999999951e-05, 8.904200000000098e-05, 8.957000000000062e-05, 8.972200000000041e-05, 8.89999999999988e-05, 8.906900000000065e-05, 8.919500000000025e-05, 8.948599999999973e-05, 8.936099999999961e-05, 8.970800000000084e-05, 8.987499999999968e-05, 8.98190000000014e-05, 8.977799999999869e-05, 8.902800000000141e-05, 8.969400000000127e-05, 8.907000000000012e-05, 8.955599999999758e-05, 8.969400000000127e-05, 8.9945000000001e-05, 8.923599999999948e-05, 8.973699999999946e-05, 8.919400000000077e-05, 8.955500000000158e-05, 8.956899999999768e-05, 8.936100000000308e-05, 8.919500000000025e-05, 8.904100000000151e-05, 8.993100000000143e-05, 8.96800000000017e-05, 8.968100000000118e-05, 8.905600000000055e-05, 8.968100000000118e-05, 8.908399999999969e-05, 8.993099999999796e-05, 8.934799999999951e-05, 8.912499999999893e-05, 8.981899999999793e-05, 8.89999999999988e-05]</msg>
<status status="PASS" starttime="20201112 09:54:57.338" endtime="20201112 09:54:57.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.333" endtime="20201112 09:54:57.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.343" endtime="20201112 09:54:57.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:57.346" endtime="20201112 09:54:57.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.345" endtime="20201112 09:54:57.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.341" endtime="20201112 09:54:57.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.973" endtime="20201112 09:54:57.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.973" endtime="20201112 09:54:57.367"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.376" endtime="20201112 09:54:57.396"></status>
</kw>
<msg timestamp="20201112 09:54:57.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.374" endtime="20201112 09:54:57.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.398" endtime="20201112 09:54:57.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.401" endtime="20201112 09:54:57.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.372" endtime="20201112 09:54:57.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.369" endtime="20201112 09:54:57.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.411" endtime="20201112 09:54:57.697"></status>
</kw>
<msg timestamp="20201112 09:54:57.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.410" endtime="20201112 09:54:57.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.702" endtime="20201112 09:54:57.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.710" endtime="20201112 09:54:57.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.407" endtime="20201112 09:54:57.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.405" endtime="20201112 09:54:57.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:57.716" level="INFO">${RESULT} = [{'time': 0.019921083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.016599999999916e-05, 'source_diff': 9.016599999999916e-05}, {'time': 0.020016083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:57.713" endtime="20201112 09:54:57.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:57.730" level="INFO">${ACCURACY} = {'time': [0.019921083, 0.020016083, 0.020109097, 0.020202111, 0.020295097, 0.020391125, 0.020484125, 0.020577125, 0.020670181, 0.020766153, 0.020859181, 0.020953181, 0.021047181, 0.021142181, 0.021236...</msg>
<status status="PASS" starttime="20201112 09:54:57.717" endtime="20201112 09:54:57.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.734" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 09:54:57.733" endtime="20201112 09:54:57.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.737" level="INFO">VALUE: [9.016599999999916e-05, 9.011100000000036e-05, 9.042999999999898e-05, 9.012499999999993e-05, 9.005500000000208e-05, 9.001399999999937e-05, 9.080599999999883e-05, 9.009700000000079e-05, 9.016699999999864e-05, 9.03199999999979e-05, 9.026399999999962e-05, 9.007000000000112e-05, 9.055600000000205e-05, 9.036200000000008e-05, 9.001399999999937e-05, 9.025000000000005e-05, 9.025000000000005e-05, 9.087500000000068e-05, 9.073599999999751e-05, 9.012499999999993e-05, 9.080599999999883e-05, 9.087500000000068e-05, 9.043099999999846e-05, 9.012499999999993e-05, 9.0945000000002e-05, 9.036099999999714e-05, 9.05000000000003e-05, 9.026399999999962e-05, 9.034800000000051e-05, 9.075000000000055e-05, 9.012499999999993e-05, 9.075000000000055e-05, 9.036100000000061e-05, 9.069400000000227e-05, 9.033300000000147e-05, 9.04870000000002e-05, 9.036100000000061e-05, 9.01389999999995e-05, 9.022200000000091e-05, 9.075000000000055e-05, 9.091599999999991e-05, 9.01519999999996e-05, 9.018100000000168e-05, 9.080499999999936e-05, 9.030499999999886e-05, 9.023600000000048e-05, 9.055499999999911e-05, 9.034700000000104e-05, 9.075000000000055e-05, 9.051399999999987e-05]</msg>
<status status="PASS" starttime="20201112 09:54:57.735" endtime="20201112 09:54:57.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.731" endtime="20201112 09:54:57.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.740" endtime="20201112 09:54:57.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:57.744" endtime="20201112 09:54:57.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.742" endtime="20201112 09:54:57.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.739" endtime="20201112 09:54:57.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.368" endtime="20201112 09:54:57.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.367" endtime="20201112 09:54:57.764"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.773" endtime="20201112 09:54:57.793"></status>
</kw>
<msg timestamp="20201112 09:54:57.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.771" endtime="20201112 09:54:57.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.794" endtime="20201112 09:54:57.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.797" endtime="20201112 09:54:57.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.769" endtime="20201112 09:54:57.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.767" endtime="20201112 09:54:57.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.807" endtime="20201112 09:54:58.092"></status>
</kw>
<msg timestamp="20201112 09:54:58.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.805" endtime="20201112 09:54:58.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.096" endtime="20201112 09:54:58.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.104" endtime="20201112 09:54:58.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.803" endtime="20201112 09:54:58.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.801" endtime="20201112 09:54:58.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.111" level="INFO">${RESULT} = [{'time': 0.019795194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.108299999999875e-05, 'source_diff': 9.108299999999875e-05}, {'time': 0.019889181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:58.108" endtime="20201112 09:54:58.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.124" level="INFO">${ACCURACY} = {'time': [0.019795194, 0.019889181, 0.019985278, 0.020081236, 0.020178222, 0.020275222, 0.02037025, 0.020465236, 0.020561292, 0.020655333, 0.020750278, 0.020847292, 0.020944306, 0.021038292, 0.0211353...</msg>
<status status="PASS" starttime="20201112 09:54:58.112" endtime="20201112 09:54:58.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.129" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.128" endtime="20201112 09:54:58.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.131" level="INFO">VALUE: [9.108299999999875e-05, 9.104199999999951e-05, 9.190299999999735e-05, 9.177799999999722e-05, 9.149999999999783e-05, 9.098599999999776e-05, 9.138900000000075e-05, 9.155500000000011e-05, 9.152799999999697e-05, 9.180500000000036e-05, 9.10000000000008e-05, 9.119499999999878e-05, 9.176399999999765e-05, 9.168099999999971e-05, 9.113800000000102e-05, 9.181899999999993e-05, 9.131899999999943e-05, 9.156899999999968e-05, 9.179100000000079e-05, 9.137500000000118e-05, 9.109800000000126e-05, 9.173599999999851e-05, 9.115300000000007e-05, 9.112500000000093e-05, 9.186099999999864e-05, 9.112500000000093e-05, 9.156999999999915e-05, 9.151400000000087e-05, 9.183300000000297e-05, 9.141699999999989e-05, 9.130599999999933e-05, 9.156899999999968e-05, 9.104100000000004e-05, 9.149999999999783e-05, 9.176400000000112e-05, 9.104100000000004e-05, 9.138900000000075e-05, 9.111099999999789e-05, 9.168099999999971e-05, 9.173599999999851e-05, 9.148600000000173e-05, 9.134799999999804e-05, 9.194499999999953e-05, 9.195799999999962e-05, 9.123699999999749e-05, 9.181899999999993e-05, 9.116600000000016e-05, 9.138900000000075e-05, 9.130499999999986e-05, 9.105499999999961e-05]</msg>
<status status="PASS" starttime="20201112 09:54:58.130" endtime="20201112 09:54:58.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.125" endtime="20201112 09:54:58.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.135" endtime="20201112 09:54:58.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.138" endtime="20201112 09:54:58.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.137" endtime="20201112 09:54:58.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.133" endtime="20201112 09:54:58.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.765" endtime="20201112 09:54:58.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.765" endtime="20201112 09:54:58.159"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.168" endtime="20201112 09:54:58.188"></status>
</kw>
<msg timestamp="20201112 09:54:58.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.166" endtime="20201112 09:54:58.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.189" endtime="20201112 09:54:58.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.192" endtime="20201112 09:54:58.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.164" endtime="20201112 09:54:58.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.162" endtime="20201112 09:54:58.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.202" endtime="20201112 09:54:58.487"></status>
</kw>
<msg timestamp="20201112 09:54:58.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:58.200" endtime="20201112 09:54:58.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:58.491" endtime="20201112 09:54:58.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.499" endtime="20201112 09:54:58.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.198" endtime="20201112 09:54:58.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.196" endtime="20201112 09:54:58.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.506" level="INFO">${RESULT} = [{'time': 0.019824222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.272199999999994e-05, 'source_diff': 9.272199999999994e-05}, {'time': 0.019919167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:58.503" endtime="20201112 09:54:58.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.521" level="INFO">${ACCURACY} = {'time': [0.019824222, 0.019919167, 0.020016181, 0.020113194, 0.020210222, 0.020308194, 0.020405208, 0.020500236, 0.020595222, 0.020693236, 0.020790292, 0.02088825, 0.020986278, 0.021082278, 0.0211782...</msg>
<status status="PASS" starttime="20201112 09:54:58.507" endtime="20201112 09:54:58.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.525" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.524" endtime="20201112 09:54:58.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.527" level="INFO">VALUE: [9.272199999999994e-05, 9.275000000000255e-05, 9.194499999999953e-05, 9.254100000000154e-05, 9.227800000000119e-05, 9.247200000000316e-05, 9.205500000000061e-05, 9.21390000000015e-05, 9.26659999999982e-05, 9.215300000000107e-05, 9.197299999999867e-05, 9.254200000000101e-05, 9.19589999999991e-05, 9.286099999999964e-05, 9.20000000000018e-05, 9.229200000000076e-05, 9.23199999999999e-05, 9.248600000000273e-05, 9.252799999999797e-05, 9.223599999999901e-05, 9.286099999999964e-05, 9.204200000000051e-05, 9.236100000000261e-05, 9.226399999999815e-05, 9.255600000000058e-05, 9.211099999999889e-05, 9.288899999999878e-05, 9.233399999999947e-05, 9.222199999999944e-05, 9.244500000000003e-05, 9.255600000000058e-05, 9.272200000000341e-05, 9.263899999999853e-05, 9.286099999999964e-05, 9.225000000000205e-05, 9.243000000000098e-05, 9.237499999999871e-05, 9.236099999999914e-05, 9.236100000000261e-05, 9.227800000000119e-05, 9.290299999999835e-05, 9.234699999999957e-05, 9.261099999999939e-05, 9.201400000000137e-05, 9.247300000000264e-05, 9.28330000000005e-05, 9.226400000000162e-05, 9.241600000000141e-05, 9.262499999999896e-05, 9.225000000000205e-05]</msg>
<status status="PASS" starttime="20201112 09:54:58.526" endtime="20201112 09:54:58.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.521" endtime="20201112 09:54:58.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.531" endtime="20201112 09:54:58.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.534" endtime="20201112 09:54:58.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.533" endtime="20201112 09:54:58.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.529" endtime="20201112 09:54:58.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.160" endtime="20201112 09:54:58.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.159" endtime="20201112 09:54:58.555"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.564" endtime="20201112 09:54:58.583"></status>
</kw>
<msg timestamp="20201112 09:54:58.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.562" endtime="20201112 09:54:58.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.585" endtime="20201112 09:54:58.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.587" endtime="20201112 09:54:58.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.560" endtime="20201112 09:54:58.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.558" endtime="20201112 09:54:58.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.597" endtime="20201112 09:54:58.883"></status>
</kw>
<msg timestamp="20201112 09:54:58.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.596" endtime="20201112 09:54:58.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.887" endtime="20201112 09:54:58.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.895" endtime="20201112 09:54:58.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.593" endtime="20201112 09:54:58.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.592" endtime="20201112 09:54:58.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.902" level="INFO">${RESULT} = [{'time': 0.019772694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.379099999999932e-05, 'source_diff': 9.379099999999932e-05}, {'time': 0.019868681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:58.898" endtime="20201112 09:54:58.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.915" level="INFO">${ACCURACY} = {'time': [0.019772694, 0.019868681, 0.019964694, 0.020061708, 0.020159694, 0.020258722, 0.02035475, 0.02045175, 0.020548764, 0.020645764, 0.02074175, 0.020838778, 0.020935792, 0.021031806, 0.021128806...</msg>
<status status="PASS" starttime="20201112 09:54:58.903" endtime="20201112 09:54:58.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.919" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.918" endtime="20201112 09:54:58.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.922" level="INFO">VALUE: [9.379099999999932e-05, 9.330599999999786e-05, 9.330500000000186e-05, 9.394400000000205e-05, 9.377699999999975e-05, 9.356899999999821e-05, 9.391700000000239e-05, 9.394400000000205e-05, 9.326399999999915e-05, 9.330600000000133e-05, 9.293100000000096e-05, 9.370899999999738e-05, 9.312500000000293e-05, 9.363899999999953e-05, 9.375000000000008e-05, 9.318100000000121e-05, 9.316600000000216e-05, 9.395799999999815e-05, 9.311100000000336e-05, 9.299999999999933e-05, 9.395800000000162e-05, 9.317999999999826e-05, 9.336100000000014e-05, 9.322200000000044e-05, 9.307000000000065e-05, 9.336100000000014e-05, 9.342999999999851e-05, 9.330600000000133e-05, 9.337499999999971e-05, 9.348600000000026e-05, 9.359799999999682e-05, 9.3639000000003e-05, 9.356899999999821e-05, 9.341599999999894e-05, 9.326399999999915e-05, 9.330499999999839e-05, 9.312500000000293e-05, 9.368100000000171e-05, 9.30139999999989e-05, 9.302799999999847e-05, 9.308400000000022e-05, 9.337499999999971e-05, 9.354100000000254e-05, 9.380599999999836e-05, 9.313899999999903e-05, 9.355499999999864e-05, 9.302700000000247e-05, 9.386100000000064e-05, 9.387500000000021e-05, 9.29720000000002e-05]</msg>
<status status="PASS" starttime="20201112 09:54:58.921" endtime="20201112 09:54:58.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.916" endtime="20201112 09:54:58.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.925" endtime="20201112 09:54:58.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.929" endtime="20201112 09:54:58.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.927" endtime="20201112 09:54:58.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.924" endtime="20201112 09:54:58.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.556" endtime="20201112 09:54:58.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.556" endtime="20201112 09:54:58.950"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.958" endtime="20201112 09:54:58.979"></status>
</kw>
<msg timestamp="20201112 09:54:58.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.957" endtime="20201112 09:54:58.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.980" endtime="20201112 09:54:58.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.982" endtime="20201112 09:54:58.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.954" endtime="20201112 09:54:58.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.952" endtime="20201112 09:54:58.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.992" endtime="20201112 09:54:59.277"></status>
</kw>
<msg timestamp="20201112 09:54:59.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01983125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:58.991" endtime="20201112 09:54:59.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01983125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:59.281" endtime="20201112 09:54:59.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.289" endtime="20201112 09:54:59.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.988" endtime="20201112 09:54:59.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.987" endtime="20201112 09:54:59.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:59.296" level="INFO">${RESULT} = [{'time': 0.01983125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.438900000000028e-05, 'source_diff': 9.438900000000028e-05}, {'time': 0.019929264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:59.293" endtime="20201112 09:54:59.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:59.309" level="INFO">${ACCURACY} = {'time': [0.01983125, 0.019929264, 0.020027306, 0.020127292, 0.020225278, 0.020322292, 0.020420319, 0.020520319, 0.020617347, 0.020717319, 0.020814333, 0.020912347, 0.021012347, 0.021110389, 0.0212073...</msg>
<status status="PASS" starttime="20201112 09:54:59.297" endtime="20201112 09:54:59.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.314" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 09:54:59.313" endtime="20201112 09:54:59.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.316" level="INFO">VALUE: [9.438900000000028e-05, 9.443099999999899e-05, 9.466700000000314e-05, 9.444500000000203e-05, 9.462500000000096e-05, 9.462499999999749e-05, 9.401300000000043e-05, 9.442999999999951e-05, 9.48330000000025e-05, 9.41659999999997e-05, 9.476400000000065e-05, 9.425000000000058e-05, 9.473600000000151e-05, 9.445799999999865e-05, 9.431899999999896e-05, 9.456999999999868e-05, 9.425000000000058e-05, 9.451399999999693e-05, 9.481999999999893e-05, 9.466699999999967e-05, 9.423700000000049e-05, 9.409700000000132e-05, 9.46940000000028e-05, 9.430499999999939e-05, 9.431899999999896e-05, 9.493000000000001e-05, 9.445799999999865e-05, 9.411100000000089e-05, 9.404199999999904e-05, 9.473599999999804e-05, 9.469500000000228e-05, 9.443099999999899e-05, 9.427799999999972e-05, 9.462500000000096e-05, 9.401300000000043e-05, 9.406899999999871e-05, 9.41659999999997e-05, 9.433299999999853e-05, 9.41940000000023e-05, 9.411100000000089e-05, 9.47079999999989e-05, 9.397199999999772e-05, 9.455599999999911e-05, 9.412500000000046e-05, 9.454199999999954e-05, 9.425000000000058e-05, 9.436100000000114e-05, 9.469399999999933e-05, 9.472299999999795e-05, 9.461200000000086e-05]</msg>
<status status="PASS" starttime="20201112 09:54:59.315" endtime="20201112 09:54:59.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.310" endtime="20201112 09:54:59.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.320" endtime="20201112 09:54:59.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:59.323" endtime="20201112 09:54:59.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.322" endtime="20201112 09:54:59.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.318" endtime="20201112 09:54:59.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.951" endtime="20201112 09:54:59.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.950" endtime="20201112 09:54:59.344"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.353" endtime="20201112 09:54:59.373"></status>
</kw>
<msg timestamp="20201112 09:54:59.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.351" endtime="20201112 09:54:59.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.374" endtime="20201112 09:54:59.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.377" endtime="20201112 09:54:59.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.349" endtime="20201112 09:54:59.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.346" endtime="20201112 09:54:59.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.386" endtime="20201112 09:54:59.673"></status>
</kw>
<msg timestamp="20201112 09:54:59.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019819861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.385" endtime="20201112 09:54:59.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019819861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.677" endtime="20201112 09:54:59.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.685" endtime="20201112 09:54:59.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.382" endtime="20201112 09:54:59.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.381" endtime="20201112 09:54:59.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:59.692" level="INFO">${RESULT} = [{'time': 0.019819861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.493000000000001e-05, 'source_diff': 9.493000000000001e-05}, {'time': 0.019918889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:59.689" endtime="20201112 09:54:59.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:59.705" level="INFO">${ACCURACY} = {'time': [0.019819861, 0.019918889, 0.020016889, 0.020114931, 0.020212972, 0.020313917, 0.020411931, 0.020512944, 0.020610944, 0.020710944, 0.020808986, 0.02091, 0.021010986, 0.021109986, 0.02121, 0.0...</msg>
<status status="PASS" starttime="20201112 09:54:59.693" endtime="20201112 09:54:59.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.710" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 09:54:59.709" endtime="20201112 09:54:59.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.712" level="INFO">VALUE: [9.493000000000001e-05, 9.518099999999974e-05, 9.586099999999917e-05, 9.527800000000072e-05, 9.544400000000008e-05, 9.511100000000189e-05, 9.562500000000196e-05, 9.512500000000146e-05, 9.541599999999748e-05, 9.587499999999874e-05, 9.544400000000008e-05, 9.525000000000158e-05, 9.499999999999786e-05, 9.505500000000014e-05, 9.581900000000046e-05, 9.537499999999824e-05, 9.53469999999991e-05, 9.56669999999972e-05, 9.49859999999983e-05, 9.581999999999993e-05, 9.511099999999842e-05, 9.566599999999773e-05, 9.499999999999786e-05, 9.524999999999811e-05, 9.491600000000044e-05, 9.522200000000244e-05, 9.574999999999861e-05, 9.53469999999991e-05, 9.568100000000024e-05, 9.573599999999904e-05, 9.522200000000244e-05, 9.561099999999892e-05, 9.581999999999993e-05, 9.529199999999682e-05, 9.541700000000042e-05, 9.566700000000067e-05, 9.541700000000042e-05, 9.522200000000244e-05, 9.538900000000128e-05, 9.508299999999928e-05, 9.530500000000039e-05, 9.530500000000039e-05, 9.569499999999981e-05, 9.530600000000333e-05, 9.530500000000039e-05, 9.54859999999988e-05, 9.537499999999824e-05, 9.523599999999854e-05, 9.545799999999965e-05, 9.538900000000128e-05]</msg>
<status status="PASS" starttime="20201112 09:54:59.711" endtime="20201112 09:54:59.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.706" endtime="20201112 09:54:59.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.716" endtime="20201112 09:54:59.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:59.719" endtime="20201112 09:54:59.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.718" endtime="20201112 09:54:59.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.714" endtime="20201112 09:54:59.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.345" endtime="20201112 09:54:59.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.344" endtime="20201112 09:54:59.740"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.749" endtime="20201112 09:54:59.769"></status>
</kw>
<msg timestamp="20201112 09:54:59.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.747" endtime="20201112 09:54:59.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.771" endtime="20201112 09:54:59.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.773" endtime="20201112 09:54:59.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.745" endtime="20201112 09:54:59.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.742" endtime="20201112 09:54:59.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.783" endtime="20201112 09:55:00.068"></status>
</kw>
<msg timestamp="20201112 09:55:00.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01974225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:59.781" endtime="20201112 09:55:00.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01974225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:00.072" endtime="20201112 09:55:00.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.080" endtime="20201112 09:55:00.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.779" endtime="20201112 09:55:00.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.777" endtime="20201112 09:55:00.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:00.087" level="INFO">${RESULT} = [{'time': 0.019838861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.661099999999992e-05, 'source_diff': 9.661099999999992e-05}, {'time': 0.019940889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:00.084" endtime="20201112 09:55:00.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:00.101" level="INFO">${ACCURACY} = {'time': [0.019838861, 0.019940889, 0.020042889, 0.020141903, 0.020242889, 0.020343917, 0.020443917, 0.020543931, 0.020644944, 0.020744972, 0.020845944, 0.020946972, 0.021047972, 0.021146972, 0.021245...</msg>
<status status="PASS" starttime="20201112 09:55:00.088" endtime="20201112 09:55:00.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.106" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 09:55:00.105" endtime="20201112 09:55:00.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.108" level="INFO">VALUE: [9.661099999999992e-05, 9.619500000000031e-05, 9.632000000000043e-05, 9.661099999999992e-05, 9.647200000000022e-05, 9.608399999999975e-05, 9.59859999999993e-05, 9.632000000000043e-05, 9.692999999999855e-05, 9.672200000000047e-05, 9.609700000000332e-05, 9.680500000000189e-05, 9.618000000000126e-05, 9.629099999999835e-05, 9.662500000000296e-05, 9.623599999999954e-05, 9.623599999999954e-05, 9.618099999999727e-05, 9.661099999999992e-05, 9.688899999999931e-05, 9.615299999999813e-05, 9.618000000000126e-05, 9.691700000000192e-05, 9.624999999999911e-05, 9.606900000000071e-05, 9.623600000000301e-05, 9.680499999999842e-05, 9.616700000000117e-05, 9.647200000000022e-05, 9.669500000000081e-05, 9.684800000000007e-05, 9.6721999999997e-05, 9.651399999999893e-05, 9.669500000000081e-05, 9.623599999999954e-05, 9.594400000000058e-05, 9.694399999999812e-05, 9.612499999999899e-05, 9.680600000000136e-05, 9.590299999999788e-05, 9.600000000000233e-05, 9.605499999999767e-05, 9.62080000000004e-05, 9.636099999999967e-05, 9.655600000000111e-05, 9.607000000000018e-05, 9.612500000000246e-05, 9.691699999999845e-05, 9.611200000000236e-05, 9.687499999999974e-05]</msg>
<status status="PASS" starttime="20201112 09:55:00.107" endtime="20201112 09:55:00.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.102" endtime="20201112 09:55:00.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.112" endtime="20201112 09:55:00.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.115" endtime="20201112 09:55:00.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.114" endtime="20201112 09:55:00.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.110" endtime="20201112 09:55:00.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.741" endtime="20201112 09:55:00.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.740" endtime="20201112 09:55:00.136"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.145" endtime="20201112 09:55:00.166"></status>
</kw>
<msg timestamp="20201112 09:55:00.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.143" endtime="20201112 09:55:00.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.167" endtime="20201112 09:55:00.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.170" endtime="20201112 09:55:00.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.141" endtime="20201112 09:55:00.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.139" endtime="20201112 09:55:00.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.180" endtime="20201112 09:55:00.464"></status>
</kw>
<msg timestamp="20201112 09:55:00.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.178" endtime="20201112 09:55:00.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.468" endtime="20201112 09:55:00.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.476" endtime="20201112 09:55:00.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.176" endtime="20201112 09:55:00.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.174" endtime="20201112 09:55:00.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:00.483" level="INFO">${RESULT} = [{'time': 0.019835375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.769399999999887e-05, 'source_diff': 9.769399999999887e-05}, {'time': 0.019937403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:00.479" endtime="20201112 09:55:00.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:00.496" level="INFO">${ACCURACY} = {'time': [0.019835375, 0.019937403, 0.020040389, 0.020139389, 0.020241417, 0.020342431, 0.020443431, 0.020546431, 0.020647458, 0.020750458, 0.020850472, 0.020953472, 0.0210555, 0.0211565, 0.021258514,...</msg>
<status status="PASS" starttime="20201112 09:55:00.484" endtime="20201112 09:55:00.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.500" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 09:55:00.499" endtime="20201112 09:55:00.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.503" level="INFO">VALUE: [9.769399999999887e-05, 9.7334000000001e-05, 9.705599999999814e-05, 9.693100000000149e-05, 9.751399999999993e-05, 9.776400000000018e-05, 9.748700000000027e-05, 9.78059999999989e-05, 9.713899999999956e-05, 9.775000000000061e-05, 9.773599999999757e-05, 9.766599999999973e-05, 9.719400000000183e-05, 9.706900000000171e-05, 9.708299999999781e-05, 9.723600000000054e-05, 9.756999999999821e-05, 9.711099999999695e-05, 9.723600000000054e-05, 9.763900000000006e-05, 9.69730000000002e-05, 9.745799999999818e-05, 9.700000000000333e-05, 9.719399999999837e-05, 9.775000000000061e-05, 9.737500000000024e-05, 9.719399999999837e-05, 9.723600000000054e-05, 9.719499999999784e-05, 9.761100000000092e-05, 9.69860000000003e-05, 9.744500000000156e-05, 9.704199999999857e-05, 9.779199999999932e-05, 9.706899999999824e-05, 9.706900000000171e-05, 9.743000000000251e-05, 9.787500000000074e-05, 9.702699999999953e-05, 9.699999999999986e-05, 9.692999999999855e-05, 9.705599999999814e-05, 9.72920000000023e-05, 9.759699999999788e-05, 9.775000000000061e-05, 9.718100000000174e-05, 9.712499999999999e-05, 9.77080000000019e-05, 9.730499999999892e-05, 9.761100000000092e-05]</msg>
<status status="PASS" starttime="20201112 09:55:00.501" endtime="20201112 09:55:00.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.497" endtime="20201112 09:55:00.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.506" endtime="20201112 09:55:00.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.510" endtime="20201112 09:55:00.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.508" endtime="20201112 09:55:00.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.505" endtime="20201112 09:55:00.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.137" endtime="20201112 09:55:00.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.136" endtime="20201112 09:55:00.531"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.539" endtime="20201112 09:55:00.560"></status>
</kw>
<msg timestamp="20201112 09:55:00.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.538" endtime="20201112 09:55:00.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.561" endtime="20201112 09:55:00.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.564" endtime="20201112 09:55:00.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.535" endtime="20201112 09:55:00.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.533" endtime="20201112 09:55:00.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.574" endtime="20201112 09:55:00.859"></status>
</kw>
<msg timestamp="20201112 09:55:00.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020063361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.572" endtime="20201112 09:55:00.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020063361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.863" endtime="20201112 09:55:00.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.872" endtime="20201112 09:55:00.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.570" endtime="20201112 09:55:00.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.568" endtime="20201112 09:55:00.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:00.878" level="INFO">${RESULT} = [{'time': 0.020063361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.881899999999999e-05, 'source_diff': 9.881899999999999e-05}, {'time': 0.020166375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:00.875" endtime="20201112 09:55:00.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:00.892" level="INFO">${ACCURACY} = {'time': [0.020063361, 0.020166375, 0.020270389, 0.020372403, 0.020475417, 0.020576417, 0.020680417, 0.020783431, 0.020884444, 0.020988444, 0.0210895, 0.0211925, 0.021296486, 0.021398486, 0.0215005, 0...</msg>
<status status="PASS" starttime="20201112 09:55:00.879" endtime="20201112 09:55:00.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.896" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 09:55:00.895" endtime="20201112 09:55:00.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.899" level="INFO">VALUE: [9.881899999999999e-05, 9.800000000000086e-05, 9.868099999999977e-05, 9.832000000000243e-05, 9.88059999999999e-05, 9.800000000000086e-05, 9.862499999999802e-05, 9.857000000000268e-05, 9.794399999999912e-05, 9.798599999999782e-05, 9.836100000000167e-05, 9.883299999999956e-05, 9.805499999999967e-05, 9.833300000000253e-05, 9.812499999999752e-05, 9.88059999999999e-05, 9.806999999999871e-05, 9.857000000000268e-05, 9.804199999999957e-05, 9.83059999999994e-05, 9.855500000000017e-05, 9.837500000000124e-05, 9.879200000000032e-05, 9.869399999999987e-05, 9.812500000000099e-05, 9.837499999999777e-05, 9.88609999999987e-05, 9.798599999999782e-05, 9.861099999999845e-05, 9.861099999999845e-05, 9.819499999999884e-05, 9.805599999999914e-05, 9.873600000000204e-05, 9.876400000000118e-05, 9.88059999999999e-05, 9.816700000000317e-05, 9.85410000000006e-05, 9.825000000000111e-05, 9.824999999999764e-05, 9.836100000000167e-05, 9.837499999999777e-05, 9.861100000000192e-05, 9.88059999999999e-05, 9.856999999999921e-05, 9.8334000000002e-05, 9.84860000000018e-05, 9.824999999999764e-05, 9.793099999999902e-05, 9.811199999999742e-05, 9.831899999999949e-05]</msg>
<status status="PASS" starttime="20201112 09:55:00.897" endtime="20201112 09:55:00.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.893" endtime="20201112 09:55:00.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.902" endtime="20201112 09:55:00.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.906" endtime="20201112 09:55:00.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.904" endtime="20201112 09:55:00.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.901" endtime="20201112 09:55:00.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.532" endtime="20201112 09:55:00.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.531" endtime="20201112 09:55:00.926"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.935" endtime="20201112 09:55:00.955"></status>
</kw>
<msg timestamp="20201112 09:55:00.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.933" endtime="20201112 09:55:00.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.957" endtime="20201112 09:55:00.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.959" endtime="20201112 09:55:00.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.931" endtime="20201112 09:55:00.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.929" endtime="20201112 09:55:00.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.969" endtime="20201112 09:55:01.254"></status>
</kw>
<msg timestamp="20201112 09:55:01.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.968" endtime="20201112 09:55:01.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.258" endtime="20201112 09:55:01.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.266" endtime="20201112 09:55:01.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.965" endtime="20201112 09:55:01.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.963" endtime="20201112 09:55:01.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:01.273" level="INFO">${RESULT} = [{'time': 0.019795125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.906900000000024e-05, 'source_diff': 9.906900000000024e-05}, {'time': 0.019900139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:01.270" endtime="20201112 09:55:01.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:01.286" level="INFO">${ACCURACY} = {'time': [0.019795125, 0.019900139, 0.020004208, 0.020108167, 0.020210181, 0.020314208, 0.020416194, 0.020518236, 0.020623194, 0.020726236, 0.02082925, 0.020933236, 0.021035236, 0.021138264, 0.0212413...</msg>
<status status="PASS" starttime="20201112 09:55:01.274" endtime="20201112 09:55:01.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.291" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 09:55:01.290" endtime="20201112 09:55:01.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.293" level="INFO">VALUE: [9.906900000000024e-05, 9.93609999999992e-05, 9.93609999999992e-05, 9.968100000000077e-05, 9.994500000000059e-05, 9.983300000000056e-05, 9.892999999999708e-05, 9.947199999999976e-05, 9.941600000000148e-05, 9.959699999999988e-05, 9.995800000000069e-05, 9.938900000000181e-05, 9.967999999999783e-05, 9.982000000000046e-05, 9.958300000000031e-05, 9.948599999999932e-05, 9.969500000000034e-05, 9.918100000000027e-05, 9.91800000000008e-05, 9.909699999999938e-05, 9.943000000000105e-05, 9.955600000000064e-05, 9.937499999999877e-05, 9.902700000000153e-05, 9.951400000000193e-05, 9.925000000000211e-05, 9.94999999999989e-05, 9.997299999999973e-05, 9.912499999999852e-05, 9.957000000000021e-05, 9.98060000000009e-05, 9.955599999999717e-05, 9.961099999999945e-05, 9.941700000000095e-05, 9.987499999999927e-05, 9.911099999999895e-05, 9.906999999999971e-05, 9.919400000000037e-05, 9.936100000000267e-05, 9.94999999999989e-05, 9.923599999999907e-05, 9.984700000000013e-05, 9.904200000000057e-05, 9.98609999999997e-05, 9.987499999999927e-05, 9.938799999999887e-05, 9.922299999999898e-05, 9.950000000000236e-05, 9.893000000000055e-05, 9.909699999999938e-05]</msg>
<status status="PASS" starttime="20201112 09:55:01.292" endtime="20201112 09:55:01.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.287" endtime="20201112 09:55:01.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.303" endtime="20201112 09:55:01.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:01.306" endtime="20201112 09:55:01.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.305" endtime="20201112 09:55:01.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.301" endtime="20201112 09:55:01.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.927" endtime="20201112 09:55:01.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.927" endtime="20201112 09:55:01.327"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.336" endtime="20201112 09:55:01.357"></status>
</kw>
<msg timestamp="20201112 09:55:01.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.334" endtime="20201112 09:55:01.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.358" endtime="20201112 09:55:01.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.361" endtime="20201112 09:55:01.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.332" endtime="20201112 09:55:01.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.330" endtime="20201112 09:55:01.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.371" endtime="20201112 09:55:01.656"></status>
</kw>
<msg timestamp="20201112 09:55:01.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.369" endtime="20201112 09:55:01.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.660" endtime="20201112 09:55:01.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.668" endtime="20201112 09:55:01.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.367" endtime="20201112 09:55:01.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.365" endtime="20201112 09:55:01.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:01.675" level="INFO">${RESULT} = [{'time': 0.019789917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010024999999999964, 'source_diff': 0.00010024999999999964}, {'time': 0.019895903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:01.672" endtime="20201112 09:55:01.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:01.689" level="INFO">${ACCURACY} = {'time': [0.019789917, 0.019895903, 0.019999917, 0.020104931, 0.020210958, 0.020316958, 0.020422958, 0.020527986, 0.020630986, 0.020734014, 0.020839028, 0.020943014, 0.021046028, 0.021152056, 0.021258...</msg>
<status status="PASS" starttime="20201112 09:55:01.676" endtime="20201112 09:55:01.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.694" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 09:55:01.693" endtime="20201112 09:55:01.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.696" level="INFO">VALUE: [0.00010024999999999964, 9.997200000000026e-05, 0.00010059800000000035, 0.00010043099999999805, 0.00010076399999999971, 9.99999999999994e-05, 0.00010088899999999984, 0.0001004999999999999, 0.00010011099999999995, 0.00010065299999999916, 0.00010034700000000063, 0.0001008610000000007, 0.00010007000000000071, 0.00010058399999999731, 0.0001003610000000002, 0.00010079199999999885, 0.000100415999999999, 0.0001006939999999984, 0.00010006900000000124, 0.00010015299999999866, 0.00010083300000000156, 0.00010027799999999878, 0.00010090299999999941, 0.00010013899999999909, 0.00010018100000000127, 0.0001008060000000019, 0.00010076399999999971, 0.0001003610000000002, 0.00010047300000000023, 9.998599999999983e-05, 0.0001010000000000004, 0.00010006899999999777, 0.00010016599999999876, 0.0001001939999999979, 0.00010088899999999984, 0.00010066699999999873, 0.00010026399999999921, 0.0001008749999999968, 0.00010048600000000033, 0.00010002699999999906, 0.00010036199999999967, 0.00010061100000000045, 0.00010044399999999815, 0.00010031899999999802, 0.00010029100000000235, 0.00010044399999999815, 0.00010090299999999941, 0.00010054099999999913, 0.00010054200000000207, 0.00010013899999999909]</msg>
<status status="PASS" starttime="20201112 09:55:01.695" endtime="20201112 09:55:01.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.690" endtime="20201112 09:55:01.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.700" endtime="20201112 09:55:01.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:01.703" endtime="20201112 09:55:01.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.702" endtime="20201112 09:55:01.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.698" endtime="20201112 09:55:01.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.328" endtime="20201112 09:55:01.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.328" endtime="20201112 09:55:01.724"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.732" endtime="20201112 09:55:01.754"></status>
</kw>
<msg timestamp="20201112 09:55:01.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.731" endtime="20201112 09:55:01.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.756" endtime="20201112 09:55:01.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.759" endtime="20201112 09:55:01.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.728" endtime="20201112 09:55:01.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.726" endtime="20201112 09:55:01.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.774" endtime="20201112 09:55:02.061"></status>
</kw>
<msg timestamp="20201112 09:55:02.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019874153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.771" endtime="20201112 09:55:02.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019874153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.065" endtime="20201112 09:55:02.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.073" endtime="20201112 09:55:02.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.767" endtime="20201112 09:55:02.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.765" endtime="20201112 09:55:02.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:02.080" level="INFO">${RESULT} = [{'time': 0.019874153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010155599999999917, 'source_diff': 0.00010155599999999917}, {'time': 0.019979139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:02.076" endtime="20201112 09:55:02.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:02.093" level="INFO">${ACCURACY} = {'time': [0.019874153, 0.019979139, 0.020084181, 0.020190167, 0.020297167, 0.020404181, 0.020509222, 0.020615208, 0.020721222, 0.020828236, 0.020934236, 0.021038264, 0.021143264, 0.021250278, 0.021356...</msg>
<status status="PASS" starttime="20201112 09:55:02.081" endtime="20201112 09:55:02.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.097" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 09:55:02.096" endtime="20201112 09:55:02.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.100" level="INFO">VALUE: [0.00010155599999999917, 0.00010141699999999948, 0.00010140299999999991, 0.00010098599999999736, 0.00010177800000000028, 0.0001010000000000004, 0.00010140299999999991, 0.00010098600000000083, 0.00010129099999999988, 0.00010175000000000115, 0.00010166699999999973, 0.00010101399999999996, 0.00010143099999999905, 0.00010102799999999953, 0.00010179199999999985, 0.00010149999999999743, 0.00010163900000000059, 0.00010115299999999966, 0.00010112500000000052, 0.00010106899999999877, 0.00010172199999999854, 0.00010161100000000145, 0.00010167999999999983, 0.00010133299999999859, 0.00010118100000000227, 0.00010179199999999985, 0.0001017359999999981, 0.00010184699999999866, 0.00010155599999999917, 0.00010194399999999965, 0.0001011809999999988, 0.00010145799999999872, 0.00010130499999999945, 0.0001015000000000009, 0.00010113900000000009, 0.00010161099999999798, 0.00010173600000000158, 0.00010179199999999985, 0.00010108399999999781, 0.00010098600000000083, 0.00010151400000000046, 0.00010161099999999798, 0.00010163900000000059, 0.00010116600000000323, 0.00010179199999999985, 0.00010176400000000071, 0.00010125000000000065, 0.00010141699999999948, 0.00010137500000000077, 0.00010109699999999791]</msg>
<status status="PASS" starttime="20201112 09:55:02.099" endtime="20201112 09:55:02.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.094" endtime="20201112 09:55:02.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.103" endtime="20201112 09:55:02.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:02.107" endtime="20201112 09:55:02.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.105" endtime="20201112 09:55:02.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.102" endtime="20201112 09:55:02.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.725" endtime="20201112 09:55:02.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.724" endtime="20201112 09:55:02.128"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.136" endtime="20201112 09:55:02.157"></status>
</kw>
<msg timestamp="20201112 09:55:02.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.135" endtime="20201112 09:55:02.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.159" endtime="20201112 09:55:02.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.161" endtime="20201112 09:55:02.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.132" endtime="20201112 09:55:02.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.130" endtime="20201112 09:55:02.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.171" endtime="20201112 09:55:02.457"></status>
</kw>
<msg timestamp="20201112 09:55:02.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.170" endtime="20201112 09:55:02.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.461" endtime="20201112 09:55:02.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.469" endtime="20201112 09:55:02.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.167" endtime="20201112 09:55:02.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.165" endtime="20201112 09:55:02.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:02.476" level="INFO">${RESULT} = [{'time': 0.019746222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010206899999999977, 'source_diff': 0.00010206899999999977}, {'time': 0.019854264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:02.473" endtime="20201112 09:55:02.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:02.490" level="INFO">${ACCURACY} = {'time': [0.019746222, 0.019854264, 0.01996225, 0.020069264, 0.020176264, 0.020281292, 0.020389292, 0.020496306, 0.020602292, 0.020708306, 0.020815347, 0.020921361, 0.021027361, 0.021134347, 0.0212413...</msg>
<status status="PASS" starttime="20201112 09:55:02.477" endtime="20201112 09:55:02.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.494" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 09:55:02.493" endtime="20201112 09:55:02.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.497" level="INFO">VALUE: [0.00010206899999999977, 0.00010202800000000053, 0.00010255600000000017, 0.0001023199999999995, 0.00010249999999999843, 0.00010201400000000097, 0.0001023749999999983, 0.0001023749999999983, 0.00010215300000000066, 0.00010255600000000017, 0.00010233300000000306, 0.00010283300000000009, 0.00010280500000000095, 0.00010248600000000233, 0.00010268000000000083, 0.00010244499999999962, 0.00010261099999999898, 0.00010293000000000108, 0.00010272199999999954, 0.00010243100000000005, 0.00010212500000000152, 0.00010273699999999858, 0.0001026940000000004, 0.00010267999999999736, 0.00010280499999999748, 0.00010256900000000027, 0.00010251400000000147, 0.00010218000000000033, 0.00010263900000000159, 0.00010238900000000134, 0.00010247299999999876, 0.00010249999999999843, 0.00010198599999999836, 0.00010262500000000202, 0.00010201299999999802, 0.00010284799999999913, 0.00010237500000000177, 0.00010226400000000122, 0.00010261099999999898, 0.00010213899999999762, 0.00010234699999999916, 0.00010215300000000066, 0.00010243100000000005, 0.00010227700000000131, 0.00010198600000000183, 0.00010205599999999967, 0.00010222199999999904, 0.0001024870000000018, 0.00010234700000000263, 0.00010258299999999984]</msg>
<status status="PASS" starttime="20201112 09:55:02.495" endtime="20201112 09:55:02.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.491" endtime="20201112 09:55:02.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.500" endtime="20201112 09:55:02.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:02.504" endtime="20201112 09:55:02.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.502" endtime="20201112 09:55:02.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.499" endtime="20201112 09:55:02.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.129" endtime="20201112 09:55:02.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.128" endtime="20201112 09:55:02.525"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.533" endtime="20201112 09:55:02.554"></status>
</kw>
<msg timestamp="20201112 09:55:02.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.532" endtime="20201112 09:55:02.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.555" endtime="20201112 09:55:02.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.558" endtime="20201112 09:55:02.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.529" endtime="20201112 09:55:02.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.527" endtime="20201112 09:55:02.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.568" endtime="20201112 09:55:02.853"></status>
</kw>
<msg timestamp="20201112 09:55:02.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019880542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019983903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.566" endtime="20201112 09:55:02.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019880542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019983903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.857" endtime="20201112 09:55:02.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.865" endtime="20201112 09:55:02.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.564" endtime="20201112 09:55:02.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.562" endtime="20201112 09:55:02.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:02.872" level="INFO">${RESULT} = [{'time': 0.019983903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010336099999999973, 'source_diff': 0.00010336099999999973}, {'time': 0.020091917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:02.869" endtime="20201112 09:55:02.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:02.885" level="INFO">${ACCURACY} = {'time': [0.019983903, 0.020091917, 0.020197931, 0.020306958, 0.020415958, 0.020524972, 0.020633972, 0.020741986, 0.020851, 0.020957014, 0.021066014, 0.021172028, 0.021280056, 0.021388056, 0.021495069...</msg>
<status status="PASS" starttime="20201112 09:55:02.873" endtime="20201112 09:55:02.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.890" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 09:55:02.889" endtime="20201112 09:55:02.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.892" level="INFO">VALUE: [0.00010336099999999973, 0.0001038749999999998, 0.0001036949999999974, 0.00010383300000000109, 0.0001038749999999998, 0.00010362499999999955, 0.0001032359999999996, 0.00010299999999999893, 0.00010306900000000077, 0.000103513999999999, 0.00010301400000000197, 0.00010318099999999733, 0.00010388899999999937, 0.00010319500000000037, 0.00010383299999999762, 0.0001037079999999975, 0.00010326299999999927, 0.00010393000000000208, 0.00010298599999999936, 0.0001031940000000009, 0.00010358299999999737, 0.00010363899999999912, 0.00010340300000000191, 0.00010313900000000209, 0.00010366700000000173, 0.00010391599999999904, 0.0001036949999999974, 0.00010358300000000084, 0.00010357000000000074, 0.00010326400000000222, 0.00010347200000000029, 0.0001036940000000014, 0.0001035550000000017, 0.00010388899999999937, 0.00010319500000000037, 0.0001031810000000008, 0.00010380599999999796, 0.00010386100000000023, 0.00010351400000000247, 0.00010348599999999986, 0.0001037079999999975, 0.00010383300000000109, 0.00010318000000000133, 0.00010395799999999775, 0.00010370800000000097, 0.00010384700000000066, 0.00010316700000000123, 0.00010336099999999973, 0.00010312499999999905, 0.00010333400000000006]</msg>
<status status="PASS" starttime="20201112 09:55:02.891" endtime="20201112 09:55:02.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.886" endtime="20201112 09:55:02.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.896" endtime="20201112 09:55:02.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:02.899" endtime="20201112 09:55:02.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.897" endtime="20201112 09:55:02.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.894" endtime="20201112 09:55:02.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.525" endtime="20201112 09:55:02.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.525" endtime="20201112 09:55:02.920"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.928" endtime="20201112 09:55:02.949"></status>
</kw>
<msg timestamp="20201112 09:55:02.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.927" endtime="20201112 09:55:02.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.950" endtime="20201112 09:55:02.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.953" endtime="20201112 09:55:02.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.924" endtime="20201112 09:55:02.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.922" endtime="20201112 09:55:02.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.963" endtime="20201112 09:55:03.249"></status>
</kw>
<msg timestamp="20201112 09:55:03.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019841722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.961" endtime="20201112 09:55:03.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019841722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.253" endtime="20201112 09:55:03.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.261" endtime="20201112 09:55:03.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.959" endtime="20201112 09:55:03.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.957" endtime="20201112 09:55:03.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:03.267" level="INFO">${RESULT} = [{'time': 0.019841722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010441599999999954, 'source_diff': 0.00010441599999999954}, {'time': 0.01994975, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:55:03.264" endtime="20201112 09:55:03.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:03.281" level="INFO">${ACCURACY} = {'time': [0.019841722, 0.01994975, 0.020056764, 0.020163764, 0.020270764, 0.020377778, 0.020485792, 0.020594819, 0.020702833, 0.020809819, 0.020917847, 0.021025833, 0.021135861, 0.021245861, 0.0213548...</msg>
<status status="PASS" starttime="20201112 09:55:03.268" endtime="20201112 09:55:03.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.286" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 09:55:03.285" endtime="20201112 09:55:03.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.288" level="INFO">VALUE: [0.00010441599999999954, 0.00010394399999999818, 0.0001048750000000008, 0.00010408300000000134, 0.00010493099999999908, 0.00010412500000000005, 0.00010480599999999896, 0.00010401300000000002, 0.00010406900000000177, 0.00010398600000000036, 0.00010395800000000122, 0.00010455499999999923, 0.00010408299999999787, 0.00010475000000000068, 0.0001040689999999983, 0.00010490299999999994, 0.00010481999999999853, 0.00010425000000000018, 0.00010466699999999926, 0.00010457000000000174, 0.00010402699999999959, 0.00010448600000000086, 0.0001040689999999983, 0.00010425000000000018, 0.00010425000000000018, 0.0001042360000000006, 0.0001043750000000003, 0.00010418000000000233, 0.00010399999999999993, 0.0001047360000000011, 0.0001046949999999984, 0.00010426399999999975, 0.00010429200000000236, 0.00010463800000000065, 0.00010441699999999901, 0.00010441599999999954, 0.00010401400000000297, 0.00010462500000000055, 0.000104514, 0.00010394500000000112, 0.00010397200000000079, 0.00010395899999999722, 0.00010465300000000316, 0.0001048339999999981, 0.00010470899999999797, 0.00010427800000000279, 0.00010462500000000055, 0.00010438899999999987, 0.00010417999999999886, 0.00010443000000000258]</msg>
<status status="PASS" starttime="20201112 09:55:03.287" endtime="20201112 09:55:03.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.282" endtime="20201112 09:55:03.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.292" endtime="20201112 09:55:03.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:03.295" endtime="20201112 09:55:03.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.293" endtime="20201112 09:55:03.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.290" endtime="20201112 09:55:03.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.921" endtime="20201112 09:55:03.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.920" endtime="20201112 09:55:03.316"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.324" endtime="20201112 09:55:03.345"></status>
</kw>
<msg timestamp="20201112 09:55:03.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.323" endtime="20201112 09:55:03.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.347" endtime="20201112 09:55:03.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.349" endtime="20201112 09:55:03.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.320" endtime="20201112 09:55:03.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.318" endtime="20201112 09:55:03.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.359" endtime="20201112 09:55:03.645"></status>
</kw>
<msg timestamp="20201112 09:55:03.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019817972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.358" endtime="20201112 09:55:03.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019817972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.650" endtime="20201112 09:55:03.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.657" endtime="20201112 09:55:03.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.355" endtime="20201112 09:55:03.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.354" endtime="20201112 09:55:03.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:03.664" level="INFO">${RESULT} = [{'time': 0.019817972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010530499999999998, 'source_diff': 0.00010530499999999998}, {'time': 0.019926056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:03.661" endtime="20201112 09:55:03.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:03.677" level="INFO">${ACCURACY} = {'time': [0.019817972, 0.019926056, 0.020033972, 0.020143986, 0.020252, 0.020360014, 0.020469014, 0.020577028, 0.020688042, 0.020797056, 0.020906042, 0.021013056, 0.021122083, 0.021231097, 0.021342111...</msg>
<status status="PASS" starttime="20201112 09:55:03.665" endtime="20201112 09:55:03.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.682" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 09:55:03.681" endtime="20201112 09:55:03.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.684" level="INFO">VALUE: [0.00010530499999999998, 0.00010545900000000219, 0.0001057360000000021, 0.00010561099999999851, 0.00010513900000000062, 0.0001057499999999982, 0.00010512500000000105, 0.00010512500000000105, 0.00010506999999999878, 0.000105820000000003, 0.00010504199999999964, 0.00010493099999999908, 0.00010544399999999968, 0.00010513900000000062, 0.00010513900000000062, 0.00010531899999999955, 0.00010555500000000023, 0.00010573599999999864, 0.00010501399999999703, 0.00010500000000000093, 0.00010522200000000204, 0.00010533299999999912, 0.0001052499999999977, 0.00010580599999999996, 0.00010562499999999808, 0.00010513900000000062, 0.00010558299999999937, 0.00010572200000000254, 0.00010594400000000018, 0.00010540300000000044, 0.00010500000000000093, 0.0001056810000000033, 0.00010530599999999946, 0.00010587499999999833, 0.00010581999999999953, 0.00010494500000000212, 0.00010502700000000059, 0.00010522199999999857, 0.00010536099999999826, 0.0001058889999999979, 0.00010569399999999993, 0.0001057499999999982, 0.00010512500000000105, 0.00010594499999999965, 0.00010580599999999996, 0.00010494499999999865, 0.00010526400000000075, 0.0001053750000000013, 0.00010588799999999843, 0.00010577800000000082]</msg>
<status status="PASS" starttime="20201112 09:55:03.683" endtime="20201112 09:55:03.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.678" endtime="20201112 09:55:03.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.688" endtime="20201112 09:55:03.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:03.691" endtime="20201112 09:55:03.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.690" endtime="20201112 09:55:03.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.686" endtime="20201112 09:55:03.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.317" endtime="20201112 09:55:03.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.316" endtime="20201112 09:55:03.712"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.720" endtime="20201112 09:55:03.741"></status>
</kw>
<msg timestamp="20201112 09:55:03.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.719" endtime="20201112 09:55:03.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.742" endtime="20201112 09:55:03.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.745" endtime="20201112 09:55:03.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.716" endtime="20201112 09:55:03.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.714" endtime="20201112 09:55:03.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.755" endtime="20201112 09:55:04.040"></status>
</kw>
<msg timestamp="20201112 09:55:04.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01971125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019817917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:03.753" endtime="20201112 09:55:04.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01971125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019817917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:04.044" endtime="20201112 09:55:04.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.052" endtime="20201112 09:55:04.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.751" endtime="20201112 09:55:04.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.749" endtime="20201112 09:55:04.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.059" level="INFO">${RESULT} = [{'time': 0.019817917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010666700000000126, 'source_diff': 0.00010666700000000126}, {'time': 0.019926875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:04.055" endtime="20201112 09:55:04.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:04.072" level="INFO">${ACCURACY} = {'time': [0.019817917, 0.019926875, 0.020038889, 0.020148889, 0.020257903, 0.020369944, 0.020480917, 0.020590931, 0.020701944, 0.020813972, 0.020925958, 0.021037958, 0.021149, 0.021259014, 0.021369, 0...</msg>
<status status="PASS" starttime="20201112 09:55:04.060" endtime="20201112 09:55:04.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.076" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 09:55:04.075" endtime="20201112 09:55:04.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.079" level="INFO">VALUE: [0.00010666700000000126, 0.00010594400000000018, 0.00010662499999999908, 0.00010616700000000076, 0.0001067499999999992, 0.00010684700000000019, 0.00010675000000000268, 0.00010626399999999828, 0.00010641600000000154, 0.00010643000000000111, 0.00010629100000000141, 0.0001067080000000005, 0.00010608299999999987, 0.00010626399999999828, 0.00010615299999999772, 0.0001060560000000002, 0.00010604200000000064, 0.00010597199999999932, 0.00010680600000000096, 0.00010659800000000288, 0.0001060560000000002, 0.00010612500000000205, 0.00010616599999999782, 0.00010599999999999846, 0.00010636099999999926, 0.00010629200000000089, 0.00010672200000000007, 0.00010654200000000114, 0.00010662499999999908, 0.00010654100000000166, 0.00010636100000000273, 0.0001065690000000008, 0.00010687499999999933, 0.00010654100000000166, 0.00010616600000000129, 0.000106514000000002, 0.00010626399999999828, 0.0001060560000000002, 0.00010666699999999779, 0.00010634699999999969, 0.00010606999999999978, 0.00010593100000000008, 0.00010641700000000101, 0.00010666700000000126, 0.00010601299999999855, 0.00010644400000000068, 0.00010681899999999758, 0.00010686099999999976, 0.00010679200000000139, 0.00010623599999999914]</msg>
<status status="PASS" starttime="20201112 09:55:04.077" endtime="20201112 09:55:04.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.073" endtime="20201112 09:55:04.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.082" endtime="20201112 09:55:04.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:04.086" endtime="20201112 09:55:04.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.084" endtime="20201112 09:55:04.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.081" endtime="20201112 09:55:04.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.713" endtime="20201112 09:55:04.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.712" endtime="20201112 09:55:04.106"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.115" endtime="20201112 09:55:04.136"></status>
</kw>
<msg timestamp="20201112 09:55:04.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.114" endtime="20201112 09:55:04.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.137" endtime="20201112 09:55:04.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.140" endtime="20201112 09:55:04.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.111" endtime="20201112 09:55:04.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.109" endtime="20201112 09:55:04.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.150" endtime="20201112 09:55:04.435"></status>
</kw>
<msg timestamp="20201112 09:55:04.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019860889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.148" endtime="20201112 09:55:04.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019860889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.439" endtime="20201112 09:55:04.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.447" endtime="20201112 09:55:04.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.146" endtime="20201112 09:55:04.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.144" endtime="20201112 09:55:04.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.453" level="INFO">${RESULT} = [{'time': 0.019860889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010741699999999854, 'source_diff': 0.00010741699999999854}, {'time': 0.019972931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:04.450" endtime="20201112 09:55:04.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:04.466" level="INFO">${ACCURACY} = {'time': [0.019860889, 0.019972931, 0.020083944, 0.020194931, 0.020306958, 0.020416944, 0.020526958, 0.020637056, 0.020747972, 0.020858, 0.020969014, 0.021082, 0.021194028, 0.021307028, 0.021419056, 0...</msg>
<status status="PASS" starttime="20201112 09:55:04.454" endtime="20201112 09:55:04.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.471" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 09:55:04.470" endtime="20201112 09:55:04.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.473" level="INFO">VALUE: [0.00010741699999999854, 0.00010783399999999763, 0.00010794399999999871, 0.00010766699999999879, 0.00010701399999999903, 0.00010723600000000014, 0.00010700000000000293, 0.00010758400000000085, 0.00010767999999999889, 0.00010763900000000312, 0.00010790299999999947, 0.00010779199999999892, 0.00010757000000000128, 0.00010758399999999738, 0.00010758399999999738, 0.00010779199999999892, 0.00010719399999999796, 0.0001078889999999999, 0.0001070279999999986, 0.00010694400000000118, 0.00010758300000000137, 0.00010740300000000244, 0.00010744500000000115, 0.00010691700000000151, 0.00010694500000000065, 0.00010711100000000001, 0.00010787500000000033, 0.00010701300000000302, 0.00010792999999999914, 0.0001080279999999996, 0.00010731899999999808, 0.00010723599999999667, 0.0001077500000000002, 0.00010777799999999935, 0.0001072499999999997, 0.00010695900000000022, 0.00010763899999999965, 0.00010719499999999743, 0.00010705500000000173, 0.00010749999999999996, 0.00010741700000000201, 0.0001075279999999991, 0.00010698599999999989, 0.00010768000000000236, 0.00010736100000000026, 0.00010723600000000014, 0.00010712499999999958, 0.00010726399999999928, 0.00010787500000000033, 0.00010736100000000026]</msg>
<status status="PASS" starttime="20201112 09:55:04.472" endtime="20201112 09:55:04.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.467" endtime="20201112 09:55:04.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.477" endtime="20201112 09:55:04.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:04.481" endtime="20201112 09:55:04.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.479" endtime="20201112 09:55:04.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.475" endtime="20201112 09:55:04.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.107" endtime="20201112 09:55:04.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.107" endtime="20201112 09:55:04.502"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.511" endtime="20201112 09:55:04.532"></status>
</kw>
<msg timestamp="20201112 09:55:04.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.509" endtime="20201112 09:55:04.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.534" endtime="20201112 09:55:04.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.536" endtime="20201112 09:55:04.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.507" endtime="20201112 09:55:04.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.504" endtime="20201112 09:55:04.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.546" endtime="20201112 09:55:04.832"></status>
</kw>
<msg timestamp="20201112 09:55:04.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020675069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020783208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.545" endtime="20201112 09:55:04.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020675069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020783208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.836" endtime="20201112 09:55:04.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.844" endtime="20201112 09:55:04.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.542" endtime="20201112 09:55:04.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.541" endtime="20201112 09:55:04.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.850" level="INFO">${RESULT} = [{'time': 0.020783208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010813900000000015, 'source_diff': 0.00010813900000000015}, {'time': 0.020894292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:04.847" endtime="20201112 09:55:04.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:04.864" level="INFO">${ACCURACY} = {'time': [0.020783208, 0.020894292, 0.021007236, 0.021119236, 0.021233236, 0.02134625, 0.021458333, 0.021572264, 0.021685278, 0.021797347, 0.021910306, 0.022024333, 0.022137333, 0.022250333, 0.0223613...</msg>
<status status="PASS" starttime="20201112 09:55:04.851" endtime="20201112 09:55:04.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.869" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 09:55:04.868" endtime="20201112 09:55:04.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.871" level="INFO">VALUE: [0.00010813900000000015, 0.00010816699999999929, 0.00010812499999999711, 0.00010811100000000101, 0.00010829199999999942, 0.00010837500000000083, 0.00010806899999999883, 0.00010829199999999942, 0.00010805599999999874, 0.0001085280000000001, 0.00010818100000000233, 0.00010870799999999903, 0.00010880500000000001, 0.00010866600000000032, 0.00010856899999999933, 0.00010876400000000078, 0.00010837500000000083, 0.00010873599999999817, 0.0001088890000000009, 0.00010879199999999992, 0.00010866699999999979, 0.00010875000000000121, 0.0001085699999999988, 0.00010855599999999924, 0.00010854100000000019, 0.00010801400000000003, 0.00010826400000000028, 0.00010830499999999951, 0.00010881900000000305, 0.00010832000000000203, 0.00010881999999999906, 0.00010894499999999918, 0.0001088890000000009, 0.0001083479999999977, 0.00010851400000000053, 0.00010829199999999942, 0.0001087219999999986, 0.00010826400000000028, 0.00010872200000000207, 0.00010880500000000001, 0.00010797299999999732, 0.00010844499999999868, 0.0001086950000000024, 0.00010794499999999818, 0.00010804200000000264, 0.00010891700000000004, 0.00010869499999999893, 0.00010886200000000124, 0.00010822200000000157, 0.00010867999999999989]</msg>
<status status="PASS" starttime="20201112 09:55:04.870" endtime="20201112 09:55:04.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.865" endtime="20201112 09:55:04.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.875" endtime="20201112 09:55:04.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:04.878" endtime="20201112 09:55:04.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.877" endtime="20201112 09:55:04.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.873" endtime="20201112 09:55:04.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.503" endtime="20201112 09:55:04.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.502" endtime="20201112 09:55:04.899"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.908" endtime="20201112 09:55:04.929"></status>
</kw>
<msg timestamp="20201112 09:55:04.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.906" endtime="20201112 09:55:04.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.930" endtime="20201112 09:55:04.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.933" endtime="20201112 09:55:04.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.904" endtime="20201112 09:55:04.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.902" endtime="20201112 09:55:04.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.943" endtime="20201112 09:55:05.229"></status>
</kw>
<msg timestamp="20201112 09:55:05.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.941" endtime="20201112 09:55:05.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.233" endtime="20201112 09:55:05.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.241" endtime="20201112 09:55:05.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.939" endtime="20201112 09:55:05.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.937" endtime="20201112 09:55:05.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:05.247" level="INFO">${RESULT} = [{'time': 0.019865681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001095280000000011, 'source_diff': 0.0001095280000000011}, {'time': 0.019980694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:05.244" endtime="20201112 09:55:05.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:05.261" level="INFO">${ACCURACY} = {'time': [0.019865681, 0.019980694, 0.020092681, 0.020205694, 0.020318694, 0.020432722, 0.020545722, 0.020660722, 0.020775736, 0.020890736, 0.021003778, 0.021116792, 0.021229833, 0.021342792, 0.021456...</msg>
<status status="PASS" starttime="20201112 09:55:05.249" endtime="20201112 09:55:05.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.265" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 09:55:05.264" endtime="20201112 09:55:05.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.268" level="INFO">VALUE: [0.0001095280000000011, 0.00010915200000000125, 0.00010955600000000024, 0.00010956900000000033, 0.00010912500000000158, 0.00010931900000000008, 0.00010942999999999717, 0.00010919399999999996, 0.00010923599999999867, 0.00010930500000000051, 0.00010908400000000235, 0.00010958399999999938, 0.0001090829999999994, 0.00010905599999999974, 0.00010919499999999943, 0.00010905599999999974, 0.00010962499999999861, 0.00010975000000000221, 0.00010973599999999917, 0.00010952799999999763, 0.00010984699999999972, 0.00010974999999999874, 0.00010938899999999793, 0.00010911099999999854, 0.00010975000000000221, 0.0001095699999999998, 0.00010937500000000183, 0.00010904200000000017, 0.00010897300000000179, 0.00010952699999999815, 0.00010954099999999772, 0.00010897200000000232, 0.00010949999999999849, 0.00010950000000000196, 0.00010912500000000158, 0.00010905599999999974, 0.00010983399999999963, 0.00010982000000000006, 0.00010919399999999996, 0.00010999999999999899, 0.00010959799999999895, 0.00010963899999999818, 0.00010941600000000107, 0.00010901400000000103, 0.0001093890000000014, 0.00010993099999999714, 0.00010937499999999836, 0.00010973599999999917, 0.00010941700000000054, 0.00010908400000000235]</msg>
<status status="PASS" starttime="20201112 09:55:05.266" endtime="20201112 09:55:05.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.262" endtime="20201112 09:55:05.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.271" endtime="20201112 09:55:05.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:05.275" endtime="20201112 09:55:05.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.273" endtime="20201112 09:55:05.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.270" endtime="20201112 09:55:05.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.900" endtime="20201112 09:55:05.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.900" endtime="20201112 09:55:05.295"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.304" endtime="20201112 09:55:05.325"></status>
</kw>
<msg timestamp="20201112 09:55:05.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.302" endtime="20201112 09:55:05.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.327" endtime="20201112 09:55:05.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.329" endtime="20201112 09:55:05.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.300" endtime="20201112 09:55:05.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.298" endtime="20201112 09:55:05.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.339" endtime="20201112 09:55:05.625"></status>
</kw>
<msg timestamp="20201112 09:55:05.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019824639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.338" endtime="20201112 09:55:05.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019824639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.629" endtime="20201112 09:55:05.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.637" endtime="20201112 09:55:05.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.335" endtime="20201112 09:55:05.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.334" endtime="20201112 09:55:05.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:05.643" level="INFO">${RESULT} = [{'time': 0.019935083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011044399999999774, 'source_diff': 0.00011044399999999774}, {'time': 0.020051097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:05.640" endtime="20201112 09:55:05.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:05.656" level="INFO">${ACCURACY} = {'time': [0.019935083, 0.020051097, 0.020165125, 0.020280111, 0.020393139, 0.020506153, 0.020619153, 0.020733167, 0.020846167, 0.020960181, 0.021075208, 0.021188222, 0.021302236, 0.021416236, 0.021531...</msg>
<status status="PASS" starttime="20201112 09:55:05.644" endtime="20201112 09:55:05.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.661" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 09:55:05.660" endtime="20201112 09:55:05.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.663" level="INFO">VALUE: [0.00011044399999999774, 0.00011005500000000126, 0.00011087499999999986, 0.00011009699999999997, 0.00011012500000000258, 0.0001105700000000008, 0.00011036099999999979, 0.00011011099999999954, 0.00011009799999999945, 0.00011005600000000074, 0.00011050000000000296, 0.00011005500000000126, 0.00011044399999999774, 0.00011043000000000164, 0.00011033299999999718, 0.00011045800000000078, 0.00011013899999999868, 0.00011029199999999795, 0.00011087499999999986, 0.00011040199999999903, 0.00011000000000000246, 0.0001099159999999981, 0.00011062499999999961, 0.00011024999999999924, 0.00011086100000000029, 0.00011081900000000158, 0.0001108480000000002, 0.00010995800000000028, 0.00010997199999999985, 0.00011031999999999709, 0.00011052699999999915, 0.00011019500000000043, 0.00010999999999999899, 0.00011043000000000164, 0.00011015199999999878, 0.00011081899999999811, 0.00010994399999999724, 0.00011065300000000222, 0.00011080600000000149, 0.00011013900000000215, 0.0001102220000000001, 0.00011048599999999992, 0.00011068099999999789, 0.00011054200000000167, 0.00011019500000000043, 0.00011080499999999854, 0.00011018000000000139, 0.00011074999999999974, 0.00011024999999999924, 0.00011012499999999911]</msg>
<status status="PASS" starttime="20201112 09:55:05.662" endtime="20201112 09:55:05.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.657" endtime="20201112 09:55:05.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.667" endtime="20201112 09:55:05.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:05.670" endtime="20201112 09:55:05.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.669" endtime="20201112 09:55:05.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.665" endtime="20201112 09:55:05.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.296" endtime="20201112 09:55:05.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.296" endtime="20201112 09:55:05.691"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.700" endtime="20201112 09:55:05.721"></status>
</kw>
<msg timestamp="20201112 09:55:05.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.698" endtime="20201112 09:55:05.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.722" endtime="20201112 09:55:05.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.725" endtime="20201112 09:55:05.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.695" endtime="20201112 09:55:05.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.693" endtime="20201112 09:55:05.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.735" endtime="20201112 09:55:06.020"></status>
</kw>
<msg timestamp="20201112 09:55:06.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019909431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.733" endtime="20201112 09:55:06.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019909431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.024" endtime="20201112 09:55:06.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.032" endtime="20201112 09:55:06.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.731" endtime="20201112 09:55:06.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.729" endtime="20201112 09:55:06.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:06.039" level="INFO">${RESULT} = [{'time': 0.019909431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011124999999999677, 'source_diff': 0.00011124999999999677}, {'time': 0.020024417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:06.036" endtime="20201112 09:55:06.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:06.052" level="INFO">${ACCURACY} = {'time': [0.019909431, 0.020024417, 0.020139417, 0.020254444, 0.020371458, 0.020488458, 0.020605472, 0.020720514, 0.0208355, 0.0209505, 0.021067528, 0.021184542, 0.021301597, 0.021415556, 0.021529569,...</msg>
<status status="PASS" starttime="20201112 09:55:06.040" endtime="20201112 09:55:06.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.056" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 09:55:06.055" endtime="20201112 09:55:06.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.059" level="INFO">VALUE: [0.00011124999999999677, 0.00011130599999999852, 0.0001114029999999995, 0.00011117999999999892, 0.00011137499999999689, 0.00011148600000000092, 0.00011175000000000074, 0.0001114029999999995, 0.00011119399999999849, 0.00011136100000000079, 0.00011193099999999914, 0.00011155600000000224, 0.0001110549999999988, 0.00011169499999999846, 0.00011112500000000011, 0.00011129199999999895, 0.00011180499999999954, 0.00011137500000000036, 0.00011131899999999861, 0.00011116700000000229, 0.00011161099999999757, 0.00011099999999999999, 0.00011148599999999745, 0.00011168099999999889, 0.00011169499999999846, 0.00011130500000000251, 0.00011143100000000211, 0.00011094400000000171, 0.0001114029999999995, 0.00011180499999999954, 0.00011094400000000171, 0.00011176400000000031, 0.00011165299999999975, 0.00011158299999999843, 0.00011132000000000156, 0.00011161100000000104, 0.00011106899999999836, 0.00011126399999999981, 0.00011108299999999793, 0.00011154099999999972, 0.00011119399999999849, 0.00011148600000000092, 0.00011137500000000036, 0.00011098600000000042, 0.00011179199999999945, 0.00011187500000000086, 0.00011112500000000011, 0.00011167999999999942, 0.00011109700000000097, 0.00011159700000000147]</msg>
<status status="PASS" starttime="20201112 09:55:06.057" endtime="20201112 09:55:06.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.053" endtime="20201112 09:55:06.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.062" endtime="20201112 09:55:06.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:06.066" endtime="20201112 09:55:06.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.064" endtime="20201112 09:55:06.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.061" endtime="20201112 09:55:06.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.692" endtime="20201112 09:55:06.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.691" endtime="20201112 09:55:06.087"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.095" endtime="20201112 09:55:06.116"></status>
</kw>
<msg timestamp="20201112 09:55:06.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.094" endtime="20201112 09:55:06.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.118" endtime="20201112 09:55:06.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.120" endtime="20201112 09:55:06.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.091" endtime="20201112 09:55:06.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.089" endtime="20201112 09:55:06.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.130" endtime="20201112 09:55:06.415"></status>
</kw>
<msg timestamp="20201112 09:55:06.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019750986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.128" endtime="20201112 09:55:06.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019750986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.419" endtime="20201112 09:55:06.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.427" endtime="20201112 09:55:06.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.126" endtime="20201112 09:55:06.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.124" endtime="20201112 09:55:06.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:06.434" level="INFO">${RESULT} = [{'time': 0.019863292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011230599999999952, 'source_diff': 0.00011230599999999952}, {'time': 0.019980292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:06.431" endtime="20201112 09:55:06.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:06.448" level="INFO">${ACCURACY} = {'time': [0.019863292, 0.019980292, 0.020096292, 0.020212292, 0.020330319, 0.020447319, 0.020565361, 0.020681333, 0.020797347, 0.020914389, 0.021032361, 0.021147375, 0.021265403, 0.021382431, 0.021498...</msg>
<status status="PASS" starttime="20201112 09:55:06.435" endtime="20201112 09:55:06.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.453" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 09:55:06.452" endtime="20201112 09:55:06.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.455" level="INFO">VALUE: [0.00011230599999999952, 0.00011248600000000192, 0.00011218100000000286, 0.00011243099999999964, 0.0001123749999999979, 0.00011199999999999752, 0.0001120830000000024, 0.00011234699999999875, 0.00011280500000000054, 0.00011252799999999716, 0.00011247199999999888, 0.00011261099999999857, 0.00011206999999999884, 0.00011237500000000136, 0.00011255599999999977, 0.00011281999999999959, 0.00011206899999999936, 0.00011225000000000124, 0.0001127359999999987, 0.0001120549999999998, 0.00011212500000000111, 0.00011219399999999949, 0.00011237500000000136, 0.00011266700000000032, 0.00011199999999999752, 0.00011219399999999949, 0.00011270899999999903, 0.00011283299999999968, 0.00011256899999999986, 0.00011236099999999832, 0.00011224999999999777, 0.0001120830000000024, 0.00011243000000000017, 0.00011198600000000142, 0.00011231999999999909, 0.00011262500000000161, 0.00011261099999999857, 0.00011231999999999909, 0.00011198600000000142, 0.00011269399999999999, 0.00011248600000000192, 0.00011252700000000115, 0.00011243000000000017, 0.00011215300000000025, 0.00011230500000000004, 0.00011220799999999906, 0.00011205599999999927, 0.00011233400000000213, 0.00011229199999999995, 0.0001127359999999987]</msg>
<status status="PASS" starttime="20201112 09:55:06.454" endtime="20201112 09:55:06.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.449" endtime="20201112 09:55:06.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.465" endtime="20201112 09:55:06.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:06.468" endtime="20201112 09:55:06.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.467" endtime="20201112 09:55:06.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.463" endtime="20201112 09:55:06.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.088" endtime="20201112 09:55:06.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.087" endtime="20201112 09:55:06.489"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.498" endtime="20201112 09:55:06.519"></status>
</kw>
<msg timestamp="20201112 09:55:06.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.496" endtime="20201112 09:55:06.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.521" endtime="20201112 09:55:06.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.523" endtime="20201112 09:55:06.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.494" endtime="20201112 09:55:06.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.491" endtime="20201112 09:55:06.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.534" endtime="20201112 09:55:06.820"></status>
</kw>
<msg timestamp="20201112 09:55:06.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019923708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.533" endtime="20201112 09:55:06.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019923708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.824" endtime="20201112 09:55:06.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.832" endtime="20201112 09:55:06.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.530" endtime="20201112 09:55:06.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.528" endtime="20201112 09:55:06.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:06.839" level="INFO">${RESULT} = [{'time': 0.019923708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011388899999999896, 'source_diff': 0.00011388899999999896}, {'time': 0.020039667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:06.836" endtime="20201112 09:55:06.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:06.852" level="INFO">${ACCURACY} = {'time': [0.019923708, 0.020039667, 0.020156667, 0.020272667, 0.020391681, 0.020507694, 0.020624708, 0.020743708, 0.020862736, 0.02097875, 0.021095764, 0.021212764, 0.021330778, 0.021449792, 0.0215658...</msg>
<status status="PASS" starttime="20201112 09:55:06.840" endtime="20201112 09:55:06.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.856" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 09:55:06.855" endtime="20201112 09:55:06.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.859" level="INFO">VALUE: [0.00011388899999999896, 0.00011300000000000199, 0.00011311099999999907, 0.00011341700000000107, 0.00011348699999999892, 0.00011312499999999864, 0.0001135689999999974, 0.0001132359999999992, 0.00011319400000000049, 0.00011318100000000039, 0.00011299999999999852, 0.00011316699999999735, 0.00011393100000000114, 0.00011329199999999748, 0.00011394500000000071, 0.00011343100000000064, 0.00011330600000000052, 0.00011300000000000199, 0.00011344400000000074, 0.00011298599999999895, 0.00011341700000000107, 0.00011380599999999755, 0.0001135420000000012, 0.00011323600000000267, 0.00011327800000000138, 0.0001133619999999988, 0.00011379199999999798, 0.00011293100000000014, 0.00011320800000000006, 0.00011347199999999988, 0.00011394499999999724, 0.00011368100000000089, 0.00011376400000000231, 0.0001137359999999997, 0.000113597, 0.00011344500000000021, 0.00011361099999999957, 0.00011354100000000172, 0.00011319400000000049, 0.00011304199999999723, 0.00011297199999999938, 0.00011308299999999993, 0.00011333300000000018, 0.00011298599999999895, 0.00011304199999999723, 0.00011363899999999871, 0.00011313900000000168, 0.00011394500000000071, 0.00011357000000000034, 0.00011379199999999798]</msg>
<status status="PASS" starttime="20201112 09:55:06.857" endtime="20201112 09:55:06.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.853" endtime="20201112 09:55:06.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.862" endtime="20201112 09:55:06.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:06.866" endtime="20201112 09:55:06.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.864" endtime="20201112 09:55:06.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.861" endtime="20201112 09:55:06.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.490" endtime="20201112 09:55:06.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.489" endtime="20201112 09:55:06.886"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.895" endtime="20201112 09:55:06.917"></status>
</kw>
<msg timestamp="20201112 09:55:06.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.893" endtime="20201112 09:55:06.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.918" endtime="20201112 09:55:06.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.921" endtime="20201112 09:55:06.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.891" endtime="20201112 09:55:06.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.889" endtime="20201112 09:55:06.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.931" endtime="20201112 09:55:07.216"></status>
</kw>
<msg timestamp="20201112 09:55:07.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.929" endtime="20201112 09:55:07.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.220" endtime="20201112 09:55:07.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.228" endtime="20201112 09:55:07.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.926" endtime="20201112 09:55:07.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.925" endtime="20201112 09:55:07.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:07.234" level="INFO">${RESULT} = [{'time': 0.019783903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011416699999999835, 'source_diff': 0.00011416699999999835}, {'time': 0.019901917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:07.231" endtime="20201112 09:55:07.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:07.248" level="INFO">${ACCURACY} = {'time': [0.019783903, 0.019901917, 0.020018917, 0.020138931, 0.020255931, 0.020374958, 0.020494, 0.020612972, 0.020732972, 0.020853014, 0.020972014, 0.021091014, 0.021210028, 0.021330042, 0.021449042...</msg>
<status status="PASS" starttime="20201112 09:55:07.235" endtime="20201112 09:55:07.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.252" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 09:55:07.251" endtime="20201112 09:55:07.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.254" level="INFO">VALUE: [0.00011416699999999835, 0.00011407000000000084, 0.0001147230000000006, 0.00011406999999999737, 0.00011479200000000245, 0.00011426399999999934, 0.00011490299999999953, 0.00011418000000000192, 0.00011436100000000032, 0.00011470799999999809, 0.00011455600000000177, 0.00011475000000000027, 0.00011469499999999799, 0.00011441700000000207, 0.00011486100000000082, 0.00011445800000000131, 0.00011426399999999934, 0.00011444400000000174, 0.00011401400000000256, 0.00011411100000000007, 0.00011394399999999777, 0.00011468100000000189, 0.00011483399999999769, 0.00011451399999999959, 0.00011462500000000014, 0.0001147230000000006, 0.00011394500000000071, 0.00011448699999999992, 0.0001145550000000023, 0.00011462500000000014, 0.00011476399999999984, 0.00011479199999999898, 0.00011401399999999909, 0.00011477799999999941, 0.00011405600000000127, 0.00011401399999999909, 0.00011470900000000103, 0.00011394500000000071, 0.00011484800000000073, 0.00011390299999999853, 0.0001142360000000002, 0.00011486100000000082, 0.0001148750000000004, 0.00011480600000000202, 0.0001145559999999983, 0.00011412499999999964, 0.0001144169999999986, 0.00011429200000000195, 0.00011408400000000041, 0.00011408300000000093]</msg>
<status status="PASS" starttime="20201112 09:55:07.253" endtime="20201112 09:55:07.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.249" endtime="20201112 09:55:07.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.258" endtime="20201112 09:55:07.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:07.262" endtime="20201112 09:55:07.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.260" endtime="20201112 09:55:07.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.256" endtime="20201112 09:55:07.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.887" endtime="20201112 09:55:07.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.887" endtime="20201112 09:55:07.282"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.291" endtime="20201112 09:55:07.312"></status>
</kw>
<msg timestamp="20201112 09:55:07.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.289" endtime="20201112 09:55:07.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.313" endtime="20201112 09:55:07.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.316" endtime="20201112 09:55:07.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.287" endtime="20201112 09:55:07.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.285" endtime="20201112 09:55:07.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.326" endtime="20201112 09:55:07.612"></status>
</kw>
<msg timestamp="20201112 09:55:07.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.324" endtime="20201112 09:55:07.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.616" endtime="20201112 09:55:07.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.624" endtime="20201112 09:55:07.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.322" endtime="20201112 09:55:07.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.320" endtime="20201112 09:55:07.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:07.631" level="INFO">${RESULT} = [{'time': 0.019853611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011569399999999952, 'source_diff': 0.00011569399999999952}, {'time': 0.019972611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:07.627" endtime="20201112 09:55:07.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:07.644" level="INFO">${ACCURACY} = {'time': [0.019853611, 0.019972611, 0.020091611, 0.020211625, 0.020330653, 0.020451667, 0.020569667, 0.020687708, 0.020805694, 0.020923722, 0.021043708, 0.021163708, 0.02128375, 0.02140475, 0.02152577...</msg>
<status status="PASS" starttime="20201112 09:55:07.632" endtime="20201112 09:55:07.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.648" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 09:55:07.647" endtime="20201112 09:55:07.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.651" level="INFO">VALUE: [0.00011569399999999952, 0.00011536100000000132, 0.00011502799999999966, 0.00011500000000000052, 0.00011544500000000221, 0.0001150559999999988, 0.00011550000000000102, 0.00011501400000000009, 0.00011569399999999952, 0.00011533299999999871, 0.00011580500000000007, 0.0001158750000000014, 0.00011501400000000009, 0.00011558299999999896, 0.0001152499999999973, 0.00011552800000000016, 0.00011506999999999837, 0.00011511100000000107, 0.00011507000000000184, 0.00011498699999999695, 0.00011575000000000127, 0.00011501400000000009, 0.00011525000000000077, 0.00011576399999999737, 0.0001159300000000002, 0.0001153750000000009, 0.00011518099999999892, 0.00011530600000000252, 0.00011519500000000196, 0.00011593099999999967, 0.00011512500000000064, 0.00011579099999999704, 0.0001153750000000009, 0.00011512500000000064, 0.00011563900000000071, 0.0001157910000000005, 0.00011500000000000052, 0.00011584700000000225, 0.00011530599999999905, 0.00011522199999999816, 0.00011530600000000252, 0.00011576400000000084, 0.00011498599999999748, 0.00011567999999999995, 0.00011565300000000028, 0.00011595799999999934, 0.0001159300000000002, 0.00011586099999999835, 0.00011586100000000182, 0.00011500000000000052]</msg>
<status status="PASS" starttime="20201112 09:55:07.649" endtime="20201112 09:55:07.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.645" endtime="20201112 09:55:07.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.654" endtime="20201112 09:55:07.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:07.658" endtime="20201112 09:55:07.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.656" endtime="20201112 09:55:07.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.653" endtime="20201112 09:55:07.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.283" endtime="20201112 09:55:07.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.283" endtime="20201112 09:55:07.679"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.687" endtime="20201112 09:55:07.708"></status>
</kw>
<msg timestamp="20201112 09:55:07.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.686" endtime="20201112 09:55:07.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.710" endtime="20201112 09:55:07.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.712" endtime="20201112 09:55:07.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.683" endtime="20201112 09:55:07.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.681" endtime="20201112 09:55:07.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.722" endtime="20201112 09:55:08.006"></status>
</kw>
<msg timestamp="20201112 09:55:08.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019825069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.721" endtime="20201112 09:55:08.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019825069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.011" endtime="20201112 09:55:08.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.019" endtime="20201112 09:55:08.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.718" endtime="20201112 09:55:08.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.717" endtime="20201112 09:55:08.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:08.025" level="INFO">${RESULT} = [{'time': 0.019825069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011665200000000181, 'source_diff': 0.00011665200000000181}, {'time': 0.019947056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:08.022" endtime="20201112 09:55:08.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:08.039" level="INFO">${ACCURACY} = {'time': [0.019825069, 0.019947056, 0.020069069, 0.020190083, 0.020309111, 0.020430097, 0.020550125, 0.020670194, 0.020792125, 0.020912153, 0.021031167, 0.021152167, 0.021273194, 0.021394181, 0.021515...</msg>
<status status="PASS" starttime="20201112 09:55:08.026" endtime="20201112 09:55:08.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.044" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 09:55:08.043" endtime="20201112 09:55:08.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.046" level="INFO">VALUE: [0.00011665200000000181, 0.00011675000000000227, 0.00011612499999999817, 0.00011690200000000206, 0.00011690300000000153, 0.00011668000000000095, 0.00011608299999999946, 0.00011651299999999865, 0.00011662500000000214, 0.00011649999999999855, 0.00011662499999999867, 0.00011636099999999885, 0.00011595799999999934, 0.0001163620000000018, 0.00011669400000000052, 0.000116291000000001, 0.00011601400000000109, 0.0001166109999999991, 0.00011626400000000134, 0.00011643100000000017, 0.00011637499999999842, 0.00011625000000000177, 0.00011591600000000063, 0.00011618099999999992, 0.00011634799999999876, 0.00011687499999999892, 0.00011626399999999787, 0.00011690199999999859, 0.00011592999999999673, 0.00011634699999999928, 0.00011613900000000121, 0.0001160970000000025, 0.00011607000000000284, 0.00011601399999999762, 0.00011662499999999867, 0.00011693100000000067, 0.00011636099999999885, 0.0001167910000000015, 0.00011687499999999892, 0.00011682000000000012, 0.00011669400000000052, 0.00011681900000000064, 0.00011638900000000146, 0.00011594499999999924, 0.0001162499999999983, 0.00011649999999999855, 0.00011688799999999902, 0.00011676300000000236, 0.0001167910000000015, 0.00011662499999999867]</msg>
<status status="PASS" starttime="20201112 09:55:08.045" endtime="20201112 09:55:08.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.040" endtime="20201112 09:55:08.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.050" endtime="20201112 09:55:08.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:08.053" endtime="20201112 09:55:08.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.052" endtime="20201112 09:55:08.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.048" endtime="20201112 09:55:08.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.679" endtime="20201112 09:55:08.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.679" endtime="20201112 09:55:08.074"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.083" endtime="20201112 09:55:08.104"></status>
</kw>
<msg timestamp="20201112 09:55:08.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.081" endtime="20201112 09:55:08.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.105" endtime="20201112 09:55:08.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.108" endtime="20201112 09:55:08.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.078" endtime="20201112 09:55:08.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.076" endtime="20201112 09:55:08.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.118" endtime="20201112 09:55:08.404"></status>
</kw>
<msg timestamp="20201112 09:55:08.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.116" endtime="20201112 09:55:08.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.408" endtime="20201112 09:55:08.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.416" endtime="20201112 09:55:08.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.114" endtime="20201112 09:55:08.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.112" endtime="20201112 09:55:08.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:08.423" level="INFO">${RESULT} = [{'time': 0.019918403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011794500000000124, 'source_diff': 0.00011794500000000124}, {'time': 0.020039417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:08.420" endtime="20201112 09:55:08.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:08.436" level="INFO">${ACCURACY} = {'time': [0.019918403, 0.020039417, 0.020159417, 0.020280431, 0.020400458, 0.020522458, 0.020644458, 0.020764458, 0.020886486, 0.021007486, 0.021129514, 0.021250569, 0.021371556, 0.021492542, 0.021613...</msg>
<status status="PASS" starttime="20201112 09:55:08.424" endtime="20201112 09:55:08.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.441" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 09:55:08.440" endtime="20201112 09:55:08.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.443" level="INFO">VALUE: [0.00011794500000000124, 0.00011719500000000049, 0.00011787499999999992, 0.0001173750000000029, 0.00011701399999999862, 0.00011705500000000132, 0.0001170690000000009, 0.0001176110000000001, 0.00011776399999999937, 0.00011779199999999851, 0.0001172499999999993, 0.00011741600000000213, 0.00011787499999999992, 0.00011730600000000105, 0.00011718099999999745, 0.0001170690000000009, 0.00011783299999999775, 0.00011779099999999904, 0.00011772200000000066, 0.00011709700000000003, 0.00011777800000000241, 0.00011737499999999942, 0.0001175560000000013, 0.0001177499999999998, 0.00011713899999999874, 0.00011748700000000292, 0.0001177499999999998, 0.00011723599999999973, 0.00011698599999999948, 0.00011726399999999887, 0.00011736099999999985, 0.00011699999999999905, 0.00011780599999999808, 0.00011699999999999905, 0.00011763899999999924, 0.00011712499999999917, 0.00011772300000000013, 0.00011755499999999836, 0.00011720800000000059, 0.00011791600000000263, 0.00011742999999999823, 0.00011758300000000096, 0.00011736099999999985, 0.0001179309999999982, 0.00011736099999999985, 0.00011737499999999942, 0.00011755599999999783, 0.0001172629999999994, 0.0001171109999999996, 0.00011693100000000067]</msg>
<status status="PASS" starttime="20201112 09:55:08.442" endtime="20201112 09:55:08.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.437" endtime="20201112 09:55:08.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.447" endtime="20201112 09:55:08.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:08.450" endtime="20201112 09:55:08.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.449" endtime="20201112 09:55:08.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.445" endtime="20201112 09:55:08.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.075" endtime="20201112 09:55:08.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.074" endtime="20201112 09:55:08.471"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.480" endtime="20201112 09:55:08.502"></status>
</kw>
<msg timestamp="20201112 09:55:08.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.478" endtime="20201112 09:55:08.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.503" endtime="20201112 09:55:08.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.506" endtime="20201112 09:55:08.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.475" endtime="20201112 09:55:08.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.473" endtime="20201112 09:55:08.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.517" endtime="20201112 09:55:08.803"></status>
</kw>
<msg timestamp="20201112 09:55:08.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019903181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020022, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:08.515" endtime="20201112 09:55:08.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019903181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020022, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:08.807" endtime="20201112 09:55:08.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.816" endtime="20201112 09:55:08.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.512" endtime="20201112 09:55:08.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.510" endtime="20201112 09:55:08.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:08.822" level="INFO">${RESULT} = [{'time': 0.020022, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011881900000000264, 'source_diff': 0.00011881900000000264}, {'time': 0.020143014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:55:08.819" endtime="20201112 09:55:08.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:08.835" level="INFO">${ACCURACY} = {'time': [0.020022, 0.020143014, 0.020265028, 0.020388028, 0.020511028, 0.020634056, 0.020755069, 0.020879083, 0.021000083, 0.021124097, 0.021247139, 0.021370139, 0.021492125, 0.021614125, 0.021738139...</msg>
<status status="PASS" starttime="20201112 09:55:08.823" endtime="20201112 09:55:08.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.840" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 09:55:08.839" endtime="20201112 09:55:08.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.842" level="INFO">VALUE: [0.00011881900000000264, 0.00011850000000000055, 0.00011883400000000169, 0.00011869499999999852, 0.00011809700000000103, 0.00011811200000000008, 0.00011892999999999973, 0.00011881899999999918, 0.00011840200000000009, 0.00011813899999999974, 0.00011895800000000234, 0.00011802799999999919, 0.00011836100000000085, 0.0001182500000000003, 0.00011855599999999883, 0.00011837500000000042, 0.00011881999999999865, 0.0001187500000000008, 0.00011879199999999951, 0.00011837500000000042, 0.00011855499999999936, 0.00011850000000000055, 0.00011856899999999893, 0.00011794400000000177, 0.00011841699999999913, 0.00011836099999999738, 0.00011813899999999974, 0.00011891600000000016, 0.000118695000000002, 0.00011816599999999941, 0.00011837500000000042, 0.00011867999999999948, 0.00011873600000000123, 0.00011888899999999702, 0.00011798600000000048, 0.00011851400000000012, 0.00011811099999999713, 0.00011851400000000012, 0.0001182500000000003, 0.0001185560000000023, 0.00011855599999999883, 0.00011833299999999825, 0.00011827699999999997, 0.00011795800000000134, 0.00011873600000000123, 0.00011869400000000252, 0.00011879199999999951, 0.00011863900000000024, 0.0001182500000000003, 0.00011826399999999987]</msg>
<status status="PASS" starttime="20201112 09:55:08.841" endtime="20201112 09:55:08.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.836" endtime="20201112 09:55:08.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.846" endtime="20201112 09:55:08.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:08.849" endtime="20201112 09:55:08.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.848" endtime="20201112 09:55:08.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.844" endtime="20201112 09:55:08.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.472" endtime="20201112 09:55:08.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.471" endtime="20201112 09:55:08.870"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.879" endtime="20201112 09:55:08.900"></status>
</kw>
<msg timestamp="20201112 09:55:08.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.877" endtime="20201112 09:55:08.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.902" endtime="20201112 09:55:08.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.905" endtime="20201112 09:55:08.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.875" endtime="20201112 09:55:08.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.873" endtime="20201112 09:55:08.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.917" endtime="20201112 09:55:09.202"></status>
</kw>
<msg timestamp="20201112 09:55:09.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.915" endtime="20201112 09:55:09.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.206" endtime="20201112 09:55:09.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.214" endtime="20201112 09:55:09.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.912" endtime="20201112 09:55:09.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.910" endtime="20201112 09:55:09.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:09.221" level="INFO">${RESULT} = [{'time': 0.019976875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011897200000000191, 'source_diff': 0.00011897200000000191}, {'time': 0.020100875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:09.217" endtime="20201112 09:55:09.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:09.234" level="INFO">${ACCURACY} = {'time': [0.019976875, 0.020100875, 0.020222875, 0.020347889, 0.020470903, 0.020592931, 0.020717917, 0.020840944, 0.020964972, 0.021087972, 0.021211972, 0.021333986, 0.021458014, 0.021583014, 0.021707...</msg>
<status status="PASS" starttime="20201112 09:55:09.222" endtime="20201112 09:55:09.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.238" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 09:55:09.237" endtime="20201112 09:55:09.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.241" level="INFO">VALUE: [0.00011897200000000191, 0.00011973600000000223, 0.00011922200000000216, 0.00011932000000000262, 0.0001191249999999977, 0.00011919499999999902, 0.00011902800000000019, 0.00011956899999999993, 0.00011901399999999715, 0.00011931899999999968, 0.00011943000000000023, 0.0001198050000000006, 0.0001195699999999994, 0.00011955599999999983, 0.00011944499999999927, 0.00011969400000000005, 0.00011987499999999846, 0.00011916599999999694, 0.00011913899999999727, 0.00011976400000000137, 0.00011961099999999864, 0.00011988899999999802, 0.0001195829999999995, 0.0001194309999999997, 0.00011912500000000117, 0.0001192089999999986, 0.00011894400000000277, 0.00011918099999999945, 0.00011955599999999983, 0.00011927800000000044, 0.00011988899999999802, 0.00011940300000000056, 0.00011950000000000155, 0.00011898599999999801, 0.00011981999999999965, 0.00011900000000000105, 0.00011966700000000038, 0.0001194309999999997, 0.00011983400000000269, 0.00011949999999999808, 0.00011959800000000201, 0.00011895799999999887, 0.00011900000000000105, 0.00011892999999999973, 0.00011937499999999795, 0.0001190699999999989, 0.00011930599999999958, 0.000119389000000001, 0.00011916699999999988, 0.00011973600000000223]</msg>
<status status="PASS" starttime="20201112 09:55:09.239" endtime="20201112 09:55:09.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.235" endtime="20201112 09:55:09.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.244" endtime="20201112 09:55:09.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:09.247" endtime="20201112 09:55:09.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.246" endtime="20201112 09:55:09.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.242" endtime="20201112 09:55:09.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.871" endtime="20201112 09:55:09.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.871" endtime="20201112 09:55:09.268"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.277" endtime="20201112 09:55:09.298"></status>
</kw>
<msg timestamp="20201112 09:55:09.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.275" endtime="20201112 09:55:09.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.300" endtime="20201112 09:55:09.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.302" endtime="20201112 09:55:09.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.273" endtime="20201112 09:55:09.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.271" endtime="20201112 09:55:09.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.312" endtime="20201112 09:55:09.597"></status>
</kw>
<msg timestamp="20201112 09:55:09.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019788972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019909625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.311" endtime="20201112 09:55:09.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019788972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019909625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.601" endtime="20201112 09:55:09.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.609" endtime="20201112 09:55:09.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.308" endtime="20201112 09:55:09.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.306" endtime="20201112 09:55:09.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:09.616" level="INFO">${RESULT} = [{'time': 0.019909625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012065300000000181, 'source_diff': 0.00012065300000000181}, {'time': 0.020033639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:09.613" endtime="20201112 09:55:09.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:09.630" level="INFO">${ACCURACY} = {'time': [0.019909625, 0.020033639, 0.020156653, 0.020281653, 0.020405667, 0.020528681, 0.020652681, 0.020776694, 0.020902694, 0.021025708, 0.02114875, 0.021272736, 0.02139875, 0.021523764, 0.02164676...</msg>
<status status="PASS" starttime="20201112 09:55:09.617" endtime="20201112 09:55:09.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.635" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 09:55:09.634" endtime="20201112 09:55:09.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.637" level="INFO">VALUE: [0.00012065300000000181, 0.0001205700000000004, 0.00012008399999999947, 0.00012026400000000187, 0.00012084799999999979, 0.00012082000000000065, 0.00012018100000000045, 0.00012072199999999672, 0.00012020800000000012, 0.00012055500000000136, 0.00012002800000000119, 0.00012055500000000136, 0.00012055600000000083, 0.00012087499999999946, 0.00012073599999999976, 0.00012044500000000027, 0.00012073599999999976, 0.00012018100000000045, 0.00012037499999999896, 0.00012023599999999926, 0.00012005500000000086, 0.0001204440000000008, 0.00012092999999999826, 0.00012068100000000095, 0.00011998599999999901, 0.00012052799999999822, 0.00012019500000000002, 0.00012073600000000323, 0.00012076299999999943, 0.00012074999999999933, 0.00012005500000000086, 0.0001199440000000003, 0.00012086099999999989, 0.00012012500000000217, 0.0001200699999999999, 0.00012009699999999957, 0.0001204310000000007, 0.00012062500000000267, 0.00012084700000000032, 0.00012055600000000083, 0.0001208050000000016, 0.00012088899999999903, 0.00012011099999999914, 0.00012002800000000119, 0.00012048599999999951, 0.00012034799999999929, 0.00011998600000000248, 0.00012080600000000108, 0.00012043099999999723, 0.00012005600000000033]</msg>
<status status="PASS" starttime="20201112 09:55:09.636" endtime="20201112 09:55:09.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.631" endtime="20201112 09:55:09.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.641" endtime="20201112 09:55:09.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:09.644" endtime="20201112 09:55:09.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.642" endtime="20201112 09:55:09.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.639" endtime="20201112 09:55:09.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.269" endtime="20201112 09:55:09.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.269" endtime="20201112 09:55:09.665"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.673" endtime="20201112 09:55:09.695"></status>
</kw>
<msg timestamp="20201112 09:55:09.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.672" endtime="20201112 09:55:09.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.696" endtime="20201112 09:55:09.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.699" endtime="20201112 09:55:09.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.669" endtime="20201112 09:55:09.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.667" endtime="20201112 09:55:09.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.709" endtime="20201112 09:55:09.994"></status>
</kw>
<msg timestamp="20201112 09:55:09.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.707" endtime="20201112 09:55:09.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.998" endtime="20201112 09:55:10.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.006" endtime="20201112 09:55:10.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.704" endtime="20201112 09:55:10.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.703" endtime="20201112 09:55:10.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:10.013" level="INFO">${RESULT} = [{'time': 0.019838986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012133299999999778, 'source_diff': 0.00012133299999999778}, {'time': 0.019962944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:10.010" endtime="20201112 09:55:10.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:10.026" level="INFO">${ACCURACY} = {'time': [0.019838986, 0.019962944, 0.020086958, 0.020213014, 0.020339972, 0.020467014, 0.020593986, 0.020721014, 0.020848028, 0.020975056, 0.021102042, 0.021229056, 0.021356083, 0.021480083, 0.021607...</msg>
<status status="PASS" starttime="20201112 09:55:10.014" endtime="20201112 09:55:10.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.031" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 09:55:10.030" endtime="20201112 09:55:10.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.033" level="INFO">VALUE: [0.00012133299999999778, 0.00012150000000000008, 0.0001213189999999982, 0.00012111100000000014, 0.00012106900000000143, 0.00012177799999999947, 0.00012155500000000236, 0.0001217639999999999, 0.00012137499999999996, 0.00012119499999999755, 0.00012161100000000064, 0.00012132000000000115, 0.00012127700000000297, 0.00012150000000000008, 0.00012123600000000026, 0.00012169399999999858, 0.00012170799999999815, 0.00012099999999999958, 0.00012116699999999841, 0.0001217639999999999, 0.00012151399999999965, 0.00012124999999999983, 0.0001216250000000002, 0.00012138899999999953, 0.00012124999999999983, 0.0001216250000000002, 0.00012124999999999983, 0.00012133299999999778, 0.00012136100000000039, 0.00012161100000000064, 0.0001212090000000006, 0.00012168100000000195, 0.00012150000000000008, 0.00012159700000000107, 0.00012177799999999947, 0.00012099999999999958, 0.00012130499999999864, 0.00012150000000000008, 0.00012187500000000046, 0.0001211249999999997, 0.00012179199999999904, 0.00012143099999999823, 0.00012124999999999983, 0.00012175000000000033, 0.0001215830000000015, 0.00012106900000000143, 0.0001218189999999987, 0.00012137499999999996, 0.00012150000000000008, 0.00012183300000000175]</msg>
<status status="PASS" starttime="20201112 09:55:10.032" endtime="20201112 09:55:10.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.027" endtime="20201112 09:55:10.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.037" endtime="20201112 09:55:10.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:10.040" endtime="20201112 09:55:10.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.038" endtime="20201112 09:55:10.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.035" endtime="20201112 09:55:10.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.666" endtime="20201112 09:55:10.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.665" endtime="20201112 09:55:10.061"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.069" endtime="20201112 09:55:10.091"></status>
</kw>
<msg timestamp="20201112 09:55:10.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.068" endtime="20201112 09:55:10.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.093" endtime="20201112 09:55:10.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.095" endtime="20201112 09:55:10.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.065" endtime="20201112 09:55:10.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.063" endtime="20201112 09:55:10.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.105" endtime="20201112 09:55:10.390"></status>
</kw>
<msg timestamp="20201112 09:55:10.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.104" endtime="20201112 09:55:10.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.394" endtime="20201112 09:55:10.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.402" endtime="20201112 09:55:10.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.101" endtime="20201112 09:55:10.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.099" endtime="20201112 09:55:10.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:10.409" level="INFO">${RESULT} = [{'time': 0.019956139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012211100000000114, 'source_diff': 0.00012211100000000114}, {'time': 0.020082139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:10.405" endtime="20201112 09:55:10.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:10.422" level="INFO">${ACCURACY} = {'time': [0.019956139, 0.020082139, 0.020208167, 0.020333181, 0.020459208, 0.020587208, 0.020714264, 0.020841222, 0.020969222, 0.021094236, 0.021220264, 0.021345264, 0.021470278, 0.021595278, 0.021721...</msg>
<status status="PASS" starttime="20201112 09:55:10.410" endtime="20201112 09:55:10.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.426" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 09:55:10.425" endtime="20201112 09:55:10.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.429" level="INFO">VALUE: [0.00012211100000000114, 0.00012272199999999872, 0.0001224999999999976, 0.00012262499999999774, 0.00012208299999999853, 0.00012230499999999964, 0.00012266699999999991, 0.00012248599999999804, 0.00012236099999999792, 0.00012262499999999774, 0.00012238900000000053, 0.00012237499999999749, 0.00012205599999999886, 0.00012222199999999822, 0.00012231999999999868, 0.00012248700000000098, 0.0001219440000000023, 0.00012211100000000114, 0.0001221250000000007, 0.00012244399999999933, 0.00012237500000000096, 0.00012237500000000096, 0.00012241699999999966, 0.00012219500000000202, 0.00012198600000000101, 0.00012200000000000058, 0.00012218099999999898, 0.0001221250000000007, 0.0001221660000000034, 0.00012197200000000144, 0.00012236100000000139, 0.0001227359999999983, 0.00012262499999999774, 0.00012288900000000103, 0.0001223059999999991, 0.00012208299999999853, 0.00012280500000000014, 0.0001221250000000007, 0.0001222640000000004, 0.00012205499999999939, 0.00012244399999999933, 0.00012227799999999997, 0.00012211099999999767, 0.00012241699999999966, 0.00012255599999999936, 0.00012237500000000096, 0.00012287499999999799, 0.0001221120000000006, 0.00012288900000000103, 0.0001221799999999995]</msg>
<status status="PASS" starttime="20201112 09:55:10.427" endtime="20201112 09:55:10.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.423" endtime="20201112 09:55:10.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.432" endtime="20201112 09:55:10.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:10.436" endtime="20201112 09:55:10.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.434" endtime="20201112 09:55:10.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.431" endtime="20201112 09:55:10.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.062" endtime="20201112 09:55:10.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.061" endtime="20201112 09:55:10.456"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.465" endtime="20201112 09:55:10.486"></status>
</kw>
<msg timestamp="20201112 09:55:10.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.464" endtime="20201112 09:55:10.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.488" endtime="20201112 09:55:10.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.490" endtime="20201112 09:55:10.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.461" endtime="20201112 09:55:10.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.459" endtime="20201112 09:55:10.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.500" endtime="20201112 09:55:10.785"></status>
</kw>
<msg timestamp="20201112 09:55:10.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.499" endtime="20201112 09:55:10.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.790" endtime="20201112 09:55:10.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.797" endtime="20201112 09:55:10.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.496" endtime="20201112 09:55:10.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.495" endtime="20201112 09:55:10.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:10.804" level="INFO">${RESULT} = [{'time': 0.019868889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012391700000000117, 'source_diff': 0.00012391700000000117}, {'time': 0.019995889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:10.801" endtime="20201112 09:55:10.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:10.817" level="INFO">${ACCURACY} = {'time': [0.019868889, 0.019995889, 0.020123917, 0.020249917, 0.020376944, 0.020503958, 0.020632014, 0.020757958, 0.020885986, 0.021014, 0.021143, 0.021271014, 0.021398042, 0.021524042, 0.021651056, 0...</msg>
<status status="PASS" starttime="20201112 09:55:10.805" endtime="20201112 09:55:10.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.822" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 09:55:10.821" endtime="20201112 09:55:10.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.824" level="INFO">VALUE: [0.00012391700000000117, 0.0001230420000000003, 0.00012382000000000018, 0.0001232359999999988, 0.0001236250000000022, 0.00012354099999999785, 0.00012361099999999917, 0.00012379100000000157, 0.00012362499999999874, 0.0001233060000000001, 0.00012305599999999986, 0.00012387500000000246, 0.00012319499999999955, 0.00012327800000000097, 0.0001235559999999969, 0.000123777000000002, 0.00012319400000000008, 0.00012387500000000246, 0.00012305500000000039, 0.0001234999999999986, 0.00012383300000000028, 0.0001234999999999986, 0.00012388899999999856, 0.00012358300000000003, 0.00012343100000000023, 0.00012315300000000085, 0.00012355499999999742, 0.00012350000000000208, 0.000123777000000002, 0.00012388900000000203, 0.00012366699999999745, 0.00012318099999999998, 0.00012330599999999664, 0.00012312499999999824, 0.00012343100000000023, 0.00012344399999999686, 0.00012322199999999922, 0.0001229999999999981, 0.0001231250000000017, 0.00012319400000000008, 0.00012352800000000122, 0.00012305599999999986, 0.0001234449999999998, 0.00012319500000000302, 0.00012291700000000017, 0.00012329200000000054, 0.0001234030000000011, 0.0001235129999999987, 0.00012312499999999824, 0.00012358300000000003]</msg>
<status status="PASS" starttime="20201112 09:55:10.823" endtime="20201112 09:55:10.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.818" endtime="20201112 09:55:10.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.828" endtime="20201112 09:55:10.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:10.831" endtime="20201112 09:55:10.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.830" endtime="20201112 09:55:10.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.826" endtime="20201112 09:55:10.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.457" endtime="20201112 09:55:10.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.457" endtime="20201112 09:55:10.852"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.861" endtime="20201112 09:55:10.883"></status>
</kw>
<msg timestamp="20201112 09:55:10.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.859" endtime="20201112 09:55:10.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.884" endtime="20201112 09:55:10.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.887" endtime="20201112 09:55:10.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.856" endtime="20201112 09:55:10.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.854" endtime="20201112 09:55:10.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.897" endtime="20201112 09:55:11.183"></status>
</kw>
<msg timestamp="20201112 09:55:11.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019771444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01989625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:10.895" endtime="20201112 09:55:11.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019771444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01989625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:11.187" endtime="20201112 09:55:11.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.195" endtime="20201112 09:55:11.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.893" endtime="20201112 09:55:11.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.891" endtime="20201112 09:55:11.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:11.201" level="INFO">${RESULT} = [{'time': 0.01989625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001248060000000016, 'source_diff': 0.0001248060000000016}, {'time': 0.020025278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:55:11.198" endtime="20201112 09:55:11.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:11.216" level="INFO">${ACCURACY} = {'time': [0.01989625, 0.020025278, 0.020152306, 0.020282333, 0.020409306, 0.020537319, 0.020665333, 0.020795403, 0.020924375, 0.021051375, 0.021180403, 0.021308431, 0.021437403, 0.021566417, 0.0216954...</msg>
<status status="PASS" starttime="20201112 09:55:11.202" endtime="20201112 09:55:11.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.220" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 09:55:11.219" endtime="20201112 09:55:11.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.222" level="INFO">VALUE: [0.0001248060000000016, 0.00012482000000000118, 0.00012415299999999838, 0.00012440199999999915, 0.00012419499999999709, 0.00012444399999999786, 0.00012393000000000126, 0.00012436099999999992, 0.00012420799999999718, 0.00012419400000000108, 0.000124084, 0.00012466699999999845, 0.0001247360000000003, 0.00012412499999999924, 0.00012398700000000248, 0.00012419400000000108, 0.0001246250000000032, 0.00012447200000000047, 0.0001239580000000004, 0.00012412499999999924, 0.0001248199999999977, 0.00012407000000000043, 0.00012472199999999725, 0.00012476399999999943, 0.00012474999999999986, 0.0001246939999999981, 0.00012470799999999768, 0.00012455499999999842, 0.00012455500000000189, 0.0001246939999999981, 0.00012411099999999967, 0.00012483300000000128, 0.00012405600000000086, 0.00012452800000000222, 0.00012459699999999713, 0.0001247360000000003, 0.00012463799999999983, 0.00012462499999999974, 0.00012451399999999918, 0.0001242640000000024, 0.00012420800000000065, 0.0001241939999999976, 0.00012482000000000118, 0.00012430500000000164, 0.0001243060000000011, 0.0001245559999999979, 0.0001243619999999994, 0.00012423699999999926, 0.00012401399999999868, 0.0001249160000000027]</msg>
<status status="PASS" starttime="20201112 09:55:11.221" endtime="20201112 09:55:11.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.216" endtime="20201112 09:55:11.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.226" endtime="20201112 09:55:11.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:11.229" endtime="20201112 09:55:11.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.228" endtime="20201112 09:55:11.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.224" endtime="20201112 09:55:11.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.853" endtime="20201112 09:55:11.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.852" endtime="20201112 09:55:11.250"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.259" endtime="20201112 09:55:11.281"></status>
</kw>
<msg timestamp="20201112 09:55:11.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.257" endtime="20201112 09:55:11.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.282" endtime="20201112 09:55:11.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.285" endtime="20201112 09:55:11.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.255" endtime="20201112 09:55:11.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.253" endtime="20201112 09:55:11.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.295" endtime="20201112 09:55:11.580"></status>
</kw>
<msg timestamp="20201112 09:55:11.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01968975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:11.293" endtime="20201112 09:55:11.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01968975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:11.584" endtime="20201112 09:55:11.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.592" endtime="20201112 09:55:11.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.291" endtime="20201112 09:55:11.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.289" endtime="20201112 09:55:11.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:11.599" level="INFO">${RESULT} = [{'time': 0.019815458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012570800000000215, 'source_diff': 0.00012570800000000215}, {'time': 0.019943458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:11.595" endtime="20201112 09:55:11.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:11.612" level="INFO">${ACCURACY} = {'time': [0.019815458, 0.019943458, 0.020074472, 0.020202486, 0.0203315, 0.020462514, 0.020593556, 0.020723528, 0.020852556, 0.020982542, 0.021111569, 0.021239583, 0.021367583, 0.021496611, 0.02162668...</msg>
<status status="PASS" starttime="20201112 09:55:11.600" endtime="20201112 09:55:11.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.617" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 09:55:11.616" endtime="20201112 09:55:11.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.619" level="INFO">VALUE: [0.00012570800000000215, 0.0001250550000000024, 0.0001254299999999993, 0.00012548599999999757, 0.0001255559999999989, 0.00012593100000000274, 0.00012590300000000013, 0.0001252360000000008, 0.00012538900000000006, 0.00012520900000000112, 0.00012575000000000086, 0.00012525000000000036, 0.0001250000000000001, 0.00012538900000000006, 0.00012549999999999714, 0.00012569400000000258, 0.00012498700000000001, 0.00012520899999999766, 0.00012526399999999993, 0.00012523599999999732, 0.00012544399999999886, 0.00012517999999999904, 0.00012511100000000067, 0.00012576400000000043, 0.0001251800000000025, 0.000125778, 0.00012566700000000292, 0.00012593099999999927, 0.00012543100000000224, 0.00012522199999999775, 0.00012512500000000024, 0.00012522299999999723, 0.00012586100000000142, 0.00012544399999999886, 0.00012525000000000036, 0.0001250000000000001, 0.00012558300000000203, 0.0001259169999999997, 0.0001255000000000006, 0.00012518100000000199, 0.00012502699999999978, 0.00012591600000000022, 0.00012581899999999924, 0.00012544399999999886, 0.00012587499999999752, 0.00012494400000000183, 0.00012570800000000215, 0.00012504199999999882, 0.00012537500000000049, 0.00012495799999999793]</msg>
<status status="PASS" starttime="20201112 09:55:11.618" endtime="20201112 09:55:11.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.613" endtime="20201112 09:55:11.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.627" endtime="20201112 09:55:11.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:11.630" endtime="20201112 09:55:11.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.629" endtime="20201112 09:55:11.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.625" endtime="20201112 09:55:11.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.251" endtime="20201112 09:55:11.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.251" endtime="20201112 09:55:11.651"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.660" endtime="20201112 09:55:11.682"></status>
</kw>
<msg timestamp="20201112 09:55:11.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.658" endtime="20201112 09:55:11.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.684" endtime="20201112 09:55:11.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.686" endtime="20201112 09:55:11.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.656" endtime="20201112 09:55:11.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.654" endtime="20201112 09:55:11.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.696" endtime="20201112 09:55:11.982"></status>
</kw>
<msg timestamp="20201112 09:55:11.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020000167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:11.694" endtime="20201112 09:55:11.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020000167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:11.986" endtime="20201112 09:55:11.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.994" endtime="20201112 09:55:11.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.692" endtime="20201112 09:55:11.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.690" endtime="20201112 09:55:11.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:12.001" level="INFO">${RESULT} = [{'time': 0.020000167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012619499999999909, 'source_diff': 0.00012619499999999909}, {'time': 0.020129153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:11.997" endtime="20201112 09:55:12.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:12.014" level="INFO">${ACCURACY} = {'time': [0.020000167, 0.020129153, 0.020260167, 0.020391181, 0.020523208, 0.02065525, 0.020786222, 0.020916236, 0.021046236, 0.02117625, 0.021306264, 0.021436278, 0.021567278, 0.021698333, 0.02182833...</msg>
<status status="PASS" starttime="20201112 09:55:12.002" endtime="20201112 09:55:12.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.019" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 09:55:12.018" endtime="20201112 09:55:12.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.021" level="INFO">VALUE: [0.00012619499999999909, 0.00012668100000000002, 0.00012654200000000032, 0.00012601400000000068, 0.00012625000000000136, 0.00012634699999999888, 0.00012687499999999852, 0.00012675000000000186, 0.0001266940000000001, 0.00012612500000000124, 0.00012676399999999796, 0.00012594499999999884, 0.00012636099999999845, 0.00012616600000000047, 0.00012620799999999918, 0.00012625000000000136, 0.00012595799999999893, 0.00012625000000000136, 0.000126165999999997, 0.00012601400000000068, 0.0001267360000000023, 0.0001268199999999997, 0.00012683399999999928, 0.00012633399999999878, 0.00012618099999999952, 0.0001262499999999979, 0.00012601400000000068, 0.0001261109999999982, 0.00012630500000000017, 0.00012649999999999814, 0.00012652700000000128, 0.00012680600000000014, 0.00012632000000000268, 0.00012648599999999857, 0.00012594499999999884, 0.00012690199999999818, 0.0001265139999999977, 0.00012655500000000042, 0.0001266940000000001, 0.00012636099999999845, 0.0001260000000000011, 0.00012663899999999784, 0.0001261390000000008, 0.00012648600000000204, 0.00012615199999999743, 0.00012649999999999814, 0.0001261390000000008, 0.0001262910000000006, 0.00012655500000000042, 0.00012634700000000235]</msg>
<status status="PASS" starttime="20201112 09:55:12.020" endtime="20201112 09:55:12.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.015" endtime="20201112 09:55:12.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.025" endtime="20201112 09:55:12.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:12.028" endtime="20201112 09:55:12.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.027" endtime="20201112 09:55:12.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.023" endtime="20201112 09:55:12.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.652" endtime="20201112 09:55:12.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.652" endtime="20201112 09:55:12.049"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.058" endtime="20201112 09:55:12.080"></status>
</kw>
<msg timestamp="20201112 09:55:12.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.056" endtime="20201112 09:55:12.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.081" endtime="20201112 09:55:12.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.084" endtime="20201112 09:55:12.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.054" endtime="20201112 09:55:12.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.052" endtime="20201112 09:55:12.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.094" endtime="20201112 09:55:12.380"></status>
</kw>
<msg timestamp="20201112 09:55:12.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019862264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.092" endtime="20201112 09:55:12.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019862264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.384" endtime="20201112 09:55:12.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.392" endtime="20201112 09:55:12.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.090" endtime="20201112 09:55:12.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.088" endtime="20201112 09:55:12.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:12.398" level="INFO">${RESULT} = [{'time': 0.019862264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012788900000000256, 'source_diff': 0.00012788900000000256}, {'time': 0.019992278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:12.395" endtime="20201112 09:55:12.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:12.411" level="INFO">${ACCURACY} = {'time': [0.019862264, 0.019992278, 0.020122292, 0.020253319, 0.020386306, 0.020517333, 0.020647333, 0.020777347, 0.020907361, 0.021040375, 0.021172375, 0.021302403, 0.021432417, 0.021565417, 0.021696...</msg>
<status status="PASS" starttime="20201112 09:55:12.399" endtime="20201112 09:55:12.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.416" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 09:55:12.415" endtime="20201112 09:55:12.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.418" level="INFO">VALUE: [0.00012788900000000256, 0.00012712499999999877, 0.00012730600000000064, 0.00012736099999999945, 0.00012780600000000114, 0.00012773599999999982, 0.00012784700000000038, 0.0001279300000000018, 0.00012699999999999864, 0.0001276109999999997, 0.00012694400000000036, 0.00012720899999999966, 0.00012730599999999717, 0.0001277499999999994, 0.00012751299999999924, 0.00012792999999999832, 0.00012745800000000043, 0.00012692999999999732, 0.000127778000000002, 0.00012720800000000018, 0.00012743100000000077, 0.00012730600000000064, 0.00012787499999999952, 0.00012762500000000274, 0.00012706999999999996, 0.0001270000000000021, 0.00012737499999999902, 0.00012787499999999952, 0.0001271109999999992, 0.0001271940000000006, 0.00012712500000000224, 0.0001270560000000004, 0.0001273889999999986, 0.00012744500000000034, 0.00012737499999999902, 0.00012712500000000224, 0.00012731900000000074, 0.00012698599999999907, 0.00012704200000000082, 0.0001277499999999994, 0.0001273889999999986, 0.00012758400000000003, 0.00012749999999999914, 0.00012765300000000188, 0.00012729200000000107, 0.00012713799999999886, 0.00012768000000000154, 0.00012692999999999732, 0.00012708300000000006, 0.00012745800000000043]</msg>
<status status="PASS" starttime="20201112 09:55:12.417" endtime="20201112 09:55:12.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.412" endtime="20201112 09:55:12.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.422" endtime="20201112 09:55:12.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:12.425" endtime="20201112 09:55:12.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.424" endtime="20201112 09:55:12.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.420" endtime="20201112 09:55:12.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.050" endtime="20201112 09:55:12.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.049" endtime="20201112 09:55:12.446"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.455" endtime="20201112 09:55:12.476"></status>
</kw>
<msg timestamp="20201112 09:55:12.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.453" endtime="20201112 09:55:12.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.478" endtime="20201112 09:55:12.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.480" endtime="20201112 09:55:12.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.451" endtime="20201112 09:55:12.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.449" endtime="20201112 09:55:12.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.490" endtime="20201112 09:55:12.776"></status>
</kw>
<msg timestamp="20201112 09:55:12.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.489" endtime="20201112 09:55:12.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.780" endtime="20201112 09:55:12.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.788" endtime="20201112 09:55:12.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.486" endtime="20201112 09:55:12.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.484" endtime="20201112 09:55:12.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:12.794" level="INFO">${RESULT} = [{'time': 0.019867792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012827799999999903, 'source_diff': 0.00012827799999999903}, {'time': 0.019999806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:12.791" endtime="20201112 09:55:12.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:12.809" level="INFO">${ACCURACY} = {'time': [0.019867792, 0.019999806, 0.020132833, 0.020266861, 0.020399847, 0.020530847, 0.020664875, 0.020798875, 0.020931903, 0.021063903, 0.021197931, 0.021328958, 0.021462014, 0.021594958, 0.021725...</msg>
<status status="PASS" starttime="20201112 09:55:12.795" endtime="20201112 09:55:12.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.813" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 09:55:12.812" endtime="20201112 09:55:12.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.815" level="INFO">VALUE: [0.00012827799999999903, 0.00012880599999999867, 0.0001285139999999997, 0.00012808300000000106, 0.0001283469999999974, 0.00012841600000000272, 0.00012880599999999867, 0.00012862500000000027, 0.00012790300000000213, 0.00012854199999999885, 0.00012819500000000109, 0.00012865199999999993, 0.00012872200000000125, 0.00012809700000000063, 0.0001281110000000002, 0.0001287919999999991, 0.00012881999999999824, 0.00012798600000000007, 0.00012816699999999848, 0.00012862500000000027, 0.00012881999999999824, 0.00012848700000000005, 0.0001280560000000014, 0.00012869399999999864, 0.0001282499999999999, 0.00012829099999999913, 0.00012833299999999784, 0.00012852799999999928, 0.00012887500000000052, 0.00012862500000000027, 0.00012850000000000014, 0.0001285560000000019, 0.00012795800000000093, 0.00012868000000000254, 0.00012881899999999877, 0.00012802799999999878, 0.0001282919999999986, 0.00012870800000000168, 0.00012880599999999867, 0.00012850000000000014, 0.00012862500000000027, 0.00012842999999999882, 0.00012837500000000002, 0.00012818000000000204, 0.0001288890000000001, 0.00012881899999999877, 0.00012799999999999964, 0.0001287500000000004, 0.00012866699999999898, 0.0001280139999999992]</msg>
<status status="PASS" starttime="20201112 09:55:12.814" endtime="20201112 09:55:12.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.810" endtime="20201112 09:55:12.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.819" endtime="20201112 09:55:12.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:12.822" endtime="20201112 09:55:12.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.821" endtime="20201112 09:55:12.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.817" endtime="20201112 09:55:12.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.447" endtime="20201112 09:55:12.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.447" endtime="20201112 09:55:12.843"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.852" endtime="20201112 09:55:12.874"></status>
</kw>
<msg timestamp="20201112 09:55:12.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.850" endtime="20201112 09:55:12.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.876" endtime="20201112 09:55:12.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.878" endtime="20201112 09:55:12.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.848" endtime="20201112 09:55:12.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.846" endtime="20201112 09:55:12.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.888" endtime="20201112 09:55:13.174"></status>
</kw>
<msg timestamp="20201112 09:55:13.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.887" endtime="20201112 09:55:13.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:13.178" endtime="20201112 09:55:13.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.186" endtime="20201112 09:55:13.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.884" endtime="20201112 09:55:13.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.882" endtime="20201112 09:55:13.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:13.193" level="INFO">${RESULT} = [{'time': 0.019775319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001297079999999992, 'source_diff': 0.0001297079999999992}, {'time': 0.019910333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:13.190" endtime="20201112 09:55:13.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:13.206" level="INFO">${ACCURACY} = {'time': [0.019775319, 0.019910333, 0.020045361, 0.020178361, 0.020313375, 0.020447403, 0.020581403, 0.020715403, 0.020849431, 0.020983444, 0.021116444, 0.021250444, 0.021382472, 0.0215175, 0.02164948...</msg>
<status status="PASS" starttime="20201112 09:55:13.194" endtime="20201112 09:55:13.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.210" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 09:55:13.209" endtime="20201112 09:55:13.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.213" level="INFO">VALUE: [0.0001297079999999992, 0.0001289439999999989, 0.00012976400000000096, 0.00012987499999999805, 0.0001295560000000029, 0.00012994499999999937, 0.00012898600000000107, 0.00012980599999999967, 0.00012962500000000127, 0.00012962500000000127, 0.0001291940000000026, 0.00012900000000000064, 0.0001298890000000011, 0.00012913899999999687, 0.0001292919999999996, 0.00012913900000000034, 0.00012993000000000032, 0.00012900000000000064, 0.000129166, 0.0001289859999999976, 0.00012941699999999973, 0.0001296660000000005, 0.00012976400000000096, 0.00012940300000000016, 0.00012940300000000016, 0.0001296119999999977, 0.00012919499999999862, 0.00012899999999999717, 0.00012955599999999942, 0.00012930600000000264, 0.00012977800000000053, 0.00012963900000000084, 0.00012904099999999988, 0.00012900000000000064, 0.00012973600000000182, 0.00012974999999999792, 0.00012909699999999816, 0.00012954199999999985, 0.0001294309999999993, 0.00012981899999999977, 0.00012944400000000286, 0.00012981899999999977, 0.0001296940000000031, 0.00012966599999999703, 0.0001294439999999994, 0.000129569999999999, 0.00012968099999999955, 0.00012916699999999948, 0.00012918099999999905, 0.00012977800000000053]</msg>
<status status="PASS" starttime="20201112 09:55:13.211" endtime="20201112 09:55:13.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.207" endtime="20201112 09:55:13.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.216" endtime="20201112 09:55:13.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:13.220" endtime="20201112 09:55:13.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.218" endtime="20201112 09:55:13.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.215" endtime="20201112 09:55:13.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.844" endtime="20201112 09:55:13.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.844" endtime="20201112 09:55:13.241"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.249" endtime="20201112 09:55:13.270"></status>
</kw>
<msg timestamp="20201112 09:55:13.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.248" endtime="20201112 09:55:13.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.271" endtime="20201112 09:55:13.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.274" endtime="20201112 09:55:13.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.245" endtime="20201112 09:55:13.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.243" endtime="20201112 09:55:13.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.284" endtime="20201112 09:55:13.569"></status>
</kw>
<msg timestamp="20201112 09:55:13.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019917069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:13.282" endtime="20201112 09:55:13.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019917069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:13.573" endtime="20201112 09:55:13.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.581" endtime="20201112 09:55:13.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.280" endtime="20201112 09:55:13.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.278" endtime="20201112 09:55:13.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:13.587" level="INFO">${RESULT} = [{'time': 0.019917069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013024999999999842, 'source_diff': 0.00013024999999999842}, {'time': 0.020052069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:13.584" endtime="20201112 09:55:13.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:13.600" level="INFO">${ACCURACY} = {'time': [0.019917069, 0.020052069, 0.020187083, 0.020323097, 0.020457097, 0.020592125, 0.020725111, 0.020858153, 0.020993167, 0.021128167, 0.021264167, 0.021398194, 0.021534236, 0.021670208, 0.021805...</msg>
<status status="PASS" starttime="20201112 09:55:13.588" endtime="20201112 09:55:13.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.605" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 09:55:13.604" endtime="20201112 09:55:13.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.607" level="INFO">VALUE: [0.00013024999999999842, 0.00013051299999999877, 0.00013005500000000045, 0.00013074999999999892, 0.00013012500000000177, 0.0001307639999999985, 0.0001302500000000019, 0.00013013900000000134, 0.0001300699999999995, 0.00013019499999999962, 0.00013005599999999992, 0.00012993000000000032, 0.00013015299999999744, 0.00013074999999999892, 0.00013002800000000078, 0.00013054100000000138, 0.00013056900000000052, 0.00013012500000000177, 0.00013054200000000085, 0.0001299729999999985, 0.00012997300000000198, 0.0001308059999999972, 0.00013009699999999916, 0.0001303890000000016, 0.00013005500000000045, 0.00013061099999999923, 0.00013031900000000027, 0.0001307639999999985, 0.0001300140000000012, 0.0001306669999999975, 0.00013057, 0.00013012500000000177, 0.00013083300000000034, 0.000130166000000001, 0.0001299439999999999, 0.00013016700000000048, 0.0001308890000000021, 0.00012999999999999817, 0.00013012500000000177, 0.00013082000000000024, 0.00013047199999999953, 0.00013036099999999898, 0.00013024999999999842, 0.00013086099999999948, 0.00013005499999999698, 0.0001301110000000022, 0.00013006900000000002, 0.00013047199999999953, 0.0001308469999999999, 0.00013030600000000017]</msg>
<status status="PASS" starttime="20201112 09:55:13.606" endtime="20201112 09:55:13.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.601" endtime="20201112 09:55:13.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.611" endtime="20201112 09:55:13.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:13.614" endtime="20201112 09:55:13.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.613" endtime="20201112 09:55:13.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.609" endtime="20201112 09:55:13.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.242" endtime="20201112 09:55:13.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.241" endtime="20201112 09:55:13.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.055" endtime="20201112 09:55:13.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:13.644" endtime="20201112 09:55:13.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.642" endtime="20201112 09:55:13.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.640" endtime="20201112 09:55:13.664"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:33.976" endtime="20201112 09:55:13.665" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:53:52.865" endtime="20201112 09:55:13.670"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.728" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:55:13.736" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:55:14.758" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:55:13.727" endtime="20201112 09:55:14.759"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.761" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:55:14.760" endtime="20201112 09:55:14.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.726" endtime="20201112 09:55:14.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:14.764" endtime="20201112 09:55:14.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.763" endtime="20201112 09:55:14.952"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.978" endtime="20201112 09:55:15.008"></status>
</kw>
<msg timestamp="20201112 09:55:15.009" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.974" endtime="20201112 09:55:15.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.014" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.011" endtime="20201112 09:55:15.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.021" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:55:15.017" endtime="20201112 09:55:15.022"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:14.969" endtime="20201112 09:55:15.023"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:14.965" endtime="20201112 09:55:15.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.962" endtime="20201112 09:55:15.025"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:55:15.032" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:55:15.032" endtime="20201112 09:55:15.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.027" endtime="20201112 09:55:15.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.961" endtime="20201112 09:55:15.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.959" endtime="20201112 09:55:15.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.034" endtime="20201112 09:55:15.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.957" endtime="20201112 09:55:15.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.037" endtime="20201112 09:55:15.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.954" endtime="20201112 09:55:15.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.724" endtime="20201112 09:55:15.040"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:15.046" endtime="20201112 09:55:15.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.045" endtime="20201112 09:55:15.066"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.079" endtime="20201112 09:55:15.101"></status>
</kw>
<msg timestamp="20201112 09:55:15.101" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.078" endtime="20201112 09:55:15.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.104" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.102" endtime="20201112 09:55:15.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.107" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:55:15.105" endtime="20201112 09:55:15.107"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:15.075" endtime="20201112 09:55:15.108"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:15.073" endtime="20201112 09:55:15.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.072" endtime="20201112 09:55:15.109"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:55:15.112" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:55:15.112" endtime="20201112 09:55:15.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.109" endtime="20201112 09:55:15.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.071" endtime="20201112 09:55:15.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.070" endtime="20201112 09:55:15.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.114" endtime="20201112 09:55:15.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.069" endtime="20201112 09:55:15.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.067" endtime="20201112 09:55:15.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.043" endtime="20201112 09:55:15.117"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:15.121" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.130" endtime="20201112 09:55:17.208"></status>
</kw>
<msg timestamp="20201112 09:55:17.209" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 294541, 'wakeups': [304645, 314574, 324558, 334558, 344558, 354558, 36...</msg>
<status status="PASS" starttime="20201112 09:55:15.129" endtime="20201112 09:55:17.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.215" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 294541, 'wakeups': [304645, 314574, 324558, 334558, 344558, 354558, 36...</msg>
<status status="PASS" starttime="20201112 09:55:17.211" endtime="20201112 09:55:17.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.222" endtime="20201112 09:55:17.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.126" endtime="20201112 09:55:17.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.123" endtime="20201112 09:55:17.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:17.233" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [304645, 314574, 324558, 334558, 344558, 354558, 364558, 374558, 384558, 394558, 404558, 414558, 424558, 434558, 444558, 454558, 464558, 474558, 484558, 494558, 50...</msg>
<status status="PASS" starttime="20201112 09:55:17.229" endtime="20201112 09:55:17.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.241" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:17.239" endtime="20201112 09:55:17.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.245" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:17.243" endtime="20201112 09:55:17.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.234" endtime="20201112 09:55:17.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.255" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:17.253" endtime="20201112 09:55:17.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.260" level="INFO">VALUE: 294541</msg>
<status status="PASS" starttime="20201112 09:55:17.258" endtime="20201112 09:55:17.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.248" endtime="20201112 09:55:17.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.270" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:17.267" endtime="20201112 09:55:17.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.273" level="INFO">VALUE: [304645, 314574, 324558, 334558, 344558, 354558, 364558, 374558, 384558, 394558, 404558, 414558, 424558, 434558, 444558, 454558, 464558, 474558, 484558, 494558, 504558, 514558, 524558, 534558, 544558, 554558, 564558, 574558, 584558, 594558, 604558, 614558, 624558, 634558, 644558, 654558, 664558, 674558, 684558, 694558, 704558, 714558, 724558, 734558, 744558, 754558, 764558, 774558, 784558, 794558, 804558, 814558, 824558, 834558, 844558, 854558, 864558, 874558, 884558, 894558, 904558, 914558, 924558, 934558, 944558, 954558, 964558, 974558, 984558, 994558, 1004558, 1014558, 1024558, 1034558, 1044558, 1054558, 1064558, 1074558, 1084558, 1094558, 1104558, 1114558, 1124558, 1134558, 1144558, 1154558, 1164558, 1174558, 1184558, 1194558, 1204558, 1214558, 1224558, 1234558, 1244558, 1254558, 1264558, 1274558, 1284558, 1294558]</msg>
<status status="PASS" starttime="20201112 09:55:17.272" endtime="20201112 09:55:17.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.263" endtime="20201112 09:55:17.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.280" endtime="20201112 09:55:17.575"></status>
</kw>
<msg timestamp="20201112 09:55:17.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073185347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.083299139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:17.279" endtime="20201112 09:55:17.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073185347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.083299139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:17.579" endtime="20201112 09:55:17.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.586" endtime="20201112 09:55:17.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.276" endtime="20201112 09:55:17.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.275" endtime="20201112 09:55:17.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:17.613" level="INFO">${RESULT} = {'time': [0.073185347, 0.083299139, 0.093216694, 0.103201681, 0.113202542, 0.123203458, 0.133204403, 0.143205319, 0.153206306, 0.163207222, 0.173208097, 0.183209, 0.193209917, 0.203210875, 0.213211778...</msg>
<status status="PASS" starttime="20201112 09:55:17.589" endtime="20201112 09:55:17.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.617" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:17.616" endtime="20201112 09:55:17.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.620" level="INFO">VALUE: 0.073185347</msg>
<status status="PASS" starttime="20201112 09:55:17.619" endtime="20201112 09:55:17.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.614" endtime="20201112 09:55:17.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.625" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:17.624" endtime="20201112 09:55:17.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.627" level="INFO">VALUE: [0.083299139, 0.093216694, 0.103201681, 0.113202542, 0.123203458, 0.133204403, 0.143205319, 0.153206306, 0.163207222, 0.173208097, 0.183209, 0.193209917, 0.203210875, 0.213211778, 0.223212694, 0.233213611, 0.243214528, 0.253215444, 0.263216361, 0.273217306, 0.283218208, 0.293219125, 0.303220069, 0.313220972, 0.323221889, 0.333222806, 0.343223736, 0.353224667, 0.363225569, 0.3732265, 0.383227403, 0.393228347, 0.40322925, 0.413230181, 0.423231083, 0.433232014, 0.443232931, 0.453233847, 0.463234764, 0.473235694, 0.483236611, 0.493237542, 0.503238444, 0.513239375, 0.523240292, 0.533241208, 0.543242139, 0.553243069, 0.563243972, 0.573244944, 0.583245819, 0.593246736, 0.603247653, 0.613248597, 0.6232495, 0.633250431, 0.643251361, 0.653252292, 0.663253181, 0.673254167, 0.683255042, 0.693255944, 0.703256903, 0.713257806, 0.723258736, 0.733259625, 0.743260569, 0.753261486, 0.763262389, 0.773263333, 0.783264236, 0.793265167, 0.803266083, 0.813267, 0.823267917, 0.833268861, 0.843269778, 0.853270708, 0.863271625, 0.873272542, 0.883273458, 0.893274389, 0.903275333, 0.913276236, 0.923277153, 0.933278056, 0.943278986, 0.953279917, 0.963280819, 0.973281764, 0.983282667, 0.993283583, 1.003284528, 1.0132855, 1.023286361, 1.033287347, 1.043288264, 1.053289153, 1.063290042, 1.073290958] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:17.626" endtime="20201112 09:55:17.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.621" endtime="20201112 09:55:17.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.630" endtime="20201112 09:55:17.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:17.634" endtime="20201112 09:55:17.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.632" endtime="20201112 09:55:17.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.629" endtime="20201112 09:55:17.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.121" endtime="20201112 09:55:17.654"></status>
</kw>
<msg timestamp="20201112 09:55:17.655" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.663" endtime="20201112 09:55:19.744"></status>
</kw>
<msg timestamp="20201112 09:55:19.746" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2826817, 'wakeups': [2836833, 2846834, 2856834, 2866834, 2876834, 2886...</msg>
<status status="PASS" starttime="20201112 09:55:17.661" endtime="20201112 09:55:19.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.752" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2826817, 'wakeups': [2836833, 2846834, 2856834, 2866834, 2876834, 2886...</msg>
<status status="PASS" starttime="20201112 09:55:19.748" endtime="20201112 09:55:19.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.754" endtime="20201112 09:55:19.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.659" endtime="20201112 09:55:19.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.657" endtime="20201112 09:55:19.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:19.766" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [2836833, 2846834, 2856834, 2866834, 2876834, 2886834, 2896834, 2906834, 2916834, 2926834, 2936834, 2946834, 2956834, 2966834, 2976834, 2986834, 2996834, 3006834, ...</msg>
<status status="PASS" starttime="20201112 09:55:19.762" endtime="20201112 09:55:19.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.776" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:19.772" endtime="20201112 09:55:19.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.781" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:19.779" endtime="20201112 09:55:19.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.768" endtime="20201112 09:55:19.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.791" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:19.789" endtime="20201112 09:55:19.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.796" level="INFO">VALUE: 2826817</msg>
<status status="PASS" starttime="20201112 09:55:19.794" endtime="20201112 09:55:19.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.784" endtime="20201112 09:55:19.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.806" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:19.804" endtime="20201112 09:55:19.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.811" level="INFO">VALUE: [2836833, 2846834, 2856834, 2866834, 2876834, 2886834, 2896834, 2906834, 2916834, 2926834, 2936834, 2946834, 2956834, 2966834, 2976834, 2986834, 2996834, 3006834, 3016834, 3026834, 3036834, 3046834, 3056834, 3066834, 3076834, 3086834, 3096834, 3106834, 3116834, 3126834, 3136834, 3146834, 3156834, 3166834, 3176834, 3186834, 3196834, 3206834, 3216834, 3226834, 3236834, 3246834, 3256834, 3266834, 3276834, 3286834, 3296834, 3306834, 3316834, 3326834, 3336834, 3346834, 3356834, 3366834, 3376834, 3386834, 3396834, 3406834, 3416834, 3426834, 3436834, 3446834, 3456834, 3466834, 3476834, 3486834, 3496834, 3506834, 3516834, 3526834, 3536834, 3546834, 3556834, 3566834, 3576834, 3586834, 3596834, 3606834, 3616834, 3626834, 3636834, 3646834, 3656834, 3666834, 3676834, 3686834, 3696834, 3706834, 3716834, 3726834, 3736834, 3746834, 3756834, 3766834, 3776834, 3786834, 3796834, 3806834, 3816834, 3826834]</msg>
<status status="PASS" starttime="20201112 09:55:19.808" endtime="20201112 09:55:19.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.799" endtime="20201112 09:55:19.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.826" endtime="20201112 09:55:20.118"></status>
</kw>
<msg timestamp="20201112 09:55:20.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018065069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028082806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:19.823" endtime="20201112 09:55:20.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018065069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028082806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:20.122" endtime="20201112 09:55:20.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.130" endtime="20201112 09:55:20.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.817" endtime="20201112 09:55:20.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.814" endtime="20201112 09:55:20.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:20.156" level="INFO">${RESULT} = {'time': [0.018065069, 0.028082806, 0.038084736, 0.048085653, 0.058086569, 0.068087528, 0.078088417, 0.088089361, 0.098090264, 0.108091167, 0.118092097, 0.128093014, 0.138093931, 0.148094861, 0.158095...</msg>
<status status="PASS" starttime="20201112 09:55:20.133" endtime="20201112 09:55:20.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.161" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:20.160" endtime="20201112 09:55:20.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.163" level="INFO">VALUE: 0.018065069</msg>
<status status="PASS" starttime="20201112 09:55:20.162" endtime="20201112 09:55:20.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.157" endtime="20201112 09:55:20.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.168" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:20.167" endtime="20201112 09:55:20.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.170" level="INFO">VALUE: [0.028082806, 0.038084736, 0.048085653, 0.058086569, 0.068087528, 0.078088417, 0.088089361, 0.098090264, 0.108091167, 0.118092097, 0.128093014, 0.138093931, 0.148094861, 0.158095778, 0.168096694, 0.178097625, 0.188098528, 0.198099458, 0.208100389, 0.218101306, 0.228102222, 0.238103139, 0.248104069, 0.258104986, 0.268105917, 0.278106819, 0.288107736, 0.298108667, 0.308109583, 0.3181105, 0.328111431, 0.338112347, 0.348113278, 0.358114194, 0.368115125, 0.378116028, 0.388116986, 0.398117889, 0.408118792, 0.418119708, 0.428120653, 0.438121556, 0.448122472, 0.458123417, 0.468124319, 0.478125236, 0.488126167, 0.498127083, 0.508128, 0.518128931, 0.528129847, 0.538130806, 0.548131708, 0.558132611, 0.568133556, 0.578134458, 0.588135375, 0.598136347, 0.608137222, 0.618138139, 0.628139069, 0.638139986, 0.648140972, 0.658141833, 0.66814275, 0.678143667, 0.688144597, 0.698145514, 0.708146458, 0.718147361, 0.728148319, 0.738149208, 0.748150167, 0.758151056, 0.768151972, 0.778152889, 0.788153806, 0.798154736, 0.808155667, 0.818156611, 0.8281575, 0.838158431, 0.848159361, 0.858160278, 0.868161194, 0.878162153, 0.888163028, 0.898163958, 0.908164875, 0.918165792, 0.928166722, 0.938167639, 0.948168583, 0.958169486, 0.968170403, 0.978171319, 0.988172264, 0.998173167, 1.008174097, 1.018175014] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:20.169" endtime="20201112 09:55:20.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.164" endtime="20201112 09:55:20.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.174" endtime="20201112 09:55:20.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:20.177" endtime="20201112 09:55:20.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.176" endtime="20201112 09:55:20.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.172" endtime="20201112 09:55:20.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.655" endtime="20201112 09:55:20.198"></status>
</kw>
<msg timestamp="20201112 09:55:20.198" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.206" endtime="20201112 09:55:22.288"></status>
</kw>
<msg timestamp="20201112 09:55:22.289" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5370295, 'wakeups': [5380311, 5390312, 5400312, 5410312, 5420312, 5430...</msg>
<status status="PASS" starttime="20201112 09:55:20.204" endtime="20201112 09:55:22.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.295" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5370295, 'wakeups': [5380311, 5390312, 5400312, 5410312, 5420312, 5430...</msg>
<status status="PASS" starttime="20201112 09:55:22.292" endtime="20201112 09:55:22.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.297" endtime="20201112 09:55:22.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.202" endtime="20201112 09:55:22.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.200" endtime="20201112 09:55:22.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:22.308" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [5380311, 5390312, 5400312, 5410312, 5420312, 5430312, 5440312, 5450312, 5460312, 5470312, 5480312, 5490312, 5500312, 5510312, 5520312, 5530312, 5540312, 5550312, ...</msg>
<status status="PASS" starttime="20201112 09:55:22.304" endtime="20201112 09:55:22.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.316" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:22.314" endtime="20201112 09:55:22.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.321" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:22.319" endtime="20201112 09:55:22.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.310" endtime="20201112 09:55:22.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.331" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:22.329" endtime="20201112 09:55:22.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.335" level="INFO">VALUE: 5370295</msg>
<status status="PASS" starttime="20201112 09:55:22.333" endtime="20201112 09:55:22.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.324" endtime="20201112 09:55:22.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.345" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:22.343" endtime="20201112 09:55:22.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.350" level="INFO">VALUE: [5380311, 5390312, 5400312, 5410312, 5420312, 5430312, 5440312, 5450312, 5460312, 5470312, 5480312, 5490312, 5500312, 5510312, 5520312, 5530312, 5540312, 5550312, 5560312, 5570312, 5580312, 5590312, 5600312, 5610312, 5620312, 5630312, 5640312, 5650312, 5660312, 5670312, 5680312, 5690312, 5700312, 5710312, 5720312, 5730312, 5740312, 5750312, 5760312, 5770312, 5780312, 5790312, 5800312, 5810312, 5820312, 5830312, 5840312, 5850312, 5860312, 5870312, 5880312, 5890312, 5900312, 5910312, 5920312, 5930312, 5940312, 5950312, 5960312, 5970312, 5980312, 5990312, 6000312, 6010312, 6020312, 6030312, 6040312, 6050312, 6060312, 6070312, 6080312, 6090312, 6100312, 6110312, 6120312, 6130312, 6140312, 6150312, 6160312, 6170312, 6180312, 6190312, 6200312, 6210312, 6220312, 6230312, 6240312, 6250312, 6260312, 6270312, 6280312, 6290312, 6300312, 6310312, 6320312, 6330312, 6340312, 6350312, 6360312, 6370312]</msg>
<status status="PASS" starttime="20201112 09:55:22.347" endtime="20201112 09:55:22.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.338" endtime="20201112 09:55:22.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.384" endtime="20201112 09:55:22.676"></status>
</kw>
<msg timestamp="20201112 09:55:22.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018132625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028150236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:22.382" endtime="20201112 09:55:22.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018132625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028150236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:22.679" endtime="20201112 09:55:22.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.687" endtime="20201112 09:55:22.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.376" endtime="20201112 09:55:22.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.353" endtime="20201112 09:55:22.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:22.713" level="INFO">${RESULT} = {'time': [0.018132625, 0.028150236, 0.038152111, 0.048153083, 0.058153958, 0.068154875, 0.078155792, 0.08815675, 0.098157639, 0.108158542, 0.118159472, 0.128160389, 0.138161347, 0.148162236, 0.1581631...</msg>
<status status="PASS" starttime="20201112 09:55:22.690" endtime="20201112 09:55:22.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.718" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:22.717" endtime="20201112 09:55:22.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.720" level="INFO">VALUE: 0.018132625</msg>
<status status="PASS" starttime="20201112 09:55:22.719" endtime="20201112 09:55:22.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.714" endtime="20201112 09:55:22.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.725" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:22.724" endtime="20201112 09:55:22.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.727" level="INFO">VALUE: [0.028150236, 0.038152111, 0.048153083, 0.058153958, 0.068154875, 0.078155792, 0.08815675, 0.098157639, 0.108158542, 0.118159472, 0.128160389, 0.138161347, 0.148162236, 0.158163167, 0.168164069, 0.178164986, 0.188165958, 0.198166833, 0.20816775, 0.218168694, 0.228169583, 0.238170514, 0.248171486, 0.258172347, 0.268173264, 0.278174194, 0.288175111, 0.298176042, 0.308177014, 0.318177875, 0.328178792, 0.338179708, 0.348180667, 0.358181569, 0.368182472, 0.378183403, 0.388184319, 0.398185278, 0.408186153, 0.418187083, 0.428188, 0.438188917, 0.448189875, 0.458190764, 0.468191694, 0.478192611, 0.488193528, 0.498194444, 0.508195375, 0.518196292, 0.528197208, 0.538198139, 0.548199069, 0.558199986, 0.568200889, 0.578201819, 0.58820275, 0.598203681, 0.608204583, 0.6182055, 0.628206458, 0.638207347, 0.648208292, 0.658209208, 0.668210111, 0.678211042, 0.688212028, 0.698212889, 0.708213875, 0.71821475, 0.728215653, 0.738216569, 0.748217486, 0.758218417, 0.768219333, 0.77822025, 0.788221167, 0.798222097, 0.808223042, 0.818223944, 0.828224847, 0.838225778, 0.848226694, 0.858227611, 0.868228542, 0.878229486, 0.888230389, 0.898231292, 0.908232222, 0.918233153, 0.928234056, 0.938235, 0.948235903, 0.958236819, 0.96823775, 0.978238667, 0.988239583, 0.998240514, 1.008241431, 1.018242361] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:22.726" endtime="20201112 09:55:22.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.721" endtime="20201112 09:55:22.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.730" endtime="20201112 09:55:22.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:22.733" endtime="20201112 09:55:22.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.732" endtime="20201112 09:55:22.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.728" endtime="20201112 09:55:22.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.199" endtime="20201112 09:55:22.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.119" endtime="20201112 09:55:22.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.118" endtime="20201112 09:55:22.755"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:22.757" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.766" endtime="20201112 09:55:24.849"></status>
</kw>
<msg timestamp="20201112 09:55:24.851" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7930673, 'wakeups': [7940715, 7950685, 7960697, 7970685, 7980697, 7990...</msg>
<status status="PASS" starttime="20201112 09:55:22.764" endtime="20201112 09:55:24.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.857" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7930673, 'wakeups': [7940715, 7950685, 7960697, 7970685, 7980697, 7990...</msg>
<status status="PASS" starttime="20201112 09:55:24.853" endtime="20201112 09:55:24.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.859" endtime="20201112 09:55:24.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.762" endtime="20201112 09:55:24.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.759" endtime="20201112 09:55:24.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:24.871" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [7940715, 7950685, 7960697, 7970685, 7980697, 7990685, 8000697, 8010685, 8020697, 8030685, 8040697, 8050685, 8060697, 8070685, 8080697, 8090685, 8100697, 8110685, ...</msg>
<status status="PASS" starttime="20201112 09:55:24.867" endtime="20201112 09:55:24.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.880" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:24.877" endtime="20201112 09:55:24.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.884" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:24.882" endtime="20201112 09:55:24.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.873" endtime="20201112 09:55:24.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.894" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:24.892" endtime="20201112 09:55:24.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.899" level="INFO">VALUE: 7930673</msg>
<status status="PASS" starttime="20201112 09:55:24.897" endtime="20201112 09:55:24.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.887" endtime="20201112 09:55:24.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.908" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:24.906" endtime="20201112 09:55:24.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.913" level="INFO">VALUE: [7940715, 7950685, 7960697, 7970685, 7980697, 7990685, 8000697, 8010685, 8020697, 8030685, 8040697, 8050685, 8060697, 8070685, 8080697, 8090685, 8100697, 8110685, 8120697, 8130685, 8140697, 8150685, 8160697, 8170685, 8180697, 8190685, 8200697, 8210685, 8220697, 8230685, 8240697, 8250685, 8260697, 8270685, 8280697, 8290685, 8300697, 8310685, 8320697, 8330685, 8340697, 8350685, 8360697, 8370685, 8380697, 8390685, 8400697, 8410685, 8420697, 8430685, 8440697, 8450685, 8460697, 8470685, 8480697, 8490685, 8500697, 8510685, 8520697, 8530685, 8540697, 8550685, 8560697, 8570685, 8580697, 8590685, 8600697, 8610685, 8620697, 8630685, 8640697, 8650685, 8660697, 8670685, 8680697, 8690685, 8700697, 8710685, 8720697, 8730685, 8740697, 8750685, 8760697, 8770685, 8780697, 8790685, 8800697, 8810685, 8820697, 8830685, 8840697, 8850685, 8860697, 8870685, 8880697, 8890685, 8900697, 8910685, 8920697, 8930685]</msg>
<status status="PASS" starttime="20201112 09:55:24.911" endtime="20201112 09:55:24.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.902" endtime="20201112 09:55:24.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.928" endtime="20201112 09:55:25.224"></status>
</kw>
<msg timestamp="20201112 09:55:25.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032265028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:24.925" endtime="20201112 09:55:25.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032265028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:25.228" endtime="20201112 09:55:25.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.235" endtime="20201112 09:55:25.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.920" endtime="20201112 09:55:25.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.916" endtime="20201112 09:55:25.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:25.262" level="INFO">${RESULT} = {'time': [0.022221931, 0.032265028, 0.042236361, 0.052248764, 0.062238194, 0.072250597, 0.082240042, 0.092252444, 0.102241875, 0.112254319, 0.122243722, 0.132256125, 0.142245597, 0.152257958, 0.162247...</msg>
<status status="PASS" starttime="20201112 09:55:25.239" endtime="20201112 09:55:25.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.266" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:25.265" endtime="20201112 09:55:25.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.269" level="INFO">VALUE: 0.022221931</msg>
<status status="PASS" starttime="20201112 09:55:25.267" endtime="20201112 09:55:25.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.263" endtime="20201112 09:55:25.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.274" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:25.273" endtime="20201112 09:55:25.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.276" level="INFO">VALUE: [0.032265028, 0.042236361, 0.052248764, 0.062238194, 0.072250597, 0.082240042, 0.092252444, 0.102241875, 0.112254319, 0.122243722, 0.132256125, 0.142245597, 0.152257958, 0.162247389, 0.172259806, 0.182249236, 0.192261639, 0.202251069, 0.212263486, 0.222252917, 0.232265319, 0.242254764, 0.252267153, 0.262256625, 0.272269014, 0.282258444, 0.292270833, 0.302260292, 0.312272681, 0.322262111, 0.332274514, 0.342263958, 0.352276361, 0.362265792, 0.372278222, 0.382267639, 0.392280056, 0.402269472, 0.412281931, 0.422271333, 0.432283736, 0.442273208, 0.452285583, 0.462275, 0.472287417, 0.482276847, 0.492289264, 0.502278681, 0.512291097, 0.522280528, 0.532292931, 0.542282361, 0.552294792, 0.562284222, 0.572296625, 0.582286125, 0.592298458, 0.602287903, 0.612300306, 0.62228975, 0.632302139, 0.642291583, 0.652304069, 0.662293417, 0.672305819, 0.682295292, 0.692307681, 0.702297111, 0.712309514, 0.722298944, 0.732311347, 0.742300792, 0.752313194, 0.762302625, 0.772315056, 0.782304486, 0.792316931, 0.802306319, 0.812318722, 0.822308153, 0.832320583, 0.84231, 0.852322417, 0.862311833, 0.87232425, 0.882313681, 0.892326097, 0.902315542, 0.912327931, 0.922317389, 0.932329778, 0.942319222, 0.952331694, 0.962321056, 0.972333458, 0.982322917, 0.992335306, 1.002324736, 1.012337153, 1.022326625] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:25.275" endtime="20201112 09:55:25.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.270" endtime="20201112 09:55:25.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.279" endtime="20201112 09:55:25.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:25.282" endtime="20201112 09:55:25.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.281" endtime="20201112 09:55:25.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.277" endtime="20201112 09:55:25.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.758" endtime="20201112 09:55:25.303"></status>
</kw>
<msg timestamp="20201112 09:55:25.303" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.311" endtime="20201112 09:55:27.404"></status>
</kw>
<msg timestamp="20201112 09:55:27.405" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10475413, 'wakeups': [10485451, 10495425, 10505437, 10515425, 10525437...</msg>
<status status="PASS" starttime="20201112 09:55:25.310" endtime="20201112 09:55:27.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.411" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10475413, 'wakeups': [10485451, 10495425, 10505437, 10515425, 10525437...</msg>
<status status="PASS" starttime="20201112 09:55:27.407" endtime="20201112 09:55:27.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.413" endtime="20201112 09:55:27.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.307" endtime="20201112 09:55:27.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.305" endtime="20201112 09:55:27.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:27.424" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [10485451, 10495425, 10505437, 10515425, 10525437, 10535425, 10545437, 10555425, 10565437, 10575425, 10585437, 10595425, 10605437, 10615425, 10625437, 10635425, 10...</msg>
<status status="PASS" starttime="20201112 09:55:27.420" endtime="20201112 09:55:27.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.437" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:27.435" endtime="20201112 09:55:27.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.441" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:27.439" endtime="20201112 09:55:27.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.425" endtime="20201112 09:55:27.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.453" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:27.449" endtime="20201112 09:55:27.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.457" level="INFO">VALUE: 10475413</msg>
<status status="PASS" starttime="20201112 09:55:27.455" endtime="20201112 09:55:27.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.444" endtime="20201112 09:55:27.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.467" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:27.465" endtime="20201112 09:55:27.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.472" level="INFO">VALUE: [10485451, 10495425, 10505437, 10515425, 10525437, 10535425, 10545437, 10555425, 10565437, 10575425, 10585437, 10595425, 10605437, 10615425, 10625437, 10635425, 10645437, 10655425, 10665437, 10675425, 10685437, 10695425, 10705437, 10715425, 10725437, 10735425, 10745437, 10755425, 10765437, 10775425, 10785437, 10795425, 10805437, 10815425, 10825437, 10835425, 10845437, 10855425, 10865437, 10875425, 10885437, 10895425, 10905437, 10915425, 10925437, 10935425, 10945437, 10955425, 10965437, 10975425, 10985437, 10995425, 11005437, 11015425, 11025437, 11035425, 11045437, 11055425, 11065437, 11075425, 11085437, 11095425, 11105437, 11115425, 11125437, 11135425, 11145437, 11155425, 11165437, 11175425, 11185437, 11195425, 11205437, 11215425, 11225437, 11235425, 11245437, 11255425, 11265437, 11275425, 11285437, 11295425, 11305437, 11315425, 11325437, 11335425, 11345437, 11355425, 11365437, 11375425, 11385437, 11395425, 11405437, 11415425, 11425437, 11435425, 11445437, 11455425, 11465437, 11475425]</msg>
<status status="PASS" starttime="20201112 09:55:27.470" endtime="20201112 09:55:27.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.460" endtime="20201112 09:55:27.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.487" endtime="20201112 09:55:27.785"></status>
</kw>
<msg timestamp="20201112 09:55:27.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018057431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028096222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:27.484" endtime="20201112 09:55:27.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018057431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028096222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:27.789" endtime="20201112 09:55:27.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.796" endtime="20201112 09:55:27.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.479" endtime="20201112 09:55:27.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.475" endtime="20201112 09:55:27.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:27.822" level="INFO">${RESULT} = {'time': [0.018057431, 0.028096222, 0.038071944, 0.048084361, 0.058073778, 0.068086194, 0.078075625, 0.088088028, 0.098077472, 0.108089875, 0.118079306, 0.128091708, 0.138081153, 0.148093542, 0.158082...</msg>
<status status="PASS" starttime="20201112 09:55:27.799" endtime="20201112 09:55:27.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.827" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:27.826" endtime="20201112 09:55:27.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.829" level="INFO">VALUE: 0.018057431</msg>
<status status="PASS" starttime="20201112 09:55:27.828" endtime="20201112 09:55:27.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.823" endtime="20201112 09:55:27.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.834" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:27.833" endtime="20201112 09:55:27.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.837" level="INFO">VALUE: [0.028096222, 0.038071944, 0.048084361, 0.058073778, 0.068086194, 0.078075625, 0.088088028, 0.098077472, 0.108089875, 0.118079306, 0.128091708, 0.138081153, 0.148093542, 0.158082972, 0.168095389, 0.178084819, 0.188097222, 0.198086653, 0.208099083, 0.2180885, 0.228100903, 0.238090347, 0.24810275, 0.258092194, 0.268104583, 0.278094028, 0.288106431, 0.298095861, 0.308108278, 0.318097708, 0.328110111, 0.338099583, 0.348111972, 0.358101417, 0.368113792, 0.378103222, 0.388115639, 0.398105069, 0.408117542, 0.418106917, 0.428119347, 0.43810875, 0.448121167, 0.458110639, 0.468123014, 0.478112444, 0.488124861, 0.498114292, 0.508126694, 0.518116125, 0.528128528, 0.538117972, 0.548130403, 0.558119833, 0.568132222, 0.578121653, 0.588134056, 0.5981235, 0.608135903, 0.618125333, 0.62813775, 0.638127181, 0.648139597, 0.658129028, 0.668141458, 0.678130875, 0.688143292, 0.698132708, 0.708145125, 0.718134583, 0.728146958, 0.738136403, 0.748148806, 0.758138319, 0.768150667, 0.778140111, 0.788152486, 0.798141931, 0.808154333, 0.818143778, 0.828156181, 0.838145639, 0.848158028, 0.858147458, 0.868159861, 0.878149333, 0.888161722, 0.898151139, 0.908163569, 0.918152986, 0.928165403, 0.938154847, 0.948167236, 0.958156667, 0.968169111, 0.978158542, 0.988170931, 0.998160375, 1.008172792, 1.018162222] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:27.836" endtime="20201112 09:55:27.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.830" endtime="20201112 09:55:27.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.841" endtime="20201112 09:55:27.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:27.844" endtime="20201112 09:55:27.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.843" endtime="20201112 09:55:27.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.839" endtime="20201112 09:55:27.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.304" endtime="20201112 09:55:27.865"></status>
</kw>
<msg timestamp="20201112 09:55:27.865" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.873" endtime="20201112 09:55:29.965"></status>
</kw>
<msg timestamp="20201112 09:55:29.967" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13037169, 'wakeups': [13047207, 13057181, 13067193, 13077181, 13087193...</msg>
<status status="PASS" starttime="20201112 09:55:27.871" endtime="20201112 09:55:29.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.973" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13037169, 'wakeups': [13047207, 13057181, 13067193, 13077181, 13087193...</msg>
<status status="PASS" starttime="20201112 09:55:29.969" endtime="20201112 09:55:29.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.975" endtime="20201112 09:55:29.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.869" endtime="20201112 09:55:29.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.867" endtime="20201112 09:55:29.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:29.987" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [13047207, 13057181, 13067193, 13077181, 13087193, 13097181, 13107193, 13117181, 13127193, 13137181, 13147193, 13157181, 13167193, 13177181, 13187193, 13197181, 13...</msg>
<status status="PASS" starttime="20201112 09:55:29.983" endtime="20201112 09:55:29.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.996" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:29.994" endtime="20201112 09:55:29.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.000" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:29.998" endtime="20201112 09:55:30.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.989" endtime="20201112 09:55:30.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.010" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:30.008" endtime="20201112 09:55:30.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.014" level="INFO">VALUE: 13037169</msg>
<status status="PASS" starttime="20201112 09:55:30.012" endtime="20201112 09:55:30.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.003" endtime="20201112 09:55:30.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.024" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:30.022" endtime="20201112 09:55:30.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.030" level="INFO">VALUE: [13047207, 13057181, 13067193, 13077181, 13087193, 13097181, 13107193, 13117181, 13127193, 13137181, 13147193, 13157181, 13167193, 13177181, 13187193, 13197181, 13207193, 13217181, 13227193, 13237181, 13247193, 13257181, 13267193, 13277181, 13287193, 13297181, 13307193, 13317181, 13327193, 13337181, 13347193, 13357181, 13367193, 13377181, 13387193, 13397181, 13407193, 13417181, 13427193, 13437181, 13447193, 13457181, 13467193, 13477181, 13487193, 13497181, 13507193, 13517181, 13527193, 13537181, 13547193, 13557181, 13567193, 13577181, 13587193, 13597181, 13607193, 13617181, 13627193, 13637181, 13647193, 13657181, 13667193, 13677181, 13687193, 13697181, 13707193, 13717181, 13727193, 13737181, 13747193, 13757181, 13767193, 13777181, 13787193, 13797181, 13807193, 13817181, 13827193, 13837181, 13847193, 13857181, 13867193, 13877181, 13887193, 13897181, 13907193, 13917181, 13927193, 13937181, 13947193, 13957181, 13967193, 13977181, 13987193, 13997181, 14007193, 14017181, 14027193, 14037181]</msg>
<status status="PASS" starttime="20201112 09:55:30.027" endtime="20201112 09:55:30.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.017" endtime="20201112 09:55:30.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.045" endtime="20201112 09:55:30.345"></status>
</kw>
<msg timestamp="20201112 09:55:30.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018123069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028161431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:30.042" endtime="20201112 09:55:30.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018123069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028161431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:30.349" endtime="20201112 09:55:30.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.356" endtime="20201112 09:55:30.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.036" endtime="20201112 09:55:30.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.033" endtime="20201112 09:55:30.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:30.382" level="INFO">${RESULT} = {'time': [0.018123069, 0.028161431, 0.038137167, 0.048149569, 0.058139, 0.068151403, 0.078140917, 0.088153222, 0.09814275, 0.108155083, 0.118144528, 0.128156917, 0.138146375, 0.14815875, 0.158148208, ...</msg>
<status status="PASS" starttime="20201112 09:55:30.359" endtime="20201112 09:55:30.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.386" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:30.385" endtime="20201112 09:55:30.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.388" level="INFO">VALUE: 0.018123069</msg>
<status status="PASS" starttime="20201112 09:55:30.387" endtime="20201112 09:55:30.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.383" endtime="20201112 09:55:30.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.394" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:30.393" endtime="20201112 09:55:30.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.396" level="INFO">VALUE: [0.028161431, 0.038137167, 0.048149569, 0.058139, 0.068151403, 0.078140917, 0.088153222, 0.09814275, 0.108155083, 0.118144528, 0.128156917, 0.138146375, 0.14815875, 0.158148208, 0.168160583, 0.178150056, 0.188162431, 0.198151889, 0.208164278, 0.218153736, 0.228166111, 0.238155569, 0.248167958, 0.258157417, 0.268169806, 0.27815925, 0.288171639, 0.298161139, 0.308173514, 0.318162931, 0.328175389, 0.338164778, 0.348177167, 0.358166625, 0.368179, 0.378168472, 0.388180847, 0.398170306, 0.408182694, 0.418172167, 0.428184542, 0.438174014, 0.448186375, 0.458175861, 0.46818825, 0.478177681, 0.488190069, 0.498179542, 0.508191917, 0.518181361, 0.528193806, 0.538183208, 0.548195597, 0.558185042, 0.568197431, 0.578186889, 0.588199278, 0.598188722, 0.608201111, 0.618190569, 0.628202958, 0.638192403, 0.648204792, 0.65819425, 0.668206625, 0.678196083, 0.688208542, 0.698197931, 0.708210319, 0.718199764, 0.728212167, 0.738201625, 0.748214014, 0.758203458, 0.768215847, 0.778205292, 0.788217681, 0.798207139, 0.808219528, 0.818208972, 0.828221375, 0.838210819, 0.848223222, 0.858212708, 0.868225042, 0.8782145, 0.888226931, 0.898216347, 0.908228736, 0.91821825, 0.928230583, 0.938220042, 0.948232417, 0.958221917, 0.968234292, 0.978223722, 0.988236097, 0.998225556, 1.008237944, 1.018227403] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:30.395" endtime="20201112 09:55:30.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.390" endtime="20201112 09:55:30.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.399" endtime="20201112 09:55:30.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:30.402" endtime="20201112 09:55:30.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.401" endtime="20201112 09:55:30.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.397" endtime="20201112 09:55:30.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.866" endtime="20201112 09:55:30.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.756" endtime="20201112 09:55:30.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.755" endtime="20201112 09:55:30.424"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:30.426" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.435" endtime="20201112 09:55:32.527"></status>
</kw>
<msg timestamp="20201112 09:55:32.529" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15599265, 'wakeups': [15609312, 15619291, 15629290, 15639289, 15649290...</msg>
<status status="PASS" starttime="20201112 09:55:30.433" endtime="20201112 09:55:32.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.534" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15599265, 'wakeups': [15609312, 15619291, 15629290, 15639289, 15649290...</msg>
<status status="PASS" starttime="20201112 09:55:32.531" endtime="20201112 09:55:32.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.536" endtime="20201112 09:55:32.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.430" endtime="20201112 09:55:32.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.428" endtime="20201112 09:55:32.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:32.548" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [15609312, 15619291, 15629290, 15639289, 15649290, 15659289, 15669290, 15679289, 15689290, 15699289, 15709290, 15719289, 15729290, 15739289, 15749290, 15759289, 15...</msg>
<status status="PASS" starttime="20201112 09:55:32.544" endtime="20201112 09:55:32.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.556" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:32.554" endtime="20201112 09:55:32.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.560" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:32.558" endtime="20201112 09:55:32.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.549" endtime="20201112 09:55:32.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.570" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:32.568" endtime="20201112 09:55:32.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.574" level="INFO">VALUE: 15599265</msg>
<status status="PASS" starttime="20201112 09:55:32.572" endtime="20201112 09:55:32.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.563" endtime="20201112 09:55:32.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.584" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:32.582" endtime="20201112 09:55:32.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.589" level="INFO">VALUE: [15609312, 15619291, 15629290, 15639289, 15649290, 15659289, 15669290, 15679289, 15689290, 15699289, 15709290, 15719289, 15729290, 15739289, 15749290, 15759289, 15769290, 15779289, 15789290, 15799289, 15809290, 15819289, 15829290, 15839289, 15849290, 15859289, 15869290, 15879289, 15889290, 15899289, 15909290, 15919289, 15929290, 15939289, 15949290, 15959289, 15969290, 15979289, 15989290, 15999289, 16009290, 16019289, 16029290, 16039289, 16049290, 16059289, 16069290, 16079289, 16089290, 16099289, 16109290, 16119289, 16129290, 16139289, 16149290, 16159289, 16169290, 16179289, 16189290, 16199289, 16209290, 16219289, 16229290, 16239289, 16249290, 16259289, 16269290, 16279289, 16289290, 16299289, 16309290, 16319289, 16329290, 16339289, 16349290, 16359289, 16369290, 16379289, 16389290, 16399289, 16409290, 16419289, 16429290, 16439289, 16449290, 16459289, 16469290, 16479289, 16489290, 16499289, 16509290, 16519289, 16529290, 16539289, 16549290, 16559289, 16569290, 16579289, 16589290, 16599289]</msg>
<status status="PASS" starttime="20201112 09:55:32.587" endtime="20201112 09:55:32.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.577" endtime="20201112 09:55:32.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.611" endtime="20201112 09:55:32.902"></status>
</kw>
<msg timestamp="20201112 09:55:32.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032207667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:32.601" endtime="20201112 09:55:32.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032207667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:32.905" endtime="20201112 09:55:32.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.913" endtime="20201112 09:55:32.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.595" endtime="20201112 09:55:32.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.592" endtime="20201112 09:55:32.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:32.940" level="INFO">${RESULT} = {'time': [0.022159819, 0.032207667, 0.042188319, 0.05218825, 0.062188181, 0.072190097, 0.08219, 0.092191931, 0.102191861, 0.112193778, 0.122193681, 0.132195639, 0.142195528, 0.152197458, 0.162197361, ...</msg>
<status status="PASS" starttime="20201112 09:55:32.916" endtime="20201112 09:55:32.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.944" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:32.943" endtime="20201112 09:55:32.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.946" level="INFO">VALUE: 0.022159819</msg>
<status status="PASS" starttime="20201112 09:55:32.945" endtime="20201112 09:55:32.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.941" endtime="20201112 09:55:32.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.952" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:32.951" endtime="20201112 09:55:32.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.954" level="INFO">VALUE: [0.032207667, 0.042188319, 0.05218825, 0.062188181, 0.072190097, 0.08219, 0.092191931, 0.102191861, 0.112193778, 0.122193681, 0.132195639, 0.142195528, 0.152197458, 0.162197361, 0.172199292, 0.182199208, 0.192201139, 0.202201042, 0.212202986, 0.222202889, 0.232204819, 0.242204764, 0.252206667, 0.262206583, 0.2722085, 0.282208431, 0.292210347, 0.30221025, 0.312212208, 0.322212111, 0.332214042, 0.342213958, 0.352215889, 0.362215847, 0.372217722, 0.382217625, 0.392219556, 0.402219472, 0.412221403, 0.422221306, 0.43222325, 0.442223153, 0.452225083, 0.462225056, 0.472226944, 0.482226833, 0.492228778, 0.502228681, 0.512230611, 0.522230542, 0.532232458, 0.542232375, 0.552234333, 0.562234222, 0.572236167, 0.582236056, 0.592237986, 0.602237903, 0.612239847, 0.622239833, 0.632241681, 0.642241583, 0.652243528, 0.662243444, 0.672245361, 0.682245306, 0.692247208, 0.702247125, 0.712249056, 0.722248972, 0.732250917, 0.742250806, 0.75225275, 0.762252653, 0.772254583, 0.7822545, 0.792256431, 0.802256347, 0.812258278, 0.82225825, 0.832260167, 0.842260042, 0.852261972, 0.862261875, 0.872263806, 0.882263708, 0.892265653, 0.902265569, 0.912267486, 0.922267403, 0.932269347, 0.942269264, 0.952271181, 0.962271111, 0.972273028, 0.982272944, 0.992274875, 1.002274792, 1.012276708, 1.022276694] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:32.953" endtime="20201112 09:55:32.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.948" endtime="20201112 09:55:32.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.957" endtime="20201112 09:55:32.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:32.960" endtime="20201112 09:55:32.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.959" endtime="20201112 09:55:32.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.955" endtime="20201112 09:55:32.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.427" endtime="20201112 09:55:32.981"></status>
</kw>
<msg timestamp="20201112 09:55:32.981" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.989" endtime="20201112 09:55:35.082"></status>
</kw>
<msg timestamp="20201112 09:55:35.083" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18153329, 'wakeups': [18163376, 18173354, 18183353, 18193354, 18203353...</msg>
<status status="PASS" starttime="20201112 09:55:32.988" endtime="20201112 09:55:35.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.090" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18153329, 'wakeups': [18163376, 18173354, 18183353, 18193354, 18203353...</msg>
<status status="PASS" starttime="20201112 09:55:35.085" endtime="20201112 09:55:35.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.092" endtime="20201112 09:55:35.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.985" endtime="20201112 09:55:35.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.983" endtime="20201112 09:55:35.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:35.104" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [18163376, 18173354, 18183353, 18193354, 18203353, 18213354, 18223353, 18233354, 18243353, 18253354, 18263353, 18273354, 18283353, 18293354, 18303353, 18313354, 18...</msg>
<status status="PASS" starttime="20201112 09:55:35.100" endtime="20201112 09:55:35.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.112" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:35.110" endtime="20201112 09:55:35.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.117" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:35.115" endtime="20201112 09:55:35.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.106" endtime="20201112 09:55:35.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.129" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:35.126" endtime="20201112 09:55:35.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.133" level="INFO">VALUE: 18153329</msg>
<status status="PASS" starttime="20201112 09:55:35.131" endtime="20201112 09:55:35.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.120" endtime="20201112 09:55:35.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.143" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:35.141" endtime="20201112 09:55:35.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.148" level="INFO">VALUE: [18163376, 18173354, 18183353, 18193354, 18203353, 18213354, 18223353, 18233354, 18243353, 18253354, 18263353, 18273354, 18283353, 18293354, 18303353, 18313354, 18323353, 18333354, 18343353, 18353354, 18363353, 18373354, 18383353, 18393354, 18403353, 18413354, 18423353, 18433354, 18443353, 18453354, 18463353, 18473354, 18483353, 18493354, 18503353, 18513354, 18523353, 18533354, 18543353, 18553354, 18563353, 18573354, 18583353, 18593354, 18603353, 18613354, 18623353, 18633354, 18643353, 18653354, 18663353, 18673354, 18683353, 18693354, 18703353, 18713354, 18723353, 18733354, 18743353, 18753354, 18763353, 18773354, 18783353, 18793354, 18803353, 18813354, 18823353, 18833354, 18843353, 18853354, 18863353, 18873354, 18883353, 18893354, 18903353, 18913354, 18923353, 18933354, 18943353, 18953354, 18963353, 18973354, 18983353, 18993354, 19003353, 19013354, 19023353, 19033354, 19043353, 19053354, 19063353, 19073354, 19083353, 19093354, 19103353, 19113354, 19123353, 19133354, 19143353, 19153354]</msg>
<status status="PASS" starttime="20201112 09:55:35.145" endtime="20201112 09:55:35.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.136" endtime="20201112 09:55:35.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.163" endtime="20201112 09:55:35.458"></status>
</kw>
<msg timestamp="20201112 09:55:35.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018042125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028089847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:35.160" endtime="20201112 09:55:35.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018042125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028089847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:35.462" endtime="20201112 09:55:35.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.469" endtime="20201112 09:55:35.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.154" endtime="20201112 09:55:35.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.151" endtime="20201112 09:55:35.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:35.495" level="INFO">${RESULT} = {'time': [0.018042125, 0.028089847, 0.038069542, 0.048069458, 0.058071375, 0.068071278, 0.078073222, 0.088073139, 0.098075056, 0.108075014, 0.118076903, 0.128076806, 0.138078736, 0.148078639, 0.158080...</msg>
<status status="PASS" starttime="20201112 09:55:35.472" endtime="20201112 09:55:35.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.500" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:35.499" endtime="20201112 09:55:35.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.502" level="INFO">VALUE: 0.018042125</msg>
<status status="PASS" starttime="20201112 09:55:35.501" endtime="20201112 09:55:35.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.496" endtime="20201112 09:55:35.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.508" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:35.506" endtime="20201112 09:55:35.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.510" level="INFO">VALUE: [0.028089847, 0.038069542, 0.048069458, 0.058071375, 0.068071278, 0.078073222, 0.088073139, 0.098075056, 0.108075014, 0.118076903, 0.128076806, 0.138078736, 0.148078639, 0.158080597, 0.1680805, 0.178082417, 0.188082319, 0.198084264, 0.208084194, 0.218086097, 0.228086014, 0.238087958, 0.248087847, 0.258089792, 0.268089694, 0.278091667, 0.288091569, 0.298093486, 0.308093375, 0.318095306, 0.328095208, 0.338097153, 0.348097083, 0.358098986, 0.368098903, 0.378100875, 0.388100736, 0.398102694, 0.408102597, 0.418104514, 0.428104431, 0.438106361, 0.448106319, 0.458108208, 0.468108125, 0.478110042, 0.488109972, 0.498111903, 0.508111792, 0.518113722, 0.528113639, 0.538115583, 0.548115486, 0.558117431, 0.568117333, 0.578119306, 0.588119167, 0.598121097, 0.608121028, 0.618122944, 0.628122903, 0.638124792, 0.648124694, 0.658126625, 0.668126556, 0.678128514, 0.688128389, 0.698130319, 0.708130236, 0.718132167, 0.728132097, 0.738134014, 0.748133917, 0.758135903, 0.76813575, 0.778137694, 0.788137597, 0.798139556, 0.808139514, 0.818141389, 0.828141319, 0.838143264, 0.848143125, 0.858145069, 0.868144986, 0.878146903, 0.888146819, 0.89814875, 0.908148653, 0.918150611, 0.928150514, 0.938152431, 0.948152375, 0.958154292, 0.968154194, 0.978156139, 0.988156111, 0.998157972, 1.008157903, 1.018159806] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:35.509" endtime="20201112 09:55:35.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.503" endtime="20201112 09:55:35.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.513" endtime="20201112 09:55:35.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:35.517" endtime="20201112 09:55:35.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.515" endtime="20201112 09:55:35.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.512" endtime="20201112 09:55:35.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.982" endtime="20201112 09:55:35.537"></status>
</kw>
<msg timestamp="20201112 09:55:35.537" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.546" endtime="20201112 09:55:37.638"></status>
</kw>
<msg timestamp="20201112 09:55:37.640" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20709810, 'wakeups': [20719857, 20729835, 20739834, 20749835, 20759834...</msg>
<status status="PASS" starttime="20201112 09:55:35.544" endtime="20201112 09:55:37.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.645" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20709810, 'wakeups': [20719857, 20729835, 20739834, 20749835, 20759834...</msg>
<status status="PASS" starttime="20201112 09:55:37.642" endtime="20201112 09:55:37.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.648" endtime="20201112 09:55:37.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.542" endtime="20201112 09:55:37.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.540" endtime="20201112 09:55:37.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:37.658" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [20719857, 20729835, 20739834, 20749835, 20759834, 20769835, 20779834, 20789835, 20799834, 20809835, 20819834, 20829835, 20839834, 20849835, 20859834, 20869835, 20...</msg>
<status status="PASS" starttime="20201112 09:55:37.654" endtime="20201112 09:55:37.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.667" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:37.665" endtime="20201112 09:55:37.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.671" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:37.669" endtime="20201112 09:55:37.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.660" endtime="20201112 09:55:37.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.686" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:37.684" endtime="20201112 09:55:37.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.690" level="INFO">VALUE: 20709810</msg>
<status status="PASS" starttime="20201112 09:55:37.688" endtime="20201112 09:55:37.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.679" endtime="20201112 09:55:37.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.700" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:37.698" endtime="20201112 09:55:37.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.705" level="INFO">VALUE: [20719857, 20729835, 20739834, 20749835, 20759834, 20769835, 20779834, 20789835, 20799834, 20809835, 20819834, 20829835, 20839834, 20849835, 20859834, 20869835, 20879834, 20889835, 20899834, 20909835, 20919834, 20929835, 20939834, 20949835, 20959834, 20969835, 20979834, 20989835, 20999834, 21009835, 21019834, 21029835, 21039834, 21049835, 21059834, 21069835, 21079834, 21089835, 21099834, 21109835, 21119834, 21129835, 21139834, 21149835, 21159834, 21169835, 21179834, 21189835, 21199834, 21209835, 21219834, 21229835, 21239834, 21249835, 21259834, 21269835, 21279834, 21289835, 21299834, 21309835, 21319834, 21329835, 21339834, 21349835, 21359834, 21369835, 21379834, 21389835, 21399834, 21409835, 21419834, 21429835, 21439834, 21449835, 21459834, 21469835, 21479834, 21489835, 21499834, 21509835, 21519834, 21529835, 21539834, 21549835, 21559834, 21569835, 21579834, 21589835, 21599834, 21609835, 21619834, 21629835, 21639834, 21649835, 21659834, 21669835, 21679834, 21689835, 21699834, 21709835]</msg>
<status status="PASS" starttime="20201112 09:55:37.703" endtime="20201112 09:55:37.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.693" endtime="20201112 09:55:37.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.716" endtime="20201112 09:55:38.007"></status>
</kw>
<msg timestamp="20201112 09:55:38.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018264514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028312194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:37.713" endtime="20201112 09:55:38.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018264514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028312194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:38.010" endtime="20201112 09:55:38.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.018" endtime="20201112 09:55:38.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.711" endtime="20201112 09:55:38.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.708" endtime="20201112 09:55:38.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:38.044" level="INFO">${RESULT} = {'time': [0.018264514, 0.028312194, 0.038291889, 0.048291806, 0.058293722, 0.068293639, 0.078295597, 0.088295486, 0.098297403, 0.108297319, 0.118299264, 0.128299167, 0.138301083, 0.148300986, 0.158302...</msg>
<status status="PASS" starttime="20201112 09:55:38.021" endtime="20201112 09:55:38.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.049" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:38.048" endtime="20201112 09:55:38.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.051" level="INFO">VALUE: 0.018264514</msg>
<status status="PASS" starttime="20201112 09:55:38.050" endtime="20201112 09:55:38.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.045" endtime="20201112 09:55:38.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.056" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:38.055" endtime="20201112 09:55:38.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.058" level="INFO">VALUE: [0.028312194, 0.038291889, 0.048291806, 0.058293722, 0.068293639, 0.078295597, 0.088295486, 0.098297403, 0.108297319, 0.118299264, 0.128299167, 0.138301083, 0.148300986, 0.158302931, 0.168302833, 0.178304764, 0.188304681, 0.198306625, 0.208306556, 0.218308458, 0.228308361, 0.238310292, 0.248310194, 0.258312139, 0.268312042, 0.278313986, 0.288313875, 0.298315833, 0.308315722, 0.318317667, 0.328317556, 0.3383195, 0.348319417, 0.358321333, 0.368321264, 0.378323181, 0.388323097, 0.398325028, 0.408324986, 0.418326875, 0.428326764, 0.438328708, 0.448328611, 0.458330556, 0.468330458, 0.478332403, 0.488332292, 0.498334236, 0.508334139, 0.518336069, 0.528335986, 0.538337931, 0.548337833, 0.558339764, 0.568339667, 0.578341597, 0.588341528, 0.598343444, 0.608343347, 0.618345292, 0.628345194, 0.638347125, 0.648347042, 0.658348986, 0.668348875, 0.678350861, 0.688350722, 0.698352653, 0.708352583, 0.7183545, 0.728354417, 0.738356347, 0.748356264, 0.758358181, 0.768358111, 0.778360028, 0.788359931, 0.798361889, 0.808361778, 0.818363708, 0.828363625, 0.838365569, 0.848365542, 0.858367431, 0.868367306, 0.878369264, 0.888369153, 0.898371097, 0.908371, 0.918372931, 0.928372847, 0.938374778, 0.948374681, 0.958376611, 0.968376542, 0.978378472, 0.988378403, 0.998380319, 1.008380236, 1.018382139] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:38.057" endtime="20201112 09:55:38.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.052" endtime="20201112 09:55:38.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.062" endtime="20201112 09:55:38.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:38.065" endtime="20201112 09:55:38.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.064" endtime="20201112 09:55:38.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.060" endtime="20201112 09:55:38.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.538" endtime="20201112 09:55:38.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.425" endtime="20201112 09:55:38.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.424" endtime="20201112 09:55:38.086"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:38.089" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.098" endtime="20201112 09:55:40.190"></status>
</kw>
<msg timestamp="20201112 09:55:40.191" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23261871, 'wakeups': [23271928, 23281906, 23291905, 23301905, 23311905...</msg>
<status status="PASS" starttime="20201112 09:55:38.095" endtime="20201112 09:55:40.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.197" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23261871, 'wakeups': [23271928, 23281906, 23291905, 23301905, 23311905...</msg>
<status status="PASS" starttime="20201112 09:55:40.193" endtime="20201112 09:55:40.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.200" endtime="20201112 09:55:40.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.093" endtime="20201112 09:55:40.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.091" endtime="20201112 09:55:40.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:40.210" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [23271928, 23281906, 23291905, 23301905, 23311905, 23321905, 23331905, 23341905, 23351905, 23361905, 23371905, 23381905, 23391905, 23401905, 23411905, 23421905, 23...</msg>
<status status="PASS" starttime="20201112 09:55:40.206" endtime="20201112 09:55:40.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.219" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:40.217" endtime="20201112 09:55:40.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.224" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:40.221" endtime="20201112 09:55:40.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.212" endtime="20201112 09:55:40.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.234" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:40.232" endtime="20201112 09:55:40.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.239" level="INFO">VALUE: 23261871</msg>
<status status="PASS" starttime="20201112 09:55:40.237" endtime="20201112 09:55:40.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.227" endtime="20201112 09:55:40.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.249" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:40.247" endtime="20201112 09:55:40.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.254" level="INFO">VALUE: [23271928, 23281906, 23291905, 23301905, 23311905, 23321905, 23331905, 23341905, 23351905, 23361905, 23371905, 23381905, 23391905, 23401905, 23411905, 23421905, 23431905, 23441905, 23451905, 23461905, 23471905, 23481905, 23491905, 23501905, 23511905, 23521905, 23531905, 23541905, 23551905, 23561905, 23571905, 23581905, 23591905, 23601905, 23611905, 23621905, 23631905, 23641905, 23651905, 23661905, 23671905, 23681905, 23691905, 23701905, 23711905, 23721905, 23731905, 23741905, 23751905, 23761905, 23771905, 23781905, 23791905, 23801905, 23811905, 23821905, 23831905, 23841905, 23851905, 23861905, 23871905, 23881905, 23891905, 23901905, 23911905, 23921905, 23931905, 23941905, 23951905, 23961905, 23971905, 23981905, 23991905, 24001905, 24011905, 24021905, 24031905, 24041905, 24051905, 24061905, 24071905, 24081905, 24091905, 24101905, 24111905, 24121905, 24131905, 24141905, 24151905, 24161905, 24171905, 24181905, 24191905, 24201905, 24211905, 24221905, 24231905, 24241905, 24251905, 24261905]</msg>
<status status="PASS" starttime="20201112 09:55:40.252" endtime="20201112 09:55:40.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.242" endtime="20201112 09:55:40.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.267" endtime="20201112 09:55:40.559"></status>
</kw>
<msg timestamp="20201112 09:55:40.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031876639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:40.266" endtime="20201112 09:55:40.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031876639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:40.563" endtime="20201112 09:55:40.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.570" endtime="20201112 09:55:40.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.262" endtime="20201112 09:55:40.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.258" endtime="20201112 09:55:40.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:40.597" level="INFO">${RESULT} = {'time': [0.021818444, 0.031876639, 0.041855694, 0.051855611, 0.061856542, 0.071857458, 0.081858403, 0.091859292, 0.101860236, 0.111861139, 0.121862056, 0.131862972, 0.141863931, 0.151864806, 0.161865...</msg>
<status status="PASS" starttime="20201112 09:55:40.574" endtime="20201112 09:55:40.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.601" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:40.600" endtime="20201112 09:55:40.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.603" level="INFO">VALUE: 0.021818444</msg>
<status status="PASS" starttime="20201112 09:55:40.602" endtime="20201112 09:55:40.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.598" endtime="20201112 09:55:40.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.609" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:40.608" endtime="20201112 09:55:40.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.611" level="INFO">VALUE: [0.031876639, 0.041855694, 0.051855611, 0.061856542, 0.071857458, 0.081858403, 0.091859292, 0.101860236, 0.111861139, 0.121862056, 0.131862972, 0.141863931, 0.151864806, 0.161865819, 0.171866653, 0.181867583, 0.191868486, 0.201869431, 0.211870333, 0.221871278, 0.231872167, 0.241873097, 0.251874069, 0.261874944, 0.271875847, 0.281876833, 0.29187775, 0.301878625, 0.311879597, 0.321880472, 0.331881389, 0.341882319, 0.351883222, 0.361884167, 0.371885056, 0.381886, 0.391886903, 0.401887847, 0.411888764, 0.421889681, 0.431890583, 0.441891514, 0.451892444, 0.461893361, 0.471894278, 0.481895208, 0.491896111, 0.501897097, 0.511897972, 0.521898931, 0.531899792, 0.541900736, 0.551901653, 0.561902625, 0.5719035, 0.581904486, 0.591905389, 0.601906264, 0.611907181, 0.621908097, 0.631909014, 0.641909944, 0.651910847, 0.661911861, 0.671912708, 0.681913625, 0.691914542, 0.701915472, 0.711916389, 0.721917361, 0.73191825, 0.741919181, 0.751920083, 0.761921, 0.771921917, 0.781922847, 0.79192375, 0.801924694, 0.811925611, 0.821926542, 0.831927458, 0.841928389, 0.851929278, 0.861930236, 0.871931139, 0.881932083, 0.891932972, 0.901933931, 0.911934819, 0.92193575, 0.931936653, 0.941937597, 0.951938514, 0.961939431, 0.971940361, 0.981941278, 0.991942181, 1.001943125, 1.011944028, 1.021944958] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:40.610" endtime="20201112 09:55:40.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.605" endtime="20201112 09:55:40.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.614" endtime="20201112 09:55:40.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:40.617" endtime="20201112 09:55:40.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.616" endtime="20201112 09:55:40.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.612" endtime="20201112 09:55:40.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.089" endtime="20201112 09:55:40.638"></status>
</kw>
<msg timestamp="20201112 09:55:40.638" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.646" endtime="20201112 09:55:42.739"></status>
</kw>
<msg timestamp="20201112 09:55:42.741" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25810603, 'wakeups': [25820660, 25830638, 25840637, 25850637, 25860637...</msg>
<status status="PASS" starttime="20201112 09:55:40.644" endtime="20201112 09:55:42.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.746" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25810603, 'wakeups': [25820660, 25830638, 25840637, 25850637, 25860637...</msg>
<status status="PASS" starttime="20201112 09:55:42.743" endtime="20201112 09:55:42.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.749" endtime="20201112 09:55:42.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.642" endtime="20201112 09:55:42.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.640" endtime="20201112 09:55:42.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:42.760" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [25820660, 25830638, 25840637, 25850637, 25860637, 25870637, 25880637, 25890637, 25900637, 25910637, 25920637, 25930637, 25940637, 25950637, 25960637, 25970637, 25...</msg>
<status status="PASS" starttime="20201112 09:55:42.756" endtime="20201112 09:55:42.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.768" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:42.766" endtime="20201112 09:55:42.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.772" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:42.770" endtime="20201112 09:55:42.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.761" endtime="20201112 09:55:42.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.782" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:42.780" endtime="20201112 09:55:42.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.789" level="INFO">VALUE: 25810603</msg>
<status status="PASS" starttime="20201112 09:55:42.787" endtime="20201112 09:55:42.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.775" endtime="20201112 09:55:42.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.799" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:42.797" endtime="20201112 09:55:42.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.803" level="INFO">VALUE: [25820660, 25830638, 25840637, 25850637, 25860637, 25870637, 25880637, 25890637, 25900637, 25910637, 25920637, 25930637, 25940637, 25950637, 25960637, 25970637, 25980637, 25990637, 26000637, 26010637, 26020637, 26030637, 26040637, 26050637, 26060637, 26070637, 26080637, 26090637, 26100637, 26110637, 26120637, 26130637, 26140637, 26150637, 26160637, 26170637, 26180637, 26190637, 26200637, 26210637, 26220637, 26230637, 26240637, 26250637, 26260637, 26270637, 26280637, 26290637, 26300637, 26310637, 26320637, 26330637, 26340637, 26350637, 26360637, 26370637, 26380637, 26390637, 26400637, 26410637, 26420637, 26430637, 26440637, 26450637, 26460637, 26470637, 26480637, 26490637, 26500637, 26510637, 26520637, 26530637, 26540637, 26550637, 26560637, 26570637, 26580637, 26590637, 26600637, 26610637, 26620637, 26630637, 26640637, 26650637, 26660637, 26670637, 26680637, 26690637, 26700637, 26710637, 26720637, 26730637, 26740637, 26750637, 26760637, 26770637, 26780637, 26790637, 26800637, 26810637]</msg>
<status status="PASS" starttime="20201112 09:55:42.801" endtime="20201112 09:55:42.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.792" endtime="20201112 09:55:42.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.818" endtime="20201112 09:55:43.114"></status>
</kw>
<msg timestamp="20201112 09:55:43.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018503, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028561264, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:42.815" endtime="20201112 09:55:43.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018503, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028561264, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:43.117" endtime="20201112 09:55:43.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.125" endtime="20201112 09:55:43.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.810" endtime="20201112 09:55:43.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.806" endtime="20201112 09:55:43.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:43.155" level="INFO">${RESULT} = {'time': [0.018503, 0.028561264, 0.038540319, 0.048540278, 0.058541194, 0.068542097, 0.078543028, 0.088543917, 0.098544875, 0.108545778, 0.118546694, 0.128547597, 0.138548528, 0.148549444, 0.158550389...</msg>
<status status="PASS" starttime="20201112 09:55:43.132" endtime="20201112 09:55:43.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.160" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:43.159" endtime="20201112 09:55:43.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.162" level="INFO">VALUE: 0.018503</msg>
<status status="PASS" starttime="20201112 09:55:43.161" endtime="20201112 09:55:43.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.156" endtime="20201112 09:55:43.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.167" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:43.166" endtime="20201112 09:55:43.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.170" level="INFO">VALUE: [0.028561264, 0.038540319, 0.048540278, 0.058541194, 0.068542097, 0.078543028, 0.088543917, 0.098544875, 0.108545778, 0.118546694, 0.128547597, 0.138548528, 0.148549444, 0.158550389, 0.168551278, 0.178552236, 0.188553125, 0.198554056, 0.208554958, 0.218555889, 0.228556819, 0.23855775, 0.248558639, 0.258559569, 0.268560486, 0.278561431, 0.288562333, 0.29856325, 0.308564167, 0.318565097, 0.328566, 0.338566944, 0.348567847, 0.358568792, 0.368569694, 0.378570694, 0.388571528, 0.398572472, 0.408573389, 0.418574306, 0.428575222, 0.438576139, 0.448577069, 0.458578, 0.468578889, 0.478579833, 0.488580736, 0.498581736, 0.508582625, 0.518583514, 0.528584417, 0.538585361, 0.548586264, 0.558587194, 0.568588125, 0.578589042, 0.588589944, 0.598590903, 0.608591792, 0.618592722, 0.628593639, 0.638594569, 0.648595472, 0.658596417, 0.668597347, 0.678598264, 0.688599181, 0.698600097, 0.708601014, 0.718602014, 0.728602847, 0.738603792, 0.748604722, 0.758605653, 0.768606542, 0.778607472, 0.788608375, 0.798609306, 0.808610278, 0.818611153, 0.828612056, 0.838613028, 0.848613944, 0.858614847, 0.86861575, 0.87861675, 0.888617583, 0.898618556, 0.908619458, 0.918620375, 0.928621278, 0.938622208, 0.948623167, 0.958624056, 0.968624972, 0.978625931, 0.988626806, 0.99862775, 1.008628653, 1.018629583] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:43.169" endtime="20201112 09:55:43.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.163" endtime="20201112 09:55:43.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.173" endtime="20201112 09:55:43.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:43.176" endtime="20201112 09:55:43.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.175" endtime="20201112 09:55:43.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.171" endtime="20201112 09:55:43.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.639" endtime="20201112 09:55:43.197"></status>
</kw>
<msg timestamp="20201112 09:55:43.197" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.205" endtime="20201112 09:55:45.297"></status>
</kw>
<msg timestamp="20201112 09:55:45.299" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28369371, 'wakeups': [28379429, 28389406, 28399405, 28409405, 28419405...</msg>
<status status="PASS" starttime="20201112 09:55:43.204" endtime="20201112 09:55:45.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.305" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28369371, 'wakeups': [28379429, 28389406, 28399405, 28409405, 28419405...</msg>
<status status="PASS" starttime="20201112 09:55:45.301" endtime="20201112 09:55:45.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.307" endtime="20201112 09:55:45.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.201" endtime="20201112 09:55:45.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.199" endtime="20201112 09:55:45.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:45.317" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [28379429, 28389406, 28399405, 28409405, 28419405, 28429405, 28439405, 28449405, 28459405, 28469405, 28479405, 28489405, 28499405, 28509405, 28519405, 28529405, 28...</msg>
<status status="PASS" starttime="20201112 09:55:45.314" endtime="20201112 09:55:45.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.327" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:45.325" endtime="20201112 09:55:45.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.331" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:45.329" endtime="20201112 09:55:45.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.319" endtime="20201112 09:55:45.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.342" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:45.340" endtime="20201112 09:55:45.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.346" level="INFO">VALUE: 28369371</msg>
<status status="PASS" starttime="20201112 09:55:45.344" endtime="20201112 09:55:45.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.334" endtime="20201112 09:55:45.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.357" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:45.355" endtime="20201112 09:55:45.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.362" level="INFO">VALUE: [28379429, 28389406, 28399405, 28409405, 28419405, 28429405, 28439405, 28449405, 28459405, 28469405, 28479405, 28489405, 28499405, 28509405, 28519405, 28529405, 28539405, 28549405, 28559405, 28569405, 28579405, 28589405, 28599405, 28609405, 28619405, 28629405, 28639405, 28649405, 28659405, 28669405, 28679405, 28689405, 28699405, 28709405, 28719405, 28729405, 28739405, 28749405, 28759405, 28769405, 28779405, 28789405, 28799405, 28809405, 28819405, 28829405, 28839405, 28849405, 28859405, 28869405, 28879405, 28889405, 28899405, 28909405, 28919405, 28929405, 28939405, 28949405, 28959405, 28969405, 28979405, 28989405, 28999405, 29009405, 29019405, 29029405, 29039405, 29049405, 29059405, 29069405, 29079405, 29089405, 29099405, 29109405, 29119405, 29129405, 29139405, 29149405, 29159405, 29169405, 29179405, 29189405, 29199405, 29209405, 29219405, 29229405, 29239405, 29249405, 29259405, 29269405, 29279405, 29289405, 29299405, 29309405, 29319405, 29329405, 29339405, 29349405, 29359405, 29369405]</msg>
<status status="PASS" starttime="20201112 09:55:45.359" endtime="20201112 09:55:45.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.350" endtime="20201112 09:55:45.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.377" endtime="20201112 09:55:45.672"></status>
</kw>
<msg timestamp="20201112 09:55:45.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018052889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028111306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:45.374" endtime="20201112 09:55:45.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018052889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028111306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:45.676" endtime="20201112 09:55:45.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.684" endtime="20201112 09:55:45.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.369" endtime="20201112 09:55:45.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.365" endtime="20201112 09:55:45.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:45.709" level="INFO">${RESULT} = {'time': [0.018052889, 0.028111306, 0.038089375, 0.048089361, 0.058090208, 0.068091139, 0.078092028, 0.088092986, 0.098093861, 0.108094819, 0.118095722, 0.128096639, 0.138097556, 0.148098486, 0.158099...</msg>
<status status="PASS" starttime="20201112 09:55:45.687" endtime="20201112 09:55:45.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.714" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:45.713" endtime="20201112 09:55:45.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.716" level="INFO">VALUE: 0.018052889</msg>
<status status="PASS" starttime="20201112 09:55:45.715" endtime="20201112 09:55:45.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.710" endtime="20201112 09:55:45.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.721" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:45.720" endtime="20201112 09:55:45.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.724" level="INFO">VALUE: [0.028111306, 0.038089375, 0.048089361, 0.058090208, 0.068091139, 0.078092028, 0.088092986, 0.098093861, 0.108094819, 0.118095722, 0.128096639, 0.138097556, 0.148098486, 0.158099389, 0.168100333, 0.178101222, 0.188102181, 0.198103083, 0.208104014, 0.218104903, 0.228105847, 0.23810675, 0.248107694, 0.258108625, 0.268109528, 0.278110431, 0.288111361, 0.298112278, 0.30811325, 0.318114111, 0.328115042, 0.338116014, 0.348116903, 0.358117792, 0.368118736, 0.378119639, 0.388120569, 0.398121514, 0.408122458, 0.418123319, 0.42812425, 0.438125181, 0.448126097, 0.458127014, 0.468127944, 0.478128861, 0.488129792, 0.498130694, 0.508131625, 0.518132542, 0.528133486, 0.538134389, 0.548135306, 0.558136278, 0.568137222, 0.578138111, 0.588139014, 0.598139903, 0.608140833, 0.61814175, 0.628142681, 0.638143597, 0.648144542, 0.658145444, 0.668146431, 0.678147278, 0.688148208, 0.698149125, 0.708150056, 0.718151014, 0.728151931, 0.738152806, 0.74815375, 0.758154694, 0.768155625, 0.7781565, 0.788157444, 0.798158333, 0.808159292, 0.818160181, 0.828161111, 0.838162028, 0.848163, 0.858163861, 0.868164847, 0.878165722, 0.888166639, 0.898167556, 0.9081685, 0.918169403, 0.928170333, 0.938171236, 0.948172194, 0.958173097, 0.968174042, 0.978174931, 0.988175861, 0.998176778, 1.008177722, 1.018178611] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:45.722" endtime="20201112 09:55:45.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.717" endtime="20201112 09:55:45.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.727" endtime="20201112 09:55:45.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:45.730" endtime="20201112 09:55:45.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.729" endtime="20201112 09:55:45.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.725" endtime="20201112 09:55:45.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.198" endtime="20201112 09:55:45.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.087" endtime="20201112 09:55:45.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.086" endtime="20201112 09:55:45.751"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:45.754" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.763" endtime="20201112 09:55:47.855"></status>
</kw>
<msg timestamp="20201112 09:55:47.857" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 30926921, 'wakeups': [30936988, 30946965, 30956966, 30966966, 30976966...</msg>
<status status="PASS" starttime="20201112 09:55:45.761" endtime="20201112 09:55:47.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.862" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 30926921, 'wakeups': [30936988, 30946965, 30956966, 30966966, 30976966...</msg>
<status status="PASS" starttime="20201112 09:55:47.859" endtime="20201112 09:55:47.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.865" endtime="20201112 09:55:47.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.758" endtime="20201112 09:55:47.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.756" endtime="20201112 09:55:47.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:47.875" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [30936988, 30946965, 30956966, 30966966, 30976966, 30986966, 30996966, 31006966, 31016966, 31026966, 31036966, 31046966, 31056966, 31066966, 31076966, 31086966, 31...</msg>
<status status="PASS" starttime="20201112 09:55:47.872" endtime="20201112 09:55:47.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.884" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:47.882" endtime="20201112 09:55:47.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.888" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:47.886" endtime="20201112 09:55:47.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.877" endtime="20201112 09:55:47.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.898" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:47.896" endtime="20201112 09:55:47.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.902" level="INFO">VALUE: 30926921</msg>
<status status="PASS" starttime="20201112 09:55:47.900" endtime="20201112 09:55:47.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.891" endtime="20201112 09:55:47.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.913" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:47.911" endtime="20201112 09:55:47.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.917" level="INFO">VALUE: [30936988, 30946965, 30956966, 30966966, 30976966, 30986966, 30996966, 31006966, 31016966, 31026966, 31036966, 31046966, 31056966, 31066966, 31076966, 31086966, 31096966, 31106966, 31116966, 31126966, 31136966, 31146966, 31156966, 31166966, 31176966, 31186966, 31196966, 31206966, 31216966, 31226966, 31236966, 31246966, 31256966, 31266966, 31276966, 31286966, 31296966, 31306966, 31316966, 31326966, 31336966, 31346966, 31356966, 31366966, 31376966, 31386966, 31396966, 31406966, 31416966, 31426966, 31436966, 31446966, 31456966, 31466966, 31476966, 31486966, 31496966, 31506966, 31516966, 31526966, 31536966, 31546966, 31556966, 31566966, 31576966, 31586966, 31596966, 31606966, 31616966, 31626966, 31636966, 31646966, 31656966, 31666966, 31676966, 31686966, 31696966, 31706966, 31716966, 31726966, 31736966, 31746966, 31756966, 31766966, 31776966, 31786966, 31796966, 31806966, 31816966, 31826966, 31836966, 31846966, 31856966, 31866966, 31876966, 31886966, 31896966, 31906966, 31916966, 31926966]</msg>
<status status="PASS" starttime="20201112 09:55:47.915" endtime="20201112 09:55:47.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.905" endtime="20201112 09:55:47.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.933" endtime="20201112 09:55:48.231"></status>
</kw>
<msg timestamp="20201112 09:55:48.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031854111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:47.929" endtime="20201112 09:55:48.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031854111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:48.234" endtime="20201112 09:55:48.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.242" endtime="20201112 09:55:48.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.924" endtime="20201112 09:55:48.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.921" endtime="20201112 09:55:48.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:48.269" level="INFO">${RESULT} = {'time': [0.021785069, 0.031854111, 0.041832014, 0.051834, 0.061834861, 0.071835792, 0.081836708, 0.091837667, 0.101838556, 0.1118395, 0.121840375, 0.131841306, 0.141842222, 0.151843153, 0.161844056, ...</msg>
<status status="PASS" starttime="20201112 09:55:48.245" endtime="20201112 09:55:48.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.273" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:48.272" endtime="20201112 09:55:48.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.276" level="INFO">VALUE: 0.021785069</msg>
<status status="PASS" starttime="20201112 09:55:48.275" endtime="20201112 09:55:48.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.270" endtime="20201112 09:55:48.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.281" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:48.280" endtime="20201112 09:55:48.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.283" level="INFO">VALUE: [0.031854111, 0.041832014, 0.051834, 0.061834861, 0.071835792, 0.081836708, 0.091837667, 0.101838556, 0.1118395, 0.121840375, 0.131841306, 0.141842222, 0.151843153, 0.161844056, 0.171845, 0.181845917, 0.191846875, 0.20184775, 0.211848694, 0.221849583, 0.231850514, 0.241851417, 0.251852347, 0.261853264, 0.271854181, 0.281855111, 0.291856028, 0.301856944, 0.311857861, 0.321858806, 0.331859708, 0.341860639, 0.351861556, 0.361862486, 0.371863389, 0.381864306, 0.39186525, 0.401866153, 0.411867125, 0.421868, 0.431868931, 0.441869833, 0.451870764, 0.461871694, 0.471872597, 0.481873528, 0.491874514, 0.501875403, 0.511876278, 0.521877208, 0.531878167, 0.541879042, 0.551879986, 0.561880903, 0.571881806, 0.581882736, 0.591883653, 0.601884583, 0.611885514, 0.621886417, 0.631887347, 0.641888264, 0.651889181, 0.661890111, 0.671891028, 0.681891958, 0.691892875, 0.701893792, 0.711894722, 0.721895639, 0.731896556, 0.741897472, 0.751898458, 0.761899319, 0.77190025, 0.781901167, 0.791902083, 0.801903014, 0.811903931, 0.821904847, 0.831905792, 0.841906694, 0.851907611, 0.861908542, 0.871909472, 0.881910375, 0.891911319, 0.901912236, 0.911913139, 0.921914083, 0.931915069, 0.941915903, 0.951916847, 0.96191775, 0.971918708, 0.981919597, 0.991920528, 1.001921444, 1.011922403, 1.021923292] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:48.282" endtime="20201112 09:55:48.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.277" endtime="20201112 09:55:48.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.286" endtime="20201112 09:55:48.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:48.294" endtime="20201112 09:55:48.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.292" endtime="20201112 09:55:48.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.284" endtime="20201112 09:55:48.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.754" endtime="20201112 09:55:48.314"></status>
</kw>
<msg timestamp="20201112 09:55:48.315" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.323" endtime="20201112 09:55:50.415"></status>
</kw>
<msg timestamp="20201112 09:55:50.416" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33486650, 'wakeups': [33496717, 33506694, 33516695, 33526695, 33536695...</msg>
<status status="PASS" starttime="20201112 09:55:48.321" endtime="20201112 09:55:50.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.422" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33486650, 'wakeups': [33496717, 33506694, 33516695, 33526695, 33536695...</msg>
<status status="PASS" starttime="20201112 09:55:50.418" endtime="20201112 09:55:50.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.424" endtime="20201112 09:55:50.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.318" endtime="20201112 09:55:50.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.317" endtime="20201112 09:55:50.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:50.435" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [33496717, 33506694, 33516695, 33526695, 33536695, 33546695, 33556695, 33566695, 33576695, 33586695, 33596695, 33606695, 33616695, 33626695, 33636695, 33646695, 33...</msg>
<status status="PASS" starttime="20201112 09:55:50.431" endtime="20201112 09:55:50.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.443" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:50.441" endtime="20201112 09:55:50.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.448" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:50.446" endtime="20201112 09:55:50.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.437" endtime="20201112 09:55:50.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.461" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:50.458" endtime="20201112 09:55:50.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.465" level="INFO">VALUE: 33486650</msg>
<status status="PASS" starttime="20201112 09:55:50.463" endtime="20201112 09:55:50.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.451" endtime="20201112 09:55:50.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.476" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:50.474" endtime="20201112 09:55:50.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.481" level="INFO">VALUE: [33496717, 33506694, 33516695, 33526695, 33536695, 33546695, 33556695, 33566695, 33576695, 33586695, 33596695, 33606695, 33616695, 33626695, 33636695, 33646695, 33656695, 33666695, 33676695, 33686695, 33696695, 33706695, 33716695, 33726695, 33736695, 33746695, 33756695, 33766695, 33776695, 33786695, 33796695, 33806695, 33816695, 33826695, 33836695, 33846695, 33856695, 33866695, 33876695, 33886695, 33896695, 33906695, 33916695, 33926695, 33936695, 33946695, 33956695, 33966695, 33976695, 33986695, 33996695, 34006695, 34016695, 34026695, 34036695, 34046695, 34056695, 34066695, 34076695, 34086695, 34096695, 34106695, 34116695, 34126695, 34136695, 34146695, 34156695, 34166695, 34176695, 34186695, 34196695, 34206695, 34216695, 34226695, 34236695, 34246695, 34256695, 34266695, 34276695, 34286695, 34296695, 34306695, 34316695, 34326695, 34336695, 34346695, 34356695, 34366695, 34376695, 34386695, 34396695, 34406695, 34416695, 34426695, 34436695, 34446695, 34456695, 34466695, 34476695, 34486695]</msg>
<status status="PASS" starttime="20201112 09:55:50.478" endtime="20201112 09:55:50.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.469" endtime="20201112 09:55:50.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.497" endtime="20201112 09:55:50.794"></status>
</kw>
<msg timestamp="20201112 09:55:50.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018083611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028152556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:50.493" endtime="20201112 09:55:50.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018083611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028152556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:50.798" endtime="20201112 09:55:50.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.805" endtime="20201112 09:55:50.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.487" endtime="20201112 09:55:50.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.484" endtime="20201112 09:55:50.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:50.831" level="INFO">${RESULT} = {'time': [0.018083611, 0.028152556, 0.038130472, 0.048132431, 0.058133319, 0.068134236, 0.078135181, 0.088136083, 0.098137, 0.108137917, 0.118138889, 0.128139764, 0.138140681, 0.148141597, 0.158142569...</msg>
<status status="PASS" starttime="20201112 09:55:50.808" endtime="20201112 09:55:50.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.835" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:50.834" endtime="20201112 09:55:50.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.837" level="INFO">VALUE: 0.018083611</msg>
<status status="PASS" starttime="20201112 09:55:50.836" endtime="20201112 09:55:50.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.832" endtime="20201112 09:55:50.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.843" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:50.842" endtime="20201112 09:55:50.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.846" level="INFO">VALUE: [0.028152556, 0.038130472, 0.048132431, 0.058133319, 0.068134236, 0.078135181, 0.088136083, 0.098137, 0.108137917, 0.118138889, 0.128139764, 0.138140681, 0.148141597, 0.158142569, 0.168143444, 0.178144375, 0.188145292, 0.198146194, 0.208147139, 0.218148042, 0.228148958, 0.238149875, 0.248150819, 0.258151722, 0.268152722, 0.278153569, 0.288154486, 0.298155403, 0.308156319, 0.31815725, 0.328158181, 0.338159153, 0.348160014, 0.358160931, 0.368161875, 0.378162764, 0.388163681, 0.398164667, 0.408165528, 0.418166458, 0.428167375, 0.438168292, 0.448169222, 0.458170139, 0.468171069, 0.478171972, 0.488172889, 0.498173819, 0.508174736, 0.518175667, 0.528176569, 0.5381775, 0.548178431, 0.558179333, 0.568180319, 0.578181181, 0.588182097, 0.598183042, 0.608183944, 0.618184861, 0.628185819, 0.638186708, 0.648187625, 0.658188556, 0.668189472, 0.678190403, 0.688191333, 0.698192236, 0.708193167, 0.718194139, 0.728195, 0.738195917, 0.748196861, 0.758197764, 0.768198681, 0.778199611, 0.788200542, 0.798201458, 0.808202375, 0.818203306, 0.828204278, 0.838205181, 0.848206056, 0.858206986, 0.868207903, 0.878208819, 0.88820975, 0.898210667, 0.908211597, 0.918212514, 0.928213431, 0.938214347, 0.948215278, 0.958216222, 0.968217111, 0.978218069, 0.988218958, 0.998219889, 1.008220819, 1.018221736] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:50.845" endtime="20201112 09:55:50.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.839" endtime="20201112 09:55:50.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.849" endtime="20201112 09:55:50.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:50.852" endtime="20201112 09:55:50.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.851" endtime="20201112 09:55:50.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.847" endtime="20201112 09:55:50.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.315" endtime="20201112 09:55:50.873"></status>
</kw>
<msg timestamp="20201112 09:55:50.873" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.881" endtime="20201112 09:55:52.974"></status>
</kw>
<msg timestamp="20201112 09:55:52.975" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36045069, 'wakeups': [36055136, 36065113, 36075114, 36085114, 36095114...</msg>
<status status="PASS" starttime="20201112 09:55:50.879" endtime="20201112 09:55:52.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.982" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36045069, 'wakeups': [36055136, 36065113, 36075114, 36085114, 36095114...</msg>
<status status="PASS" starttime="20201112 09:55:52.977" endtime="20201112 09:55:52.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.984" endtime="20201112 09:55:52.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.877" endtime="20201112 09:55:52.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.875" endtime="20201112 09:55:52.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:52.995" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [36055136, 36065113, 36075114, 36085114, 36095114, 36105114, 36115114, 36125114, 36135114, 36145114, 36155114, 36165114, 36175114, 36185114, 36195114, 36205114, 36...</msg>
<status status="PASS" starttime="20201112 09:55:52.991" endtime="20201112 09:55:52.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.003" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:53.001" endtime="20201112 09:55:53.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.008" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:53.006" endtime="20201112 09:55:53.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.997" endtime="20201112 09:55:53.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.018" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:53.016" endtime="20201112 09:55:53.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.022" level="INFO">VALUE: 36045069</msg>
<status status="PASS" starttime="20201112 09:55:53.020" endtime="20201112 09:55:53.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.011" endtime="20201112 09:55:53.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.032" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:53.030" endtime="20201112 09:55:53.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.037" level="INFO">VALUE: [36055136, 36065113, 36075114, 36085114, 36095114, 36105114, 36115114, 36125114, 36135114, 36145114, 36155114, 36165114, 36175114, 36185114, 36195114, 36205114, 36215114, 36225114, 36235114, 36245114, 36255114, 36265114, 36275114, 36285114, 36295114, 36305114, 36315114, 36325114, 36335114, 36345114, 36355114, 36365114, 36375114, 36385114, 36395114, 36405114, 36415114, 36425114, 36435114, 36445114, 36455114, 36465114, 36475114, 36485114, 36495114, 36505114, 36515114, 36525114, 36535114, 36545114, 36555114, 36565114, 36575114, 36585114, 36595114, 36605114, 36615114, 36625114, 36635114, 36645114, 36655114, 36665114, 36675114, 36685114, 36695114, 36705114, 36715114, 36725114, 36735114, 36745114, 36755114, 36765114, 36775114, 36785114, 36795114, 36805114, 36815114, 36825114, 36835114, 36845114, 36855114, 36865114, 36875114, 36885114, 36895114, 36905114, 36915114, 36925114, 36935114, 36945114, 36955114, 36965114, 36975114, 36985114, 36995114, 37005114, 37015114, 37025114, 37035114, 37045114]</msg>
<status status="PASS" starttime="20201112 09:55:53.034" endtime="20201112 09:55:53.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.025" endtime="20201112 09:55:53.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.052" endtime="20201112 09:55:53.351"></status>
</kw>
<msg timestamp="20201112 09:55:53.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018077653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028145903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:53.049" endtime="20201112 09:55:53.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018077653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028145903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:53.355" endtime="20201112 09:55:53.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.362" endtime="20201112 09:55:53.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.043" endtime="20201112 09:55:53.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.040" endtime="20201112 09:55:53.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:53.388" level="INFO">${RESULT} = {'time': [0.018077653, 0.028145903, 0.038124167, 0.048126083, 0.058127014, 0.068127931, 0.078128889, 0.088129792, 0.098130694, 0.108131611, 0.118132569, 0.128133472, 0.138134375, 0.148135292, 0.158136...</msg>
<status status="PASS" starttime="20201112 09:55:53.366" endtime="20201112 09:55:53.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.393" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:53.392" endtime="20201112 09:55:53.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.395" level="INFO">VALUE: 0.018077653</msg>
<status status="PASS" starttime="20201112 09:55:53.394" endtime="20201112 09:55:53.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.389" endtime="20201112 09:55:53.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.400" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:53.399" endtime="20201112 09:55:53.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.402" level="INFO">VALUE: [0.028145903, 0.038124167, 0.048126083, 0.058127014, 0.068127931, 0.078128889, 0.088129792, 0.098130694, 0.108131611, 0.118132569, 0.128133472, 0.138134375, 0.148135292, 0.158136236, 0.168137139, 0.178138056, 0.188139, 0.198139903, 0.208140833, 0.218141736, 0.228142667, 0.238143583, 0.248144514, 0.258145444, 0.268146347, 0.278147264, 0.288148194, 0.298149111, 0.308150028, 0.318151028, 0.328151889, 0.338152833, 0.348153736, 0.358154639, 0.368155556, 0.378156472, 0.388157403, 0.398158319, 0.40815925, 0.418160167, 0.428161083, 0.438162, 0.448162958, 0.458163875, 0.468164792, 0.478165694, 0.488166625, 0.498167556, 0.508168472, 0.518169389, 0.528170306, 0.538171236, 0.548172153, 0.558173069, 0.568173986, 0.578174931, 0.588175847, 0.59817675, 0.608177681, 0.618178597, 0.628179514, 0.638180444, 0.648181361, 0.658182306, 0.668183208, 0.678184139, 0.688185056, 0.698185972, 0.708186889, 0.718187819, 0.728188736, 0.738189667, 0.748190583, 0.758191514, 0.768192431, 0.778193347, 0.788194333, 0.798195194, 0.808196111, 0.818197042, 0.828197958, 0.838198875, 0.848199806, 0.858200764, 0.868201653, 0.878202569, 0.8882035, 0.898204417, 0.908205347, 0.918206264, 0.928207194, 0.938208097, 0.948209042, 0.958209944, 0.968210875, 0.978211792, 0.988212736, 0.998213639, 1.008214611, 1.018215528] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:53.401" endtime="20201112 09:55:53.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.396" endtime="20201112 09:55:53.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.405" endtime="20201112 09:55:53.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:53.409" endtime="20201112 09:55:53.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.407" endtime="20201112 09:55:53.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.404" endtime="20201112 09:55:53.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.874" endtime="20201112 09:55:53.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.752" endtime="20201112 09:55:53.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.752" endtime="20201112 09:55:53.430"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:53.432" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.442" endtime="20201112 09:55:55.535"></status>
</kw>
<msg timestamp="20201112 09:55:55.536" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38606093, 'wakeups': [38616173, 38626150, 38636150, 38646150, 38656150...</msg>
<status status="PASS" starttime="20201112 09:55:53.440" endtime="20201112 09:55:55.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.542" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38606093, 'wakeups': [38616173, 38626150, 38636150, 38646150, 38656150...</msg>
<status status="PASS" starttime="20201112 09:55:55.538" endtime="20201112 09:55:55.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.544" endtime="20201112 09:55:55.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.436" endtime="20201112 09:55:55.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.434" endtime="20201112 09:55:55.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:55.556" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [38616173, 38626150, 38636150, 38646150, 38656150, 38666150, 38676150, 38686150, 38696150, 38706150, 38716150, 38726150, 38736150, 38746150, 38756150, 38766150, 38...</msg>
<status status="PASS" starttime="20201112 09:55:55.551" endtime="20201112 09:55:55.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.565" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:55.562" endtime="20201112 09:55:55.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.570" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:55.568" endtime="20201112 09:55:55.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.557" endtime="20201112 09:55:55.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.579" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:55:55.578" endtime="20201112 09:55:55.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.581" level="INFO">VALUE: 38606093</msg>
<status status="PASS" starttime="20201112 09:55:55.580" endtime="20201112 09:55:55.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.573" endtime="20201112 09:55:55.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.586" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:55.585" endtime="20201112 09:55:55.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.588" level="INFO">VALUE: [38616173, 38626150, 38636150, 38646150, 38656150, 38666150, 38676150, 38686150, 38696150, 38706150, 38716150, 38726150, 38736150, 38746150, 38756150, 38766150, 38776150, 38786150, 38796150, 38806150, 38816150, 38826150, 38836150, 38846150, 38856150, 38866150, 38876150, 38886150, 38896150, 38906150, 38916150, 38926150, 38936150, 38946150, 38956150, 38966150, 38976150, 38986150, 38996150, 39006150, 39016150, 39026150, 39036150, 39046150, 39056150, 39066150, 39076150, 39086150, 39096150, 39106150, 39116150, 39126150, 39136150, 39146150, 39156150, 39166150, 39176150, 39186150, 39196150, 39206150, 39216150, 39226150, 39236150, 39246150, 39256150, 39266150, 39276150, 39286150, 39296150, 39306150, 39316150, 39326150, 39336150, 39346150, 39356150, 39366150, 39376150, 39386150, 39396150, 39406150, 39416150, 39426150, 39436150, 39446150, 39456150, 39466150, 39476150, 39486150, 39496150, 39506150, 39516150, 39526150, 39536150, 39546150, 39556150, 39566150, 39576150, 39586150, 39596150, 39606150]</msg>
<status status="PASS" starttime="20201112 09:55:55.587" endtime="20201112 09:55:55.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.583" endtime="20201112 09:55:55.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.596" endtime="20201112 09:55:55.887"></status>
</kw>
<msg timestamp="20201112 09:55:55.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032619778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:55.594" endtime="20201112 09:55:55.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032619778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:55.891" endtime="20201112 09:55:55.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.898" endtime="20201112 09:55:55.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.592" endtime="20201112 09:55:55.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.590" endtime="20201112 09:55:55.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:55.925" level="INFO">${RESULT} = {'time': [0.022538361, 0.032619778, 0.042597486, 0.052598403, 0.062599333, 0.07260025, 0.082601167, 0.092602083, 0.102603, 0.112603917, 0.122604847, 0.132605764, 0.142606694, 0.152607597, 0.162608528,...</msg>
<status status="PASS" starttime="20201112 09:55:55.902" endtime="20201112 09:55:55.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.929" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:55:55.928" endtime="20201112 09:55:55.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.931" level="INFO">VALUE: 0.022538361</msg>
<status status="PASS" starttime="20201112 09:55:55.930" endtime="20201112 09:55:55.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.926" endtime="20201112 09:55:55.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.937" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:55.936" endtime="20201112 09:55:55.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.939" level="INFO">VALUE: [0.032619778, 0.042597486, 0.052598403, 0.062599333, 0.07260025, 0.082601167, 0.092602083, 0.102603, 0.112603917, 0.122604847, 0.132605764, 0.142606694, 0.152607597, 0.162608528, 0.172609458, 0.182610361, 0.192611292, 0.202612222, 0.212613181, 0.222614042, 0.232614986, 0.242615889, 0.252616806, 0.262617736, 0.272618639, 0.282619583, 0.292620486, 0.302621417, 0.312622333, 0.32262325, 0.332624181, 0.342625097, 0.352626014, 0.362626931, 0.372627861, 0.382628778, 0.392629694, 0.402630639, 0.412631542, 0.422632458, 0.432633431, 0.442634292, 0.452635236, 0.462636139, 0.472637056, 0.482638, 0.492638903, 0.502639819, 0.51264075, 0.522641681, 0.532642597, 0.542643528, 0.552644431, 0.562645361, 0.572646278, 0.582647208, 0.592648111, 0.602649042, 0.612649958, 0.622650875, 0.632651861, 0.642652722, 0.652653653, 0.662654569, 0.672655486, 0.682656403, 0.692657347, 0.702658278, 0.712659167, 0.722660097, 0.732661028, 0.742661931, 0.752662861, 0.762663792, 0.772664694, 0.782665625, 0.792666542, 0.802667472, 0.812668444, 0.822669361, 0.832670222, 0.842671194, 0.852672069, 0.862673014, 0.872673931, 0.882674833, 0.892675764, 0.902676681, 0.912677597, 0.922678528, 0.932679444, 0.942680361, 0.952681306, 0.962682208, 0.972683125, 0.982684056, 0.992685014, 1.002685903, 1.012686819, 1.022687792] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:55.938" endtime="20201112 09:55:55.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.933" endtime="20201112 09:55:55.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.942" endtime="20201112 09:55:55.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:55.946" endtime="20201112 09:55:55.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.944" endtime="20201112 09:55:55.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.941" endtime="20201112 09:55:55.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.433" endtime="20201112 09:55:55.966"></status>
</kw>
<msg timestamp="20201112 09:55:55.967" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.974" endtime="20201112 09:55:58.068"></status>
</kw>
<msg timestamp="20201112 09:55:58.069" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41138552, 'wakeups': [41148632, 41158609, 41168609, 41178609, 41188609...</msg>
<status status="PASS" starttime="20201112 09:55:55.973" endtime="20201112 09:55:58.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.075" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41138552, 'wakeups': [41148632, 41158609, 41168609, 41178609, 41188609...</msg>
<status status="PASS" starttime="20201112 09:55:58.071" endtime="20201112 09:55:58.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.077" endtime="20201112 09:55:58.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.970" endtime="20201112 09:55:58.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.969" endtime="20201112 09:55:58.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:58.088" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [41148632, 41158609, 41168609, 41178609, 41188609, 41198609, 41208609, 41218609, 41228609, 41238609, 41248609, 41258609, 41268609, 41278609, 41288609, 41298609, 41...</msg>
<status status="PASS" starttime="20201112 09:55:58.084" endtime="20201112 09:55:58.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.096" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:58.094" endtime="20201112 09:55:58.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.100" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:58.099" endtime="20201112 09:55:58.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.090" endtime="20201112 09:55:58.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.110" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:55:58.108" endtime="20201112 09:55:58.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.117" level="INFO">VALUE: 41138552</msg>
<status status="PASS" starttime="20201112 09:55:58.115" endtime="20201112 09:55:58.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.103" endtime="20201112 09:55:58.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.124" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:58.123" endtime="20201112 09:55:58.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.126" level="INFO">VALUE: [41148632, 41158609, 41168609, 41178609, 41188609, 41198609, 41208609, 41218609, 41228609, 41238609, 41248609, 41258609, 41268609, 41278609, 41288609, 41298609, 41308609, 41318609, 41328609, 41338609, 41348609, 41358609, 41368609, 41378609, 41388609, 41398609, 41408609, 41418609, 41428609, 41438609, 41448609, 41458609, 41468609, 41478609, 41488609, 41498609, 41508609, 41518609, 41528609, 41538609, 41548609, 41558609, 41568609, 41578609, 41588609, 41598609, 41608609, 41618609, 41628609, 41638609, 41648609, 41658609, 41668609, 41678609, 41688609, 41698609, 41708609, 41718609, 41728609, 41738609, 41748609, 41758609, 41768609, 41778609, 41788609, 41798609, 41808609, 41818609, 41828609, 41838609, 41848609, 41858609, 41868609, 41878609, 41888609, 41898609, 41908609, 41918609, 41928609, 41938609, 41948609, 41958609, 41968609, 41978609, 41988609, 41998609, 42008609, 42018609, 42028609, 42038609, 42048609, 42058609, 42068609, 42078609, 42088609, 42098609, 42108609, 42118609, 42128609, 42138609]</msg>
<status status="PASS" starttime="20201112 09:55:58.125" endtime="20201112 09:55:58.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.120" endtime="20201112 09:55:58.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.133" endtime="20201112 09:55:58.425"></status>
</kw>
<msg timestamp="20201112 09:55:58.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018024847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028106792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:58.132" endtime="20201112 09:55:58.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018024847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028106792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:58.429" endtime="20201112 09:55:58.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.436" endtime="20201112 09:55:58.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.129" endtime="20201112 09:55:58.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.127" endtime="20201112 09:55:58.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:58.462" level="INFO">${RESULT} = {'time': [0.018024847, 0.028106792, 0.0380845, 0.048085431, 0.058086333, 0.06808725, 0.078088194, 0.088089153, 0.098090056, 0.108090944, 0.118091861, 0.128092778, 0.138093694, 0.148094625, 0.158095556...</msg>
<status status="PASS" starttime="20201112 09:55:58.440" endtime="20201112 09:55:58.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.466" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:55:58.465" endtime="20201112 09:55:58.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.469" level="INFO">VALUE: 0.018024847</msg>
<status status="PASS" starttime="20201112 09:55:58.468" endtime="20201112 09:55:58.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.463" endtime="20201112 09:55:58.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.474" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:58.473" endtime="20201112 09:55:58.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.477" level="INFO">VALUE: [0.028106792, 0.0380845, 0.048085431, 0.058086333, 0.06808725, 0.078088194, 0.088089153, 0.098090056, 0.108090944, 0.118091861, 0.128092778, 0.138093694, 0.148094625, 0.158095556, 0.168096472, 0.178097375, 0.188098319, 0.198099222, 0.208100139, 0.218101056, 0.228101986, 0.238102931, 0.248103819, 0.258104792, 0.268105667, 0.278106597, 0.288107528, 0.298108444, 0.308109361, 0.318110292, 0.328111208, 0.338112111, 0.348113028, 0.358113986, 0.368114875, 0.378115819, 0.388116736, 0.398117653, 0.408118556, 0.418119514, 0.428120403, 0.438121319, 0.44812225, 0.458123167, 0.468124097, 0.478125042, 0.488125931, 0.498126944, 0.508127778, 0.518128694, 0.528129639, 0.538130597, 0.548131528, 0.558132389, 0.568133306, 0.578134236, 0.588135153, 0.598136097, 0.608136986, 0.618137931, 0.628138847, 0.638139764, 0.648140681, 0.658141611, 0.668142528, 0.678143458, 0.688144375, 0.698145292, 0.708146208, 0.718147139, 0.728148056, 0.738148972, 0.748149917, 0.758150847, 0.76815175, 0.778152667, 0.788153583, 0.798154514, 0.808155472, 0.818156347, 0.828157278, 0.838158208, 0.848159125, 0.858160042, 0.868160958, 0.878161889, 0.888162806, 0.898163736, 0.908164653, 0.918165583, 0.928166556, 0.938167431, 0.948168389, 0.958169264, 0.968170194, 0.978171111, 0.988172056, 0.998172986, 1.008173875, 1.018174792] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:58.476" endtime="20201112 09:55:58.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.470" endtime="20201112 09:55:58.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.480" endtime="20201112 09:55:58.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:58.483" endtime="20201112 09:55:58.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.482" endtime="20201112 09:55:58.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.478" endtime="20201112 09:55:58.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.967" endtime="20201112 09:55:58.504"></status>
</kw>
<msg timestamp="20201112 09:55:58.504" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.512" endtime="20201112 09:56:00.604"></status>
</kw>
<msg timestamp="20201112 09:56:00.606" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43676140, 'wakeups': [43686220, 43696197, 43706197, 43716197, 43726197...</msg>
<status status="PASS" starttime="20201112 09:55:58.511" endtime="20201112 09:56:00.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.612" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43676140, 'wakeups': [43686220, 43696197, 43706197, 43716197, 43726197...</msg>
<status status="PASS" starttime="20201112 09:56:00.608" endtime="20201112 09:56:00.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.614" endtime="20201112 09:56:00.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.508" endtime="20201112 09:56:00.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.506" endtime="20201112 09:56:00.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:00.625" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [43686220, 43696197, 43706197, 43716197, 43726197, 43736197, 43746197, 43756197, 43766197, 43776197, 43786197, 43796197, 43806197, 43816197, 43826197, 43836197, 43...</msg>
<status status="PASS" starttime="20201112 09:56:00.621" endtime="20201112 09:56:00.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.634" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:00.631" endtime="20201112 09:56:00.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.638" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:00.636" endtime="20201112 09:56:00.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.627" endtime="20201112 09:56:00.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.648" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:00.646" endtime="20201112 09:56:00.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.652" level="INFO">VALUE: 43676140</msg>
<status status="PASS" starttime="20201112 09:56:00.650" endtime="20201112 09:56:00.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.641" endtime="20201112 09:56:00.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.662" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:00.660" endtime="20201112 09:56:00.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.667" level="INFO">VALUE: [43686220, 43696197, 43706197, 43716197, 43726197, 43736197, 43746197, 43756197, 43766197, 43776197, 43786197, 43796197, 43806197, 43816197, 43826197, 43836197, 43846197, 43856197, 43866197, 43876197, 43886197, 43896197, 43906197, 43916197, 43926197, 43936197, 43946197, 43956197, 43966197, 43976197, 43986197, 43996197, 44006197, 44016197, 44026197, 44036197, 44046197, 44056197, 44066197, 44076197, 44086197, 44096197, 44106197, 44116197, 44126197, 44136197, 44146197, 44156197, 44166197, 44176197, 44186197, 44196197, 44206197, 44216197, 44226197, 44236197, 44246197, 44256197, 44266197, 44276197, 44286197, 44296197, 44306197, 44316197, 44326197, 44336197, 44346197, 44356197, 44366197, 44376197, 44386197, 44396197, 44406197, 44416197, 44426197, 44436197, 44446197, 44456197, 44466197, 44476197, 44486197, 44496197, 44506197, 44516197, 44526197, 44536197, 44546197, 44556197, 44566197, 44576197, 44586197, 44596197, 44606197, 44616197, 44626197, 44636197, 44646197, 44656197, 44666197, 44676197]</msg>
<status status="PASS" starttime="20201112 09:56:00.664" endtime="20201112 09:56:00.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.655" endtime="20201112 09:56:00.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.683" endtime="20201112 09:56:00.979"></status>
</kw>
<msg timestamp="20201112 09:56:00.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018062069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028143653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:00.680" endtime="20201112 09:56:00.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018062069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028143653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:00.983" endtime="20201112 09:56:00.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.990" endtime="20201112 09:56:00.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.674" endtime="20201112 09:56:00.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.670" endtime="20201112 09:56:00.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:01.017" level="INFO">${RESULT} = {'time': [0.018062069, 0.028143653, 0.038121389, 0.048122333, 0.058123264, 0.068124153, 0.078125083, 0.088125986, 0.098126903, 0.108127861, 0.11812875, 0.128129694, 0.138130597, 0.148131514, 0.1581324...</msg>
<status status="PASS" starttime="20201112 09:56:00.994" endtime="20201112 09:56:01.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.021" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:01.020" endtime="20201112 09:56:01.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.023" level="INFO">VALUE: 0.018062069</msg>
<status status="PASS" starttime="20201112 09:56:01.022" endtime="20201112 09:56:01.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.017" endtime="20201112 09:56:01.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.028" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:01.027" endtime="20201112 09:56:01.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.031" level="INFO">VALUE: [0.028143653, 0.038121389, 0.048122333, 0.058123264, 0.068124153, 0.078125083, 0.088125986, 0.098126903, 0.108127861, 0.11812875, 0.128129694, 0.138130597, 0.148131514, 0.158132431, 0.168133347, 0.178134278, 0.188135208, 0.198136111, 0.208137028, 0.218137958, 0.228138889, 0.238139792, 0.248140722, 0.258141653, 0.268142556, 0.278143472, 0.288144403, 0.298145333, 0.30814625, 0.318147167, 0.328148083, 0.338149, 0.348149931, 0.358150861, 0.368151764, 0.378152694, 0.388153611, 0.398154528, 0.408155444, 0.418156375, 0.428157347, 0.438158222, 0.448159139, 0.458160069, 0.468160986, 0.478161903, 0.488162819, 0.49816375, 0.508164667, 0.518165597, 0.528166528, 0.538167472, 0.548168361, 0.558169278, 0.568170208, 0.578171111, 0.588172042, 0.598172958, 0.608173889, 0.618174819, 0.628175722, 0.638176694, 0.648177569, 0.6581785, 0.668179417, 0.678180333, 0.68818125, 0.698182194, 0.708183111, 0.718184028, 0.728184944, 0.738185861, 0.748186792, 0.758187722, 0.768188625, 0.778189556, 0.788190472, 0.798191403, 0.808192375, 0.818193264, 0.828194167, 0.838195097, 0.848196, 0.858196931, 0.868197847, 0.878198764, 0.888199694, 0.898200639, 0.908201542, 0.918202528, 0.928203389, 0.938204306, 0.94820525, 0.958206139, 0.968207111, 0.978208, 0.988208917, 0.998209833, 1.00821075, 1.018211722] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:01.029" endtime="20201112 09:56:01.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.024" endtime="20201112 09:56:01.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.034" endtime="20201112 09:56:01.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:01.037" endtime="20201112 09:56:01.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.035" endtime="20201112 09:56:01.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.032" endtime="20201112 09:56:01.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.505" endtime="20201112 09:56:01.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.431" endtime="20201112 09:56:01.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.430" endtime="20201112 09:56:01.058"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:01.061" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.069" endtime="20201112 09:56:03.162"></status>
</kw>
<msg timestamp="20201112 09:56:03.164" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46233506, 'wakeups': [46243600, 46253576, 46263576, 46273576, 46283576...</msg>
<status status="PASS" starttime="20201112 09:56:01.068" endtime="20201112 09:56:03.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.169" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46233506, 'wakeups': [46243600, 46253576, 46263576, 46273576, 46283576...</msg>
<status status="PASS" starttime="20201112 09:56:03.166" endtime="20201112 09:56:03.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.172" endtime="20201112 09:56:03.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.064" endtime="20201112 09:56:03.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.062" endtime="20201112 09:56:03.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:03.183" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [46243600, 46253576, 46263576, 46273576, 46283576, 46293576, 46303576, 46313576, 46323576, 46333576, 46343576, 46353576, 46363576, 46373576, 46383576, 46393576, 46...</msg>
<status status="PASS" starttime="20201112 09:56:03.179" endtime="20201112 09:56:03.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.192" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:03.190" endtime="20201112 09:56:03.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.196" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:03.194" endtime="20201112 09:56:03.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.185" endtime="20201112 09:56:03.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.206" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:03.204" endtime="20201112 09:56:03.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.210" level="INFO">VALUE: 46233506</msg>
<status status="PASS" starttime="20201112 09:56:03.208" endtime="20201112 09:56:03.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.199" endtime="20201112 09:56:03.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.220" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:03.218" endtime="20201112 09:56:03.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.225" level="INFO">VALUE: [46243600, 46253576, 46263576, 46273576, 46283576, 46293576, 46303576, 46313576, 46323576, 46333576, 46343576, 46353576, 46363576, 46373576, 46383576, 46393576, 46403576, 46413576, 46423576, 46433576, 46443576, 46453576, 46463576, 46473576, 46483576, 46493576, 46503576, 46513576, 46523576, 46533576, 46543576, 46553576, 46563576, 46573576, 46583576, 46593576, 46603576, 46613576, 46623576, 46633576, 46643576, 46653576, 46663576, 46673576, 46683576, 46693576, 46703576, 46713576, 46723576, 46733576, 46743576, 46753576, 46763576, 46773576, 46783576, 46793576, 46803576, 46813576, 46823576, 46833576, 46843576, 46853576, 46863576, 46873576, 46883576, 46893576, 46903576, 46913576, 46923576, 46933576, 46943576, 46953576, 46963576, 46973576, 46983576, 46993576, 47003576, 47013576, 47023576, 47033576, 47043576, 47053576, 47063576, 47073576, 47083576, 47093576, 47103576, 47113576, 47123576, 47133576, 47143576, 47153576, 47163576, 47173576, 47183576, 47193576, 47203576, 47213576, 47223576, 47233576]</msg>
<status status="PASS" starttime="20201112 09:56:03.222" endtime="20201112 09:56:03.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.213" endtime="20201112 09:56:03.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.235" endtime="20201112 09:56:03.527"></status>
</kw>
<msg timestamp="20201112 09:56:03.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031858958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:03.233" endtime="20201112 09:56:03.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031858958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:03.530" endtime="20201112 09:56:03.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.538" endtime="20201112 09:56:03.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.231" endtime="20201112 09:56:03.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.228" endtime="20201112 09:56:03.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:03.565" level="INFO">${RESULT} = {'time': [0.021763694, 0.031858958, 0.041835819, 0.051836708, 0.061837639, 0.071838542, 0.081839514, 0.091840389, 0.101841319, 0.111842236, 0.121843153, 0.131844069, 0.141845, 0.151845903, 0.161846833...</msg>
<status status="PASS" starttime="20201112 09:56:03.541" endtime="20201112 09:56:03.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.569" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:03.568" endtime="20201112 09:56:03.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.571" level="INFO">VALUE: 0.021763694</msg>
<status status="PASS" starttime="20201112 09:56:03.570" endtime="20201112 09:56:03.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.565" endtime="20201112 09:56:03.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.576" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:03.575" endtime="20201112 09:56:03.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.579" level="INFO">VALUE: [0.031858958, 0.041835819, 0.051836708, 0.061837639, 0.071838542, 0.081839514, 0.091840389, 0.101841319, 0.111842236, 0.121843153, 0.131844069, 0.141845, 0.151845903, 0.161846833, 0.17184775, 0.181848667, 0.191849597, 0.201850528, 0.211851431, 0.221852347, 0.231853264, 0.241854194, 0.251855125, 0.261856028, 0.271856972, 0.281857875, 0.291858792, 0.301859708, 0.311860639, 0.321861556, 0.331862472, 0.341863403, 0.351864333, 0.361865278, 0.371866194, 0.381867083, 0.391868014, 0.401868917, 0.411869861, 0.421870764, 0.431871694, 0.441872597, 0.451873542, 0.461874458, 0.471875361, 0.481876292, 0.49187725, 0.501878125, 0.511879056, 0.521879972, 0.531880903, 0.541881819, 0.551882736, 0.561883653, 0.571884625, 0.5818855, 0.591886431, 0.601887347, 0.611888264, 0.621889194, 0.631890111, 0.641891028, 0.651891944, 0.661892889, 0.671893792, 0.681894722, 0.691895639, 0.701896556, 0.711897556, 0.721898417, 0.731899333, 0.741900236, 0.751901222, 0.761902097, 0.771903, 0.781903944, 0.791904847, 0.801905764, 0.811906694, 0.821907681, 0.831908528, 0.841909458, 0.851910375, 0.861911306, 0.871912236, 0.881913139, 0.891914069, 0.901914986, 0.911915903, 0.921916833, 0.931917764, 0.941918667, 0.951919611, 0.961920528, 0.971921444, 0.981922361, 0.991923278, 1.001924222, 1.011925139, 1.021926042] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:03.578" endtime="20201112 09:56:03.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.572" endtime="20201112 09:56:03.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.582" endtime="20201112 09:56:03.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:03.585" endtime="20201112 09:56:03.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.584" endtime="20201112 09:56:03.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.580" endtime="20201112 09:56:03.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.061" endtime="20201112 09:56:03.606"></status>
</kw>
<msg timestamp="20201112 09:56:03.606" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.614" endtime="20201112 09:56:05.707"></status>
</kw>
<msg timestamp="20201112 09:56:05.708" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48778410, 'wakeups': [48788504, 48798480, 48808480, 48818480, 48828480...</msg>
<status status="PASS" starttime="20201112 09:56:03.613" endtime="20201112 09:56:05.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.714" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48778410, 'wakeups': [48788504, 48798480, 48808480, 48818480, 48828480...</msg>
<status status="PASS" starttime="20201112 09:56:05.710" endtime="20201112 09:56:05.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.716" endtime="20201112 09:56:05.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.610" endtime="20201112 09:56:05.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.608" endtime="20201112 09:56:05.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:05.727" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [48788504, 48798480, 48808480, 48818480, 48828480, 48838480, 48848480, 48858480, 48868480, 48878480, 48888480, 48898480, 48908480, 48918480, 48928480, 48938480, 48...</msg>
<status status="PASS" starttime="20201112 09:56:05.723" endtime="20201112 09:56:05.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.735" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:05.733" endtime="20201112 09:56:05.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.739" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:05.737" endtime="20201112 09:56:05.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.728" endtime="20201112 09:56:05.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.751" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:05.749" endtime="20201112 09:56:05.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.756" level="INFO">VALUE: 48778410</msg>
<status status="PASS" starttime="20201112 09:56:05.754" endtime="20201112 09:56:05.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.744" endtime="20201112 09:56:05.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.765" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:05.763" endtime="20201112 09:56:05.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.778" level="INFO">VALUE: [48788504, 48798480, 48808480, 48818480, 48828480, 48838480, 48848480, 48858480, 48868480, 48878480, 48888480, 48898480, 48908480, 48918480, 48928480, 48938480, 48948480, 48958480, 48968480, 48978480, 48988480, 48998480, 49008480, 49018480, 49028480, 49038480, 49048480, 49058480, 49068480, 49078480, 49088480, 49098480, 49108480, 49118480, 49128480, 49138480, 49148480, 49158480, 49168480, 49178480, 49188480, 49198480, 49208480, 49218480, 49228480, 49238480, 49248480, 49258480, 49268480, 49278480, 49288480, 49298480, 49308480, 49318480, 49328480, 49338480, 49348480, 49358480, 49368480, 49378480, 49388480, 49398480, 49408480, 49418480, 49428480, 49438480, 49448480, 49458480, 49468480, 49478480, 49488480, 49498480, 49508480, 49518480, 49528480, 49538480, 49548480, 49558480, 49568480, 49578480, 49588480, 49598480, 49608480, 49618480, 49628480, 49638480, 49648480, 49658480, 49668480, 49678480, 49688480, 49698480, 49708480, 49718480, 49728480, 49738480, 49748480, 49758480, 49768480, 49778480]</msg>
<status status="PASS" starttime="20201112 09:56:05.776" endtime="20201112 09:56:05.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.759" endtime="20201112 09:56:05.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.794" endtime="20201112 09:56:06.087"></status>
</kw>
<msg timestamp="20201112 09:56:06.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018190333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028285944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:05.791" endtime="20201112 09:56:06.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018190333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028285944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:06.091" endtime="20201112 09:56:06.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.099" endtime="20201112 09:56:06.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.785" endtime="20201112 09:56:06.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.782" endtime="20201112 09:56:06.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:06.125" level="INFO">${RESULT} = {'time': [0.018190333, 0.028285944, 0.038262806, 0.048263708, 0.058264639, 0.068265556, 0.078266472, 0.088267403, 0.098268306, 0.108269222, 0.118270153, 0.128271069, 0.138271986, 0.148272903, 0.158273...</msg>
<status status="PASS" starttime="20201112 09:56:06.102" endtime="20201112 09:56:06.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.130" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:06.129" endtime="20201112 09:56:06.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.132" level="INFO">VALUE: 0.018190333</msg>
<status status="PASS" starttime="20201112 09:56:06.131" endtime="20201112 09:56:06.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.126" endtime="20201112 09:56:06.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.138" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:06.137" endtime="20201112 09:56:06.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.140" level="INFO">VALUE: [0.028285944, 0.038262806, 0.048263708, 0.058264639, 0.068265556, 0.078266472, 0.088267403, 0.098268306, 0.108269222, 0.118270153, 0.128271069, 0.138271986, 0.148272903, 0.158273833, 0.168274764, 0.178275681, 0.188276611, 0.198277528, 0.208278431, 0.218279347, 0.228280264, 0.238281181, 0.248282111, 0.258283028, 0.268283944, 0.278284889, 0.288285833, 0.298286708, 0.308287625, 0.318288556, 0.328289472, 0.338290389, 0.348291347, 0.358292236, 0.368293167, 0.378294125, 0.388294986, 0.398295931, 0.408296847, 0.418297778, 0.428298681, 0.438299597, 0.448300514, 0.458301514, 0.468302375, 0.478303333, 0.488304208, 0.498305125, 0.508306056, 0.518306958, 0.528307903, 0.538308861, 0.548309722, 0.558310667, 0.568311569, 0.578312486, 0.588313431, 0.598314389, 0.608315306, 0.618316181, 0.628317111, 0.638318028, 0.648318944, 0.658319944, 0.668320792, 0.678321708, 0.688322681, 0.698323542, 0.708324486, 0.718325389, 0.728326319, 0.738327236, 0.748328167, 0.758329069, 0.76833, 0.778330917, 0.788331847, 0.798332806, 0.808333681, 0.818334597, 0.828335542, 0.8383365, 0.848337375, 0.858338292, 0.868339222, 0.878340139, 0.888341056, 0.898342042, 0.908342931, 0.918343819, 0.92834475, 0.938345653, 0.948346597, 0.9583475, 0.968348417, 0.978349375, 0.988350264, 0.998351194, 1.008352111, 1.018353028] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:06.139" endtime="20201112 09:56:06.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.134" endtime="20201112 09:56:06.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.143" endtime="20201112 09:56:06.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:06.146" endtime="20201112 09:56:06.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.145" endtime="20201112 09:56:06.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.141" endtime="20201112 09:56:06.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.607" endtime="20201112 09:56:06.167"></status>
</kw>
<msg timestamp="20201112 09:56:06.168" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.176" endtime="20201112 09:56:08.269"></status>
</kw>
<msg timestamp="20201112 09:56:08.270" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51339578, 'wakeups': [51349672, 51359648, 51369648, 51379648, 51389648...</msg>
<status status="PASS" starttime="20201112 09:56:06.174" endtime="20201112 09:56:08.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.276" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51339578, 'wakeups': [51349672, 51359648, 51369648, 51379648, 51389648...</msg>
<status status="PASS" starttime="20201112 09:56:08.272" endtime="20201112 09:56:08.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.278" endtime="20201112 09:56:08.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.171" endtime="20201112 09:56:08.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.170" endtime="20201112 09:56:08.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:08.289" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [51349672, 51359648, 51369648, 51379648, 51389648, 51399648, 51409648, 51419648, 51429648, 51439648, 51449648, 51459648, 51469648, 51479648, 51489648, 51499648, 51...</msg>
<status status="PASS" starttime="20201112 09:56:08.285" endtime="20201112 09:56:08.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.299" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:08.296" endtime="20201112 09:56:08.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.306" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:08.303" endtime="20201112 09:56:08.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.291" endtime="20201112 09:56:08.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.321" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:08.318" endtime="20201112 09:56:08.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.326" level="INFO">VALUE: 51339578</msg>
<status status="PASS" starttime="20201112 09:56:08.324" endtime="20201112 09:56:08.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.311" endtime="20201112 09:56:08.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.333" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:08.332" endtime="20201112 09:56:08.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.335" level="INFO">VALUE: [51349672, 51359648, 51369648, 51379648, 51389648, 51399648, 51409648, 51419648, 51429648, 51439648, 51449648, 51459648, 51469648, 51479648, 51489648, 51499648, 51509648, 51519648, 51529648, 51539648, 51549648, 51559648, 51569648, 51579648, 51589648, 51599648, 51609648, 51619648, 51629648, 51639648, 51649648, 51659648, 51669648, 51679648, 51689648, 51699648, 51709648, 51719648, 51729648, 51739648, 51749648, 51759648, 51769648, 51779648, 51789648, 51799648, 51809648, 51819648, 51829648, 51839648, 51849648, 51859648, 51869648, 51879648, 51889648, 51899648, 51909648, 51919648, 51929648, 51939648, 51949648, 51959648, 51969648, 51979648, 51989648, 51999648, 52009648, 52019648, 52029648, 52039648, 52049648, 52059648, 52069648, 52079648, 52089648, 52099648, 52109648, 52119648, 52129648, 52139648, 52149648, 52159648, 52169648, 52179648, 52189648, 52199648, 52209648, 52219648, 52229648, 52239648, 52249648, 52259648, 52269648, 52279648, 52289648, 52299648, 52309648, 52319648, 52329648, 52339648]</msg>
<status status="PASS" starttime="20201112 09:56:08.334" endtime="20201112 09:56:08.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.330" endtime="20201112 09:56:08.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.344" endtime="20201112 09:56:08.634"></status>
</kw>
<msg timestamp="20201112 09:56:08.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028587278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:08.342" endtime="20201112 09:56:08.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028587278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:08.638" endtime="20201112 09:56:08.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.646" endtime="20201112 09:56:08.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.339" endtime="20201112 09:56:08.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.337" endtime="20201112 09:56:08.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:08.672" level="INFO">${RESULT} = {'time': [0.018491861, 0.028587278, 0.038564139, 0.048565139, 0.058565972, 0.068566903, 0.078567847, 0.088568736, 0.098569653, 0.108570569, 0.118571514, 0.128572431, 0.138573333, 0.14857425, 0.1585751...</msg>
<status status="PASS" starttime="20201112 09:56:08.649" endtime="20201112 09:56:08.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.676" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:08.675" endtime="20201112 09:56:08.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.678" level="INFO">VALUE: 0.018491861</msg>
<status status="PASS" starttime="20201112 09:56:08.677" endtime="20201112 09:56:08.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.673" endtime="20201112 09:56:08.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.683" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:08.682" endtime="20201112 09:56:08.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.685" level="INFO">VALUE: [0.028587278, 0.038564139, 0.048565139, 0.058565972, 0.068566903, 0.078567847, 0.088568736, 0.098569653, 0.108570569, 0.118571514, 0.128572431, 0.138573333, 0.14857425, 0.158575181, 0.168576125, 0.178577028, 0.188577944, 0.198578875, 0.208579778, 0.218580708, 0.228581625, 0.238582542, 0.248583472, 0.258584389, 0.268585306, 0.278586236, 0.288587153, 0.298588069, 0.308588986, 0.318589931, 0.328590819, 0.338591764, 0.348592681, 0.358593583, 0.368594556, 0.378595444, 0.388596361, 0.398597292, 0.408598194, 0.418599111, 0.428600042, 0.438600972, 0.448601903, 0.458602792, 0.468603722, 0.478604639, 0.488605556, 0.498606528, 0.508607431, 0.518608333, 0.528609278, 0.538610181, 0.548611083, 0.558612014, 0.568612931, 0.578613875, 0.588614778, 0.598615708, 0.608616625, 0.618617542, 0.628618458, 0.638619389, 0.648620319, 0.658621222, 0.668622167, 0.678623083, 0.688623986, 0.698624917, 0.708625833, 0.71862675, 0.728627694, 0.738628597, 0.748629542, 0.758630444, 0.768631361, 0.778632292, 0.788633208, 0.798634139, 0.808635056, 0.818635972, 0.828636903, 0.838637819, 0.848638736, 0.858639681, 0.868640583, 0.878641528, 0.888642444, 0.898643361, 0.908644264, 0.918645208, 0.928646125, 0.938647056, 0.948647958, 0.958648889, 0.968649806, 0.978650736, 0.988651639, 0.998652611, 1.008653486, 1.018654403] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:08.684" endtime="20201112 09:56:08.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.680" endtime="20201112 09:56:08.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.689" endtime="20201112 09:56:08.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:08.692" endtime="20201112 09:56:08.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.690" endtime="20201112 09:56:08.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.687" endtime="20201112 09:56:08.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.168" endtime="20201112 09:56:08.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.059" endtime="20201112 09:56:08.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.058" endtime="20201112 09:56:08.714"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:08.716" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.725" endtime="20201112 09:56:10.818"></status>
</kw>
<msg timestamp="20201112 09:56:10.819" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 53889128, 'wakeups': [53899235, 53909212, 53919212, 53929212, 53939212...</msg>
<status status="PASS" starttime="20201112 09:56:08.724" endtime="20201112 09:56:10.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.826" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 53889128, 'wakeups': [53899235, 53909212, 53919212, 53929212, 53939212...</msg>
<status status="PASS" starttime="20201112 09:56:10.821" endtime="20201112 09:56:10.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.828" endtime="20201112 09:56:10.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.721" endtime="20201112 09:56:10.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.718" endtime="20201112 09:56:10.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:10.839" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [53899235, 53909212, 53919212, 53929212, 53939212, 53949212, 53959212, 53969212, 53979212, 53989212, 53999212, 54009212, 54019212, 54029212, 54039212, 54049212, 54...</msg>
<status status="PASS" starttime="20201112 09:56:10.835" endtime="20201112 09:56:10.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.847" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:10.845" endtime="20201112 09:56:10.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.852" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:10.850" endtime="20201112 09:56:10.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.841" endtime="20201112 09:56:10.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.862" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:10.859" endtime="20201112 09:56:10.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.866" level="INFO">VALUE: 53889128</msg>
<status status="PASS" starttime="20201112 09:56:10.864" endtime="20201112 09:56:10.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.854" endtime="20201112 09:56:10.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.876" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:10.874" endtime="20201112 09:56:10.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.880" level="INFO">VALUE: [53899235, 53909212, 53919212, 53929212, 53939212, 53949212, 53959212, 53969212, 53979212, 53989212, 53999212, 54009212, 54019212, 54029212, 54039212, 54049212, 54059212, 54069212, 54079212, 54089212, 54099212, 54109212, 54119212, 54129212, 54139212, 54149212, 54159212, 54169212, 54179212, 54189212, 54199212, 54209212, 54219212, 54229212, 54239212, 54249212, 54259212, 54269212, 54279212, 54289212, 54299212, 54309212, 54319212, 54329212, 54339212, 54349212, 54359212, 54369212, 54379212, 54389212, 54399212, 54409212, 54419212, 54429212, 54439212, 54449212, 54459212, 54469212, 54479212, 54489212, 54499212, 54509212, 54519212, 54529212, 54539212, 54549212, 54559212, 54569212, 54579212, 54589212, 54599212, 54609212, 54619212, 54629212, 54639212, 54649212, 54659212, 54669212, 54679212, 54689212, 54699212, 54709212, 54719212, 54729212, 54739212, 54749212, 54759212, 54769212, 54779212, 54789212, 54799212, 54809212, 54819212, 54829212, 54839212, 54849212, 54859212, 54869212, 54879212, 54889212]</msg>
<status status="PASS" starttime="20201112 09:56:10.878" endtime="20201112 09:56:10.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.869" endtime="20201112 09:56:10.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:10.896" endtime="20201112 09:56:11.190"></status>
</kw>
<msg timestamp="20201112 09:56:11.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031841069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:10.893" endtime="20201112 09:56:11.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031841069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:11.193" endtime="20201112 09:56:11.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.201" endtime="20201112 09:56:11.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.887" endtime="20201112 09:56:11.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.884" endtime="20201112 09:56:11.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:11.228" level="INFO">${RESULT} = {'time': [0.021732347, 0.031841069, 0.041818458, 0.051819375, 0.061820292, 0.071821236, 0.081822181, 0.091823056, 0.101823972, 0.111824903, 0.121825806, 0.131826764, 0.141827667, 0.151828569, 0.161829...</msg>
<status status="PASS" starttime="20201112 09:56:11.204" endtime="20201112 09:56:11.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.233" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:11.232" endtime="20201112 09:56:11.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.235" level="INFO">VALUE: 0.021732347</msg>
<status status="PASS" starttime="20201112 09:56:11.234" endtime="20201112 09:56:11.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.229" endtime="20201112 09:56:11.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.240" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:11.239" endtime="20201112 09:56:11.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.242" level="INFO">VALUE: [0.031841069, 0.041818458, 0.051819375, 0.061820292, 0.071821236, 0.081822181, 0.091823056, 0.101823972, 0.111824903, 0.121825806, 0.131826764, 0.141827667, 0.151828569, 0.161829486, 0.171830403, 0.181831333, 0.19183225, 0.201833167, 0.211834083, 0.221835028, 0.231835931, 0.241836889, 0.251837778, 0.261838708, 0.271839611, 0.281840528, 0.291841458, 0.301842375, 0.311843306, 0.321844222, 0.331845125, 0.341846069, 0.351846972, 0.361847889, 0.371848819, 0.381849806, 0.391850667, 0.401851611, 0.4118525, 0.421853417, 0.431854333, 0.441855278, 0.451856181, 0.461857097, 0.471858056, 0.481858958, 0.491859903, 0.501860792, 0.511861736, 0.521862625, 0.531863569, 0.541864472, 0.551865389, 0.561866319, 0.571867236, 0.581868153, 0.591869097, 0.60187, 0.611870917, 0.621871847, 0.631872764, 0.641873681, 0.651874611, 0.661875542, 0.671876472, 0.681877375, 0.691878347, 0.701879208, 0.711880139, 0.721881069, 0.731882, 0.741882903, 0.751883819, 0.76188475, 0.771885681, 0.781886583, 0.791887514, 0.801888431, 0.811889347, 0.821890361, 0.831891208, 0.841892181, 0.851893042, 0.861893958, 0.871894889, 0.881895806, 0.891896736, 0.901897667, 0.911898569, 0.9218995, 0.931900431, 0.941901333, 0.951902264, 0.961903194, 0.971904097, 0.981905014, 0.991905958, 1.001906889, 1.011907792, 1.021908694] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:11.241" endtime="20201112 09:56:11.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.236" endtime="20201112 09:56:11.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.245" endtime="20201112 09:56:11.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:11.249" endtime="20201112 09:56:11.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.247" endtime="20201112 09:56:11.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.244" endtime="20201112 09:56:11.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.717" endtime="20201112 09:56:11.269"></status>
</kw>
<msg timestamp="20201112 09:56:11.270" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.277" endtime="20201112 09:56:13.371"></status>
</kw>
<msg timestamp="20201112 09:56:13.372" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56441625, 'wakeups': [56451732, 56461709, 56471709, 56481709, 56491709...</msg>
<status status="PASS" starttime="20201112 09:56:11.276" endtime="20201112 09:56:13.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.378" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56441625, 'wakeups': [56451732, 56461709, 56471709, 56481709, 56491709...</msg>
<status status="PASS" starttime="20201112 09:56:13.374" endtime="20201112 09:56:13.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.380" endtime="20201112 09:56:13.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.273" endtime="20201112 09:56:13.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.272" endtime="20201112 09:56:13.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:13.391" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [56451732, 56461709, 56471709, 56481709, 56491709, 56501709, 56511709, 56521709, 56531709, 56541709, 56551709, 56561709, 56571709, 56581709, 56591709, 56601709, 56...</msg>
<status status="PASS" starttime="20201112 09:56:13.387" endtime="20201112 09:56:13.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.401" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:13.399" endtime="20201112 09:56:13.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.406" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:13.404" endtime="20201112 09:56:13.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.393" endtime="20201112 09:56:13.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.416" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:13.414" endtime="20201112 09:56:13.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.421" level="INFO">VALUE: 56441625</msg>
<status status="PASS" starttime="20201112 09:56:13.419" endtime="20201112 09:56:13.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.409" endtime="20201112 09:56:13.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.431" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:13.429" endtime="20201112 09:56:13.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.435" level="INFO">VALUE: [56451732, 56461709, 56471709, 56481709, 56491709, 56501709, 56511709, 56521709, 56531709, 56541709, 56551709, 56561709, 56571709, 56581709, 56591709, 56601709, 56611709, 56621709, 56631709, 56641709, 56651709, 56661709, 56671709, 56681709, 56691709, 56701709, 56711709, 56721709, 56731709, 56741709, 56751709, 56761709, 56771709, 56781709, 56791709, 56801709, 56811709, 56821709, 56831709, 56841709, 56851709, 56861709, 56871709, 56881709, 56891709, 56901709, 56911709, 56921709, 56931709, 56941709, 56951709, 56961709, 56971709, 56981709, 56991709, 57001709, 57011709, 57021709, 57031709, 57041709, 57051709, 57061709, 57071709, 57081709, 57091709, 57101709, 57111709, 57121709, 57131709, 57141709, 57151709, 57161709, 57171709, 57181709, 57191709, 57201709, 57211709, 57221709, 57231709, 57241709, 57251709, 57261709, 57271709, 57281709, 57291709, 57301709, 57311709, 57321709, 57331709, 57341709, 57351709, 57361709, 57371709, 57381709, 57391709, 57401709, 57411709, 57421709, 57431709, 57441709]</msg>
<status status="PASS" starttime="20201112 09:56:13.433" endtime="20201112 09:56:13.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.424" endtime="20201112 09:56:13.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.450" endtime="20201112 09:56:13.742"></status>
</kw>
<msg timestamp="20201112 09:56:13.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018092431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028201167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:13.447" endtime="20201112 09:56:13.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018092431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028201167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:13.745" endtime="20201112 09:56:13.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.753" endtime="20201112 09:56:13.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.442" endtime="20201112 09:56:13.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.438" endtime="20201112 09:56:13.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:13.779" level="INFO">${RESULT} = {'time': [0.018092431, 0.028201167, 0.038178556, 0.048179472, 0.058180403, 0.068181319, 0.078182236, 0.088183153, 0.098184083, 0.108184986, 0.118185917, 0.128186819, 0.13818775, 0.148188667, 0.1581895...</msg>
<status status="PASS" starttime="20201112 09:56:13.756" endtime="20201112 09:56:13.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.784" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:13.783" endtime="20201112 09:56:13.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.786" level="INFO">VALUE: 0.018092431</msg>
<status status="PASS" starttime="20201112 09:56:13.785" endtime="20201112 09:56:13.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.780" endtime="20201112 09:56:13.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.791" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:13.790" endtime="20201112 09:56:13.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.793" level="INFO">VALUE: [0.028201167, 0.038178556, 0.048179472, 0.058180403, 0.068181319, 0.078182236, 0.088183153, 0.098184083, 0.108184986, 0.118185917, 0.128186819, 0.13818775, 0.148188667, 0.158189583, 0.168190514, 0.178191431, 0.188192347, 0.198193264, 0.208194194, 0.218195111, 0.228196042, 0.238196944, 0.248197875, 0.258198806, 0.268199708, 0.278200639, 0.288201556, 0.298202472, 0.308203389, 0.318204319, 0.32820525, 0.338206153, 0.348207083, 0.358208, 0.368208931, 0.378209917, 0.388210764, 0.398211681, 0.408212597, 0.418213528, 0.428214458, 0.438215361, 0.448216292, 0.458217264, 0.468218139, 0.478219069, 0.488219972, 0.498220889, 0.508221819, 0.518222736, 0.528223653, 0.538224611, 0.5482255, 0.558226444, 0.568227347, 0.578228264, 0.588229194, 0.598230111, 0.608231028, 0.618231958, 0.628232875, 0.638233792, 0.648234722, 0.658235639, 0.668236569, 0.678237486, 0.688238403, 0.698239347, 0.708240306, 0.718241181, 0.728242111, 0.738243014, 0.748243931, 0.758244875, 0.768245778, 0.778246722, 0.788247625, 0.798248542, 0.808249486, 0.818250403, 0.828251319, 0.838252236, 0.848253181, 0.858254097, 0.868255042, 0.878255958, 0.888256847, 0.898257778, 0.908258681, 0.918259611, 0.928260528, 0.938261458, 0.948262375, 0.958263292, 0.968264236, 0.978265139, 0.988266056, 0.998266986, 1.008267903, 1.018268819] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:13.792" endtime="20201112 09:56:13.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.787" endtime="20201112 09:56:13.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.797" endtime="20201112 09:56:13.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:13.800" endtime="20201112 09:56:13.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.799" endtime="20201112 09:56:13.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.795" endtime="20201112 09:56:13.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.270" endtime="20201112 09:56:13.821"></status>
</kw>
<msg timestamp="20201112 09:56:13.821" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.829" endtime="20201112 09:56:15.921"></status>
</kw>
<msg timestamp="20201112 09:56:15.922" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58993170, 'wakeups': [59003278, 59013254, 59023254, 59033254, 59043254...</msg>
<status status="PASS" starttime="20201112 09:56:13.827" endtime="20201112 09:56:15.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.928" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58993170, 'wakeups': [59003278, 59013254, 59023254, 59033254, 59043254...</msg>
<status status="PASS" starttime="20201112 09:56:15.925" endtime="20201112 09:56:15.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:15.931" endtime="20201112 09:56:15.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.825" endtime="20201112 09:56:15.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.823" endtime="20201112 09:56:15.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:15.941" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [59003278, 59013254, 59023254, 59033254, 59043254, 59053254, 59063254, 59073254, 59083254, 59093254, 59103254, 59113254, 59123254, 59133254, 59143254, 59153254, 59...</msg>
<status status="PASS" starttime="20201112 09:56:15.937" endtime="20201112 09:56:15.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.950" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:15.948" endtime="20201112 09:56:15.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.954" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:15.952" endtime="20201112 09:56:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.943" endtime="20201112 09:56:15.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.964" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:15.962" endtime="20201112 09:56:15.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.968" level="INFO">VALUE: 58993170</msg>
<status status="PASS" starttime="20201112 09:56:15.966" endtime="20201112 09:56:15.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.957" endtime="20201112 09:56:15.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.978" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:15.976" endtime="20201112 09:56:15.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:15.985" level="INFO">VALUE: [59003278, 59013254, 59023254, 59033254, 59043254, 59053254, 59063254, 59073254, 59083254, 59093254, 59103254, 59113254, 59123254, 59133254, 59143254, 59153254, 59163254, 59173254, 59183254, 59193254, 59203254, 59213254, 59223254, 59233254, 59243254, 59253254, 59263254, 59273254, 59283254, 59293254, 59303254, 59313254, 59323254, 59333254, 59343254, 59353254, 59363254, 59373254, 59383254, 59393254, 59403254, 59413254, 59423254, 59433254, 59443254, 59453254, 59463254, 59473254, 59483254, 59493254, 59503254, 59513254, 59523254, 59533254, 59543254, 59553254, 59563254, 59573254, 59583254, 59593254, 59603254, 59613254, 59623254, 59633254, 59643254, 59653254, 59663254, 59673254, 59683254, 59693254, 59703254, 59713254, 59723254, 59733254, 59743254, 59753254, 59763254, 59773254, 59783254, 59793254, 59803254, 59813254, 59823254, 59833254, 59843254, 59853254, 59863254, 59873254, 59883254, 59893254, 59903254, 59913254, 59923254, 59933254, 59943254, 59953254, 59963254, 59973254, 59983254, 59993254]</msg>
<status status="PASS" starttime="20201112 09:56:15.980" endtime="20201112 09:56:15.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.971" endtime="20201112 09:56:15.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.008" endtime="20201112 09:56:16.303"></status>
</kw>
<msg timestamp="20201112 09:56:16.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018201292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028310333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:16.005" endtime="20201112 09:56:16.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018201292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028310333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:16.307" endtime="20201112 09:56:16.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.314" endtime="20201112 09:56:16.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.999" endtime="20201112 09:56:16.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:15.988" endtime="20201112 09:56:16.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:16.341" level="INFO">${RESULT} = {'time': [0.018201292, 0.028310333, 0.038286694, 0.048287625, 0.058288569, 0.068289458, 0.078290375, 0.088291306, 0.098292222, 0.108293139, 0.118294069, 0.128294986, 0.138295917, 0.148296875, 0.158297...</msg>
<status status="PASS" starttime="20201112 09:56:16.318" endtime="20201112 09:56:16.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.345" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:16.344" endtime="20201112 09:56:16.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.347" level="INFO">VALUE: 0.018201292</msg>
<status status="PASS" starttime="20201112 09:56:16.346" endtime="20201112 09:56:16.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.341" endtime="20201112 09:56:16.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.352" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:16.351" endtime="20201112 09:56:16.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.354" level="INFO">VALUE: [0.028310333, 0.038286694, 0.048287625, 0.058288569, 0.068289458, 0.078290375, 0.088291306, 0.098292222, 0.108293139, 0.118294069, 0.128294986, 0.138295917, 0.148296875, 0.158297764, 0.168298667, 0.178299583, 0.1883005, 0.198301431, 0.208302361, 0.218303264, 0.228304194, 0.238305111, 0.248306097, 0.258306958, 0.268307889, 0.278308806, 0.288309708, 0.298310667, 0.308311556, 0.318312472, 0.328313403, 0.338314319, 0.348315236, 0.358316194, 0.368317083, 0.378318014, 0.388318931, 0.398319861, 0.408320764, 0.41832175, 0.428322625, 0.438323542, 0.448324444, 0.458325389, 0.468326347, 0.478327222, 0.488328139, 0.498329056, 0.508329986, 0.518330903, 0.528331833, 0.53833275, 0.548333681, 0.558334639, 0.568335556, 0.578336431, 0.588337347, 0.598338278, 0.608339194, 0.618340139, 0.628341042, 0.638342028, 0.648342903, 0.658343806, 0.668344722, 0.678345667, 0.688346583, 0.698347556, 0.708348417, 0.718349347, 0.728350292, 0.738351194, 0.748352097, 0.758353028, 0.768353944, 0.778354875, 0.788355806, 0.798356792, 0.808357639, 0.818358556, 0.828359472, 0.838360403, 0.848361319, 0.85836225, 0.868363167, 0.878364097, 0.888365028, 0.898365931, 0.908366861, 0.918367819, 0.928368708, 0.938369639, 0.948370542, 0.958371458, 0.968372403, 0.978373319, 0.988374264, 0.998375153, 1.008376069, 1.018377] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:16.353" endtime="20201112 09:56:16.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.348" endtime="20201112 09:56:16.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.357" endtime="20201112 09:56:16.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:16.362" endtime="20201112 09:56:16.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.359" endtime="20201112 09:56:16.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.356" endtime="20201112 09:56:16.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.822" endtime="20201112 09:56:16.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.715" endtime="20201112 09:56:16.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.714" endtime="20201112 09:56:16.383"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:16.385" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.394" endtime="20201112 09:56:18.487"></status>
</kw>
<msg timestamp="20201112 09:56:18.488" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61557681, 'wakeups': [61567805, 61577779, 61587779, 61597779, 61607779...</msg>
<status status="PASS" starttime="20201112 09:56:16.392" endtime="20201112 09:56:18.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.494" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61557681, 'wakeups': [61567805, 61577779, 61587779, 61597779, 61607779...</msg>
<status status="PASS" starttime="20201112 09:56:18.490" endtime="20201112 09:56:18.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.496" endtime="20201112 09:56:18.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.389" endtime="20201112 09:56:18.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.387" endtime="20201112 09:56:18.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:18.507" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [61567805, 61577779, 61587779, 61597779, 61607779, 61617779, 61627779, 61637779, 61647779, 61657779, 61667779, 61677779, 61687779, 61697779, 61707779, 61717779, 61...</msg>
<status status="PASS" starttime="20201112 09:56:18.503" endtime="20201112 09:56:18.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.515" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:18.513" endtime="20201112 09:56:18.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.520" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:18.518" endtime="20201112 09:56:18.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.509" endtime="20201112 09:56:18.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.530" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:18.528" endtime="20201112 09:56:18.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.534" level="INFO">VALUE: 61557681</msg>
<status status="PASS" starttime="20201112 09:56:18.532" endtime="20201112 09:56:18.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.523" endtime="20201112 09:56:18.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.544" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:18.542" endtime="20201112 09:56:18.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.549" level="INFO">VALUE: [61567805, 61577779, 61587779, 61597779, 61607779, 61617779, 61627779, 61637779, 61647779, 61657779, 61667779, 61677779, 61687779, 61697779, 61707779, 61717779, 61727779, 61737779, 61747779, 61757779, 61767779, 61777779, 61787779, 61797779, 61807779, 61817779, 61827779, 61837779, 61847779, 61857779, 61867779, 61877779, 61887779, 61897779, 61907779, 61917779, 61927779, 61937779, 61947779, 61957779, 61967779, 61977779, 61987779, 61997779, 62007779, 62017779, 62027779, 62037779, 62047779, 62057779, 62067779, 62077779, 62087779, 62097779, 62107779, 62117779, 62127779, 62137779, 62147779, 62157779, 62167779, 62177779, 62187779, 62197779, 62207779, 62217779, 62227779, 62237779, 62247779, 62257779, 62267779, 62277779, 62287779, 62297779, 62307779, 62317779, 62327779, 62337779, 62347779, 62357779, 62367779, 62377779, 62387779, 62397779, 62407779, 62417779, 62427779, 62437779, 62447779, 62457779, 62467779, 62477779, 62487779, 62497779, 62507779, 62517779, 62527779, 62537779, 62547779, 62557779]</msg>
<status status="PASS" starttime="20201112 09:56:18.546" endtime="20201112 09:56:18.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.537" endtime="20201112 09:56:18.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.564" endtime="20201112 09:56:18.861"></status>
</kw>
<msg timestamp="20201112 09:56:18.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021234903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0313605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:56:18.561" endtime="20201112 09:56:18.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021234903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0313605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:56:18.864" endtime="20201112 09:56:18.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.872" endtime="20201112 09:56:18.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.555" endtime="20201112 09:56:18.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.552" endtime="20201112 09:56:18.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:18.898" level="INFO">${RESULT} = {'time': [0.021234903, 0.0313605, 0.041335111, 0.051336042, 0.061336875, 0.071337819, 0.081338736, 0.091339653, 0.101340556, 0.111341486, 0.121342417, 0.131343389, 0.14134425, 0.151345167, 0.161346097...</msg>
<status status="PASS" starttime="20201112 09:56:18.876" endtime="20201112 09:56:18.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.902" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:18.901" endtime="20201112 09:56:18.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.904" level="INFO">VALUE: 0.021234903</msg>
<status status="PASS" starttime="20201112 09:56:18.904" endtime="20201112 09:56:18.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.899" endtime="20201112 09:56:18.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.910" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:18.909" endtime="20201112 09:56:18.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.912" level="INFO">VALUE: [0.0313605, 0.041335111, 0.051336042, 0.061336875, 0.071337819, 0.081338736, 0.091339653, 0.101340556, 0.111341486, 0.121342417, 0.131343389, 0.14134425, 0.151345167, 0.161346097, 0.171347014, 0.181347986, 0.191348889, 0.201349764, 0.211350694, 0.221351611, 0.231352528, 0.241353486, 0.251354389, 0.261355319, 0.271356208, 0.281357125, 0.291358056, 0.301358972, 0.311359903, 0.321360833, 0.331361736, 0.341362667, 0.351363583, 0.361364486, 0.371365431, 0.381366333, 0.391367278, 0.401368167, 0.411369097, 0.421370014, 0.431370958, 0.441371861, 0.451372792, 0.461373694, 0.471374625, 0.481375542, 0.491376486, 0.501377458, 0.511378319, 0.521379222, 0.531380181, 0.541381083, 0.551382042, 0.561382917, 0.571383847, 0.58138475, 0.591385681, 0.601386597, 0.611387528, 0.621388444, 0.631389375, 0.641390292, 0.651391222, 0.661392125, 0.671393069, 0.681393972, 0.691394917, 0.701395806, 0.71139675, 0.721397653, 0.731398583, 0.741399514, 0.751400431, 0.761401347, 0.771402292, 0.781403181, 0.791404111, 0.801405042, 0.811405972, 0.821406875, 0.831407819, 0.841408708, 0.851409653, 0.861410639, 0.871411486, 0.881412417, 0.891413347, 0.901414236, 0.911415181, 0.921416097, 0.931417014, 0.941417931, 0.951418875, 0.961419764, 0.971420708, 0.981421611, 0.991422542, 1.001423472, 1.011424458, 1.021425319] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:18.911" endtime="20201112 09:56:18.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.906" endtime="20201112 09:56:18.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.915" endtime="20201112 09:56:18.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:18.918" endtime="20201112 09:56:18.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.917" endtime="20201112 09:56:18.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.913" endtime="20201112 09:56:18.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.386" endtime="20201112 09:56:18.939"></status>
</kw>
<msg timestamp="20201112 09:56:18.939" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.948" endtime="20201112 09:56:21.041"></status>
</kw>
<msg timestamp="20201112 09:56:21.043" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64112056, 'wakeups': [64122180, 64132154, 64142154, 64152154, 64162154...</msg>
<status status="PASS" starttime="20201112 09:56:18.946" endtime="20201112 09:56:21.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.048" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64112056, 'wakeups': [64122180, 64132154, 64142154, 64152154, 64162154...</msg>
<status status="PASS" starttime="20201112 09:56:21.045" endtime="20201112 09:56:21.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.051" endtime="20201112 09:56:21.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.943" endtime="20201112 09:56:21.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.941" endtime="20201112 09:56:21.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:21.061" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [64122180, 64132154, 64142154, 64152154, 64162154, 64172154, 64182154, 64192154, 64202154, 64212154, 64222154, 64232154, 64242154, 64252154, 64262154, 64272154, 64...</msg>
<status status="PASS" starttime="20201112 09:56:21.057" endtime="20201112 09:56:21.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.075" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:21.073" endtime="20201112 09:56:21.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.079" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:21.077" endtime="20201112 09:56:21.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.068" endtime="20201112 09:56:21.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.089" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:21.087" endtime="20201112 09:56:21.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.093" level="INFO">VALUE: 64112056</msg>
<status status="PASS" starttime="20201112 09:56:21.091" endtime="20201112 09:56:21.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.082" endtime="20201112 09:56:21.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.104" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:21.101" endtime="20201112 09:56:21.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.108" level="INFO">VALUE: [64122180, 64132154, 64142154, 64152154, 64162154, 64172154, 64182154, 64192154, 64202154, 64212154, 64222154, 64232154, 64242154, 64252154, 64262154, 64272154, 64282154, 64292154, 64302154, 64312154, 64322154, 64332154, 64342154, 64352154, 64362154, 64372154, 64382154, 64392154, 64402154, 64412154, 64422154, 64432154, 64442154, 64452154, 64462154, 64472154, 64482154, 64492154, 64502154, 64512154, 64522154, 64532154, 64542154, 64552154, 64562154, 64572154, 64582154, 64592154, 64602154, 64612154, 64622154, 64632154, 64642154, 64652154, 64662154, 64672154, 64682154, 64692154, 64702154, 64712154, 64722154, 64732154, 64742154, 64752154, 64762154, 64772154, 64782154, 64792154, 64802154, 64812154, 64822154, 64832154, 64842154, 64852154, 64862154, 64872154, 64882154, 64892154, 64902154, 64912154, 64922154, 64932154, 64942154, 64952154, 64962154, 64972154, 64982154, 64992154, 65002154, 65012154, 65022154, 65032154, 65042154, 65052154, 65062154, 65072154, 65082154, 65092154, 65102154, 65112154]</msg>
<status status="PASS" starttime="20201112 09:56:21.106" endtime="20201112 09:56:21.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.096" endtime="20201112 09:56:21.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.125" endtime="20201112 09:56:21.422"></status>
</kw>
<msg timestamp="20201112 09:56:21.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018954847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029080194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:21.121" endtime="20201112 09:56:21.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018954847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029080194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:21.425" endtime="20201112 09:56:21.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.433" endtime="20201112 09:56:21.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.116" endtime="20201112 09:56:21.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.112" endtime="20201112 09:56:21.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:21.460" level="INFO">${RESULT} = {'time': [0.018954847, 0.029080194, 0.039054792, 0.049055694, 0.059056569, 0.0690575, 0.079058417, 0.089059375, 0.099060278, 0.10906125, 0.119062139, 0.129063069, 0.139063944, 0.149064861, 0.159065778...</msg>
<status status="PASS" starttime="20201112 09:56:21.436" endtime="20201112 09:56:21.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.464" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:21.463" endtime="20201112 09:56:21.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.466" level="INFO">VALUE: 0.018954847</msg>
<status status="PASS" starttime="20201112 09:56:21.465" endtime="20201112 09:56:21.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.461" endtime="20201112 09:56:21.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.472" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:21.471" endtime="20201112 09:56:21.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.474" level="INFO">VALUE: [0.029080194, 0.039054792, 0.049055694, 0.059056569, 0.0690575, 0.079058417, 0.089059375, 0.099060278, 0.10906125, 0.119062139, 0.129063069, 0.139063944, 0.149064861, 0.159065778, 0.169066722, 0.179067625, 0.189068556, 0.199069458, 0.209070389, 0.219071347, 0.229072236, 0.239073153, 0.249074069, 0.259074986, 0.269075917, 0.279076819, 0.28907775, 0.299078681, 0.309079597, 0.319080514, 0.329081444, 0.339082361, 0.349083278, 0.359084194, 0.369085125, 0.379086028, 0.389086972, 0.399087875, 0.409088806, 0.419089736, 0.429090722, 0.439091556, 0.449092569, 0.459093417, 0.469094361, 0.47909525, 0.489096181, 0.499097097, 0.509098042, 0.519098944, 0.529099875, 0.539100792, 0.549101764, 0.559102653, 0.569103639, 0.579104458, 0.589105472, 0.599106319, 0.609107236, 0.619108153, 0.629109083, 0.63911, 0.649110944, 0.659111833, 0.669112778, 0.679113681, 0.689114611, 0.699115542, 0.709116458, 0.719117458, 0.729118306, 0.739119222, 0.749120194, 0.759121125, 0.769121986, 0.779122903, 0.789123833, 0.799124764, 0.809125681, 0.819126597, 0.829127542, 0.839128431, 0.849129375, 0.859130278, 0.869131208, 0.879132139, 0.889133069, 0.899133972, 0.909134917, 0.919135819, 0.929136778, 0.939137667, 0.949138583, 0.959139556, 0.969140431, 0.979141347, 0.989142278, 0.999143194, 1.009144139, 1.019145028] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:21.473" endtime="20201112 09:56:21.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.468" endtime="20201112 09:56:21.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.477" endtime="20201112 09:56:21.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:21.481" endtime="20201112 09:56:21.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.479" endtime="20201112 09:56:21.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.476" endtime="20201112 09:56:21.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.940" endtime="20201112 09:56:21.502"></status>
</kw>
<msg timestamp="20201112 09:56:21.502" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.510" endtime="20201112 09:56:23.602"></status>
</kw>
<msg timestamp="20201112 09:56:23.603" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66673676, 'wakeups': [66683800, 66693774, 66703774, 66713774, 66723774...</msg>
<status status="PASS" starttime="20201112 09:56:21.508" endtime="20201112 09:56:23.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.609" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66673676, 'wakeups': [66683800, 66693774, 66703774, 66713774, 66723774...</msg>
<status status="PASS" starttime="20201112 09:56:23.605" endtime="20201112 09:56:23.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.611" endtime="20201112 09:56:23.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.506" endtime="20201112 09:56:23.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.504" endtime="20201112 09:56:23.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:23.622" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [66683800, 66693774, 66703774, 66713774, 66723774, 66733774, 66743774, 66753774, 66763774, 66773774, 66783774, 66793774, 66803774, 66813774, 66823774, 66833774, 66...</msg>
<status status="PASS" starttime="20201112 09:56:23.618" endtime="20201112 09:56:23.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.630" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:23.628" endtime="20201112 09:56:23.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.635" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:23.633" endtime="20201112 09:56:23.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.624" endtime="20201112 09:56:23.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.645" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:23.643" endtime="20201112 09:56:23.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.651" level="INFO">VALUE: 66673676</msg>
<status status="PASS" starttime="20201112 09:56:23.647" endtime="20201112 09:56:23.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.638" endtime="20201112 09:56:23.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.661" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:23.659" endtime="20201112 09:56:23.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.666" level="INFO">VALUE: [66683800, 66693774, 66703774, 66713774, 66723774, 66733774, 66743774, 66753774, 66763774, 66773774, 66783774, 66793774, 66803774, 66813774, 66823774, 66833774, 66843774, 66853774, 66863774, 66873774, 66883774, 66893774, 66903774, 66913774, 66923774, 66933774, 66943774, 66953774, 66963774, 66973774, 66983774, 66993774, 67003774, 67013774, 67023774, 67033774, 67043774, 67053774, 67063774, 67073774, 67083774, 67093774, 67103774, 67113774, 67123774, 67133774, 67143774, 67153774, 67163774, 67173774, 67183774, 67193774, 67203774, 67213774, 67223774, 67233774, 67243774, 67253774, 67263774, 67273774, 67283774, 67293774, 67303774, 67313774, 67323774, 67333774, 67343774, 67353774, 67363774, 67373774, 67383774, 67393774, 67403774, 67413774, 67423774, 67433774, 67443774, 67453774, 67463774, 67473774, 67483774, 67493774, 67503774, 67513774, 67523774, 67533774, 67543774, 67553774, 67563774, 67573774, 67583774, 67593774, 67603774, 67613774, 67623774, 67633774, 67643774, 67653774, 67663774, 67673774]</msg>
<status status="PASS" starttime="20201112 09:56:23.664" endtime="20201112 09:56:23.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.654" endtime="20201112 09:56:23.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.682" endtime="20201112 09:56:23.979"></status>
</kw>
<msg timestamp="20201112 09:56:23.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018060389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028185528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:23.678" endtime="20201112 09:56:23.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:23.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018060389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028185528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:23.983" endtime="20201112 09:56:23.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:23.990" endtime="20201112 09:56:23.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.673" endtime="20201112 09:56:23.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:23.670" endtime="20201112 09:56:23.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:24.016" level="INFO">${RESULT} = {'time': [0.018060389, 0.028185528, 0.038160069, 0.048160986, 0.058161903, 0.068162819, 0.07816375, 0.088164667, 0.098165569, 0.108166583, 0.118167472, 0.128168361, 0.138169333, 0.148170208, 0.1581710...</msg>
<status status="PASS" starttime="20201112 09:56:23.994" endtime="20201112 09:56:24.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.021" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:24.020" endtime="20201112 09:56:24.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.023" level="INFO">VALUE: 0.018060389</msg>
<status status="PASS" starttime="20201112 09:56:24.022" endtime="20201112 09:56:24.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.017" endtime="20201112 09:56:24.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.028" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:24.027" endtime="20201112 09:56:24.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.031" level="INFO">VALUE: [0.028185528, 0.038160069, 0.048160986, 0.058161903, 0.068162819, 0.07816375, 0.088164667, 0.098165569, 0.108166583, 0.118167472, 0.128168361, 0.138169333, 0.148170208, 0.158171097, 0.168172028, 0.178172944, 0.188173889, 0.198174778, 0.208175708, 0.218176625, 0.228177556, 0.238178472, 0.248179389, 0.258180306, 0.26818125, 0.278182139, 0.288183111, 0.298184028, 0.308184944, 0.318185833, 0.328186778, 0.338187667, 0.348188611, 0.358189542, 0.368190458, 0.378191361, 0.388192292, 0.398193208, 0.408194181, 0.418195042, 0.428196014, 0.438196903, 0.448197833, 0.458198722, 0.468199653, 0.478200569, 0.488201514, 0.498202417, 0.508203347, 0.51820425, 0.528205194, 0.538206111, 0.548207028, 0.558207944, 0.568208875, 0.578209806, 0.588210722, 0.598211625, 0.608212556, 0.618213472, 0.628214403, 0.638215319, 0.64821625, 0.658217153, 0.668218097, 0.678219014, 0.688219944, 0.698220861, 0.708221792, 0.718222694, 0.728223625, 0.738224528, 0.748225472, 0.758226375, 0.768227306, 0.778228222, 0.788229153, 0.798230069, 0.808231083, 0.818231931, 0.828232931, 0.838233764, 0.848234694, 0.858235611, 0.868236556, 0.878237444, 0.888238375, 0.898239292, 0.908240222, 0.918241139, 0.928242056, 0.938243, 0.948243903, 0.958244833, 0.96824575, 0.978246681, 0.988247597, 0.9982485, 1.008249444, 1.018250347] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:24.030" endtime="20201112 09:56:24.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.024" endtime="20201112 09:56:24.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.034" endtime="20201112 09:56:24.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:24.037" endtime="20201112 09:56:24.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.036" endtime="20201112 09:56:24.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.032" endtime="20201112 09:56:24.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.502" endtime="20201112 09:56:24.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.384" endtime="20201112 09:56:24.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.383" endtime="20201112 09:56:24.059"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:24.062" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.069" endtime="20201112 09:56:26.162"></status>
</kw>
<msg timestamp="20201112 09:56:26.164" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69233537, 'wakeups': [69243676, 69253651, 69263638, 69273651, 692836...</msg>
<status status="PASS" starttime="20201112 09:56:24.068" endtime="20201112 09:56:26.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.169" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69233537, 'wakeups': [69243676, 69253651, 69263638, 69273651, 692836...</msg>
<status status="PASS" starttime="20201112 09:56:26.166" endtime="20201112 09:56:26.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.172" endtime="20201112 09:56:26.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.065" endtime="20201112 09:56:26.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.063" endtime="20201112 09:56:26.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:26.183" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [69243676, 69253651, 69263638, 69273651, 69283638, 69293651, 69303638, 69313651, 69323638, 69333651, 69343638, 69353651, 69363638, 69373651, 69383638, 69393651, 69...</msg>
<status status="PASS" starttime="20201112 09:56:26.179" endtime="20201112 09:56:26.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.191" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:26.189" endtime="20201112 09:56:26.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.195" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:26.193" endtime="20201112 09:56:26.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.184" endtime="20201112 09:56:26.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.205" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:26.203" endtime="20201112 09:56:26.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.209" level="INFO">VALUE: 69233537</msg>
<status status="PASS" starttime="20201112 09:56:26.207" endtime="20201112 09:56:26.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.198" endtime="20201112 09:56:26.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.220" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:26.218" endtime="20201112 09:56:26.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.225" level="INFO">VALUE: [69243676, 69253651, 69263638, 69273651, 69283638, 69293651, 69303638, 69313651, 69323638, 69333651, 69343638, 69353651, 69363638, 69373651, 69383638, 69393651, 69403638, 69413651, 69423638, 69433651, 69443638, 69453651, 69463638, 69473651, 69483638, 69493651, 69503638, 69513651, 69523638, 69533651, 69543638, 69553651, 69563638, 69573651, 69583638, 69593651, 69603638, 69613651, 69623638, 69633651, 69643638, 69653651, 69663638, 69673651, 69683638, 69693651, 69703638, 69713651, 69723638, 69733651, 69743638, 69753651, 69763638, 69773651, 69783638, 69793651, 69803638, 69813651, 69823638, 69833651, 69843638, 69853651, 69863638, 69873651, 69883638, 69893651, 69903638, 69913651, 69923638, 69933651, 69943638, 69953651, 69963638, 69973651, 69983638, 69993651, 70003638, 70013651, 70023638, 70033651, 70043638, 70053651, 70063638, 70073651, 70083638, 70093651, 70103638, 70113651, 70123638, 70133651, 70143638, 70153651, 70163638, 70173651, 70183638, 70193651, 70203638, 70213651, 70223638, 70233651]</msg>
<status status="PASS" starttime="20201112 09:56:26.222" endtime="20201112 09:56:26.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.213" endtime="20201112 09:56:26.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.250" endtime="20201112 09:56:26.544"></status>
</kw>
<msg timestamp="20201112 09:56:26.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020961139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031100722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:26.245" endtime="20201112 09:56:26.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020961139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031100722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:26.548" endtime="20201112 09:56:26.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.555" endtime="20201112 09:56:26.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.232" endtime="20201112 09:56:26.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.228" endtime="20201112 09:56:26.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:26.582" level="INFO">${RESULT} = {'time': [0.020961139, 0.031100722, 0.041076472, 0.051065181, 0.061078319, 0.071067014, 0.081080139, 0.091068847, 0.101081972, 0.111070736, 0.121083819, 0.131072528, 0.141085667, 0.151074361, 0.161087...</msg>
<status status="PASS" starttime="20201112 09:56:26.559" endtime="20201112 09:56:26.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.586" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:26.585" endtime="20201112 09:56:26.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.588" level="INFO">VALUE: 0.020961139</msg>
<status status="PASS" starttime="20201112 09:56:26.587" endtime="20201112 09:56:26.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.583" endtime="20201112 09:56:26.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.593" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:26.592" endtime="20201112 09:56:26.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.595" level="INFO">VALUE: [0.031100722, 0.041076472, 0.051065181, 0.061078319, 0.071067014, 0.081080139, 0.091068847, 0.101081972, 0.111070736, 0.121083819, 0.131072528, 0.141085667, 0.151074361, 0.1610875, 0.171076222, 0.181089333, 0.191078042, 0.201091181, 0.211079931, 0.221093014, 0.231081736, 0.241094861, 0.251083569, 0.261096722, 0.271085403, 0.281098542, 0.291087264, 0.301100403, 0.311089111, 0.321102222, 0.331090958, 0.341104097, 0.351092778, 0.361105903, 0.371094639, 0.38110775, 0.391096458, 0.401109639, 0.411098306, 0.421111444, 0.431100139, 0.441113319, 0.451101986, 0.461115125, 0.471103833, 0.481117014, 0.491105667, 0.501118819, 0.511107514, 0.521120653, 0.531109361, 0.5411225, 0.551111194, 0.561124333, 0.571113111, 0.581126181, 0.591114889, 0.601128028, 0.611116736, 0.621129861, 0.631118569, 0.641131722, 0.651120417, 0.661133556, 0.671122278, 0.681135403, 0.691124097, 0.701137236, 0.711125944, 0.721139097, 0.731127792, 0.741140944, 0.751129639, 0.761142764, 0.771131472, 0.781144611, 0.791133319, 0.801146472, 0.811135194, 0.821148306, 0.831137014, 0.841150139, 0.851138847, 0.861152, 0.871140694, 0.881153833, 0.891142542, 0.901155722, 0.911144375, 0.921157514, 0.931146222, 0.941159361, 0.951148083, 0.961161208, 0.971149917, 0.981163056, 0.99115175, 1.001164903, 1.011153597, 1.021166736] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:26.594" endtime="20201112 09:56:26.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.589" endtime="20201112 09:56:26.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.599" endtime="20201112 09:56:26.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:26.602" endtime="20201112 09:56:26.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.600" endtime="20201112 09:56:26.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.597" endtime="20201112 09:56:26.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.062" endtime="20201112 09:56:26.623"></status>
</kw>
<msg timestamp="20201112 09:56:26.623" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.632" endtime="20201112 09:56:28.724"></status>
</kw>
<msg timestamp="20201112 09:56:28.726" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71795840, 'wakeups': [71805980, 71815954, 71825941, 71835954, 718459...</msg>
<status status="PASS" starttime="20201112 09:56:26.629" endtime="20201112 09:56:28.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.732" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71795840, 'wakeups': [71805980, 71815954, 71825941, 71835954, 718459...</msg>
<status status="PASS" starttime="20201112 09:56:28.728" endtime="20201112 09:56:28.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:28.735" endtime="20201112 09:56:28.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.627" endtime="20201112 09:56:28.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.625" endtime="20201112 09:56:28.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:28.746" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [71805980, 71815954, 71825941, 71835954, 71845941, 71855954, 71865941, 71875954, 71885941, 71895954, 71905941, 71915954, 71925941, 71935954, 71945941, 71955954, 71...</msg>
<status status="PASS" starttime="20201112 09:56:28.742" endtime="20201112 09:56:28.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.754" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:28.752" endtime="20201112 09:56:28.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.759" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:28.756" endtime="20201112 09:56:28.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.747" endtime="20201112 09:56:28.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.769" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:28.766" endtime="20201112 09:56:28.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.773" level="INFO">VALUE: 71795840</msg>
<status status="PASS" starttime="20201112 09:56:28.771" endtime="20201112 09:56:28.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.762" endtime="20201112 09:56:28.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.788" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:28.784" endtime="20201112 09:56:28.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:28.795" level="INFO">VALUE: [71805980, 71815954, 71825941, 71835954, 71845941, 71855954, 71865941, 71875954, 71885941, 71895954, 71905941, 71915954, 71925941, 71935954, 71945941, 71955954, 71965941, 71975954, 71985941, 71995954, 72005941, 72015954, 72025941, 72035954, 72045941, 72055954, 72065941, 72075954, 72085941, 72095954, 72105941, 72115954, 72125941, 72135954, 72145941, 72155954, 72165941, 72175954, 72185941, 72195954, 72205941, 72215954, 72225941, 72235954, 72245941, 72255954, 72265941, 72275954, 72285941, 72295954, 72305941, 72315954, 72325941, 72335954, 72345941, 72355954, 72365941, 72375954, 72385941, 72395954, 72405941, 72415954, 72425941, 72435954, 72445941, 72455954, 72465941, 72475954, 72485941, 72495954, 72505941, 72515954, 72525941, 72535954, 72545941, 72555954, 72565941, 72575954, 72585941, 72595954, 72605941, 72615954, 72625941, 72635954, 72645941, 72655954, 72665941, 72675954, 72685941, 72695954, 72705941, 72715954, 72725941, 72735954, 72745941, 72755954, 72765941, 72775954, 72785941, 72795954]</msg>
<status status="PASS" starttime="20201112 09:56:28.791" endtime="20201112 09:56:28.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.776" endtime="20201112 09:56:28.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:28.812" endtime="20201112 09:56:29.103"></status>
</kw>
<msg timestamp="20201112 09:56:29.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019162417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029302792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:28.811" endtime="20201112 09:56:29.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019162417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029302792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:29.106" endtime="20201112 09:56:29.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.114" endtime="20201112 09:56:29.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.806" endtime="20201112 09:56:29.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:28.800" endtime="20201112 09:56:29.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:29.141" level="INFO">${RESULT} = {'time': [0.019162417, 0.029302792, 0.039277611, 0.049266306, 0.059279431, 0.069268139, 0.079281278, 0.089270069, 0.099283125, 0.109271819, 0.119284958, 0.129273667, 0.139286792, 0.1492755, 0.15928863...</msg>
<status status="PASS" starttime="20201112 09:56:29.117" endtime="20201112 09:56:29.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.146" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:29.145" endtime="20201112 09:56:29.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.148" level="INFO">VALUE: 0.019162417</msg>
<status status="PASS" starttime="20201112 09:56:29.147" endtime="20201112 09:56:29.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.142" endtime="20201112 09:56:29.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.153" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:29.152" endtime="20201112 09:56:29.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.155" level="INFO">VALUE: [0.029302792, 0.039277611, 0.049266306, 0.059279431, 0.069268139, 0.079281278, 0.089270069, 0.099283125, 0.109271819, 0.119284958, 0.129273667, 0.139286792, 0.1492755, 0.159288639, 0.169277333, 0.179290472, 0.189279181, 0.199292319, 0.209281028, 0.219294153, 0.229282861, 0.239296, 0.249284722, 0.259297861, 0.269286542, 0.279299681, 0.289288403, 0.299301514, 0.309290222, 0.319303361, 0.329292083, 0.339305208, 0.349293903, 0.359307056, 0.36929575, 0.379308903, 0.389297583, 0.399310722, 0.409299431, 0.419312583, 0.429301347, 0.439314403, 0.449303111, 0.45931625, 0.469304958, 0.479318097, 0.489306806, 0.499319944, 0.509308653, 0.519321792, 0.529310486, 0.539323639, 0.549312333, 0.559325458, 0.569314167, 0.579327319, 0.589316014, 0.599329153, 0.609317861, 0.619330986, 0.629319694, 0.639332833, 0.649321556, 0.659334708, 0.669323389, 0.679336514, 0.68932525, 0.699338361, 0.709327069, 0.719340222, 0.729328944, 0.739342042, 0.74933075, 0.759343889, 0.769332597, 0.779345736, 0.789334472, 0.799347583, 0.809336292, 0.819349417, 0.829338125, 0.839351278, 0.849339972, 0.859353125, 0.869341819, 0.879354958, 0.889343653, 0.899356847, 0.9093455, 0.919358639, 0.929347403, 0.939360486, 0.949349208, 0.959362319, 0.969351056, 0.979364167, 0.989352875, 0.999366028, 1.009354736, 1.019367847] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:29.154" endtime="20201112 09:56:29.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.149" endtime="20201112 09:56:29.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.158" endtime="20201112 09:56:29.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:29.162" endtime="20201112 09:56:29.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.160" endtime="20201112 09:56:29.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.157" endtime="20201112 09:56:29.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.624" endtime="20201112 09:56:29.182"></status>
</kw>
<msg timestamp="20201112 09:56:29.183" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.191" endtime="20201112 09:56:31.284"></status>
</kw>
<msg timestamp="20201112 09:56:31.285" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74354693, 'wakeups': [74364833, 74374807, 74384794, 74394807, 744047...</msg>
<status status="PASS" starttime="20201112 09:56:29.189" endtime="20201112 09:56:31.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.291" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74354693, 'wakeups': [74364833, 74374807, 74384794, 74394807, 744047...</msg>
<status status="PASS" starttime="20201112 09:56:31.287" endtime="20201112 09:56:31.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.293" endtime="20201112 09:56:31.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.187" endtime="20201112 09:56:31.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.185" endtime="20201112 09:56:31.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:31.304" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [74364833, 74374807, 74384794, 74394807, 74404794, 74414807, 74424794, 74434807, 74444794, 74454807, 74464794, 74474807, 74484794, 74494807, 74504794, 74514807, 74...</msg>
<status status="PASS" starttime="20201112 09:56:31.300" endtime="20201112 09:56:31.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.313" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:31.311" endtime="20201112 09:56:31.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.317" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:31.315" endtime="20201112 09:56:31.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.306" endtime="20201112 09:56:31.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.328" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:31.326" endtime="20201112 09:56:31.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.335" level="INFO">VALUE: 74354693</msg>
<status status="PASS" starttime="20201112 09:56:31.331" endtime="20201112 09:56:31.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.321" endtime="20201112 09:56:31.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.346" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:31.343" endtime="20201112 09:56:31.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.351" level="INFO">VALUE: [74364833, 74374807, 74384794, 74394807, 74404794, 74414807, 74424794, 74434807, 74444794, 74454807, 74464794, 74474807, 74484794, 74494807, 74504794, 74514807, 74524794, 74534807, 74544794, 74554807, 74564794, 74574807, 74584794, 74594807, 74604794, 74614807, 74624794, 74634807, 74644794, 74654807, 74664794, 74674807, 74684794, 74694807, 74704794, 74714807, 74724794, 74734807, 74744794, 74754807, 74764794, 74774807, 74784794, 74794807, 74804794, 74814807, 74824794, 74834807, 74844794, 74854807, 74864794, 74874807, 74884794, 74894807, 74904794, 74914807, 74924794, 74934807, 74944794, 74954807, 74964794, 74974807, 74984794, 74994807, 75004794, 75014807, 75024794, 75034807, 75044794, 75054807, 75064794, 75074807, 75084794, 75094807, 75104794, 75114807, 75124794, 75134807, 75144794, 75154807, 75164794, 75174807, 75184794, 75194807, 75204794, 75214807, 75224794, 75234807, 75244794, 75254807, 75264794, 75274807, 75284794, 75294807, 75304794, 75314807, 75324794, 75334807, 75344794, 75354807]</msg>
<status status="PASS" starttime="20201112 09:56:31.348" endtime="20201112 09:56:31.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.338" endtime="20201112 09:56:31.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.366" endtime="20201112 09:56:31.659"></status>
</kw>
<msg timestamp="20201112 09:56:31.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018186028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028326514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:31.363" endtime="20201112 09:56:31.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018186028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028326514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:31.662" endtime="20201112 09:56:31.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.670" endtime="20201112 09:56:31.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.358" endtime="20201112 09:56:31.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.354" endtime="20201112 09:56:31.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:31.696" level="INFO">${RESULT} = {'time': [0.018186028, 0.028326514, 0.038301306, 0.048290014, 0.058303167, 0.068291861, 0.078305, 0.088293694, 0.098306889, 0.108295528, 0.118308681, 0.128297375, 0.1383105, 0.148299222, 0.158312347, ...</msg>
<status status="PASS" starttime="20201112 09:56:31.673" endtime="20201112 09:56:31.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.701" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:56:31.700" endtime="20201112 09:56:31.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.703" level="INFO">VALUE: 0.018186028</msg>
<status status="PASS" starttime="20201112 09:56:31.702" endtime="20201112 09:56:31.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.697" endtime="20201112 09:56:31.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.708" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:31.707" endtime="20201112 09:56:31.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.711" level="INFO">VALUE: [0.028326514, 0.038301306, 0.048290014, 0.058303167, 0.068291861, 0.078305, 0.088293694, 0.098306889, 0.108295528, 0.118308681, 0.128297375, 0.1383105, 0.148299222, 0.158312347, 0.168301056, 0.178314181, 0.188302917, 0.198316042, 0.208304764, 0.218317861, 0.228306625, 0.238319722, 0.248308417, 0.258321556, 0.26831025, 0.278323389, 0.288312139, 0.298325278, 0.308313944, 0.318327083, 0.328315778, 0.338328917, 0.348317625, 0.358330764, 0.368319472, 0.378332667, 0.388321292, 0.398334444, 0.408323139, 0.418336319, 0.428325014, 0.438338111, 0.448326847, 0.458339972, 0.468328681, 0.478341806, 0.488330514, 0.498343639, 0.508332347, 0.518345556, 0.528334208, 0.538347333, 0.548336042, 0.558349194, 0.568337875, 0.578351014, 0.588339722, 0.598352847, 0.608341556, 0.618354708, 0.628343417, 0.638356611, 0.648345264, 0.658358375, 0.668347083, 0.678360222, 0.688348931, 0.698362069, 0.708350778, 0.718363903, 0.728352611, 0.73836575, 0.748354458, 0.758367611, 0.768356306, 0.778369431, 0.788358181, 0.798371278, 0.808359986, 0.818373125, 0.828361847, 0.838374972, 0.848363667, 0.858376806, 0.868365528, 0.878378667, 0.888367361, 0.8983805, 0.908369208, 0.918382347, 0.928371056, 0.938384181, 0.948372944, 0.958386056, 0.968374736, 0.978387861, 0.988376583, 0.998389722, 1.008378431, 1.018391556] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:31.710" endtime="20201112 09:56:31.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.704" endtime="20201112 09:56:31.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.714" endtime="20201112 09:56:31.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:31.718" endtime="20201112 09:56:31.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.716" endtime="20201112 09:56:31.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.713" endtime="20201112 09:56:31.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.183" endtime="20201112 09:56:31.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.060" endtime="20201112 09:56:31.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.059" endtime="20201112 09:56:31.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.117" endtime="20201112 09:56:31.739"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:55:15.040" endtime="20201112 09:56:31.740" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:55:13.681" endtime="20201112 09:56:31.743"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10-devel-1583-gbfb8f-HEAD</item>
</metadata>
<status status="PASS" starttime="20201112 09:53:29.882" endtime="20201112 09:56:31.760"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
