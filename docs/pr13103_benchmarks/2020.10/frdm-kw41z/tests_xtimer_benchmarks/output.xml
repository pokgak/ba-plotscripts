<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 12:25:46.100" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:25:46.657" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:25:46.665" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:25:47.941" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:25:46.655" endtime="20201112 12:25:47.941"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.944" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:25:47.942" endtime="20201112 12:25:47.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:46.654" endtime="20201112 12:25:47.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:47.947" endtime="20201112 12:25:48.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.946" endtime="20201112 12:25:48.132"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.146" endtime="20201112 12:25:48.166"></status>
</kw>
<msg timestamp="20201112 12:25:48.167" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:48.144" endtime="20201112 12:25:48.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.169" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:48.168" endtime="20201112 12:25:48.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.172" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:48.170" endtime="20201112 12:25:48.173"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:48.142" endtime="20201112 12:25:48.173"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:48.139" endtime="20201112 12:25:48.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.138" endtime="20201112 12:25:48.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:48.178" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:48.177" endtime="20201112 12:25:48.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.175" endtime="20201112 12:25:48.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.137" endtime="20201112 12:25:48.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.136" endtime="20201112 12:25:48.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.180" endtime="20201112 12:25:48.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.135" endtime="20201112 12:25:48.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.182" endtime="20201112 12:25:48.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.133" endtime="20201112 12:25:48.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:46.652" endtime="20201112 12:25:48.185"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:48.191" endtime="20201112 12:25:48.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.189" endtime="20201112 12:25:48.211"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.226" endtime="20201112 12:25:48.243"></status>
</kw>
<msg timestamp="20201112 12:25:48.244" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:48.224" endtime="20201112 12:25:48.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.246" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:48.245" endtime="20201112 12:25:48.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.249" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:48.247" endtime="20201112 12:25:48.249"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:48.221" endtime="20201112 12:25:48.250"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:48.219" endtime="20201112 12:25:48.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.217" endtime="20201112 12:25:48.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:48.255" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:48.254" endtime="20201112 12:25:48.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.252" endtime="20201112 12:25:48.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.216" endtime="20201112 12:25:48.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.215" endtime="20201112 12:25:48.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.256" endtime="20201112 12:25:48.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.213" endtime="20201112 12:25:48.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.212" endtime="20201112 12:25:48.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.188" endtime="20201112 12:25:48.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.266" endtime="20201112 12:25:48.281"></status>
</kw>
<msg timestamp="20201112 12:25:48.282" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:48.265" endtime="20201112 12:25:48.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.287" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:48.284" endtime="20201112 12:25:48.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.289" endtime="20201112 12:25:48.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.262" endtime="20201112 12:25:48.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.260" endtime="20201112 12:25:48.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.303" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:25:48.301" endtime="20201112 12:25:48.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.307" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:25:48.305" endtime="20201112 12:25:48.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.296" endtime="20201112 12:25:48.309"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:25:48.185" endtime="20201112 12:25:48.311" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:25:46.209" endtime="20201112 12:25:48.316"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.404" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:25:48.412" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:25:49.695" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:25:48.403" endtime="20201112 12:25:49.695"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.698" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:25:49.697" endtime="20201112 12:25:49.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.401" endtime="20201112 12:25:49.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:49.702" endtime="20201112 12:25:49.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.699" endtime="20201112 12:25:49.924"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.949" endtime="20201112 12:25:49.977"></status>
</kw>
<msg timestamp="20201112 12:25:49.978" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:49.946" endtime="20201112 12:25:49.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.983" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:49.980" endtime="20201112 12:25:49.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.991" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:49.985" endtime="20201112 12:25:49.992"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:49.941" endtime="20201112 12:25:49.993"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:49.937" endtime="20201112 12:25:49.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.934" endtime="20201112 12:25:49.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:50.002" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:50.001" endtime="20201112 12:25:50.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.997" endtime="20201112 12:25:50.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.932" endtime="20201112 12:25:50.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.931" endtime="20201112 12:25:50.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.006" endtime="20201112 12:25:50.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.929" endtime="20201112 12:25:50.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.012" endtime="20201112 12:25:50.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.926" endtime="20201112 12:25:50.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.400" endtime="20201112 12:25:50.016"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:50.022" endtime="20201112 12:25:50.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.021" endtime="20201112 12:25:50.042"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.055" endtime="20201112 12:25:51.581"></status>
</kw>
<msg timestamp="20201112 12:25:51.582" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:50.054" endtime="20201112 12:25:51.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.587" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:51.584" endtime="20201112 12:25:51.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.593" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:51.589" endtime="20201112 12:25:51.594"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:50.051" endtime="20201112 12:25:51.595"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:50.049" endtime="20201112 12:25:51.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.048" endtime="20201112 12:25:51.597"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:51.606" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:51.603" endtime="20201112 12:25:51.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.599" endtime="20201112 12:25:51.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.047" endtime="20201112 12:25:51.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.046" endtime="20201112 12:25:51.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.611" endtime="20201112 12:25:51.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.045" endtime="20201112 12:25:51.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.043" endtime="20201112 12:25:51.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.019" endtime="20201112 12:25:51.616"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:25:51.621" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.638" endtime="20201112 12:25:51.658"></status>
</kw>
<msg timestamp="20201112 12:25:51.659" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:51.633" endtime="20201112 12:25:51.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.661" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:51.660" endtime="20201112 12:25:51.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.662" endtime="20201112 12:25:51.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.628" endtime="20201112 12:25:51.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.624" endtime="20201112 12:25:51.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.671" endtime="20201112 12:25:51.970"></status>
</kw>
<msg timestamp="20201112 12:25:51.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.610292903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.610293375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:51.670" endtime="20201112 12:25:51.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.610292903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.610293375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:51.974" endtime="20201112 12:25:51.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.982" endtime="20201112 12:25:51.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.667" endtime="20201112 12:25:51.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.666" endtime="20201112 12:25:51.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.989" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:51.988" endtime="20201112 12:25:51.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.995" level="INFO">VALUE: [{'time': 1.610292903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.610293375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610302375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000147779e-06, 'source_diff': 9.000000000147779e-06}, {'time': 1.610302847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610309444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5970000000525886e-06, 'source_diff': 6.5970000000525886e-06}, {'time': 1.610309917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999998343004e-07, 'source_diff': 4.729999998343004e-07}, {'time': 1.610316611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000084799e-06, 'source_diff': 6.694000000084799e-06}, {'time': 1.610317097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000217468e-07, 'source_diff': 4.860000000217468e-07}, {'time': 1.610322958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999995897e-06, 'source_diff': 5.860999999995897e-06}, {'time': 1.610323431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.73000000056345e-07, 'source_diff': 4.73000000056345e-07}, {'time': 1.610328681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.249999999845656e-06, 'source_diff': 5.249999999845656e-06}, {'time': 1.610329153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610339097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944000000094988e-06, 'source_diff': 9.944000000094988e-06}, {'time': 1.610339569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.61034825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999954864e-06, 'source_diff': 8.680999999954864e-06}, {'time': 1.610348722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610352722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000115023e-06, 'source_diff': 4.000000000115023e-06}, {'time': 1.610353194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610363514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000119123e-05, 'source_diff': 1.0320000000119123e-05}, {'time': 1.610363986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610371806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819999999991722e-06, 'source_diff': 7.819999999991722e-06}, {'time': 1.610372278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610380625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.34699999985311e-06, 'source_diff': 8.34699999985311e-06}, {'time': 1.610381111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000217468e-07, 'source_diff': 4.860000000217468e-07}, {'time': 1.610390917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 1.610391389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610396611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222000000193461e-06, 'source_diff': 5.222000000193461e-06}, {'time': 1.610397083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610403458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999891884e-06, 'source_diff': 6.374999999891884e-06}, {'time': 1.610403944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000217468e-07, 'source_diff': 4.860000000217468e-07}, {'time': 1.610413958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000113654e-05, 'source_diff': 1.0014000000113654e-05}, {'time': 1.610414431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999998343004e-07, 'source_diff': 4.729999998343004e-07}, {'time': 1.610423833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402000000102717e-06, 'source_diff': 9.402000000102717e-06}, {'time': 1.610424306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.73000000056345e-07, 'source_diff': 4.73000000056345e-07}, {'time': 1.610428611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999815706e-06, 'source_diff': 4.304999999815706e-06}, {'time': 1.610429097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000217468e-07, 'source_diff': 4.860000000217468e-07}, {'time': 1.610434542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444999999992817e-06, 'source_diff': 5.444999999992817e-06}, {'time': 1.610435028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000217468e-07, 'source_diff': 4.860000000217468e-07}, {'time': 1.610444958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930000000046846e-06, 'source_diff': 9.930000000046846e-06}, {'time': 1.610445431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.73000000056345e-07, 'source_diff': 4.73000000056345e-07}, {'time': 1.610452347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.916000000023459e-06, 'source_diff': 6.916000000023459e-06}, {'time': 1.610452819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610460764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944999999898172e-06, 'source_diff': 7.944999999898172e-06}, {'time': 1.610461236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610465236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000115023e-06, 'source_diff': 4.000000000115023e-06}, {'time': 1.610465708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610474069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999901253e-06, 'source_diff': 8.360999999901253e-06}, {'time': 1.610474542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.73000000056345e-07, 'source_diff': 4.73000000056345e-07}, {'time': 1.610482375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999957124e-06, 'source_diff': 7.832999999957124e-06}, {'time': 1.610482847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7200000019564925e-07, 'source_diff': 4.7200000019564925e-07}, {'time': 1.610487472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.624999999869317e-06, 'source_diff': 4.624999999869317e-06}, {'time': 1.610487944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610491931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.987000000149621e-06, 'source_diff': 3.987000000149621e-06}, {'time': 1.610492403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610499083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680000000036657e-06, 'source_diff': 6.680000000036657e-06}, {'time': 1.610499569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999997997022e-07, 'source_diff': 4.859999997997022e-07}, {'time': 1.610506597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.028000000186552e-06, 'source_diff': 7.028000000186552e-06}, {'time': 1.610507069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610517472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999881146e-05, 'source_diff': 1.0402999999881146e-05}, {'time': 1.610517944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610526625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.681000000176908e-06, 'source_diff': 8.681000000176908e-06}, {'time': 1.610527097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610531792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.694999999887983e-06, 'source_diff': 4.694999999887983e-06}, {'time': 1.610532264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999982425e-06, 'source_diff': 9.735999999982425e-06}, {'time': 1.610542472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610546569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000147233e-06, 'source_diff': 4.097000000147233e-06}, {'time': 1.610547042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.73000000056345e-07, 'source_diff': 4.73000000056345e-07}, {'time': 1.610556764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.721999999934283e-06, 'source_diff': 9.721999999934283e-06}, {'time': 1.610557236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610566125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000067426e-06, 'source_diff': 8.889000000067426e-06}, {'time': 1.610566597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610576639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041999999987894e-05, 'source_diff': 1.0041999999987894e-05}, {'time': 1.610577111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610582986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8750000000440394e-06, 'source_diff': 5.8750000000440394e-06}, {'time': 1.610583458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610593069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.611000000075975e-06, 'source_diff': 9.611000000075975e-06}, {'time': 1.610593542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999998343004e-07, 'source_diff': 4.729999998343004e-07}, {'time': 1.610598569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0270000000463e-06, 'source_diff': 5.0270000000463e-06}, {'time': 1.610599056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000001044872e-07, 'source_diff': 4.870000001044872e-07}, {'time': 1.610607944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.887999999984686e-06, 'source_diff': 8.887999999984686e-06}, {'time': 1.610608417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999998343004e-07, 'source_diff': 4.729999998343004e-07}, {'time': 1.610614903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.486000000194281e-06, 'source_diff': 6.486000000194281e-06}, {'time': 1.610615389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999997997022e-07, 'source_diff': 4.859999997997022e-07}, {'time': 1.610621153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000185732e-06, 'source_diff': 5.764000000185732e-06}, {'time': 1.610621625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610629792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999836833e-06, 'source_diff': 8.166999999836833e-06}, {'time': 1.610630264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7200000019564925e-07, 'source_diff': 4.7200000019564925e-07}, {'time': 1.610640389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999971962e-05, 'source_diff': 1.0124999999971962e-05}, {'time': 1.610640875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000217468e-07, 'source_diff': 4.860000000217468e-07}, {'time': 1.610650389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.51399999982172e-06, 'source_diff': 9.51399999982172e-06}, {'time': 1.610650861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7200000019564925e-07, 'source_diff': 4.7200000019564925e-07}, {'time': 1.610658708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000005266e-06, 'source_diff': 7.847000000005266e-06}, {'time': 1.610659181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999998343004e-07, 'source_diff': 4.729999998343004e-07}, {'time': 1.610665542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.361000000065786e-06, 'source_diff': 6.361000000065786e-06}, {'time': 1.610666028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000217468e-07, 'source_diff': 4.860000000217468e-07}, {'time': 1.610672708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680000000036657e-06, 'source_diff': 6.680000000036657e-06}, {'time': 1.610673181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999998343004e-07, 'source_diff': 4.729999998343004e-07}, {'time': 1.610680306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 1.610680778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7200000019564925e-07, 'source_diff': 4.7200000019564925e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:51.991" endtime="20201112 12:25:51.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.986" endtime="20201112 12:25:51.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:52.022" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:51.998" endtime="20201112 12:25:52.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.026" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:52.025" endtime="20201112 12:25:52.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.030" level="INFO">VALUE: {'eventsourcediff': [0, 4.7199999997360464e-07, 9.000000000147779e-06, 4.7199999997360464e-07, 6.5970000000525886e-06, 4.729999998343004e-07, 6.694000000084799e-06, 4.860000000217468e-07, 5.860999999995897e-06, 4.73000000056345e-07, 5.249999999845656e-06, 4.7199999997360464e-07, 9.944000000094988e-06, 4.7199999997360464e-07, 8.680999999954864e-06, 4.7199999997360464e-07, 4.000000000115023e-06, 4.7199999997360464e-07, 1.0320000000119123e-05, 4.7199999997360464e-07, 7.819999999991722e-06, 4.7199999997360464e-07, 8.34699999985311e-06, 4.860000000217468e-07, 9.806000000001092e-06, 4.7199999997360464e-07, 5.222000000193461e-06, 4.7199999997360464e-07, 6.374999999891884e-06, 4.860000000217468e-07, 1.0014000000113654e-05, 4.729999998343004e-07, 9.402000000102717e-06, 4.73000000056345e-07, 4.304999999815706e-06, 4.860000000217468e-07, 5.444999999992817e-06, 4.860000000217468e-07, 9.930000000046846e-06, 4.73000000056345e-07, 6.916000000023459e-06, 4.7199999997360464e-07, 7.944999999898172e-06, 4.7199999997360464e-07, 4.000000000115023e-06, 4.7199999997360464e-07, 8.360999999901253e-06, 4.73000000056345e-07, 7.832999999957124e-06, 4.7200000019564925e-07, 4.624999999869317e-06, 4.7199999997360464e-07, 3.987000000149621e-06, 4.7199999997360464e-07, 6.680000000036657e-06, 4.859999997997022e-07, 7.028000000186552e-06, 4.7199999997360464e-07, 1.0402999999881146e-05, 4.7199999997360464e-07, 8.681000000176908e-06, 4.7199999997360464e-07, 4.694999999887983e-06, 4.7199999997360464e-07, 9.735999999982425e-06, 4.7199999997360464e-07, 4.097000000147233e-06, 4.73000000056345e-07, 9.721999999934283e-06, 4.7199999997360464e-07, 8.889000000067426e-06, 4.7199999997360464e-07, 1.0041999999987894e-05, 4.7199999997360464e-07, 5.8750000000440394e-06, 4.7199999997360464e-07, 9.611000000075975e-06, 4.729999998343004e-07, 5.0270000000463e-06, 4.870000001044872e-07, 8.887999999984686e-06, 4.729999998343004e-07, 6.486000000194281e-06, 4.859999997997022e-07, 5.764000000185732e-06, 4.7199999997360464e-07, 8.166999999836833e-06, 4.7200000019564925e-07, 1.0124999999971962e-05, 4.860000000217468e-07, 9.51399999982172e-06, 4.7200000019564925e-07, 7.847000000005266e-06, 4.729999998343004e-07, 6.361000000065786e-06, 4.860000000217468e-07, 6.680000000036657e-06, 4.729999998343004e-07, 7.124999999996717e-06, 4.7200000019564925e-07], 'time': [1.610292903, 1.610293375, 1.610302375, 1.610302847, 1.610309444, 1.610309917, 1.610316611, 1.610317097, 1.610322958, 1.610323431, 1.610328681, 1.610329153, 1.610339097, 1.610339569, 1.61034825, 1.610348722, 1.610352722, 1.610353194, 1.610363514, 1.610363986, 1.610371806, 1.610372278, 1.610380625, 1.610381111, 1.610390917, 1.610391389, 1.610396611, 1.610397083, 1.610403458, 1.610403944, 1.610413958, 1.610414431, 1.610423833, 1.610424306, 1.610428611, 1.610429097, 1.610434542, 1.610435028, 1.610444958, 1.610445431, 1.610452347, 1.610452819, 1.610460764, 1.610461236, 1.610465236, 1.610465708, 1.610474069, 1.610474542, 1.610482375, 1.610482847, 1.610487472, 1.610487944, 1.610491931, 1.610492403, 1.610499083, 1.610499569, 1.610506597, 1.610507069, 1.610517472, 1.610517944, 1.610526625, 1.610527097, 1.610531792, 1.610532264, 1.610542, 1.610542472, 1.610546569, 1.610547042, 1.610556764, 1.610557236, 1.610566125, 1.610566597, 1.610576639, 1.610577111, 1.610582986, 1.610583458, 1.610593069, 1.610593542, 1.610598569, 1.610599056, 1.610607944, 1.610608417, 1.610614903, 1.610615389, 1.610621153, 1.610621625, 1.610629792, 1.610630264, 1.610640389, 1.610640875, 1.610650389, 1.610650861, 1.610658708, 1.610659181, 1.610665542, 1.610666028, 1.610672708, 1.610673181, 1.610680306, 1.610680778], 'source_diff': [0, 4.7199999997360464e-07, 9.000000000147779e-06, 4.7199999997360464e-07, 6.5970000000525886e-06, 4.729999998343004e-07, 6.694000000084799e-06, 4.860000000217468e-07, 5.860999999995897e-06, 4.73000000056345e-07, 5.249999999845656e-06, 4.7199999997360464e-07, 9.944000000094988e-06, 4.7199999997360464e-07, 8.680999999954864e-06, 4.7199999997360464e-07, 4.000000000115023e-06, 4.7199999997360464e-07, 1.0320000000119123e-05, 4.7199999997360464e-07, 7.819999999991722e-06, 4.7199999997360464e-07, 8.34699999985311e-06, 4.860000000217468e-07, 9.806000000001092e-06, 4.7199999997360464e-07, 5.222000000193461e-06, 4.7199999997360464e-07, 6.374999999891884e-06, 4.860000000217468e-07, 1.0014000000113654e-05, 4.729999998343004e-07, 9.402000000102717e-06, 4.73000000056345e-07, 4.304999999815706e-06, 4.860000000217468e-07, 5.444999999992817e-06, 4.860000000217468e-07, 9.930000000046846e-06, 4.73000000056345e-07, 6.916000000023459e-06, 4.7199999997360464e-07, 7.944999999898172e-06, 4.7199999997360464e-07, 4.000000000115023e-06, 4.7199999997360464e-07, 8.360999999901253e-06, 4.73000000056345e-07, 7.832999999957124e-06, 4.7200000019564925e-07, 4.624999999869317e-06, 4.7199999997360464e-07, 3.987000000149621e-06, 4.7199999997360464e-07, 6.680000000036657e-06, 4.859999997997022e-07, 7.028000000186552e-06, 4.7199999997360464e-07, 1.0402999999881146e-05, 4.7199999997360464e-07, 8.681000000176908e-06, 4.7199999997360464e-07, 4.694999999887983e-06, 4.7199999997360464e-07, 9.735999999982425e-06, 4.7199999997360464e-07, 4.097000000147233e-06, 4.73000000056345e-07, 9.721999999934283e-06, 4.7199999997360464e-07, 8.889000000067426e-06, 4.7199999997360464e-07, 1.0041999999987894e-05, 4.7199999997360464e-07, 5.8750000000440394e-06, 4.7199999997360464e-07, 9.611000000075975e-06, 4.729999998343004e-07, 5.0270000000463e-06, 4.870000001044872e-07, 8.887999999984686e-06, 4.729999998343004e-07, 6.486000000194281e-06, 4.859999997997022e-07, 5.764000000185732e-06, 4.7199999997360464e-07, 8.166999999836833e-06, 4.7200000019564925e-07, 1.0124999999971962e-05, 4.860000000217468e-07, 9.51399999982172e-06, 4.7200000019564925e-07, 7.847000000005266e-06, 4.729999998343004e-07, 6.361000000065786e-06, 4.860000000217468e-07, 6.680000000036657e-06, 4.729999998343004e-07, 7.124999999996717e-06, 4.7200000019564925e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:52.027" endtime="20201112 12:25:52.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.023" endtime="20201112 12:25:52.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:52.036" level="INFO">${RESULT} = [{'time': 1.610293375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 1.610302847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:52.033" endtime="20201112 12:25:52.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:52.050" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:52.037" endtime="20201112 12:25:52.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.054" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:52.053" endtime="20201112 12:25:52.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.057" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.870000001044872e-07, 4.729999998343004e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.7200000019564925e-07]</msg>
<status status="PASS" starttime="20201112 12:25:52.055" endtime="20201112 12:25:52.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.051" endtime="20201112 12:25:52.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.060" endtime="20201112 12:25:52.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:52.064" endtime="20201112 12:25:52.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.062" endtime="20201112 12:25:52.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.058" endtime="20201112 12:25:52.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.622" endtime="20201112 12:25:52.085"></status>
</kw>
<msg timestamp="20201112 12:25:52.085" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.093" endtime="20201112 12:25:52.108"></status>
</kw>
<msg timestamp="20201112 12:25:52.108" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:52.091" endtime="20201112 12:25:52.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.111" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:52.110" endtime="20201112 12:25:52.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.112" endtime="20201112 12:25:52.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.089" endtime="20201112 12:25:52.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.087" endtime="20201112 12:25:52.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.124" endtime="20201112 12:25:52.422"></status>
</kw>
<msg timestamp="20201112 12:25:52.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020753514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020753986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:52.122" endtime="20201112 12:25:52.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020753514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020753986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:52.432" endtime="20201112 12:25:52.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.452" endtime="20201112 12:25:52.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.117" endtime="20201112 12:25:52.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.115" endtime="20201112 12:25:52.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.466" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:52.464" endtime="20201112 12:25:52.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.477" level="INFO">VALUE: [{'time': 0.020753514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020753986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020762667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.020763139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02077275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.020773222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020777333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.020777806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020786903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.020787375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020792611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.020793097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020797097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.020797569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020804264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.02080475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020809153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.020809639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020815722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.020816194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020826431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236999999999746e-05, 'source_diff': 1.0236999999999746e-05}, {'time': 0.020826903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020831931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.020832417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020840069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652000000000353e-06, 'source_diff': 7.652000000000353e-06}, {'time': 0.020840542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020849306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.020849792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020859528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999999773e-06, 'source_diff': 9.735999999999773e-06}, {'time': 0.02086, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020869042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.020869528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020874653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.020875125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020883833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.020884306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020890431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.020890917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020896278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.02089675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020904347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.597000000001547e-06, 'source_diff': 7.597000000001547e-06}, {'time': 0.020904819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020913792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972999999998926e-06, 'source_diff': 8.972999999998926e-06}, {'time': 0.020914278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020918736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.020919208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020928681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.472999999999426e-06, 'source_diff': 9.472999999999426e-06}, {'time': 0.020929153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02093325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.020933722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020944167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000001287e-05, 'source_diff': 1.0445000000001287e-05}, {'time': 0.020944639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020953417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.020953903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020958014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.020958486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020962986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.020963472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020973806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.020974292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020978625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.020979097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020984944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.020985417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020994819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402000000002103e-06, 'source_diff': 9.402000000002103e-06}, {'time': 0.020995306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.021002833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.021003306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021007208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.021007681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021016792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.021017264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021021972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.021022458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021030917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.021031403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021041792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.021042264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021052306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041999999998302e-05, 'source_diff': 1.0041999999998302e-05}, {'time': 0.021052778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021060889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.021061361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021067792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430999999997716e-06, 'source_diff': 6.430999999997716e-06}, {'time': 0.021068264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021072681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.021073153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0210815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.021081972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02109, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.021090486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.02109925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.021099722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021104236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.021104708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021114736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.021115222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021119847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.021120319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021130236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.021130722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:52.469" endtime="20201112 12:25:52.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.459" endtime="20201112 12:25:52.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:52.503" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:52.480" endtime="20201112 12:25:52.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.507" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:52.506" endtime="20201112 12:25:52.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.512" level="INFO">VALUE: {'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 4.7199999999789077e-07, 8.680999999999967e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.720000000013602e-07, 4.1109999999976166e-06, 4.7300000000083386e-07, 9.096999999999578e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.860000000009301e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 6.695000000001006e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.860000000009301e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 1.0236999999999746e-05, 4.720000000013602e-07, 5.028000000000671e-06, 4.859999999974607e-07, 7.652000000000353e-06, 4.7300000000083386e-07, 8.764000000001382e-06, 4.859999999974607e-07, 9.735999999999773e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.859999999974607e-07, 5.125000000001656e-06, 4.720000000013602e-07, 8.707999999999633e-06, 4.729999999973644e-07, 6.125000000002656e-06, 4.859999999974607e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 7.597000000001547e-06, 4.720000000013602e-07, 8.972999999998926e-06, 4.860000000009301e-07, 4.457999999998852e-06, 4.720000000013602e-07, 9.472999999999426e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 1.0445000000001287e-05, 4.720000000013602e-07, 8.777999999997482e-06, 4.860000000009301e-07, 4.111000000001086e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 1.0334000000000731e-05, 4.859999999974607e-07, 4.333000000002196e-06, 4.7199999999789077e-07, 5.846999999999797e-06, 4.7300000000083386e-07, 9.402000000002103e-06, 4.869999999969343e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 3.902000000000072e-06, 4.7300000000083386e-07, 9.110999999999148e-06, 4.720000000013602e-07, 4.707999999999102e-06, 4.860000000009301e-07, 8.458999999998856e-06, 4.860000000009301e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 6.430999999997716e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.859999999974607e-07, 8.764000000001382e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 9.917000000001647e-06, 4.860000000009301e-07], 'time': [0.020753514, 0.020753986, 0.020762667, 0.020763139, 0.02077275, 0.020773222, 0.020777333, 0.020777806, 0.020786903, 0.020787375, 0.020792611, 0.020793097, 0.020797097, 0.020797569, 0.020804264, 0.02080475, 0.020809153, 0.020809639, 0.020815722, 0.020816194, 0.020826431, 0.020826903, 0.020831931, 0.020832417, 0.020840069, 0.020840542, 0.020849306, 0.020849792, 0.020859528, 0.02086, 0.020869042, 0.020869528, 0.020874653, 0.020875125, 0.020883833, 0.020884306, 0.020890431, 0.020890917, 0.020896278, 0.02089675, 0.020904347, 0.020904819, 0.020913792, 0.020914278, 0.020918736, 0.020919208, 0.020928681, 0.020929153, 0.02093325, 0.020933722, 0.020944167, 0.020944639, 0.020953417, 0.020953903, 0.020958014, 0.020958486, 0.020962986, 0.020963472, 0.020973806, 0.020974292, 0.020978625, 0.020979097, 0.020984944, 0.020985417, 0.020994819, 0.020995306, 0.021002833, 0.021003306, 0.021007208, 0.021007681, 0.021016792, 0.021017264, 0.021021972, 0.021022458, 0.021030917, 0.021031403, 0.021041792, 0.021042264, 0.021052306, 0.021052778, 0.021060889, 0.021061361, 0.021067792, 0.021068264, 0.021072681, 0.021073153, 0.0210815, 0.021081972, 0.02109, 0.021090486, 0.02109925, 0.021099722, 0.021104236, 0.021104708, 0.021114736, 0.021115222, 0.021119847, 0.021120319, 0.021130236, 0.021130722], 'source_diff': [0, 4.7199999999789077e-07, 8.680999999999967e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.720000000013602e-07, 4.1109999999976166e-06, 4.7300000000083386e-07, 9.096999999999578e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.860000000009301e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 6.695000000001006e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.860000000009301e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 1.0236999999999746e-05, 4.720000000013602e-07, 5.028000000000671e-06, 4.859999999974607e-07, 7.652000000000353e-06, 4.7300000000083386e-07, 8.764000000001382e-06, 4.859999999974607e-07, 9.735999999999773e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.859999999974607e-07, 5.125000000001656e-06, 4.720000000013602e-07, 8.707999999999633e-06, 4.729999999973644e-07, 6.125000000002656e-06, 4.859999999974607e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 7.597000000001547e-06, 4.720000000013602e-07, 8.972999999998926e-06, 4.860000000009301e-07, 4.457999999998852e-06, 4.720000000013602e-07, 9.472999999999426e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 1.0445000000001287e-05, 4.720000000013602e-07, 8.777999999997482e-06, 4.860000000009301e-07, 4.111000000001086e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 1.0334000000000731e-05, 4.859999999974607e-07, 4.333000000002196e-06, 4.7199999999789077e-07, 5.846999999999797e-06, 4.7300000000083386e-07, 9.402000000002103e-06, 4.869999999969343e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 3.902000000000072e-06, 4.7300000000083386e-07, 9.110999999999148e-06, 4.720000000013602e-07, 4.707999999999102e-06, 4.860000000009301e-07, 8.458999999998856e-06, 4.860000000009301e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 6.430999999997716e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.859999999974607e-07, 8.764000000001382e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 9.917000000001647e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:52.509" endtime="20201112 12:25:52.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.504" endtime="20201112 12:25:52.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:52.518" level="INFO">${RESULT} = [{'time': 0.020753986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020763139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:52.514" endtime="20201112 12:25:52.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:52.532" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:52.519" endtime="20201112 12:25:52.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.536" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:52.535" endtime="20201112 12:25:52.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.539" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 12:25:52.537" endtime="20201112 12:25:52.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.533" endtime="20201112 12:25:52.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.542" endtime="20201112 12:25:52.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:52.546" endtime="20201112 12:25:52.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.544" endtime="20201112 12:25:52.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.540" endtime="20201112 12:25:52.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.085" endtime="20201112 12:25:52.567"></status>
</kw>
<msg timestamp="20201112 12:25:52.568" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.576" endtime="20201112 12:25:52.593"></status>
</kw>
<msg timestamp="20201112 12:25:52.593" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:52.574" endtime="20201112 12:25:52.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.596" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:52.594" endtime="20201112 12:25:52.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.597" endtime="20201112 12:25:52.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.571" endtime="20201112 12:25:52.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.569" endtime="20201112 12:25:52.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.606" endtime="20201112 12:25:52.895"></status>
</kw>
<msg timestamp="20201112 12:25:52.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02029075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:25:52.605" endtime="20201112 12:25:52.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02029075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:25:52.900" endtime="20201112 12:25:52.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.908" endtime="20201112 12:25:52.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.602" endtime="20201112 12:25:52.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.600" endtime="20201112 12:25:52.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.915" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:52.914" endtime="20201112 12:25:52.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.920" level="INFO">VALUE: [{'time': 0.02029075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020299597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.020300069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020306764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.02030725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020314389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.020314861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020322681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819999999998661e-06, 'source_diff': 7.819999999998661e-06}, {'time': 0.020323153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02033225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.020332722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0203385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.020338972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020347958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.020348431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020352333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.020352806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020363139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.020363611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020368806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.020369278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020375931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6529999999988265e-06, 'source_diff': 6.6529999999988265e-06}, {'time': 0.020376403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020386083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.020386556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020393403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.020393875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020399222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.020399708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020408778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.02040925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020414417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.020414889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020423264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.020423736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020428347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.020428819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020437292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472999999998426e-06, 'source_diff': 8.472999999998426e-06}, {'time': 0.020437778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020446472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.020446944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020455083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.020455556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.02046275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.020463222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020471875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.020472361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020481736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.020482208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020492236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.020492708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020500125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.417000000002616e-06, 'source_diff': 7.417000000002616e-06}, {'time': 0.020500597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0205105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.903000000002077e-06, 'source_diff': 9.903000000002077e-06}, {'time': 0.020510972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020517264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.020517736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020525597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.020526069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020532306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.236999999999215e-06, 'source_diff': 6.236999999999215e-06}, {'time': 0.020532778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020542542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999998912e-06, 'source_diff': 9.763999999998912e-06}, {'time': 0.020543014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020550653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.020551125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020555361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.020555833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020559806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.973000000000865e-06, 'source_diff': 3.973000000000865e-06}, {'time': 0.020560278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020566042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.020566514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020574264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.020574736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020585083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.020585556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020594444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.887999999998564e-06, 'source_diff': 8.887999999998564e-06}, {'time': 0.020594917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020601722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.020602194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020609944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.020610417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020618361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944000000002782e-06, 'source_diff': 7.944000000002782e-06}, {'time': 0.020618833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02062575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.917000000002116e-06, 'source_diff': 6.917000000002116e-06}, {'time': 0.020626222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020635931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.020636403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0206435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.020643972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020649208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.020649681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020655444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.762999999998908e-06, 'source_diff': 5.762999999998908e-06}, {'time': 0.020655917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020660319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.020660792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020671028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.0206715, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020678167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.020678653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:52.916" endtime="20201112 12:25:52.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.912" endtime="20201112 12:25:52.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:52.947" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:52.923" endtime="20201112 12:25:52.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.951" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:52.950" endtime="20201112 12:25:52.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.956" level="INFO">VALUE: {'eventsourcediff': [0, 4.720000000013602e-07, 8.374999999997967e-06, 4.720000000013602e-07, 6.695000000001006e-06, 4.859999999974607e-07, 7.138999999999757e-06, 4.720000000013602e-07, 7.819999999998661e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.7300000000083386e-07, 3.902000000000072e-06, 4.7300000000083386e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 6.6529999999988265e-06, 4.720000000013602e-07, 9.679999999998024e-06, 4.7300000000083386e-07, 6.847000000000797e-06, 4.7199999999789077e-07, 5.347000000002766e-06, 4.859999999974607e-07, 9.069999999999911e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999789077e-07, 8.375000000001437e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.720000000013602e-07, 8.472999999998426e-06, 4.860000000009301e-07, 8.694000000000063e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.7300000000083386e-07, 7.193999999998563e-06, 4.720000000013602e-07, 8.653000000000827e-06, 4.860000000009301e-07, 9.374999999998967e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 7.417000000002616e-06, 4.7199999999789077e-07, 9.903000000002077e-06, 4.7199999999789077e-07, 6.292000000001491e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 6.236999999999215e-06, 4.720000000013602e-07, 9.763999999998912e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 4.236000000001211e-06, 4.7199999999789077e-07, 3.973000000000865e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 7.749999999997342e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 8.887999999998564e-06, 4.7300000000083386e-07, 6.804999999998618e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.729999999973644e-07, 7.944000000002782e-06, 4.7199999999789077e-07, 6.917000000002116e-06, 4.7199999999789077e-07, 9.709000000000106e-06, 4.720000000013602e-07, 7.0969999999975775e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.7300000000083386e-07, 5.762999999998908e-06, 4.7300000000083386e-07, 4.402000000000572e-06, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 6.667000000001866e-06, 4.860000000009301e-07], 'time': [0.02029075, 0.020291222, 0.020299597, 0.020300069, 0.020306764, 0.02030725, 0.020314389, 0.020314861, 0.020322681, 0.020323153, 0.02033225, 0.020332722, 0.0203385, 0.020338972, 0.020347958, 0.020348431, 0.020352333, 0.020352806, 0.020363139, 0.020363611, 0.020368806, 0.020369278, 0.020375931, 0.020376403, 0.020386083, 0.020386556, 0.020393403, 0.020393875, 0.020399222, 0.020399708, 0.020408778, 0.02040925, 0.020414417, 0.020414889, 0.020423264, 0.020423736, 0.020428347, 0.020428819, 0.020437292, 0.020437778, 0.020446472, 0.020446944, 0.020455083, 0.020455556, 0.02046275, 0.020463222, 0.020471875, 0.020472361, 0.020481736, 0.020482208, 0.020492236, 0.020492708, 0.020500125, 0.020500597, 0.0205105, 0.020510972, 0.020517264, 0.020517736, 0.020525597, 0.020526069, 0.020532306, 0.020532778, 0.020542542, 0.020543014, 0.020550653, 0.020551125, 0.020555361, 0.020555833, 0.020559806, 0.020560278, 0.020566042, 0.020566514, 0.020574264, 0.020574736, 0.020585083, 0.020585556, 0.020594444, 0.020594917, 0.020601722, 0.020602194, 0.020609944, 0.020610417, 0.020618361, 0.020618833, 0.02062575, 0.020626222, 0.020635931, 0.020636403, 0.0206435, 0.020643972, 0.020649208, 0.020649681, 0.020655444, 0.020655917, 0.020660319, 0.020660792, 0.020671028, 0.0206715, 0.020678167, 0.020678653], 'source_diff': [0, 4.720000000013602e-07, 8.374999999997967e-06, 4.720000000013602e-07, 6.695000000001006e-06, 4.859999999974607e-07, 7.138999999999757e-06, 4.720000000013602e-07, 7.819999999998661e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.7300000000083386e-07, 3.902000000000072e-06, 4.7300000000083386e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 6.6529999999988265e-06, 4.720000000013602e-07, 9.679999999998024e-06, 4.7300000000083386e-07, 6.847000000000797e-06, 4.7199999999789077e-07, 5.347000000002766e-06, 4.859999999974607e-07, 9.069999999999911e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999789077e-07, 8.375000000001437e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.720000000013602e-07, 8.472999999998426e-06, 4.860000000009301e-07, 8.694000000000063e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.7300000000083386e-07, 7.193999999998563e-06, 4.720000000013602e-07, 8.653000000000827e-06, 4.860000000009301e-07, 9.374999999998967e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 7.417000000002616e-06, 4.7199999999789077e-07, 9.903000000002077e-06, 4.7199999999789077e-07, 6.292000000001491e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 6.236999999999215e-06, 4.720000000013602e-07, 9.763999999998912e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 4.236000000001211e-06, 4.7199999999789077e-07, 3.973000000000865e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 7.749999999997342e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 8.887999999998564e-06, 4.7300000000083386e-07, 6.804999999998618e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.729999999973644e-07, 7.944000000002782e-06, 4.7199999999789077e-07, 6.917000000002116e-06, 4.7199999999789077e-07, 9.709000000000106e-06, 4.720000000013602e-07, 7.0969999999975775e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.7300000000083386e-07, 5.762999999998908e-06, 4.7300000000083386e-07, 4.402000000000572e-06, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 6.667000000001866e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:52.952" endtime="20201112 12:25:52.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.948" endtime="20201112 12:25:52.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:52.961" level="INFO">${RESULT} = [{'time': 0.020291222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020300069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:52.958" endtime="20201112 12:25:52.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:52.975" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:52.962" endtime="20201112 12:25:52.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.980" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:52.978" endtime="20201112 12:25:52.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.982" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 12:25:52.981" endtime="20201112 12:25:52.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.976" endtime="20201112 12:25:52.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.985" endtime="20201112 12:25:52.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:52.989" endtime="20201112 12:25:53.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.987" endtime="20201112 12:25:53.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.984" endtime="20201112 12:25:53.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.568" endtime="20201112 12:25:53.010"></status>
</kw>
<msg timestamp="20201112 12:25:53.010" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.018" endtime="20201112 12:25:53.032"></status>
</kw>
<msg timestamp="20201112 12:25:53.033" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.017" endtime="20201112 12:25:53.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.035" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.034" endtime="20201112 12:25:53.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.036" endtime="20201112 12:25:53.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.014" endtime="20201112 12:25:53.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.012" endtime="20201112 12:25:53.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.048" endtime="20201112 12:25:53.334"></status>
</kw>
<msg timestamp="20201112 12:25:53.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019819361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.047" endtime="20201112 12:25:53.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019819361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.338" endtime="20201112 12:25:53.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.347" endtime="20201112 12:25:53.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.044" endtime="20201112 12:25:53.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.042" endtime="20201112 12:25:53.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.353" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:53.352" endtime="20201112 12:25:53.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.358" level="INFO">VALUE: [{'time': 0.019818889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019819361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019826556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194999999998036e-06, 'source_diff': 7.194999999998036e-06}, {'time': 0.019827028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019832375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.019832861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019843069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208000000001133e-05, 'source_diff': 1.0208000000001133e-05}, {'time': 0.019843542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019849306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.019849778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019858944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166000000001423e-06, 'source_diff': 9.166000000001423e-06}, {'time': 0.019859431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019869333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.901999999999134e-06, 'source_diff': 9.901999999999134e-06}, {'time': 0.019869806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019876917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.019877389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019887694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305000000002118e-05, 'source_diff': 1.0305000000002118e-05}, {'time': 0.019888167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0198935, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.019893986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019901306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.019901778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019906403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.019906875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019917333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0457999999997913e-05, 'source_diff': 1.0457999999997913e-05}, {'time': 0.019917806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019925653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.019926125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019930833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.019931319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019939681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.36200000000134e-06, 'source_diff': 8.36200000000134e-06}, {'time': 0.019940153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.019945472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019954347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.019954819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019965153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.019965639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019973722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.019974194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019979194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.019979681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019989597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916000000002173e-06, 'source_diff': 9.916000000002173e-06}, {'time': 0.019990069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019998333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.019998806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020008625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.818999999997718e-06, 'source_diff': 9.818999999997718e-06}, {'time': 0.020009111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020017986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.020018458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020025347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.020025833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020030333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.020030806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020034903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.020035375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020041958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5829999999975075e-06, 'source_diff': 6.5829999999975075e-06}, {'time': 0.020042431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0200485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.020048972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020054875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.020055347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020065417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069999999997442e-05, 'source_diff': 1.0069999999997442e-05}, {'time': 0.020065889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020074042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.020074514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0200785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.020078972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020084014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.020084486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020089639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.020090111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0200995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.020099986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020109806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.020110278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020117389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.020117875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020122597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.020123069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020131556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486999999997996e-06, 'source_diff': 8.486999999997996e-06}, {'time': 0.020132028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020139764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.020140236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020149431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.020149903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020154833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.020155306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020162111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.020162597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020171889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291999999997552e-06, 'source_diff': 9.291999999997552e-06}, {'time': 0.020172361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020177264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.020177736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020186764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.020187236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020194889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.020195361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020199569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.020200042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:53.354" endtime="20201112 12:25:53.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.350" endtime="20201112 12:25:53.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:53.384" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:53.361" endtime="20201112 12:25:53.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.388" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:53.387" endtime="20201112 12:25:53.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.392" level="INFO">VALUE: {'eventsourcediff': [0, 4.720000000013602e-07, 7.194999999998036e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.860000000009301e-07, 1.0208000000001133e-05, 4.729999999973644e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 9.166000000001423e-06, 4.870000000004038e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 1.0305000000002118e-05, 4.7300000000083386e-07, 5.332999999999727e-06, 4.859999999974607e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 4.625000000001156e-06, 4.720000000013602e-07, 1.0457999999997913e-05, 4.7300000000083386e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 4.707999999999102e-06, 4.860000000009301e-07, 8.36200000000134e-06, 4.7199999999789077e-07, 4.847000000002266e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.860000000009301e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.9999999999980616e-06, 4.870000000004038e-07, 9.916000000002173e-06, 4.7199999999789077e-07, 8.264000000000882e-06, 4.7300000000083386e-07, 9.818999999997718e-06, 4.860000000009301e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 6.888999999999507e-06, 4.860000000009301e-07, 4.500000000001031e-06, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 6.5829999999975075e-06, 4.7300000000083386e-07, 6.069000000000907e-06, 4.720000000013602e-07, 5.9029999999980765e-06, 4.720000000013602e-07, 1.0069999999997442e-05, 4.720000000013602e-07, 8.153000000000327e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 5.153000000000796e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.860000000009301e-07, 9.820000000000662e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.720000000013602e-07, 8.486999999997996e-06, 4.720000000013602e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 9.195000000000036e-06, 4.720000000013602e-07, 4.930000000000212e-06, 4.7300000000083386e-07, 6.804999999998618e-06, 4.860000000009301e-07, 9.291999999997552e-06, 4.720000000013602e-07, 4.903000000000546e-06, 4.720000000013602e-07, 9.027999999997732e-06, 4.720000000013602e-07, 7.652999999999827e-06, 4.7199999999789077e-07, 4.208000000002071e-06, 4.7300000000083386e-07], 'time': [0.019818889, 0.019819361, 0.019826556, 0.019827028, 0.019832375, 0.019832861, 0.019843069, 0.019843542, 0.019849306, 0.019849778, 0.019858944, 0.019859431, 0.019869333, 0.019869806, 0.019876917, 0.019877389, 0.019887694, 0.019888167, 0.0198935, 0.019893986, 0.019901306, 0.019901778, 0.019906403, 0.019906875, 0.019917333, 0.019917806, 0.019925653, 0.019926125, 0.019930833, 0.019931319, 0.019939681, 0.019940153, 0.019945, 0.019945472, 0.019954347, 0.019954819, 0.019965153, 0.019965639, 0.019973722, 0.019974194, 0.019979194, 0.019979681, 0.019989597, 0.019990069, 0.019998333, 0.019998806, 0.020008625, 0.020009111, 0.020017986, 0.020018458, 0.020025347, 0.020025833, 0.020030333, 0.020030806, 0.020034903, 0.020035375, 0.020041958, 0.020042431, 0.0200485, 0.020048972, 0.020054875, 0.020055347, 0.020065417, 0.020065889, 0.020074042, 0.020074514, 0.0200785, 0.020078972, 0.020084014, 0.020084486, 0.020089639, 0.020090111, 0.0200995, 0.020099986, 0.020109806, 0.020110278, 0.020117389, 0.020117875, 0.020122597, 0.020123069, 0.020131556, 0.020132028, 0.020139764, 0.020140236, 0.020149431, 0.020149903, 0.020154833, 0.020155306, 0.020162111, 0.020162597, 0.020171889, 0.020172361, 0.020177264, 0.020177736, 0.020186764, 0.020187236, 0.020194889, 0.020195361, 0.020199569, 0.020200042], 'source_diff': [0, 4.720000000013602e-07, 7.194999999998036e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.860000000009301e-07, 1.0208000000001133e-05, 4.729999999973644e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 9.166000000001423e-06, 4.870000000004038e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 1.0305000000002118e-05, 4.7300000000083386e-07, 5.332999999999727e-06, 4.859999999974607e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 4.625000000001156e-06, 4.720000000013602e-07, 1.0457999999997913e-05, 4.7300000000083386e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 4.707999999999102e-06, 4.860000000009301e-07, 8.36200000000134e-06, 4.7199999999789077e-07, 4.847000000002266e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.860000000009301e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.9999999999980616e-06, 4.870000000004038e-07, 9.916000000002173e-06, 4.7199999999789077e-07, 8.264000000000882e-06, 4.7300000000083386e-07, 9.818999999997718e-06, 4.860000000009301e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 6.888999999999507e-06, 4.860000000009301e-07, 4.500000000001031e-06, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 6.5829999999975075e-06, 4.7300000000083386e-07, 6.069000000000907e-06, 4.720000000013602e-07, 5.9029999999980765e-06, 4.720000000013602e-07, 1.0069999999997442e-05, 4.720000000013602e-07, 8.153000000000327e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 5.153000000000796e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.860000000009301e-07, 9.820000000000662e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.720000000013602e-07, 8.486999999997996e-06, 4.720000000013602e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 9.195000000000036e-06, 4.720000000013602e-07, 4.930000000000212e-06, 4.7300000000083386e-07, 6.804999999998618e-06, 4.860000000009301e-07, 9.291999999997552e-06, 4.720000000013602e-07, 4.903000000000546e-06, 4.720000000013602e-07, 9.027999999997732e-06, 4.720000000013602e-07, 7.652999999999827e-06, 4.7199999999789077e-07, 4.208000000002071e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:53.389" endtime="20201112 12:25:53.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.385" endtime="20201112 12:25:53.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:53.398" level="INFO">${RESULT} = [{'time': 0.019819361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019827028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:53.394" endtime="20201112 12:25:53.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:53.411" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:53.399" endtime="20201112 12:25:53.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.415" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:53.414" endtime="20201112 12:25:53.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.417" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 12:25:53.416" endtime="20201112 12:25:53.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.412" endtime="20201112 12:25:53.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.421" endtime="20201112 12:25:53.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:53.424" endtime="20201112 12:25:53.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.422" endtime="20201112 12:25:53.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.419" endtime="20201112 12:25:53.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.011" endtime="20201112 12:25:53.445"></status>
</kw>
<msg timestamp="20201112 12:25:53.445" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.454" endtime="20201112 12:25:53.470"></status>
</kw>
<msg timestamp="20201112 12:25:53.470" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.452" endtime="20201112 12:25:53.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.473" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.471" endtime="20201112 12:25:53.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.474" endtime="20201112 12:25:53.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.449" endtime="20201112 12:25:53.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.447" endtime="20201112 12:25:53.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.483" endtime="20201112 12:25:53.770"></status>
</kw>
<msg timestamp="20201112 12:25:53.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.481" endtime="20201112 12:25:53.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.774" endtime="20201112 12:25:53.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.783" endtime="20201112 12:25:53.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.479" endtime="20201112 12:25:53.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.477" endtime="20201112 12:25:53.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.789" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:53.788" endtime="20201112 12:25:53.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.795" level="INFO">VALUE: [{'time': 0.022054319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022060278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.02206075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022067486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.022067958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022076194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.022076667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022083472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.022083944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022093875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930999999997747e-06, 'source_diff': 9.930999999997747e-06}, {'time': 0.022094347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022102403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.022102889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022107917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.022108403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022112389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.022112875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022121958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.022122444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022126958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.022127431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022136472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.022136944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022145264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.32000000000263e-06, 'source_diff': 8.32000000000263e-06}, {'time': 0.022145736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022154653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000000647e-06, 'source_diff': 8.917000000000647e-06}, {'time': 0.022155125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022161403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.022161875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022168042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.022168528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022174389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.022174861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022182708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.022183181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022190597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.415999999999673e-06, 'source_diff': 7.415999999999673e-06}, {'time': 0.022191083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022200472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.022200944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022206, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.022206472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022214889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000000147e-06, 'source_diff': 8.417000000000147e-06}, {'time': 0.022215375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022220708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.022221181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022227375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.022227847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022233486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.022233958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022238375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.022238847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022247917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.022248403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022255514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.022255986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022262903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.917000000002116e-06, 'source_diff': 6.917000000002116e-06}, {'time': 0.022263375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022272472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.097000000003047e-06, 'source_diff': 9.097000000003047e-06}, {'time': 0.022272944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022278292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.022278778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022288306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.022288778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022296083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305000000002587e-06, 'source_diff': 7.305000000002587e-06}, {'time': 0.022296569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022302125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.022302597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022310542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944999999998786e-06, 'source_diff': 7.944999999998786e-06}, {'time': 0.022311014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0223205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.022320986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022331319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.022331792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022337681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.022338153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022346056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.022346528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022350931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.022351403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022356347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.022356819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022361931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.11200000000156e-06, 'source_diff': 5.11200000000156e-06}, {'time': 0.022362403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022369111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.022369583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022379097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.022379569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022385653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.022386125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022395736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.022396222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022404375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.022404847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022409264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.417000000003085e-06, 'source_diff': 4.417000000003085e-06}, {'time': 0.022409736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022417083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.022417556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022425292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.022425764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:53.791" endtime="20201112 12:25:53.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.786" endtime="20201112 12:25:53.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:53.822" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:53.797" endtime="20201112 12:25:53.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.826" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:53.825" endtime="20201112 12:25:53.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.831" level="INFO">VALUE: {'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 4.7300000000083386e-07, 5.485999999998992e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7199999999789077e-07, 8.236000000001742e-06, 4.7300000000083386e-07, 6.804999999998618e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.860000000009301e-07, 5.028000000000671e-06, 4.859999999974607e-07, 3.986000000000961e-06, 4.860000000009301e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.513999999997131e-06, 4.7300000000083386e-07, 9.041000000001298e-06, 4.7199999999789077e-07, 8.32000000000263e-06, 4.7199999999789077e-07, 8.917000000000647e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.166999999997896e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 7.415999999999673e-06, 4.860000000009301e-07, 9.388999999998537e-06, 4.720000000013602e-07, 5.055999999999811e-06, 4.720000000013602e-07, 8.417000000000147e-06, 4.859999999974607e-07, 5.332999999999727e-06, 4.7300000000083386e-07, 6.194000000001032e-06, 4.7199999999789077e-07, 5.639000000001726e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.7199999999789077e-07, 9.069999999999911e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 6.917000000002116e-06, 4.7199999999789077e-07, 9.097000000003047e-06, 4.7199999999789077e-07, 5.34800000000224e-06, 4.859999999974607e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 7.305000000002587e-06, 4.859999999974607e-07, 5.556000000000311e-06, 4.720000000013602e-07, 7.944999999998786e-06, 4.720000000013602e-07, 9.485999999999523e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.7300000000083386e-07, 5.889000000001976e-06, 4.7199999999789077e-07, 7.903000000000077e-06, 4.720000000013602e-07, 4.403000000000046e-06, 4.7199999999789077e-07, 4.943999999999782e-06, 4.720000000013602e-07, 5.11200000000156e-06, 4.7199999999789077e-07, 6.708000000001102e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 6.0839999999999506e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 4.417000000003085e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.7300000000083386e-07, 7.735999999997772e-06, 4.720000000013602e-07], 'time': [0.022054319, 0.022054792, 0.022060278, 0.02206075, 0.022067486, 0.022067958, 0.022076194, 0.022076667, 0.022083472, 0.022083944, 0.022093875, 0.022094347, 0.022102403, 0.022102889, 0.022107917, 0.022108403, 0.022112389, 0.022112875, 0.022121958, 0.022122444, 0.022126958, 0.022127431, 0.022136472, 0.022136944, 0.022145264, 0.022145736, 0.022154653, 0.022155125, 0.022161403, 0.022161875, 0.022168042, 0.022168528, 0.022174389, 0.022174861, 0.022182708, 0.022183181, 0.022190597, 0.022191083, 0.022200472, 0.022200944, 0.022206, 0.022206472, 0.022214889, 0.022215375, 0.022220708, 0.022221181, 0.022227375, 0.022227847, 0.022233486, 0.022233958, 0.022238375, 0.022238847, 0.022247917, 0.022248403, 0.022255514, 0.022255986, 0.022262903, 0.022263375, 0.022272472, 0.022272944, 0.022278292, 0.022278778, 0.022288306, 0.022288778, 0.022296083, 0.022296569, 0.022302125, 0.022302597, 0.022310542, 0.022311014, 0.0223205, 0.022320986, 0.022331319, 0.022331792, 0.022337681, 0.022338153, 0.022346056, 0.022346528, 0.022350931, 0.022351403, 0.022356347, 0.022356819, 0.022361931, 0.022362403, 0.022369111, 0.022369583, 0.022379097, 0.022379569, 0.022385653, 0.022386125, 0.022395736, 0.022396222, 0.022404375, 0.022404847, 0.022409264, 0.022409736, 0.022417083, 0.022417556, 0.022425292, 0.022425764], 'source_diff': [0, 4.7300000000083386e-07, 5.485999999998992e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7199999999789077e-07, 8.236000000001742e-06, 4.7300000000083386e-07, 6.804999999998618e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.860000000009301e-07, 5.028000000000671e-06, 4.859999999974607e-07, 3.986000000000961e-06, 4.860000000009301e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.513999999997131e-06, 4.7300000000083386e-07, 9.041000000001298e-06, 4.7199999999789077e-07, 8.32000000000263e-06, 4.7199999999789077e-07, 8.917000000000647e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.166999999997896e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 7.415999999999673e-06, 4.860000000009301e-07, 9.388999999998537e-06, 4.720000000013602e-07, 5.055999999999811e-06, 4.720000000013602e-07, 8.417000000000147e-06, 4.859999999974607e-07, 5.332999999999727e-06, 4.7300000000083386e-07, 6.194000000001032e-06, 4.7199999999789077e-07, 5.639000000001726e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.7199999999789077e-07, 9.069999999999911e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 6.917000000002116e-06, 4.7199999999789077e-07, 9.097000000003047e-06, 4.7199999999789077e-07, 5.34800000000224e-06, 4.859999999974607e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 7.305000000002587e-06, 4.859999999974607e-07, 5.556000000000311e-06, 4.720000000013602e-07, 7.944999999998786e-06, 4.720000000013602e-07, 9.485999999999523e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.7300000000083386e-07, 5.889000000001976e-06, 4.7199999999789077e-07, 7.903000000000077e-06, 4.720000000013602e-07, 4.403000000000046e-06, 4.7199999999789077e-07, 4.943999999999782e-06, 4.720000000013602e-07, 5.11200000000156e-06, 4.7199999999789077e-07, 6.708000000001102e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 6.0839999999999506e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 4.417000000003085e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.7300000000083386e-07, 7.735999999997772e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:53.827" endtime="20201112 12:25:53.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.823" endtime="20201112 12:25:53.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:53.837" level="INFO">${RESULT} = [{'time': 0.022054792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.02206075, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:25:53.833" endtime="20201112 12:25:53.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:53.850" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:53.838" endtime="20201112 12:25:53.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.855" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:53.853" endtime="20201112 12:25:53.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.857" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:25:53.856" endtime="20201112 12:25:53.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.851" endtime="20201112 12:25:53.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.860" endtime="20201112 12:25:53.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:53.864" endtime="20201112 12:25:53.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.862" endtime="20201112 12:25:53.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.859" endtime="20201112 12:25:53.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.446" endtime="20201112 12:25:53.885"></status>
</kw>
<msg timestamp="20201112 12:25:53.885" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.893" endtime="20201112 12:25:53.908"></status>
</kw>
<msg timestamp="20201112 12:25:53.909" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.891" endtime="20201112 12:25:53.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.915" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.912" endtime="20201112 12:25:53.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.917" endtime="20201112 12:25:53.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.889" endtime="20201112 12:25:53.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.887" endtime="20201112 12:25:53.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.937" endtime="20201112 12:25:54.229"></status>
</kw>
<msg timestamp="20201112 12:25:54.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019044792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019045264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.934" endtime="20201112 12:25:54.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019044792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019045264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:54.234" endtime="20201112 12:25:54.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.243" endtime="20201112 12:25:54.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.928" endtime="20201112 12:25:54.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.924" endtime="20201112 12:25:54.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.249" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:54.248" endtime="20201112 12:25:54.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.255" level="INFO">VALUE: [{'time': 0.019044792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019045264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019049986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.019050472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019056236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.019056708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019064444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.019064931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019069542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.019070028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019077972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.943999999999313e-06, 'source_diff': 7.943999999999313e-06}, {'time': 0.019078444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019083389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.019083861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019088056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.019088542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019093375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.019093847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019100958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.019101431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019109597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166000000000423e-06, 'source_diff': 8.166000000000423e-06}, {'time': 0.019110069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019114375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.019114861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019121792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930999999998216e-06, 'source_diff': 6.930999999998216e-06}, {'time': 0.019122264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019130708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.019131181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019139639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.019140111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019147833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.721999999998203e-06, 'source_diff': 7.721999999998203e-06}, {'time': 0.019148319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019154903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.584000000000451e-06, 'source_diff': 6.584000000000451e-06}, {'time': 0.019155375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019164347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.019164819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019174514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.019175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01918075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.019181222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019186972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.019187458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019196958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.019197444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019207361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.019207833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019217764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930999999997747e-06, 'source_diff': 9.930999999997747e-06}, {'time': 0.01921825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019228583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.019229056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019235764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.019236236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019240972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.019241444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019248472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.019248944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019257819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.019258292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019262389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.019262861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019271653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.019272125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019278931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.019279403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019288194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.791000000001048e-06, 'source_diff': 8.791000000001048e-06}, {'time': 0.019288667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019298792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.019299278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019304847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.019305319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019310681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.36199999999834e-06, 'source_diff': 5.36199999999834e-06}, {'time': 0.019311153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019317625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.019318097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019328056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.959000000000356e-06, 'source_diff': 9.959000000000356e-06}, {'time': 0.019328528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019336042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019336514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019342319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.019342792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019352472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.019352944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019357056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.11200000000056e-06, 'source_diff': 4.11200000000056e-06}, {'time': 0.019357528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019363528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.000000000002531e-06, 'source_diff': 6.000000000002531e-06}, {'time': 0.019364, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019371097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.019371569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019375792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222999999997645e-06, 'source_diff': 4.222999999997645e-06}, {'time': 0.019376264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019380875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.019381347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019388819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.019389292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019397097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.019397569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019402097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.019402569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019408042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.019408514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:54.251" endtime="20201112 12:25:54.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.246" endtime="20201112 12:25:54.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:54.281" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:54.257" endtime="20201112 12:25:54.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.285" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:54.284" endtime="20201112 12:25:54.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.289" level="INFO">VALUE: {'eventsourcediff': [0, 4.7199999999789077e-07, 4.722000000002141e-06, 4.859999999974607e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.870000000004038e-07, 4.610999999998117e-06, 4.860000000009301e-07, 7.943999999999313e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.860000000009301e-07, 4.832999999999227e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.729999999973644e-07, 8.166000000000423e-06, 4.720000000013602e-07, 4.305999999999061e-06, 4.860000000009301e-07, 6.930999999998216e-06, 4.720000000013602e-07, 8.443999999999813e-06, 4.7300000000083386e-07, 8.457999999999383e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.860000000009301e-07, 6.584000000000451e-06, 4.7199999999789077e-07, 8.972000000002922e-06, 4.7199999999789077e-07, 9.695000000000537e-06, 4.860000000009301e-07, 5.749999999998812e-06, 4.720000000013602e-07, 5.749999999998812e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.860000000009301e-07, 1.0333000000001258e-05, 4.7300000000083386e-07, 6.7079999999976325e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 8.792000000000522e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 8.791000000001048e-06, 4.729999999973644e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 5.569000000000407e-06, 4.720000000013602e-07, 5.36199999999834e-06, 4.720000000013602e-07, 6.472000000000422e-06, 4.7199999999789077e-07, 9.959000000000356e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 5.805000000001087e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 4.11200000000056e-06, 4.7199999999789077e-07, 6.000000000002531e-06, 4.7199999999789077e-07, 7.097000000001047e-06, 4.720000000013602e-07, 4.222999999997645e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.729999999973644e-07, 7.804999999999618e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07], 'time': [0.019044792, 0.019045264, 0.019049986, 0.019050472, 0.019056236, 0.019056708, 0.019064444, 0.019064931, 0.019069542, 0.019070028, 0.019077972, 0.019078444, 0.019083389, 0.019083861, 0.019088056, 0.019088542, 0.019093375, 0.019093847, 0.019100958, 0.019101431, 0.019109597, 0.019110069, 0.019114375, 0.019114861, 0.019121792, 0.019122264, 0.019130708, 0.019131181, 0.019139639, 0.019140111, 0.019147833, 0.019148319, 0.019154903, 0.019155375, 0.019164347, 0.019164819, 0.019174514, 0.019175, 0.01918075, 0.019181222, 0.019186972, 0.019187458, 0.019196958, 0.019197444, 0.019207361, 0.019207833, 0.019217764, 0.01921825, 0.019228583, 0.019229056, 0.019235764, 0.019236236, 0.019240972, 0.019241444, 0.019248472, 0.019248944, 0.019257819, 0.019258292, 0.019262389, 0.019262861, 0.019271653, 0.019272125, 0.019278931, 0.019279403, 0.019288194, 0.019288667, 0.019298792, 0.019299278, 0.019304847, 0.019305319, 0.019310681, 0.019311153, 0.019317625, 0.019318097, 0.019328056, 0.019328528, 0.019336042, 0.019336514, 0.019342319, 0.019342792, 0.019352472, 0.019352944, 0.019357056, 0.019357528, 0.019363528, 0.019364, 0.019371097, 0.019371569, 0.019375792, 0.019376264, 0.019380875, 0.019381347, 0.019388819, 0.019389292, 0.019397097, 0.019397569, 0.019402097, 0.019402569, 0.019408042, 0.019408514], 'source_diff': [0, 4.7199999999789077e-07, 4.722000000002141e-06, 4.859999999974607e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.870000000004038e-07, 4.610999999998117e-06, 4.860000000009301e-07, 7.943999999999313e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.860000000009301e-07, 4.832999999999227e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.729999999973644e-07, 8.166000000000423e-06, 4.720000000013602e-07, 4.305999999999061e-06, 4.860000000009301e-07, 6.930999999998216e-06, 4.720000000013602e-07, 8.443999999999813e-06, 4.7300000000083386e-07, 8.457999999999383e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.860000000009301e-07, 6.584000000000451e-06, 4.7199999999789077e-07, 8.972000000002922e-06, 4.7199999999789077e-07, 9.695000000000537e-06, 4.860000000009301e-07, 5.749999999998812e-06, 4.720000000013602e-07, 5.749999999998812e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.860000000009301e-07, 1.0333000000001258e-05, 4.7300000000083386e-07, 6.7079999999976325e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 8.792000000000522e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 8.791000000001048e-06, 4.729999999973644e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 5.569000000000407e-06, 4.720000000013602e-07, 5.36199999999834e-06, 4.720000000013602e-07, 6.472000000000422e-06, 4.7199999999789077e-07, 9.959000000000356e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 5.805000000001087e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 4.11200000000056e-06, 4.7199999999789077e-07, 6.000000000002531e-06, 4.7199999999789077e-07, 7.097000000001047e-06, 4.720000000013602e-07, 4.222999999997645e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.729999999973644e-07, 7.804999999999618e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:54.286" endtime="20201112 12:25:54.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.282" endtime="20201112 12:25:54.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:54.295" level="INFO">${RESULT} = [{'time': 0.019045264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019050472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:54.291" endtime="20201112 12:25:54.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:54.309" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:54.296" endtime="20201112 12:25:54.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.313" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:54.312" endtime="20201112 12:25:54.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.316" level="INFO">VALUE: [4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:25:54.315" endtime="20201112 12:25:54.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.310" endtime="20201112 12:25:54.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.319" endtime="20201112 12:25:54.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:54.323" endtime="20201112 12:25:54.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.321" endtime="20201112 12:25:54.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.318" endtime="20201112 12:25:54.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.886" endtime="20201112 12:25:54.344"></status>
</kw>
<msg timestamp="20201112 12:25:54.344" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.353" endtime="20201112 12:25:54.370"></status>
</kw>
<msg timestamp="20201112 12:25:54.371" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.351" endtime="20201112 12:25:54.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.373" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.372" endtime="20201112 12:25:54.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.375" endtime="20201112 12:25:54.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.348" endtime="20201112 12:25:54.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.346" endtime="20201112 12:25:54.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.384" endtime="20201112 12:25:54.674"></status>
</kw>
<msg timestamp="20201112 12:25:54.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:54.382" endtime="20201112 12:25:54.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:54.678" endtime="20201112 12:25:54.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.687" endtime="20201112 12:25:54.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.380" endtime="20201112 12:25:54.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.378" endtime="20201112 12:25:54.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.694" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:54.693" endtime="20201112 12:25:54.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.699" level="INFO">VALUE: [{'time': 0.022304472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022315389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000001287e-05, 'source_diff': 1.0445000000001287e-05}, {'time': 0.022315875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022322556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.022323042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022328889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.022329375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022337958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583000000002977e-06, 'source_diff': 8.583000000002977e-06}, {'time': 0.022338431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0223425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.022342972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022351681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.709000000002576e-06, 'source_diff': 8.709000000002576e-06}, {'time': 0.022352153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022359625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.022360097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022368556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.459000000002326e-06, 'source_diff': 8.459000000002326e-06}, {'time': 0.022369028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022376653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.022377125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022382986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.022383458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022387569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.022388042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022393264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.022393736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022400014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.022400486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022407583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.022408069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022415681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6120000000005905e-06, 'source_diff': 7.6120000000005905e-06}, {'time': 0.022416167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022420667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.022421153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022429917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.022430389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022439264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.022439736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022445181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.445000000003225e-06, 'source_diff': 5.445000000003225e-06}, {'time': 0.022445667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022456014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.022456486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022466306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819999999997192e-06, 'source_diff': 9.819999999997192e-06}, {'time': 0.022466792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022474639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.022475111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022484514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.022485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022492625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.022493111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022501264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.022501736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022511639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.022512125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022519111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.022519597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022527111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.022527583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022532403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.022532889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022539917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.022540389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022547667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.022548139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022557014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.022557486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022561625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.138999999996756e-06, 'source_diff': 4.138999999996756e-06}, {'time': 0.022562097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022565958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.022566431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022573972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.022574444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022580722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.022581208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022587736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.022588208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022594778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.570000000000881e-06, 'source_diff': 6.570000000000881e-06}, {'time': 0.02259525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022603833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.022604306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022611417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.022611889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022620389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.022620861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022627931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.070000000001381e-06, 'source_diff': 7.070000000001381e-06}, {'time': 0.022628417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022635639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2219999999977025e-06, 'source_diff': 7.2219999999977025e-06}, {'time': 0.022636111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022643736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.022644208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022648292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.022648764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022655972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.022656444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022666569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.022667042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022674472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430000000002712e-06, 'source_diff': 7.430000000002712e-06}, {'time': 0.022674944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022683903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958999999999356e-06, 'source_diff': 8.958999999999356e-06}, {'time': 0.022684389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:54.695" endtime="20201112 12:25:54.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.690" endtime="20201112 12:25:54.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:54.726" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:54.702" endtime="20201112 12:25:54.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.730" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:54.729" endtime="20201112 12:25:54.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.734" level="INFO">VALUE: {'eventsourcediff': [0, 4.720000000013602e-07, 1.0445000000001287e-05, 4.859999999974607e-07, 6.681000000001436e-06, 4.860000000009301e-07, 5.846999999999797e-06, 4.859999999974607e-07, 8.583000000002977e-06, 4.729999999973644e-07, 4.069000000002376e-06, 4.7199999999789077e-07, 8.709000000002576e-06, 4.7199999999789077e-07, 7.472000000001422e-06, 4.7199999999789077e-07, 8.459000000002326e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.7199999999789077e-07, 4.111000000001086e-06, 4.7300000000083386e-07, 5.221999999999172e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 7.0969999999975775e-06, 4.860000000009301e-07, 7.6120000000005905e-06, 4.860000000009301e-07, 4.4999999999975615e-06, 4.860000000009301e-07, 8.764000000001382e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 5.445000000003225e-06, 4.859999999974607e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 9.819999999997192e-06, 4.860000000009301e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 9.403000000001577e-06, 4.860000000009301e-07, 7.624999999997217e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 6.986000000000492e-06, 4.859999999974607e-07, 7.514000000000132e-06, 4.720000000013602e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.720000000013602e-07, 4.138999999996756e-06, 4.720000000013602e-07, 3.861000000000836e-06, 4.7300000000083386e-07, 7.540999999999798e-06, 4.7199999999789077e-07, 6.278000000001921e-06, 4.859999999974607e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 6.570000000000881e-06, 4.720000000013602e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 8.500000000001562e-06, 4.7199999999789077e-07, 7.070000000001381e-06, 4.860000000009301e-07, 7.2219999999977025e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 4.08400000000142e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.729999999973644e-07, 7.430000000002712e-06, 4.7199999999789077e-07, 8.958999999999356e-06, 4.860000000009301e-07], 'time': [0.022304472, 0.022304944, 0.022315389, 0.022315875, 0.022322556, 0.022323042, 0.022328889, 0.022329375, 0.022337958, 0.022338431, 0.0223425, 0.022342972, 0.022351681, 0.022352153, 0.022359625, 0.022360097, 0.022368556, 0.022369028, 0.022376653, 0.022377125, 0.022382986, 0.022383458, 0.022387569, 0.022388042, 0.022393264, 0.022393736, 0.022400014, 0.022400486, 0.022407583, 0.022408069, 0.022415681, 0.022416167, 0.022420667, 0.022421153, 0.022429917, 0.022430389, 0.022439264, 0.022439736, 0.022445181, 0.022445667, 0.022456014, 0.022456486, 0.022466306, 0.022466792, 0.022474639, 0.022475111, 0.022484514, 0.022485, 0.022492625, 0.022493111, 0.022501264, 0.022501736, 0.022511639, 0.022512125, 0.022519111, 0.022519597, 0.022527111, 0.022527583, 0.022532403, 0.022532889, 0.022539917, 0.022540389, 0.022547667, 0.022548139, 0.022557014, 0.022557486, 0.022561625, 0.022562097, 0.022565958, 0.022566431, 0.022573972, 0.022574444, 0.022580722, 0.022581208, 0.022587736, 0.022588208, 0.022594778, 0.02259525, 0.022603833, 0.022604306, 0.022611417, 0.022611889, 0.022620389, 0.022620861, 0.022627931, 0.022628417, 0.022635639, 0.022636111, 0.022643736, 0.022644208, 0.022648292, 0.022648764, 0.022655972, 0.022656444, 0.022666569, 0.022667042, 0.022674472, 0.022674944, 0.022683903, 0.022684389], 'source_diff': [0, 4.720000000013602e-07, 1.0445000000001287e-05, 4.859999999974607e-07, 6.681000000001436e-06, 4.860000000009301e-07, 5.846999999999797e-06, 4.859999999974607e-07, 8.583000000002977e-06, 4.729999999973644e-07, 4.069000000002376e-06, 4.7199999999789077e-07, 8.709000000002576e-06, 4.7199999999789077e-07, 7.472000000001422e-06, 4.7199999999789077e-07, 8.459000000002326e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.7199999999789077e-07, 4.111000000001086e-06, 4.7300000000083386e-07, 5.221999999999172e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 7.0969999999975775e-06, 4.860000000009301e-07, 7.6120000000005905e-06, 4.860000000009301e-07, 4.4999999999975615e-06, 4.860000000009301e-07, 8.764000000001382e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 5.445000000003225e-06, 4.859999999974607e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 9.819999999997192e-06, 4.860000000009301e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 9.403000000001577e-06, 4.860000000009301e-07, 7.624999999997217e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 6.986000000000492e-06, 4.859999999974607e-07, 7.514000000000132e-06, 4.720000000013602e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.720000000013602e-07, 4.138999999996756e-06, 4.720000000013602e-07, 3.861000000000836e-06, 4.7300000000083386e-07, 7.540999999999798e-06, 4.7199999999789077e-07, 6.278000000001921e-06, 4.859999999974607e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 6.570000000000881e-06, 4.720000000013602e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 8.500000000001562e-06, 4.7199999999789077e-07, 7.070000000001381e-06, 4.860000000009301e-07, 7.2219999999977025e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 4.08400000000142e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.729999999973644e-07, 7.430000000002712e-06, 4.7199999999789077e-07, 8.958999999999356e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:54.731" endtime="20201112 12:25:54.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.727" endtime="20201112 12:25:54.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:54.740" level="INFO">${RESULT} = [{'time': 0.022304944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022315875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:54.736" endtime="20201112 12:25:54.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:54.754" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:54.741" endtime="20201112 12:25:54.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.758" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:54.757" endtime="20201112 12:25:54.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.761" level="INFO">VALUE: [4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 12:25:54.759" endtime="20201112 12:25:54.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.755" endtime="20201112 12:25:54.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.764" endtime="20201112 12:25:54.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:54.768" endtime="20201112 12:25:54.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.766" endtime="20201112 12:25:54.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.762" endtime="20201112 12:25:54.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.345" endtime="20201112 12:25:54.788"></status>
</kw>
<msg timestamp="20201112 12:25:54.789" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.797" endtime="20201112 12:25:54.811"></status>
</kw>
<msg timestamp="20201112 12:25:54.811" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.795" endtime="20201112 12:25:54.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.814" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.812" endtime="20201112 12:25:54.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.815" endtime="20201112 12:25:54.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.792" endtime="20201112 12:25:54.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.791" endtime="20201112 12:25:54.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.824" endtime="20201112 12:25:55.111"></status>
</kw>
<msg timestamp="20201112 12:25:55.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198035, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:25:54.823" endtime="20201112 12:25:55.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198035, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:25:55.115" endtime="20201112 12:25:55.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.124" endtime="20201112 12:25:55.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.820" endtime="20201112 12:25:55.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.818" endtime="20201112 12:25:55.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.131" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:55.129" endtime="20201112 12:25:55.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.136" level="INFO">VALUE: [{'time': 0.0198035, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019810361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.019810833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019817819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.019818292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019828736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0443999999998343e-05, 'source_diff': 1.0443999999998343e-05}, {'time': 0.019829208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019835486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.019835958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019842319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.019842806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.019847472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019855403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930999999999216e-06, 'source_diff': 7.930999999999216e-06}, {'time': 0.019855889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019866111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.019866597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019875069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.019875542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019882556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019883028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019891722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.019892194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019898167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.973000000002865e-06, 'source_diff': 5.973000000002865e-06}, {'time': 0.019898639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019908986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.019909458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019914597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.019915083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019919597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.019920069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019924833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.019925306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019930306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.019930792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019936236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.019936722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019942583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019943069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019949764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694999999997536e-06, 'source_diff': 6.694999999997536e-06}, {'time': 0.01995025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019960167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.019960653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019964861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.019965333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019971931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5980000000000205e-06, 'source_diff': 6.5980000000000205e-06}, {'time': 0.019972403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019982125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.019982597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019991056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.019991528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020000389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.020000861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020006819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9579999999968825e-06, 'source_diff': 5.9579999999968825e-06}, {'time': 0.020007306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.0200115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.194000000002501e-06, 'source_diff': 4.194000000002501e-06}, {'time': 0.020011972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020022083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000000148e-05, 'source_diff': 1.0111000000000148e-05}, {'time': 0.020022569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020032486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.020032958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020040681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.020041153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020046806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.020047292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020052236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.020052708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020057597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.020058069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02006575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.020066222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020075944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.721999999996733e-06, 'source_diff': 9.721999999996733e-06}, {'time': 0.020076417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020081139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.020081625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020090625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.020091097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020101056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.959000000000356e-06, 'source_diff': 9.959000000000356e-06}, {'time': 0.020101528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020110778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.249999999998842e-06, 'source_diff': 9.249999999998842e-06}, {'time': 0.02011125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020118972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.721999999998203e-06, 'source_diff': 7.721999999998203e-06}, {'time': 0.020119458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020128028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.0201285, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020133819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.020134306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020141556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.020142028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020152097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.020152569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020159097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.020159569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020167681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.11200000000109e-06, 'source_diff': 8.11200000000109e-06}, {'time': 0.020168153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020172444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.020172931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020182944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0012999999999689e-05, 'source_diff': 1.0012999999999689e-05}, {'time': 0.020183417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:55.132" endtime="20201112 12:25:55.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.127" endtime="20201112 12:25:55.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:55.163" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:55.138" endtime="20201112 12:25:55.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.167" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:55.166" endtime="20201112 12:25:55.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.171" level="INFO">VALUE: {'eventsourcediff': [0, 4.7199999999789077e-07, 6.388999999999007e-06, 4.720000000013602e-07, 6.986000000000492e-06, 4.7300000000083386e-07, 1.0443999999998343e-05, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.360999999999867e-06, 4.870000000004038e-07, 4.193999999999032e-06, 4.720000000013602e-07, 7.930999999999216e-06, 4.860000000009301e-07, 1.0221999999997233e-05, 4.860000000009301e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 7.013999999999632e-06, 4.720000000013602e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 5.973000000002865e-06, 4.7199999999789077e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 5.1389999999977565e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 4.764000000000851e-06, 4.7300000000083386e-07, 4.9999999999980616e-06, 4.860000000009301e-07, 5.444000000000282e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.860000000009301e-07, 6.694999999997536e-06, 4.860000000009301e-07, 9.917000000001647e-06, 4.859999999974607e-07, 4.208000000002071e-06, 4.7199999999789077e-07, 6.5980000000000205e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.720000000013602e-07, 8.458999999998856e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 5.9579999999968825e-06, 4.870000000004038e-07, 4.194000000002501e-06, 4.7199999999789077e-07, 1.0111000000000148e-05, 4.860000000009301e-07, 9.916999999998177e-06, 4.720000000013602e-07, 7.723000000001146e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.860000000009301e-07, 4.943999999999782e-06, 4.7199999999789077e-07, 4.889000000000976e-06, 4.720000000013602e-07, 7.680999999998966e-06, 4.720000000013602e-07, 9.721999999996733e-06, 4.7300000000083386e-07, 4.722000000002141e-06, 4.859999999974607e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 9.959000000000356e-06, 4.720000000013602e-07, 9.249999999998842e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 5.319000000000157e-06, 4.870000000004038e-07, 7.250000000000312e-06, 4.7199999999789077e-07, 1.0069000000001438e-05, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 8.11200000000109e-06, 4.720000000013602e-07, 4.291000000000017e-06, 4.870000000004038e-07, 1.0012999999999689e-05, 4.729999999973644e-07], 'time': [0.0198035, 0.019803972, 0.019810361, 0.019810833, 0.019817819, 0.019818292, 0.019828736, 0.019829208, 0.019835486, 0.019835958, 0.019842319, 0.019842806, 0.019847, 0.019847472, 0.019855403, 0.019855889, 0.019866111, 0.019866597, 0.019875069, 0.019875542, 0.019882556, 0.019883028, 0.019891722, 0.019892194, 0.019898167, 0.019898639, 0.019908986, 0.019909458, 0.019914597, 0.019915083, 0.019919597, 0.019920069, 0.019924833, 0.019925306, 0.019930306, 0.019930792, 0.019936236, 0.019936722, 0.019942583, 0.019943069, 0.019949764, 0.01995025, 0.019960167, 0.019960653, 0.019964861, 0.019965333, 0.019971931, 0.019972403, 0.019982125, 0.019982597, 0.019991056, 0.019991528, 0.020000389, 0.020000861, 0.020006819, 0.020007306, 0.0200115, 0.020011972, 0.020022083, 0.020022569, 0.020032486, 0.020032958, 0.020040681, 0.020041153, 0.020046806, 0.020047292, 0.020052236, 0.020052708, 0.020057597, 0.020058069, 0.02006575, 0.020066222, 0.020075944, 0.020076417, 0.020081139, 0.020081625, 0.020090625, 0.020091097, 0.020101056, 0.020101528, 0.020110778, 0.02011125, 0.020118972, 0.020119458, 0.020128028, 0.0201285, 0.020133819, 0.020134306, 0.020141556, 0.020142028, 0.020152097, 0.020152569, 0.020159097, 0.020159569, 0.020167681, 0.020168153, 0.020172444, 0.020172931, 0.020182944, 0.020183417], 'source_diff': [0, 4.7199999999789077e-07, 6.388999999999007e-06, 4.720000000013602e-07, 6.986000000000492e-06, 4.7300000000083386e-07, 1.0443999999998343e-05, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.360999999999867e-06, 4.870000000004038e-07, 4.193999999999032e-06, 4.720000000013602e-07, 7.930999999999216e-06, 4.860000000009301e-07, 1.0221999999997233e-05, 4.860000000009301e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 7.013999999999632e-06, 4.720000000013602e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 5.973000000002865e-06, 4.7199999999789077e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 5.1389999999977565e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 4.764000000000851e-06, 4.7300000000083386e-07, 4.9999999999980616e-06, 4.860000000009301e-07, 5.444000000000282e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.860000000009301e-07, 6.694999999997536e-06, 4.860000000009301e-07, 9.917000000001647e-06, 4.859999999974607e-07, 4.208000000002071e-06, 4.7199999999789077e-07, 6.5980000000000205e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.720000000013602e-07, 8.458999999998856e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 5.9579999999968825e-06, 4.870000000004038e-07, 4.194000000002501e-06, 4.7199999999789077e-07, 1.0111000000000148e-05, 4.860000000009301e-07, 9.916999999998177e-06, 4.720000000013602e-07, 7.723000000001146e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.860000000009301e-07, 4.943999999999782e-06, 4.7199999999789077e-07, 4.889000000000976e-06, 4.720000000013602e-07, 7.680999999998966e-06, 4.720000000013602e-07, 9.721999999996733e-06, 4.7300000000083386e-07, 4.722000000002141e-06, 4.859999999974607e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 9.959000000000356e-06, 4.720000000013602e-07, 9.249999999998842e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 5.319000000000157e-06, 4.870000000004038e-07, 7.250000000000312e-06, 4.7199999999789077e-07, 1.0069000000001438e-05, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 8.11200000000109e-06, 4.720000000013602e-07, 4.291000000000017e-06, 4.870000000004038e-07, 1.0012999999999689e-05, 4.729999999973644e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:55.168" endtime="20201112 12:25:55.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.164" endtime="20201112 12:25:55.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:55.177" level="INFO">${RESULT} = [{'time': 0.019803972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019810833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:55.174" endtime="20201112 12:25:55.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:55.191" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:55.178" endtime="20201112 12:25:55.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.195" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:55.194" endtime="20201112 12:25:55.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.198" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201112 12:25:55.196" endtime="20201112 12:25:55.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.192" endtime="20201112 12:25:55.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.201" endtime="20201112 12:25:55.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:55.205" endtime="20201112 12:25:55.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.203" endtime="20201112 12:25:55.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.199" endtime="20201112 12:25:55.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.789" endtime="20201112 12:25:55.226"></status>
</kw>
<msg timestamp="20201112 12:25:55.226" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.234" endtime="20201112 12:25:55.248"></status>
</kw>
<msg timestamp="20201112 12:25:55.249" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.232" endtime="20201112 12:25:55.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.251" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.250" endtime="20201112 12:25:55.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.252" endtime="20201112 12:25:55.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.229" endtime="20201112 12:25:55.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.228" endtime="20201112 12:25:55.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.263" endtime="20201112 12:25:55.548"></status>
</kw>
<msg timestamp="20201112 12:25:55.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:55.261" endtime="20201112 12:25:55.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:55.553" endtime="20201112 12:25:55.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.568" endtime="20201112 12:25:55.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.259" endtime="20201112 12:25:55.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.257" endtime="20201112 12:25:55.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.576" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:55.574" endtime="20201112 12:25:55.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.581" level="INFO">VALUE: [{'time': 0.019774986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019779361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.019779833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01979025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.019790736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019796278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.01979675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019805417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.019805889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019813417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019813889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019820569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.679999999998493e-06, 'source_diff': 6.679999999998493e-06}, {'time': 0.019821056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019830542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.019831028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019841028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.019841514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019851014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.019851486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019856236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.019856708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019861847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.019862319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019869556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2370000000002155e-06, 'source_diff': 7.2370000000002155e-06}, {'time': 0.019870028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019874958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.019875431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019884208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777000000001478e-06, 'source_diff': 8.777000000001478e-06}, {'time': 0.019884681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019890569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.887999999999033e-06, 'source_diff': 5.887999999999033e-06}, {'time': 0.019891042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019899931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.019900403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019909278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.01990975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01991375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.019914236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019922389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019922861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019931361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.019931833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019936653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.019937125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019941847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.019942319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019947153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.019947625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019953917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.019954389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019960903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.019961375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019966917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.019967389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019971278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.01997175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019980931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.019981403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019985958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555000000003306e-06, 'source_diff': 4.555000000003306e-06}, {'time': 0.019986431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019996292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.019996778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020006056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.020006528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020016972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000001813e-05, 'source_diff': 1.0444000000001813e-05}, {'time': 0.020017444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020026875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.431000000000717e-06, 'source_diff': 9.431000000000717e-06}, {'time': 0.020027347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020037431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.020037917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020042653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.020043125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020047625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.020048097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020055847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.020056319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020060833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.020061319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020065736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.020066208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020071458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.020071931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020079042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.020079528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020089139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.020089611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020096, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.020096486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020101222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.020101694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020108694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.020109181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020115042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.020115528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020123681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.020124153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020131542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.020132014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020137833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.020138306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:55.577" endtime="20201112 12:25:55.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.572" endtime="20201112 12:25:55.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:55.608" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:55.584" endtime="20201112 12:25:55.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.612" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:55.611" endtime="20201112 12:25:55.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.616" level="INFO">VALUE: {'eventsourcediff': [0, 4.7199999999789077e-07, 3.902999999999546e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 4.860000000009301e-07, 5.542000000000741e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 6.679999999998493e-06, 4.870000000004038e-07, 9.485999999999523e-06, 4.860000000009301e-07, 9.999999999999593e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 7.2370000000002155e-06, 4.720000000013602e-07, 4.930000000000212e-06, 4.729999999973644e-07, 8.777000000001478e-06, 4.7300000000083386e-07, 5.887999999999033e-06, 4.7300000000083386e-07, 8.888999999998037e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.859999999974607e-07, 8.153000000000327e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999789077e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.720000000013602e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 6.292000000001491e-06, 4.7199999999789077e-07, 6.513999999999132e-06, 4.720000000013602e-07, 5.542000000000741e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 4.555000000003306e-06, 4.729999999973644e-07, 9.860999999999898e-06, 4.860000000009301e-07, 9.278000000001452e-06, 4.7199999999789077e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 9.431000000000717e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.859999999974607e-07, 4.736000000001711e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.860000000009301e-07, 4.416999999999616e-06, 4.7199999999789077e-07, 5.250000000001781e-06, 4.7300000000083386e-07, 7.110999999997147e-06, 4.860000000009301e-07, 9.610999999999648e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.860000000009301e-07, 4.735999999998242e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.870000000004038e-07, 5.860999999999367e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 7.389000000000007e-06, 4.720000000013602e-07, 5.819000000000657e-06, 4.7300000000083386e-07], 'time': [0.019774986, 0.019775458, 0.019779361, 0.019779833, 0.01979025, 0.019790736, 0.019796278, 0.01979675, 0.019805417, 0.019805889, 0.019813417, 0.019813889, 0.019820569, 0.019821056, 0.019830542, 0.019831028, 0.019841028, 0.019841514, 0.019851014, 0.019851486, 0.019856236, 0.019856708, 0.019861847, 0.019862319, 0.019869556, 0.019870028, 0.019874958, 0.019875431, 0.019884208, 0.019884681, 0.019890569, 0.019891042, 0.019899931, 0.019900403, 0.019909278, 0.01990975, 0.01991375, 0.019914236, 0.019922389, 0.019922861, 0.019931361, 0.019931833, 0.019936653, 0.019937125, 0.019941847, 0.019942319, 0.019947153, 0.019947625, 0.019953917, 0.019954389, 0.019960903, 0.019961375, 0.019966917, 0.019967389, 0.019971278, 0.01997175, 0.019980931, 0.019981403, 0.019985958, 0.019986431, 0.019996292, 0.019996778, 0.020006056, 0.020006528, 0.020016972, 0.020017444, 0.020026875, 0.020027347, 0.020037431, 0.020037917, 0.020042653, 0.020043125, 0.020047625, 0.020048097, 0.020055847, 0.020056319, 0.020060833, 0.020061319, 0.020065736, 0.020066208, 0.020071458, 0.020071931, 0.020079042, 0.020079528, 0.020089139, 0.020089611, 0.020096, 0.020096486, 0.020101222, 0.020101694, 0.020108694, 0.020109181, 0.020115042, 0.020115528, 0.020123681, 0.020124153, 0.020131542, 0.020132014, 0.020137833, 0.020138306], 'source_diff': [0, 4.7199999999789077e-07, 3.902999999999546e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 4.860000000009301e-07, 5.542000000000741e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 6.679999999998493e-06, 4.870000000004038e-07, 9.485999999999523e-06, 4.860000000009301e-07, 9.999999999999593e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 7.2370000000002155e-06, 4.720000000013602e-07, 4.930000000000212e-06, 4.729999999973644e-07, 8.777000000001478e-06, 4.7300000000083386e-07, 5.887999999999033e-06, 4.7300000000083386e-07, 8.888999999998037e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.859999999974607e-07, 8.153000000000327e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999789077e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.720000000013602e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 6.292000000001491e-06, 4.7199999999789077e-07, 6.513999999999132e-06, 4.720000000013602e-07, 5.542000000000741e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 4.555000000003306e-06, 4.729999999973644e-07, 9.860999999999898e-06, 4.860000000009301e-07, 9.278000000001452e-06, 4.7199999999789077e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 9.431000000000717e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.859999999974607e-07, 4.736000000001711e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.860000000009301e-07, 4.416999999999616e-06, 4.7199999999789077e-07, 5.250000000001781e-06, 4.7300000000083386e-07, 7.110999999997147e-06, 4.860000000009301e-07, 9.610999999999648e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.860000000009301e-07, 4.735999999998242e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.870000000004038e-07, 5.860999999999367e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 7.389000000000007e-06, 4.720000000013602e-07, 5.819000000000657e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:55.613" endtime="20201112 12:25:55.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.609" endtime="20201112 12:25:55.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:55.622" level="INFO">${RESULT} = [{'time': 0.019775458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019779833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:55.618" endtime="20201112 12:25:55.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:55.636" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:55.623" endtime="20201112 12:25:55.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.640" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:55.639" endtime="20201112 12:25:55.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.643" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 12:25:55.641" endtime="20201112 12:25:55.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.637" endtime="20201112 12:25:55.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.646" endtime="20201112 12:25:55.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:55.650" endtime="20201112 12:25:55.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.648" endtime="20201112 12:25:55.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.644" endtime="20201112 12:25:55.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.226" endtime="20201112 12:25:55.670"></status>
</kw>
<msg timestamp="20201112 12:25:55.671" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.679" endtime="20201112 12:25:55.695"></status>
</kw>
<msg timestamp="20201112 12:25:55.695" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.677" endtime="20201112 12:25:55.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.698" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.697" endtime="20201112 12:25:55.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.699" endtime="20201112 12:25:55.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.674" endtime="20201112 12:25:55.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.673" endtime="20201112 12:25:55.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.709" endtime="20201112 12:25:55.994"></status>
</kw>
<msg timestamp="20201112 12:25:55.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:55.707" endtime="20201112 12:25:55.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:55.998" endtime="20201112 12:25:56.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.007" endtime="20201112 12:25:56.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.704" endtime="20201112 12:25:56.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.702" endtime="20201112 12:25:56.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.014" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:56.013" endtime="20201112 12:25:56.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.019" level="INFO">VALUE: [{'time': 0.022046792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022052083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.022052569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022059153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.584000000000451e-06, 'source_diff': 6.584000000000451e-06}, {'time': 0.022059625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022065792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.022066264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022073069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.022073542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022078153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.022078625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022087083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.022087556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022093417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.022093903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02210125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.022101722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02210925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.022109722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022120194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472000000000953e-05, 'source_diff': 1.0472000000000953e-05}, {'time': 0.022120667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022125167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.022125639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022133264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.02213375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022138361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.022138847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022146181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.334000000001201e-06, 'source_diff': 7.334000000001201e-06}, {'time': 0.022146653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022150542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.022151014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022156903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.022157375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022162722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.022163194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022169694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.022170167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022177292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.022177764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022186528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.022187014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022196722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.707999999997163e-06, 'source_diff': 9.707999999997163e-06}, {'time': 0.022197208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022201514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.022201986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022211319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.022211792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022219722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.929999999999743e-06, 'source_diff': 7.929999999999743e-06}, {'time': 0.022220194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022229292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.09800000000252e-06, 'source_diff': 9.09800000000252e-06}, {'time': 0.022229764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022234597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.022235069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022240528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.4589999999993255e-06, 'source_diff': 5.4589999999993255e-06}, {'time': 0.022241, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022246153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.022246625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022250819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.194000000002501e-06, 'source_diff': 4.194000000002501e-06}, {'time': 0.022251306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.022257903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.022258375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022268403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.022268889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022274542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.022275014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022280292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.022280764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022289208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.022289694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022298681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.987000000001966e-06, 'source_diff': 8.987000000001966e-06}, {'time': 0.022299153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022304931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.022305403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022311583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.022312056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022317931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.022318403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022328639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.022329125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022338417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.022338903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022347181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.022347653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022351542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.022352014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022355903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.022356375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022364736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.022365222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022374847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.022375319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022384736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.416999999997677e-06, 'source_diff': 9.416999999997677e-06}, {'time': 0.022385208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02239325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.022393722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022398958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.022399444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022406958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.022407431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:56.015" endtime="20201112 12:25:56.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.010" endtime="20201112 12:25:56.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:56.047" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:56.022" endtime="20201112 12:25:56.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.051" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:56.050" endtime="20201112 12:25:56.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.055" level="INFO">VALUE: {'eventsourcediff': [0, 4.720000000013602e-07, 4.818999999999657e-06, 4.860000000009301e-07, 6.584000000000451e-06, 4.7199999999789077e-07, 6.167000000001366e-06, 4.7199999999789077e-07, 6.805000000002087e-06, 4.7300000000083386e-07, 4.610999999998117e-06, 4.720000000013602e-07, 8.457999999999383e-06, 4.7300000000083386e-07, 5.860999999999367e-06, 4.860000000009301e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 1.0472000000000953e-05, 4.7300000000083386e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.860000000009301e-07, 4.610999999998117e-06, 4.860000000009301e-07, 7.334000000001201e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 8.764000000001382e-06, 4.860000000009301e-07, 9.707999999997163e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 7.929999999999743e-06, 4.7199999999789077e-07, 9.09800000000252e-06, 4.7199999999789077e-07, 4.832999999999227e-06, 4.720000000013602e-07, 5.4589999999993255e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 4.194000000002501e-06, 4.869999999969343e-07, 6.597000000000547e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 5.278000000000921e-06, 4.720000000013602e-07, 8.443999999999813e-06, 4.859999999974607e-07, 8.987000000001966e-06, 4.7199999999789077e-07, 5.778000000001421e-06, 4.720000000013602e-07, 6.179999999997993e-06, 4.7300000000083386e-07, 5.874999999998937e-06, 4.720000000013602e-07, 1.0236000000000273e-05, 4.859999999974607e-07, 9.292000000001022e-06, 4.860000000009301e-07, 8.278000000000452e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 9.624999999999218e-06, 4.720000000013602e-07, 9.416999999997677e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.729999999973644e-07], 'time': [0.022046792, 0.022047264, 0.022052083, 0.022052569, 0.022059153, 0.022059625, 0.022065792, 0.022066264, 0.022073069, 0.022073542, 0.022078153, 0.022078625, 0.022087083, 0.022087556, 0.022093417, 0.022093903, 0.02210125, 0.022101722, 0.02210925, 0.022109722, 0.022120194, 0.022120667, 0.022125167, 0.022125639, 0.022133264, 0.02213375, 0.022138361, 0.022138847, 0.022146181, 0.022146653, 0.022150542, 0.022151014, 0.022156903, 0.022157375, 0.022162722, 0.022163194, 0.022169694, 0.022170167, 0.022177292, 0.022177764, 0.022186528, 0.022187014, 0.022196722, 0.022197208, 0.022201514, 0.022201986, 0.022211319, 0.022211792, 0.022219722, 0.022220194, 0.022229292, 0.022229764, 0.022234597, 0.022235069, 0.022240528, 0.022241, 0.022246153, 0.022246625, 0.022250819, 0.022251306, 0.022257903, 0.022258375, 0.022268403, 0.022268889, 0.022274542, 0.022275014, 0.022280292, 0.022280764, 0.022289208, 0.022289694, 0.022298681, 0.022299153, 0.022304931, 0.022305403, 0.022311583, 0.022312056, 0.022317931, 0.022318403, 0.022328639, 0.022329125, 0.022338417, 0.022338903, 0.022347181, 0.022347653, 0.022351542, 0.022352014, 0.022355903, 0.022356375, 0.022364736, 0.022365222, 0.022374847, 0.022375319, 0.022384736, 0.022385208, 0.02239325, 0.022393722, 0.022398958, 0.022399444, 0.022406958, 0.022407431], 'source_diff': [0, 4.720000000013602e-07, 4.818999999999657e-06, 4.860000000009301e-07, 6.584000000000451e-06, 4.7199999999789077e-07, 6.167000000001366e-06, 4.7199999999789077e-07, 6.805000000002087e-06, 4.7300000000083386e-07, 4.610999999998117e-06, 4.720000000013602e-07, 8.457999999999383e-06, 4.7300000000083386e-07, 5.860999999999367e-06, 4.860000000009301e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 1.0472000000000953e-05, 4.7300000000083386e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.860000000009301e-07, 4.610999999998117e-06, 4.860000000009301e-07, 7.334000000001201e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 8.764000000001382e-06, 4.860000000009301e-07, 9.707999999997163e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 7.929999999999743e-06, 4.7199999999789077e-07, 9.09800000000252e-06, 4.7199999999789077e-07, 4.832999999999227e-06, 4.720000000013602e-07, 5.4589999999993255e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 4.194000000002501e-06, 4.869999999969343e-07, 6.597000000000547e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 5.278000000000921e-06, 4.720000000013602e-07, 8.443999999999813e-06, 4.859999999974607e-07, 8.987000000001966e-06, 4.7199999999789077e-07, 5.778000000001421e-06, 4.720000000013602e-07, 6.179999999997993e-06, 4.7300000000083386e-07, 5.874999999998937e-06, 4.720000000013602e-07, 1.0236000000000273e-05, 4.859999999974607e-07, 9.292000000001022e-06, 4.860000000009301e-07, 8.278000000000452e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 9.624999999999218e-06, 4.720000000013602e-07, 9.416999999997677e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.729999999973644e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:56.052" endtime="20201112 12:25:56.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.048" endtime="20201112 12:25:56.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:56.061" level="INFO">${RESULT} = [{'time': 0.022047264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022052569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:56.057" endtime="20201112 12:25:56.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:56.074" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:56.062" endtime="20201112 12:25:56.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.079" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:56.078" endtime="20201112 12:25:56.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.081" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201112 12:25:56.080" endtime="20201112 12:25:56.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.075" endtime="20201112 12:25:56.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.085" endtime="20201112 12:25:56.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:56.088" endtime="20201112 12:25:56.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.086" endtime="20201112 12:25:56.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.083" endtime="20201112 12:25:56.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.671" endtime="20201112 12:25:56.109"></status>
</kw>
<msg timestamp="20201112 12:25:56.109" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.117" endtime="20201112 12:25:56.133"></status>
</kw>
<msg timestamp="20201112 12:25:56.134" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.116" endtime="20201112 12:25:56.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.136" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.135" endtime="20201112 12:25:56.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.137" endtime="20201112 12:25:56.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.113" endtime="20201112 12:25:56.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.111" endtime="20201112 12:25:56.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.148" endtime="20201112 12:25:56.437"></status>
</kw>
<msg timestamp="20201112 12:25:56.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020490958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:56.146" endtime="20201112 12:25:56.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020490958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:56.442" endtime="20201112 12:25:56.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.451" endtime="20201112 12:25:56.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.143" endtime="20201112 12:25:56.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.142" endtime="20201112 12:25:56.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.457" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:56.456" endtime="20201112 12:25:56.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.463" level="INFO">VALUE: [{'time': 0.020490486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020490958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020500472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.020500958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020509, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.020509486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020514639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.020515111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020520028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.020520514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020526792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.020527264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020533361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.020533833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020543431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.020543917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020553625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.020554111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020558847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.020559319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020565292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.020565764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020573306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.020573778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020580625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.020581097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020587014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.0205875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020591708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.020592181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020596903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.020597375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02060325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.020603722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0206125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.020612972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020622222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.249999999998842e-06, 'source_diff': 9.249999999998842e-06}, {'time': 0.020622694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020631847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.020632319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020637472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.020637944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020643833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.020644306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020649319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.012999999998158e-06, 'source_diff': 5.012999999998158e-06}, {'time': 0.020649806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020655764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.02065625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020664208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.020664681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020671056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.020671528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020681125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.020681597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020686208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.020686694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020697111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0417000000002147e-05, 'source_diff': 1.0417000000002147e-05}, {'time': 0.020697597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020707181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.020707667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020713944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.277000000002447e-06, 'source_diff': 6.277000000002447e-06}, {'time': 0.020714417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020720806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.020721278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020730347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.020730819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020734833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.020735306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020741278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.02074175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020748125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.020748611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020752514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.020752986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020762069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.020762556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020771014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.0207715, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020776222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.020776694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020785583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.020786056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020795347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.290999999998079e-06, 'source_diff': 9.290999999998079e-06}, {'time': 0.020795833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020803875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.020804347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020808542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.020809014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020817056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.020817528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020825778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.02082625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020836361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000000148e-05, 'source_diff': 1.0111000000000148e-05}, {'time': 0.020836833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020843625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.020844111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020850417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.020850889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020857778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.02085825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:56.459" endtime="20201112 12:25:56.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.454" endtime="20201112 12:25:56.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:56.489" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:56.465" endtime="20201112 12:25:56.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.493" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:56.492" endtime="20201112 12:25:56.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.497" level="INFO">VALUE: {'eventsourcediff': [0, 4.720000000013602e-07, 9.513999999998662e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.860000000009301e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 4.917000000000116e-06, 4.860000000009301e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.097000000000047e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.859999999974607e-07, 9.708000000000633e-06, 4.860000000009301e-07, 4.736000000001711e-06, 4.7199999999789077e-07, 5.9729999999993955e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 6.847000000000797e-06, 4.7199999999789077e-07, 5.917000000001116e-06, 4.860000000009301e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 4.721999999998672e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 8.777999999997482e-06, 4.720000000013602e-07, 9.249999999998842e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 5.889000000001976e-06, 4.7300000000083386e-07, 5.012999999998158e-06, 4.870000000004038e-07, 5.958000000000352e-06, 4.860000000009301e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 6.374999999999437e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7199999999789077e-07, 4.611000000001586e-06, 4.859999999974607e-07, 1.0417000000002147e-05, 4.860000000009301e-07, 9.583999999999981e-06, 4.859999999974607e-07, 6.277000000002447e-06, 4.729999999973644e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 9.069000000000438e-06, 4.720000000013602e-07, 4.014000000000101e-06, 4.729999999973644e-07, 5.971999999999922e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.860000000009301e-07, 3.902999999999546e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.870000000004038e-07, 8.457999999999383e-06, 4.859999999974607e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999789077e-07, 8.250000000001312e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.7199999999789077e-07, 6.792000000001991e-06, 4.859999999974607e-07, 6.306000000001061e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.7199999999789077e-07], 'time': [0.020490486, 0.020490958, 0.020500472, 0.020500958, 0.020509, 0.020509486, 0.020514639, 0.020515111, 0.020520028, 0.020520514, 0.020526792, 0.020527264, 0.020533361, 0.020533833, 0.020543431, 0.020543917, 0.020553625, 0.020554111, 0.020558847, 0.020559319, 0.020565292, 0.020565764, 0.020573306, 0.020573778, 0.020580625, 0.020581097, 0.020587014, 0.0205875, 0.020591708, 0.020592181, 0.020596903, 0.020597375, 0.02060325, 0.020603722, 0.0206125, 0.020612972, 0.020622222, 0.020622694, 0.020631847, 0.020632319, 0.020637472, 0.020637944, 0.020643833, 0.020644306, 0.020649319, 0.020649806, 0.020655764, 0.02065625, 0.020664208, 0.020664681, 0.020671056, 0.020671528, 0.020681125, 0.020681597, 0.020686208, 0.020686694, 0.020697111, 0.020697597, 0.020707181, 0.020707667, 0.020713944, 0.020714417, 0.020720806, 0.020721278, 0.020730347, 0.020730819, 0.020734833, 0.020735306, 0.020741278, 0.02074175, 0.020748125, 0.020748611, 0.020752514, 0.020752986, 0.020762069, 0.020762556, 0.020771014, 0.0207715, 0.020776222, 0.020776694, 0.020785583, 0.020786056, 0.020795347, 0.020795833, 0.020803875, 0.020804347, 0.020808542, 0.020809014, 0.020817056, 0.020817528, 0.020825778, 0.02082625, 0.020836361, 0.020836833, 0.020843625, 0.020844111, 0.020850417, 0.020850889, 0.020857778, 0.02085825], 'source_diff': [0, 4.720000000013602e-07, 9.513999999998662e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.860000000009301e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 4.917000000000116e-06, 4.860000000009301e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.097000000000047e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.859999999974607e-07, 9.708000000000633e-06, 4.860000000009301e-07, 4.736000000001711e-06, 4.7199999999789077e-07, 5.9729999999993955e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 6.847000000000797e-06, 4.7199999999789077e-07, 5.917000000001116e-06, 4.860000000009301e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 4.721999999998672e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 8.777999999997482e-06, 4.720000000013602e-07, 9.249999999998842e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 5.889000000001976e-06, 4.7300000000083386e-07, 5.012999999998158e-06, 4.870000000004038e-07, 5.958000000000352e-06, 4.860000000009301e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 6.374999999999437e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7199999999789077e-07, 4.611000000001586e-06, 4.859999999974607e-07, 1.0417000000002147e-05, 4.860000000009301e-07, 9.583999999999981e-06, 4.859999999974607e-07, 6.277000000002447e-06, 4.729999999973644e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 9.069000000000438e-06, 4.720000000013602e-07, 4.014000000000101e-06, 4.729999999973644e-07, 5.971999999999922e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.860000000009301e-07, 3.902999999999546e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.870000000004038e-07, 8.457999999999383e-06, 4.859999999974607e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999789077e-07, 8.250000000001312e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.7199999999789077e-07, 6.792000000001991e-06, 4.859999999974607e-07, 6.306000000001061e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:56.494" endtime="20201112 12:25:56.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.490" endtime="20201112 12:25:56.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:56.503" level="INFO">${RESULT} = [{'time': 0.020490958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020500958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:56.500" endtime="20201112 12:25:56.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:56.518" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:56.504" endtime="20201112 12:25:56.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.522" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:56.521" endtime="20201112 12:25:56.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.525" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 12:25:56.523" endtime="20201112 12:25:56.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.519" endtime="20201112 12:25:56.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.528" endtime="20201112 12:25:56.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:56.531" endtime="20201112 12:25:56.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.530" endtime="20201112 12:25:56.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.526" endtime="20201112 12:25:56.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.110" endtime="20201112 12:25:56.552"></status>
</kw>
<msg timestamp="20201112 12:25:56.552" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.561" endtime="20201112 12:25:56.574"></status>
</kw>
<msg timestamp="20201112 12:25:56.575" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.559" endtime="20201112 12:25:56.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.577" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.576" endtime="20201112 12:25:56.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.579" endtime="20201112 12:25:56.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.556" endtime="20201112 12:25:56.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.555" endtime="20201112 12:25:56.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.589" endtime="20201112 12:25:56.877"></status>
</kw>
<msg timestamp="20201112 12:25:56.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019358375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019358847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:56.587" endtime="20201112 12:25:56.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019358375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019358847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:56.881" endtime="20201112 12:25:56.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.890" endtime="20201112 12:25:56.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.584" endtime="20201112 12:25:56.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.582" endtime="20201112 12:25:56.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.896" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:56.895" endtime="20201112 12:25:56.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.902" level="INFO">VALUE: [{'time': 0.019358375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019358847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019367097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.019367569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019375944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.019376417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019385194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777000000001478e-06, 'source_diff': 8.777000000001478e-06}, {'time': 0.019385667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.01939425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.019394722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019400597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.019401069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019411528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0459000000000857e-05, 'source_diff': 1.0459000000000857e-05}, {'time': 0.019412, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019419014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019419486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019425264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.019425736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019434611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.019435083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019442194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.019442667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019450194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.019450667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019456306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.019456778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019467, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.019467472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019477486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.019477958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01948725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.019487722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019493583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019494069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019500889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.820000000001131e-06, 'source_diff': 6.820000000001131e-06}, {'time': 0.019501361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019505861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.019506347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019510986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.019511458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019517931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.019518417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019528444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.019528917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019533847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.019534333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019542486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019542972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019548847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.019549319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019554972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.019555444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019563167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722999999997676e-06, 'source_diff': 7.722999999997676e-06}, {'time': 0.019563653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019571792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.019572264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019577597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.019578083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019584972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.019585444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019592444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019592931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019599306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.019599778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019605444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.019605917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019610667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.019611139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019616861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.019617333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019625819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.019626292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019634653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.019635125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019642583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.019643056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019649208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.152000000002322e-06, 'source_diff': 6.152000000002322e-06}, {'time': 0.019649694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019659514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.01966, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019667486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019673889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4029999999985765e-06, 'source_diff': 6.4029999999985765e-06}, {'time': 0.019674361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019681486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.019681958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019687611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.019688083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019698431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.019698903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019709139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.019709625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019715694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.019716181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019724556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.019725028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019729014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.0197295, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019734319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019734792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:56.898" endtime="20201112 12:25:56.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.893" endtime="20201112 12:25:56.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:56.929" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:56.904" endtime="20201112 12:25:56.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.933" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:56.932" endtime="20201112 12:25:56.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.937" level="INFO">VALUE: {'eventsourcediff': [0, 4.7199999999789077e-07, 8.250000000001312e-06, 4.720000000013602e-07, 8.374999999997967e-06, 4.7300000000083386e-07, 8.777000000001478e-06, 4.729999999973644e-07, 8.582999999999508e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 1.0459000000000857e-05, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 5.778000000001421e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 5.6389999999982565e-06, 4.720000000013602e-07, 1.0222000000000703e-05, 4.7199999999789077e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 9.292000000001022e-06, 4.7199999999789077e-07, 5.860999999999367e-06, 4.860000000009301e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.7199999999789077e-07, 6.4729999999998955e-06, 4.860000000009301e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 4.930000000000212e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.859999999974607e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07, 7.722999999997676e-06, 4.860000000009301e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 5.332999999999727e-06, 4.860000000009301e-07, 6.888999999999507e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.870000000004038e-07, 6.374999999999437e-06, 4.720000000013602e-07, 5.665999999997923e-06, 4.7300000000083386e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 5.721999999999672e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.729999999973644e-07, 6.152000000002322e-06, 4.859999999974607e-07, 9.820000000000662e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.860000000009301e-07, 6.4029999999985765e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 1.0236000000000273e-05, 4.860000000009301e-07, 6.0689999999974376e-06, 4.870000000004038e-07, 8.375000000001437e-06, 4.7199999999789077e-07, 3.986000000000961e-06, 4.860000000009301e-07, 4.818999999999657e-06, 4.7300000000083386e-07], 'time': [0.019358375, 0.019358847, 0.019367097, 0.019367569, 0.019375944, 0.019376417, 0.019385194, 0.019385667, 0.01939425, 0.019394722, 0.019400597, 0.019401069, 0.019411528, 0.019412, 0.019419014, 0.019419486, 0.019425264, 0.019425736, 0.019434611, 0.019435083, 0.019442194, 0.019442667, 0.019450194, 0.019450667, 0.019456306, 0.019456778, 0.019467, 0.019467472, 0.019477486, 0.019477958, 0.01948725, 0.019487722, 0.019493583, 0.019494069, 0.019500889, 0.019501361, 0.019505861, 0.019506347, 0.019510986, 0.019511458, 0.019517931, 0.019518417, 0.019528444, 0.019528917, 0.019533847, 0.019534333, 0.019542486, 0.019542972, 0.019548847, 0.019549319, 0.019554972, 0.019555444, 0.019563167, 0.019563653, 0.019571792, 0.019572264, 0.019577597, 0.019578083, 0.019584972, 0.019585444, 0.019592444, 0.019592931, 0.019599306, 0.019599778, 0.019605444, 0.019605917, 0.019610667, 0.019611139, 0.019616861, 0.019617333, 0.019625819, 0.019626292, 0.019634653, 0.019635125, 0.019642583, 0.019643056, 0.019649208, 0.019649694, 0.019659514, 0.01966, 0.019667, 0.019667486, 0.019673889, 0.019674361, 0.019681486, 0.019681958, 0.019687611, 0.019688083, 0.019698431, 0.019698903, 0.019709139, 0.019709625, 0.019715694, 0.019716181, 0.019724556, 0.019725028, 0.019729014, 0.0197295, 0.019734319, 0.019734792], 'source_diff': [0, 4.7199999999789077e-07, 8.250000000001312e-06, 4.720000000013602e-07, 8.374999999997967e-06, 4.7300000000083386e-07, 8.777000000001478e-06, 4.729999999973644e-07, 8.582999999999508e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 1.0459000000000857e-05, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 5.778000000001421e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 5.6389999999982565e-06, 4.720000000013602e-07, 1.0222000000000703e-05, 4.7199999999789077e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 9.292000000001022e-06, 4.7199999999789077e-07, 5.860999999999367e-06, 4.860000000009301e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.7199999999789077e-07, 6.4729999999998955e-06, 4.860000000009301e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 4.930000000000212e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.859999999974607e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07, 7.722999999997676e-06, 4.860000000009301e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 5.332999999999727e-06, 4.860000000009301e-07, 6.888999999999507e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.870000000004038e-07, 6.374999999999437e-06, 4.720000000013602e-07, 5.665999999997923e-06, 4.7300000000083386e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 5.721999999999672e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.729999999973644e-07, 6.152000000002322e-06, 4.859999999974607e-07, 9.820000000000662e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.860000000009301e-07, 6.4029999999985765e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 1.0236000000000273e-05, 4.860000000009301e-07, 6.0689999999974376e-06, 4.870000000004038e-07, 8.375000000001437e-06, 4.7199999999789077e-07, 3.986000000000961e-06, 4.860000000009301e-07, 4.818999999999657e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:56.934" endtime="20201112 12:25:56.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.930" endtime="20201112 12:25:56.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:56.943" level="INFO">${RESULT} = [{'time': 0.019358847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019367569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:56.939" endtime="20201112 12:25:56.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:56.956" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:56.944" endtime="20201112 12:25:56.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.961" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:56.960" endtime="20201112 12:25:56.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.963" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 12:25:56.962" endtime="20201112 12:25:56.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.957" endtime="20201112 12:25:56.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.967" endtime="20201112 12:25:56.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:56.970" endtime="20201112 12:25:56.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.969" endtime="20201112 12:25:56.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.965" endtime="20201112 12:25:56.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.553" endtime="20201112 12:25:56.991"></status>
</kw>
<msg timestamp="20201112 12:25:56.991" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.999" endtime="20201112 12:25:57.017"></status>
</kw>
<msg timestamp="20201112 12:25:57.017" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.998" endtime="20201112 12:25:57.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.020" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.019" endtime="20201112 12:25:57.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.021" endtime="20201112 12:25:57.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.995" endtime="20201112 12:25:57.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.993" endtime="20201112 12:25:57.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.031" endtime="20201112 12:25:57.316"></status>
</kw>
<msg timestamp="20201112 12:25:57.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:57.030" endtime="20201112 12:25:57.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:57.320" endtime="20201112 12:25:57.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.329" endtime="20201112 12:25:57.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.027" endtime="20201112 12:25:57.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.025" endtime="20201112 12:25:57.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.336" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:57.335" endtime="20201112 12:25:57.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.341" level="INFO">VALUE: [{'time': 0.022583792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022588889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.022589375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022596694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.022597167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022602014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.022602486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022609806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.022610278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022620319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0040999999998829e-05, 'source_diff': 1.0040999999998829e-05}, {'time': 0.022620792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022626986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.022627458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022631972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.022632444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022637264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.02263775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02264425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.022644722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022652347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.022652833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022663167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.022663653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022671083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430000000002712e-06, 'source_diff': 7.430000000002712e-06}, {'time': 0.022671556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022676069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513000000001127e-06, 'source_diff': 4.513000000001127e-06}, {'time': 0.022676556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022684806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.022685292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022694167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.022694653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022701681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.028000000002671e-06, 'source_diff': 7.028000000002671e-06}, {'time': 0.022702153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022712069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916000000002173e-06, 'source_diff': 9.916000000002173e-06}, {'time': 0.022712542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022721028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.0227215, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022729361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.022729833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022735583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.022736056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022743153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.022743639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022749694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.022750181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022757806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.022758278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022765181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.022765653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022769736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.022770222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022777833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.611000000001117e-06, 'source_diff': 7.611000000001117e-06}, {'time': 0.022778319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022783236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916999999996646e-06, 'source_diff': 4.916999999996646e-06}, {'time': 0.022783708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02278875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.022789222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022796014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.022796486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022801528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.022802, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022810056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.022810528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022817333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.022817806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022823361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.022823847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022833875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.022834347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022843444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.022843917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022850833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.916000000002642e-06, 'source_diff': 6.916000000002642e-06}, {'time': 0.022851306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022861125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.022861611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022869139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.022869611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022878403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.791999999997052e-06, 'source_diff': 8.791999999997052e-06}, {'time': 0.022878875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022888806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.022889278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022895556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.022896042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022905861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.022906347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022911181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.022911653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022920139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.022920611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022929583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.022930056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022934792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.022935264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022943833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.022944319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022954208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.022954681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022961014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.022961486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:57.337" endtime="20201112 12:25:57.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.332" endtime="20201112 12:25:57.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:57.368" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:57.344" endtime="20201112 12:25:57.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.372" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:57.371" endtime="20201112 12:25:57.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.376" level="INFO">VALUE: {'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 4.860000000009301e-07, 4.611000000001586e-06, 4.859999999974607e-07, 7.319000000002157e-06, 4.7300000000083386e-07, 4.846999999998797e-06, 4.720000000013602e-07, 7.319999999998161e-06, 4.720000000013602e-07, 1.0040999999998829e-05, 4.7300000000083386e-07, 6.194000000001032e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 6.499999999999562e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.860000000009301e-07, 1.0334000000000731e-05, 4.859999999974607e-07, 7.430000000002712e-06, 4.729999999973644e-07, 4.513000000001127e-06, 4.870000000004038e-07, 8.249999999997842e-06, 4.860000000009301e-07, 8.875000000001937e-06, 4.859999999974607e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 9.916000000002173e-06, 4.729999999973644e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 7.861000000001367e-06, 4.720000000013602e-07, 5.749999999998812e-06, 4.7300000000083386e-07, 7.0969999999975775e-06, 4.860000000009301e-07, 6.055000000001337e-06, 4.870000000004038e-07, 7.624999999997217e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 4.082999999998477e-06, 4.860000000009301e-07, 7.611000000001117e-06, 4.860000000009301e-07, 4.916999999996646e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 8.055999999999341e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 5.555000000000837e-06, 4.860000000009301e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.096999999999578e-06, 4.729999999973644e-07, 6.916000000002642e-06, 4.729999999973644e-07, 9.819000000001188e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.720000000013602e-07, 8.791999999997052e-06, 4.720000000013602e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 6.278000000001921e-06, 4.859999999974607e-07, 9.819000000001188e-06, 4.860000000009301e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.7300000000083386e-07, 4.735999999998242e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.860000000009301e-07, 9.888999999999037e-06, 4.7300000000083386e-07, 6.3329999999972575e-06, 4.720000000013602e-07], 'time': [0.022583792, 0.022584278, 0.022588889, 0.022589375, 0.022596694, 0.022597167, 0.022602014, 0.022602486, 0.022609806, 0.022610278, 0.022620319, 0.022620792, 0.022626986, 0.022627458, 0.022631972, 0.022632444, 0.022637264, 0.02263775, 0.02264425, 0.022644722, 0.022652347, 0.022652833, 0.022663167, 0.022663653, 0.022671083, 0.022671556, 0.022676069, 0.022676556, 0.022684806, 0.022685292, 0.022694167, 0.022694653, 0.022701681, 0.022702153, 0.022712069, 0.022712542, 0.022721028, 0.0227215, 0.022729361, 0.022729833, 0.022735583, 0.022736056, 0.022743153, 0.022743639, 0.022749694, 0.022750181, 0.022757806, 0.022758278, 0.022765181, 0.022765653, 0.022769736, 0.022770222, 0.022777833, 0.022778319, 0.022783236, 0.022783708, 0.02278875, 0.022789222, 0.022796014, 0.022796486, 0.022801528, 0.022802, 0.022810056, 0.022810528, 0.022817333, 0.022817806, 0.022823361, 0.022823847, 0.022833875, 0.022834347, 0.022843444, 0.022843917, 0.022850833, 0.022851306, 0.022861125, 0.022861611, 0.022869139, 0.022869611, 0.022878403, 0.022878875, 0.022888806, 0.022889278, 0.022895556, 0.022896042, 0.022905861, 0.022906347, 0.022911181, 0.022911653, 0.022920139, 0.022920611, 0.022929583, 0.022930056, 0.022934792, 0.022935264, 0.022943833, 0.022944319, 0.022954208, 0.022954681, 0.022961014, 0.022961486], 'source_diff': [0, 4.860000000009301e-07, 4.611000000001586e-06, 4.859999999974607e-07, 7.319000000002157e-06, 4.7300000000083386e-07, 4.846999999998797e-06, 4.720000000013602e-07, 7.319999999998161e-06, 4.720000000013602e-07, 1.0040999999998829e-05, 4.7300000000083386e-07, 6.194000000001032e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 6.499999999999562e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.860000000009301e-07, 1.0334000000000731e-05, 4.859999999974607e-07, 7.430000000002712e-06, 4.729999999973644e-07, 4.513000000001127e-06, 4.870000000004038e-07, 8.249999999997842e-06, 4.860000000009301e-07, 8.875000000001937e-06, 4.859999999974607e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 9.916000000002173e-06, 4.729999999973644e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 7.861000000001367e-06, 4.720000000013602e-07, 5.749999999998812e-06, 4.7300000000083386e-07, 7.0969999999975775e-06, 4.860000000009301e-07, 6.055000000001337e-06, 4.870000000004038e-07, 7.624999999997217e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 4.082999999998477e-06, 4.860000000009301e-07, 7.611000000001117e-06, 4.860000000009301e-07, 4.916999999996646e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 8.055999999999341e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 5.555000000000837e-06, 4.860000000009301e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.096999999999578e-06, 4.729999999973644e-07, 6.916000000002642e-06, 4.729999999973644e-07, 9.819000000001188e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.720000000013602e-07, 8.791999999997052e-06, 4.720000000013602e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 6.278000000001921e-06, 4.859999999974607e-07, 9.819000000001188e-06, 4.860000000009301e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.7300000000083386e-07, 4.735999999998242e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.860000000009301e-07, 9.888999999999037e-06, 4.7300000000083386e-07, 6.3329999999972575e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:57.373" endtime="20201112 12:25:57.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.369" endtime="20201112 12:25:57.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:57.382" level="INFO">${RESULT} = [{'time': 0.022584278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022589375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:57.379" endtime="20201112 12:25:57.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:57.396" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:57.383" endtime="20201112 12:25:57.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.400" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:57.399" endtime="20201112 12:25:57.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.403" level="INFO">VALUE: [4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:25:57.402" endtime="20201112 12:25:57.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.397" endtime="20201112 12:25:57.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.406" endtime="20201112 12:25:57.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:57.410" endtime="20201112 12:25:57.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.408" endtime="20201112 12:25:57.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.405" endtime="20201112 12:25:57.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.992" endtime="20201112 12:25:57.431"></status>
</kw>
<msg timestamp="20201112 12:25:57.431" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.439" endtime="20201112 12:25:57.453"></status>
</kw>
<msg timestamp="20201112 12:25:57.454" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.437" endtime="20201112 12:25:57.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.457" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.455" endtime="20201112 12:25:57.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.458" endtime="20201112 12:25:57.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.435" endtime="20201112 12:25:57.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.433" endtime="20201112 12:25:57.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.467" endtime="20201112 12:25:57.755"></status>
</kw>
<msg timestamp="20201112 12:25:57.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:57.465" endtime="20201112 12:25:57.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:57.759" endtime="20201112 12:25:57.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.768" endtime="20201112 12:25:57.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.463" endtime="20201112 12:25:57.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.461" endtime="20201112 12:25:57.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.775" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:57.774" endtime="20201112 12:25:57.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.780" level="INFO">VALUE: [{'time': 0.020301958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020311319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.020311806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020318306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.020318778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020326514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.020326986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020332542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.020333028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020343278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0249999999999843e-05, 'source_diff': 1.0249999999999843e-05}, {'time': 0.02034375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020351972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.020352458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020361111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.020361583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020366514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.020366986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020372639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.020373111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020382083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.020382556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020388208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.652000000001822e-06, 'source_diff': 5.652000000001822e-06}, {'time': 0.020388681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020392792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.020393264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020403306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041999999998302e-05, 'source_diff': 1.0041999999998302e-05}, {'time': 0.020403778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020409083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.020409569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020420014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000001287e-05, 'source_diff': 1.0445000000001287e-05}, {'time': 0.020420486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020430944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0457999999997913e-05, 'source_diff': 1.0457999999997913e-05}, {'time': 0.020431417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020439875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.020440361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020447167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.020447639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.020458472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020468083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.611000000003117e-06, 'source_diff': 9.611000000003117e-06}, {'time': 0.020468556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020474847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291000000002017e-06, 'source_diff': 6.291000000002017e-06}, {'time': 0.020475319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020480208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.020480681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020486333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.020486806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020490722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.020491194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020497542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3479999999997705e-06, 'source_diff': 6.3479999999997705e-06}, {'time': 0.020498028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020502014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.020502486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020510556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.020511028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020518722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.020519208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020527458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.020527931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.02053775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.020538236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020545444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.020545931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020551792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.020552278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020560125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.020560597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020570333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999999773e-06, 'source_diff': 9.735999999999773e-06}, {'time': 0.020570806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020576972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.020577444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020586139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.020586611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020594431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819999999998661e-06, 'source_diff': 7.819999999998661e-06}, {'time': 0.020594903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020604056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.020604528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020611125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.020611597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020619556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.959000000001826e-06, 'source_diff': 7.959000000001826e-06}, {'time': 0.020620028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020629319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.020629792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020640111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0318999999998218e-05, 'source_diff': 1.0318999999998218e-05}, {'time': 0.020640583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020647083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.020647556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020653931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.020654403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020664722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0318999999998218e-05, 'source_diff': 1.0318999999998218e-05}, {'time': 0.020665194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020674375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.020674847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020680389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.020680875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020687764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.02068825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020697847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.020698319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:57.776" endtime="20201112 12:25:57.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.772" endtime="20201112 12:25:57.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:57.807" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:57.783" endtime="20201112 12:25:57.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.811" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:57.810" endtime="20201112 12:25:57.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.816" level="INFO">VALUE: {'eventsourcediff': [0, 4.860000000009301e-07, 8.875000000001937e-06, 4.870000000004038e-07, 6.499999999999562e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 5.556000000000311e-06, 4.860000000009301e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 8.221999999998703e-06, 4.860000000009301e-07, 8.653000000000827e-06, 4.7199999999789077e-07, 4.930999999999686e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 8.971999999999453e-06, 4.7300000000083386e-07, 5.652000000001822e-06, 4.729999999973644e-07, 4.111000000001086e-06, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 5.305000000000587e-06, 4.859999999974607e-07, 1.0445000000001287e-05, 4.720000000013602e-07, 1.0457999999997913e-05, 4.7300000000083386e-07, 8.457999999999383e-06, 4.860000000009301e-07, 6.805999999998091e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 9.611000000003117e-06, 4.729999999973644e-07, 6.291000000002017e-06, 4.7199999999789077e-07, 4.889000000000976e-06, 4.7300000000083386e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 3.915999999999642e-06, 4.720000000013602e-07, 6.3479999999997705e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 7.693999999999063e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.7300000000083386e-07, 9.819000000001188e-06, 4.860000000009301e-07, 7.2079999999981326e-06, 4.870000000004038e-07, 5.860999999999367e-06, 4.860000000009301e-07, 7.846999999998328e-06, 4.720000000013602e-07, 9.735999999999773e-06, 4.7300000000083386e-07, 6.165999999998423e-06, 4.720000000013602e-07, 8.694999999999536e-06, 4.720000000013602e-07, 7.819999999998661e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 6.597000000000547e-06, 4.7199999999789077e-07, 7.959000000001826e-06, 4.7199999999789077e-07, 9.291000000001548e-06, 4.7300000000083386e-07, 1.0318999999998218e-05, 4.720000000013602e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 6.374999999999437e-06, 4.720000000013602e-07, 1.0318999999998218e-05, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 5.542000000000741e-06, 4.860000000009301e-07, 6.888999999999507e-06, 4.859999999974607e-07, 9.597000000000078e-06, 4.720000000013602e-07], 'time': [0.020301958, 0.020302444, 0.020311319, 0.020311806, 0.020318306, 0.020318778, 0.020326514, 0.020326986, 0.020332542, 0.020333028, 0.020343278, 0.02034375, 0.020351972, 0.020352458, 0.020361111, 0.020361583, 0.020366514, 0.020366986, 0.020372639, 0.020373111, 0.020382083, 0.020382556, 0.020388208, 0.020388681, 0.020392792, 0.020393264, 0.020403306, 0.020403778, 0.020409083, 0.020409569, 0.020420014, 0.020420486, 0.020430944, 0.020431417, 0.020439875, 0.020440361, 0.020447167, 0.020447639, 0.020458, 0.020458472, 0.020468083, 0.020468556, 0.020474847, 0.020475319, 0.020480208, 0.020480681, 0.020486333, 0.020486806, 0.020490722, 0.020491194, 0.020497542, 0.020498028, 0.020502014, 0.020502486, 0.020510556, 0.020511028, 0.020518722, 0.020519208, 0.020527458, 0.020527931, 0.02053775, 0.020538236, 0.020545444, 0.020545931, 0.020551792, 0.020552278, 0.020560125, 0.020560597, 0.020570333, 0.020570806, 0.020576972, 0.020577444, 0.020586139, 0.020586611, 0.020594431, 0.020594903, 0.020604056, 0.020604528, 0.020611125, 0.020611597, 0.020619556, 0.020620028, 0.020629319, 0.020629792, 0.020640111, 0.020640583, 0.020647083, 0.020647556, 0.020653931, 0.020654403, 0.020664722, 0.020665194, 0.020674375, 0.020674847, 0.020680389, 0.020680875, 0.020687764, 0.02068825, 0.020697847, 0.020698319], 'source_diff': [0, 4.860000000009301e-07, 8.875000000001937e-06, 4.870000000004038e-07, 6.499999999999562e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 5.556000000000311e-06, 4.860000000009301e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 8.221999999998703e-06, 4.860000000009301e-07, 8.653000000000827e-06, 4.7199999999789077e-07, 4.930999999999686e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 8.971999999999453e-06, 4.7300000000083386e-07, 5.652000000001822e-06, 4.729999999973644e-07, 4.111000000001086e-06, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 5.305000000000587e-06, 4.859999999974607e-07, 1.0445000000001287e-05, 4.720000000013602e-07, 1.0457999999997913e-05, 4.7300000000083386e-07, 8.457999999999383e-06, 4.860000000009301e-07, 6.805999999998091e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 9.611000000003117e-06, 4.729999999973644e-07, 6.291000000002017e-06, 4.7199999999789077e-07, 4.889000000000976e-06, 4.7300000000083386e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 3.915999999999642e-06, 4.720000000013602e-07, 6.3479999999997705e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 7.693999999999063e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.7300000000083386e-07, 9.819000000001188e-06, 4.860000000009301e-07, 7.2079999999981326e-06, 4.870000000004038e-07, 5.860999999999367e-06, 4.860000000009301e-07, 7.846999999998328e-06, 4.720000000013602e-07, 9.735999999999773e-06, 4.7300000000083386e-07, 6.165999999998423e-06, 4.720000000013602e-07, 8.694999999999536e-06, 4.720000000013602e-07, 7.819999999998661e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 6.597000000000547e-06, 4.7199999999789077e-07, 7.959000000001826e-06, 4.7199999999789077e-07, 9.291000000001548e-06, 4.7300000000083386e-07, 1.0318999999998218e-05, 4.720000000013602e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 6.374999999999437e-06, 4.720000000013602e-07, 1.0318999999998218e-05, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 5.542000000000741e-06, 4.860000000009301e-07, 6.888999999999507e-06, 4.859999999974607e-07, 9.597000000000078e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:57.812" endtime="20201112 12:25:57.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.808" endtime="20201112 12:25:57.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:57.821" level="INFO">${RESULT} = [{'time': 0.020302444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020311806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:57.818" endtime="20201112 12:25:57.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:57.835" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:57.822" endtime="20201112 12:25:57.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.840" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:57.839" endtime="20201112 12:25:57.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.842" level="INFO">VALUE: [4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:25:57.841" endtime="20201112 12:25:57.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.836" endtime="20201112 12:25:57.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.846" endtime="20201112 12:25:57.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:57.849" endtime="20201112 12:25:57.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.848" endtime="20201112 12:25:57.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.844" endtime="20201112 12:25:57.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.431" endtime="20201112 12:25:57.870"></status>
</kw>
<msg timestamp="20201112 12:25:57.870" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.879" endtime="20201112 12:25:57.901"></status>
</kw>
<msg timestamp="20201112 12:25:57.901" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.877" endtime="20201112 12:25:57.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.904" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.903" endtime="20201112 12:25:57.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.905" endtime="20201112 12:25:57.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.874" endtime="20201112 12:25:57.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.872" endtime="20201112 12:25:57.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.915" endtime="20201112 12:25:58.199"></status>
</kw>
<msg timestamp="20201112 12:25:58.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:57.914" endtime="20201112 12:25:58.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.203" endtime="20201112 12:25:58.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.212" endtime="20201112 12:25:58.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.911" endtime="20201112 12:25:58.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.909" endtime="20201112 12:25:58.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.219" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:58.218" endtime="20201112 12:25:58.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.224" level="INFO">VALUE: [{'time': 0.022815792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022821917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.022822389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022830333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944000000002782e-06, 'source_diff': 7.944000000002782e-06}, {'time': 0.022830819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022837306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.487000000002935e-06, 'source_diff': 6.487000000002935e-06}, {'time': 0.022837792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022842431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.022842903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022847819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.915999999997173e-06, 'source_diff': 4.915999999997173e-06}, {'time': 0.022848292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0228545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.022854972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022862278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.02286275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022873069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0318999999998218e-05, 'source_diff': 1.0318999999998218e-05}, {'time': 0.022873556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022878694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.138000000001752e-06, 'source_diff': 5.138000000001752e-06}, {'time': 0.022879167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022889375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208000000001133e-05, 'source_diff': 1.0208000000001133e-05}, {'time': 0.022889847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022897694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.022898167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022905875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.707999999998633e-06, 'source_diff': 7.707999999998633e-06}, {'time': 0.022906361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022913778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.02291425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022922097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.022922569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02292925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.022929722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022937069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.022937542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022947139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.022947625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022956208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.022956681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022964514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.022964986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022974931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.945000000000787e-06, 'source_diff': 9.945000000000787e-06}, {'time': 0.022975403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022981986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.022982458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022986972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.022987444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022997875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0431000000001717e-05, 'source_diff': 1.0431000000001717e-05}, {'time': 0.022998347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023002875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.023003347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023012931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.023013403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023020514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.023020986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023025486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.023025972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023030583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.023031056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023040333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.276999999998509e-06, 'source_diff': 9.276999999998509e-06}, {'time': 0.023040819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023046931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.11199999999909e-06, 'source_diff': 6.11199999999909e-06}, {'time': 0.023047403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023055722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.023056194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023065931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.737000000002716e-06, 'source_diff': 9.737000000002716e-06}, {'time': 0.023066403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023076542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.023077014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023086722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.023087194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023091208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.023091681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023097736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.023098222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023106181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.958999999998356e-06, 'source_diff': 7.958999999998356e-06}, {'time': 0.023106653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023112931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.023113403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023121014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.023121486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023130667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.023131153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023140958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.023141431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023151542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000000148e-05, 'source_diff': 1.0111000000000148e-05}, {'time': 0.023152014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023157458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.023157931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023163264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.023163736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023171583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.023172056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023180125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.023180597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023184681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08399999999795e-06, 'source_diff': 4.08399999999795e-06}, {'time': 0.023185167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023192403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.023192875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02320175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.023202222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:58.220" endtime="20201112 12:25:58.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.215" endtime="20201112 12:25:58.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:58.251" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:58.227" endtime="20201112 12:25:58.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.255" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:58.254" endtime="20201112 12:25:58.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.259" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'sourcediff': [0, 4.7199999999789077e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 7.944000000002782e-06, 4.859999999974607e-07, 6.487000000002935e-06, 4.859999999974607e-07, 4.639000000000726e-06, 4.720000000013602e-07, 4.915999999997173e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.720000000013602e-07, 1.0318999999998218e-05, 4.870000000004038e-07, 5.138000000001752e-06, 4.729999999973644e-07, 1.0208000000001133e-05, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 7.707999999998633e-06, 4.860000000009301e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 6.681000000001436e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.729999999973644e-07, 9.597000000000078e-06, 4.860000000009301e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 7.832999999998758e-06, 4.720000000013602e-07, 9.945000000000787e-06, 4.7199999999789077e-07, 6.583000000000977e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 9.583999999999981e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.859999999974607e-07, 4.611000000001586e-06, 4.7300000000083386e-07, 9.276999999998509e-06, 4.860000000009301e-07, 6.11199999999909e-06, 4.720000000013602e-07, 8.318999999999688e-06, 4.7199999999789077e-07, 9.737000000002716e-06, 4.7199999999789077e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 9.708000000000633e-06, 4.7199999999789077e-07, 4.014000000000101e-06, 4.7300000000083386e-07, 6.055000000001337e-06, 4.860000000009301e-07, 7.958999999998356e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 7.6109999999976474e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.860000000009301e-07, 9.804999999998149e-06, 4.7300000000083386e-07, 1.0111000000000148e-05, 4.7199999999789077e-07, 5.444000000000282e-06, 4.7300000000083386e-07, 5.332999999999727e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 8.068999999999438e-06, 4.720000000013602e-07, 4.08399999999795e-06, 4.860000000009301e-07, 7.236000000000742e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07], 'time': [0.022815792, 0.022816264, 0.022821917, 0.022822389, 0.022830333, 0.022830819, 0.022837306, 0.022837792, 0.022842431, 0.022842903, 0.022847819, 0.022848292, 0.0228545, 0.022854972, 0.022862278, 0.02286275, 0.022873069, 0.022873556, 0.022878694, 0.022879167, 0.022889375, 0.022889847, 0.022897694, 0.022898167, 0.022905875, 0.022906361, 0.022913778, 0.02291425, 0.022922097, 0.022922569, 0.02292925, 0.022929722, 0.022937069, 0.022937542, 0.022947139, 0.022947625, 0.022956208, 0.022956681, 0.022964514, 0.022964986, 0.022974931, 0.022975403, 0.022981986, 0.022982458, 0.022986972, 0.022987444, 0.022997875, 0.022998347, 0.023002875, 0.023003347, 0.023012931, 0.023013403, 0.023020514, 0.023020986, 0.023025486, 0.023025972, 0.023030583, 0.023031056, 0.023040333, 0.023040819, 0.023046931, 0.023047403, 0.023055722, 0.023056194, 0.023065931, 0.023066403, 0.023076542, 0.023077014, 0.023086722, 0.023087194, 0.023091208, 0.023091681, 0.023097736, 0.023098222, 0.023106181, 0.023106653, 0.023112931, 0.023113403, 0.023121014, 0.023121486, 0.023130667, 0.023131153, 0.023140958, 0.023141431, 0.023151542, 0.023152014, 0.023157458, 0.023157931, 0.023163264, 0.023163736, 0.023171583, 0.023172056, 0.023180125, 0.023180597, 0.023184681, 0.023185167, 0.023192403, 0.023192875, 0.02320175, 0.023202222], 'source_diff': [0, 4.7199999999789077e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 7.944000000002782e-06, 4.859999999974607e-07, 6.487000000002935e-06, 4.859999999974607e-07, 4.639000000000726e-06, 4.720000000013602e-07, 4.915999999997173e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.720000000013602e-07, 1.0318999999998218e-05, 4.870000000004038e-07, 5.138000000001752e-06, 4.729999999973644e-07, 1.0208000000001133e-05, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 7.707999999998633e-06, 4.860000000009301e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 6.681000000001436e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.729999999973644e-07, 9.597000000000078e-06, 4.860000000009301e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 7.832999999998758e-06, 4.720000000013602e-07, 9.945000000000787e-06, 4.7199999999789077e-07, 6.583000000000977e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 9.583999999999981e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.859999999974607e-07, 4.611000000001586e-06, 4.7300000000083386e-07, 9.276999999998509e-06, 4.860000000009301e-07, 6.11199999999909e-06, 4.720000000013602e-07, 8.318999999999688e-06, 4.7199999999789077e-07, 9.737000000002716e-06, 4.7199999999789077e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 9.708000000000633e-06, 4.7199999999789077e-07, 4.014000000000101e-06, 4.7300000000083386e-07, 6.055000000001337e-06, 4.860000000009301e-07, 7.958999999998356e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 7.6109999999976474e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.860000000009301e-07, 9.804999999998149e-06, 4.7300000000083386e-07, 1.0111000000000148e-05, 4.7199999999789077e-07, 5.444000000000282e-06, 4.7300000000083386e-07, 5.332999999999727e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 8.068999999999438e-06, 4.720000000013602e-07, 4.08399999999795e-06, 4.860000000009301e-07, 7.236000000000742e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:58.256" endtime="20201112 12:25:58.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.252" endtime="20201112 12:25:58.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:58.265" level="INFO">${RESULT} = [{'time': 0.022816264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022822389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:58.261" endtime="20201112 12:25:58.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:58.279" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:58.266" endtime="20201112 12:25:58.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.283" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:58.282" endtime="20201112 12:25:58.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.286" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:25:58.285" endtime="20201112 12:25:58.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.280" endtime="20201112 12:25:58.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.289" endtime="20201112 12:25:58.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:58.293" endtime="20201112 12:25:58.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.291" endtime="20201112 12:25:58.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.288" endtime="20201112 12:25:58.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.871" endtime="20201112 12:25:58.314"></status>
</kw>
<msg timestamp="20201112 12:25:58.314" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.322" endtime="20201112 12:25:58.338"></status>
</kw>
<msg timestamp="20201112 12:25:58.338" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.320" endtime="20201112 12:25:58.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.341" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.339" endtime="20201112 12:25:58.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.342" endtime="20201112 12:25:58.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.317" endtime="20201112 12:25:58.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.316" endtime="20201112 12:25:58.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.351" endtime="20201112 12:25:58.640"></status>
</kw>
<msg timestamp="20201112 12:25:58.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021508722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.350" endtime="20201112 12:25:58.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021508722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.644" endtime="20201112 12:25:58.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.653" endtime="20201112 12:25:58.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.347" endtime="20201112 12:25:58.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.345" endtime="20201112 12:25:58.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.660" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:58.659" endtime="20201112 12:25:58.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.665" level="INFO">VALUE: [{'time': 0.021508722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.0215135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.021513972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021521292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.021521764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021531042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.021531514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021540486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.021540972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021547667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.021548139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021556444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.021556917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021564167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.021564639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021572694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.021573167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021583306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.021583792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021589333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.540999999997798e-06, 'source_diff': 5.540999999997798e-06}, {'time': 0.021589819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02159725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.021597722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021602458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.021602931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021608472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.021608958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021615972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.021616444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021621278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.83400000000217e-06, 'source_diff': 4.83400000000217e-06}, {'time': 0.02162175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021625764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.021626236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021631847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.021632319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021638222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.021638708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021644889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.021645361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021651764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.021652236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021659028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.021659514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021665167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.021665653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021675986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.021676472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021680361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.021680833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021688375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.021688847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021698764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.02169925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021707306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.021707778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021716764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.02171725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021723958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.021724431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021730292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.021730764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021735292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.021735764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021745694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.021746167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021751931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.021752403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021760444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.021760917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021768431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.021768903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021776, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.021776472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021783056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583999999996981e-06, 'source_diff': 6.583999999996981e-06}, {'time': 0.021783528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021792139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.021792611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021800917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.021801389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021807667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.021808139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021814333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.021814806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0218215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.021821986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021827125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.021827597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021837639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041999999998302e-05, 'source_diff': 1.0041999999998302e-05}, {'time': 0.021838111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021846361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.021846847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021856458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.021856931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021863542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000000117e-06, 'source_diff': 6.611000000000117e-06}, {'time': 0.021864014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021870083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.021870556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021879028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.0218795, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:58.661" endtime="20201112 12:25:58.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.656" endtime="20201112 12:25:58.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:58.693" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:58.668" endtime="20201112 12:25:58.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.697" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:58.696" endtime="20201112 12:25:58.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.701" level="INFO">VALUE: {'eventsourcediff': [0, 4.859999999974607e-07, 4.29200000000296e-06, 4.7199999999789077e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 9.278000000001452e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.859999999974607e-07, 6.695000000001006e-06, 4.720000000013602e-07, 8.305000000000118e-06, 4.729999999973644e-07, 7.250000000000312e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.7300000000083386e-07, 1.0138999999999287e-05, 4.860000000009301e-07, 5.540999999997798e-06, 4.860000000009301e-07, 7.430999999998716e-06, 4.720000000013602e-07, 4.736000000001711e-06, 4.729999999973644e-07, 5.541000000001267e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 4.83400000000217e-06, 4.7199999999789077e-07, 4.014000000000101e-06, 4.720000000013602e-07, 5.610999999999117e-06, 4.720000000013602e-07, 5.9029999999980765e-06, 4.860000000009301e-07, 6.181000000000936e-06, 4.7199999999789077e-07, 6.403000000002046e-06, 4.7199999999789077e-07, 6.792000000001991e-06, 4.860000000009301e-07, 5.6529999999978264e-06, 4.860000000009301e-07, 1.0333000000001258e-05, 4.859999999974607e-07, 3.888999999999976e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.860000000009301e-07, 8.055999999999341e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.860000000009301e-07, 6.708000000001102e-06, 4.729999999973644e-07, 5.860999999999367e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 8.041000000000298e-06, 4.7300000000083386e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 7.097000000001047e-06, 4.720000000013602e-07, 6.583999999996981e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.194000000001032e-06, 4.729999999973644e-07, 6.694000000001532e-06, 4.860000000009301e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 8.250000000001312e-06, 4.859999999974607e-07, 9.610999999999648e-06, 4.7300000000083386e-07, 6.611000000000117e-06, 4.720000000013602e-07, 6.0689999999974376e-06, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07], 'time': [0.021508722, 0.021509208, 0.0215135, 0.021513972, 0.021521292, 0.021521764, 0.021531042, 0.021531514, 0.021540486, 0.021540972, 0.021547667, 0.021548139, 0.021556444, 0.021556917, 0.021564167, 0.021564639, 0.021572694, 0.021573167, 0.021583306, 0.021583792, 0.021589333, 0.021589819, 0.02159725, 0.021597722, 0.021602458, 0.021602931, 0.021608472, 0.021608958, 0.021615972, 0.021616444, 0.021621278, 0.02162175, 0.021625764, 0.021626236, 0.021631847, 0.021632319, 0.021638222, 0.021638708, 0.021644889, 0.021645361, 0.021651764, 0.021652236, 0.021659028, 0.021659514, 0.021665167, 0.021665653, 0.021675986, 0.021676472, 0.021680361, 0.021680833, 0.021688375, 0.021688847, 0.021698764, 0.02169925, 0.021707306, 0.021707778, 0.021716764, 0.02171725, 0.021723958, 0.021724431, 0.021730292, 0.021730764, 0.021735292, 0.021735764, 0.021745694, 0.021746167, 0.021751931, 0.021752403, 0.021760444, 0.021760917, 0.021768431, 0.021768903, 0.021776, 0.021776472, 0.021783056, 0.021783528, 0.021792139, 0.021792611, 0.021800917, 0.021801389, 0.021807667, 0.021808139, 0.021814333, 0.021814806, 0.0218215, 0.021821986, 0.021827125, 0.021827597, 0.021837639, 0.021838111, 0.021846361, 0.021846847, 0.021856458, 0.021856931, 0.021863542, 0.021864014, 0.021870083, 0.021870556, 0.021879028, 0.0218795], 'source_diff': [0, 4.859999999974607e-07, 4.29200000000296e-06, 4.7199999999789077e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 9.278000000001452e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.859999999974607e-07, 6.695000000001006e-06, 4.720000000013602e-07, 8.305000000000118e-06, 4.729999999973644e-07, 7.250000000000312e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.7300000000083386e-07, 1.0138999999999287e-05, 4.860000000009301e-07, 5.540999999997798e-06, 4.860000000009301e-07, 7.430999999998716e-06, 4.720000000013602e-07, 4.736000000001711e-06, 4.729999999973644e-07, 5.541000000001267e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 4.83400000000217e-06, 4.7199999999789077e-07, 4.014000000000101e-06, 4.720000000013602e-07, 5.610999999999117e-06, 4.720000000013602e-07, 5.9029999999980765e-06, 4.860000000009301e-07, 6.181000000000936e-06, 4.7199999999789077e-07, 6.403000000002046e-06, 4.7199999999789077e-07, 6.792000000001991e-06, 4.860000000009301e-07, 5.6529999999978264e-06, 4.860000000009301e-07, 1.0333000000001258e-05, 4.859999999974607e-07, 3.888999999999976e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.860000000009301e-07, 8.055999999999341e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.860000000009301e-07, 6.708000000001102e-06, 4.729999999973644e-07, 5.860999999999367e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 8.041000000000298e-06, 4.7300000000083386e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 7.097000000001047e-06, 4.720000000013602e-07, 6.583999999996981e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.194000000001032e-06, 4.729999999973644e-07, 6.694000000001532e-06, 4.860000000009301e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 8.250000000001312e-06, 4.859999999974607e-07, 9.610999999999648e-06, 4.7300000000083386e-07, 6.611000000000117e-06, 4.720000000013602e-07, 6.0689999999974376e-06, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:58.698" endtime="20201112 12:25:58.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.694" endtime="20201112 12:25:58.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:58.707" level="INFO">${RESULT} = [{'time': 0.021509208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021513972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:58.703" endtime="20201112 12:25:58.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:58.720" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:58.708" endtime="20201112 12:25:58.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.725" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:58.724" endtime="20201112 12:25:58.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.727" level="INFO">VALUE: [4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:25:58.726" endtime="20201112 12:25:58.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.721" endtime="20201112 12:25:58.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.731" endtime="20201112 12:25:58.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:58.734" endtime="20201112 12:25:58.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.733" endtime="20201112 12:25:58.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.729" endtime="20201112 12:25:58.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.314" endtime="20201112 12:25:58.755"></status>
</kw>
<msg timestamp="20201112 12:25:58.755" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.763" endtime="20201112 12:25:58.781"></status>
</kw>
<msg timestamp="20201112 12:25:58.781" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.762" endtime="20201112 12:25:58.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.784" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.782" endtime="20201112 12:25:58.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.785" endtime="20201112 12:25:58.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.759" endtime="20201112 12:25:58.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.757" endtime="20201112 12:25:58.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.794" endtime="20201112 12:25:59.081"></status>
</kw>
<msg timestamp="20201112 12:25:59.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022115333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022115806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.793" endtime="20201112 12:25:59.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022115333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022115806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.085" endtime="20201112 12:25:59.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.094" endtime="20201112 12:25:59.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.790" endtime="20201112 12:25:59.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.788" endtime="20201112 12:25:59.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.101" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:59.100" endtime="20201112 12:25:59.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.106" level="INFO">VALUE: [{'time': 0.022115333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022115806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022122639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833000000001227e-06, 'source_diff': 6.833000000001227e-06}, {'time': 0.022123111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022133333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.022133806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022140944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138000000000283e-06, 'source_diff': 7.138000000000283e-06}, {'time': 0.022141417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022148319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.901999999999603e-06, 'source_diff': 6.901999999999603e-06}, {'time': 0.022148792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022157681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.022158153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022163181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.022163653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022172069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.416000000000673e-06, 'source_diff': 8.416000000000673e-06}, {'time': 0.022172542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022178681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.022179153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022183667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.022184139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022190736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.022191222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022200625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.022201097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022209167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.022209639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022216222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.022216694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022223097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.022223569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022230056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.487000000002935e-06, 'source_diff': 6.487000000002935e-06}, {'time': 0.022230528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022240458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930000000001743e-06, 'source_diff': 9.930000000001743e-06}, {'time': 0.022240931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022247736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.022248208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022258444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.022258931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022266458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.022266931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022275194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.263000000001408e-06, 'source_diff': 8.263000000001408e-06}, {'time': 0.022275667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022285278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.022285764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022290597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.022291069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022297153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.022297625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022307431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805999999997622e-06, 'source_diff': 9.805999999997622e-06}, {'time': 0.022307917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022313569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.022314056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022318153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.022318625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022326778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.022327264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022335417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.022335889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022343014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.022343486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022351333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.022351806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022357778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.02235825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022366931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.022367403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022373278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.02237375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022377958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.022378431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022386694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.262999999997939e-06, 'source_diff': 8.262999999997939e-06}, {'time': 0.022387167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022395847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.022396319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022404583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.263999999997412e-06, 'source_diff': 8.263999999997412e-06}, {'time': 0.022405056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022412694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.638000000000783e-06, 'source_diff': 7.638000000000783e-06}, {'time': 0.022413167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022419667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.022420139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022425181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.022425653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022429917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.022430389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022439319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000000743e-06, 'source_diff': 8.930000000000743e-06}, {'time': 0.022439806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022447542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.022448014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022453583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.022454056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022460056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.022460528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022465319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.022465806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022475931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.022476417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583000000002977e-06, 'source_diff': 8.583000000002977e-06}, {'time': 0.022485472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022490389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.022490875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:59.102" endtime="20201112 12:25:59.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.098" endtime="20201112 12:25:59.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:59.133" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:59.109" endtime="20201112 12:25:59.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.137" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:59.136" endtime="20201112 12:25:59.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.141" level="INFO">VALUE: {'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 4.729999999973644e-07, 6.833000000001227e-06, 4.720000000013602e-07, 1.0222000000000703e-05, 4.729999999973644e-07, 7.138000000000283e-06, 4.7300000000083386e-07, 6.901999999999603e-06, 4.7300000000083386e-07, 8.888999999998037e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 8.416000000000673e-06, 4.7300000000083386e-07, 6.1389999999987566e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 6.597000000000547e-06, 4.860000000009301e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 8.069999999998911e-06, 4.720000000013602e-07, 6.583000000000977e-06, 4.7199999999789077e-07, 6.403000000002046e-06, 4.7199999999789077e-07, 6.487000000002935e-06, 4.7199999999789077e-07, 9.930000000001743e-06, 4.729999999973644e-07, 6.805000000002087e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.870000000004038e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 8.263000000001408e-06, 4.729999999973644e-07, 9.610999999999648e-06, 4.860000000009301e-07, 4.832999999999227e-06, 4.720000000013602e-07, 6.0839999999999506e-06, 4.720000000013602e-07, 9.805999999997622e-06, 4.860000000009301e-07, 5.651999999998353e-06, 4.870000000004038e-07, 4.097000000001516e-06, 4.720000000013602e-07, 8.152999999996857e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.729999999973644e-07, 5.971999999999922e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 8.262999999997939e-06, 4.7300000000083386e-07, 8.680000000000493e-06, 4.720000000013602e-07, 8.263999999997412e-06, 4.7300000000083386e-07, 7.638000000000783e-06, 4.7300000000083386e-07, 6.499999999999562e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 4.264000000000351e-06, 4.7199999999789077e-07, 8.930000000000743e-06, 4.870000000004038e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 5.569000000000407e-06, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.791000000000517e-06, 4.870000000004038e-07, 1.0124999999999718e-05, 4.859999999974607e-07, 8.583000000002977e-06, 4.7199999999789077e-07, 4.917000000000116e-06, 4.860000000009301e-07], 'time': [0.022115333, 0.022115806, 0.022122639, 0.022123111, 0.022133333, 0.022133806, 0.022140944, 0.022141417, 0.022148319, 0.022148792, 0.022157681, 0.022158153, 0.022163181, 0.022163653, 0.022172069, 0.022172542, 0.022178681, 0.022179153, 0.022183667, 0.022184139, 0.022190736, 0.022191222, 0.022200625, 0.022201097, 0.022209167, 0.022209639, 0.022216222, 0.022216694, 0.022223097, 0.022223569, 0.022230056, 0.022230528, 0.022240458, 0.022240931, 0.022247736, 0.022248208, 0.022258444, 0.022258931, 0.022266458, 0.022266931, 0.022275194, 0.022275667, 0.022285278, 0.022285764, 0.022290597, 0.022291069, 0.022297153, 0.022297625, 0.022307431, 0.022307917, 0.022313569, 0.022314056, 0.022318153, 0.022318625, 0.022326778, 0.022327264, 0.022335417, 0.022335889, 0.022343014, 0.022343486, 0.022351333, 0.022351806, 0.022357778, 0.02235825, 0.022366931, 0.022367403, 0.022373278, 0.02237375, 0.022377958, 0.022378431, 0.022386694, 0.022387167, 0.022395847, 0.022396319, 0.022404583, 0.022405056, 0.022412694, 0.022413167, 0.022419667, 0.022420139, 0.022425181, 0.022425653, 0.022429917, 0.022430389, 0.022439319, 0.022439806, 0.022447542, 0.022448014, 0.022453583, 0.022454056, 0.022460056, 0.022460528, 0.022465319, 0.022465806, 0.022475931, 0.022476417, 0.022485, 0.022485472, 0.022490389, 0.022490875], 'source_diff': [0, 4.729999999973644e-07, 6.833000000001227e-06, 4.720000000013602e-07, 1.0222000000000703e-05, 4.729999999973644e-07, 7.138000000000283e-06, 4.7300000000083386e-07, 6.901999999999603e-06, 4.7300000000083386e-07, 8.888999999998037e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 8.416000000000673e-06, 4.7300000000083386e-07, 6.1389999999987566e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 6.597000000000547e-06, 4.860000000009301e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 8.069999999998911e-06, 4.720000000013602e-07, 6.583000000000977e-06, 4.7199999999789077e-07, 6.403000000002046e-06, 4.7199999999789077e-07, 6.487000000002935e-06, 4.7199999999789077e-07, 9.930000000001743e-06, 4.729999999973644e-07, 6.805000000002087e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.870000000004038e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 8.263000000001408e-06, 4.729999999973644e-07, 9.610999999999648e-06, 4.860000000009301e-07, 4.832999999999227e-06, 4.720000000013602e-07, 6.0839999999999506e-06, 4.720000000013602e-07, 9.805999999997622e-06, 4.860000000009301e-07, 5.651999999998353e-06, 4.870000000004038e-07, 4.097000000001516e-06, 4.720000000013602e-07, 8.152999999996857e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.729999999973644e-07, 5.971999999999922e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 8.262999999997939e-06, 4.7300000000083386e-07, 8.680000000000493e-06, 4.720000000013602e-07, 8.263999999997412e-06, 4.7300000000083386e-07, 7.638000000000783e-06, 4.7300000000083386e-07, 6.499999999999562e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 4.264000000000351e-06, 4.7199999999789077e-07, 8.930000000000743e-06, 4.870000000004038e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 5.569000000000407e-06, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.791000000000517e-06, 4.870000000004038e-07, 1.0124999999999718e-05, 4.859999999974607e-07, 8.583000000002977e-06, 4.7199999999789077e-07, 4.917000000000116e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:59.138" endtime="20201112 12:25:59.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.134" endtime="20201112 12:25:59.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:59.147" level="INFO">${RESULT} = [{'time': 0.022115806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022123111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:59.144" endtime="20201112 12:25:59.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:59.161" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:59.148" endtime="20201112 12:25:59.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.166" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:59.165" endtime="20201112 12:25:59.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.168" level="INFO">VALUE: [4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 12:25:59.167" endtime="20201112 12:25:59.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.162" endtime="20201112 12:25:59.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.171" endtime="20201112 12:25:59.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:59.175" endtime="20201112 12:25:59.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.173" endtime="20201112 12:25:59.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.170" endtime="20201112 12:25:59.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.756" endtime="20201112 12:25:59.196"></status>
</kw>
<msg timestamp="20201112 12:25:59.196" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.204" endtime="20201112 12:25:59.217"></status>
</kw>
<msg timestamp="20201112 12:25:59.217" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:59.203" endtime="20201112 12:25:59.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.220" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:59.219" endtime="20201112 12:25:59.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.221" endtime="20201112 12:25:59.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.200" endtime="20201112 12:25:59.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.198" endtime="20201112 12:25:59.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.231" endtime="20201112 12:25:59.513"></status>
</kw>
<msg timestamp="20201112 12:25:59.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018245167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018245639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.229" endtime="20201112 12:25:59.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018245167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018245639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.517" endtime="20201112 12:25:59.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.526" endtime="20201112 12:25:59.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.226" endtime="20201112 12:25:59.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.224" endtime="20201112 12:25:59.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.532" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:59.531" endtime="20201112 12:25:59.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.538" level="INFO">VALUE: [{'time': 0.018245167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018245639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018251903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.018252375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018259806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.018260278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018269681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.018270167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018276986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.818999999998188e-06, 'source_diff': 6.818999999998188e-06}, {'time': 0.018277458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018287361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.018287847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018294958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.018295431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018302653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2219999999977025e-06, 'source_diff': 7.2219999999977025e-06}, {'time': 0.018303139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018308167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018308639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018315444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.018315931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018324, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.018324472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018329806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3339999999992005e-06, 'source_diff': 5.3339999999992005e-06}, {'time': 0.018330278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018337417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.018337889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018345194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.018345681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018351153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018351625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018359444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.818999999999188e-06, 'source_diff': 7.818999999999188e-06}, {'time': 0.018359931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.01836425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.018364722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01837175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.018372222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0183815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277999999997982e-06, 'source_diff': 9.277999999997982e-06}, {'time': 0.018381986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018390972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.018391444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018399917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472999999998426e-06, 'source_diff': 8.472999999998426e-06}, {'time': 0.018400389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018407514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.018407986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018417514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527999999998232e-06, 'source_diff': 9.527999999998232e-06}, {'time': 0.018417986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018424986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.018425472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018431042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.57000000000335e-06, 'source_diff': 5.57000000000335e-06}, {'time': 0.018431514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018437694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.018438167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018443556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.018444028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018452569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.540999999997329e-06, 'source_diff': 8.540999999997329e-06}, {'time': 0.018453042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018459431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.018459903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018464944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.018465417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018469403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.018469889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018478569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.018479042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01848625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.018486736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018496056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.018496528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018505222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018505694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018512722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.018513208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018517403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.195000000001975e-06, 'source_diff': 4.195000000001975e-06}, {'time': 0.018517875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018524472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.018524944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018535361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.018535833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018541389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555999999996841e-06, 'source_diff': 5.555999999996841e-06}, {'time': 0.018541861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018546056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.195000000001975e-06, 'source_diff': 4.195000000001975e-06}, {'time': 0.018546542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018550431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018550903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0185575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.018557986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018566556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.570000000002881e-06, 'source_diff': 8.570000000002881e-06}, {'time': 0.018567028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018574569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.018575042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018579042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018579514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018583722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.018584194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0185935, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.018593972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018598889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018599361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018608264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.903000000001077e-06, 'source_diff': 8.903000000001077e-06}, {'time': 0.01860875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:59.534" endtime="20201112 12:25:59.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.529" endtime="20201112 12:25:59.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:59.565" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:59.540" endtime="20201112 12:25:59.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.569" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:59.568" endtime="20201112 12:25:59.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.573" level="INFO">VALUE: {'eventsourcediff': [0, 4.720000000013602e-07, 6.2639999999988816e-06, 4.720000000013602e-07, 7.430999999998716e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 6.818999999998188e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 7.2219999999977025e-06, 4.860000000009301e-07, 5.028000000000671e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.870000000004038e-07, 8.068999999999438e-06, 4.720000000013602e-07, 5.3339999999992005e-06, 4.7199999999789077e-07, 7.139000000003226e-06, 4.7199999999789077e-07, 7.304999999999118e-06, 4.870000000004038e-07, 5.471999999999422e-06, 4.720000000013602e-07, 7.818999999999188e-06, 4.870000000004038e-07, 4.318999999999157e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07, 8.472999999998426e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.859999999974607e-07, 5.57000000000335e-06, 4.7199999999789077e-07, 6.180000000001462e-06, 4.729999999973644e-07, 5.389000000001476e-06, 4.720000000013602e-07, 8.540999999997329e-06, 4.7300000000083386e-07, 6.388999999999007e-06, 4.720000000013602e-07, 5.041000000000767e-06, 4.7300000000083386e-07, 3.9859999999974915e-06, 4.860000000009301e-07, 8.680000000000493e-06, 4.7300000000083386e-07, 7.2079999999981326e-06, 4.860000000009301e-07, 9.320000000000161e-06, 4.720000000013602e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 7.0279999999992016e-06, 4.860000000009301e-07, 4.195000000001975e-06, 4.7199999999789077e-07, 6.597000000000547e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 5.555999999996841e-06, 4.720000000013602e-07, 4.195000000001975e-06, 4.859999999974607e-07, 3.888999999999976e-06, 4.720000000013602e-07, 6.597000000000547e-06, 4.859999999974607e-07, 8.570000000002881e-06, 4.7199999999789077e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 4.208000000002071e-06, 4.7199999999789077e-07, 9.306000000000592e-06, 4.720000000013602e-07, 4.917000000000116e-06, 4.7199999999789077e-07, 8.903000000001077e-06, 4.860000000009301e-07], 'time': [0.018245167, 0.018245639, 0.018251903, 0.018252375, 0.018259806, 0.018260278, 0.018269681, 0.018270167, 0.018276986, 0.018277458, 0.018287361, 0.018287847, 0.018294958, 0.018295431, 0.018302653, 0.018303139, 0.018308167, 0.018308639, 0.018315444, 0.018315931, 0.018324, 0.018324472, 0.018329806, 0.018330278, 0.018337417, 0.018337889, 0.018345194, 0.018345681, 0.018351153, 0.018351625, 0.018359444, 0.018359931, 0.01836425, 0.018364722, 0.01837175, 0.018372222, 0.0183815, 0.018381986, 0.018390972, 0.018391444, 0.018399917, 0.018400389, 0.018407514, 0.018407986, 0.018417514, 0.018417986, 0.018424986, 0.018425472, 0.018431042, 0.018431514, 0.018437694, 0.018438167, 0.018443556, 0.018444028, 0.018452569, 0.018453042, 0.018459431, 0.018459903, 0.018464944, 0.018465417, 0.018469403, 0.018469889, 0.018478569, 0.018479042, 0.01848625, 0.018486736, 0.018496056, 0.018496528, 0.018505222, 0.018505694, 0.018512722, 0.018513208, 0.018517403, 0.018517875, 0.018524472, 0.018524944, 0.018535361, 0.018535833, 0.018541389, 0.018541861, 0.018546056, 0.018546542, 0.018550431, 0.018550903, 0.0185575, 0.018557986, 0.018566556, 0.018567028, 0.018574569, 0.018575042, 0.018579042, 0.018579514, 0.018583722, 0.018584194, 0.0185935, 0.018593972, 0.018598889, 0.018599361, 0.018608264, 0.01860875], 'source_diff': [0, 4.720000000013602e-07, 6.2639999999988816e-06, 4.720000000013602e-07, 7.430999999998716e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 6.818999999998188e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 7.2219999999977025e-06, 4.860000000009301e-07, 5.028000000000671e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.870000000004038e-07, 8.068999999999438e-06, 4.720000000013602e-07, 5.3339999999992005e-06, 4.7199999999789077e-07, 7.139000000003226e-06, 4.7199999999789077e-07, 7.304999999999118e-06, 4.870000000004038e-07, 5.471999999999422e-06, 4.720000000013602e-07, 7.818999999999188e-06, 4.870000000004038e-07, 4.318999999999157e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07, 8.472999999998426e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.859999999974607e-07, 5.57000000000335e-06, 4.7199999999789077e-07, 6.180000000001462e-06, 4.729999999973644e-07, 5.389000000001476e-06, 4.720000000013602e-07, 8.540999999997329e-06, 4.7300000000083386e-07, 6.388999999999007e-06, 4.720000000013602e-07, 5.041000000000767e-06, 4.7300000000083386e-07, 3.9859999999974915e-06, 4.860000000009301e-07, 8.680000000000493e-06, 4.7300000000083386e-07, 7.2079999999981326e-06, 4.860000000009301e-07, 9.320000000000161e-06, 4.720000000013602e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 7.0279999999992016e-06, 4.860000000009301e-07, 4.195000000001975e-06, 4.7199999999789077e-07, 6.597000000000547e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 5.555999999996841e-06, 4.720000000013602e-07, 4.195000000001975e-06, 4.859999999974607e-07, 3.888999999999976e-06, 4.720000000013602e-07, 6.597000000000547e-06, 4.859999999974607e-07, 8.570000000002881e-06, 4.7199999999789077e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 4.208000000002071e-06, 4.7199999999789077e-07, 9.306000000000592e-06, 4.720000000013602e-07, 4.917000000000116e-06, 4.7199999999789077e-07, 8.903000000001077e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 12:25:59.570" endtime="20201112 12:25:59.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.566" endtime="20201112 12:25:59.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:59.579" level="INFO">${RESULT} = [{'time': 0.018245639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018252375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:59.576" endtime="20201112 12:25:59.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:59.593" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:59.580" endtime="20201112 12:25:59.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.597" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:59.596" endtime="20201112 12:25:59.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.600" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 12:25:59.598" endtime="20201112 12:25:59.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.594" endtime="20201112 12:25:59.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.603" endtime="20201112 12:25:59.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:59.607" endtime="20201112 12:25:59.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.605" endtime="20201112 12:25:59.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.601" endtime="20201112 12:25:59.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.197" endtime="20201112 12:25:59.628"></status>
</kw>
<msg timestamp="20201112 12:25:59.628" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.637" endtime="20201112 12:25:59.655"></status>
</kw>
<msg timestamp="20201112 12:25:59.655" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:59.635" endtime="20201112 12:25:59.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.658" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:59.656" endtime="20201112 12:25:59.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.659" endtime="20201112 12:25:59.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.632" endtime="20201112 12:25:59.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.630" endtime="20201112 12:25:59.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.669" endtime="20201112 12:25:59.950"></status>
</kw>
<msg timestamp="20201112 12:25:59.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023673708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023674181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.668" endtime="20201112 12:25:59.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023673708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023674181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.954" endtime="20201112 12:25:59.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.963" endtime="20201112 12:25:59.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.665" endtime="20201112 12:25:59.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.663" endtime="20201112 12:25:59.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.970" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:59.969" endtime="20201112 12:25:59.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.975" level="INFO">VALUE: [{'time': 0.023673708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023674181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023684389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208000000001133e-05, 'source_diff': 1.0208000000001133e-05}, {'time': 0.023684875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023693319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.023693806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023704306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000000093e-05, 'source_diff': 1.0500000000000093e-05}, {'time': 0.023704778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023712167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.023712639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023719611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.023720083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023730403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.023730875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023738431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.556000000002311e-06, 'source_diff': 7.556000000002311e-06}, {'time': 0.023738903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023744333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.023744819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023748931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.11200000000056e-06, 'source_diff': 4.11200000000056e-06}, {'time': 0.023749403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023756417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.023756889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023764097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.023764583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023769625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.023770097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02377825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.023778736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023788028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291999999997552e-06, 'source_diff': 9.291999999997552e-06}, {'time': 0.023788514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023793028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.0237935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023801667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.023802139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023808639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.023809111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023818847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999999773e-06, 'source_diff': 9.735999999999773e-06}, {'time': 0.023819319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023829653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.023830125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023840569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0443999999998343e-05, 'source_diff': 1.0443999999998343e-05}, {'time': 0.023841056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023851389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.023851875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023861167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291999999997552e-06, 'source_diff': 9.291999999997552e-06}, {'time': 0.023861639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023868431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.023868903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023875694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.790999999999048e-06, 'source_diff': 6.790999999999048e-06}, {'time': 0.023876167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023885667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.023886139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023895125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.023895597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023904028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.430999999999716e-06, 'source_diff': 8.430999999999716e-06}, {'time': 0.023904514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023914014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.023914486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023921833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.023922306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023928472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.023928944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023934819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.023935292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023943667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.023944139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02395125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.023951736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023959056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.023959542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023963431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.023963903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023968, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.023968486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023972792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.023973264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023978306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.023978778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023988708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930000000001743e-06, 'source_diff': 9.930000000001743e-06}, {'time': 0.023989181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023995361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.023995847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023999833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.024000319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.024009833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.024010306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.024017972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.665999999999923e-06, 'source_diff': 7.665999999999923e-06}, {'time': 0.024018444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024022417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.973000000000865e-06, 'source_diff': 3.973000000000865e-06}, {'time': 0.024022889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024026792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.903000000003015e-06, 'source_diff': 3.903000000003015e-06}, {'time': 0.024027264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024037069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.024037542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.024046931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.389000000002007e-06, 'source_diff': 9.389000000002007e-06}, {'time': 0.024047417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024054528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.024055, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024061361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.024061847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 12:25:59.971" endtime="20201112 12:25:59.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.966" endtime="20201112 12:25:59.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:00.002" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:59.978" endtime="20201112 12:26:00.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.006" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:00.005" endtime="20201112 12:26:00.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.010" level="INFO">VALUE: {'eventsourcediff': [0, 4.729999999973644e-07, 1.0208000000001133e-05, 4.860000000009301e-07, 8.443999999999813e-06, 4.870000000004038e-07, 1.0500000000000093e-05, 4.7199999999789077e-07, 7.389000000000007e-06, 4.720000000013602e-07, 6.972000000000922e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 7.556000000002311e-06, 4.7199999999789077e-07, 5.430000000000712e-06, 4.860000000009301e-07, 4.11200000000056e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 7.208000000001602e-06, 4.859999999974607e-07, 5.042000000000241e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.860000000009301e-07, 9.291999999997552e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 8.166999999999897e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 9.735999999999773e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 1.0443999999998343e-05, 4.870000000004038e-07, 1.0333000000001258e-05, 4.860000000009301e-07, 9.291999999997552e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 6.790999999999048e-06, 4.7300000000083386e-07, 9.499999999999093e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.720000000013602e-07, 8.430999999999716e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.7300000000083386e-07, 6.165999999998423e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.7300000000083386e-07, 8.374999999997967e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.860000000009301e-07, 7.319999999998161e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.720000000013602e-07, 4.096999999998047e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 9.930000000001743e-06, 4.729999999973644e-07, 6.180000000001462e-06, 4.860000000009301e-07, 3.986000000000961e-06, 4.859999999974607e-07, 9.514000000002132e-06, 4.729999999973644e-07, 7.665999999999923e-06, 4.720000000013602e-07, 3.973000000000865e-06, 4.7199999999789077e-07, 3.903000000003015e-06, 4.7199999999789077e-07, 9.805000000001618e-06, 4.729999999973644e-07, 9.389000000002007e-06, 4.860000000009301e-07, 7.110999999997147e-06, 4.720000000013602e-07, 6.360999999999867e-06, 4.860000000009301e-07], 'time': [0.023673708, 0.023674181, 0.023684389, 0.023684875, 0.023693319, 0.023693806, 0.023704306, 0.023704778, 0.023712167, 0.023712639, 0.023719611, 0.023720083, 0.023730403, 0.023730875, 0.023738431, 0.023738903, 0.023744333, 0.023744819, 0.023748931, 0.023749403, 0.023756417, 0.023756889, 0.023764097, 0.023764583, 0.023769625, 0.023770097, 0.02377825, 0.023778736, 0.023788028, 0.023788514, 0.023793028, 0.0237935, 0.023801667, 0.023802139, 0.023808639, 0.023809111, 0.023818847, 0.023819319, 0.023829653, 0.023830125, 0.023840569, 0.023841056, 0.023851389, 0.023851875, 0.023861167, 0.023861639, 0.023868431, 0.023868903, 0.023875694, 0.023876167, 0.023885667, 0.023886139, 0.023895125, 0.023895597, 0.023904028, 0.023904514, 0.023914014, 0.023914486, 0.023921833, 0.023922306, 0.023928472, 0.023928944, 0.023934819, 0.023935292, 0.023943667, 0.023944139, 0.02395125, 0.023951736, 0.023959056, 0.023959542, 0.023963431, 0.023963903, 0.023968, 0.023968486, 0.023972792, 0.023973264, 0.023978306, 0.023978778, 0.023988708, 0.023989181, 0.023995361, 0.023995847, 0.023999833, 0.024000319, 0.024009833, 0.024010306, 0.024017972, 0.024018444, 0.024022417, 0.024022889, 0.024026792, 0.024027264, 0.024037069, 0.024037542, 0.024046931, 0.024047417, 0.024054528, 0.024055, 0.024061361, 0.024061847], 'source_diff': [0, 4.729999999973644e-07, 1.0208000000001133e-05, 4.860000000009301e-07, 8.443999999999813e-06, 4.870000000004038e-07, 1.0500000000000093e-05, 4.7199999999789077e-07, 7.389000000000007e-06, 4.720000000013602e-07, 6.972000000000922e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 7.556000000002311e-06, 4.7199999999789077e-07, 5.430000000000712e-06, 4.860000000009301e-07, 4.11200000000056e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 7.208000000001602e-06, 4.859999999974607e-07, 5.042000000000241e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.860000000009301e-07, 9.291999999997552e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 8.166999999999897e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 9.735999999999773e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 1.0443999999998343e-05, 4.870000000004038e-07, 1.0333000000001258e-05, 4.860000000009301e-07, 9.291999999997552e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 6.790999999999048e-06, 4.7300000000083386e-07, 9.499999999999093e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.720000000013602e-07, 8.430999999999716e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.7300000000083386e-07, 6.165999999998423e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.7300000000083386e-07, 8.374999999997967e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.860000000009301e-07, 7.319999999998161e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.720000000013602e-07, 4.096999999998047e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 9.930000000001743e-06, 4.729999999973644e-07, 6.180000000001462e-06, 4.860000000009301e-07, 3.986000000000961e-06, 4.859999999974607e-07, 9.514000000002132e-06, 4.729999999973644e-07, 7.665999999999923e-06, 4.720000000013602e-07, 3.973000000000865e-06, 4.7199999999789077e-07, 3.903000000003015e-06, 4.7199999999789077e-07, 9.805000000001618e-06, 4.729999999973644e-07, 9.389000000002007e-06, 4.860000000009301e-07, 7.110999999997147e-06, 4.720000000013602e-07, 6.360999999999867e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:00.007" endtime="20201112 12:26:00.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.003" endtime="20201112 12:26:00.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:00.016" level="INFO">${RESULT} = [{'time': 0.023674181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023684875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:00.012" endtime="20201112 12:26:00.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:00.030" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:00.017" endtime="20201112 12:26:00.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.035" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:00.034" endtime="20201112 12:26:00.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.037" level="INFO">VALUE: [4.729999999973644e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 12:26:00.036" endtime="20201112 12:26:00.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.031" endtime="20201112 12:26:00.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.041" endtime="20201112 12:26:00.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:00.044" endtime="20201112 12:26:00.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.043" endtime="20201112 12:26:00.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.039" endtime="20201112 12:26:00.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.629" endtime="20201112 12:26:00.065"></status>
</kw>
<msg timestamp="20201112 12:26:00.066" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.074" endtime="20201112 12:26:00.093"></status>
</kw>
<msg timestamp="20201112 12:26:00.094" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.072" endtime="20201112 12:26:00.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.096" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.095" endtime="20201112 12:26:00.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.097" endtime="20201112 12:26:00.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.069" endtime="20201112 12:26:00.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.067" endtime="20201112 12:26:00.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.107" endtime="20201112 12:26:00.397"></status>
</kw>
<msg timestamp="20201112 12:26:00.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023139653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023140125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:00.105" endtime="20201112 12:26:00.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023139653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023140125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:00.401" endtime="20201112 12:26:00.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.410" endtime="20201112 12:26:00.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.102" endtime="20201112 12:26:00.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.101" endtime="20201112 12:26:00.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.417" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:00.415" endtime="20201112 12:26:00.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.422" level="INFO">VALUE: [{'time': 0.023139653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023140125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023148181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.023148653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023158444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.790999999998579e-06, 'source_diff': 9.790999999998579e-06}, {'time': 0.023158917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023167319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.401999999997634e-06, 'source_diff': 8.401999999997634e-06}, {'time': 0.023167792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023174903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.023175375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023180917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.023181389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023191306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.023191778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023202, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.023202472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023207708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.023208181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023212278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.02321275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023217778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.02321825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023228181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.023228653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023234403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.023234889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023244083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.193999999997093e-06, 'source_diff': 9.193999999997093e-06}, {'time': 0.023244556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023251278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.02325175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023257194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.4439999999968125e-06, 'source_diff': 5.4439999999968125e-06}, {'time': 0.023257667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.02326275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.023263222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023267208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.023267681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023274167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.023274639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023281639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.023282111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023288125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.023288597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023298917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319999999997692e-05, 'source_diff': 1.0319999999997692e-05}, {'time': 0.023299389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023303278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.02330375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023311806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.023312292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023316292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.023316764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023326486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.023326958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023331375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.417000000003085e-06, 'source_diff': 4.417000000003085e-06}, {'time': 0.023331847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023340528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.023341, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023346361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.023346833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023351028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.0233515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023361417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.023361889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023366278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.023366764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023373764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.023374236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023382375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.023382847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02338725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.023387736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023392139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.023392611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023401889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277999999997982e-06, 'source_diff': 9.277999999997982e-06}, {'time': 0.023402375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023406667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.023407139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023414986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.023415472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023425292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.023425764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023431431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.023431903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023439333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.023439806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023446722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.915999999999173e-06, 'source_diff': 6.915999999999173e-06}, {'time': 0.023447194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023453278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.02345375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023459931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.023460403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023467319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.915999999999173e-06, 'source_diff': 6.915999999999173e-06}, {'time': 0.023467792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023474167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.023474653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023483625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.023484097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023490472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.023490944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023496597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.023497069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:00.418" endtime="20201112 12:26:00.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.413" endtime="20201112 12:26:00.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:00.449" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:26:00.424" endtime="20201112 12:26:00.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.453" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:00.452" endtime="20201112 12:26:00.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.457" level="INFO">VALUE: {'eventsourcediff': [0, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 9.790999999998579e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.720000000013602e-07, 5.541999999997271e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 1.0222000000000703e-05, 4.7199999999789077e-07, 5.236000000002211e-06, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 5.750000000002281e-06, 4.860000000009301e-07, 9.193999999997093e-06, 4.7300000000083386e-07, 6.722000000000672e-06, 4.720000000013602e-07, 5.4439999999968125e-06, 4.7300000000083386e-07, 5.082999999999477e-06, 4.720000000013602e-07, 3.986000000000961e-06, 4.729999999973644e-07, 6.485999999999992e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.0319999999997692e-05, 4.720000000013602e-07, 3.888999999999976e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.859999999974607e-07, 4.000000000000531e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 4.417000000003085e-06, 4.7199999999789077e-07, 8.680999999999967e-06, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 4.389000000000476e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 4.403000000000046e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.860000000009301e-07, 4.291999999999491e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.860000000009301e-07, 9.820000000000662e-06, 4.720000000013602e-07, 5.666999999997396e-06, 4.720000000013602e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 6.915999999999173e-06, 4.720000000013602e-07, 6.0839999999999506e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 6.915999999999173e-06, 4.7300000000083386e-07, 6.374999999999437e-06, 4.860000000009301e-07, 8.971999999999453e-06, 4.7199999999789077e-07, 6.374999999999437e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07], 'time': [0.023139653, 0.023140125, 0.023148181, 0.023148653, 0.023158444, 0.023158917, 0.023167319, 0.023167792, 0.023174903, 0.023175375, 0.023180917, 0.023181389, 0.023191306, 0.023191778, 0.023202, 0.023202472, 0.023207708, 0.023208181, 0.023212278, 0.02321275, 0.023217778, 0.02321825, 0.023228181, 0.023228653, 0.023234403, 0.023234889, 0.023244083, 0.023244556, 0.023251278, 0.02325175, 0.023257194, 0.023257667, 0.02326275, 0.023263222, 0.023267208, 0.023267681, 0.023274167, 0.023274639, 0.023281639, 0.023282111, 0.023288125, 0.023288597, 0.023298917, 0.023299389, 0.023303278, 0.02330375, 0.023311806, 0.023312292, 0.023316292, 0.023316764, 0.023326486, 0.023326958, 0.023331375, 0.023331847, 0.023340528, 0.023341, 0.023346361, 0.023346833, 0.023351028, 0.0233515, 0.023361417, 0.023361889, 0.023366278, 0.023366764, 0.023373764, 0.023374236, 0.023382375, 0.023382847, 0.02338725, 0.023387736, 0.023392139, 0.023392611, 0.023401889, 0.023402375, 0.023406667, 0.023407139, 0.023414986, 0.023415472, 0.023425292, 0.023425764, 0.023431431, 0.023431903, 0.023439333, 0.023439806, 0.023446722, 0.023447194, 0.023453278, 0.02345375, 0.023459931, 0.023460403, 0.023467319, 0.023467792, 0.023474167, 0.023474653, 0.023483625, 0.023484097, 0.023490472, 0.023490944, 0.023496597, 0.023497069], 'source_diff': [0, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 9.790999999998579e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.720000000013602e-07, 5.541999999997271e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 1.0222000000000703e-05, 4.7199999999789077e-07, 5.236000000002211e-06, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 5.750000000002281e-06, 4.860000000009301e-07, 9.193999999997093e-06, 4.7300000000083386e-07, 6.722000000000672e-06, 4.720000000013602e-07, 5.4439999999968125e-06, 4.7300000000083386e-07, 5.082999999999477e-06, 4.720000000013602e-07, 3.986000000000961e-06, 4.729999999973644e-07, 6.485999999999992e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.0319999999997692e-05, 4.720000000013602e-07, 3.888999999999976e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.859999999974607e-07, 4.000000000000531e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 4.417000000003085e-06, 4.7199999999789077e-07, 8.680999999999967e-06, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 4.389000000000476e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 4.403000000000046e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.860000000009301e-07, 4.291999999999491e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.860000000009301e-07, 9.820000000000662e-06, 4.720000000013602e-07, 5.666999999997396e-06, 4.720000000013602e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 6.915999999999173e-06, 4.720000000013602e-07, 6.0839999999999506e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 6.915999999999173e-06, 4.7300000000083386e-07, 6.374999999999437e-06, 4.860000000009301e-07, 8.971999999999453e-06, 4.7199999999789077e-07, 6.374999999999437e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:00.454" endtime="20201112 12:26:00.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.450" endtime="20201112 12:26:00.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:00.463" level="INFO">${RESULT} = [{'time': 0.023140125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023148653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:00.460" endtime="20201112 12:26:00.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:00.477" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:00.464" endtime="20201112 12:26:00.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.481" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:00.480" endtime="20201112 12:26:00.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.484" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 12:26:00.482" endtime="20201112 12:26:00.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.478" endtime="20201112 12:26:00.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.487" endtime="20201112 12:26:00.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:00.491" endtime="20201112 12:26:00.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.489" endtime="20201112 12:26:00.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.485" endtime="20201112 12:26:00.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.066" endtime="20201112 12:26:00.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.619" endtime="20201112 12:26:00.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:00.521" endtime="20201112 12:26:00.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.520" endtime="20201112 12:26:00.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.518" endtime="20201112 12:26:00.542"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:25:50.017" endtime="20201112 12:26:00.542" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:00.553" endtime="20201112 12:26:00.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.551" endtime="20201112 12:26:00.573"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.588" endtime="20201112 12:26:00.605"></status>
</kw>
<msg timestamp="20201112 12:26:00.606" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.586" endtime="20201112 12:26:00.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.609" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.607" endtime="20201112 12:26:00.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.619" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:00.616" endtime="20201112 12:26:00.619"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:00.583" endtime="20201112 12:26:00.620"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:00.581" endtime="20201112 12:26:00.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.579" endtime="20201112 12:26:00.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:00.625" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:00.624" endtime="20201112 12:26:00.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.621" endtime="20201112 12:26:00.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.578" endtime="20201112 12:26:00.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.577" endtime="20201112 12:26:00.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.626" endtime="20201112 12:26:00.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.576" endtime="20201112 12:26:00.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.574" endtime="20201112 12:26:00.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.550" endtime="20201112 12:26:00.629"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:26:00.632" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.641" endtime="20201112 12:26:00.655"></status>
</kw>
<msg timestamp="20201112 12:26:00.655" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.639" endtime="20201112 12:26:00.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.658" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.657" endtime="20201112 12:26:00.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.659" endtime="20201112 12:26:00.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.636" endtime="20201112 12:26:00.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.634" endtime="20201112 12:26:00.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.670" endtime="20201112 12:26:00.956"></status>
</kw>
<msg timestamp="20201112 12:26:00.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077924375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077928792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:00.667" endtime="20201112 12:26:00.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077924375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077928792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:00.961" endtime="20201112 12:26:00.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.969" endtime="20201112 12:26:00.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.664" endtime="20201112 12:26:00.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.663" endtime="20201112 12:26:00.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:00.976" level="INFO">${RESULT} = [{'time': 0.077928792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999992677e-06, 'source_diff': 4.416999999992677e-06}, {'time': 0.077937569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:00.973" endtime="20201112 12:26:00.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:00.990" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:00.977" endtime="20201112 12:26:00.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.995" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:00.994" endtime="20201112 12:26:00.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.998" level="INFO">VALUE: [4.416999999992677e-06, 4.443999999992343e-06, 4.4720000000053606e-06, 4.360999999994397e-06, 4.445000000005694e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.444999999991817e-06, 4.429999999999712e-06, 4.457999999998852e-06, 4.4170000000065546e-06, 4.459000000012203e-06, 4.444000000006221e-06, 4.430999999999186e-06, 4.445000000005694e-06, 4.430999999999186e-06, 4.444000000006221e-06, 4.4720000000053606e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.459000000012203e-06, 4.416999999992677e-06, 4.457999999998852e-06, 4.431000000013063e-06, 4.429999999999712e-06, 4.458999999998325e-06, 4.457999999998852e-06, 4.471999999991483e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.443999999992343e-06, 4.445000000005694e-06, 4.458999999998325e-06, 4.457999999998852e-06, 4.5000000000045e-06, 4.443999999992343e-06, 4.429999999999712e-06, 4.457999999998852e-06, 4.443999999992343e-06, 4.416000000007081e-06, 4.458999999998325e-06, 4.457999999998852e-06, 4.458999999998325e-06, 4.415999999993203e-06, 4.375000000000906e-06, 4.429999999999712e-06, 4.415999999993203e-06, 4.444000000006221e-06, 4.445000000005694e-06, 4.4720000000053606e-06]</msg>
<status status="PASS" starttime="20201112 12:26:00.997" endtime="20201112 12:26:00.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.992" endtime="20201112 12:26:00.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.001" endtime="20201112 12:26:01.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:01.005" endtime="20201112 12:26:01.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.003" endtime="20201112 12:26:01.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.000" endtime="20201112 12:26:01.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.633" endtime="20201112 12:26:01.026"></status>
</kw>
<msg timestamp="20201112 12:26:01.026" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.034" endtime="20201112 12:26:01.051"></status>
</kw>
<msg timestamp="20201112 12:26:01.052" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.032" endtime="20201112 12:26:01.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.054" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.053" endtime="20201112 12:26:01.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.056" endtime="20201112 12:26:01.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.030" endtime="20201112 12:26:01.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.028" endtime="20201112 12:26:01.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.065" endtime="20201112 12:26:01.350"></status>
</kw>
<msg timestamp="20201112 12:26:01.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022769861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:01.063" endtime="20201112 12:26:01.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022769861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:01.355" endtime="20201112 12:26:01.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.363" endtime="20201112 12:26:01.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.061" endtime="20201112 12:26:01.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.059" endtime="20201112 12:26:01.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:01.370" level="INFO">${RESULT} = [{'time': 0.022769861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.022783194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:01.367" endtime="20201112 12:26:01.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:01.384" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:01.371" endtime="20201112 12:26:01.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.389" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:01.388" endtime="20201112 12:26:01.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.391" level="INFO">VALUE: [4.443999999999282e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.444000000002751e-06, 4.457999999998852e-06, 4.458000000002321e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.430999999999186e-06, 4.500000000001031e-06, 4.485999999997992e-06, 4.429999999999712e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.472000000001891e-06, 4.472999999997895e-06, 4.459000000001795e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.500000000001031e-06, 4.430999999999186e-06, 4.472000000001891e-06, 4.431000000002655e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.458000000002321e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.443999999999282e-06, 4.444000000002751e-06, 4.416999999999616e-06, 4.472000000001891e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.430000000003181e-06, 4.403000000000046e-06, 4.444000000002751e-06, 4.457999999998852e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.457999999998852e-06]</msg>
<status status="PASS" starttime="20201112 12:26:01.390" endtime="20201112 12:26:01.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.385" endtime="20201112 12:26:01.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.394" endtime="20201112 12:26:01.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:01.398" endtime="20201112 12:26:01.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.396" endtime="20201112 12:26:01.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.393" endtime="20201112 12:26:01.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.027" endtime="20201112 12:26:01.419"></status>
</kw>
<msg timestamp="20201112 12:26:01.419" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.427" endtime="20201112 12:26:01.443"></status>
</kw>
<msg timestamp="20201112 12:26:01.443" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.425" endtime="20201112 12:26:01.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.446" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.445" endtime="20201112 12:26:01.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.447" endtime="20201112 12:26:01.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.423" endtime="20201112 12:26:01.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.421" endtime="20201112 12:26:01.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.457" endtime="20201112 12:26:01.742"></status>
</kw>
<msg timestamp="20201112 12:26:01.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021602833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:01.455" endtime="20201112 12:26:01.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021602833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:01.747" endtime="20201112 12:26:01.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.755" endtime="20201112 12:26:01.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.452" endtime="20201112 12:26:01.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.450" endtime="20201112 12:26:01.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:01.763" level="INFO">${RESULT} = [{'time': 0.021602833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.021617569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:01.759" endtime="20201112 12:26:01.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:01.777" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:01.764" endtime="20201112 12:26:01.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.782" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:01.781" endtime="20201112 12:26:01.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.785" level="INFO">VALUE: [4.429999999999712e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.459000000001795e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.472000000001891e-06, 4.429999999999712e-06, 4.458999999998325e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.417000000003085e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.472000000001891e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.429999999999712e-06, 4.472999999997895e-06, 4.4449999999987555e-06, 4.430000000003181e-06, 4.471999999998422e-06, 4.429999999999712e-06, 4.457999999998852e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.457999999998852e-06, 4.430999999999186e-06, 4.458999999998325e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.457999999998852e-06, 4.443999999999282e-06]</msg>
<status status="PASS" starttime="20201112 12:26:01.783" endtime="20201112 12:26:01.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.778" endtime="20201112 12:26:01.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.788" endtime="20201112 12:26:01.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:01.792" endtime="20201112 12:26:01.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.790" endtime="20201112 12:26:01.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.787" endtime="20201112 12:26:01.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.420" endtime="20201112 12:26:01.813"></status>
</kw>
<msg timestamp="20201112 12:26:01.813" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.821" endtime="20201112 12:26:01.836"></status>
</kw>
<msg timestamp="20201112 12:26:01.836" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.819" endtime="20201112 12:26:01.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.839" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.837" endtime="20201112 12:26:01.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.840" endtime="20201112 12:26:01.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.817" endtime="20201112 12:26:01.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.815" endtime="20201112 12:26:01.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.849" endtime="20201112 12:26:02.138"></status>
</kw>
<msg timestamp="20201112 12:26:02.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019620667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:01.848" endtime="20201112 12:26:02.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019620667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.143" endtime="20201112 12:26:02.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.151" endtime="20201112 12:26:02.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.845" endtime="20201112 12:26:02.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.843" endtime="20201112 12:26:02.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:02.158" level="INFO">${RESULT} = [{'time': 0.019620667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.445000000002225e-06, 'source_diff': 4.445000000002225e-06}, {'time': 0.019629153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:02.155" endtime="20201112 12:26:02.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:02.172" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:02.159" endtime="20201112 12:26:02.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.176" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:02.175" endtime="20201112 12:26:02.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.179" level="INFO">VALUE: [4.445000000002225e-06, 4.4449999999987555e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.459000000001795e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.458999999998325e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.417000000003085e-06, 4.416999999999616e-06, 4.500000000001031e-06, 4.430999999999186e-06, 4.417000000003085e-06, 4.4449999999987555e-06, 4.429999999999712e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.472000000001891e-06, 4.471999999998422e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.471999999998422e-06, 4.457999999998852e-06, 4.445000000002225e-06, 4.416000000000142e-06, 4.4449999999987555e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.457999999998852e-06, 4.443999999999282e-06, 4.444000000002751e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.443999999999282e-06, 4.458000000002321e-06]</msg>
<status status="PASS" starttime="20201112 12:26:02.178" endtime="20201112 12:26:02.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.173" endtime="20201112 12:26:02.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.182" endtime="20201112 12:26:02.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:02.186" endtime="20201112 12:26:02.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.184" endtime="20201112 12:26:02.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.180" endtime="20201112 12:26:02.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.813" endtime="20201112 12:26:02.207"></status>
</kw>
<msg timestamp="20201112 12:26:02.207" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.215" endtime="20201112 12:26:02.232"></status>
</kw>
<msg timestamp="20201112 12:26:02.233" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.213" endtime="20201112 12:26:02.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.235" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.234" endtime="20201112 12:26:02.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.236" endtime="20201112 12:26:02.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.211" endtime="20201112 12:26:02.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.209" endtime="20201112 12:26:02.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.246" endtime="20201112 12:26:02.531"></status>
</kw>
<msg timestamp="20201112 12:26:02.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.244" endtime="20201112 12:26:02.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.535" endtime="20201112 12:26:02.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.544" endtime="20201112 12:26:02.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.241" endtime="20201112 12:26:02.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.240" endtime="20201112 12:26:02.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:02.551" level="INFO">${RESULT} = [{'time': 0.022443333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.022453958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:02.548" endtime="20201112 12:26:02.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:02.566" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:02.552" endtime="20201112 12:26:02.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.570" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:02.569" endtime="20201112 12:26:02.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.573" level="INFO">VALUE: [4.457999999998852e-06, 4.416000000000142e-06, 4.458000000002321e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.443999999999282e-06, 4.457999999998852e-06, 4.416000000000142e-06, 4.445000000002225e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.443999999999282e-06, 4.361000000001336e-06, 4.443999999999282e-06, 4.472000000001891e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.4449999999987555e-06, 4.3749999999974365e-06, 4.445000000002225e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.471999999998422e-06, 4.457999999998852e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.431000000002655e-06, 4.500000000001031e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.375000000000906e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.444000000002751e-06, 4.443999999999282e-06, 4.485999999997992e-06, 4.430999999999186e-06, 4.458999999998325e-06, 4.430999999999186e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201112 12:26:02.571" endtime="20201112 12:26:02.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.567" endtime="20201112 12:26:02.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.576" endtime="20201112 12:26:02.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:02.579" endtime="20201112 12:26:02.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.578" endtime="20201112 12:26:02.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.574" endtime="20201112 12:26:02.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.208" endtime="20201112 12:26:02.600"></status>
</kw>
<msg timestamp="20201112 12:26:02.601" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.609" endtime="20201112 12:26:02.625"></status>
</kw>
<msg timestamp="20201112 12:26:02.625" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.607" endtime="20201112 12:26:02.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.628" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.626" endtime="20201112 12:26:02.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.629" endtime="20201112 12:26:02.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.604" endtime="20201112 12:26:02.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.602" endtime="20201112 12:26:02.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.639" endtime="20201112 12:26:02.925"></status>
</kw>
<msg timestamp="20201112 12:26:02.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020657458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020661819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.637" endtime="20201112 12:26:02.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020657458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020661819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.929" endtime="20201112 12:26:02.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.937" endtime="20201112 12:26:02.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.634" endtime="20201112 12:26:02.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.632" endtime="20201112 12:26:02.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:02.944" level="INFO">${RESULT} = [{'time': 0.020661819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.020675583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:02.941" endtime="20201112 12:26:02.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:02.958" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:02.945" endtime="20201112 12:26:02.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.962" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:02.961" endtime="20201112 12:26:02.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.965" level="INFO">VALUE: [4.361000000001336e-06, 4.514000000000601e-06, 4.443999999999282e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.457999999998852e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.472000000001891e-06, 4.361000000001336e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.485999999997992e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.458000000002321e-06, 4.444000000002751e-06, 4.430999999999186e-06, 4.471999999998422e-06, 4.4449999999987555e-06, 4.4449999999987555e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.458999999998325e-06, 4.486000000001461e-06, 4.429999999999712e-06, 4.459000000001795e-06, 4.430999999999186e-06, 4.473000000001365e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.458999999998325e-06, 4.4449999999987555e-06, 4.457999999998852e-06, 4.429999999999712e-06, 4.4449999999987555e-06, 4.458999999998325e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201112 12:26:02.963" endtime="20201112 12:26:02.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.959" endtime="20201112 12:26:02.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.968" endtime="20201112 12:26:02.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:02.972" endtime="20201112 12:26:02.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.970" endtime="20201112 12:26:02.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.967" endtime="20201112 12:26:02.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.601" endtime="20201112 12:26:02.993"></status>
</kw>
<msg timestamp="20201112 12:26:02.993" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.001" endtime="20201112 12:26:03.016"></status>
</kw>
<msg timestamp="20201112 12:26:03.017" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.999" endtime="20201112 12:26:03.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.019" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.018" endtime="20201112 12:26:03.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.020" endtime="20201112 12:26:03.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.997" endtime="20201112 12:26:03.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.995" endtime="20201112 12:26:03.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.030" endtime="20201112 12:26:03.320"></status>
</kw>
<msg timestamp="20201112 12:26:03.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.029" endtime="20201112 12:26:03.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.324" endtime="20201112 12:26:03.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.333" endtime="20201112 12:26:03.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.026" endtime="20201112 12:26:03.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.024" endtime="20201112 12:26:03.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:03.340" level="INFO">${RESULT} = [{'time': 0.020387819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430000000003181e-06, 'source_diff': 4.430000000003181e-06}, {'time': 0.020396375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:03.336" endtime="20201112 12:26:03.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:03.353" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:03.341" endtime="20201112 12:26:03.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.358" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:03.357" endtime="20201112 12:26:03.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.360" level="INFO">VALUE: [4.430000000003181e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.429999999999712e-06, 4.472000000001891e-06, 4.457999999998852e-06, 4.445000000002225e-06, 4.429999999999712e-06, 4.445000000002225e-06, 4.459000000001795e-06, 4.429999999999712e-06, 4.4449999999987555e-06, 4.430999999999186e-06, 4.444000000002751e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.430000000003181e-06, 4.430999999999186e-06, 4.458000000002321e-06, 4.36200000000081e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.458000000002321e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.473000000001365e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.431000000002655e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.445000000002225e-06, 4.430999999999186e-06, 4.458000000002321e-06, 4.457999999998852e-06, 4.457999999998852e-06]</msg>
<status status="PASS" starttime="20201112 12:26:03.359" endtime="20201112 12:26:03.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.354" endtime="20201112 12:26:03.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.364" endtime="20201112 12:26:03.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.367" endtime="20201112 12:26:03.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.366" endtime="20201112 12:26:03.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.362" endtime="20201112 12:26:03.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.993" endtime="20201112 12:26:03.388"></status>
</kw>
<msg timestamp="20201112 12:26:03.388" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.396" endtime="20201112 12:26:03.413"></status>
</kw>
<msg timestamp="20201112 12:26:03.413" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.395" endtime="20201112 12:26:03.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.416" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.414" endtime="20201112 12:26:03.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.418" endtime="20201112 12:26:03.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.392" endtime="20201112 12:26:03.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.390" endtime="20201112 12:26:03.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.427" endtime="20201112 12:26:03.712"></status>
</kw>
<msg timestamp="20201112 12:26:03.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02180725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:03.425" endtime="20201112 12:26:03.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02180725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:03.717" endtime="20201112 12:26:03.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.725" endtime="20201112 12:26:03.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.423" endtime="20201112 12:26:03.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.421" endtime="20201112 12:26:03.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:03.732" level="INFO">${RESULT} = [{'time': 0.021811708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.021820611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:03.729" endtime="20201112 12:26:03.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:03.746" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:03.733" endtime="20201112 12:26:03.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.750" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:03.749" endtime="20201112 12:26:03.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.753" level="INFO">VALUE: [4.457999999998852e-06, 4.472000000001891e-06, 4.4449999999987555e-06, 4.415999999996673e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.444000000002751e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.430000000003181e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.471999999998422e-06, 4.458999999998325e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.4449999999987555e-06, 4.514000000000601e-06, 4.4449999999987555e-06, 4.471999999998422e-06, 4.430000000003181e-06, 4.4449999999987555e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.444000000002751e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.388999999997006e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.472000000001891e-06, 4.457999999998852e-06]</msg>
<status status="PASS" starttime="20201112 12:26:03.751" endtime="20201112 12:26:03.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.747" endtime="20201112 12:26:03.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.756" endtime="20201112 12:26:03.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.760" endtime="20201112 12:26:03.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.758" endtime="20201112 12:26:03.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.754" endtime="20201112 12:26:03.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.389" endtime="20201112 12:26:03.780"></status>
</kw>
<msg timestamp="20201112 12:26:03.781" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.789" endtime="20201112 12:26:03.804"></status>
</kw>
<msg timestamp="20201112 12:26:03.805" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.787" endtime="20201112 12:26:03.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.807" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.806" endtime="20201112 12:26:03.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.809" endtime="20201112 12:26:03.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.784" endtime="20201112 12:26:03.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.783" endtime="20201112 12:26:03.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.818" endtime="20201112 12:26:04.108"></status>
</kw>
<msg timestamp="20201112 12:26:04.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021280319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02128475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:03.817" endtime="20201112 12:26:04.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021280319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02128475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:04.112" endtime="20201112 12:26:04.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.121" endtime="20201112 12:26:04.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.814" endtime="20201112 12:26:04.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.812" endtime="20201112 12:26:04.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:04.127" level="INFO">${RESULT} = [{'time': 0.02128475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.431000000002655e-06, 'source_diff': 4.431000000002655e-06}, {'time': 0.021294986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:04.124" endtime="20201112 12:26:04.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:04.142" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:04.128" endtime="20201112 12:26:04.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.147" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:04.146" endtime="20201112 12:26:04.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.149" level="INFO">VALUE: [4.431000000002655e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.375000000000906e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.401999999997103e-06, 4.431000000002655e-06, 4.430999999999186e-06, 4.486000000001461e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.4449999999987555e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.430000000003181e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.445000000002225e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.459000000001795e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.445000000002225e-06, 4.445000000002225e-06, 4.403000000000046e-06, 4.459000000001795e-06, 4.430999999999186e-06, 4.445000000002225e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.471999999998422e-06, 4.429999999999712e-06, 4.471999999998422e-06, 4.443999999999282e-06, 4.4449999999987555e-06]</msg>
<status status="PASS" starttime="20201112 12:26:04.148" endtime="20201112 12:26:04.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.143" endtime="20201112 12:26:04.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.153" endtime="20201112 12:26:04.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.156" endtime="20201112 12:26:04.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.154" endtime="20201112 12:26:04.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.151" endtime="20201112 12:26:04.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.781" endtime="20201112 12:26:04.177"></status>
</kw>
<msg timestamp="20201112 12:26:04.177" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.186" endtime="20201112 12:26:04.202"></status>
</kw>
<msg timestamp="20201112 12:26:04.203" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.184" endtime="20201112 12:26:04.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.205" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.204" endtime="20201112 12:26:04.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.206" endtime="20201112 12:26:04.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.181" endtime="20201112 12:26:04.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.179" endtime="20201112 12:26:04.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.216" endtime="20201112 12:26:04.500"></status>
</kw>
<msg timestamp="20201112 12:26:04.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021624583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021629014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.214" endtime="20201112 12:26:04.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021624583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021629014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.504" endtime="20201112 12:26:04.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.513" endtime="20201112 12:26:04.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.211" endtime="20201112 12:26:04.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.210" endtime="20201112 12:26:04.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:04.520" level="INFO">${RESULT} = [{'time': 0.021629014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.021638194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:04.516" endtime="20201112 12:26:04.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:04.533" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:04.521" endtime="20201112 12:26:04.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.538" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:04.537" endtime="20201112 12:26:04.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.540" level="INFO">VALUE: [4.430999999999186e-06, 4.416000000000142e-06, 4.457999999998852e-06, 4.416999999999616e-06, 4.471999999998422e-06, 4.444000000002751e-06, 4.429999999999712e-06, 4.459000000001795e-06, 4.430999999999186e-06, 4.500000000001031e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.457999999998852e-06, 4.429999999999712e-06, 4.486000000001461e-06, 4.458999999998325e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.486000000001461e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.514000000000601e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.472000000001891e-06, 4.429999999999712e-06, 4.457999999998852e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.458999999998325e-06, 4.445000000002225e-06, 4.444000000002751e-06, 4.4449999999987555e-06, 4.457999999998852e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.472999999997895e-06, 4.471999999998422e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.459000000001795e-06, 4.430999999999186e-06]</msg>
<status status="PASS" starttime="20201112 12:26:04.539" endtime="20201112 12:26:04.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.534" endtime="20201112 12:26:04.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.544" endtime="20201112 12:26:04.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.547" endtime="20201112 12:26:04.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.545" endtime="20201112 12:26:04.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.542" endtime="20201112 12:26:04.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.178" endtime="20201112 12:26:04.568"></status>
</kw>
<msg timestamp="20201112 12:26:04.569" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.577" endtime="20201112 12:26:04.594"></status>
</kw>
<msg timestamp="20201112 12:26:04.594" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.575" endtime="20201112 12:26:04.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.597" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.595" endtime="20201112 12:26:04.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.598" endtime="20201112 12:26:04.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.572" endtime="20201112 12:26:04.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.570" endtime="20201112 12:26:04.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.607" endtime="20201112 12:26:04.896"></status>
</kw>
<msg timestamp="20201112 12:26:04.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022052319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.606" endtime="20201112 12:26:04.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022052319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.900" endtime="20201112 12:26:04.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.909" endtime="20201112 12:26:04.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.603" endtime="20201112 12:26:04.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.601" endtime="20201112 12:26:04.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:04.916" level="INFO">${RESULT} = [{'time': 0.022052319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.458000000002321e-06, 'source_diff': 4.458000000002321e-06}, {'time': 0.022062958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:04.912" endtime="20201112 12:26:04.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:04.929" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:04.917" endtime="20201112 12:26:04.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.934" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:04.933" endtime="20201112 12:26:04.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.936" level="INFO">VALUE: [4.458000000002321e-06, 4.416000000000142e-06, 4.458999999998325e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.445000000002225e-06, 4.472000000001891e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.4449999999987555e-06, 4.4449999999987555e-06, 4.458000000002321e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.430000000003181e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.458000000002321e-06, 4.471999999998422e-06, 4.472000000001891e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.457999999998852e-06, 4.389000000000476e-06, 4.445000000002225e-06, 4.459000000001795e-06, 4.402000000000572e-06, 4.500000000001031e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.457999999998852e-06, 4.4449999999987555e-06, 4.415999999996673e-06, 4.443999999999282e-06, 4.444000000002751e-06, 4.431000000002655e-06, 4.500000000001031e-06, 4.457999999998852e-06, 4.472000000001891e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.473000000001365e-06, 4.417000000003085e-06, 4.457999999998852e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.416000000000142e-06]</msg>
<status status="PASS" starttime="20201112 12:26:04.935" endtime="20201112 12:26:04.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.930" endtime="20201112 12:26:04.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.940" endtime="20201112 12:26:04.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.944" endtime="20201112 12:26:04.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.942" endtime="20201112 12:26:04.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.938" endtime="20201112 12:26:04.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.569" endtime="20201112 12:26:04.965"></status>
</kw>
<msg timestamp="20201112 12:26:04.965" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.973" endtime="20201112 12:26:04.990"></status>
</kw>
<msg timestamp="20201112 12:26:04.991" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.971" endtime="20201112 12:26:04.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.993" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.992" endtime="20201112 12:26:04.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.994" endtime="20201112 12:26:04.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.969" endtime="20201112 12:26:04.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.967" endtime="20201112 12:26:04.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.004" endtime="20201112 12:26:05.290"></status>
</kw>
<msg timestamp="20201112 12:26:05.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.002" endtime="20201112 12:26:05.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.295" endtime="20201112 12:26:05.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.303" endtime="20201112 12:26:05.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.000" endtime="20201112 12:26:05.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.998" endtime="20201112 12:26:05.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:05.310" level="INFO">${RESULT} = [{'time': 0.022808486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.022821625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:05.307" endtime="20201112 12:26:05.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.324" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:05.311" endtime="20201112 12:26:05.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.328" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:05.327" endtime="20201112 12:26:05.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.331" level="INFO">VALUE: [4.429999999999712e-06, 4.347000000001766e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.486000000001461e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.429999999999712e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.471999999998422e-06, 4.416999999999616e-06, 4.457999999998852e-06, 4.416000000000142e-06, 4.471999999998422e-06, 4.443999999999282e-06, 4.457999999998852e-06, 4.4449999999987555e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.457999999998852e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.445000000002225e-06, 4.375000000000906e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.4449999999987555e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.472000000001891e-06]</msg>
<status status="PASS" starttime="20201112 12:26:05.329" endtime="20201112 12:26:05.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.325" endtime="20201112 12:26:05.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.335" endtime="20201112 12:26:05.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.338" endtime="20201112 12:26:05.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.337" endtime="20201112 12:26:05.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.333" endtime="20201112 12:26:05.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.965" endtime="20201112 12:26:05.359"></status>
</kw>
<msg timestamp="20201112 12:26:05.359" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.367" endtime="20201112 12:26:05.382"></status>
</kw>
<msg timestamp="20201112 12:26:05.382" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.366" endtime="20201112 12:26:05.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.385" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.383" endtime="20201112 12:26:05.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.386" endtime="20201112 12:26:05.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.363" endtime="20201112 12:26:05.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.361" endtime="20201112 12:26:05.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.395" endtime="20201112 12:26:05.684"></status>
</kw>
<msg timestamp="20201112 12:26:05.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020239417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.394" endtime="20201112 12:26:05.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020239417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.688" endtime="20201112 12:26:05.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.697" endtime="20201112 12:26:05.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.391" endtime="20201112 12:26:05.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.389" endtime="20201112 12:26:05.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:05.704" level="INFO">${RESULT} = [{'time': 0.020239417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.020248806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:05.700" endtime="20201112 12:26:05.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.719" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:05.705" endtime="20201112 12:26:05.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.724" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:05.723" endtime="20201112 12:26:05.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.727" level="INFO">VALUE: [4.403000000000046e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.445000000002225e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.457999999998852e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.458000000002321e-06, 4.500000000001031e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.459000000001795e-06, 4.472999999997895e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.472000000001891e-06, 4.458999999998325e-06, 4.457999999998852e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.445000000002225e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.457999999998852e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.445000000002225e-06, 4.429999999999712e-06, 4.415999999996673e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.457999999998852e-06, 4.513999999997131e-06]</msg>
<status status="PASS" starttime="20201112 12:26:05.725" endtime="20201112 12:26:05.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.720" endtime="20201112 12:26:05.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.741" endtime="20201112 12:26:05.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.745" endtime="20201112 12:26:05.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.743" endtime="20201112 12:26:05.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.739" endtime="20201112 12:26:05.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.360" endtime="20201112 12:26:05.766"></status>
</kw>
<msg timestamp="20201112 12:26:05.766" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.774" endtime="20201112 12:26:05.789"></status>
</kw>
<msg timestamp="20201112 12:26:05.790" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.772" endtime="20201112 12:26:05.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.792" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.791" endtime="20201112 12:26:05.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.794" endtime="20201112 12:26:05.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.770" endtime="20201112 12:26:05.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.768" endtime="20201112 12:26:05.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.803" endtime="20201112 12:26:06.092"></status>
</kw>
<msg timestamp="20201112 12:26:06.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020469903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.802" endtime="20201112 12:26:06.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020469903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.096" endtime="20201112 12:26:06.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.104" endtime="20201112 12:26:06.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.799" endtime="20201112 12:26:06.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.797" endtime="20201112 12:26:06.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.111" level="INFO">${RESULT} = [{'time': 0.020474347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.020482847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:06.108" endtime="20201112 12:26:06.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.125" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:06.112" endtime="20201112 12:26:06.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.129" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:06.128" endtime="20201112 12:26:06.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.132" level="INFO">VALUE: [4.443999999999282e-06, 4.471999999998422e-06, 4.458999999998325e-06, 4.472999999997895e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.458999999998325e-06, 4.445000000002225e-06, 4.485999999997992e-06, 4.416000000000142e-06, 4.458000000002321e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.4449999999987555e-06, 4.471999999998422e-06, 4.457999999998852e-06, 4.444000000002751e-06, 4.402000000000572e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.445000000002225e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.458000000002321e-06, 4.444000000002751e-06, 4.500000000001031e-06, 4.445000000002225e-06, 4.389000000000476e-06, 4.4449999999987555e-06, 4.445000000002225e-06, 4.416000000000142e-06, 4.3749999999974365e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.459000000001795e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.4449999999987555e-06, 4.429999999999712e-06, 4.417000000003085e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.4449999999987555e-06]</msg>
<status status="PASS" starttime="20201112 12:26:06.130" endtime="20201112 12:26:06.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.126" endtime="20201112 12:26:06.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.136" endtime="20201112 12:26:06.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.139" endtime="20201112 12:26:06.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.138" endtime="20201112 12:26:06.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.134" endtime="20201112 12:26:06.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.767" endtime="20201112 12:26:06.160"></status>
</kw>
<msg timestamp="20201112 12:26:06.160" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.168" endtime="20201112 12:26:06.186"></status>
</kw>
<msg timestamp="20201112 12:26:06.186" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.167" endtime="20201112 12:26:06.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.189" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.187" endtime="20201112 12:26:06.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.190" endtime="20201112 12:26:06.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.164" endtime="20201112 12:26:06.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.162" endtime="20201112 12:26:06.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.200" endtime="20201112 12:26:06.489"></status>
</kw>
<msg timestamp="20201112 12:26:06.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022998833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.198" endtime="20201112 12:26:06.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022998833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.493" endtime="20201112 12:26:06.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.501" endtime="20201112 12:26:06.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.195" endtime="20201112 12:26:06.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.193" endtime="20201112 12:26:06.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.508" level="INFO">${RESULT} = [{'time': 0.022998833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.023012125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:06.505" endtime="20201112 12:26:06.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.522" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:06.509" endtime="20201112 12:26:06.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.526" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:06.525" endtime="20201112 12:26:06.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.529" level="INFO">VALUE: [4.457999999998852e-06, 4.458000000002321e-06, 4.4999999999975615e-06, 4.457999999998852e-06, 4.459000000001795e-06, 4.459000000001795e-06, 4.389000000000476e-06, 4.457999999998852e-06, 4.431000000002655e-06, 4.445000000002225e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.36200000000081e-06, 4.471999999998422e-06, 4.429999999999712e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.4449999999987555e-06, 4.485999999997992e-06, 4.457999999998852e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.459000000001795e-06, 4.459000000001795e-06, 4.430999999999186e-06, 4.459000000001795e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.445000000002225e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.445000000002225e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.458999999998325e-06, 4.445000000002225e-06, 4.443999999999282e-06, 4.458999999998325e-06, 4.458999999998325e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.457999999998852e-06, 4.430999999999186e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201112 12:26:06.527" endtime="20201112 12:26:06.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.523" endtime="20201112 12:26:06.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.533" endtime="20201112 12:26:06.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.536" endtime="20201112 12:26:06.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.535" endtime="20201112 12:26:06.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.531" endtime="20201112 12:26:06.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.161" endtime="20201112 12:26:06.557"></status>
</kw>
<msg timestamp="20201112 12:26:06.557" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.565" endtime="20201112 12:26:06.582"></status>
</kw>
<msg timestamp="20201112 12:26:06.583" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.564" endtime="20201112 12:26:06.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.586" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.584" endtime="20201112 12:26:06.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.587" endtime="20201112 12:26:06.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.561" endtime="20201112 12:26:06.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.559" endtime="20201112 12:26:06.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.596" endtime="20201112 12:26:06.882"></status>
</kw>
<msg timestamp="20201112 12:26:06.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022814819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.594" endtime="20201112 12:26:06.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022814819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.887" endtime="20201112 12:26:06.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.895" endtime="20201112 12:26:06.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.592" endtime="20201112 12:26:06.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.590" endtime="20201112 12:26:06.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.902" level="INFO">${RESULT} = [{'time': 0.022819264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.022830319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:06.898" endtime="20201112 12:26:06.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.915" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:06.903" endtime="20201112 12:26:06.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.919" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:06.918" endtime="20201112 12:26:06.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.921" level="INFO">VALUE: [4.4449999999987555e-06, 4.430000000003181e-06, 4.458000000002321e-06, 4.416999999999616e-06, 4.471999999998422e-06, 4.457999999998852e-06, 4.472999999997895e-06, 4.4449999999987555e-06, 4.3749999999974365e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.417000000003085e-06, 4.360999999997867e-06, 4.4449999999987555e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.417000000003085e-06, 4.361000000001336e-06, 4.4999999999975615e-06, 4.458000000002321e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.3749999999974365e-06, 4.445000000002225e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.4449999999987555e-06, 4.416000000000142e-06, 4.472999999997895e-06, 4.389000000000476e-06, 4.457999999998852e-06, 4.500000000001031e-06, 4.457999999998852e-06, 4.417000000003085e-06, 4.443999999999282e-06, 4.473000000001365e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.443999999999282e-06]</msg>
<status status="PASS" starttime="20201112 12:26:06.920" endtime="20201112 12:26:06.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.916" endtime="20201112 12:26:06.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.925" endtime="20201112 12:26:06.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.929" endtime="20201112 12:26:06.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.927" endtime="20201112 12:26:06.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.923" endtime="20201112 12:26:06.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.558" endtime="20201112 12:26:06.949"></status>
</kw>
<msg timestamp="20201112 12:26:06.950" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.957" endtime="20201112 12:26:06.976"></status>
</kw>
<msg timestamp="20201112 12:26:06.977" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.956" endtime="20201112 12:26:06.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.979" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.978" endtime="20201112 12:26:06.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.980" endtime="20201112 12:26:06.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.953" endtime="20201112 12:26:06.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.951" endtime="20201112 12:26:06.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.989" endtime="20201112 12:26:07.275"></status>
</kw>
<msg timestamp="20201112 12:26:07.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.988" endtime="20201112 12:26:07.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.279" endtime="20201112 12:26:07.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.287" endtime="20201112 12:26:07.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.985" endtime="20201112 12:26:07.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.983" endtime="20201112 12:26:07.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:07.294" level="INFO">${RESULT} = [{'time': 0.022448528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.022457931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:07.291" endtime="20201112 12:26:07.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:07.308" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:07.295" endtime="20201112 12:26:07.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.313" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:07.312" endtime="20201112 12:26:07.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.315" level="INFO">VALUE: [4.416999999999616e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.416999999999616e-06, 4.473000000001365e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.431000000002655e-06, 4.471999999998422e-06, 4.486000000001461e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.458999999998325e-06, 4.443999999999282e-06, 4.445000000002225e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.417000000003085e-06, 4.471999999998422e-06, 4.416999999999616e-06, 4.472000000001891e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.4449999999987555e-06, 4.486000000001461e-06, 4.416000000000142e-06, 4.459000000001795e-06, 4.485999999997992e-06, 4.416000000000142e-06, 4.458999999998325e-06, 4.472000000001891e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.458000000002321e-06, 4.416999999999616e-06, 4.445000000002225e-06, 4.457999999998852e-06, 4.458000000002321e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.431000000002655e-06, 4.417000000003085e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.401999999997103e-06]</msg>
<status status="PASS" starttime="20201112 12:26:07.314" endtime="20201112 12:26:07.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.309" endtime="20201112 12:26:07.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.319" endtime="20201112 12:26:07.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:07.322" endtime="20201112 12:26:07.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.321" endtime="20201112 12:26:07.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.317" endtime="20201112 12:26:07.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.950" endtime="20201112 12:26:07.343"></status>
</kw>
<msg timestamp="20201112 12:26:07.343" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.351" endtime="20201112 12:26:07.367"></status>
</kw>
<msg timestamp="20201112 12:26:07.367" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.349" endtime="20201112 12:26:07.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.370" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.368" endtime="20201112 12:26:07.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.371" endtime="20201112 12:26:07.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.347" endtime="20201112 12:26:07.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.345" endtime="20201112 12:26:07.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.380" endtime="20201112 12:26:07.664"></status>
</kw>
<msg timestamp="20201112 12:26:07.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020823472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020827931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.378" endtime="20201112 12:26:07.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020823472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020827931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.668" endtime="20201112 12:26:07.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.676" endtime="20201112 12:26:07.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.375" endtime="20201112 12:26:07.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.374" endtime="20201112 12:26:07.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:07.683" level="INFO">${RESULT} = [{'time': 0.020827931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.459000000001795e-06, 'source_diff': 4.459000000001795e-06}, {'time': 0.020838931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:07.679" endtime="20201112 12:26:07.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:07.696" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:07.684" endtime="20201112 12:26:07.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.700" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:07.699" endtime="20201112 12:26:07.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.703" level="INFO">VALUE: [4.459000000001795e-06, 4.473000000001365e-06, 4.471999999998422e-06, 4.443999999999282e-06, 4.445000000002225e-06, 4.458000000002321e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.457999999998852e-06, 4.4999999999975615e-06, 4.443999999999282e-06, 4.431000000002655e-06, 4.443999999999282e-06, 4.375000000000906e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.458000000002321e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.430000000003181e-06, 4.445000000002225e-06, 4.457999999998852e-06, 4.430999999999186e-06, 4.458999999998325e-06, 4.458999999998325e-06, 4.445000000002225e-06, 4.485999999997992e-06, 4.443999999999282e-06, 4.471999999998422e-06, 4.403000000000046e-06, 4.472000000001891e-06, 4.443999999999282e-06, 4.486000000001461e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.431000000002655e-06, 4.417000000003085e-06, 4.417000000003085e-06, 4.485999999997992e-06, 4.458000000002321e-06, 4.443999999999282e-06, 4.444000000002751e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.458000000002321e-06, 4.459000000001795e-06]</msg>
<status status="PASS" starttime="20201112 12:26:07.701" endtime="20201112 12:26:07.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.697" endtime="20201112 12:26:07.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.706" endtime="20201112 12:26:07.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:07.710" endtime="20201112 12:26:07.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.708" endtime="20201112 12:26:07.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.705" endtime="20201112 12:26:07.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.344" endtime="20201112 12:26:07.730"></status>
</kw>
<msg timestamp="20201112 12:26:07.731" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.738" endtime="20201112 12:26:07.753"></status>
</kw>
<msg timestamp="20201112 12:26:07.754" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.737" endtime="20201112 12:26:07.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.757" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.755" endtime="20201112 12:26:07.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.758" endtime="20201112 12:26:07.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.734" endtime="20201112 12:26:07.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.732" endtime="20201112 12:26:07.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.767" endtime="20201112 12:26:08.053"></status>
</kw>
<msg timestamp="20201112 12:26:08.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020083986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.765" endtime="20201112 12:26:08.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020083986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.057" endtime="20201112 12:26:08.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.066" endtime="20201112 12:26:08.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.762" endtime="20201112 12:26:08.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.761" endtime="20201112 12:26:08.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.072" level="INFO">${RESULT} = [{'time': 0.020088431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.020099806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:08.069" endtime="20201112 12:26:08.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.086" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:08.073" endtime="20201112 12:26:08.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.090" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:08.089" endtime="20201112 12:26:08.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.092" level="INFO">VALUE: [4.4449999999987555e-06, 4.445000000002225e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.471999999998422e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.485999999997992e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.459000000001795e-06, 4.416999999999616e-06, 4.445000000002225e-06, 4.430999999999186e-06, 4.430000000003181e-06, 4.457999999998852e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.472000000001891e-06, 4.445000000002225e-06, 4.457999999998852e-06, 4.458000000002321e-06, 4.445000000002225e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.514000000000601e-06, 4.431000000002655e-06, 4.431000000002655e-06, 4.430999999999186e-06, 4.458000000002321e-06, 4.459000000001795e-06, 4.445000000002225e-06, 4.416000000000142e-06, 4.459000000001795e-06, 4.457999999998852e-06]</msg>
<status status="PASS" starttime="20201112 12:26:08.091" endtime="20201112 12:26:08.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.087" endtime="20201112 12:26:08.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.096" endtime="20201112 12:26:08.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.099" endtime="20201112 12:26:08.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.098" endtime="20201112 12:26:08.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.094" endtime="20201112 12:26:08.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.731" endtime="20201112 12:26:08.120"></status>
</kw>
<msg timestamp="20201112 12:26:08.120" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.128" endtime="20201112 12:26:08.146"></status>
</kw>
<msg timestamp="20201112 12:26:08.146" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.126" endtime="20201112 12:26:08.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.149" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.147" endtime="20201112 12:26:08.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.150" endtime="20201112 12:26:08.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.124" endtime="20201112 12:26:08.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.122" endtime="20201112 12:26:08.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.159" endtime="20201112 12:26:08.447"></status>
</kw>
<msg timestamp="20201112 12:26:08.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.157" endtime="20201112 12:26:08.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.451" endtime="20201112 12:26:08.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.460" endtime="20201112 12:26:08.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.155" endtime="20201112 12:26:08.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.153" endtime="20201112 12:26:08.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.466" level="INFO">${RESULT} = [{'time': 0.022304847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.022317014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:08.463" endtime="20201112 12:26:08.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.479" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:08.467" endtime="20201112 12:26:08.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.484" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:08.483" endtime="20201112 12:26:08.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.486" level="INFO">VALUE: [4.4999999999975615e-06, 4.457999999998852e-06, 4.458999999998325e-06, 4.471999999998422e-06, 4.457999999998852e-06, 4.458000000002321e-06, 4.416999999999616e-06, 4.445000000002225e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.444000000002751e-06, 4.443999999999282e-06, 4.457999999998852e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.443999999999282e-06, 4.500000000001031e-06, 4.443999999999282e-06, 4.500000000001031e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.444000000002751e-06, 4.416000000000142e-06, 4.457999999998852e-06, 4.416999999999616e-06, 4.472999999997895e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.444000000002751e-06, 4.443999999999282e-06, 4.402000000000572e-06, 4.458999999998325e-06, 4.429999999999712e-06, 4.471999999998422e-06, 4.457999999998852e-06, 4.458000000002321e-06, 4.458000000002321e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201112 12:26:08.485" endtime="20201112 12:26:08.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.480" endtime="20201112 12:26:08.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.490" endtime="20201112 12:26:08.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.493" endtime="20201112 12:26:08.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.492" endtime="20201112 12:26:08.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.488" endtime="20201112 12:26:08.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.121" endtime="20201112 12:26:08.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.631" endtime="20201112 12:26:08.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.522" endtime="20201112 12:26:08.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.520" endtime="20201112 12:26:08.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.519" endtime="20201112 12:26:08.543"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:00.547" endtime="20201112 12:26:08.543" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.552" endtime="20201112 12:26:08.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.550" endtime="20201112 12:26:08.572"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.585" endtime="20201112 12:26:08.603"></status>
</kw>
<msg timestamp="20201112 12:26:08.604" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.583" endtime="20201112 12:26:08.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.606" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.605" endtime="20201112 12:26:08.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.609" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:08.607" endtime="20201112 12:26:08.610"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:08.581" endtime="20201112 12:26:08.610"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:08.578" endtime="20201112 12:26:08.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.577" endtime="20201112 12:26:08.611"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:08.615" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:08.614" endtime="20201112 12:26:08.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.612" endtime="20201112 12:26:08.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.576" endtime="20201112 12:26:08.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.575" endtime="20201112 12:26:08.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.617" endtime="20201112 12:26:08.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.574" endtime="20201112 12:26:08.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.572" endtime="20201112 12:26:08.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.549" endtime="20201112 12:26:08.619"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.629" endtime="20201112 12:26:08.649"></status>
</kw>
<msg timestamp="20201112 12:26:08.649" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.627" endtime="20201112 12:26:08.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.652" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.650" endtime="20201112 12:26:08.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.653" endtime="20201112 12:26:08.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.624" endtime="20201112 12:26:08.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.622" endtime="20201112 12:26:08.656"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.658" endtime="20201112 12:26:08.659"></status>
</kw>
<msg timestamp="20201112 12:26:08.660" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:08.657" endtime="20201112 12:26:08.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.664" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:08.663" endtime="20201112 12:26:08.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.666" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:08.665" endtime="20201112 12:26:08.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.661" endtime="20201112 12:26:08.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.671" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:08.670" endtime="20201112 12:26:08.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.673" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:08.672" endtime="20201112 12:26:08.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.667" endtime="20201112 12:26:08.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.680" endtime="20201112 12:26:08.968"></status>
</kw>
<msg timestamp="20201112 12:26:08.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068205528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068214292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.679" endtime="20201112 12:26:08.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068205528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068214292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.972" endtime="20201112 12:26:08.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.980" endtime="20201112 12:26:08.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.676" endtime="20201112 12:26:08.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.674" endtime="20201112 12:26:08.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.987" level="INFO">${RESULT} = [{'time': 0.068214292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999994443e-06, 'source_diff': 8.763999999994443e-06}, {'time': 0.068232917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:08.984" endtime="20201112 12:26:08.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:09.000" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:08.988" endtime="20201112 12:26:09.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.005" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:09.004" endtime="20201112 12:26:09.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.008" level="INFO">VALUE: [8.763999999994443e-06, 8.973000000009335e-06, 8.916999999997177e-06, 8.943999999996843e-06, 8.943999999996843e-06, 8.943999999996843e-06, 8.930999999989808e-06, 8.971999999995983e-06, 8.930000000004212e-06, 8.931000000003686e-06, 8.944999999996317e-06, 8.958999999988948e-06, 8.944999999996317e-06, 8.945000000010195e-06, 8.944999999996317e-06, 9.027999999994263e-06, 8.972000000009861e-06, 8.944999999996317e-06, 8.958000000003352e-06, 8.958999999988948e-06, 8.944999999996317e-06, 8.958000000003352e-06, 8.943999999996843e-06, 8.971999999995983e-06, 8.971999999995983e-06, 8.931000000003686e-06, 8.931000000003686e-06, 8.917000000011055e-06, 8.916999999997177e-06, 8.985999999988614e-06, 8.943999999996843e-06, 8.958999999988948e-06, 8.916999999997177e-06, 8.931000000003686e-06, 8.860999999998898e-06, 8.986000000002492e-06, 8.957999999989474e-06, 8.986000000002492e-06, 8.958000000003352e-06, 8.943999999996843e-06, 9.02800000000814e-06, 8.958000000003352e-06, 8.958000000003352e-06, 8.944999999996317e-06, 8.971999999995983e-06, 8.944999999996317e-06, 8.971999999995983e-06, 8.930000000004212e-06, 8.958000000003352e-06, 8.915999999997704e-06]</msg>
<status status="PASS" starttime="20201112 12:26:09.006" endtime="20201112 12:26:09.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.001" endtime="20201112 12:26:09.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.011" endtime="20201112 12:26:09.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.014" endtime="20201112 12:26:09.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.013" endtime="20201112 12:26:09.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.009" endtime="20201112 12:26:09.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.620" endtime="20201112 12:26:09.035"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:08.546" endtime="20201112 12:26:09.036" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.044" endtime="20201112 12:26:09.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.043" endtime="20201112 12:26:09.065"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.078" endtime="20201112 12:26:09.098"></status>
</kw>
<msg timestamp="20201112 12:26:09.098" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.076" endtime="20201112 12:26:09.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.101" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.100" endtime="20201112 12:26:09.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.104" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:09.102" endtime="20201112 12:26:09.104"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:09.073" endtime="20201112 12:26:09.105"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:09.071" endtime="20201112 12:26:09.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.070" endtime="20201112 12:26:09.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:09.109" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:09.109" endtime="20201112 12:26:09.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.107" endtime="20201112 12:26:09.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.069" endtime="20201112 12:26:09.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.068" endtime="20201112 12:26:09.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.111" endtime="20201112 12:26:09.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.067" endtime="20201112 12:26:09.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.065" endtime="20201112 12:26:09.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.041" endtime="20201112 12:26:09.114"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.124" endtime="20201112 12:26:09.221"></status>
</kw>
<msg timestamp="20201112 12:26:09.222" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.122" endtime="20201112 12:26:09.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.224" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.223" endtime="20201112 12:26:09.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.225" endtime="20201112 12:26:09.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.120" endtime="20201112 12:26:09.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.117" endtime="20201112 12:26:09.228"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.230" endtime="20201112 12:26:09.232"></status>
</kw>
<msg timestamp="20201112 12:26:09.232" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:09.229" endtime="20201112 12:26:09.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.236" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:09.235" endtime="20201112 12:26:09.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.238" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:09.237" endtime="20201112 12:26:09.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.233" endtime="20201112 12:26:09.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.243" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:09.242" endtime="20201112 12:26:09.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.245" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:09.244" endtime="20201112 12:26:09.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.240" endtime="20201112 12:26:09.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.252" endtime="20201112 12:26:09.546"></status>
</kw>
<msg timestamp="20201112 12:26:09.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074205028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074254583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.251" endtime="20201112 12:26:09.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074205028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074254583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.550" endtime="20201112 12:26:09.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.558" endtime="20201112 12:26:09.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.248" endtime="20201112 12:26:09.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.247" endtime="20201112 12:26:09.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:09.565" level="INFO">${RESULT} = [{'time': 0.074254583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.95549999999928e-05, 'source_diff': 4.95549999999928e-05}, {'time': 0.075737931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:09.562" endtime="20201112 12:26:09.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:09.578" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:09.566" endtime="20201112 12:26:09.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.583" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:09.582" endtime="20201112 12:26:09.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.586" level="INFO">VALUE: [4.95549999999928e-05, 4.9487000000000836e-05, 4.944499999999519e-05, 4.957000000001266e-05, 4.952699999999366e-05, 4.958300000000582e-05, 4.951300000000103e-05, 4.952699999999366e-05, 4.9471999999994853e-05, 4.954199999999964e-05, 4.9487000000000836e-05, 4.954100000000017e-05, 4.955600000000615e-05, 4.9487000000000836e-05, 4.954199999999964e-05, 4.956999999999878e-05, 4.958400000000529e-05, 4.948600000000136e-05, 4.949999999999399e-05, 4.955600000000615e-05, 4.949999999999399e-05, 4.954199999999964e-05, 4.9457999999988345e-05, 4.952799999999313e-05, 4.959699999999845e-05, 4.958399999999141e-05, 4.952799999999313e-05, 4.955600000000615e-05, 4.947299999999433e-05, 4.956899999999931e-05, 4.959799999999792e-05, 4.952799999999313e-05, 4.950000000000787e-05, 4.956999999999878e-05, 4.955600000000615e-05, 4.956899999999931e-05, 4.956899999999931e-05, 4.958399999999141e-05, 4.955499999997892e-05, 4.950000000000787e-05, 4.944400000000959e-05, 4.944400000000959e-05, 4.95980000000118e-05, 4.962499999999759e-05, 4.9597000000012326e-05, 4.955500000000668e-05, 4.956899999999931e-05, 4.95140000000005e-05, 4.9499999999980115e-05, 4.9485999999987484e-05]</msg>
<status status="PASS" starttime="20201112 12:26:09.584" endtime="20201112 12:26:09.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.579" endtime="20201112 12:26:09.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.589" endtime="20201112 12:26:09.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.592" endtime="20201112 12:26:09.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.591" endtime="20201112 12:26:09.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.587" endtime="20201112 12:26:09.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.115" endtime="20201112 12:26:09.613"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:09.038" endtime="20201112 12:26:09.614" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.622" endtime="20201112 12:26:09.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.621" endtime="20201112 12:26:09.642"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.656" endtime="20201112 12:26:09.674"></status>
</kw>
<msg timestamp="20201112 12:26:09.675" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.654" endtime="20201112 12:26:09.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.677" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.676" endtime="20201112 12:26:09.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.680" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:09.678" endtime="20201112 12:26:09.681"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:09.651" endtime="20201112 12:26:09.681"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:09.649" endtime="20201112 12:26:09.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.647" endtime="20201112 12:26:09.682"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:09.686" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:09.685" endtime="20201112 12:26:09.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.683" endtime="20201112 12:26:09.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.647" endtime="20201112 12:26:09.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.646" endtime="20201112 12:26:09.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.687" endtime="20201112 12:26:09.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.645" endtime="20201112 12:26:09.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.643" endtime="20201112 12:26:09.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.619" endtime="20201112 12:26:09.691"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.700" endtime="20201112 12:26:09.985"></status>
</kw>
<msg timestamp="20201112 12:26:09.986" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.698" endtime="20201112 12:26:09.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.988" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.987" endtime="20201112 12:26:09.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.989" endtime="20201112 12:26:09.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.696" endtime="20201112 12:26:09.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.694" endtime="20201112 12:26:09.992"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.994" endtime="20201112 12:26:09.996"></status>
</kw>
<msg timestamp="20201112 12:26:09.996" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:09.993" endtime="20201112 12:26:09.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.000" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:09.999" endtime="20201112 12:26:10.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.002" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:10.001" endtime="20201112 12:26:10.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.997" endtime="20201112 12:26:10.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.007" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:10.006" endtime="20201112 12:26:10.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.009" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:10.008" endtime="20201112 12:26:10.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.004" endtime="20201112 12:26:10.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.016" endtime="20201112 12:26:10.323"></status>
</kw>
<msg timestamp="20201112 12:26:10.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077632861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077725083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.015" endtime="20201112 12:26:10.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077632861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077725083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.331" endtime="20201112 12:26:10.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.349" endtime="20201112 12:26:10.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.012" endtime="20201112 12:26:10.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.011" endtime="20201112 12:26:10.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.358" level="INFO">${RESULT} = [{'time': 0.077725083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.222200000000291e-05, 'source_diff': 9.222200000000291e-05}, {'time': 0.082936181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:10.354" endtime="20201112 12:26:10.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:10.371" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:10.359" endtime="20201112 12:26:10.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.376" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:10.375" endtime="20201112 12:26:10.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.379" level="INFO">VALUE: [9.222200000000291e-05, 9.145900000000207e-05, 9.159699999999882e-05, 9.152800000000738e-05, 9.154200000000001e-05, 9.158399999999178e-05, 9.159699999999882e-05, 9.148600000000173e-05, 9.159699999999882e-05, 9.149999999999436e-05, 9.149999999999436e-05, 9.148600000000173e-05, 9.1513999999987e-05, 9.151300000001528e-05, 9.155599999999264e-05, 9.152800000000738e-05, 9.154200000000001e-05, 9.158300000000619e-05, 9.152799999997963e-05, 9.16110000000192e-05, 9.154200000000001e-05, 9.149999999999436e-05, 9.156900000001356e-05, 9.161099999999145e-05, 9.157000000001303e-05, 9.156900000001356e-05, 9.156900000001356e-05, 9.158300000000619e-05, 9.158299999997843e-05, 9.149999999999436e-05, 9.155500000002093e-05, 9.147300000000858e-05, 9.1513999999987e-05, 9.163900000003222e-05, 9.144399999999608e-05, 9.152699999998015e-05, 9.155500000002093e-05, 9.156900000001356e-05, 9.144399999999608e-05, 9.152800000000738e-05, 9.144399999999608e-05, 9.157000000004079e-05, 9.158400000003342e-05, 9.145800000004423e-05, 9.147200000003686e-05, 9.147199999998135e-05, 9.151399999995924e-05, 9.145799999998871e-05, 9.152800000000738e-05, 9.151399999995924e-05]</msg>
<status status="PASS" starttime="20201112 12:26:10.377" endtime="20201112 12:26:10.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.372" endtime="20201112 12:26:10.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.382" endtime="20201112 12:26:10.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.385" endtime="20201112 12:26:10.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.384" endtime="20201112 12:26:10.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.380" endtime="20201112 12:26:10.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.692" endtime="20201112 12:26:10.406"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:09.616" endtime="20201112 12:26:10.407" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.415" endtime="20201112 12:26:10.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.413" endtime="20201112 12:26:10.435"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.449" endtime="20201112 12:26:10.472"></status>
</kw>
<msg timestamp="20201112 12:26:10.472" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.448" endtime="20201112 12:26:10.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.475" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.473" endtime="20201112 12:26:10.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.478" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:10.476" endtime="20201112 12:26:10.478"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:10.444" endtime="20201112 12:26:10.479"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:10.442" endtime="20201112 12:26:10.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.440" endtime="20201112 12:26:10.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:10.483" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:10.482" endtime="20201112 12:26:10.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.480" endtime="20201112 12:26:10.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.440" endtime="20201112 12:26:10.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.439" endtime="20201112 12:26:10.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.485" endtime="20201112 12:26:10.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.438" endtime="20201112 12:26:10.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.436" endtime="20201112 12:26:10.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.412" endtime="20201112 12:26:10.488"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.497" endtime="20201112 12:26:10.518"></status>
</kw>
<msg timestamp="20201112 12:26:10.518" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.496" endtime="20201112 12:26:10.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.521" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.519" endtime="20201112 12:26:10.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.522" endtime="20201112 12:26:10.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.493" endtime="20201112 12:26:10.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.491" endtime="20201112 12:26:10.525"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.527" endtime="20201112 12:26:10.528"></status>
</kw>
<msg timestamp="20201112 12:26:10.529" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:10.525" endtime="20201112 12:26:10.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.533" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:10.532" endtime="20201112 12:26:10.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.535" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:10.534" endtime="20201112 12:26:10.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.530" endtime="20201112 12:26:10.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.540" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:10.539" endtime="20201112 12:26:10.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.542" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:10.541" endtime="20201112 12:26:10.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.536" endtime="20201112 12:26:10.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.552" endtime="20201112 12:26:10.838"></status>
</kw>
<msg timestamp="20201112 12:26:10.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073977486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0739795, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:10.548" endtime="20201112 12:26:10.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073977486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0739795, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:10.842" endtime="20201112 12:26:10.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.850" endtime="20201112 12:26:10.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.545" endtime="20201112 12:26:10.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.543" endtime="20201112 12:26:10.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.864" level="INFO">${RESULT} = [{'time': 0.0739795, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.014000000008509e-06, 'source_diff': 2.014000000008509e-06}, {'time': 0.073995764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:10.860" endtime="20201112 12:26:10.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:10.877" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:10.865" endtime="20201112 12:26:10.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.881" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:10.880" endtime="20201112 12:26:10.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.884" level="INFO">VALUE: [2.014000000008509e-06, 2.05600000000028e-06, 1.9720000000028604e-06, 1.9580000000102293e-06, 2.013999999994631e-06, 2.097000000006455e-06, 2.0270000000016664e-06, 1.986000000009369e-06, 2.014000000008509e-06, 2.014000000008509e-06, 2.013999999994631e-06, 1.9859999999954914e-06, 2.02800000000114e-06, 2.042000000007649e-06, 2.013999999994631e-06, 2.096999999992577e-06, 2.013999999994631e-06, 2.05600000000028e-06, 2.014000000008509e-06, 2.014000000008509e-06, 2.014000000008509e-06, 2.013999999994631e-06, 1.9579999999963515e-06, 2.013999999994631e-06, 2.014000000008509e-06, 2.013999999994631e-06, 2.02800000000114e-06, 1.9859999999954914e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.014000000008509e-06, 2.0129999999951576e-06, 2.000000000002e-06, 1.9859999999954914e-06, 2.013999999994631e-06, 2.013999999994631e-06, 2.014000000008509e-06, 2.041999999993771e-06, 2.013999999994631e-06, 2.069000000007315e-06, 2.013999999994631e-06, 2.055000000000806e-06, 2.0129999999951576e-06, 2.013999999994631e-06, 2.013999999994631e-06, 1.9999999999881224e-06, 2.013999999994631e-06, 1.9999999999881224e-06]</msg>
<status status="PASS" starttime="20201112 12:26:10.883" endtime="20201112 12:26:10.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.878" endtime="20201112 12:26:10.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.887" endtime="20201112 12:26:10.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.890" endtime="20201112 12:26:10.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.889" endtime="20201112 12:26:10.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.885" endtime="20201112 12:26:10.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.489" endtime="20201112 12:26:10.911"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:10.409" endtime="20201112 12:26:10.912" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.921" endtime="20201112 12:26:10.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.919" endtime="20201112 12:26:10.941"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.954" endtime="20201112 12:26:10.974"></status>
</kw>
<msg timestamp="20201112 12:26:10.975" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.953" endtime="20201112 12:26:10.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.977" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.976" endtime="20201112 12:26:10.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.980" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:10.978" endtime="20201112 12:26:10.981"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:10.949" endtime="20201112 12:26:10.981"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:10.947" endtime="20201112 12:26:10.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.946" endtime="20201112 12:26:10.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:10.986" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:10.986" endtime="20201112 12:26:10.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.983" endtime="20201112 12:26:10.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.945" endtime="20201112 12:26:10.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.944" endtime="20201112 12:26:10.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.988" endtime="20201112 12:26:10.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.943" endtime="20201112 12:26:10.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.941" endtime="20201112 12:26:10.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.917" endtime="20201112 12:26:10.991"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.000" endtime="20201112 12:26:11.096"></status>
</kw>
<msg timestamp="20201112 12:26:11.096" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.998" endtime="20201112 12:26:11.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.099" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.097" endtime="20201112 12:26:11.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.100" endtime="20201112 12:26:11.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.996" endtime="20201112 12:26:11.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.994" endtime="20201112 12:26:11.102"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.104" endtime="20201112 12:26:11.106"></status>
</kw>
<msg timestamp="20201112 12:26:11.106" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:11.103" endtime="20201112 12:26:11.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.110" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:11.109" endtime="20201112 12:26:11.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.112" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:11.111" endtime="20201112 12:26:11.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.107" endtime="20201112 12:26:11.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.117" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:11.116" endtime="20201112 12:26:11.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.119" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:11.118" endtime="20201112 12:26:11.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.114" endtime="20201112 12:26:11.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.126" endtime="20201112 12:26:11.420"></status>
</kw>
<msg timestamp="20201112 12:26:11.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072431056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072443306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.125" endtime="20201112 12:26:11.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072431056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072443306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.424" endtime="20201112 12:26:11.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.432" endtime="20201112 12:26:11.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.122" endtime="20201112 12:26:11.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.121" endtime="20201112 12:26:11.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:11.439" level="INFO">${RESULT} = [{'time': 0.072443306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2250000000005312e-05, 'source_diff': 1.2250000000005312e-05}, {'time': 0.073935653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:11.436" endtime="20201112 12:26:11.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:11.452" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:11.440" endtime="20201112 12:26:11.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.457" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:11.456" endtime="20201112 12:26:11.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.460" level="INFO">VALUE: [1.2250000000005312e-05, 1.2263999999997943e-05, 1.2235999999998803e-05, 1.2249999999991434e-05, 1.2250000000005312e-05, 1.2221999999992295e-05, 1.2249999999991434e-05, 1.2250000000005312e-05, 1.2263999999997943e-05, 1.2249999999991434e-05, 1.2249999999991434e-05, 1.2236999999998277e-05, 1.2221999999992295e-05, 1.2221999999992295e-05, 1.2277999999990574e-05, 1.2250000000005312e-05, 1.2277000000004978e-05, 1.2235999999998803e-05, 1.2250000000005312e-05, 1.2278000000004452e-05, 1.2291999999997083e-05, 1.2250000000005312e-05, 1.2249999999991434e-05, 1.2263999999997943e-05, 1.22769999999911e-05, 1.2249999999991434e-05, 1.2223000000005646e-05, 1.2235999999998803e-05, 1.2306000000003592e-05, 1.2263999999997943e-05, 1.2333999999988854e-05, 1.2249999999991434e-05, 1.2249999999991434e-05, 1.226299999999847e-05, 1.2249999999991434e-05, 1.2222000000006172e-05, 1.2263999999984065e-05, 1.2235999999998803e-05, 1.2235999999998803e-05, 1.2264000000011821e-05, 1.2235999999998803e-05, 1.2222000000006172e-05, 1.2221999999978417e-05, 1.2221999999978417e-05, 1.2249999999991434e-05, 1.2249999999991434e-05, 1.2249999999991434e-05, 1.2249999999991434e-05, 1.2236999999998277e-05, 1.2249999999991434e-05]</msg>
<status status="PASS" starttime="20201112 12:26:11.458" endtime="20201112 12:26:11.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.453" endtime="20201112 12:26:11.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.463" endtime="20201112 12:26:11.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.466" endtime="20201112 12:26:11.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.465" endtime="20201112 12:26:11.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.461" endtime="20201112 12:26:11.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.992" endtime="20201112 12:26:11.487"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:10.915" endtime="20201112 12:26:11.488" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.496" endtime="20201112 12:26:11.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.495" endtime="20201112 12:26:11.516"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.530" endtime="20201112 12:26:11.551"></status>
</kw>
<msg timestamp="20201112 12:26:11.551" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.528" endtime="20201112 12:26:11.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.554" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.552" endtime="20201112 12:26:11.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.557" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:11.555" endtime="20201112 12:26:11.558"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:11.525" endtime="20201112 12:26:11.558"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:11.522" endtime="20201112 12:26:11.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.521" endtime="20201112 12:26:11.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:11.563" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:11.562" endtime="20201112 12:26:11.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.560" endtime="20201112 12:26:11.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.520" endtime="20201112 12:26:11.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.520" endtime="20201112 12:26:11.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.565" endtime="20201112 12:26:11.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.518" endtime="20201112 12:26:11.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.517" endtime="20201112 12:26:11.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.493" endtime="20201112 12:26:11.567"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.577" endtime="20201112 12:26:11.864"></status>
</kw>
<msg timestamp="20201112 12:26:11.866" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.575" endtime="20201112 12:26:11.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.871" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.868" endtime="20201112 12:26:11.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.873" endtime="20201112 12:26:11.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.572" endtime="20201112 12:26:11.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.570" endtime="20201112 12:26:11.879"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.884" endtime="20201112 12:26:11.887"></status>
</kw>
<msg timestamp="20201112 12:26:11.888" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:11.880" endtime="20201112 12:26:11.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.896" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:11.894" endtime="20201112 12:26:11.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.901" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:11.899" endtime="20201112 12:26:11.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.890" endtime="20201112 12:26:11.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.912" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:11.909" endtime="20201112 12:26:11.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.917" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:11.915" endtime="20201112 12:26:11.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.904" endtime="20201112 12:26:11.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.932" endtime="20201112 12:26:12.232"></status>
</kw>
<msg timestamp="20201112 12:26:12.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078057736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078080347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.929" endtime="20201112 12:26:12.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078057736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078080347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.237" endtime="20201112 12:26:12.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.245" endtime="20201112 12:26:12.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.923" endtime="20201112 12:26:12.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.920" endtime="20201112 12:26:12.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:12.251" level="INFO">${RESULT} = [{'time': 0.078080347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2610999999991832e-05, 'source_diff': 2.2610999999991832e-05}, {'time': 0.083315014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:12.248" endtime="20201112 12:26:12.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:12.264" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:12.252" endtime="20201112 12:26:12.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.269" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:12.268" endtime="20201112 12:26:12.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.272" level="INFO">VALUE: [2.2610999999991832e-05, 2.262500000001222e-05, 2.263900000000485e-05, 2.265299999999748e-05, 2.2651999999998007e-05, 2.25969999999992e-05, 2.265300000001136e-05, 2.2583999999992166e-05, 2.25969999999992e-05, 2.262499999999834e-05, 2.265300000001136e-05, 2.2638999999990972e-05, 2.265300000001136e-05, 2.265300000001136e-05, 2.261100000000571e-05, 2.2582999999992692e-05, 2.2542000000014273e-05, 2.2639000000018727e-05, 2.270799999998241e-05, 2.2666000000004516e-05, 2.259700000001308e-05, 2.259700000001308e-05, 2.265300000001136e-05, 2.265300000001136e-05, 2.261100000000571e-05, 2.259700000001308e-05, 2.2666000000004516e-05, 2.2610999999977954e-05, 2.2652000000011885e-05, 2.2652999999983603e-05, 2.265300000001136e-05, 2.269499999998925e-05, 2.2542000000014273e-05, 2.2652999999983603e-05, 2.2556000000006904e-05, 2.261100000000571e-05, 2.261100000000571e-05, 2.2652999999983603e-05, 2.2556000000006904e-05, 2.2652999999983603e-05, 2.2695000000017007e-05, 2.259700000001308e-05, 2.2638999999990972e-05, 2.2667000000031745e-05, 2.2638999999990972e-05, 2.2652999999983603e-05, 2.26109999999502e-05, 2.2638999999990972e-05, 2.262499999999834e-05, 2.2652999999983603e-05]</msg>
<status status="PASS" starttime="20201112 12:26:12.270" endtime="20201112 12:26:12.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.265" endtime="20201112 12:26:12.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.275" endtime="20201112 12:26:12.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.278" endtime="20201112 12:26:12.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.277" endtime="20201112 12:26:12.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.273" endtime="20201112 12:26:12.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.568" endtime="20201112 12:26:12.299"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:11.490" endtime="20201112 12:26:12.300" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:25:48.326" endtime="20201112 12:26:12.308"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.375" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:26:12.383" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:13.556" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:26:12.374" endtime="20201112 12:26:13.558"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.563" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:13.560" endtime="20201112 12:26:13.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.372" endtime="20201112 12:26:13.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:13.569" endtime="20201112 12:26:13.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.566" endtime="20201112 12:26:13.806"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.819" endtime="20201112 12:26:13.839"></status>
</kw>
<msg timestamp="20201112 12:26:13.839" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['OT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.818" endtime="20201112 12:26:13.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.842" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['OT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.840" endtime="20201112 12:26:13.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.845" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:13.843" endtime="20201112 12:26:13.845"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:13.815" endtime="20201112 12:26:13.846"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:13.813" endtime="20201112 12:26:13.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.811" endtime="20201112 12:26:13.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:13.852" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:13.850" endtime="20201112 12:26:13.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.848" endtime="20201112 12:26:13.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.810" endtime="20201112 12:26:13.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.810" endtime="20201112 12:26:13.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.854" endtime="20201112 12:26:13.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.808" endtime="20201112 12:26:13.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.857" endtime="20201112 12:26:13.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.807" endtime="20201112 12:26:13.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.371" endtime="20201112 12:26:13.860"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:13.866" endtime="20201112 12:26:13.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.864" endtime="20201112 12:26:13.886"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.899" endtime="20201112 12:26:13.918"></status>
</kw>
<msg timestamp="20201112 12:26:13.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.898" endtime="20201112 12:26:13.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.921" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.920" endtime="20201112 12:26:13.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.925" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:13.923" endtime="20201112 12:26:13.925"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:13.895" endtime="20201112 12:26:13.926"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:13.893" endtime="20201112 12:26:13.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.891" endtime="20201112 12:26:13.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:13.931" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:13.930" endtime="20201112 12:26:13.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.927" endtime="20201112 12:26:13.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.890" endtime="20201112 12:26:13.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.890" endtime="20201112 12:26:13.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.932" endtime="20201112 12:26:13.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.889" endtime="20201112 12:26:13.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.887" endtime="20201112 12:26:13.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.863" endtime="20201112 12:26:13.935"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.946" endtime="20201112 12:26:13.964"></status>
</kw>
<msg timestamp="20201112 12:26:13.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.945" endtime="20201112 12:26:13.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.965" endtime="20201112 12:26:13.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.968" endtime="20201112 12:26:13.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.941" endtime="20201112 12:26:13.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.939" endtime="20201112 12:26:13.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.977" endtime="20201112 12:26:14.268"></status>
</kw>
<msg timestamp="20201112 12:26:14.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074050125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074056403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:13.976" endtime="20201112 12:26:14.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074050125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074056403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.272" endtime="20201112 12:26:14.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.280" endtime="20201112 12:26:14.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.973" endtime="20201112 12:26:14.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.971" endtime="20201112 12:26:14.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:14.287" level="INFO">${RESULT} = [{'time': 0.074056403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.278000000012329e-06, 'source_diff': 6.278000000012329e-06}, {'time': 0.074072333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:14.284" endtime="20201112 12:26:14.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:14.301" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:14.288" endtime="20201112 12:26:14.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.305" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:26:14.304" endtime="20201112 12:26:14.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.308" level="INFO">VALUE: [6.278000000012329e-06, 6.222000000000172e-06, 6.208999999993137e-06, 6.208999999993137e-06, 6.180999999993997e-06, 6.193999999987154e-06, 6.235999999992803e-06, 6.249999999999312e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.124999999995717e-06, 6.180999999993997e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.208999999993137e-06, 6.236000000006681e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.208000000007541e-06, 6.208999999993137e-06, 6.207999999993663e-06, 6.208000000007541e-06, 6.236000000006681e-06, 6.111000000003086e-06, 6.194000000001032e-06, 6.180000000008401e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999992803e-06, 6.236000000006681e-06, 6.276999999998978e-06, 6.236000000006681e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.208000000007541e-06, 6.195000000000506e-06, 6.208000000007541e-06, 6.235999999992803e-06, 6.222000000000172e-06, 6.236000000006681e-06, 6.2229999999996455e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.236000000006681e-06, 6.236000000006681e-06, 6.195000000000506e-06]</msg>
<status status="PASS" starttime="20201112 12:26:14.306" endtime="20201112 12:26:14.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.302" endtime="20201112 12:26:14.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.311" endtime="20201112 12:26:14.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:14.315" endtime="20201112 12:26:14.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.313" endtime="20201112 12:26:14.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.310" endtime="20201112 12:26:14.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.937" endtime="20201112 12:26:14.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.937" endtime="20201112 12:26:14.336"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.344" endtime="20201112 12:26:14.363"></status>
</kw>
<msg timestamp="20201112 12:26:14.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.343" endtime="20201112 12:26:14.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.365" endtime="20201112 12:26:14.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.367" endtime="20201112 12:26:14.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.340" endtime="20201112 12:26:14.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.338" endtime="20201112 12:26:14.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.376" endtime="20201112 12:26:14.663"></status>
</kw>
<msg timestamp="20201112 12:26:14.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.375" endtime="20201112 12:26:14.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.667" endtime="20201112 12:26:14.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.675" endtime="20201112 12:26:14.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.372" endtime="20201112 12:26:14.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.370" endtime="20201112 12:26:14.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:14.682" level="INFO">${RESULT} = [{'time': 0.022298514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.022314167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:14.679" endtime="20201112 12:26:14.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:14.695" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:14.683" endtime="20201112 12:26:14.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.700" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:26:14.699" endtime="20201112 12:26:14.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.702" level="INFO">VALUE: [6.222000000000172e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.236000000003211e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.2079999999971325e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.2079999999971325e-06, 6.235999999999742e-06, 6.221999999996702e-06, 6.278000000001921e-06, 6.222000000000172e-06, 6.263000000002877e-06, 6.236000000003211e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.236000000003211e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.221999999996702e-06, 6.236999999999215e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2779999999984515e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.1389999999987566e-06, 6.2229999999996455e-06, 6.194999999997036e-06, 6.291000000002017e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.236000000003211e-06]</msg>
<status status="PASS" starttime="20201112 12:26:14.701" endtime="20201112 12:26:14.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.696" endtime="20201112 12:26:14.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.706" endtime="20201112 12:26:14.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:14.709" endtime="20201112 12:26:14.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.708" endtime="20201112 12:26:14.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.704" endtime="20201112 12:26:14.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.337" endtime="20201112 12:26:14.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.336" endtime="20201112 12:26:14.730"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.739" endtime="20201112 12:26:14.758"></status>
</kw>
<msg timestamp="20201112 12:26:14.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.737" endtime="20201112 12:26:14.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.760" endtime="20201112 12:26:14.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.762" endtime="20201112 12:26:14.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.735" endtime="20201112 12:26:14.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.733" endtime="20201112 12:26:14.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.772" endtime="20201112 12:26:15.058"></status>
</kw>
<msg timestamp="20201112 12:26:15.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024561361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024567583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.771" endtime="20201112 12:26:15.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024561361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024567583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.062" endtime="20201112 12:26:15.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.070" endtime="20201112 12:26:15.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.768" endtime="20201112 12:26:15.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.766" endtime="20201112 12:26:15.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:15.077" level="INFO">${RESULT} = [{'time': 0.024567583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.024582931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:15.073" endtime="20201112 12:26:15.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:15.090" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:15.078" endtime="20201112 12:26:15.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.095" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:26:15.094" endtime="20201112 12:26:15.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.097" level="INFO">VALUE: [6.222000000000172e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.292000000001491e-06, 6.236999999999215e-06, 6.223000000003115e-06, 6.180000000001462e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.194999999997036e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.223000000003115e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.250000000002781e-06, 6.249999999999312e-06, 6.1939999999975626e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.1529999999983265e-06, 6.2639999999988816e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.2079999999971325e-06, 6.2079999999971325e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.236999999999215e-06, 6.249999999999312e-06, 6.208000000000602e-06]</msg>
<status status="PASS" starttime="20201112 12:26:15.096" endtime="20201112 12:26:15.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.091" endtime="20201112 12:26:15.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.101" endtime="20201112 12:26:15.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.104" endtime="20201112 12:26:15.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.103" endtime="20201112 12:26:15.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.099" endtime="20201112 12:26:15.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.731" endtime="20201112 12:26:15.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.731" endtime="20201112 12:26:15.125"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.134" endtime="20201112 12:26:15.150"></status>
</kw>
<msg timestamp="20201112 12:26:15.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.132" endtime="20201112 12:26:15.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.151" endtime="20201112 12:26:15.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.154" endtime="20201112 12:26:15.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.130" endtime="20201112 12:26:15.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.128" endtime="20201112 12:26:15.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.164" endtime="20201112 12:26:15.449"></status>
</kw>
<msg timestamp="20201112 12:26:15.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021609986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.162" endtime="20201112 12:26:15.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021609986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.453" endtime="20201112 12:26:15.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.461" endtime="20201112 12:26:15.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.160" endtime="20201112 12:26:15.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.158" endtime="20201112 12:26:15.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:15.468" level="INFO">${RESULT} = [{'time': 0.021609986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.021624125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:15.465" endtime="20201112 12:26:15.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:15.482" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:15.469" endtime="20201112 12:26:15.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.487" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:26:15.486" endtime="20201112 12:26:15.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.489" level="INFO">VALUE: [6.305000000001587e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.262999999999408e-06, 6.2639999999988816e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.236999999999215e-06, 6.262999999999408e-06, 6.179999999997993e-06, 6.249999999999312e-06, 6.291000000002017e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.264000000002351e-06, 6.221999999996702e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.264000000002351e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.290999999998548e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.221999999996702e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.264000000002351e-06, 6.235999999999742e-06, 6.1939999999975626e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.236000000003211e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.208000000000602e-06]</msg>
<status status="PASS" starttime="20201112 12:26:15.488" endtime="20201112 12:26:15.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.483" endtime="20201112 12:26:15.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.493" endtime="20201112 12:26:15.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.497" endtime="20201112 12:26:15.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.495" endtime="20201112 12:26:15.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.491" endtime="20201112 12:26:15.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.126" endtime="20201112 12:26:15.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.126" endtime="20201112 12:26:15.517"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.526" endtime="20201112 12:26:15.543"></status>
</kw>
<msg timestamp="20201112 12:26:15.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.524" endtime="20201112 12:26:15.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.545" endtime="20201112 12:26:15.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.547" endtime="20201112 12:26:15.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.522" endtime="20201112 12:26:15.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.520" endtime="20201112 12:26:15.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.557" endtime="20201112 12:26:15.844"></status>
</kw>
<msg timestamp="20201112 12:26:15.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021209431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021215653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.556" endtime="20201112 12:26:15.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021209431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021215653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.849" endtime="20201112 12:26:15.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.857" endtime="20201112 12:26:15.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.553" endtime="20201112 12:26:15.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.551" endtime="20201112 12:26:15.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:15.864" level="INFO">${RESULT} = [{'time': 0.021215653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.021228167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:15.860" endtime="20201112 12:26:15.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:15.877" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:15.865" endtime="20201112 12:26:15.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.882" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:26:15.881" endtime="20201112 12:26:15.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.885" level="INFO">VALUE: [6.222000000000172e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.236000000003211e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.2229999999996455e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.222000000000172e-06, 6.236999999999215e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.1939999999975626e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.221999999996702e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.167000000001366e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.222000000000172e-06]</msg>
<status status="PASS" starttime="20201112 12:26:15.883" endtime="20201112 12:26:15.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.878" endtime="20201112 12:26:15.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.889" endtime="20201112 12:26:15.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.893" endtime="20201112 12:26:15.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.891" endtime="20201112 12:26:15.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.887" endtime="20201112 12:26:15.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.518" endtime="20201112 12:26:15.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.518" endtime="20201112 12:26:15.914"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.922" endtime="20201112 12:26:15.939"></status>
</kw>
<msg timestamp="20201112 12:26:15.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.921" endtime="20201112 12:26:15.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.941" endtime="20201112 12:26:15.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.943" endtime="20201112 12:26:15.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.918" endtime="20201112 12:26:15.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.916" endtime="20201112 12:26:15.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.953" endtime="20201112 12:26:16.237"></status>
</kw>
<msg timestamp="20201112 12:26:16.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.952" endtime="20201112 12:26:16.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.241" endtime="20201112 12:26:16.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.250" endtime="20201112 12:26:16.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.949" endtime="20201112 12:26:16.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.947" endtime="20201112 12:26:16.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:16.256" level="INFO">${RESULT} = [{'time': 0.021770972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.021782681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:16.253" endtime="20201112 12:26:16.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:16.270" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:16.257" endtime="20201112 12:26:16.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.274" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:26:16.273" endtime="20201112 12:26:16.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.277" level="INFO">VALUE: [6.208000000000602e-06, 6.223000000003115e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.1939999999975626e-06, 6.221999999996702e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.250000000002781e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.236000000003211e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.262999999999408e-06, 6.180000000001462e-06, 6.208000000000602e-06, 6.153000000001796e-06, 6.166000000001892e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.237000000002685e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.291999999998021e-06, 6.2079999999971325e-06, 6.264000000002351e-06, 6.2229999999996455e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.264000000002351e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.208000000000602e-06]</msg>
<status status="PASS" starttime="20201112 12:26:16.275" endtime="20201112 12:26:16.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.271" endtime="20201112 12:26:16.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.280" endtime="20201112 12:26:16.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:16.284" endtime="20201112 12:26:16.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.282" endtime="20201112 12:26:16.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.279" endtime="20201112 12:26:16.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.915" endtime="20201112 12:26:16.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.914" endtime="20201112 12:26:16.305"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.313" endtime="20201112 12:26:16.334"></status>
</kw>
<msg timestamp="20201112 12:26:16.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.312" endtime="20201112 12:26:16.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.336" endtime="20201112 12:26:16.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.338" endtime="20201112 12:26:16.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.309" endtime="20201112 12:26:16.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.307" endtime="20201112 12:26:16.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.348" endtime="20201112 12:26:16.633"></status>
</kw>
<msg timestamp="20201112 12:26:16.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.347" endtime="20201112 12:26:16.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.637" endtime="20201112 12:26:16.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.646" endtime="20201112 12:26:16.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.344" endtime="20201112 12:26:16.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.342" endtime="20201112 12:26:16.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:16.652" level="INFO">${RESULT} = [{'time': 0.022750986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.022768417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:16.649" endtime="20201112 12:26:16.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:16.666" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:16.653" endtime="20201112 12:26:16.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.670" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:26:16.669" endtime="20201112 12:26:16.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.673" level="INFO">VALUE: [6.222000000000172e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.250000000002781e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.278000000001921e-06, 6.2639999999988816e-06, 6.208000000000602e-06, 6.236000000003211e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.180000000001462e-06, 6.166000000001892e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.236000000003211e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.264000000002351e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.195000000000506e-06]</msg>
<status status="PASS" starttime="20201112 12:26:16.671" endtime="20201112 12:26:16.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.667" endtime="20201112 12:26:16.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.676" endtime="20201112 12:26:16.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:16.680" endtime="20201112 12:26:16.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.678" endtime="20201112 12:26:16.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.675" endtime="20201112 12:26:16.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.306" endtime="20201112 12:26:16.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.305" endtime="20201112 12:26:16.701"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.709" endtime="20201112 12:26:16.727"></status>
</kw>
<msg timestamp="20201112 12:26:16.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.708" endtime="20201112 12:26:16.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.729" endtime="20201112 12:26:16.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.731" endtime="20201112 12:26:16.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.705" endtime="20201112 12:26:16.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.703" endtime="20201112 12:26:16.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.741" endtime="20201112 12:26:17.026"></status>
</kw>
<msg timestamp="20201112 12:26:17.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023644528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023650778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.740" endtime="20201112 12:26:17.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023644528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023650778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.031" endtime="20201112 12:26:17.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.039" endtime="20201112 12:26:17.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.737" endtime="20201112 12:26:17.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.735" endtime="20201112 12:26:17.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.046" level="INFO">${RESULT} = [{'time': 0.023650778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.023664167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:17.042" endtime="20201112 12:26:17.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:17.060" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:17.047" endtime="20201112 12:26:17.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.065" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:26:17.064" endtime="20201112 12:26:17.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.067" level="INFO">VALUE: [6.249999999999312e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.236999999999215e-06, 6.235999999999742e-06, 6.167000000001366e-06, 6.2229999999996455e-06, 6.2079999999971325e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.221999999996702e-06, 6.208000000000602e-06, 6.2639999999988816e-06, 6.264000000002351e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.208000000000602e-06]</msg>
<status status="PASS" starttime="20201112 12:26:17.066" endtime="20201112 12:26:17.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.061" endtime="20201112 12:26:17.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.071" endtime="20201112 12:26:17.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.074" endtime="20201112 12:26:17.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.073" endtime="20201112 12:26:17.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.069" endtime="20201112 12:26:17.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.702" endtime="20201112 12:26:17.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.701" endtime="20201112 12:26:17.095"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.104" endtime="20201112 12:26:17.119"></status>
</kw>
<msg timestamp="20201112 12:26:17.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.102" endtime="20201112 12:26:17.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.120" endtime="20201112 12:26:17.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.123" endtime="20201112 12:26:17.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.099" endtime="20201112 12:26:17.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.097" endtime="20201112 12:26:17.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.133" endtime="20201112 12:26:17.420"></status>
</kw>
<msg timestamp="20201112 12:26:17.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021174986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021181222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.131" endtime="20201112 12:26:17.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021174986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021181222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.424" endtime="20201112 12:26:17.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.433" endtime="20201112 12:26:17.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.129" endtime="20201112 12:26:17.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.127" endtime="20201112 12:26:17.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.439" level="INFO">${RESULT} = [{'time': 0.021181222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.021192139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:17.436" endtime="20201112 12:26:17.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:17.453" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:17.440" endtime="20201112 12:26:17.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.457" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:26:17.456" endtime="20201112 12:26:17.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.460" level="INFO">VALUE: [6.235999999999742e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.167000000001366e-06, 6.250000000002781e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.2229999999996455e-06, 6.181000000000936e-06, 6.2229999999996455e-06, 6.236999999999215e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.264000000002351e-06, 6.2229999999996455e-06, 6.277000000002447e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.250000000002781e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.305999999997591e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.236000000003211e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.334000000000201e-06, 6.262999999999408e-06, 6.2639999999988816e-06, 6.2090000000000756e-06, 6.167000000001366e-06, 6.2079999999971325e-06, 6.2079999999971325e-06]</msg>
<status status="PASS" starttime="20201112 12:26:17.458" endtime="20201112 12:26:17.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.454" endtime="20201112 12:26:17.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.463" endtime="20201112 12:26:17.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.467" endtime="20201112 12:26:17.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.465" endtime="20201112 12:26:17.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.462" endtime="20201112 12:26:17.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.096" endtime="20201112 12:26:17.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.095" endtime="20201112 12:26:17.488"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.496" endtime="20201112 12:26:17.516"></status>
</kw>
<msg timestamp="20201112 12:26:17.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.495" endtime="20201112 12:26:17.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.517" endtime="20201112 12:26:17.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.520" endtime="20201112 12:26:17.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.492" endtime="20201112 12:26:17.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.490" endtime="20201112 12:26:17.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.530" endtime="20201112 12:26:17.817"></status>
</kw>
<msg timestamp="20201112 12:26:17.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020441139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.528" endtime="20201112 12:26:17.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020441139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.821" endtime="20201112 12:26:17.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.829" endtime="20201112 12:26:17.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.525" endtime="20201112 12:26:17.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.524" endtime="20201112 12:26:17.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.836" level="INFO">${RESULT} = [{'time': 0.020447403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.020459208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:17.832" endtime="20201112 12:26:17.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:17.849" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:17.837" endtime="20201112 12:26:17.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.854" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:26:17.853" endtime="20201112 12:26:17.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.856" level="INFO">VALUE: [6.2639999999988816e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.236000000003211e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.236000000003211e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.1939999999975626e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.291000000002017e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.305000000001587e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.237000000002685e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.223000000003115e-06, 6.2079999999971325e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.292000000001491e-06, 6.2229999999996455e-06, 6.2229999999996455e-06]</msg>
<status status="PASS" starttime="20201112 12:26:17.855" endtime="20201112 12:26:17.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.850" endtime="20201112 12:26:17.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.860" endtime="20201112 12:26:17.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.863" endtime="20201112 12:26:17.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.862" endtime="20201112 12:26:17.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.858" endtime="20201112 12:26:17.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.489" endtime="20201112 12:26:17.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.488" endtime="20201112 12:26:17.884"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.893" endtime="20201112 12:26:17.908"></status>
</kw>
<msg timestamp="20201112 12:26:17.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.891" endtime="20201112 12:26:17.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.910" endtime="20201112 12:26:17.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.913" endtime="20201112 12:26:17.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.889" endtime="20201112 12:26:17.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.887" endtime="20201112 12:26:17.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.924" endtime="20201112 12:26:18.209"></status>
</kw>
<msg timestamp="20201112 12:26:18.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020969208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020975417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.922" endtime="20201112 12:26:18.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020969208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020975417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.214" endtime="20201112 12:26:18.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.222" endtime="20201112 12:26:18.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.919" endtime="20201112 12:26:18.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.917" endtime="20201112 12:26:18.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:18.229" level="INFO">${RESULT} = [{'time': 0.020975417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.020991917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:18.225" endtime="20201112 12:26:18.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:18.242" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:18.230" endtime="20201112 12:26:18.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.247" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:26:18.245" endtime="20201112 12:26:18.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.249" level="INFO">VALUE: [6.2090000000000756e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.2079999999971325e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.1529999999983265e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.221999999996702e-06, 6.195000000000506e-06, 6.221999999996702e-06, 6.222000000000172e-06, 6.166000000001892e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.236000000003211e-06, 6.262999999999408e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.221999999996702e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2229999999996455e-06]</msg>
<status status="PASS" starttime="20201112 12:26:18.248" endtime="20201112 12:26:18.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.243" endtime="20201112 12:26:18.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.253" endtime="20201112 12:26:18.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.256" endtime="20201112 12:26:18.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.254" endtime="20201112 12:26:18.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.251" endtime="20201112 12:26:18.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.885" endtime="20201112 12:26:18.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.884" endtime="20201112 12:26:18.277"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.286" endtime="20201112 12:26:18.305"></status>
</kw>
<msg timestamp="20201112 12:26:18.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.284" endtime="20201112 12:26:18.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.306" endtime="20201112 12:26:18.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.309" endtime="20201112 12:26:18.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.281" endtime="20201112 12:26:18.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.279" endtime="20201112 12:26:18.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.319" endtime="20201112 12:26:18.605"></status>
</kw>
<msg timestamp="20201112 12:26:18.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024952056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024958236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.317" endtime="20201112 12:26:18.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024952056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024958236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.610" endtime="20201112 12:26:18.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.618" endtime="20201112 12:26:18.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.315" endtime="20201112 12:26:18.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.313" endtime="20201112 12:26:18.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:18.624" level="INFO">${RESULT} = [{'time': 0.024958236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.0249735, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:18.621" endtime="20201112 12:26:18.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:18.639" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:18.625" endtime="20201112 12:26:18.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.643" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:26:18.642" endtime="20201112 12:26:18.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.646" level="INFO">VALUE: [6.180000000001462e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.250000000002781e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.2639999999988816e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.320000000000631e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.222000000000172e-06, 6.305999999997591e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.222000000000172e-06]</msg>
<status status="PASS" starttime="20201112 12:26:18.644" endtime="20201112 12:26:18.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.640" endtime="20201112 12:26:18.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.649" endtime="20201112 12:26:18.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.653" endtime="20201112 12:26:18.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.651" endtime="20201112 12:26:18.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.648" endtime="20201112 12:26:18.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.278" endtime="20201112 12:26:18.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.277" endtime="20201112 12:26:18.674"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.682" endtime="20201112 12:26:18.701"></status>
</kw>
<msg timestamp="20201112 12:26:18.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.681" endtime="20201112 12:26:18.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.703" endtime="20201112 12:26:18.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.705" endtime="20201112 12:26:18.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.678" endtime="20201112 12:26:18.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.676" endtime="20201112 12:26:18.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.715" endtime="20201112 12:26:19.003"></status>
</kw>
<msg timestamp="20201112 12:26:19.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.714" endtime="20201112 12:26:19.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.007" endtime="20201112 12:26:19.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.015" endtime="20201112 12:26:19.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.711" endtime="20201112 12:26:19.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.709" endtime="20201112 12:26:19.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.022" level="INFO">${RESULT} = [{'time': 0.020293056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.020304667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:19.019" endtime="20201112 12:26:19.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:19.035" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:19.023" endtime="20201112 12:26:19.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.040" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:26:19.039" endtime="20201112 12:26:19.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.042" level="INFO">VALUE: [6.2229999999996455e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.2079999999971325e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.250000000002781e-06, 6.222000000000172e-06, 6.263000000002877e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.222000000000172e-06]</msg>
<status status="PASS" starttime="20201112 12:26:19.041" endtime="20201112 12:26:19.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.036" endtime="20201112 12:26:19.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.046" endtime="20201112 12:26:19.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.050" endtime="20201112 12:26:19.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.048" endtime="20201112 12:26:19.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.044" endtime="20201112 12:26:19.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.675" endtime="20201112 12:26:19.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.674" endtime="20201112 12:26:19.070"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.079" endtime="20201112 12:26:19.094"></status>
</kw>
<msg timestamp="20201112 12:26:19.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.078" endtime="20201112 12:26:19.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.096" endtime="20201112 12:26:19.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.098" endtime="20201112 12:26:19.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.075" endtime="20201112 12:26:19.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.073" endtime="20201112 12:26:19.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.108" endtime="20201112 12:26:19.395"></status>
</kw>
<msg timestamp="20201112 12:26:19.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020298181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020304458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.107" endtime="20201112 12:26:19.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020298181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020304458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.399" endtime="20201112 12:26:19.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.408" endtime="20201112 12:26:19.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.104" endtime="20201112 12:26:19.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.102" endtime="20201112 12:26:19.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.414" level="INFO">${RESULT} = [{'time': 0.020304458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.277000000002447e-06, 'source_diff': 6.277000000002447e-06}, {'time': 0.020320264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:19.411" endtime="20201112 12:26:19.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:19.427" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:19.415" endtime="20201112 12:26:19.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.432" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:26:19.431" endtime="20201112 12:26:19.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.434" level="INFO">VALUE: [6.277000000002447e-06, 6.222000000000172e-06, 6.1939999999975626e-06, 6.153000000001796e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.221999999996702e-06, 6.180999999997466e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.179999999997993e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.166000000001892e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.278000000001921e-06, 6.278000000001921e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.236000000003211e-06, 6.195000000000506e-06, 6.221999999996702e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.250000000002781e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2079999999971325e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.264000000002351e-06]</msg>
<status status="PASS" starttime="20201112 12:26:19.433" endtime="20201112 12:26:19.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.428" endtime="20201112 12:26:19.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.438" endtime="20201112 12:26:19.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.442" endtime="20201112 12:26:19.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.440" endtime="20201112 12:26:19.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.436" endtime="20201112 12:26:19.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.071" endtime="20201112 12:26:19.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.071" endtime="20201112 12:26:19.462"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.471" endtime="20201112 12:26:19.486"></status>
</kw>
<msg timestamp="20201112 12:26:19.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.470" endtime="20201112 12:26:19.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.487" endtime="20201112 12:26:19.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.490" endtime="20201112 12:26:19.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.467" endtime="20201112 12:26:19.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.465" endtime="20201112 12:26:19.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.500" endtime="20201112 12:26:19.786"></status>
</kw>
<msg timestamp="20201112 12:26:19.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.498" endtime="20201112 12:26:19.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.790" endtime="20201112 12:26:19.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.798" endtime="20201112 12:26:19.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.496" endtime="20201112 12:26:19.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.494" endtime="20201112 12:26:19.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.805" level="INFO">${RESULT} = [{'time': 0.020107653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.020120292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:19.802" endtime="20201112 12:26:19.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:19.818" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:19.806" endtime="20201112 12:26:19.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.823" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:26:19.822" endtime="20201112 12:26:19.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.825" level="INFO">VALUE: [6.235999999999742e-06, 6.223000000003115e-06, 6.305999999997591e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.236999999999215e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.221999999996702e-06, 6.306000000001061e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.264000000002351e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.167000000001366e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.236000000003211e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.236000000003211e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.291000000002017e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201112 12:26:19.824" endtime="20201112 12:26:19.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.819" endtime="20201112 12:26:19.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.829" endtime="20201112 12:26:19.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.832" endtime="20201112 12:26:19.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.831" endtime="20201112 12:26:19.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.827" endtime="20201112 12:26:19.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.463" endtime="20201112 12:26:19.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.463" endtime="20201112 12:26:19.853"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.862" endtime="20201112 12:26:19.878"></status>
</kw>
<msg timestamp="20201112 12:26:19.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.860" endtime="20201112 12:26:19.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.879" endtime="20201112 12:26:19.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.882" endtime="20201112 12:26:19.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.858" endtime="20201112 12:26:19.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.856" endtime="20201112 12:26:19.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.892" endtime="20201112 12:26:20.178"></status>
</kw>
<msg timestamp="20201112 12:26:20.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021319097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021325319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.890" endtime="20201112 12:26:20.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021319097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021325319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.182" endtime="20201112 12:26:20.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.190" endtime="20201112 12:26:20.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.888" endtime="20201112 12:26:20.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.886" endtime="20201112 12:26:20.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:20.197" level="INFO">${RESULT} = [{'time': 0.021325319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.021336639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:20.194" endtime="20201112 12:26:20.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:20.211" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:20.198" endtime="20201112 12:26:20.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.216" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:26:20.215" endtime="20201112 12:26:20.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.218" level="INFO">VALUE: [6.222000000000172e-06, 6.181000000000936e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.236999999999215e-06, 6.167000000001366e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.292000000001491e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.2639999999988816e-06, 6.277000000002447e-06, 6.2229999999996455e-06, 6.290999999998548e-06, 6.2229999999996455e-06, 6.194999999997036e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.278000000001921e-06, 6.2090000000000756e-06, 6.2229999999996455e-06, 6.236000000003211e-06, 6.180999999997466e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.235999999999742e-06]</msg>
<status status="PASS" starttime="20201112 12:26:20.217" endtime="20201112 12:26:20.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.212" endtime="20201112 12:26:20.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.222" endtime="20201112 12:26:20.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.225" endtime="20201112 12:26:20.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.224" endtime="20201112 12:26:20.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.220" endtime="20201112 12:26:20.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.854" endtime="20201112 12:26:20.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.853" endtime="20201112 12:26:20.246"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.255" endtime="20201112 12:26:20.270"></status>
</kw>
<msg timestamp="20201112 12:26:20.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.253" endtime="20201112 12:26:20.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.271" endtime="20201112 12:26:20.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.274" endtime="20201112 12:26:20.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.251" endtime="20201112 12:26:20.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.249" endtime="20201112 12:26:20.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.284" endtime="20201112 12:26:20.570"></status>
</kw>
<msg timestamp="20201112 12:26:20.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020091389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.283" endtime="20201112 12:26:20.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020091389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.575" endtime="20201112 12:26:20.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.583" endtime="20201112 12:26:20.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.280" endtime="20201112 12:26:20.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.279" endtime="20201112 12:26:20.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:20.589" level="INFO">${RESULT} = [{'time': 0.020097597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2079999999971325e-06, 'source_diff': 6.2079999999971325e-06}, {'time': 0.020111417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:20.586" endtime="20201112 12:26:20.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:20.603" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:20.590" endtime="20201112 12:26:20.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.607" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:26:20.606" endtime="20201112 12:26:20.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.610" level="INFO">VALUE: [6.2079999999971325e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.291999999998021e-06, 6.208000000000602e-06, 6.250000000002781e-06, 6.166999999997896e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.306000000001061e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.221999999996702e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.221999999996702e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.292000000001491e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.222000000000172e-06]</msg>
<status status="PASS" starttime="20201112 12:26:20.608" endtime="20201112 12:26:20.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.604" endtime="20201112 12:26:20.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.613" endtime="20201112 12:26:20.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.617" endtime="20201112 12:26:20.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.615" endtime="20201112 12:26:20.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.612" endtime="20201112 12:26:20.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.247" endtime="20201112 12:26:20.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.247" endtime="20201112 12:26:20.638"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.646" endtime="20201112 12:26:20.661"></status>
</kw>
<msg timestamp="20201112 12:26:20.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.645" endtime="20201112 12:26:20.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.663" endtime="20201112 12:26:20.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.665" endtime="20201112 12:26:20.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.642" endtime="20201112 12:26:20.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.640" endtime="20201112 12:26:20.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.676" endtime="20201112 12:26:20.963"></status>
</kw>
<msg timestamp="20201112 12:26:20.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020397347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.674" endtime="20201112 12:26:20.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020397347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.968" endtime="20201112 12:26:20.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.976" endtime="20201112 12:26:20.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.671" endtime="20201112 12:26:20.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.670" endtime="20201112 12:26:20.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:20.983" level="INFO">${RESULT} = [{'time': 0.020403556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.020416833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:20.979" endtime="20201112 12:26:20.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:20.996" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:20.984" endtime="20201112 12:26:20.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.001" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:26:21.000" endtime="20201112 12:26:21.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.003" level="INFO">VALUE: [6.2090000000000756e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.2639999999988816e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.236000000003211e-06, 6.292000000001491e-06, 6.2079999999971325e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.2229999999996455e-06, 6.249999999999312e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.153000000001796e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.236000000003211e-06, 6.235999999999742e-06, 6.2779999999984515e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.1939999999975626e-06, 6.236999999999215e-06, 6.292000000001491e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.291999999998021e-06, 6.2079999999971325e-06, 6.153000000001796e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06]</msg>
<status status="PASS" starttime="20201112 12:26:21.002" endtime="20201112 12:26:21.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.997" endtime="20201112 12:26:21.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.012" endtime="20201112 12:26:21.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.015" endtime="20201112 12:26:21.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.014" endtime="20201112 12:26:21.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.010" endtime="20201112 12:26:21.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.639" endtime="20201112 12:26:21.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.638" endtime="20201112 12:26:21.036"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.045" endtime="20201112 12:26:21.065"></status>
</kw>
<msg timestamp="20201112 12:26:21.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.043" endtime="20201112 12:26:21.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.066" endtime="20201112 12:26:21.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.068" endtime="20201112 12:26:21.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.041" endtime="20201112 12:26:21.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.039" endtime="20201112 12:26:21.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.079" endtime="20201112 12:26:21.366"></status>
</kw>
<msg timestamp="20201112 12:26:21.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023886542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023892764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.077" endtime="20201112 12:26:21.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023886542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023892764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.370" endtime="20201112 12:26:21.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.378" endtime="20201112 12:26:21.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.074" endtime="20201112 12:26:21.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.073" endtime="20201112 12:26:21.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.385" level="INFO">${RESULT} = [{'time': 0.023892764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.023910014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:21.382" endtime="20201112 12:26:21.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:21.398" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:21.386" endtime="20201112 12:26:21.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.403" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:26:21.402" endtime="20201112 12:26:21.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.405" level="INFO">VALUE: [6.222000000000172e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.250000000002781e-06, 6.263000000002877e-06, 6.276999999998978e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.305999999997591e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.236999999999215e-06, 6.208000000000602e-06, 6.333000000000727e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.320000000000631e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201112 12:26:21.404" endtime="20201112 12:26:21.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.399" endtime="20201112 12:26:21.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.409" endtime="20201112 12:26:21.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.412" endtime="20201112 12:26:21.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.411" endtime="20201112 12:26:21.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.407" endtime="20201112 12:26:21.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.037" endtime="20201112 12:26:21.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.037" endtime="20201112 12:26:21.433"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.442" endtime="20201112 12:26:21.461"></status>
</kw>
<msg timestamp="20201112 12:26:21.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.440" endtime="20201112 12:26:21.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.462" endtime="20201112 12:26:21.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.465" endtime="20201112 12:26:21.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.438" endtime="20201112 12:26:21.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.436" endtime="20201112 12:26:21.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.475" endtime="20201112 12:26:21.761"></status>
</kw>
<msg timestamp="20201112 12:26:21.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023786236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023792458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.473" endtime="20201112 12:26:21.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023786236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023792458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.766" endtime="20201112 12:26:21.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.774" endtime="20201112 12:26:21.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.471" endtime="20201112 12:26:21.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.469" endtime="20201112 12:26:21.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.780" level="INFO">${RESULT} = [{'time': 0.023792458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.023807514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:21.777" endtime="20201112 12:26:21.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:21.795" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:21.781" endtime="20201112 12:26:21.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.800" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:26:21.799" endtime="20201112 12:26:21.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.802" level="INFO">VALUE: [6.222000000000172e-06, 6.235999999999742e-06, 6.250000000002781e-06, 6.222000000000172e-06, 6.221999999996702e-06, 6.249999999999312e-06, 6.236999999999215e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.264000000002351e-06, 6.250000000002781e-06, 6.319000000001157e-06, 6.236000000003211e-06, 6.222000000000172e-06, 6.236999999999215e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.264000000002351e-06, 6.2779999999984515e-06, 6.264000000002351e-06, 6.235999999999742e-06, 6.223000000003115e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.250000000002781e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.236999999999215e-06, 6.194999999997036e-06, 6.236999999999215e-06, 6.235999999999742e-06]</msg>
<status status="PASS" starttime="20201112 12:26:21.801" endtime="20201112 12:26:21.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.796" endtime="20201112 12:26:21.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.806" endtime="20201112 12:26:21.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.809" endtime="20201112 12:26:21.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.808" endtime="20201112 12:26:21.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.804" endtime="20201112 12:26:21.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.434" endtime="20201112 12:26:21.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.434" endtime="20201112 12:26:21.830"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.839" endtime="20201112 12:26:21.861"></status>
</kw>
<msg timestamp="20201112 12:26:21.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.837" endtime="20201112 12:26:21.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.862" endtime="20201112 12:26:21.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.865" endtime="20201112 12:26:21.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.835" endtime="20201112 12:26:21.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.833" endtime="20201112 12:26:21.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.875" endtime="20201112 12:26:22.162"></status>
</kw>
<msg timestamp="20201112 12:26:22.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023813306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023819542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.873" endtime="20201112 12:26:22.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023813306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023819542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.167" endtime="20201112 12:26:22.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.175" endtime="20201112 12:26:22.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.871" endtime="20201112 12:26:22.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.869" endtime="20201112 12:26:22.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:22.182" level="INFO">${RESULT} = [{'time': 0.023819542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.023830833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:22.178" endtime="20201112 12:26:22.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:22.195" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:22.183" endtime="20201112 12:26:22.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.200" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:26:22.199" endtime="20201112 12:26:22.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.202" level="INFO">VALUE: [6.235999999999742e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.1529999999983265e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.139000000002226e-06, 6.2229999999996455e-06, 6.180000000001462e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.291999999998021e-06, 6.2229999999996455e-06, 6.2229999999996455e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.2090000000000756e-06, 6.236000000003211e-06, 6.235999999999742e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2079999999971325e-06, 6.2079999999971325e-06, 6.194999999997036e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.222000000000172e-06]</msg>
<status status="PASS" starttime="20201112 12:26:22.201" endtime="20201112 12:26:22.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.196" endtime="20201112 12:26:22.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.206" endtime="20201112 12:26:22.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:22.209" endtime="20201112 12:26:22.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.208" endtime="20201112 12:26:22.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.204" endtime="20201112 12:26:22.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.831" endtime="20201112 12:26:22.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.830" endtime="20201112 12:26:22.230"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.239" endtime="20201112 12:26:22.254"></status>
</kw>
<msg timestamp="20201112 12:26:22.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.237" endtime="20201112 12:26:22.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.255" endtime="20201112 12:26:22.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.258" endtime="20201112 12:26:22.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.235" endtime="20201112 12:26:22.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.232" endtime="20201112 12:26:22.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.268" endtime="20201112 12:26:22.553"></status>
</kw>
<msg timestamp="20201112 12:26:22.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020761431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020767611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.266" endtime="20201112 12:26:22.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020761431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020767611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.557" endtime="20201112 12:26:22.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.565" endtime="20201112 12:26:22.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.264" endtime="20201112 12:26:22.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.262" endtime="20201112 12:26:22.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:22.572" level="INFO">${RESULT} = [{'time': 0.020767611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.020783514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:22.568" endtime="20201112 12:26:22.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:22.585" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:22.573" endtime="20201112 12:26:22.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.590" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:26:22.589" endtime="20201112 12:26:22.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.592" level="INFO">VALUE: [6.179999999997993e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.250000000002781e-06, 6.235999999999742e-06, 6.2639999999988816e-06, 6.2090000000000756e-06, 6.319000000001157e-06, 6.249999999999312e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.236999999999215e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.153000000001796e-06, 6.208000000000602e-06, 6.236000000003211e-06, 6.222000000000172e-06, 6.236000000003211e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.2639999999988816e-06, 6.305000000001587e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.1939999999975626e-06, 6.194000000001032e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.264000000002351e-06, 6.222000000000172e-06, 6.2090000000000756e-06]</msg>
<status status="PASS" starttime="20201112 12:26:22.591" endtime="20201112 12:26:22.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.586" endtime="20201112 12:26:22.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.596" endtime="20201112 12:26:22.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:22.599" endtime="20201112 12:26:22.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.598" endtime="20201112 12:26:22.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.594" endtime="20201112 12:26:22.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.231" endtime="20201112 12:26:22.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.230" endtime="20201112 12:26:22.620"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.629" endtime="20201112 12:26:22.645"></status>
</kw>
<msg timestamp="20201112 12:26:22.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.627" endtime="20201112 12:26:22.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.647" endtime="20201112 12:26:22.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.649" endtime="20201112 12:26:22.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.625" endtime="20201112 12:26:22.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.622" endtime="20201112 12:26:22.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.659" endtime="20201112 12:26:22.944"></status>
</kw>
<msg timestamp="20201112 12:26:22.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.658" endtime="20201112 12:26:22.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.948" endtime="20201112 12:26:22.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.956" endtime="20201112 12:26:22.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.655" endtime="20201112 12:26:22.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.653" endtime="20201112 12:26:22.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:22.963" level="INFO">${RESULT} = [{'time': 0.022620292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.022637514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:22.960" endtime="20201112 12:26:22.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:22.976" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:22.964" endtime="20201112 12:26:22.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.981" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:26:22.980" endtime="20201112 12:26:22.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.983" level="INFO">VALUE: [6.2229999999996455e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.264000000002351e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.223000000003115e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.180000000001462e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.236999999999215e-06, 6.235999999999742e-06, 6.264000000002351e-06, 6.194000000001032e-06, 6.250000000002781e-06, 6.250000000002781e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.2229999999996455e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.1939999999975626e-06, 6.2229999999996455e-06, 6.2229999999996455e-06]</msg>
<status status="PASS" starttime="20201112 12:26:22.982" endtime="20201112 12:26:22.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.977" endtime="20201112 12:26:22.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.987" endtime="20201112 12:26:22.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:22.991" endtime="20201112 12:26:23.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.989" endtime="20201112 12:26:23.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.985" endtime="20201112 12:26:23.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.621" endtime="20201112 12:26:23.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.620" endtime="20201112 12:26:23.012"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.021" endtime="20201112 12:26:23.042"></status>
</kw>
<msg timestamp="20201112 12:26:23.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.020" endtime="20201112 12:26:23.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.044" endtime="20201112 12:26:23.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.046" endtime="20201112 12:26:23.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.017" endtime="20201112 12:26:23.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.015" endtime="20201112 12:26:23.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.056" endtime="20201112 12:26:23.343"></status>
</kw>
<msg timestamp="20201112 12:26:23.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.055" endtime="20201112 12:26:23.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.348" endtime="20201112 12:26:23.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.359" endtime="20201112 12:26:23.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.052" endtime="20201112 12:26:23.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.051" endtime="20201112 12:26:23.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:23.367" level="INFO">${RESULT} = [{'time': 0.022470111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.022481097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:23.363" endtime="20201112 12:26:23.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:23.382" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:23.368" endtime="20201112 12:26:23.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.386" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:26:23.385" endtime="20201112 12:26:23.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.389" level="INFO">VALUE: [6.235999999999742e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.250000000002781e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.236000000003211e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.1939999999975626e-06, 6.305000000001587e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.236999999999215e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.2639999999988816e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.237000000002685e-06, 6.264000000002351e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.223000000003115e-06]</msg>
<status status="PASS" starttime="20201112 12:26:23.388" endtime="20201112 12:26:23.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.383" endtime="20201112 12:26:23.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.393" endtime="20201112 12:26:23.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.396" endtime="20201112 12:26:23.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.395" endtime="20201112 12:26:23.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.391" endtime="20201112 12:26:23.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.013" endtime="20201112 12:26:23.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.013" endtime="20201112 12:26:23.417"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.426" endtime="20201112 12:26:23.445"></status>
</kw>
<msg timestamp="20201112 12:26:23.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.425" endtime="20201112 12:26:23.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.446" endtime="20201112 12:26:23.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.449" endtime="20201112 12:26:23.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.422" endtime="20201112 12:26:23.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.420" endtime="20201112 12:26:23.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.459" endtime="20201112 12:26:23.768"></status>
</kw>
<msg timestamp="20201112 12:26:23.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024130722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024136944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.458" endtime="20201112 12:26:23.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024130722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024136944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.772" endtime="20201112 12:26:23.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.780" endtime="20201112 12:26:23.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.455" endtime="20201112 12:26:23.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.453" endtime="20201112 12:26:23.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:23.787" level="INFO">${RESULT} = [{'time': 0.024136944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.024150125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:23.784" endtime="20201112 12:26:23.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:23.801" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:23.788" endtime="20201112 12:26:23.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.806" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:26:23.805" endtime="20201112 12:26:23.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.808" level="INFO">VALUE: [6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.194999999997036e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.250000000002781e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.236999999999215e-06, 6.235999999999742e-06, 6.250000000002781e-06, 6.305999999997591e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.250000000002781e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.236999999999215e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.1939999999975626e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.236999999999215e-06, 6.2079999999971325e-06, 6.222000000000172e-06]</msg>
<status status="PASS" starttime="20201112 12:26:23.807" endtime="20201112 12:26:23.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.802" endtime="20201112 12:26:23.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.812" endtime="20201112 12:26:23.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.816" endtime="20201112 12:26:23.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.814" endtime="20201112 12:26:23.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.811" endtime="20201112 12:26:23.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.418" endtime="20201112 12:26:23.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.418" endtime="20201112 12:26:23.837"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.846" endtime="20201112 12:26:23.861"></status>
</kw>
<msg timestamp="20201112 12:26:23.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.844" endtime="20201112 12:26:23.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.863" endtime="20201112 12:26:23.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.866" endtime="20201112 12:26:23.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.842" endtime="20201112 12:26:23.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.840" endtime="20201112 12:26:23.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.876" endtime="20201112 12:26:24.162"></status>
</kw>
<msg timestamp="20201112 12:26:24.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021599194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021605375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.875" endtime="20201112 12:26:24.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021599194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021605375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.167" endtime="20201112 12:26:24.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.177" endtime="20201112 12:26:24.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.872" endtime="20201112 12:26:24.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.870" endtime="20201112 12:26:24.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:24.185" level="INFO">${RESULT} = [{'time': 0.021605375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.021621583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:24.182" endtime="20201112 12:26:24.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:24.199" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:24.186" endtime="20201112 12:26:24.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.204" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:26:24.203" endtime="20201112 12:26:24.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.206" level="INFO">VALUE: [6.181000000000936e-06, 6.194000000001032e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.236999999999215e-06, 6.235999999999742e-06, 6.1529999999983265e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.180999999997466e-06, 6.137999999999283e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.264000000002351e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.194999999997036e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.221999999996702e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.264000000002351e-06, 6.278000000001921e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.291000000002017e-06, 6.222000000000172e-06, 6.153000000001796e-06]</msg>
<status status="PASS" starttime="20201112 12:26:24.205" endtime="20201112 12:26:24.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.200" endtime="20201112 12:26:24.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.210" endtime="20201112 12:26:24.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:24.214" endtime="20201112 12:26:24.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.212" endtime="20201112 12:26:24.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.208" endtime="20201112 12:26:24.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.838" endtime="20201112 12:26:24.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.837" endtime="20201112 12:26:24.235"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.244" endtime="20201112 12:26:24.269"></status>
</kw>
<msg timestamp="20201112 12:26:24.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.242" endtime="20201112 12:26:24.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.271" endtime="20201112 12:26:24.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.273" endtime="20201112 12:26:24.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.240" endtime="20201112 12:26:24.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.238" endtime="20201112 12:26:24.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.284" endtime="20201112 12:26:24.571"></status>
</kw>
<msg timestamp="20201112 12:26:24.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025633861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025640097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.282" endtime="20201112 12:26:24.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025633861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025640097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.576" endtime="20201112 12:26:24.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.584" endtime="20201112 12:26:24.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.279" endtime="20201112 12:26:24.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.277" endtime="20201112 12:26:24.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:24.591" level="INFO">${RESULT} = [{'time': 0.025640097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.025651208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:24.587" endtime="20201112 12:26:24.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:24.605" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:24.592" endtime="20201112 12:26:24.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.609" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:26:24.608" endtime="20201112 12:26:24.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.612" level="INFO">VALUE: [6.235999999999742e-06, 6.236000000003211e-06, 6.236999999999215e-06, 6.1389999999987566e-06, 6.235999999999742e-06, 6.292000000001491e-06, 6.165999999998423e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.237000000002685e-06, 6.277000000002447e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.2229999999996455e-06, 6.318999999997688e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2779999999984515e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.2079999999971325e-06, 6.2639999999988816e-06, 6.236000000003211e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.180000000001462e-06, 6.166000000001892e-06, 6.249999999999312e-06, 6.250000000002781e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.221999999996702e-06, 6.2079999999971325e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.167000000001366e-06, 6.249999999999312e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201112 12:26:24.610" endtime="20201112 12:26:24.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.606" endtime="20201112 12:26:24.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.616" endtime="20201112 12:26:24.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:24.619" endtime="20201112 12:26:24.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.618" endtime="20201112 12:26:24.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.614" endtime="20201112 12:26:24.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.236" endtime="20201112 12:26:24.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.235" endtime="20201112 12:26:24.640"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.649" endtime="20201112 12:26:24.666"></status>
</kw>
<msg timestamp="20201112 12:26:24.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.648" endtime="20201112 12:26:24.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.667" endtime="20201112 12:26:24.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.670" endtime="20201112 12:26:24.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.645" endtime="20201112 12:26:24.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.643" endtime="20201112 12:26:24.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.680" endtime="20201112 12:26:24.967"></status>
</kw>
<msg timestamp="20201112 12:26:24.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022002583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022008806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.679" endtime="20201112 12:26:24.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022002583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022008806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.972" endtime="20201112 12:26:24.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.980" endtime="20201112 12:26:24.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.676" endtime="20201112 12:26:24.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.674" endtime="20201112 12:26:24.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:24.987" level="INFO">${RESULT} = [{'time': 0.022008806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.022020208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:24.984" endtime="20201112 12:26:24.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.002" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:24.988" endtime="20201112 12:26:25.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.007" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.006" endtime="20201112 12:26:25.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.010" level="INFO">VALUE: [6.2229999999996455e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.236000000003211e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.236000000003211e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.263000000002877e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.276999999998978e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.236999999999215e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.1939999999975626e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.2090000000000756e-06]</msg>
<status status="PASS" starttime="20201112 12:26:25.008" endtime="20201112 12:26:25.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.003" endtime="20201112 12:26:25.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.013" endtime="20201112 12:26:25.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.017" endtime="20201112 12:26:25.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.015" endtime="20201112 12:26:25.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.012" endtime="20201112 12:26:25.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.641" endtime="20201112 12:26:25.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.641" endtime="20201112 12:26:25.038"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.048" endtime="20201112 12:26:25.062"></status>
</kw>
<msg timestamp="20201112 12:26:25.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.046" endtime="20201112 12:26:25.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.064" endtime="20201112 12:26:25.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.066" endtime="20201112 12:26:25.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.043" endtime="20201112 12:26:25.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.041" endtime="20201112 12:26:25.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.077" endtime="20201112 12:26:25.364"></status>
</kw>
<msg timestamp="20201112 12:26:25.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021032306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021038514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.075" endtime="20201112 12:26:25.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021032306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021038514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.368" endtime="20201112 12:26:25.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.377" endtime="20201112 12:26:25.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.073" endtime="20201112 12:26:25.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.071" endtime="20201112 12:26:25.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:25.384" level="INFO">${RESULT} = [{'time': 0.021038514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.021051292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:25.380" endtime="20201112 12:26:25.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.398" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:25.385" endtime="20201112 12:26:25.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.403" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.401" endtime="20201112 12:26:25.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.405" level="INFO">VALUE: [6.208000000000602e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.153000000001796e-06, 6.250000000002781e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.236000000003211e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.179999999997993e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.250000000002781e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.1939999999975626e-06, 6.278000000001921e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.2229999999996455e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.278000000001921e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.236999999999215e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.221999999996702e-06, 6.221999999996702e-06, 6.235999999999742e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201112 12:26:25.404" endtime="20201112 12:26:25.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.399" endtime="20201112 12:26:25.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.409" endtime="20201112 12:26:25.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.412" endtime="20201112 12:26:25.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.411" endtime="20201112 12:26:25.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.407" endtime="20201112 12:26:25.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.039" endtime="20201112 12:26:25.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.039" endtime="20201112 12:26:25.433"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.442" endtime="20201112 12:26:25.461"></status>
</kw>
<msg timestamp="20201112 12:26:25.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.441" endtime="20201112 12:26:25.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.462" endtime="20201112 12:26:25.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.465" endtime="20201112 12:26:25.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.438" endtime="20201112 12:26:25.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.436" endtime="20201112 12:26:25.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.475" endtime="20201112 12:26:25.763"></status>
</kw>
<msg timestamp="20201112 12:26:25.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022884875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.474" endtime="20201112 12:26:25.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022884875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.767" endtime="20201112 12:26:25.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.776" endtime="20201112 12:26:25.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.471" endtime="20201112 12:26:25.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.469" endtime="20201112 12:26:25.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:25.783" level="INFO">${RESULT} = [{'time': 0.022891083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.022902806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:25.779" endtime="20201112 12:26:25.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.797" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:25.784" endtime="20201112 12:26:25.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.801" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.800" endtime="20201112 12:26:25.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.804" level="INFO">VALUE: [6.208000000000602e-06, 6.237000000002685e-06, 6.2779999999984515e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.223000000003115e-06, 6.236000000003211e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2079999999971325e-06, 6.208000000000602e-06, 6.236000000003211e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.2079999999971325e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.180000000001462e-06, 6.320000000000631e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.236000000003211e-06, 6.250000000002781e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2090000000000756e-06]</msg>
<status status="PASS" starttime="20201112 12:26:25.802" endtime="20201112 12:26:25.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.797" endtime="20201112 12:26:25.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.808" endtime="20201112 12:26:25.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.811" endtime="20201112 12:26:25.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.810" endtime="20201112 12:26:25.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.806" endtime="20201112 12:26:25.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.434" endtime="20201112 12:26:25.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.434" endtime="20201112 12:26:25.832"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.841" endtime="20201112 12:26:25.857"></status>
</kw>
<msg timestamp="20201112 12:26:25.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.840" endtime="20201112 12:26:25.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.858" endtime="20201112 12:26:25.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.861" endtime="20201112 12:26:25.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.837" endtime="20201112 12:26:25.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.835" endtime="20201112 12:26:25.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.872" endtime="20201112 12:26:26.157"></status>
</kw>
<msg timestamp="20201112 12:26:26.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020880333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020913347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.870" endtime="20201112 12:26:26.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020880333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020913347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.161" endtime="20201112 12:26:26.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.170" endtime="20201112 12:26:26.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.867" endtime="20201112 12:26:26.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.865" endtime="20201112 12:26:26.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:26.177" level="INFO">${RESULT} = [{'time': 0.020913347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.301399999999788e-05, 'source_diff': 3.301399999999788e-05}, {'time': 0.020943667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:26.173" endtime="20201112 12:26:26.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:26.191" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:26.178" endtime="20201112 12:26:26.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.195" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:26:26.194" endtime="20201112 12:26:26.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.198" level="INFO">VALUE: [3.301399999999788e-05, 2.338899999999866e-05, 2.0513999999999255e-05, 1.95830000000001e-05, 2.2485999999998646e-05, 2.6306000000000246e-05, 2.2430000000000366e-05, 2.1527999999999825e-05, 2.1499999999997216e-05, 2.0513999999999255e-05, 2.5318999999999342e-05, 2.056899999999806e-05, 2.1514000000000255e-05, 1.955500000000096e-05, 2.245900000000245e-05, 1.965300000000142e-05, 2.5333999999998386e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.2499999999998216e-05, 2.5346999999998482e-05, 1.9583999999999574e-05, 2.0542000000001864e-05, 2.340299999999823e-05, 2.436100000000052e-05, 2.438899999999966e-05, 2.338900000000213e-05, 2.0541999999998395e-05, 2.338899999999866e-05, 2.1499999999997216e-05, 1.961100000000271e-05, 2.438899999999966e-05, 1.961099999999924e-05, 2.0584000000000574e-05, 2.5318999999999342e-05, 2.1486000000001115e-05, 1.959699999999967e-05, 2.5319999999998816e-05, 2.15830000000021e-05, 1.868099999999956e-05, 2.2471999999999076e-05, 2.5236000000001396e-05, 2.6250000000001966e-05, 2.2514000000001255e-05, 2.5332999999998912e-05, 2.4346999999997482e-05, 1.9570000000000004e-05, 2.438899999999966e-05, 1.9694000000000655e-05, 2.056899999999806e-05]</msg>
<status status="PASS" starttime="20201112 12:26:26.196" endtime="20201112 12:26:26.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.192" endtime="20201112 12:26:26.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.206" endtime="20201112 12:26:26.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:26.210" endtime="20201112 12:26:26.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.208" endtime="20201112 12:26:26.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.204" endtime="20201112 12:26:26.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.833" endtime="20201112 12:26:26.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.833" endtime="20201112 12:26:26.231"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.240" endtime="20201112 12:26:26.258"></status>
</kw>
<msg timestamp="20201112 12:26:26.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.238" endtime="20201112 12:26:26.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.260" endtime="20201112 12:26:26.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.263" endtime="20201112 12:26:26.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.235" endtime="20201112 12:26:26.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.233" endtime="20201112 12:26:26.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.273" endtime="20201112 12:26:26.559"></status>
</kw>
<msg timestamp="20201112 12:26:26.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024273611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024306542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.271" endtime="20201112 12:26:26.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024273611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024306542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.563" endtime="20201112 12:26:26.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.572" endtime="20201112 12:26:26.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.269" endtime="20201112 12:26:26.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.267" endtime="20201112 12:26:26.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:26.579" level="INFO">${RESULT} = [{'time': 0.024306542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.293099999999993e-05, 'source_diff': 3.293099999999993e-05}, {'time': 0.0243365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:26.575" endtime="20201112 12:26:26.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:26.593" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:26.580" endtime="20201112 12:26:26.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.598" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:26:26.597" endtime="20201112 12:26:26.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.601" level="INFO">VALUE: [3.293099999999993e-05, 2.0527999999998825e-05, 2.1514000000000255e-05, 2.3430000000001366e-05, 2.0541999999998395e-05, 2.5348000000001425e-05, 1.956900000000053e-05, 2.3416000000001796e-05, 2.0555999999997965e-05, 2.438899999999966e-05, 2.056899999999806e-05, 2.438899999999966e-05, 2.0555999999997965e-05, 2.337499999999909e-05, 2.1514000000000255e-05, 2.2485999999998646e-05, 2.247299999999855e-05, 2.2443999999999936e-05, 2.1486000000001115e-05, 2.055499999999849e-05, 2.245899999999898e-05, 2.3430000000001366e-05, 2.2500000000001685e-05, 2.0570000000001004e-05, 2.434700000000095e-05, 2.438900000000313e-05, 2.1541999999999395e-05, 2.3388000000002657e-05, 2.4401999999999757e-05, 2.5332999999998912e-05, 2.1541999999999395e-05, 2.052700000000282e-05, 2.2457999999999506e-05, 2.340299999999823e-05, 2.341700000000127e-05, 1.961099999999924e-05, 1.961099999999924e-05, 2.437500000000009e-05, 2.343099999999737e-05, 2.433300000000138e-05, 2.5278000000000106e-05, 2.1500000000000685e-05, 2.340299999999823e-05, 2.6278000000001106e-05, 2.338900000000213e-05, 2.533300000000238e-05, 2.241700000000027e-05, 2.054099999999892e-05, 2.2500000000001685e-05, 2.343100000000084e-05]</msg>
<status status="PASS" starttime="20201112 12:26:26.599" endtime="20201112 12:26:26.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.594" endtime="20201112 12:26:26.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.605" endtime="20201112 12:26:26.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:26.608" endtime="20201112 12:26:26.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.607" endtime="20201112 12:26:26.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.603" endtime="20201112 12:26:26.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.232" endtime="20201112 12:26:26.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.231" endtime="20201112 12:26:26.629"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.638" endtime="20201112 12:26:26.656"></status>
</kw>
<msg timestamp="20201112 12:26:26.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.636" endtime="20201112 12:26:26.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.658" endtime="20201112 12:26:26.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.661" endtime="20201112 12:26:26.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.634" endtime="20201112 12:26:26.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.632" endtime="20201112 12:26:26.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.671" endtime="20201112 12:26:26.957"></status>
</kw>
<msg timestamp="20201112 12:26:26.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.670" endtime="20201112 12:26:26.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.961" endtime="20201112 12:26:26.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.969" endtime="20201112 12:26:26.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.667" endtime="20201112 12:26:26.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.665" endtime="20201112 12:26:26.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:26.977" level="INFO">${RESULT} = [{'time': 0.022816542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.438899999999966e-05, 'source_diff': 2.438899999999966e-05}, {'time': 0.022846569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:26.973" endtime="20201112 12:26:26.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:26.992" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:26.978" endtime="20201112 12:26:26.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.997" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:26:26.996" endtime="20201112 12:26:26.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.000" level="INFO">VALUE: [2.438899999999966e-05, 2.4276999999999632e-05, 2.337499999999909e-05, 2.2457999999999506e-05, 2.534700000000195e-05, 2.5334000000001855e-05, 2.245900000000245e-05, 2.1500000000000685e-05, 2.0513999999999255e-05, 2.437500000000009e-05, 2.248700000000159e-05, 2.1514000000000255e-05, 2.061100000000024e-05, 1.863899999999738e-05, 2.248700000000159e-05, 2.6277999999997637e-05, 2.1514000000000255e-05, 2.5306000000002715e-05, 2.341700000000127e-05, 2.6332999999999912e-05, 2.1541999999999395e-05, 2.0556000000001434e-05, 2.438899999999966e-05, 2.0542000000001864e-05, 2.1471999999998076e-05, 2.0598000000000144e-05, 2.241700000000027e-05, 2.4388000000000187e-05, 1.963899999999838e-05, 1.868099999999956e-05, 2.537500000000109e-05, 2.1471999999998076e-05, 2.434700000000095e-05, 2.1514000000000255e-05, 2.5319999999998816e-05, 2.2486000000002115e-05, 2.054099999999892e-05, 1.961099999999924e-05, 2.437500000000009e-05, 2.1443999999998936e-05, 2.1499999999997216e-05, 1.9665999999998046e-05, 2.536100000000152e-05, 2.1514000000000255e-05, 2.5346999999998482e-05, 2.437500000000009e-05, 1.9556000000000434e-05, 2.0556000000001434e-05, 2.4361999999999995e-05, 1.955499999999749e-05]</msg>
<status status="PASS" starttime="20201112 12:26:26.999" endtime="20201112 12:26:27.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.993" endtime="20201112 12:26:27.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.004" endtime="20201112 12:26:27.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.008" endtime="20201112 12:26:27.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.006" endtime="20201112 12:26:27.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.002" endtime="20201112 12:26:27.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.630" endtime="20201112 12:26:27.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.629" endtime="20201112 12:26:27.029"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.038" endtime="20201112 12:26:27.057"></status>
</kw>
<msg timestamp="20201112 12:26:27.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.036" endtime="20201112 12:26:27.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.059" endtime="20201112 12:26:27.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.062" endtime="20201112 12:26:27.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.033" endtime="20201112 12:26:27.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.031" endtime="20201112 12:26:27.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.072" endtime="20201112 12:26:27.358"></status>
</kw>
<msg timestamp="20201112 12:26:27.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025215694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0252325, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:27.070" endtime="20201112 12:26:27.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025215694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0252325, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:27.362" endtime="20201112 12:26:27.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.370" endtime="20201112 12:26:27.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.068" endtime="20201112 12:26:27.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.066" endtime="20201112 12:26:27.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.377" level="INFO">${RESULT} = [{'time': 0.0252325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6806000000001153e-05, 'source_diff': 1.6806000000001153e-05}, {'time': 0.025262569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:27.374" endtime="20201112 12:26:27.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.391" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:27.378" endtime="20201112 12:26:27.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.396" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.395" endtime="20201112 12:26:27.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.398" level="INFO">VALUE: [1.6806000000001153e-05, 2.5291000000000202e-05, 2.438899999999966e-05, 2.0527999999998825e-05, 1.955499999999749e-05, 2.337499999999909e-05, 2.2430000000000366e-05, 2.5429999999999897e-05, 2.340299999999823e-05, 2.438899999999966e-05, 2.5346999999998482e-05, 2.1472000000001545e-05, 2.0486000000000115e-05, 2.0486000000000115e-05, 2.5250000000000966e-05, 2.1500000000000685e-05, 1.963900000000185e-05, 2.2471999999999076e-05, 2.5318999999999342e-05, 1.956900000000053e-05, 2.5346999999998482e-05, 2.340299999999823e-05, 2.436100000000052e-05, 2.0541999999998395e-05, 2.533300000000238e-05, 2.436100000000052e-05, 2.1500000000000685e-05, 2.536100000000152e-05, 1.9612000000002183e-05, 2.1514000000000255e-05, 1.963900000000185e-05, 1.956900000000053e-05, 2.340299999999823e-05, 2.2486000000002115e-05, 2.2485999999998646e-05, 2.151300000000078e-05, 2.34030000000017e-05, 2.2443999999999936e-05, 2.240299999999723e-05, 2.2513999999997786e-05, 2.1486000000001115e-05, 2.44169999999988e-05, 2.3444000000000936e-05, 2.061100000000024e-05, 2.5291999999999676e-05, 2.438899999999966e-05, 2.2500000000001685e-05, 2.241700000000027e-05, 2.0528000000002294e-05, 2.437500000000009e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.397" endtime="20201112 12:26:27.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.392" endtime="20201112 12:26:27.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.402" endtime="20201112 12:26:27.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.406" endtime="20201112 12:26:27.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.404" endtime="20201112 12:26:27.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.401" endtime="20201112 12:26:27.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.030" endtime="20201112 12:26:27.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.029" endtime="20201112 12:26:27.427"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.436" endtime="20201112 12:26:27.458"></status>
</kw>
<msg timestamp="20201112 12:26:27.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.434" endtime="20201112 12:26:27.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.459" endtime="20201112 12:26:27.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.462" endtime="20201112 12:26:27.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.431" endtime="20201112 12:26:27.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.429" endtime="20201112 12:26:27.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.472" endtime="20201112 12:26:27.759"></status>
</kw>
<msg timestamp="20201112 12:26:27.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023878194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023894931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.471" endtime="20201112 12:26:27.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023878194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023894931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.764" endtime="20201112 12:26:27.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.772" endtime="20201112 12:26:27.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.468" endtime="20201112 12:26:27.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.466" endtime="20201112 12:26:27.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.779" level="INFO">${RESULT} = [{'time': 0.023894931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6737000000002777e-05, 'source_diff': 1.6737000000002777e-05}, {'time': 0.023925069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:27.776" endtime="20201112 12:26:27.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.793" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:27.780" endtime="20201112 12:26:27.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.798" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.797" endtime="20201112 12:26:27.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.800" level="INFO">VALUE: [1.6737000000002777e-05, 2.056900000000153e-05, 2.4415999999999327e-05, 2.2457999999999506e-05, 2.0541999999998395e-05, 2.438900000000313e-05, 2.0486000000000115e-05, 2.34030000000017e-05, 1.956900000000053e-05, 2.05830000000011e-05, 2.054099999999892e-05, 2.4320000000001285e-05, 2.1486000000001115e-05, 2.058299999999763e-05, 2.0542000000001864e-05, 2.338899999999866e-05, 2.34030000000017e-05, 2.5346999999998482e-05, 2.341700000000127e-05, 2.2443999999999936e-05, 2.6319000000000342e-05, 1.961099999999924e-05, 2.5306000000002715e-05, 1.9597999999999144e-05, 2.537500000000109e-05, 1.961099999999924e-05, 2.0556000000001434e-05, 2.337499999999909e-05, 1.9583999999999574e-05, 2.241700000000027e-05, 2.5318999999999342e-05, 2.0541999999998395e-05, 1.863900000000085e-05, 2.5304999999999772e-05, 2.0513999999999255e-05, 2.5334000000001855e-05, 2.538899999999719e-05, 2.2430000000000366e-05, 2.6264000000001536e-05, 2.3430000000001366e-05, 2.248700000000159e-05, 2.058299999999763e-05, 2.5291000000000202e-05, 2.5291999999999676e-05, 2.337500000000256e-05, 2.5318999999999342e-05, 2.5332999999998912e-05, 1.962500000000228e-05, 2.0542000000001864e-05, 2.434700000000095e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.799" endtime="20201112 12:26:27.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.794" endtime="20201112 12:26:27.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.804" endtime="20201112 12:26:27.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.807" endtime="20201112 12:26:27.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.806" endtime="20201112 12:26:27.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.802" endtime="20201112 12:26:27.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.428" endtime="20201112 12:26:27.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.427" endtime="20201112 12:26:27.828"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.837" endtime="20201112 12:26:27.856"></status>
</kw>
<msg timestamp="20201112 12:26:27.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.836" endtime="20201112 12:26:27.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.858" endtime="20201112 12:26:27.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.861" endtime="20201112 12:26:27.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.833" endtime="20201112 12:26:27.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.831" endtime="20201112 12:26:27.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.871" endtime="20201112 12:26:28.158"></status>
</kw>
<msg timestamp="20201112 12:26:28.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024153792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024174333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.870" endtime="20201112 12:26:28.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024153792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024174333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.162" endtime="20201112 12:26:28.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.170" endtime="20201112 12:26:28.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.867" endtime="20201112 12:26:28.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.865" endtime="20201112 12:26:28.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:28.177" level="INFO">${RESULT} = [{'time': 0.024174333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.054099999999892e-05, 'source_diff': 2.054099999999892e-05}, {'time': 0.024205056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:28.174" endtime="20201112 12:26:28.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:28.192" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:28.178" endtime="20201112 12:26:28.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.197" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:26:28.196" endtime="20201112 12:26:28.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.199" level="INFO">VALUE: [2.054099999999892e-05, 2.337499999999909e-05, 2.1514000000000255e-05, 2.5278000000000106e-05, 2.6277999999997637e-05, 2.2485999999998646e-05, 1.961099999999924e-05, 2.0584000000000574e-05, 2.2457999999999506e-05, 2.533300000000238e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.1499999999997216e-05, 2.4388000000000187e-05, 2.5334000000001855e-05, 2.3485999999999646e-05, 2.0527999999998825e-05, 2.1458000000001975e-05, 2.4347999999996955e-05, 2.1527999999999825e-05, 2.2471999999999076e-05, 2.24030000000007e-05, 2.2499999999998216e-05, 2.054099999999892e-05, 2.2485999999998646e-05, 2.0570000000001004e-05, 2.061100000000024e-05, 1.963900000000185e-05, 2.1471999999998076e-05, 2.4306000000001715e-05, 2.341700000000127e-05, 2.244499999999941e-05, 2.4361999999999995e-05, 2.0556000000001434e-05, 2.438899999999966e-05, 2.2486000000002115e-05, 2.5319999999998816e-05, 2.052700000000282e-05, 2.1500000000000685e-05, 2.2528000000000825e-05, 2.434700000000095e-05, 2.1513999999996786e-05, 2.155499999999949e-05, 2.345899999999998e-05, 2.44169999999988e-05, 2.34169999999978e-05, 1.9570000000000004e-05, 2.34169999999978e-05, 2.436099999999705e-05, 2.5291000000000202e-05]</msg>
<status status="PASS" starttime="20201112 12:26:28.198" endtime="20201112 12:26:28.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.193" endtime="20201112 12:26:28.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.203" endtime="20201112 12:26:28.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:28.207" endtime="20201112 12:26:28.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.205" endtime="20201112 12:26:28.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.201" endtime="20201112 12:26:28.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.829" endtime="20201112 12:26:28.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.829" endtime="20201112 12:26:28.228"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.237" endtime="20201112 12:26:28.253"></status>
</kw>
<msg timestamp="20201112 12:26:28.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.235" endtime="20201112 12:26:28.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.255" endtime="20201112 12:26:28.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.257" endtime="20201112 12:26:28.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.233" endtime="20201112 12:26:28.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.230" endtime="20201112 12:26:28.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.268" endtime="20201112 12:26:28.553"></status>
</kw>
<msg timestamp="20201112 12:26:28.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021647417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.266" endtime="20201112 12:26:28.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021647417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.557" endtime="20201112 12:26:28.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.566" endtime="20201112 12:26:28.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.263" endtime="20201112 12:26:28.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.262" endtime="20201112 12:26:28.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:28.573" level="INFO">${RESULT} = [{'time': 0.021677514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0096999999999763e-05, 'source_diff': 3.0096999999999763e-05}, {'time': 0.021707597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:28.569" endtime="20201112 12:26:28.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:28.587" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:28.574" endtime="20201112 12:26:28.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.591" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:26:28.590" endtime="20201112 12:26:28.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.594" level="INFO">VALUE: [3.0096999999999763e-05, 2.436099999999705e-05, 2.5278000000000106e-05, 2.5318999999999342e-05, 2.0569999999997535e-05, 2.0514000000002724e-05, 2.1500000000000685e-05, 2.2499999999998216e-05, 2.3443999999997467e-05, 1.959699999999967e-05, 2.056900000000153e-05, 2.0570000000001004e-05, 2.344500000000041e-05, 2.1486000000001115e-05, 2.4333999999997385e-05, 2.0486000000000115e-05, 2.3443999999997467e-05, 2.438899999999966e-05, 2.2486000000002115e-05, 2.5250000000000966e-05, 2.0499999999999685e-05, 2.0584000000000574e-05, 2.152700000000035e-05, 2.3430000000001366e-05, 2.0570000000001004e-05, 2.5332999999998912e-05, 2.4334000000000855e-05, 2.2471999999999076e-05, 2.440299999999923e-05, 2.5305999999999246e-05, 2.243099999999984e-05, 2.3472000000000076e-05, 2.1512999999997312e-05, 1.961100000000271e-05, 2.5332999999998912e-05, 2.0513999999999255e-05, 2.5305999999999246e-05, 2.3457999999997037e-05, 2.1514000000000255e-05, 2.3402000000002227e-05, 1.959699999999967e-05, 1.863899999999738e-05, 2.5304999999999772e-05, 2.437500000000009e-05, 2.152700000000035e-05, 2.0513999999999255e-05, 2.14029999999997e-05, 2.0514000000002724e-05, 2.5332999999998912e-05, 1.865300000000042e-05]</msg>
<status status="PASS" starttime="20201112 12:26:28.592" endtime="20201112 12:26:28.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.588" endtime="20201112 12:26:28.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.598" endtime="20201112 12:26:28.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:28.601" endtime="20201112 12:26:28.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.600" endtime="20201112 12:26:28.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.596" endtime="20201112 12:26:28.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.229" endtime="20201112 12:26:28.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.228" endtime="20201112 12:26:28.622"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.631" endtime="20201112 12:26:28.653"></status>
</kw>
<msg timestamp="20201112 12:26:28.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.630" endtime="20201112 12:26:28.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.655" endtime="20201112 12:26:28.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.658" endtime="20201112 12:26:28.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.627" endtime="20201112 12:26:28.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.625" endtime="20201112 12:26:28.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.668" endtime="20201112 12:26:28.954"></status>
</kw>
<msg timestamp="20201112 12:26:28.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024308028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.667" endtime="20201112 12:26:28.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024308028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.959" endtime="20201112 12:26:28.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.967" endtime="20201112 12:26:28.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.664" endtime="20201112 12:26:28.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.662" endtime="20201112 12:26:28.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:28.974" level="INFO">${RESULT} = [{'time': 0.024308028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6235999999998927e-05, 'source_diff': 2.6235999999998927e-05}, {'time': 0.024338722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:28.971" endtime="20201112 12:26:28.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:28.988" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:28.975" endtime="20201112 12:26:28.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.993" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:26:28.992" endtime="20201112 12:26:28.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.995" level="INFO">VALUE: [2.6235999999998927e-05, 2.338899999999866e-05, 2.1527999999999825e-05, 2.0541999999998395e-05, 2.3500000000002685e-05, 1.962500000000228e-05, 2.1499999999997216e-05, 2.0542000000001864e-05, 2.5360999999998052e-05, 1.8652000000000946e-05, 2.5360999999998052e-05, 2.0541999999998395e-05, 2.3429999999997897e-05, 1.961099999999924e-05, 2.5346999999998482e-05, 2.2443999999999936e-05, 1.9665999999998046e-05, 1.959699999999967e-05, 2.056900000000153e-05, 2.3430000000001366e-05, 2.5332999999998912e-05, 2.6348000000002425e-05, 2.337499999999909e-05, 2.054100000000239e-05, 2.1527999999999825e-05, 2.251300000000178e-05, 1.9611999999998714e-05, 2.061100000000024e-05, 2.44030000000027e-05, 2.0541999999998395e-05, 2.534700000000195e-05, 2.3458000000000506e-05, 1.963900000000185e-05, 2.056899999999806e-05, 2.437500000000009e-05, 2.533300000000238e-05, 2.0556000000001434e-05, 2.4429999999998897e-05, 1.961099999999924e-05, 2.438899999999966e-05, 2.4401999999999757e-05, 2.3443999999997467e-05, 2.245899999999898e-05, 1.961100000000271e-05, 2.2457999999999506e-05, 2.330500000000124e-05, 2.4318999999998342e-05, 2.438899999999966e-05, 2.344499999999694e-05, 1.962499999999881e-05]</msg>
<status status="PASS" starttime="20201112 12:26:28.994" endtime="20201112 12:26:28.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.989" endtime="20201112 12:26:28.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.999" endtime="20201112 12:26:29.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.003" endtime="20201112 12:26:29.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.001" endtime="20201112 12:26:29.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.997" endtime="20201112 12:26:29.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.623" endtime="20201112 12:26:29.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.622" endtime="20201112 12:26:29.024"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.033" endtime="20201112 12:26:29.052"></status>
</kw>
<msg timestamp="20201112 12:26:29.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.031" endtime="20201112 12:26:29.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.054" endtime="20201112 12:26:29.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.057" endtime="20201112 12:26:29.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.029" endtime="20201112 12:26:29.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.026" endtime="20201112 12:26:29.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.067" endtime="20201112 12:26:29.353"></status>
</kw>
<msg timestamp="20201112 12:26:29.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024526431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.066" endtime="20201112 12:26:29.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024526431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.357" endtime="20201112 12:26:29.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.366" endtime="20201112 12:26:29.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.063" endtime="20201112 12:26:29.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.061" endtime="20201112 12:26:29.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.372" level="INFO">${RESULT} = [{'time': 0.024526431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.202799999999992e-05, 'source_diff': 3.202799999999992e-05}, {'time': 0.024556597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:29.369" endtime="20201112 12:26:29.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.386" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:29.373" endtime="20201112 12:26:29.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.391" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.390" endtime="20201112 12:26:29.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.393" level="INFO">VALUE: [3.202799999999992e-05, 2.2499999999998216e-05, 2.5332999999998912e-05, 2.2430000000000366e-05, 2.1514000000000255e-05, 2.338899999999866e-05, 1.9598000000002613e-05, 1.9570000000000004e-05, 2.2472000000002545e-05, 2.340299999999823e-05, 2.436100000000052e-05, 2.24030000000007e-05, 2.334699999999995e-05, 2.1527999999999825e-05, 2.438899999999966e-05, 2.3416000000001796e-05, 2.241700000000027e-05, 2.3429999999997897e-05, 2.154099999999992e-05, 2.1555999999998965e-05, 2.1514000000000255e-05, 2.151300000000078e-05, 2.540300000000023e-05, 2.1500000000000685e-05, 1.962500000000228e-05, 2.0555999999997965e-05, 1.9555999999996965e-05, 1.9570000000000004e-05, 2.0486000000000115e-05, 1.9570000000000004e-05, 2.152700000000035e-05, 2.5360999999998052e-05, 2.436100000000052e-05, 2.343099999999737e-05, 2.6278000000001106e-05, 2.0598000000000144e-05, 2.437500000000009e-05, 2.151300000000078e-05, 2.537500000000109e-05, 1.959699999999967e-05, 2.245900000000245e-05, 2.1472000000001545e-05, 1.962499999999881e-05, 2.0570000000001004e-05, 2.4430000000002366e-05, 2.0514000000002724e-05, 2.0513999999999255e-05, 2.6249999999998497e-05, 2.534700000000195e-05, 2.438899999999966e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.392" endtime="20201112 12:26:29.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.387" endtime="20201112 12:26:29.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.397" endtime="20201112 12:26:29.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.401" endtime="20201112 12:26:29.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.399" endtime="20201112 12:26:29.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.396" endtime="20201112 12:26:29.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.025" endtime="20201112 12:26:29.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.024" endtime="20201112 12:26:29.422"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.431" endtime="20201112 12:26:29.449"></status>
</kw>
<msg timestamp="20201112 12:26:29.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.430" endtime="20201112 12:26:29.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.451" endtime="20201112 12:26:29.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.453" endtime="20201112 12:26:29.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.427" endtime="20201112 12:26:29.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.425" endtime="20201112 12:26:29.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.464" endtime="20201112 12:26:29.751"></status>
</kw>
<msg timestamp="20201112 12:26:29.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023231569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023250194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.462" endtime="20201112 12:26:29.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023231569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023250194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.755" endtime="20201112 12:26:29.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.764" endtime="20201112 12:26:29.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.460" endtime="20201112 12:26:29.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.458" endtime="20201112 12:26:29.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.771" level="INFO">${RESULT} = [{'time': 0.023250194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.862499999999781e-05, 'source_diff': 1.862499999999781e-05}, {'time': 0.023280181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:29.767" endtime="20201112 12:26:29.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.785" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:29.772" endtime="20201112 12:26:29.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.790" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.789" endtime="20201112 12:26:29.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.793" level="INFO">VALUE: [1.862499999999781e-05, 2.1541999999999395e-05, 2.441700000000227e-05, 2.44169999999988e-05, 2.056900000000153e-05, 2.244500000000288e-05, 2.0541999999998395e-05, 2.437500000000009e-05, 2.5320000000002285e-05, 2.341700000000127e-05, 2.44030000000027e-05, 2.437499999999662e-05, 1.956900000000053e-05, 2.052699999999935e-05, 2.4415999999999327e-05, 2.343100000000084e-05, 2.059700000000067e-05, 1.955499999999749e-05, 2.431900000000181e-05, 2.338899999999866e-05, 2.248700000000159e-05, 2.2443999999999936e-05, 2.1472000000001545e-05, 2.343100000000084e-05, 2.24030000000007e-05, 2.343100000000084e-05, 2.0556000000001434e-05, 2.138900000000013e-05, 2.054099999999892e-05, 2.440299999999923e-05, 2.44030000000027e-05, 2.2514000000001255e-05, 2.44030000000027e-05, 2.2471999999999076e-05, 2.1458000000001975e-05, 1.961099999999924e-05, 2.1541999999999395e-05, 2.5332999999998912e-05, 2.337500000000256e-05, 2.5429999999999897e-05, 2.055500000000196e-05, 2.438899999999966e-05, 2.4415999999999327e-05, 2.1499999999997216e-05, 1.861099999999824e-05, 2.056900000000153e-05, 2.538900000000066e-05, 2.5319999999998816e-05, 2.0527999999998825e-05, 2.2472000000002545e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.791" endtime="20201112 12:26:29.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.786" endtime="20201112 12:26:29.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.796" endtime="20201112 12:26:29.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.800" endtime="20201112 12:26:29.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.798" endtime="20201112 12:26:29.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.795" endtime="20201112 12:26:29.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.423" endtime="20201112 12:26:29.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.422" endtime="20201112 12:26:29.821"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.830" endtime="20201112 12:26:29.850"></status>
</kw>
<msg timestamp="20201112 12:26:29.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.828" endtime="20201112 12:26:29.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.852" endtime="20201112 12:26:29.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.855" endtime="20201112 12:26:29.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.826" endtime="20201112 12:26:29.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.824" endtime="20201112 12:26:29.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.865" endtime="20201112 12:26:30.152"></status>
</kw>
<msg timestamp="20201112 12:26:30.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021109222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021119167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.863" endtime="20201112 12:26:30.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021109222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021119167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.157" endtime="20201112 12:26:30.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.166" endtime="20201112 12:26:30.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.861" endtime="20201112 12:26:30.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.859" endtime="20201112 12:26:30.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.173" level="INFO">${RESULT} = [{'time': 0.021119167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.945000000000787e-06, 'source_diff': 9.945000000000787e-06}, {'time': 0.021149958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:30.169" endtime="20201112 12:26:30.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:30.186" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:30.174" endtime="20201112 12:26:30.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.191" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:26:30.190" endtime="20201112 12:26:30.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.194" level="INFO">VALUE: [9.945000000000787e-06, 2.052699999999935e-05, 2.245899999999898e-05, 2.536100000000152e-05, 2.1472000000001545e-05, 1.956900000000053e-05, 2.343100000000084e-05, 2.5346999999998482e-05, 1.955500000000096e-05, 1.956900000000053e-05, 2.438899999999966e-05, 1.9597999999999144e-05, 2.5333999999998386e-05, 2.340299999999823e-05, 2.343100000000084e-05, 2.1527999999999825e-05, 2.5318999999999342e-05, 1.95830000000001e-05, 2.1500000000000685e-05, 2.058299999999763e-05, 2.5334000000001855e-05, 2.1500000000000685e-05, 2.4304999999998772e-05, 1.9583999999999574e-05, 2.3444000000000936e-05, 2.4348000000000425e-05, 2.5360999999998052e-05, 2.336099999999952e-05, 1.955500000000096e-05, 2.0556000000001434e-05, 2.438899999999966e-05, 2.5348000000001425e-05, 2.5304999999999772e-05, 2.534700000000195e-05, 1.959699999999967e-05, 2.5318999999999342e-05, 2.0556000000001434e-05, 2.54169999999998e-05, 2.0514000000002724e-05, 2.2348000000001894e-05, 2.152700000000035e-05, 2.4346999999997482e-05, 2.054100000000239e-05, 2.6249999999998497e-05, 2.1514000000000255e-05, 2.341700000000127e-05, 2.436100000000052e-05, 2.3387999999999187e-05, 1.962499999999881e-05, 2.0555999999997965e-05]</msg>
<status status="PASS" starttime="20201112 12:26:30.192" endtime="20201112 12:26:30.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.187" endtime="20201112 12:26:30.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.197" endtime="20201112 12:26:30.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.201" endtime="20201112 12:26:30.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.199" endtime="20201112 12:26:30.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.196" endtime="20201112 12:26:30.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.822" endtime="20201112 12:26:30.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.821" endtime="20201112 12:26:30.222"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.231" endtime="20201112 12:26:30.247"></status>
</kw>
<msg timestamp="20201112 12:26:30.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.229" endtime="20201112 12:26:30.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.249" endtime="20201112 12:26:30.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.252" endtime="20201112 12:26:30.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.227" endtime="20201112 12:26:30.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.225" endtime="20201112 12:26:30.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.262" endtime="20201112 12:26:30.549"></status>
</kw>
<msg timestamp="20201112 12:26:30.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.261" endtime="20201112 12:26:30.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.553" endtime="20201112 12:26:30.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.562" endtime="20201112 12:26:30.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.258" endtime="20201112 12:26:30.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.256" endtime="20201112 12:26:30.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.569" level="INFO">${RESULT} = [{'time': 0.022070403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0985999999997553e-05, 'source_diff': 1.0985999999997553e-05}, {'time': 0.022101139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:30.565" endtime="20201112 12:26:30.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:30.583" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:30.570" endtime="20201112 12:26:30.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.587" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:26:30.586" endtime="20201112 12:26:30.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.590" level="INFO">VALUE: [1.0985999999997553e-05, 2.0569999999997535e-05, 2.3401999999998757e-05, 2.62369999999984e-05, 2.2430000000000366e-05, 1.959699999999967e-05, 2.5318999999999342e-05, 2.0527999999998825e-05, 1.95830000000001e-05, 2.2514000000001255e-05, 2.1471999999998076e-05, 2.3429999999997897e-05, 2.151300000000078e-05, 2.148700000000059e-05, 2.340299999999823e-05, 1.9612000000002183e-05, 2.1471999999998076e-05, 2.1527999999999825e-05, 2.6292000000000676e-05, 2.0583999999997105e-05, 2.438899999999966e-05, 2.2471999999999076e-05, 1.861100000000171e-05, 2.058299999999763e-05, 2.055500000000196e-05, 2.437500000000009e-05, 2.0514000000002724e-05, 2.4332999999997912e-05, 2.2471999999999076e-05, 2.5348000000001425e-05, 2.0513999999999255e-05, 2.437500000000009e-05, 2.1500000000000685e-05, 2.241700000000027e-05, 2.5346999999998482e-05, 2.0541999999998395e-05, 2.056899999999806e-05, 2.341700000000127e-05, 2.436100000000052e-05, 2.6277000000001632e-05, 2.4346999999997482e-05, 2.3415999999998327e-05, 2.2499999999998216e-05, 2.2472000000002545e-05, 2.438899999999966e-05, 2.2457999999999506e-05, 2.3401999999998757e-05, 2.5291000000000202e-05, 1.955500000000096e-05, 2.5264000000000536e-05]</msg>
<status status="PASS" starttime="20201112 12:26:30.589" endtime="20201112 12:26:30.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.584" endtime="20201112 12:26:30.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.594" endtime="20201112 12:26:30.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.597" endtime="20201112 12:26:30.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.596" endtime="20201112 12:26:30.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.592" endtime="20201112 12:26:30.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.223" endtime="20201112 12:26:30.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.222" endtime="20201112 12:26:30.618"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.627" endtime="20201112 12:26:30.644"></status>
</kw>
<msg timestamp="20201112 12:26:30.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.626" endtime="20201112 12:26:30.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.646" endtime="20201112 12:26:30.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.648" endtime="20201112 12:26:30.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.623" endtime="20201112 12:26:30.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.621" endtime="20201112 12:26:30.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.659" endtime="20201112 12:26:30.945"></status>
</kw>
<msg timestamp="20201112 12:26:30.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.657" endtime="20201112 12:26:30.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.949" endtime="20201112 12:26:30.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.957" endtime="20201112 12:26:30.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.654" endtime="20201112 12:26:30.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.653" endtime="20201112 12:26:30.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.964" level="INFO">${RESULT} = [{'time': 0.022564264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.818100000000212e-05, 'source_diff': 2.818100000000212e-05}, {'time': 0.022594861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:30.961" endtime="20201112 12:26:30.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:30.978" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:30.965" endtime="20201112 12:26:30.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.983" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:26:30.982" endtime="20201112 12:26:30.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.986" level="INFO">VALUE: [2.818100000000212e-05, 2.533300000000238e-05, 2.4334000000000855e-05, 2.4388000000000187e-05, 2.1527999999999825e-05, 2.337500000000256e-05, 2.1486000000001115e-05, 1.9598000000002613e-05, 2.5348000000001425e-05, 2.0570000000001004e-05, 2.437499999999662e-05, 2.340299999999823e-05, 2.438899999999966e-05, 2.436100000000052e-05, 2.5306000000002715e-05, 2.5318999999999342e-05, 2.247299999999855e-05, 2.340299999999823e-05, 2.1457999999998506e-05, 2.344500000000041e-05, 2.337499999999909e-05, 2.5318999999999342e-05, 2.2430000000000366e-05, 2.34169999999978e-05, 1.959700000000314e-05, 2.1500000000000685e-05, 2.533300000000238e-05, 1.959699999999967e-05, 2.4332999999997912e-05, 1.961099999999924e-05, 2.5304999999999772e-05, 2.243099999999984e-05, 2.341700000000127e-05, 2.343099999999737e-05, 2.337499999999909e-05, 2.437500000000009e-05, 2.2485999999998646e-05, 2.5306000000002715e-05, 2.0499999999999685e-05, 2.0542000000001864e-05, 2.438899999999966e-05, 2.5332999999998912e-05, 2.5332999999998912e-05, 2.5278000000000106e-05, 2.237500000000156e-05, 2.055500000000196e-05, 2.5348000000001425e-05, 2.6250000000001966e-05, 2.341700000000127e-05, 2.5346999999998482e-05]</msg>
<status status="PASS" starttime="20201112 12:26:30.984" endtime="20201112 12:26:30.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.979" endtime="20201112 12:26:30.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.989" endtime="20201112 12:26:30.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.993" endtime="20201112 12:26:31.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.991" endtime="20201112 12:26:31.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.988" endtime="20201112 12:26:31.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.619" endtime="20201112 12:26:31.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.619" endtime="20201112 12:26:31.014"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.023" endtime="20201112 12:26:31.042"></status>
</kw>
<msg timestamp="20201112 12:26:31.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.021" endtime="20201112 12:26:31.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.044" endtime="20201112 12:26:31.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.047" endtime="20201112 12:26:31.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.019" endtime="20201112 12:26:31.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.017" endtime="20201112 12:26:31.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.057" endtime="20201112 12:26:31.345"></status>
</kw>
<msg timestamp="20201112 12:26:31.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023953681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023973278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.056" endtime="20201112 12:26:31.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023953681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023973278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.349" endtime="20201112 12:26:31.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.358" endtime="20201112 12:26:31.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.053" endtime="20201112 12:26:31.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.051" endtime="20201112 12:26:31.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.365" level="INFO">${RESULT} = [{'time': 0.023973278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.959699999999967e-05, 'source_diff': 1.959699999999967e-05}, {'time': 0.024003972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:31.361" endtime="20201112 12:26:31.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:31.380" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:31.366" endtime="20201112 12:26:31.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.384" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:26:31.383" endtime="20201112 12:26:31.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.387" level="INFO">VALUE: [1.959699999999967e-05, 2.437500000000009e-05, 2.340299999999823e-05, 2.437499999999662e-05, 2.2485999999998646e-05, 2.2471999999999076e-05, 2.0556000000001434e-05, 2.340299999999823e-05, 2.2458000000002976e-05, 2.1527999999999825e-05, 2.247299999999855e-05, 1.959699999999967e-05, 2.6319999999999816e-05, 1.955500000000096e-05, 2.436100000000052e-05, 2.152700000000035e-05, 2.2471999999999076e-05, 2.059700000000067e-05, 2.2485999999998646e-05, 2.2485999999998646e-05, 1.962500000000228e-05, 2.334699999999995e-05, 2.05830000000011e-05, 1.8666000000000516e-05, 1.959700000000314e-05, 2.145900000000145e-05, 2.2485999999998646e-05, 2.4401999999999757e-05, 2.151300000000078e-05, 2.1471999999998076e-05, 2.338900000000213e-05, 2.1556000000002434e-05, 2.341700000000127e-05, 2.2499999999998216e-05, 2.5332999999998912e-05, 2.34030000000017e-05, 1.9556000000000434e-05, 2.438899999999966e-05, 2.6306000000000246e-05, 2.0556000000001434e-05, 2.441700000000227e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.3430000000001366e-05, 2.1486000000001115e-05, 2.3444000000000936e-05, 2.2443999999999936e-05, 2.2528000000000825e-05, 2.540300000000023e-05, 1.954100000000139e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.386" endtime="20201112 12:26:31.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.381" endtime="20201112 12:26:31.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.395" endtime="20201112 12:26:31.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.399" endtime="20201112 12:26:31.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.397" endtime="20201112 12:26:31.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.393" endtime="20201112 12:26:31.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.015" endtime="20201112 12:26:31.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.014" endtime="20201112 12:26:31.420"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.429" endtime="20201112 12:26:31.449"></status>
</kw>
<msg timestamp="20201112 12:26:31.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.428" endtime="20201112 12:26:31.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.450" endtime="20201112 12:26:31.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.453" endtime="20201112 12:26:31.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.425" endtime="20201112 12:26:31.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.422" endtime="20201112 12:26:31.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.463" endtime="20201112 12:26:31.750"></status>
</kw>
<msg timestamp="20201112 12:26:31.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024827458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024863361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.462" endtime="20201112 12:26:31.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024827458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024863361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.755" endtime="20201112 12:26:31.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.763" endtime="20201112 12:26:31.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.459" endtime="20201112 12:26:31.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.457" endtime="20201112 12:26:31.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.770" level="INFO">${RESULT} = [{'time': 0.024863361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5903000000000324e-05, 'source_diff': 3.5903000000000324e-05}, {'time': 0.024893444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:31.767" endtime="20201112 12:26:31.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:31.784" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:31.771" endtime="20201112 12:26:31.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.789" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:26:31.788" endtime="20201112 12:26:31.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.791" level="INFO">VALUE: [3.5903000000000324e-05, 2.4388000000000187e-05, 1.961099999999924e-05, 2.536100000000152e-05, 2.2472000000002545e-05, 2.0555999999997965e-05, 2.5332999999998912e-05, 2.1556000000002434e-05, 2.3415999999998327e-05, 1.962499999999881e-05, 2.430500000000224e-05, 1.954100000000139e-05, 2.152700000000035e-05, 2.055499999999849e-05, 1.962500000000228e-05, 1.966700000000099e-05, 2.061100000000024e-05, 2.054099999999892e-05, 2.536100000000152e-05, 1.959699999999967e-05, 2.1472000000001545e-05, 2.537499999999762e-05, 2.1527999999999825e-05, 2.245899999999898e-05, 2.055500000000196e-05, 2.2486000000002115e-05, 2.438899999999966e-05, 2.1527999999999825e-05, 2.1514000000000255e-05, 2.054100000000239e-05, 2.438899999999966e-05, 2.056900000000153e-05, 2.151300000000078e-05, 2.5346999999998482e-05, 2.154099999999992e-05, 2.247300000000202e-05, 2.44030000000027e-05, 2.344500000000041e-05, 2.440299999999923e-05, 2.1500000000000685e-05, 2.5319999999998816e-05, 2.055500000000196e-05, 2.5362000000000995e-05, 2.1527999999999825e-05, 2.154099999999992e-05, 2.341700000000127e-05, 2.4318999999998342e-05, 1.959699999999967e-05, 1.9542000000000864e-05, 1.961099999999924e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.790" endtime="20201112 12:26:31.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.785" endtime="20201112 12:26:31.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.795" endtime="20201112 12:26:31.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.799" endtime="20201112 12:26:31.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.797" endtime="20201112 12:26:31.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.793" endtime="20201112 12:26:31.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.421" endtime="20201112 12:26:31.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.420" endtime="20201112 12:26:31.820"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.829" endtime="20201112 12:26:31.845"></status>
</kw>
<msg timestamp="20201112 12:26:31.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.827" endtime="20201112 12:26:31.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.847" endtime="20201112 12:26:31.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.849" endtime="20201112 12:26:31.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.824" endtime="20201112 12:26:31.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.822" endtime="20201112 12:26:31.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.860" endtime="20201112 12:26:32.146"></status>
</kw>
<msg timestamp="20201112 12:26:32.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.858" endtime="20201112 12:26:32.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.151" endtime="20201112 12:26:32.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.159" endtime="20201112 12:26:32.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.856" endtime="20201112 12:26:32.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.854" endtime="20201112 12:26:32.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.166" level="INFO">${RESULT} = [{'time': 0.021968722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0124999999998903e-05, 'source_diff': 3.0124999999998903e-05}, {'time': 0.02199975, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:32.163" endtime="20201112 12:26:32.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:32.180" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:32.167" endtime="20201112 12:26:32.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.185" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:26:32.184" endtime="20201112 12:26:32.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.187" level="INFO">VALUE: [3.0124999999998903e-05, 2.440299999999923e-05, 2.243099999999984e-05, 2.343100000000084e-05, 2.2485999999998646e-05, 2.5332999999998912e-05, 1.961099999999924e-05, 2.343100000000084e-05, 2.437500000000009e-05, 2.1527999999999825e-05, 2.2485999999998646e-05, 2.438900000000313e-05, 2.533300000000238e-05, 2.0541999999998395e-05, 1.954100000000139e-05, 2.245900000000245e-05, 1.962500000000228e-05, 2.0556000000001434e-05, 2.534700000000195e-05, 2.2472000000002545e-05, 2.1514000000000255e-05, 2.436100000000052e-05, 2.056900000000153e-05, 2.244499999999941e-05, 2.5333999999998386e-05, 2.1500000000000685e-05, 2.2471999999999076e-05, 1.9570000000000004e-05, 2.436100000000052e-05, 2.5304999999999772e-05, 2.44169999999988e-05, 2.056899999999806e-05, 2.54169999999998e-05, 1.9597999999999144e-05, 1.95830000000001e-05, 2.3430000000001366e-05, 2.440299999999923e-05, 2.2457999999999506e-05, 2.336100000000299e-05, 2.244500000000288e-05, 2.152700000000035e-05, 1.965300000000142e-05, 2.3444000000000936e-05, 2.340299999999823e-05, 2.343100000000084e-05, 1.962499999999881e-05, 2.2500000000001685e-05, 2.1527999999999825e-05, 2.538900000000066e-05, 2.343100000000084e-05]</msg>
<status status="PASS" starttime="20201112 12:26:32.186" endtime="20201112 12:26:32.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.181" endtime="20201112 12:26:32.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.191" endtime="20201112 12:26:32.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.195" endtime="20201112 12:26:32.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.193" endtime="20201112 12:26:32.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.189" endtime="20201112 12:26:32.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.821" endtime="20201112 12:26:32.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.820" endtime="20201112 12:26:32.216"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.225" endtime="20201112 12:26:32.243"></status>
</kw>
<msg timestamp="20201112 12:26:32.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.223" endtime="20201112 12:26:32.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.245" endtime="20201112 12:26:32.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.248" endtime="20201112 12:26:32.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.221" endtime="20201112 12:26:32.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.218" endtime="20201112 12:26:32.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.258" endtime="20201112 12:26:32.544"></status>
</kw>
<msg timestamp="20201112 12:26:32.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.256" endtime="20201112 12:26:32.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.548" endtime="20201112 12:26:32.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.557" endtime="20201112 12:26:32.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.254" endtime="20201112 12:26:32.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.252" endtime="20201112 12:26:32.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.564" level="INFO">${RESULT} = [{'time': 0.022768611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.490300000000279e-05, 'source_diff': 3.490300000000279e-05}, {'time': 0.022799014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:32.560" endtime="20201112 12:26:32.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:32.577" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:32.565" endtime="20201112 12:26:32.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.582" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:26:32.581" endtime="20201112 12:26:32.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.585" level="INFO">VALUE: [3.490300000000279e-05, 2.241700000000027e-05, 2.5277000000000632e-05, 2.440299999999923e-05, 2.438899999999966e-05, 2.0541999999998395e-05, 2.537500000000109e-05, 1.955500000000096e-05, 2.437500000000009e-05, 2.1500000000000685e-05, 2.056900000000153e-05, 2.4401999999999757e-05, 2.5291999999999676e-05, 2.344500000000041e-05, 2.1541999999999395e-05, 2.0514000000002724e-05, 2.2416000000000796e-05, 2.2485999999998646e-05, 2.3485999999999646e-05, 2.1500000000000685e-05, 2.6291000000001202e-05, 2.440299999999923e-05, 2.154099999999992e-05, 2.247299999999855e-05, 2.0513999999999255e-05, 2.1597999999997675e-05, 2.44030000000027e-05, 1.9597999999999144e-05, 2.0584000000000574e-05, 2.3472000000000076e-05, 2.4333999999997385e-05, 2.1471999999998076e-05, 1.959700000000314e-05, 2.344500000000041e-05, 1.963899999999838e-05, 2.055500000000196e-05, 2.341700000000127e-05, 2.5278000000000106e-05, 2.5278000000000106e-05, 2.147299999999755e-05, 2.5360999999998052e-05, 2.438899999999966e-05, 2.2485999999998646e-05, 1.963900000000185e-05, 2.538900000000066e-05, 2.1541999999999395e-05, 2.436100000000052e-05, 2.438899999999966e-05, 2.1527999999999825e-05, 2.343100000000084e-05]</msg>
<status status="PASS" starttime="20201112 12:26:32.583" endtime="20201112 12:26:32.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.578" endtime="20201112 12:26:32.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.588" endtime="20201112 12:26:32.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.592" endtime="20201112 12:26:32.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.590" endtime="20201112 12:26:32.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.587" endtime="20201112 12:26:32.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.217" endtime="20201112 12:26:32.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.216" endtime="20201112 12:26:32.613"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.622" endtime="20201112 12:26:32.639"></status>
</kw>
<msg timestamp="20201112 12:26:32.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.620" endtime="20201112 12:26:32.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.640" endtime="20201112 12:26:32.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.643" endtime="20201112 12:26:32.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.618" endtime="20201112 12:26:32.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.616" endtime="20201112 12:26:32.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.653" endtime="20201112 12:26:32.939"></status>
</kw>
<msg timestamp="20201112 12:26:32.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.652" endtime="20201112 12:26:32.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.944" endtime="20201112 12:26:32.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.952" endtime="20201112 12:26:32.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.649" endtime="20201112 12:26:32.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.647" endtime="20201112 12:26:32.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.959" level="INFO">${RESULT} = [{'time': 0.022499569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.152000000000853e-06, 'source_diff': 8.152000000000853e-06}, {'time': 0.022530111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:32.955" endtime="20201112 12:26:32.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:32.974" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:32.960" endtime="20201112 12:26:32.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.978" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:26:32.977" endtime="20201112 12:26:32.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.981" level="INFO">VALUE: [8.152000000000853e-06, 2.05969999999972e-05, 2.061100000000024e-05, 2.1527999999999825e-05, 2.434700000000095e-05, 2.061100000000024e-05, 2.152700000000035e-05, 2.436099999999705e-05, 2.34169999999978e-05, 2.436100000000052e-05, 2.0514000000002724e-05, 2.055499999999849e-05, 2.0570000000001004e-05, 2.5346999999998482e-05, 2.1500000000000685e-05, 2.5304999999999772e-05, 2.436100000000052e-05, 2.2416000000000796e-05, 2.1458000000001975e-05, 2.3401999999998757e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.2457999999999506e-05, 2.1514000000000255e-05, 2.5320000000002285e-05, 2.245899999999898e-05, 2.1527999999999825e-05, 2.1486000000001115e-05, 2.436100000000052e-05, 2.5319999999998816e-05, 1.961100000000271e-05, 2.1514000000000255e-05, 1.959699999999967e-05, 2.338899999999866e-05, 2.5291000000000202e-05, 2.245899999999898e-05, 2.1486000000001115e-05, 2.0555999999997965e-05, 2.538900000000066e-05, 2.2499999999998216e-05, 2.3457999999997037e-05, 1.9583999999999574e-05, 2.045900000000045e-05, 2.3443999999997467e-05, 2.0584000000000574e-05, 2.3415999999998327e-05, 2.5346999999998482e-05, 2.1541999999999395e-05, 2.1555999999998965e-05, 2.338900000000213e-05]</msg>
<status status="PASS" starttime="20201112 12:26:32.980" endtime="20201112 12:26:32.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.975" endtime="20201112 12:26:32.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.986" endtime="20201112 12:26:32.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.990" endtime="20201112 12:26:33.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.989" endtime="20201112 12:26:33.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.983" endtime="20201112 12:26:33.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.614" endtime="20201112 12:26:33.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.613" endtime="20201112 12:26:33.011"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.020" endtime="20201112 12:26:33.040"></status>
</kw>
<msg timestamp="20201112 12:26:33.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.019" endtime="20201112 12:26:33.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.041" endtime="20201112 12:26:33.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.044" endtime="20201112 12:26:33.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.016" endtime="20201112 12:26:33.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.014" endtime="20201112 12:26:33.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.054" endtime="20201112 12:26:33.341"></status>
</kw>
<msg timestamp="20201112 12:26:33.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021072792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021100972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.053" endtime="20201112 12:26:33.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021072792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021100972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.345" endtime="20201112 12:26:33.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.353" endtime="20201112 12:26:33.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.050" endtime="20201112 12:26:33.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.048" endtime="20201112 12:26:33.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.360" level="INFO">${RESULT} = [{'time': 0.021100972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8179999999999178e-05, 'source_diff': 2.8179999999999178e-05}, {'time': 0.021131319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:33.357" endtime="20201112 12:26:33.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:33.373" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:33.361" endtime="20201112 12:26:33.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.378" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:26:33.377" endtime="20201112 12:26:33.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.381" level="INFO">VALUE: [2.8179999999999178e-05, 2.152700000000035e-05, 2.5360999999998052e-05, 2.243099999999984e-05, 2.1471999999998076e-05, 2.338899999999866e-05, 2.1500000000000685e-05, 2.243099999999984e-05, 2.4361999999999995e-05, 2.247300000000202e-05, 2.5360999999998052e-05, 2.4401999999999757e-05, 1.955500000000096e-05, 2.2457999999999506e-05, 2.3444000000000936e-05, 2.05830000000011e-05, 2.2485999999998646e-05, 2.1527999999999825e-05, 2.255500000000049e-05, 1.961099999999924e-05, 1.9611999999998714e-05, 2.1514000000000255e-05, 2.438899999999966e-05, 2.5318999999999342e-05, 1.959699999999967e-05, 1.955500000000096e-05, 2.343100000000084e-05, 1.962500000000228e-05, 2.056899999999806e-05, 2.2485999999998646e-05, 2.2513999999997786e-05, 2.343100000000084e-05, 2.3444000000000936e-05, 2.1527999999999825e-05, 2.434700000000095e-05, 2.245899999999898e-05, 1.963899999999838e-05, 2.3444000000000936e-05, 2.245900000000245e-05, 2.338899999999866e-05, 2.2485999999998646e-05, 2.0583999999997105e-05, 2.637500000000209e-05, 2.440299999999923e-05, 2.341700000000127e-05, 2.0556000000001434e-05, 1.95830000000001e-05, 2.151300000000078e-05, 2.5320000000002285e-05, 2.438900000000313e-05]</msg>
<status status="PASS" starttime="20201112 12:26:33.379" endtime="20201112 12:26:33.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.374" endtime="20201112 12:26:33.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.384" endtime="20201112 12:26:33.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.388" endtime="20201112 12:26:33.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.386" endtime="20201112 12:26:33.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.382" endtime="20201112 12:26:33.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.012" endtime="20201112 12:26:33.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.012" endtime="20201112 12:26:33.409"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.418" endtime="20201112 12:26:33.433"></status>
</kw>
<msg timestamp="20201112 12:26:33.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.416" endtime="20201112 12:26:33.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.435" endtime="20201112 12:26:33.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.437" endtime="20201112 12:26:33.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.414" endtime="20201112 12:26:33.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.412" endtime="20201112 12:26:33.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.448" endtime="20201112 12:26:33.754"></status>
</kw>
<msg timestamp="20201112 12:26:33.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020685944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020709375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.446" endtime="20201112 12:26:33.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020685944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020709375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.758" endtime="20201112 12:26:33.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.766" endtime="20201112 12:26:33.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.443" endtime="20201112 12:26:33.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.442" endtime="20201112 12:26:33.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.773" level="INFO">${RESULT} = [{'time': 0.020709375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.343099999999737e-05, 'source_diff': 2.343099999999737e-05}, {'time': 0.020739583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:33.769" endtime="20201112 12:26:33.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:33.786" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:33.774" endtime="20201112 12:26:33.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.791" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:26:33.790" endtime="20201112 12:26:33.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.794" level="INFO">VALUE: [2.343099999999737e-05, 1.962499999999881e-05, 2.244499999999941e-05, 2.5304999999999772e-05, 2.241700000000027e-05, 2.343100000000084e-05, 2.3444000000000936e-05, 2.5416000000000327e-05, 2.055500000000196e-05, 2.534700000000195e-05, 2.440299999999923e-05, 1.9651999999998476e-05, 2.1514000000000255e-05, 2.0555999999997965e-05, 2.2527999999997356e-05, 2.056899999999806e-05, 2.147300000000102e-05, 2.2458000000002976e-05, 2.055500000000196e-05, 2.154099999999992e-05, 2.2485999999998646e-05, 2.438899999999966e-05, 2.1500000000000685e-05, 2.2471999999999076e-05, 2.3458000000000506e-05, 2.2485999999998646e-05, 2.05969999999972e-05, 2.3415999999998327e-05, 2.1514000000000255e-05, 2.2513999999997786e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 1.9542000000000864e-05, 2.3415999999998327e-05, 2.1500000000000685e-05, 2.6292000000000676e-05, 1.966700000000099e-05, 2.343100000000084e-05, 2.1513999999996786e-05, 2.2513999999997786e-05, 2.0527999999998825e-05, 2.436100000000052e-05, 2.1514000000000255e-05, 2.6319999999999816e-05, 2.1555999999998965e-05, 2.0528000000002294e-05, 1.95830000000001e-05, 2.1472000000001545e-05, 2.3485999999999646e-05, 2.343100000000084e-05]</msg>
<status status="PASS" starttime="20201112 12:26:33.792" endtime="20201112 12:26:33.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.787" endtime="20201112 12:26:33.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.798" endtime="20201112 12:26:33.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.802" endtime="20201112 12:26:33.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.800" endtime="20201112 12:26:33.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.796" endtime="20201112 12:26:33.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.410" endtime="20201112 12:26:33.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.409" endtime="20201112 12:26:33.823"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.832" endtime="20201112 12:26:33.850"></status>
</kw>
<msg timestamp="20201112 12:26:33.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.830" endtime="20201112 12:26:33.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.851" endtime="20201112 12:26:33.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.854" endtime="20201112 12:26:33.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.827" endtime="20201112 12:26:33.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.825" endtime="20201112 12:26:33.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.864" endtime="20201112 12:26:34.150"></status>
</kw>
<msg timestamp="20201112 12:26:34.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023412417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023429083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.862" endtime="20201112 12:26:34.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023412417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023429083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.154" endtime="20201112 12:26:34.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.163" endtime="20201112 12:26:34.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.860" endtime="20201112 12:26:34.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.858" endtime="20201112 12:26:34.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.170" level="INFO">${RESULT} = [{'time': 0.023429083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6665999999998515e-05, 'source_diff': 1.6665999999998515e-05}, {'time': 0.023459514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:34.167" endtime="20201112 12:26:34.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:34.183" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:34.171" endtime="20201112 12:26:34.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.188" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:26:34.187" endtime="20201112 12:26:34.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.190" level="INFO">VALUE: [1.6665999999998515e-05, 1.963900000000185e-05, 2.1527999999999825e-05, 2.143099999999884e-05, 2.055499999999849e-05, 2.338900000000213e-05, 2.052699999999935e-05, 2.344500000000041e-05, 2.05830000000011e-05, 2.2485999999998646e-05, 2.2486000000002115e-05, 2.440299999999923e-05, 2.344500000000041e-05, 2.5306000000002715e-05, 1.954099999999792e-05, 2.5305999999999246e-05, 2.1513999999996786e-05, 1.961100000000271e-05, 2.436100000000052e-05, 2.2416000000000796e-05, 2.047300000000002e-05, 2.344500000000041e-05, 2.34030000000017e-05, 2.344500000000041e-05, 2.438899999999966e-05, 2.437500000000009e-05, 2.0513999999999255e-05, 2.154099999999992e-05, 2.3402000000002227e-05, 1.962499999999881e-05, 2.436099999999705e-05, 2.056900000000153e-05, 1.959699999999967e-05, 1.956900000000053e-05, 2.437500000000009e-05, 2.536100000000152e-05, 1.956899999999706e-05, 2.34030000000017e-05, 2.055499999999849e-05, 2.438899999999966e-05, 2.6319000000000342e-05, 2.3333999999999855e-05, 2.1485999999997646e-05, 2.056900000000153e-05, 1.9611999999998714e-05, 2.2485999999998646e-05, 2.2457999999999506e-05, 2.243099999999984e-05, 2.4332999999997912e-05, 2.247299999999855e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.189" endtime="20201112 12:26:34.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.184" endtime="20201112 12:26:34.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.194" endtime="20201112 12:26:34.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.198" endtime="20201112 12:26:34.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.196" endtime="20201112 12:26:34.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.192" endtime="20201112 12:26:34.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.824" endtime="20201112 12:26:34.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.823" endtime="20201112 12:26:34.219"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.227" endtime="20201112 12:26:34.250"></status>
</kw>
<msg timestamp="20201112 12:26:34.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.226" endtime="20201112 12:26:34.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.252" endtime="20201112 12:26:34.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.254" endtime="20201112 12:26:34.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.223" endtime="20201112 12:26:34.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.221" endtime="20201112 12:26:34.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.264" endtime="20201112 12:26:34.549"></status>
</kw>
<msg timestamp="20201112 12:26:34.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024584917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024593972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.263" endtime="20201112 12:26:34.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024584917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024593972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.554" endtime="20201112 12:26:34.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.562" endtime="20201112 12:26:34.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.260" endtime="20201112 12:26:34.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.259" endtime="20201112 12:26:34.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.568" level="INFO">${RESULT} = [{'time': 0.024593972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.054999999997398e-06, 'source_diff': 9.054999999997398e-06}, {'time': 0.024624542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:34.565" endtime="20201112 12:26:34.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:34.583" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:34.569" endtime="20201112 12:26:34.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.588" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:26:34.587" endtime="20201112 12:26:34.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.590" level="INFO">VALUE: [9.054999999997398e-06, 1.9570000000000004e-05, 2.2486000000002115e-05, 2.056899999999806e-05, 2.5346999999998482e-05, 2.061100000000024e-05, 2.343100000000084e-05, 2.436100000000052e-05, 1.95830000000001e-05, 1.962499999999881e-05, 2.248699999999812e-05, 2.1500000000000685e-05, 2.4332999999997912e-05, 1.9570000000000004e-05, 2.3444000000000936e-05, 2.344500000000041e-05, 2.2513999999997786e-05, 2.440299999999923e-05, 2.5305999999999246e-05, 2.1486000000001115e-05, 1.862499999999781e-05, 2.1514000000000255e-05, 2.241700000000027e-05, 2.148700000000059e-05, 2.2430000000000366e-05, 1.961099999999924e-05, 2.3416000000001796e-05, 2.1485999999997646e-05, 2.054099999999892e-05, 2.5318999999999342e-05, 2.245899999999898e-05, 2.061100000000024e-05, 2.5360999999998052e-05, 2.0527999999998825e-05, 2.338900000000213e-05, 2.5318999999999342e-05, 2.5346999999998482e-05, 2.055499999999849e-05, 2.436100000000052e-05, 2.6263999999998067e-05, 2.436099999999705e-05, 2.2472000000002545e-05, 2.3430000000001366e-05, 2.0542000000001864e-05, 2.1485999999997646e-05, 1.956900000000053e-05, 2.534700000000195e-05, 2.437500000000009e-05, 2.2333999999998855e-05, 2.534700000000195e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.589" endtime="20201112 12:26:34.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.584" endtime="20201112 12:26:34.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.594" endtime="20201112 12:26:34.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.597" endtime="20201112 12:26:34.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.596" endtime="20201112 12:26:34.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.592" endtime="20201112 12:26:34.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.219" endtime="20201112 12:26:34.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.219" endtime="20201112 12:26:34.618"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.627" endtime="20201112 12:26:34.643"></status>
</kw>
<msg timestamp="20201112 12:26:34.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.625" endtime="20201112 12:26:34.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.645" endtime="20201112 12:26:34.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.647" endtime="20201112 12:26:34.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.622" endtime="20201112 12:26:34.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.620" endtime="20201112 12:26:34.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.657" endtime="20201112 12:26:34.944"></status>
</kw>
<msg timestamp="20201112 12:26:34.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022005056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.656" endtime="20201112 12:26:34.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022005056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.948" endtime="20201112 12:26:34.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.956" endtime="20201112 12:26:34.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.653" endtime="20201112 12:26:34.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.651" endtime="20201112 12:26:34.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.963" level="INFO">${RESULT} = [{'time': 0.022005056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.72369999999994e-05, 'source_diff': 2.72369999999994e-05}, {'time': 0.022035819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:34.960" endtime="20201112 12:26:34.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:34.976" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:34.964" endtime="20201112 12:26:34.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.981" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:26:34.980" endtime="20201112 12:26:34.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.983" level="INFO">VALUE: [2.72369999999994e-05, 2.5291000000000202e-05, 2.1500000000000685e-05, 2.1541999999999395e-05, 2.0611999999999714e-05, 2.0569999999997535e-05, 2.437500000000009e-05, 2.1486000000001115e-05, 2.6194000000000217e-05, 2.3458000000000506e-05, 2.1527999999999825e-05, 2.438899999999966e-05, 2.1486000000001115e-05, 2.0513999999999255e-05, 2.5319999999998816e-05, 2.5332999999998912e-05, 2.5332999999998912e-05, 2.440299999999923e-05, 2.4458000000001506e-05, 2.1527999999999825e-05, 2.438899999999966e-05, 2.438899999999966e-05, 2.1514000000000255e-05, 2.343100000000084e-05, 2.3415999999998327e-05, 2.440299999999923e-05, 1.959699999999967e-05, 2.2471999999999076e-05, 2.3430000000001366e-05, 2.4347999999996955e-05, 2.2443999999999936e-05, 2.2471999999999076e-05, 2.5360999999998052e-05, 2.4415999999999327e-05, 2.3415999999998327e-05, 2.3444000000000936e-05, 2.2430000000000366e-05, 2.4304999999998772e-05, 2.148700000000059e-05, 2.340299999999823e-05, 2.4361999999999995e-05, 2.2485999999998646e-05, 2.2485999999998646e-05, 2.6262999999998593e-05, 2.1514000000000255e-05, 2.2514000000001255e-05, 2.538900000000066e-05, 2.3443999999997467e-05, 2.34030000000017e-05, 2.144499999999841e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.982" endtime="20201112 12:26:34.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.977" endtime="20201112 12:26:34.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.987" endtime="20201112 12:26:34.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.991" endtime="20201112 12:26:35.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.989" endtime="20201112 12:26:35.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.985" endtime="20201112 12:26:35.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.619" endtime="20201112 12:26:35.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.618" endtime="20201112 12:26:35.012"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.020" endtime="20201112 12:26:35.036"></status>
</kw>
<msg timestamp="20201112 12:26:35.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.019" endtime="20201112 12:26:35.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.037" endtime="20201112 12:26:35.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.040" endtime="20201112 12:26:35.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.016" endtime="20201112 12:26:35.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.014" endtime="20201112 12:26:35.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.050" endtime="20201112 12:26:35.337"></status>
</kw>
<msg timestamp="20201112 12:26:35.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020328389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020363306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.049" endtime="20201112 12:26:35.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020328389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020363306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.341" endtime="20201112 12:26:35.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.350" endtime="20201112 12:26:35.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.046" endtime="20201112 12:26:35.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.044" endtime="20201112 12:26:35.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.356" level="INFO">${RESULT} = [{'time': 0.020363306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.491700000000236e-05, 'source_diff': 3.491700000000236e-05}, {'time': 0.020394514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:35.353" endtime="20201112 12:26:35.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:35.370" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:35.357" endtime="20201112 12:26:35.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.374" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:26:35.373" endtime="20201112 12:26:35.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.377" level="INFO">VALUE: [3.491700000000236e-05, 2.243099999999984e-05, 1.865300000000042e-05, 2.061100000000024e-05, 2.536100000000152e-05, 2.2457999999999506e-05, 1.961100000000271e-05, 2.3416000000001796e-05, 2.434700000000095e-05, 2.1486000000001115e-05, 2.055500000000196e-05, 2.056900000000153e-05, 2.433300000000138e-05, 2.24030000000007e-05, 2.5332999999998912e-05, 2.336099999999952e-05, 2.1514000000000255e-05, 2.2514000000001255e-05, 2.436100000000052e-05, 2.5278000000000106e-05, 2.536100000000152e-05, 2.247300000000202e-05, 2.2500000000001685e-05, 1.962499999999881e-05, 2.4388000000000187e-05, 2.2457999999999506e-05, 2.0513999999999255e-05, 2.1471999999998076e-05, 2.438899999999966e-05, 2.1514000000000255e-05, 2.1556000000002434e-05, 2.2457999999999506e-05, 2.1472000000001545e-05, 2.1527999999999825e-05, 2.056900000000153e-05, 2.4320000000001285e-05, 2.1527999999999825e-05, 2.2485999999998646e-05, 2.056899999999806e-05, 1.859700000000214e-05, 2.540300000000023e-05, 2.152700000000035e-05, 2.1514000000000255e-05, 2.34030000000017e-05, 2.055500000000196e-05, 2.1541999999999395e-05, 2.2499999999998216e-05, 2.440299999999923e-05, 2.2457999999999506e-05, 2.056899999999806e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.375" endtime="20201112 12:26:35.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.371" endtime="20201112 12:26:35.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.380" endtime="20201112 12:26:35.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.384" endtime="20201112 12:26:35.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.382" endtime="20201112 12:26:35.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.379" endtime="20201112 12:26:35.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.013" endtime="20201112 12:26:35.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.012" endtime="20201112 12:26:35.405"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.413" endtime="20201112 12:26:35.437"></status>
</kw>
<msg timestamp="20201112 12:26:35.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.412" endtime="20201112 12:26:35.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.439" endtime="20201112 12:26:35.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.441" endtime="20201112 12:26:35.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.409" endtime="20201112 12:26:35.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.407" endtime="20201112 12:26:35.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.451" endtime="20201112 12:26:35.738"></status>
</kw>
<msg timestamp="20201112 12:26:35.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024056361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024092194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.450" endtime="20201112 12:26:35.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024056361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024092194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.742" endtime="20201112 12:26:35.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.750" endtime="20201112 12:26:35.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.447" endtime="20201112 12:26:35.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.446" endtime="20201112 12:26:35.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.757" level="INFO">${RESULT} = [{'time': 0.024092194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5833000000002474e-05, 'source_diff': 3.5833000000002474e-05}, {'time': 0.024123014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:35.753" endtime="20201112 12:26:35.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:35.770" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:35.758" endtime="20201112 12:26:35.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.775" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:26:35.774" endtime="20201112 12:26:35.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.777" level="INFO">VALUE: [3.5833000000002474e-05, 2.1500000000000685e-05, 2.3429999999997897e-05, 2.438899999999966e-05, 2.4415999999999327e-05, 1.962499999999881e-05, 2.338899999999866e-05, 2.243099999999984e-05, 2.054099999999892e-05, 2.2486000000002115e-05, 2.162500000000081e-05, 2.536100000000152e-05, 2.2443999999999936e-05, 2.6235999999998927e-05, 2.4401999999999757e-05, 2.2499999999998216e-05, 1.958299999999663e-05, 2.344500000000041e-05, 2.1541999999999395e-05, 2.3458000000000506e-05, 2.5304999999999772e-05, 2.052699999999935e-05, 2.440299999999923e-05, 2.3444000000000936e-05, 2.5334000000001855e-05, 2.2457999999999506e-05, 2.062499999999981e-05, 2.3444000000000936e-05, 2.5278000000000106e-05, 1.959699999999967e-05, 2.1486000000001115e-05, 2.434700000000095e-05, 2.2485999999998646e-05, 2.6319000000000342e-05, 2.44169999999988e-05, 2.044500000000088e-05, 1.959699999999967e-05, 2.05830000000011e-05, 2.1472000000001545e-05, 1.9541999999997395e-05, 1.9541999999997395e-05, 2.3429999999997897e-05, 2.5305999999999246e-05, 2.531900000000281e-05, 1.95830000000001e-05, 2.2485999999998646e-05, 1.95830000000001e-05, 2.0528000000002294e-05, 2.05830000000011e-05, 2.2499999999998216e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.776" endtime="20201112 12:26:35.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.771" endtime="20201112 12:26:35.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.781" endtime="20201112 12:26:35.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.784" endtime="20201112 12:26:35.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.783" endtime="20201112 12:26:35.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.779" endtime="20201112 12:26:35.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.406" endtime="20201112 12:26:35.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.405" endtime="20201112 12:26:35.805"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.814" endtime="20201112 12:26:35.829"></status>
</kw>
<msg timestamp="20201112 12:26:35.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.812" endtime="20201112 12:26:35.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.831" endtime="20201112 12:26:35.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.833" endtime="20201112 12:26:35.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.810" endtime="20201112 12:26:35.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.808" endtime="20201112 12:26:35.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.843" endtime="20201112 12:26:36.131"></status>
</kw>
<msg timestamp="20201112 12:26:36.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020412819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020435333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.842" endtime="20201112 12:26:36.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020412819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020435333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.135" endtime="20201112 12:26:36.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.143" endtime="20201112 12:26:36.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.839" endtime="20201112 12:26:36.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.837" endtime="20201112 12:26:36.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:36.150" level="INFO">${RESULT} = [{'time': 0.020435333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2514000000001255e-05, 'source_diff': 2.2514000000001255e-05}, {'time': 0.020466194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:36.146" endtime="20201112 12:26:36.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:36.164" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:36.151" endtime="20201112 12:26:36.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.169" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:26:36.168" endtime="20201112 12:26:36.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.171" level="INFO">VALUE: [2.2514000000001255e-05, 2.2457999999999506e-05, 2.1486000000001115e-05, 2.0569999999997535e-05, 2.5318999999999342e-05, 2.3430000000001366e-05, 2.2513999999997786e-05, 2.437500000000009e-05, 2.2471999999999076e-05, 2.2500000000001685e-05, 2.0541999999998395e-05, 2.436100000000052e-05, 2.0513999999999255e-05, 2.0569999999997535e-05, 2.5333999999998386e-05, 2.1500000000000685e-05, 1.959699999999967e-05, 2.1570000000002004e-05, 2.056900000000153e-05, 2.4319999999997816e-05, 2.534700000000195e-05, 2.344500000000041e-05, 1.961099999999924e-05, 1.9583999999999574e-05, 2.5347999999997956e-05, 2.3443999999997467e-05, 2.247299999999855e-05, 2.054099999999892e-05, 2.531900000000281e-05, 2.1514000000000255e-05, 1.961099999999924e-05, 2.440299999999923e-05, 2.0570000000001004e-05, 2.3458000000000506e-05, 2.440299999999923e-05, 1.963900000000185e-05, 2.4318999999998342e-05, 2.2443999999999936e-05, 2.1514000000000255e-05, 2.0541999999998395e-05, 2.1514000000000255e-05, 2.055499999999849e-05, 2.534700000000195e-05, 2.5278000000000106e-05, 2.443100000000184e-05, 2.5360999999998052e-05, 2.1542000000002864e-05, 2.2485999999998646e-05, 2.244499999999941e-05, 2.2471999999999076e-05]</msg>
<status status="PASS" starttime="20201112 12:26:36.170" endtime="20201112 12:26:36.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.165" endtime="20201112 12:26:36.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.175" endtime="20201112 12:26:36.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.178" endtime="20201112 12:26:36.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.177" endtime="20201112 12:26:36.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.173" endtime="20201112 12:26:36.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.806" endtime="20201112 12:26:36.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.806" endtime="20201112 12:26:36.199"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.208" endtime="20201112 12:26:36.226"></status>
</kw>
<msg timestamp="20201112 12:26:36.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.206" endtime="20201112 12:26:36.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.227" endtime="20201112 12:26:36.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.230" endtime="20201112 12:26:36.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.204" endtime="20201112 12:26:36.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.202" endtime="20201112 12:26:36.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.240" endtime="20201112 12:26:36.525"></status>
</kw>
<msg timestamp="20201112 12:26:36.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023442069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023462639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.238" endtime="20201112 12:26:36.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023442069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023462639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.529" endtime="20201112 12:26:36.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.537" endtime="20201112 12:26:36.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.236" endtime="20201112 12:26:36.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.234" endtime="20201112 12:26:36.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:36.544" level="INFO">${RESULT} = [{'time': 0.023462639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0570000000001004e-05, 'source_diff': 2.0570000000001004e-05}, {'time': 0.023493333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:36.540" endtime="20201112 12:26:36.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:36.557" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:36.545" endtime="20201112 12:26:36.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.562" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:26:36.561" endtime="20201112 12:26:36.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.564" level="INFO">VALUE: [2.0570000000001004e-05, 1.959700000000314e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.043100000000131e-05, 2.05830000000011e-05, 2.440299999999923e-05, 1.965300000000142e-05, 1.961100000000271e-05, 2.5319999999998816e-05, 2.4332999999997912e-05, 1.959699999999967e-05, 2.345899999999998e-05, 2.341700000000127e-05, 2.2500000000001685e-05, 2.337500000000256e-05, 2.1500000000000685e-05, 2.1527999999999825e-05, 2.1527999999999825e-05, 1.968100000000056e-05, 1.961099999999924e-05, 2.5278000000000106e-05, 1.9542000000000864e-05, 2.056900000000153e-05, 2.0541999999998395e-05, 2.1458000000001975e-05, 2.152700000000035e-05, 2.341700000000127e-05, 2.4346999999997482e-05, 2.0570000000001004e-05, 1.95830000000001e-05, 2.5319999999998816e-05, 2.245899999999898e-05, 2.345899999999998e-05, 2.154099999999992e-05, 2.2443999999999936e-05, 2.337499999999909e-05, 2.6291000000001202e-05, 2.537500000000109e-05, 2.155499999999949e-05, 1.954099999999792e-05, 2.0499999999999685e-05, 2.434700000000095e-05, 2.056900000000153e-05, 2.054099999999892e-05, 2.338900000000213e-05, 2.6250000000001966e-05, 2.345899999999998e-05, 1.9597999999999144e-05, 2.5332999999998912e-05]</msg>
<status status="PASS" starttime="20201112 12:26:36.563" endtime="20201112 12:26:36.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.558" endtime="20201112 12:26:36.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.572" endtime="20201112 12:26:36.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.575" endtime="20201112 12:26:36.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.574" endtime="20201112 12:26:36.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.570" endtime="20201112 12:26:36.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.200" endtime="20201112 12:26:36.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.200" endtime="20201112 12:26:36.596"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.605" endtime="20201112 12:26:36.624"></status>
</kw>
<msg timestamp="20201112 12:26:36.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.603" endtime="20201112 12:26:36.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.626" endtime="20201112 12:26:36.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.628" endtime="20201112 12:26:36.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.601" endtime="20201112 12:26:36.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.599" endtime="20201112 12:26:36.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.639" endtime="20201112 12:26:36.925"></status>
</kw>
<msg timestamp="20201112 12:26:36.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023065972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023101819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.637" endtime="20201112 12:26:36.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023065972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023101819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.930" endtime="20201112 12:26:36.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.938" endtime="20201112 12:26:36.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.634" endtime="20201112 12:26:36.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.633" endtime="20201112 12:26:36.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:36.944" level="INFO">${RESULT} = [{'time': 0.023101819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5846999999998574e-05, 'source_diff': 3.5846999999998574e-05}, {'time': 0.023133, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:36.941" endtime="20201112 12:26:36.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:36.958" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:36.945" endtime="20201112 12:26:36.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.962" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:26:36.961" endtime="20201112 12:26:36.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.965" level="INFO">VALUE: [3.5846999999998574e-05, 2.1500000000000685e-05, 2.4388000000000187e-05, 2.245899999999898e-05, 2.3444000000000936e-05, 2.1514000000000255e-05, 2.147299999999755e-05, 2.5305999999999246e-05, 2.5332999999998912e-05, 2.056899999999806e-05, 2.243099999999984e-05, 2.5333999999998386e-05, 2.0513999999999255e-05, 1.961099999999924e-05, 2.2485999999998646e-05, 2.438899999999966e-05, 2.056899999999806e-05, 2.344500000000041e-05, 2.434700000000095e-05, 2.5278000000000106e-05, 2.1527999999999825e-05, 2.2471999999999076e-05, 2.052700000000282e-05, 2.237499999999809e-05, 2.056899999999806e-05, 2.6306000000000246e-05, 2.145900000000145e-05, 2.241700000000027e-05, 2.1527999999999825e-05, 2.534700000000195e-05, 2.44169999999988e-05, 2.5360999999998052e-05, 2.0556000000001434e-05, 2.244499999999941e-05, 2.3416000000001796e-05, 1.95830000000001e-05, 2.437500000000009e-05, 2.0527999999998825e-05, 2.2500000000001685e-05, 2.1514000000000255e-05, 2.1514000000000255e-05, 2.2485999999998646e-05, 2.4388000000000187e-05, 2.245900000000245e-05, 2.2430000000000366e-05, 2.4348000000000425e-05, 1.955500000000096e-05, 2.638899999999819e-05, 1.956900000000053e-05, 2.24030000000007e-05]</msg>
<status status="PASS" starttime="20201112 12:26:36.963" endtime="20201112 12:26:36.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.959" endtime="20201112 12:26:36.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.969" endtime="20201112 12:26:36.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.972" endtime="20201112 12:26:36.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.970" endtime="20201112 12:26:36.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.967" endtime="20201112 12:26:36.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.597" endtime="20201112 12:26:36.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.597" endtime="20201112 12:26:36.993"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.002" endtime="20201112 12:26:37.020"></status>
</kw>
<msg timestamp="20201112 12:26:37.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.000" endtime="20201112 12:26:37.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.022" endtime="20201112 12:26:37.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.024" endtime="20201112 12:26:37.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.997" endtime="20201112 12:26:37.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.995" endtime="20201112 12:26:37.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.035" endtime="20201112 12:26:37.319"></status>
</kw>
<msg timestamp="20201112 12:26:37.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023543611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.033" endtime="20201112 12:26:37.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023543611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.324" endtime="20201112 12:26:37.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.332" endtime="20201112 12:26:37.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.030" endtime="20201112 12:26:37.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.029" endtime="20201112 12:26:37.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.339" level="INFO">${RESULT} = [{'time': 0.023565167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1556000000002434e-05, 'source_diff': 2.1556000000002434e-05}, {'time': 0.023596264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:37.335" endtime="20201112 12:26:37.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:37.352" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:37.340" endtime="20201112 12:26:37.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.357" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:26:37.356" endtime="20201112 12:26:37.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.359" level="INFO">VALUE: [2.1556000000002434e-05, 2.437500000000009e-05, 2.056900000000153e-05, 2.1514000000000255e-05, 1.961099999999924e-05, 2.2485999999998646e-05, 2.6277000000001632e-05, 2.5332999999998912e-05, 2.2485999999998646e-05, 2.5332999999998912e-05, 1.962500000000228e-05, 2.6278000000001106e-05, 2.245899999999898e-05, 1.961099999999924e-05, 2.2471999999999076e-05, 2.5360999999998052e-05, 2.2485999999998646e-05, 2.5278000000000106e-05, 2.054100000000239e-05, 2.0513999999999255e-05, 2.6305000000000772e-05, 2.056900000000153e-05, 2.2499999999998216e-05, 1.962500000000228e-05, 2.5348000000001425e-05, 2.247300000000202e-05, 2.441700000000227e-05, 2.4361999999999995e-05, 2.5305999999999246e-05, 1.961099999999924e-05, 2.055500000000196e-05, 2.44030000000027e-05, 2.1541999999999395e-05, 2.0555999999997965e-05, 2.247299999999855e-05, 2.056900000000153e-05, 2.059700000000067e-05, 2.343099999999737e-05, 2.4415999999999327e-05, 2.531900000000281e-05, 2.2430000000000366e-05, 2.05969999999972e-05, 2.055499999999849e-05, 2.1500000000000685e-05, 2.2443999999999936e-05, 2.438899999999966e-05, 2.1555999999998965e-05, 2.241700000000027e-05, 2.2458000000002976e-05, 2.5304999999999772e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.358" endtime="20201112 12:26:37.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.353" endtime="20201112 12:26:37.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.363" endtime="20201112 12:26:37.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.366" endtime="20201112 12:26:37.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.365" endtime="20201112 12:26:37.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.361" endtime="20201112 12:26:37.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.994" endtime="20201112 12:26:37.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.993" endtime="20201112 12:26:37.387"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.396" endtime="20201112 12:26:37.412"></status>
</kw>
<msg timestamp="20201112 12:26:37.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.394" endtime="20201112 12:26:37.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.413" endtime="20201112 12:26:37.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.416" endtime="20201112 12:26:37.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.392" endtime="20201112 12:26:37.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.390" endtime="20201112 12:26:37.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.426" endtime="20201112 12:26:37.712"></status>
</kw>
<msg timestamp="20201112 12:26:37.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021062, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021069139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:37.425" endtime="20201112 12:26:37.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021062, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021069139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:37.716" endtime="20201112 12:26:37.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.725" endtime="20201112 12:26:37.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.422" endtime="20201112 12:26:37.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.420" endtime="20201112 12:26:37.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.731" level="INFO">${RESULT} = [{'time': 0.021069139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.021099583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:37.728" endtime="20201112 12:26:37.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:37.746" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:37.732" endtime="20201112 12:26:37.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.750" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:26:37.749" endtime="20201112 12:26:37.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.753" level="INFO">VALUE: [7.138999999999757e-06, 2.4430000000002366e-05, 1.962499999999881e-05, 2.438899999999966e-05, 2.063899999999938e-05, 2.44169999999988e-05, 2.056900000000153e-05, 2.0499999999999685e-05, 2.5278000000000106e-05, 2.5250000000000966e-05, 2.054100000000239e-05, 2.6291999999997206e-05, 2.4401999999999757e-05, 2.344500000000041e-05, 2.1500000000000685e-05, 2.5291999999999676e-05, 2.0514000000002724e-05, 2.345899999999998e-05, 2.1514000000000255e-05, 2.440299999999923e-05, 2.5360999999998052e-05, 2.147299999999755e-05, 2.343100000000084e-05, 2.3416000000001796e-05, 2.5319999999998816e-05, 2.337499999999909e-05, 2.1472000000001545e-05, 2.340299999999823e-05, 2.0542000000001864e-05, 2.05830000000011e-05, 2.1500000000000685e-05, 2.337499999999909e-05, 2.5291999999999676e-05, 2.0556000000001434e-05, 2.6333999999999386e-05, 2.438899999999966e-05, 2.055499999999849e-05, 2.2457999999999506e-05, 2.1486000000001115e-05, 2.4429999999998897e-05, 2.345899999999998e-05, 2.243099999999984e-05, 1.956900000000053e-05, 1.9527999999997825e-05, 2.245899999999898e-05, 2.437500000000009e-05, 2.0527999999998825e-05, 1.9584000000003043e-05, 2.1514000000000255e-05, 2.5332999999998912e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.751" endtime="20201112 12:26:37.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.747" endtime="20201112 12:26:37.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.756" endtime="20201112 12:26:37.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.760" endtime="20201112 12:26:37.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.758" endtime="20201112 12:26:37.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.755" endtime="20201112 12:26:37.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.388" endtime="20201112 12:26:37.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.387" endtime="20201112 12:26:37.781"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.789" endtime="20201112 12:26:37.810"></status>
</kw>
<msg timestamp="20201112 12:26:37.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.788" endtime="20201112 12:26:37.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.812" endtime="20201112 12:26:37.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.814" endtime="20201112 12:26:37.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.785" endtime="20201112 12:26:37.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.783" endtime="20201112 12:26:37.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.824" endtime="20201112 12:26:38.110"></status>
</kw>
<msg timestamp="20201112 12:26:38.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024502139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024523681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.823" endtime="20201112 12:26:38.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024502139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024523681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.114" endtime="20201112 12:26:38.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.122" endtime="20201112 12:26:38.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.820" endtime="20201112 12:26:38.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.819" endtime="20201112 12:26:38.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.129" level="INFO">${RESULT} = [{'time': 0.024523681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1541999999999395e-05, 'source_diff': 2.1541999999999395e-05}, {'time': 0.024553472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:38.125" endtime="20201112 12:26:38.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:38.142" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:38.130" endtime="20201112 12:26:38.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.147" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:26:38.146" endtime="20201112 12:26:38.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.149" level="INFO">VALUE: [2.1541999999999395e-05, 2.440299999999923e-05, 2.338900000000213e-05, 2.2430000000000366e-05, 1.95830000000001e-05, 2.537500000000109e-05, 2.3444000000000936e-05, 2.343100000000084e-05, 1.863900000000085e-05, 2.4387999999996718e-05, 2.1514000000000255e-05, 1.95830000000001e-05, 2.3443999999997467e-05, 1.95830000000001e-05, 1.956900000000053e-05, 2.152700000000035e-05, 2.1527999999999825e-05, 1.961100000000271e-05, 2.4429999999998897e-05, 2.340299999999823e-05, 2.3388000000002657e-05, 2.3472000000000076e-05, 1.865299999999695e-05, 2.436100000000052e-05, 2.433300000000138e-05, 2.062499999999981e-05, 2.5346999999998482e-05, 2.337499999999909e-05, 2.1471999999998076e-05, 2.0584000000000574e-05, 2.340299999999823e-05, 2.34169999999978e-05, 1.9637999999998906e-05, 2.1499999999997216e-05, 2.2443999999999936e-05, 2.6278000000001106e-05, 2.537499999999762e-05, 1.961099999999924e-05, 1.9583999999999574e-05, 2.6332999999999912e-05, 1.861100000000171e-05, 2.340299999999823e-05, 2.6235999999998927e-05, 2.1514000000000255e-05, 2.533300000000238e-05, 2.2485999999998646e-05, 2.6306000000000246e-05, 2.338899999999866e-05, 2.4346999999997482e-05, 2.4402000000003227e-05]</msg>
<status status="PASS" starttime="20201112 12:26:38.148" endtime="20201112 12:26:38.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.143" endtime="20201112 12:26:38.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.153" endtime="20201112 12:26:38.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.156" endtime="20201112 12:26:38.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.155" endtime="20201112 12:26:38.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.151" endtime="20201112 12:26:38.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.781" endtime="20201112 12:26:38.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.781" endtime="20201112 12:26:38.177"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.186" endtime="20201112 12:26:38.209"></status>
</kw>
<msg timestamp="20201112 12:26:38.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.184" endtime="20201112 12:26:38.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.210" endtime="20201112 12:26:38.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.213" endtime="20201112 12:26:38.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.182" endtime="20201112 12:26:38.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.180" endtime="20201112 12:26:38.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.224" endtime="20201112 12:26:38.509"></status>
</kw>
<msg timestamp="20201112 12:26:38.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024656167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024712097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.222" endtime="20201112 12:26:38.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024656167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024712097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.513" endtime="20201112 12:26:38.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.521" endtime="20201112 12:26:38.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.220" endtime="20201112 12:26:38.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.218" endtime="20201112 12:26:38.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.528" level="INFO">${RESULT} = [{'time': 0.024712097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5929999999999175e-05, 'source_diff': 5.5929999999999175e-05}, {'time': 0.024772611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:38.525" endtime="20201112 12:26:38.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:38.541" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:38.529" endtime="20201112 12:26:38.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.546" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:26:38.545" endtime="20201112 12:26:38.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.548" level="INFO">VALUE: [5.5929999999999175e-05, 5.491700000000155e-05, 5.2138000000000184e-05, 5.022199999999907e-05, 5.204199999999867e-05, 5.216700000000227e-05, 5.01530000000007e-05, 5.405600000000024e-05, 5.115299999999823e-05, 5.4944000000001214e-05, 5.405600000000024e-05, 5.680500000000005e-05, 5.1193999999997464e-05, 5.020899999999898e-05, 5.404200000000067e-05, 5.408299999999991e-05, 5.301300000000106e-05, 5.018099999999984e-05, 5.016700000000027e-05, 5.11530000000017e-05, 5.116700000000127e-05, 5.5888000000000465e-05, 5.308299999999891e-05, 5.208300000000138e-05, 4.927800000000329e-05, 5.01530000000007e-05, 5.405600000000024e-05, 5.493100000000112e-05, 5.120899999999998e-05, 5.4985999999999924e-05, 5.106900000000081e-05, 5.3957999999999784e-05, 5.50280000000021e-05, 5.109699999999995e-05, 5.113899999999866e-05, 5.119400000000093e-05, 5.311100000000152e-05, 5.58480000000007e-05, 5.395800000000325e-05, 5.308400000000185e-05, 5.4972000000000354e-05, 5.018099999999984e-05, 5.11530000000017e-05, 5.4972000000000354e-05, 5.212500000000009e-05, 5.5902000000000035e-05, 5.211199999999999e-05, 5.304199999999967e-05, 5.690300000000051e-05, 5.404200000000067e-05]</msg>
<status status="PASS" starttime="20201112 12:26:38.547" endtime="20201112 12:26:38.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.542" endtime="20201112 12:26:38.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.552" endtime="20201112 12:26:38.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.555" endtime="20201112 12:26:38.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.554" endtime="20201112 12:26:38.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.550" endtime="20201112 12:26:38.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.178" endtime="20201112 12:26:38.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.178" endtime="20201112 12:26:38.576"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.585" endtime="20201112 12:26:38.610"></status>
</kw>
<msg timestamp="20201112 12:26:38.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.583" endtime="20201112 12:26:38.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.612" endtime="20201112 12:26:38.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.615" endtime="20201112 12:26:38.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.581" endtime="20201112 12:26:38.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.579" endtime="20201112 12:26:38.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.625" endtime="20201112 12:26:38.910"></status>
</kw>
<msg timestamp="20201112 12:26:38.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022519708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.623" endtime="20201112 12:26:38.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022519708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.915" endtime="20201112 12:26:38.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.923" endtime="20201112 12:26:38.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.620" endtime="20201112 12:26:38.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.619" endtime="20201112 12:26:38.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.930" level="INFO">${RESULT} = [{'time': 0.022519708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5583000000001e-05, 'source_diff': 6.5583000000001e-05}, {'time': 0.022580736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201112 12:26:38.926" endtime="20201112 12:26:38.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:38.943" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:38.930" endtime="20201112 12:26:38.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.947" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:26:38.946" endtime="20201112 12:26:38.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.950" level="INFO">VALUE: [6.5583000000001e-05, 5.5958000000001784e-05, 5.4999999999999494e-05, 5.0222999999998547e-05, 5.591699999999908e-05, 5.306899999999934e-05, 5.215299999999923e-05, 5.119400000000093e-05, 5.405600000000024e-05, 5.112500000000256e-05, 5.212500000000009e-05, 5.026400000000125e-05, 5.508300000000091e-05, 5.5985999999997454e-05, 5.112499999999909e-05, 5.301400000000053e-05, 5.308300000000238e-05, 5.019499999999941e-05, 5.116700000000127e-05, 5.0209000000002446e-05, 5.401400000000153e-05, 5.594500000000169e-05, 5.607000000000181e-05, 5.12080000000005e-05, 5.594499999999822e-05, 5.112499999999909e-05, 5.019399999999993e-05, 5.11530000000017e-05, 5.2165999999999324e-05, 5.308399999999838e-05, 5.029100000000092e-05, 5.301400000000053e-05, 5.020899999999898e-05, 5.501400000000253e-05, 5.206900000000181e-05, 5.211100000000052e-05, 5.313900000000066e-05, 5.5985999999997454e-05, 5.211100000000052e-05, 5.5929999999999175e-05, 5.606999999999834e-05, 5.311100000000152e-05, 5.208299999999791e-05, 5.401400000000153e-05, 5.6000000000000494e-05, 5.209700000000095e-05, 5.5958000000001784e-05, 5.694499999999922e-05, 5.205500000000224e-05, 5.023599999999864e-05]</msg>
<status status="PASS" starttime="20201112 12:26:38.949" endtime="20201112 12:26:38.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.944" endtime="20201112 12:26:38.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.953" endtime="20201112 12:26:38.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.957" endtime="20201112 12:26:38.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.955" endtime="20201112 12:26:38.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.952" endtime="20201112 12:26:38.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.577" endtime="20201112 12:26:38.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.577" endtime="20201112 12:26:38.978"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.987" endtime="20201112 12:26:39.007"></status>
</kw>
<msg timestamp="20201112 12:26:39.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.985" endtime="20201112 12:26:39.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.009" endtime="20201112 12:26:39.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.011" endtime="20201112 12:26:39.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.982" endtime="20201112 12:26:39.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.980" endtime="20201112 12:26:39.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.021" endtime="20201112 12:26:39.308"></status>
</kw>
<msg timestamp="20201112 12:26:39.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022946347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023012833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.020" endtime="20201112 12:26:39.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022946347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023012833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.312" endtime="20201112 12:26:39.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.320" endtime="20201112 12:26:39.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.017" endtime="20201112 12:26:39.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.016" endtime="20201112 12:26:39.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.327" level="INFO">${RESULT} = [{'time': 0.023012833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.648600000000102e-05, 'source_diff': 6.648600000000102e-05}, {'time': 0.023073639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:39.324" endtime="20201112 12:26:39.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:39.341" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:39.328" endtime="20201112 12:26:39.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.346" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:26:39.345" endtime="20201112 12:26:39.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.348" level="INFO">VALUE: [6.648600000000102e-05, 5.505600000000124e-05, 5.208400000000085e-05, 5.113899999999866e-05, 5.306899999999934e-05, 5.493100000000112e-05, 5.5930000000002644e-05, 5.487499999999937e-05, 5.302700000000063e-05, 5.308399999999838e-05, 5.4929999999998175e-05, 5.020899999999898e-05, 5.3957999999999784e-05, 5.025000000000168e-05, 5.401400000000153e-05, 5.215299999999923e-05, 5.109699999999995e-05, 5.297200000000182e-05, 5.404200000000067e-05, 5.209700000000095e-05, 5.309699999999848e-05, 5.011100000000199e-05, 5.691699999999661e-05, 5.5902000000000035e-05, 5.115299999999823e-05, 5.4901999999999035e-05, 5.016700000000027e-05, 5.022199999999907e-05, 5.4013999999998064e-05, 5.113900000000213e-05, 5.211100000000052e-05, 5.593099999999865e-05, 5.5944000000002214e-05, 5.112499999999909e-05, 5.11530000000017e-05, 5.4915999999998605e-05, 5.306999999999881e-05, 5.018000000000036e-05, 5.400000000000196e-05, 5.122200000000007e-05, 5.11530000000017e-05, 5.112499999999909e-05, 5.594500000000169e-05, 5.305599999999924e-05, 5.113899999999866e-05, 5.3957999999999784e-05, 5.305599999999924e-05, 5.213899999999966e-05, 5.588899999999994e-05, 5.2985999999997924e-05]</msg>
<status status="PASS" starttime="20201112 12:26:39.347" endtime="20201112 12:26:39.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.342" endtime="20201112 12:26:39.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.352" endtime="20201112 12:26:39.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.356" endtime="20201112 12:26:39.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.354" endtime="20201112 12:26:39.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.350" endtime="20201112 12:26:39.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.979" endtime="20201112 12:26:39.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.978" endtime="20201112 12:26:39.377"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.385" endtime="20201112 12:26:39.405"></status>
</kw>
<msg timestamp="20201112 12:26:39.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.383" endtime="20201112 12:26:39.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.407" endtime="20201112 12:26:39.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.409" endtime="20201112 12:26:39.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.381" endtime="20201112 12:26:39.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.379" endtime="20201112 12:26:39.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.419" endtime="20201112 12:26:39.706"></status>
</kw>
<msg timestamp="20201112 12:26:39.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021278736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.418" endtime="20201112 12:26:39.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021278736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.710" endtime="20201112 12:26:39.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.718" endtime="20201112 12:26:39.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.415" endtime="20201112 12:26:39.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.413" endtime="20201112 12:26:39.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.725" level="INFO">${RESULT} = [{'time': 0.021278736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.641699999999917e-05, 'source_diff': 6.641699999999917e-05}, {'time': 0.021340056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:39.721" endtime="20201112 12:26:39.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:39.738" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:39.726" endtime="20201112 12:26:39.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.743" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:26:39.742" endtime="20201112 12:26:39.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.745" level="INFO">VALUE: [6.641699999999917e-05, 5.312500000000109e-05, 5.5013999999999064e-05, 5.401400000000153e-05, 5.215299999999923e-05, 5.3985999999998924e-05, 5.212500000000009e-05, 5.112499999999909e-05, 5.408299999999991e-05, 5.6014000000000064e-05, 5.408399999999938e-05, 5.588899999999994e-05, 5.401400000000153e-05, 5.405600000000024e-05, 5.309700000000195e-05, 5.019499999999941e-05, 5.2151999999999754e-05, 5.212500000000009e-05, 5.113899999999866e-05, 5.016600000000079e-05, 5.111099999999952e-05, 5.5971999999997885e-05, 5.5013999999999064e-05, 5.591699999999908e-05, 5.594500000000169e-05, 5.305599999999924e-05, 5.3999999999998494e-05, 5.595900000000126e-05, 5.311100000000152e-05, 5.312500000000109e-05, 5.305499999999977e-05, 5.1138000000002654e-05, 5.5972000000001354e-05, 5.205599999999824e-05, 5.306900000000281e-05, 5.406999999999981e-05, 5.020899999999898e-05, 5.4985999999999924e-05, 5.222200000000107e-05, 5.305499999999977e-05, 5.4958000000000784e-05, 5.497299999999983e-05, 5.112500000000256e-05, 5.593099999999865e-05, 5.494500000000069e-05, 5.026400000000125e-05, 5.2179999999998894e-05, 5.306899999999934e-05, 5.123599999999964e-05, 5.113899999999866e-05]</msg>
<status status="PASS" starttime="20201112 12:26:39.744" endtime="20201112 12:26:39.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.739" endtime="20201112 12:26:39.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.749" endtime="20201112 12:26:39.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.752" endtime="20201112 12:26:39.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.751" endtime="20201112 12:26:39.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.747" endtime="20201112 12:26:39.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.377" endtime="20201112 12:26:39.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.377" endtime="20201112 12:26:39.773"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.782" endtime="20201112 12:26:39.802"></status>
</kw>
<msg timestamp="20201112 12:26:39.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.780" endtime="20201112 12:26:39.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.804" endtime="20201112 12:26:39.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.806" endtime="20201112 12:26:39.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.778" endtime="20201112 12:26:39.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.776" endtime="20201112 12:26:39.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.817" endtime="20201112 12:26:40.103"></status>
</kw>
<msg timestamp="20201112 12:26:40.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021447778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021497958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.815" endtime="20201112 12:26:40.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021447778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021497958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.107" endtime="20201112 12:26:40.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.115" endtime="20201112 12:26:40.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.812" endtime="20201112 12:26:40.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.811" endtime="20201112 12:26:40.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.122" level="INFO">${RESULT} = [{'time': 0.021497958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.018000000000036e-05, 'source_diff': 5.018000000000036e-05}, {'time': 0.021558764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:40.119" endtime="20201112 12:26:40.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:40.135" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:40.123" endtime="20201112 12:26:40.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.140" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:26:40.139" endtime="20201112 12:26:40.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.142" level="INFO">VALUE: [5.018000000000036e-05, 5.490300000000198e-05, 5.022199999999907e-05, 5.405500000000077e-05, 5.48609999999998e-05, 5.212500000000009e-05, 5.009800000000189e-05, 5.397200000000282e-05, 5.302700000000063e-05, 5.404200000000067e-05, 5.305599999999924e-05, 5.4985999999999924e-05, 5.3013999999997063e-05, 5.215299999999923e-05, 5.404200000000067e-05, 5.586200000000027e-05, 5.311100000000152e-05, 5.212500000000009e-05, 5.301400000000053e-05, 5.500000000000296e-05, 5.588899999999994e-05, 5.112499999999909e-05, 5.301400000000053e-05, 5.40280000000011e-05, 5.112499999999909e-05, 5.308300000000238e-05, 5.588899999999994e-05, 5.305499999999977e-05, 5.015299999999723e-05, 5.213899999999966e-05, 5.111099999999952e-05, 5.02079999999995e-05, 5.4915999999998605e-05, 5.213899999999966e-05, 5.018000000000036e-05, 5.208299999999791e-05, 5.494500000000069e-05, 5.106900000000081e-05, 5.393100000000012e-05, 5.312499999999762e-05, 5.4027999999997633e-05, 5.118100000000084e-05, 5.594500000000169e-05, 5.208300000000138e-05, 5.3999999999998494e-05, 5.3013999999997063e-05, 5.590299999999951e-05, 5.206900000000181e-05, 5.023599999999864e-05, 5.208300000000138e-05]</msg>
<status status="PASS" starttime="20201112 12:26:40.141" endtime="20201112 12:26:40.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.136" endtime="20201112 12:26:40.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.146" endtime="20201112 12:26:40.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.149" endtime="20201112 12:26:40.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.148" endtime="20201112 12:26:40.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.144" endtime="20201112 12:26:40.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.774" endtime="20201112 12:26:40.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.773" endtime="20201112 12:26:40.170"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.179" endtime="20201112 12:26:40.198"></status>
</kw>
<msg timestamp="20201112 12:26:40.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.177" endtime="20201112 12:26:40.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.200" endtime="20201112 12:26:40.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.202" endtime="20201112 12:26:40.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.175" endtime="20201112 12:26:40.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.173" endtime="20201112 12:26:40.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.212" endtime="20201112 12:26:40.498"></status>
</kw>
<msg timestamp="20201112 12:26:40.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021275042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021320472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.211" endtime="20201112 12:26:40.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021275042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021320472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.502" endtime="20201112 12:26:40.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.510" endtime="20201112 12:26:40.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.208" endtime="20201112 12:26:40.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.207" endtime="20201112 12:26:40.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.517" level="INFO">${RESULT} = [{'time': 0.021320472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.542999999999908e-05, 'source_diff': 4.542999999999908e-05}, {'time': 0.021381486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:40.514" endtime="20201112 12:26:40.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:40.530" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:40.518" endtime="20201112 12:26:40.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.535" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:26:40.534" endtime="20201112 12:26:40.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.537" level="INFO">VALUE: [4.542999999999908e-05, 5.020800000000297e-05, 5.305499999999977e-05, 5.208299999999791e-05, 5.199999999999996e-05, 5.206899999999834e-05, 5.119500000000041e-05, 5.590299999999951e-05, 5.209699999999748e-05, 5.106900000000081e-05, 5.688900000000094e-05, 5.395899999999926e-05, 5.495900000000026e-05, 5.209700000000095e-05, 5.113900000000213e-05, 5.026400000000125e-05, 5.6791999999999954e-05, 5.5888000000000465e-05, 5.305499999999977e-05, 5.494500000000069e-05, 5.01530000000007e-05, 5.013900000000113e-05, 5.209700000000095e-05, 5.30410000000002e-05, 5.591699999999908e-05, 5.211100000000052e-05, 5.5972000000001354e-05, 5.211100000000052e-05, 5.6805999999999524e-05, 5.112499999999909e-05, 5.206899999999834e-05, 5.019499999999941e-05, 5.113899999999866e-05, 5.397299999999883e-05, 5.4944000000001214e-05, 5.201399999999953e-05, 5.02079999999995e-05, 5.397299999999883e-05, 5.109699999999995e-05, 5.3985999999998924e-05, 5.401400000000153e-05, 5.306899999999934e-05, 5.305499999999977e-05, 5.204199999999867e-05, 5.398600000000239e-05, 5.305600000000271e-05, 5.313900000000066e-05, 5.305599999999924e-05, 5.016700000000027e-05, 5.111099999999952e-05]</msg>
<status status="PASS" starttime="20201112 12:26:40.536" endtime="20201112 12:26:40.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.531" endtime="20201112 12:26:40.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.541" endtime="20201112 12:26:40.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.544" endtime="20201112 12:26:40.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.543" endtime="20201112 12:26:40.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.539" endtime="20201112 12:26:40.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.171" endtime="20201112 12:26:40.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.171" endtime="20201112 12:26:40.565"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.574" endtime="20201112 12:26:40.595"></status>
</kw>
<msg timestamp="20201112 12:26:40.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.572" endtime="20201112 12:26:40.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.597" endtime="20201112 12:26:40.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.599" endtime="20201112 12:26:40.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.570" endtime="20201112 12:26:40.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.568" endtime="20201112 12:26:40.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.609" endtime="20201112 12:26:40.896"></status>
</kw>
<msg timestamp="20201112 12:26:40.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023096222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.608" endtime="20201112 12:26:40.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023096222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.900" endtime="20201112 12:26:40.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.908" endtime="20201112 12:26:40.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.605" endtime="20201112 12:26:40.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.603" endtime="20201112 12:26:40.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.915" level="INFO">${RESULT} = [{'time': 0.023096222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166599999999842e-05, 'source_diff': 6.166599999999842e-05}, {'time': 0.02315675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:40.911" endtime="20201112 12:26:40.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:40.929" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:40.916" endtime="20201112 12:26:40.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.934" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:26:40.933" endtime="20201112 12:26:40.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.936" level="INFO">VALUE: [6.166599999999842e-05, 5.016700000000027e-05, 5.593099999999865e-05, 5.495900000000026e-05, 5.588899999999994e-05, 5.302700000000063e-05, 5.2985999999997924e-05, 5.493099999999765e-05, 5.5929999999999175e-05, 5.308299999999891e-05, 5.5902000000000035e-05, 5.591699999999908e-05, 5.305499999999977e-05, 5.113899999999866e-05, 5.105599999999724e-05, 5.11530000000017e-05, 5.015299999999723e-05, 5.2985999999997924e-05, 5.206900000000181e-05, 5.308399999999838e-05, 5.4958000000000784e-05, 5.0209000000002446e-05, 5.4944000000001214e-05, 5.593100000000212e-05, 5.209700000000095e-05, 5.02079999999995e-05, 5.4985999999999924e-05, 5.201399999999953e-05, 5.3957999999999784e-05, 5.111100000000299e-05, 5.2971999999998354e-05, 5.4999999999999494e-05, 5.400000000000196e-05, 5.108300000000038e-05, 5.311099999999805e-05, 5.583400000000113e-05, 5.018000000000036e-05, 5.393100000000012e-05, 5.212500000000009e-05, 5.109799999999942e-05, 5.019499999999941e-05, 5.690300000000051e-05, 5.106900000000081e-05, 5.218000000000236e-05, 5.215299999999923e-05, 5.311100000000152e-05, 5.2138000000000184e-05, 5.587500000000037e-05, 5.212500000000009e-05, 5.013900000000113e-05]</msg>
<status status="PASS" starttime="20201112 12:26:40.935" endtime="20201112 12:26:40.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.930" endtime="20201112 12:26:40.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.940" endtime="20201112 12:26:40.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.943" endtime="20201112 12:26:40.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.942" endtime="20201112 12:26:40.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.938" endtime="20201112 12:26:40.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.566" endtime="20201112 12:26:40.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.566" endtime="20201112 12:26:40.964"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.973" endtime="20201112 12:26:40.993"></status>
</kw>
<msg timestamp="20201112 12:26:40.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.971" endtime="20201112 12:26:40.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.995" endtime="20201112 12:26:40.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.997" endtime="20201112 12:26:41.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.969" endtime="20201112 12:26:41.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.967" endtime="20201112 12:26:41.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.007" endtime="20201112 12:26:41.293"></status>
</kw>
<msg timestamp="20201112 12:26:41.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021185847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021239847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.006" endtime="20201112 12:26:41.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021185847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021239847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.298" endtime="20201112 12:26:41.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.306" endtime="20201112 12:26:41.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.003" endtime="20201112 12:26:41.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.002" endtime="20201112 12:26:41.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.313" level="INFO">${RESULT} = [{'time': 0.021239847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3999999999998494e-05, 'source_diff': 5.3999999999998494e-05}, {'time': 0.021301083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:41.309" endtime="20201112 12:26:41.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:41.327" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:41.314" endtime="20201112 12:26:41.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.331" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:26:41.330" endtime="20201112 12:26:41.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.334" level="INFO">VALUE: [5.3999999999998494e-05, 5.211099999999705e-05, 5.311200000000099e-05, 5.404099999999773e-05, 5.306999999999881e-05, 5.022200000000254e-05, 5.40280000000011e-05, 5.401400000000153e-05, 4.927799999999982e-05, 5.488900000000241e-05, 5.4999999999999494e-05, 5.016600000000079e-05, 5.111099999999952e-05, 5.300000000000096e-05, 5.5944000000002214e-05, 5.4972000000000354e-05, 5.495900000000026e-05, 5.5929999999999175e-05, 5.212500000000009e-05, 5.304199999999967e-05, 5.205600000000171e-05, 5.395900000000273e-05, 5.211100000000052e-05, 5.602700000000016e-05, 5.12080000000005e-05, 5.3957999999999784e-05, 5.5958000000001784e-05, 5.209699999999748e-05, 5.209699999999748e-05, 5.405600000000024e-05, 5.11530000000017e-05, 5.018099999999984e-05, 5.115299999999823e-05, 5.112499999999909e-05, 5.113899999999866e-05, 5.018099999999984e-05, 5.201399999999953e-05, 5.2138000000000184e-05, 5.11530000000017e-05, 5.5986000000000924e-05, 5.111099999999952e-05, 5.022200000000254e-05, 5.016700000000027e-05, 5.1138000000002654e-05, 5.305499999999977e-05, 5.591700000000255e-05, 5.493100000000112e-05, 5.019399999999993e-05, 5.0223000000002016e-05, 5.4013999999998064e-05]</msg>
<status status="PASS" starttime="20201112 12:26:41.333" endtime="20201112 12:26:41.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.328" endtime="20201112 12:26:41.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.338" endtime="20201112 12:26:41.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.341" endtime="20201112 12:26:41.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.339" endtime="20201112 12:26:41.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.336" endtime="20201112 12:26:41.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.965" endtime="20201112 12:26:41.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.964" endtime="20201112 12:26:41.362"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.371" endtime="20201112 12:26:41.389"></status>
</kw>
<msg timestamp="20201112 12:26:41.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.369" endtime="20201112 12:26:41.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.391" endtime="20201112 12:26:41.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.393" endtime="20201112 12:26:41.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.367" endtime="20201112 12:26:41.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.364" endtime="20201112 12:26:41.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.404" endtime="20201112 12:26:41.689"></status>
</kw>
<msg timestamp="20201112 12:26:41.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020291986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020329736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.402" endtime="20201112 12:26:41.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020291986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020329736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.693" endtime="20201112 12:26:41.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.701" endtime="20201112 12:26:41.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.399" endtime="20201112 12:26:41.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.398" endtime="20201112 12:26:41.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.708" level="INFO">${RESULT} = [{'time': 0.020329736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.774999999999959e-05, 'source_diff': 3.774999999999959e-05}, {'time': 0.020390694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:41.704" endtime="20201112 12:26:41.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:41.721" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:41.709" endtime="20201112 12:26:41.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.726" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:26:41.725" endtime="20201112 12:26:41.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.728" level="INFO">VALUE: [3.774999999999959e-05, 5.309700000000195e-05, 5.209700000000095e-05, 5.4999999999999494e-05, 5.312500000000109e-05, 5.591699999999908e-05, 5.5013999999999064e-05, 5.312500000000109e-05, 5.5027999999998634e-05, 5.11530000000017e-05, 5.590299999999951e-05, 5.4999999999999494e-05, 5.594500000000169e-05, 4.91940000000024e-05, 5.312500000000109e-05, 5.018000000000036e-05, 5.5972000000001354e-05, 5.119400000000093e-05, 5.109699999999995e-05, 5.68610000000018e-05, 5.312500000000109e-05, 5.5013999999999064e-05, 5.405600000000024e-05, 5.12080000000005e-05, 5.213899999999966e-05, 5.509799999999995e-05, 5.305499999999977e-05, 5.5944000000002214e-05, 5.504200000000167e-05, 5.112499999999909e-05, 5.408299999999991e-05, 5.312500000000109e-05, 5.305499999999977e-05, 5.209700000000095e-05, 5.023599999999864e-05, 5.5972000000001354e-05, 5.3999999999998494e-05, 5.111099999999952e-05, 5.4999999999999494e-05, 5.216700000000227e-05, 5.311099999999805e-05, 5.307000000000228e-05, 5.026399999999778e-05, 5.305499999999977e-05, 5.4957999999997315e-05, 5.118000000000136e-05, 5.2179999999998894e-05, 5.208299999999791e-05, 5.501400000000253e-05, 5.50280000000021e-05]</msg>
<status status="PASS" starttime="20201112 12:26:41.727" endtime="20201112 12:26:41.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.722" endtime="20201112 12:26:41.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.736" endtime="20201112 12:26:41.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.740" endtime="20201112 12:26:41.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.738" endtime="20201112 12:26:41.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.735" endtime="20201112 12:26:41.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.363" endtime="20201112 12:26:41.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.362" endtime="20201112 12:26:41.761"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.770" endtime="20201112 12:26:41.791"></status>
</kw>
<msg timestamp="20201112 12:26:41.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.768" endtime="20201112 12:26:41.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.793" endtime="20201112 12:26:41.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.795" endtime="20201112 12:26:41.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.765" endtime="20201112 12:26:41.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.763" endtime="20201112 12:26:41.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.805" endtime="20201112 12:26:42.091"></status>
</kw>
<msg timestamp="20201112 12:26:42.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023365208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023417278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.804" endtime="20201112 12:26:42.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023365208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023417278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.096" endtime="20201112 12:26:42.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.104" endtime="20201112 12:26:42.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.801" endtime="20201112 12:26:42.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.799" endtime="20201112 12:26:42.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.111" level="INFO">${RESULT} = [{'time': 0.023417278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207000000000128e-05, 'source_diff': 5.207000000000128e-05}, {'time': 0.023478208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:42.107" endtime="20201112 12:26:42.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:42.124" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:42.112" endtime="20201112 12:26:42.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.129" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:26:42.128" endtime="20201112 12:26:42.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.131" level="INFO">VALUE: [5.207000000000128e-05, 5.408299999999991e-05, 5.109699999999995e-05, 5.102800000000157e-05, 5.6000000000000494e-05, 5.5944000000002214e-05, 5.5888000000000465e-05, 5.1151999999998754e-05, 5.493099999999765e-05, 5.122200000000007e-05, 5.5944000000002214e-05, 5.111099999999952e-05, 5.209700000000095e-05, 5.11530000000017e-05, 5.109699999999995e-05, 5.4999999999999494e-05, 5.3971999999999354e-05, 5.4985999999999924e-05, 5.111099999999952e-05, 5.4985999999999924e-05, 4.9222999999997546e-05, 5.3013999999997063e-05, 5.212500000000009e-05, 5.015299999999723e-05, 5.593099999999865e-05, 5.588899999999994e-05, 5.5013999999999064e-05, 5.313900000000066e-05, 5.501299999999959e-05, 5.30280000000001e-05, 5.50280000000021e-05, 5.30280000000001e-05, 5.1165999999998324e-05, 5.590299999999951e-05, 4.927799999999982e-05, 5.4958000000000784e-05, 5.018099999999984e-05, 5.504200000000167e-05, 5.208299999999791e-05, 5.0151999999997754e-05, 5.4999999999999494e-05, 5.2999999999997494e-05, 5.213899999999966e-05, 5.4972000000000354e-05, 5.584700000000123e-05, 5.306900000000281e-05, 5.4999999999999494e-05, 5.112499999999909e-05, 5.024999999999821e-05, 5.405600000000024e-05]</msg>
<status status="PASS" starttime="20201112 12:26:42.130" endtime="20201112 12:26:42.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.125" endtime="20201112 12:26:42.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.135" endtime="20201112 12:26:42.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.138" endtime="20201112 12:26:42.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.137" endtime="20201112 12:26:42.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.133" endtime="20201112 12:26:42.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.762" endtime="20201112 12:26:42.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.761" endtime="20201112 12:26:42.159"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.168" endtime="20201112 12:26:42.188"></status>
</kw>
<msg timestamp="20201112 12:26:42.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.166" endtime="20201112 12:26:42.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.189" endtime="20201112 12:26:42.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.192" endtime="20201112 12:26:42.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.164" endtime="20201112 12:26:42.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.161" endtime="20201112 12:26:42.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.202" endtime="20201112 12:26:42.488"></status>
</kw>
<msg timestamp="20201112 12:26:42.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.200" endtime="20201112 12:26:42.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.492" endtime="20201112 12:26:42.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.500" endtime="20201112 12:26:42.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.198" endtime="20201112 12:26:42.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.196" endtime="20201112 12:26:42.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.507" level="INFO">${RESULT} = [{'time': 0.021957847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000059e-05, 'source_diff': 3.875000000000059e-05}, {'time': 0.022019014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:42.503" endtime="20201112 12:26:42.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:42.521" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:42.508" endtime="20201112 12:26:42.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.526" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:26:42.525" endtime="20201112 12:26:42.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.528" level="INFO">VALUE: [3.875000000000059e-05, 5.12080000000005e-05, 5.213899999999966e-05, 5.213899999999966e-05, 5.21530000000027e-05, 5.304199999999967e-05, 5.212500000000009e-05, 5.119500000000041e-05, 5.4929999999998175e-05, 5.593099999999865e-05, 5.406900000000034e-05, 5.504200000000167e-05, 5.21669999999988e-05, 5.208300000000138e-05, 5.4999999999999494e-05, 5.40280000000011e-05, 5.5999999999997024e-05, 5.501299999999959e-05, 5.212500000000009e-05, 5.4972000000000354e-05, 5.023599999999864e-05, 5.305599999999924e-05, 5.118100000000084e-05, 5.223700000000012e-05, 5.311099999999805e-05, 5.5944000000002214e-05, 5.40419999999972e-05, 5.311100000000152e-05, 5.212500000000009e-05, 5.6000000000000494e-05, 5.2166000000002793e-05, 5.309700000000195e-05, 5.401299999999859e-05, 5.5957999999998315e-05, 5.033299999999963e-05, 5.309799999999795e-05, 5.018000000000036e-05, 5.024999999999821e-05, 5.406999999999981e-05, 5.013899999999766e-05, 5.40280000000011e-05, 5.02079999999995e-05, 5.4013999999998064e-05, 5.308299999999891e-05, 5.5957999999998315e-05, 5.313900000000066e-05, 5.5027999999998634e-05, 5.311100000000152e-05, 5.018099999999984e-05, 5.504200000000167e-05]</msg>
<status status="PASS" starttime="20201112 12:26:42.527" endtime="20201112 12:26:42.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.522" endtime="20201112 12:26:42.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.532" endtime="20201112 12:26:42.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.535" endtime="20201112 12:26:42.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.534" endtime="20201112 12:26:42.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.530" endtime="20201112 12:26:42.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.160" endtime="20201112 12:26:42.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.159" endtime="20201112 12:26:42.556"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.565" endtime="20201112 12:26:42.584"></status>
</kw>
<msg timestamp="20201112 12:26:42.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.563" endtime="20201112 12:26:42.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.586" endtime="20201112 12:26:42.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.588" endtime="20201112 12:26:42.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.561" endtime="20201112 12:26:42.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.559" endtime="20201112 12:26:42.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.598" endtime="20201112 12:26:42.884"></status>
</kw>
<msg timestamp="20201112 12:26:42.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021726069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.597" endtime="20201112 12:26:42.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021726069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.888" endtime="20201112 12:26:42.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.897" endtime="20201112 12:26:42.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.594" endtime="20201112 12:26:42.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.592" endtime="20201112 12:26:42.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.903" level="INFO">${RESULT} = [{'time': 0.021780028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.395899999999926e-05, 'source_diff': 5.395899999999926e-05}, {'time': 0.021841681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:42.900" endtime="20201112 12:26:42.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:42.917" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:42.904" endtime="20201112 12:26:42.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.921" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:26:42.920" endtime="20201112 12:26:42.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.924" level="INFO">VALUE: [5.395899999999926e-05, 5.493100000000112e-05, 5.405600000000024e-05, 5.4916000000002074e-05, 5.20409999999992e-05, 5.118000000000136e-05, 5.301400000000053e-05, 5.306999999999881e-05, 5.112499999999909e-05, 5.306899999999934e-05, 5.4943999999997745e-05, 5.211100000000052e-05, 5.204199999999867e-05, 5.309699999999848e-05, 5.213899999999966e-05, 5.58610000000008e-05, 5.401400000000153e-05, 5.02079999999995e-05, 5.4944000000001214e-05, 5.595900000000126e-05, 5.111199999999899e-05, 5.308300000000238e-05, 5.493100000000112e-05, 5.5915999999999605e-05, 5.6000000000000494e-05, 5.205599999999824e-05, 5.112499999999909e-05, 5.213899999999966e-05, 5.3985999999998924e-05, 5.118100000000084e-05, 5.30280000000001e-05, 5.300000000000096e-05, 5.5957999999998315e-05, 5.306899999999934e-05, 5.405600000000024e-05, 5.683399999999866e-05, 5.301400000000053e-05, 5.019399999999993e-05, 5.300000000000096e-05, 5.213899999999966e-05, 5.5013999999999064e-05, 5.012500000000156e-05, 5.113899999999866e-05, 5.594500000000169e-05, 5.5013999999999064e-05, 5.022199999999907e-05, 5.5902000000000035e-05, 5.5986000000000924e-05, 5.5929999999999175e-05, 5.305499999999977e-05]</msg>
<status status="PASS" starttime="20201112 12:26:42.922" endtime="20201112 12:26:42.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.918" endtime="20201112 12:26:42.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.927" endtime="20201112 12:26:42.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.931" endtime="20201112 12:26:42.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.929" endtime="20201112 12:26:42.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.926" endtime="20201112 12:26:42.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.557" endtime="20201112 12:26:42.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.557" endtime="20201112 12:26:42.952"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.960" endtime="20201112 12:26:42.982"></status>
</kw>
<msg timestamp="20201112 12:26:42.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.959" endtime="20201112 12:26:42.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.984" endtime="20201112 12:26:42.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.986" endtime="20201112 12:26:42.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.956" endtime="20201112 12:26:42.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.954" endtime="20201112 12:26:42.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.996" endtime="20201112 12:26:43.283"></status>
</kw>
<msg timestamp="20201112 12:26:43.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023168319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023220444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.995" endtime="20201112 12:26:43.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023168319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023220444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.288" endtime="20201112 12:26:43.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.296" endtime="20201112 12:26:43.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.992" endtime="20201112 12:26:43.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.991" endtime="20201112 12:26:43.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.303" level="INFO">${RESULT} = [{'time': 0.023220444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.212500000000009e-05, 'source_diff': 5.212500000000009e-05}, {'time': 0.02328175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:43.300" endtime="20201112 12:26:43.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:43.317" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:43.305" endtime="20201112 12:26:43.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.322" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:26:43.321" endtime="20201112 12:26:43.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.324" level="INFO">VALUE: [5.212500000000009e-05, 5.02079999999995e-05, 5.4972000000000354e-05, 5.205499999999877e-05, 5.4944000000001214e-05, 5.595900000000126e-05, 5.018099999999984e-05, 5.20409999999992e-05, 5.018000000000036e-05, 5.6791999999999954e-05, 5.02079999999995e-05, 5.305599999999924e-05, 5.306899999999934e-05, 5.594500000000169e-05, 5.5943999999998745e-05, 5.208299999999791e-05, 5.1152000000002223e-05, 5.111099999999952e-05, 5.406999999999981e-05, 5.495900000000026e-05, 5.58610000000008e-05, 5.122200000000007e-05, 5.4985999999999924e-05, 5.112500000000256e-05, 5.30410000000002e-05, 5.306999999999881e-05, 5.5902000000000035e-05, 5.591699999999908e-05, 5.030500000000049e-05, 5.3985999999998924e-05, 5.5943999999998745e-05, 5.208300000000138e-05, 5.308300000000238e-05, 5.587500000000037e-05, 5.588899999999994e-05, 5.5013999999999064e-05, 5.3957999999999784e-05, 5.306899999999934e-05, 5.5027999999998634e-05, 5.590299999999951e-05, 5.308300000000238e-05, 5.502699999999916e-05, 5.208300000000138e-05, 5.4013999999998064e-05, 5.4972000000000354e-05, 5.40280000000011e-05, 5.206899999999834e-05, 5.306900000000281e-05, 5.494500000000069e-05, 5.020899999999898e-05]</msg>
<status status="PASS" starttime="20201112 12:26:43.323" endtime="20201112 12:26:43.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.318" endtime="20201112 12:26:43.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.328" endtime="20201112 12:26:43.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.331" endtime="20201112 12:26:43.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.330" endtime="20201112 12:26:43.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.326" endtime="20201112 12:26:43.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.953" endtime="20201112 12:26:43.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.952" endtime="20201112 12:26:43.352"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.361" endtime="20201112 12:26:43.384"></status>
</kw>
<msg timestamp="20201112 12:26:43.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.359" endtime="20201112 12:26:43.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.386" endtime="20201112 12:26:43.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.388" endtime="20201112 12:26:43.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.357" endtime="20201112 12:26:43.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.355" endtime="20201112 12:26:43.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.398" endtime="20201112 12:26:43.683"></status>
</kw>
<msg timestamp="20201112 12:26:43.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024673528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.397" endtime="20201112 12:26:43.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024673528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.688" endtime="20201112 12:26:43.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.696" endtime="20201112 12:26:43.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.394" endtime="20201112 12:26:43.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.392" endtime="20201112 12:26:43.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.703" level="INFO">${RESULT} = [{'time': 0.024720889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736099999999924e-05, 'source_diff': 4.736099999999924e-05}, {'time': 0.024781347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:43.699" endtime="20201112 12:26:43.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:43.716" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:43.704" endtime="20201112 12:26:43.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.721" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:26:43.720" endtime="20201112 12:26:43.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.723" level="INFO">VALUE: [4.736099999999924e-05, 5.4027999999997633e-05, 5.301400000000053e-05, 5.4972000000000354e-05, 5.3957999999999784e-05, 5.6014000000000064e-05, 5.025000000000168e-05, 5.593099999999865e-05, 5.206999999999781e-05, 5.213899999999966e-05, 5.297200000000182e-05, 5.209700000000095e-05, 5.5958000000001784e-05, 5.394499999999969e-05, 5.213899999999966e-05, 5.4027999999997633e-05, 4.929200000000286e-05, 5.405500000000077e-05, 5.306999999999881e-05, 5.306999999999881e-05, 5.019399999999993e-05, 5.5915999999999605e-05, 5.3971999999999354e-05, 5.212500000000009e-05, 5.3971999999999354e-05, 5.5915999999999605e-05, 5.40280000000011e-05, 5.400000000000196e-05, 5.019499999999941e-05, 5.5944000000002214e-05, 5.588899999999994e-05, 5.0222999999998547e-05, 5.3999999999998494e-05, 5.591700000000255e-05, 5.4972000000000354e-05, 5.68749999999979e-05, 5.4027999999997633e-05, 5.211100000000052e-05, 5.688900000000094e-05, 5.5027999999998634e-05, 5.212500000000009e-05, 5.108300000000038e-05, 5.113900000000213e-05, 5.016600000000079e-05, 5.209700000000095e-05, 5.688900000000094e-05, 5.0151999999997754e-05, 5.30280000000001e-05, 5.211099999999705e-05, 5.019399999999993e-05]</msg>
<status status="PASS" starttime="20201112 12:26:43.722" endtime="20201112 12:26:43.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.717" endtime="20201112 12:26:43.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.727" endtime="20201112 12:26:43.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.730" endtime="20201112 12:26:43.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.729" endtime="20201112 12:26:43.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.725" endtime="20201112 12:26:43.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.353" endtime="20201112 12:26:43.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.352" endtime="20201112 12:26:43.751"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.760" endtime="20201112 12:26:43.781"></status>
</kw>
<msg timestamp="20201112 12:26:43.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.758" endtime="20201112 12:26:43.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.782" endtime="20201112 12:26:43.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.785" endtime="20201112 12:26:43.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.756" endtime="20201112 12:26:43.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.753" endtime="20201112 12:26:43.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.795" endtime="20201112 12:26:44.081"></status>
</kw>
<msg timestamp="20201112 12:26:44.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022647847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.793" endtime="20201112 12:26:44.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022647847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.085" endtime="20201112 12:26:44.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.093" endtime="20201112 12:26:44.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.791" endtime="20201112 12:26:44.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.789" endtime="20201112 12:26:44.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.100" level="INFO">${RESULT} = [{'time': 0.022711486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.363900000000075e-05, 'source_diff': 6.363900000000075e-05}, {'time': 0.022772722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:44.096" endtime="20201112 12:26:44.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:44.114" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:44.101" endtime="20201112 12:26:44.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.119" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:26:44.118" endtime="20201112 12:26:44.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.121" level="INFO">VALUE: [6.363900000000075e-05, 5.490299999999851e-05, 5.309700000000195e-05, 5.01669999999968e-05, 5.119400000000093e-05, 5.305499999999977e-05, 5.594500000000169e-05, 5.301400000000053e-05, 5.1193999999997464e-05, 5.019399999999993e-05, 5.4999999999999494e-05, 5.4929999999998175e-05, 5.215299999999923e-05, 5.395800000000325e-05, 5.206900000000181e-05, 5.405600000000024e-05, 5.013900000000113e-05, 5.597300000000083e-05, 5.206899999999834e-05, 5.40280000000011e-05, 5.590299999999951e-05, 5.5013999999999064e-05, 5.112499999999909e-05, 5.025000000000168e-05, 5.211100000000052e-05, 5.11669999999978e-05, 5.012500000000156e-05, 5.018000000000036e-05, 5.1165999999998324e-05, 5.016600000000079e-05, 4.926400000000025e-05, 5.306899999999934e-05, 5.4915999999998605e-05, 5.6000000000000494e-05, 5.491699999999808e-05, 5.205599999999824e-05, 5.113900000000213e-05, 5.58610000000008e-05, 5.115299999999823e-05, 5.30280000000001e-05, 5.308399999999838e-05, 5.4944000000001214e-05, 5.307000000000228e-05, 5.012499999999809e-05, 5.300000000000096e-05, 5.494500000000069e-05, 5.1165999999998324e-05, 5.109799999999942e-05, 5.016700000000027e-05, 5.405500000000077e-05]</msg>
<status status="PASS" starttime="20201112 12:26:44.120" endtime="20201112 12:26:44.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.115" endtime="20201112 12:26:44.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.125" endtime="20201112 12:26:44.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.128" endtime="20201112 12:26:44.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.127" endtime="20201112 12:26:44.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.123" endtime="20201112 12:26:44.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.752" endtime="20201112 12:26:44.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.751" endtime="20201112 12:26:44.149"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.158" endtime="20201112 12:26:44.177"></status>
</kw>
<msg timestamp="20201112 12:26:44.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.156" endtime="20201112 12:26:44.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.179" endtime="20201112 12:26:44.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.181" endtime="20201112 12:26:44.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.154" endtime="20201112 12:26:44.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.151" endtime="20201112 12:26:44.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.191" endtime="20201112 12:26:44.478"></status>
</kw>
<msg timestamp="20201112 12:26:44.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021526778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.190" endtime="20201112 12:26:44.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021526778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.482" endtime="20201112 12:26:44.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.491" endtime="20201112 12:26:44.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.187" endtime="20201112 12:26:44.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.185" endtime="20201112 12:26:44.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.497" level="INFO">${RESULT} = [{'time': 0.021526778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.447199999999945e-05, 'source_diff': 6.447199999999945e-05}, {'time': 0.021588625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:44.494" endtime="20201112 12:26:44.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:44.511" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:44.498" endtime="20201112 12:26:44.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.515" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:26:44.514" endtime="20201112 12:26:44.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.518" level="INFO">VALUE: [6.447199999999945e-05, 5.405600000000024e-05, 5.404200000000067e-05, 5.4902000000002504e-05, 5.587500000000037e-05, 5.119400000000093e-05, 5.118100000000084e-05, 5.2971999999998354e-05, 5.025000000000168e-05, 5.025000000000168e-05, 5.112499999999909e-05, 5.220899999999751e-05, 5.12080000000005e-05, 5.404200000000067e-05, 5.018000000000036e-05, 5.405500000000077e-05, 5.504099999999873e-05, 5.301300000000106e-05, 5.5986000000000924e-05, 5.4985999999999924e-05, 5.018099999999984e-05, 5.6000000000000494e-05, 5.21669999999988e-05, 5.495900000000026e-05, 5.115299999999823e-05, 5.6930000000000175e-05, 5.111099999999952e-05, 5.113899999999866e-05, 5.5986000000000924e-05, 5.5943999999998745e-05, 5.011100000000199e-05, 5.311100000000152e-05, 5.11530000000017e-05, 5.30280000000001e-05, 5.408299999999991e-05, 5.405500000000077e-05, 5.595900000000126e-05, 5.305599999999924e-05, 5.4985999999999924e-05, 5.304199999999967e-05, 5.123599999999964e-05, 5.4999999999999494e-05, 5.408399999999938e-05, 5.6916000000000605e-05, 5.12080000000005e-05, 5.401400000000153e-05, 5.208400000000085e-05, 5.118100000000084e-05, 5.5013999999999064e-05, 5.3999999999998494e-05]</msg>
<status status="PASS" starttime="20201112 12:26:44.516" endtime="20201112 12:26:44.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.512" endtime="20201112 12:26:44.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.521" endtime="20201112 12:26:44.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.525" endtime="20201112 12:26:44.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.523" endtime="20201112 12:26:44.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.520" endtime="20201112 12:26:44.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.150" endtime="20201112 12:26:44.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.149" endtime="20201112 12:26:44.546"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.554" endtime="20201112 12:26:44.574"></status>
</kw>
<msg timestamp="20201112 12:26:44.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.553" endtime="20201112 12:26:44.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.575" endtime="20201112 12:26:44.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.578" endtime="20201112 12:26:44.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.550" endtime="20201112 12:26:44.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.548" endtime="20201112 12:26:44.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.588" endtime="20201112 12:26:44.873"></status>
</kw>
<msg timestamp="20201112 12:26:44.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.586" endtime="20201112 12:26:44.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.877" endtime="20201112 12:26:44.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.886" endtime="20201112 12:26:44.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.584" endtime="20201112 12:26:44.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.582" endtime="20201112 12:26:44.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.892" level="INFO">${RESULT} = [{'time': 0.021685653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.633399999999857e-05, 'source_diff': 4.633399999999857e-05}, {'time': 0.021746722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:44.889" endtime="20201112 12:26:44.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:44.906" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:44.893" endtime="20201112 12:26:44.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.910" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:26:44.909" endtime="20201112 12:26:44.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.912" level="INFO">VALUE: [4.633399999999857e-05, 5.206899999999834e-05, 5.5027999999998634e-05, 5.011099999999852e-05, 5.309700000000195e-05, 5.009699999999895e-05, 5.2151999999999754e-05, 4.918000000000283e-05, 5.209800000000042e-05, 5.119500000000041e-05, 5.302799999999663e-05, 5.022200000000254e-05, 5.30410000000002e-05, 5.308299999999891e-05, 5.301400000000053e-05, 5.588899999999994e-05, 5.022200000000254e-05, 5.3971999999999354e-05, 5.405600000000024e-05, 5.009700000000242e-05, 5.4999999999999494e-05, 5.208300000000138e-05, 5.207000000000128e-05, 5.5957999999998315e-05, 5.301400000000053e-05, 5.018000000000036e-05, 5.312500000000109e-05, 5.408399999999938e-05, 5.013900000000113e-05, 5.590299999999951e-05, 5.023600000000211e-05, 5.016700000000027e-05, 5.20270000000031e-05, 5.116700000000127e-05, 5.11669999999978e-05, 5.3985999999998924e-05, 5.3999999999998494e-05, 5.306900000000281e-05, 5.109699999999995e-05, 5.012500000000156e-05, 5.5986000000000924e-05, 5.209700000000095e-05, 5.016700000000027e-05, 5.205500000000224e-05, 5.213900000000313e-05, 5.588899999999994e-05, 5.11530000000017e-05, 5.308400000000185e-05, 5.019499999999941e-05, 5.5957999999998315e-05]</msg>
<status status="PASS" starttime="20201112 12:26:44.911" endtime="20201112 12:26:44.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.906" endtime="20201112 12:26:44.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.916" endtime="20201112 12:26:44.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.920" endtime="20201112 12:26:44.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.918" endtime="20201112 12:26:44.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.914" endtime="20201112 12:26:44.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.547" endtime="20201112 12:26:44.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.546" endtime="20201112 12:26:44.941"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.949" endtime="20201112 12:26:44.972"></status>
</kw>
<msg timestamp="20201112 12:26:44.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.948" endtime="20201112 12:26:44.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.973" endtime="20201112 12:26:44.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.976" endtime="20201112 12:26:44.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.945" endtime="20201112 12:26:44.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.943" endtime="20201112 12:26:44.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.986" endtime="20201112 12:26:45.272"></status>
</kw>
<msg timestamp="20201112 12:26:45.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023760417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023797264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.984" endtime="20201112 12:26:45.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023760417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023797264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.276" endtime="20201112 12:26:45.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.284" endtime="20201112 12:26:45.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.982" endtime="20201112 12:26:45.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.980" endtime="20201112 12:26:45.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.291" level="INFO">${RESULT} = [{'time': 0.023797264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6846999999999575e-05, 'source_diff': 3.6846999999999575e-05}, {'time': 0.023857764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:45.287" endtime="20201112 12:26:45.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:45.304" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:45.292" endtime="20201112 12:26:45.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.309" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:26:45.308" endtime="20201112 12:26:45.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.311" level="INFO">VALUE: [3.6846999999999575e-05, 5.394499999999969e-05, 5.4013999999998064e-05, 5.305499999999977e-05, 5.01669999999968e-05, 5.593099999999865e-05, 5.4985999999999924e-05, 5.402700000000163e-05, 5.212500000000009e-05, 5.5027999999998634e-05, 5.306899999999934e-05, 5.49869999999994e-05, 5.4013999999998064e-05, 5.495900000000026e-05, 5.493100000000112e-05, 5.305499999999977e-05, 5.018000000000036e-05, 5.212500000000009e-05, 5.5929999999999175e-05, 5.4930000000001644e-05, 5.2207999999998034e-05, 5.3971999999999354e-05, 5.211100000000052e-05, 5.506899999999787e-05, 5.591700000000255e-05, 5.30280000000001e-05, 5.4972000000000354e-05, 5.118000000000136e-05, 5.5902000000000035e-05, 5.308299999999891e-05, 5.4013999999998064e-05, 5.408299999999991e-05, 5.5902000000000035e-05, 5.405600000000024e-05, 5.508400000000038e-05, 5.4013999999998064e-05, 5.593099999999865e-05, 5.40280000000011e-05, 5.113899999999866e-05, 5.019399999999993e-05, 5.587500000000037e-05, 5.1179999999997894e-05, 5.11530000000017e-05, 5.0222999999998547e-05, 5.401400000000153e-05, 5.300000000000096e-05, 5.5929999999999175e-05, 5.11669999999978e-05, 5.5013999999999064e-05, 5.504200000000167e-05]</msg>
<status status="PASS" starttime="20201112 12:26:45.310" endtime="20201112 12:26:45.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.305" endtime="20201112 12:26:45.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.315" endtime="20201112 12:26:45.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.318" endtime="20201112 12:26:45.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.316" endtime="20201112 12:26:45.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.313" endtime="20201112 12:26:45.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.941" endtime="20201112 12:26:45.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.941" endtime="20201112 12:26:45.339"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.348" endtime="20201112 12:26:45.369"></status>
</kw>
<msg timestamp="20201112 12:26:45.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.347" endtime="20201112 12:26:45.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.371" endtime="20201112 12:26:45.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.373" endtime="20201112 12:26:45.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.344" endtime="20201112 12:26:45.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.342" endtime="20201112 12:26:45.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.383" endtime="20201112 12:26:45.668"></status>
</kw>
<msg timestamp="20201112 12:26:45.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021916569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.382" endtime="20201112 12:26:45.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021916569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.672" endtime="20201112 12:26:45.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.680" endtime="20201112 12:26:45.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.379" endtime="20201112 12:26:45.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.378" endtime="20201112 12:26:45.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.687" level="INFO">${RESULT} = [{'time': 0.021971486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.491699999999808e-05, 'source_diff': 5.491699999999808e-05}, {'time': 0.022031903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:45.683" endtime="20201112 12:26:45.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:45.701" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:45.688" endtime="20201112 12:26:45.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.706" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:26:45.705" endtime="20201112 12:26:45.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.708" level="INFO">VALUE: [5.491699999999808e-05, 5.118099999999737e-05, 5.5986000000000924e-05, 5.4944000000001214e-05, 5.5013999999999064e-05, 5.11530000000017e-05, 5.4972000000000354e-05, 5.212500000000009e-05, 5.594499999999822e-05, 5.504200000000167e-05, 5.300000000000096e-05, 5.506899999999787e-05, 5.215299999999923e-05, 5.211199999999999e-05, 5.105499999999777e-05, 5.500000000000296e-05, 5.119500000000041e-05, 5.5971999999997885e-05, 5.301400000000053e-05, 5.215299999999923e-05, 5.4999999999999494e-05, 5.404200000000067e-05, 5.1165999999998324e-05, 5.109800000000289e-05, 5.311099999999805e-05, 5.213899999999966e-05, 5.6027999999999634e-05, 5.6000000000000494e-05, 5.408299999999991e-05, 5.2999999999997494e-05, 5.4958000000000784e-05, 5.588899999999994e-05, 5.405600000000024e-05, 5.119500000000041e-05, 5.594500000000169e-05, 5.11530000000017e-05, 5.398600000000239e-05, 5.0222999999998547e-05, 5.026300000000178e-05, 5.40280000000011e-05, 5.300000000000096e-05, 5.024999999999821e-05, 5.406900000000034e-05, 5.1207999999997034e-05, 5.40280000000011e-05, 5.30280000000001e-05, 5.212500000000009e-05, 5.0151999999997754e-05, 5.113900000000213e-05, 5.30410000000002e-05]</msg>
<status status="PASS" starttime="20201112 12:26:45.707" endtime="20201112 12:26:45.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.702" endtime="20201112 12:26:45.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.712" endtime="20201112 12:26:45.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.716" endtime="20201112 12:26:45.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.714" endtime="20201112 12:26:45.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.710" endtime="20201112 12:26:45.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.340" endtime="20201112 12:26:45.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.340" endtime="20201112 12:26:45.737"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.745" endtime="20201112 12:26:45.765"></status>
</kw>
<msg timestamp="20201112 12:26:45.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.744" endtime="20201112 12:26:45.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.767" endtime="20201112 12:26:45.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.769" endtime="20201112 12:26:45.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.741" endtime="20201112 12:26:45.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.739" endtime="20201112 12:26:45.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.779" endtime="20201112 12:26:46.066"></status>
</kw>
<msg timestamp="20201112 12:26:46.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021592431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021640764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.778" endtime="20201112 12:26:46.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021592431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021640764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.070" endtime="20201112 12:26:46.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.078" endtime="20201112 12:26:46.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.775" endtime="20201112 12:26:46.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.773" endtime="20201112 12:26:46.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.085" level="INFO">${RESULT} = [{'time': 0.021640764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.83330000000011e-05, 'source_diff': 4.83330000000011e-05}, {'time': 0.021702583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:46.082" endtime="20201112 12:26:46.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:46.099" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:46.086" endtime="20201112 12:26:46.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.103" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:26:46.102" endtime="20201112 12:26:46.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.106" level="INFO">VALUE: [4.83330000000011e-05, 5.40410000000012e-05, 5.4929999999998175e-05, 5.219400000000193e-05, 5.594499999999822e-05, 5.4901999999999035e-05, 5.405600000000024e-05, 5.119400000000093e-05, 5.218000000000236e-05, 5.405600000000024e-05, 5.12080000000005e-05, 5.304199999999967e-05, 5.4985999999999924e-05, 5.023599999999864e-05, 5.118100000000084e-05, 5.406900000000034e-05, 5.0209000000002446e-05, 5.025000000000168e-05, 5.213899999999966e-05, 5.311099999999805e-05, 5.116700000000127e-05, 5.204200000000214e-05, 5.311199999999752e-05, 5.215299999999923e-05, 5.597300000000083e-05, 5.213899999999966e-05, 5.111199999999899e-05, 5.019399999999993e-05, 5.12080000000005e-05, 5.122299999999955e-05, 5.307000000000228e-05, 5.586099999999733e-05, 5.30280000000001e-05, 5.408299999999991e-05, 5.311100000000152e-05, 5.213899999999966e-05, 5.593099999999865e-05, 5.40410000000012e-05, 5.308399999999838e-05, 5.213899999999966e-05, 5.0223000000002016e-05, 5.1193999999997464e-05, 5.5958000000001784e-05, 5.4999999999999494e-05, 5.018099999999984e-05, 5.116700000000127e-05, 5.40280000000011e-05, 5.586200000000027e-05, 5.5027999999998634e-05, 5.022200000000254e-05]</msg>
<status status="PASS" starttime="20201112 12:26:46.104" endtime="20201112 12:26:46.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.099" endtime="20201112 12:26:46.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.109" endtime="20201112 12:26:46.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.113" endtime="20201112 12:26:46.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.111" endtime="20201112 12:26:46.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.108" endtime="20201112 12:26:46.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.737" endtime="20201112 12:26:46.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.737" endtime="20201112 12:26:46.133"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.142" endtime="20201112 12:26:46.162"></status>
</kw>
<msg timestamp="20201112 12:26:46.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.141" endtime="20201112 12:26:46.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.163" endtime="20201112 12:26:46.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.166" endtime="20201112 12:26:46.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.138" endtime="20201112 12:26:46.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.136" endtime="20201112 12:26:46.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.176" endtime="20201112 12:26:46.462"></status>
</kw>
<msg timestamp="20201112 12:26:46.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021518653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021555472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.174" endtime="20201112 12:26:46.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021518653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021555472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.466" endtime="20201112 12:26:46.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.474" endtime="20201112 12:26:46.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.172" endtime="20201112 12:26:46.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.170" endtime="20201112 12:26:46.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.481" level="INFO">${RESULT} = [{'time': 0.021555472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6819000000000435e-05, 'source_diff': 3.6819000000000435e-05}, {'time': 0.021616194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:46.477" endtime="20201112 12:26:46.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:46.494" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:46.482" endtime="20201112 12:26:46.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.499" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:26:46.498" endtime="20201112 12:26:46.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.501" level="INFO">VALUE: [3.6819000000000435e-05, 5.108299999999691e-05, 5.3957999999999784e-05, 5.6041999999999204e-05, 5.398600000000239e-05, 5.5013999999999064e-05, 5.205599999999824e-05, 5.015200000000122e-05, 5.215299999999923e-05, 5.301400000000053e-05, 5.212500000000009e-05, 5.208399999999738e-05, 5.01530000000007e-05, 5.022200000000254e-05, 5.5985999999997454e-05, 5.5902000000000035e-05, 5.4027999999997633e-05, 5.30280000000001e-05, 5.593100000000212e-05, 5.4985999999999924e-05, 5.406899999999687e-05, 5.588899999999994e-05, 5.211100000000052e-05, 5.30280000000001e-05, 5.304199999999967e-05, 5.1179999999997894e-05, 5.3957999999999784e-05, 5.206899999999834e-05, 5.025000000000168e-05, 5.119400000000093e-05, 5.212500000000009e-05, 5.5972000000001354e-05, 5.018099999999984e-05, 5.020800000000297e-05, 5.209700000000095e-05, 5.2138000000000184e-05, 5.412499999999862e-05, 4.920800000000197e-05, 5.022200000000254e-05, 5.205499999999877e-05, 5.015299999999723e-05, 5.212500000000009e-05, 5.302699999999716e-05, 5.118000000000136e-05, 5.018099999999984e-05, 5.6014000000000064e-05, 5.5958000000001784e-05, 5.30280000000001e-05, 5.12080000000005e-05, 5.211099999999705e-05]</msg>
<status status="PASS" starttime="20201112 12:26:46.500" endtime="20201112 12:26:46.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.495" endtime="20201112 12:26:46.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.505" endtime="20201112 12:26:46.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.508" endtime="20201112 12:26:46.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.507" endtime="20201112 12:26:46.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.503" endtime="20201112 12:26:46.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.134" endtime="20201112 12:26:46.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.134" endtime="20201112 12:26:46.529"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.538" endtime="20201112 12:26:46.560"></status>
</kw>
<msg timestamp="20201112 12:26:46.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.536" endtime="20201112 12:26:46.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.561" endtime="20201112 12:26:46.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.564" endtime="20201112 12:26:46.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.534" endtime="20201112 12:26:46.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.532" endtime="20201112 12:26:46.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.574" endtime="20201112 12:26:46.859"></status>
</kw>
<msg timestamp="20201112 12:26:46.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.573" endtime="20201112 12:26:46.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.863" endtime="20201112 12:26:46.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.872" endtime="20201112 12:26:46.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.570" endtime="20201112 12:26:46.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.568" endtime="20201112 12:26:46.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.878" level="INFO">${RESULT} = [{'time': 0.022750944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.448599999999983e-05, 'source_diff': 4.448599999999983e-05}, {'time': 0.022812125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:46.875" endtime="20201112 12:26:46.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:46.892" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:46.879" endtime="20201112 12:26:46.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.896" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:26:46.895" endtime="20201112 12:26:46.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.899" level="INFO">VALUE: [4.448599999999983e-05, 5.2999999999997494e-05, 5.401299999999859e-05, 5.301400000000053e-05, 5.01530000000007e-05, 5.022199999999907e-05, 5.0209000000002446e-05, 5.3971999999999354e-05, 5.686099999999833e-05, 5.5041999999998203e-05, 5.406999999999981e-05, 5.3971999999999354e-05, 5.315300000000023e-05, 5.690299999999704e-05, 5.211100000000052e-05, 5.208299999999791e-05, 5.5915999999999605e-05, 5.4985999999999924e-05, 5.398600000000239e-05, 5.022199999999907e-05, 5.4944000000001214e-05, 5.30280000000001e-05, 5.493100000000112e-05, 5.029200000000039e-05, 5.301400000000053e-05, 5.305499999999977e-05, 5.50549999999983e-05, 5.304199999999967e-05, 5.4972000000000354e-05, 5.301400000000053e-05, 5.112499999999909e-05, 5.490300000000198e-05, 5.208400000000085e-05, 5.4985999999999924e-05, 5.108399999999985e-05, 5.116700000000127e-05, 5.109699999999995e-05, 5.5013999999999064e-05, 5.586099999999733e-05, 5.304199999999967e-05, 5.6000000000000494e-05, 5.406999999999981e-05, 5.206899999999834e-05, 5.02079999999995e-05, 5.025000000000168e-05, 5.113900000000213e-05, 5.4958000000000784e-05, 5.209699999999748e-05, 5.023600000000211e-05, 5.4999999999999494e-05]</msg>
<status status="PASS" starttime="20201112 12:26:46.897" endtime="20201112 12:26:46.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.893" endtime="20201112 12:26:46.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.906" endtime="20201112 12:26:46.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.910" endtime="20201112 12:26:46.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.908" endtime="20201112 12:26:46.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.905" endtime="20201112 12:26:46.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.530" endtime="20201112 12:26:46.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.529" endtime="20201112 12:26:46.931"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.939" endtime="20201112 12:26:46.961"></status>
</kw>
<msg timestamp="20201112 12:26:46.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.938" endtime="20201112 12:26:46.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.963" endtime="20201112 12:26:46.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.965" endtime="20201112 12:26:46.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.935" endtime="20201112 12:26:46.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.933" endtime="20201112 12:26:46.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.975" endtime="20201112 12:26:47.261"></status>
</kw>
<msg timestamp="20201112 12:26:47.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023115944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023152847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.974" endtime="20201112 12:26:47.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023115944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023152847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.265" endtime="20201112 12:26:47.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.273" endtime="20201112 12:26:47.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.971" endtime="20201112 12:26:47.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.969" endtime="20201112 12:26:47.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.280" level="INFO">${RESULT} = [{'time': 0.023152847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6903000000001324e-05, 'source_diff': 3.6903000000001324e-05}, {'time': 0.023213569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:47.277" endtime="20201112 12:26:47.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:47.340" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:47.281" endtime="20201112 12:26:47.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.344" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:26:47.343" endtime="20201112 12:26:47.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.347" level="INFO">VALUE: [3.6903000000001324e-05, 5.02079999999995e-05, 5.02079999999995e-05, 5.312499999999762e-05, 5.3166000000000324e-05, 5.118099999999737e-05, 5.5013999999999064e-05, 5.02079999999995e-05, 5.4958000000000784e-05, 5.113899999999866e-05, 5.408299999999991e-05, 5.1193999999997464e-05, 5.409799999999895e-05, 5.21669999999988e-05, 5.305600000000271e-05, 5.4972000000000354e-05, 5.404200000000067e-05, 5.122200000000007e-05, 5.688900000000094e-05, 5.112499999999909e-05, 5.027700000000135e-05, 5.594500000000169e-05, 5.59870000000004e-05, 5.400000000000196e-05, 5.116700000000127e-05, 5.213899999999966e-05, 5.027799999999735e-05, 5.591699999999908e-05, 5.304199999999967e-05, 5.4999999999999494e-05, 5.209700000000095e-05, 5.502699999999916e-05, 5.315300000000023e-05, 5.025000000000168e-05, 5.211199999999999e-05, 5.494500000000069e-05, 5.588899999999994e-05, 5.3971999999999354e-05, 5.5986000000000924e-05, 5.406999999999981e-05, 5.5958000000001784e-05, 5.4972000000000354e-05, 5.118000000000136e-05, 5.212500000000009e-05, 5.5971999999997885e-05, 5.019399999999993e-05, 5.5041999999998203e-05, 5.12080000000005e-05, 5.5915999999999605e-05, 5.211099999999705e-05]</msg>
<status status="PASS" starttime="20201112 12:26:47.345" endtime="20201112 12:26:47.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.341" endtime="20201112 12:26:47.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.351" endtime="20201112 12:26:47.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.355" endtime="20201112 12:26:47.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.353" endtime="20201112 12:26:47.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.349" endtime="20201112 12:26:47.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.932" endtime="20201112 12:26:47.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.931" endtime="20201112 12:26:47.376"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.385" endtime="20201112 12:26:47.408"></status>
</kw>
<msg timestamp="20201112 12:26:47.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.383" endtime="20201112 12:26:47.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.409" endtime="20201112 12:26:47.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.412" endtime="20201112 12:26:47.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.381" endtime="20201112 12:26:47.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.379" endtime="20201112 12:26:47.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.421" endtime="20201112 12:26:47.707"></status>
</kw>
<msg timestamp="20201112 12:26:47.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024758958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024799542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.419" endtime="20201112 12:26:47.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024758958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024799542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.711" endtime="20201112 12:26:47.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.720" endtime="20201112 12:26:47.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.417" endtime="20201112 12:26:47.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.415" endtime="20201112 12:26:47.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.726" level="INFO">${RESULT} = [{'time': 0.024799542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.058399999999976e-05, 'source_diff': 4.058399999999976e-05}, {'time': 0.024860986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:47.723" endtime="20201112 12:26:47.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:47.740" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:47.727" endtime="20201112 12:26:47.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.745" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:26:47.744" endtime="20201112 12:26:47.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.747" level="INFO">VALUE: [4.058399999999976e-05, 5.116700000000127e-05, 5.20279999999991e-05, 5.508300000000091e-05, 5.29730000000013e-05, 5.313900000000066e-05, 5.30280000000001e-05, 5.118000000000136e-05, 5.112500000000256e-05, 5.1165999999998324e-05, 5.588899999999994e-05, 5.212500000000009e-05, 5.395899999999926e-05, 5.026400000000125e-05, 5.209700000000095e-05, 5.020899999999898e-05, 5.3999999999998494e-05, 5.405600000000024e-05, 5.487499999999937e-05, 5.111100000000299e-05, 5.116700000000127e-05, 5.4985999999999924e-05, 5.5888000000000465e-05, 5.213899999999966e-05, 5.202800000000257e-05, 5.113899999999866e-05, 5.206900000000181e-05, 5.02079999999995e-05, 5.590299999999951e-05, 5.50280000000021e-05, 5.016700000000027e-05, 5.023599999999864e-05, 5.40280000000011e-05, 5.5915999999999605e-05, 5.5929999999999175e-05, 5.016700000000027e-05, 5.495900000000026e-05, 5.5902000000000035e-05, 5.2165999999999324e-05, 5.309699999999848e-05, 5.4943999999997745e-05, 5.6000000000000494e-05, 5.113899999999866e-05, 5.4999999999999494e-05, 5.4958000000000784e-05, 5.020899999999898e-05, 5.304199999999967e-05, 5.4944000000001214e-05, 5.308299999999891e-05, 5.5902000000000035e-05]</msg>
<status status="PASS" starttime="20201112 12:26:47.746" endtime="20201112 12:26:47.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.741" endtime="20201112 12:26:47.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.751" endtime="20201112 12:26:47.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.754" endtime="20201112 12:26:47.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.752" endtime="20201112 12:26:47.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.749" endtime="20201112 12:26:47.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.377" endtime="20201112 12:26:47.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.377" endtime="20201112 12:26:47.775"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.784" endtime="20201112 12:26:47.805"></status>
</kw>
<msg timestamp="20201112 12:26:47.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.782" endtime="20201112 12:26:47.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.806" endtime="20201112 12:26:47.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.809" endtime="20201112 12:26:47.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.779" endtime="20201112 12:26:47.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.777" endtime="20201112 12:26:47.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.818" endtime="20201112 12:26:48.103"></status>
</kw>
<msg timestamp="20201112 12:26:48.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022839306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.816" endtime="20201112 12:26:48.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022839306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.107" endtime="20201112 12:26:48.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.115" endtime="20201112 12:26:48.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.813" endtime="20201112 12:26:48.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.812" endtime="20201112 12:26:48.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.123" level="INFO">${RESULT} = [{'time': 0.022882792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.348599999999883e-05, 'source_diff': 4.348599999999883e-05}, {'time': 0.022943431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:48.119" endtime="20201112 12:26:48.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:48.136" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:48.124" endtime="20201112 12:26:48.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.140" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:26:48.139" endtime="20201112 12:26:48.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.143" level="INFO">VALUE: [4.348599999999883e-05, 5.204199999999867e-05, 5.40549999999973e-05, 5.50280000000021e-05, 5.215299999999923e-05, 5.591699999999908e-05, 5.404200000000067e-05, 5.406999999999981e-05, 5.6916000000000605e-05, 5.024999999999821e-05, 5.016700000000027e-05, 5.11530000000017e-05, 5.213899999999966e-05, 5.119400000000093e-05, 5.5986000000000924e-05, 5.204200000000214e-05, 5.119400000000093e-05, 5.122200000000007e-05, 5.309800000000142e-05, 5.304199999999967e-05, 5.506899999999787e-05, 5.309800000000142e-05, 5.587500000000037e-05, 5.025000000000168e-05, 5.595899999999779e-05, 5.4999999999999494e-05, 5.5971999999997885e-05, 5.308299999999891e-05, 5.583300000000166e-05, 5.406999999999981e-05, 5.401400000000153e-05, 5.50280000000021e-05, 5.3957999999999784e-05, 5.4999999999999494e-05, 5.4999999999999494e-05, 5.204200000000214e-05, 5.219499999999794e-05, 5.031999999999953e-05, 5.2151999999999754e-05, 5.206899999999834e-05, 5.215299999999923e-05, 5.311100000000152e-05, 5.119400000000093e-05, 5.3957999999999784e-05, 5.024999999999821e-05, 5.5943999999998745e-05, 5.119400000000093e-05, 5.391700000000055e-05, 5.4999999999999494e-05, 5.594499999999822e-05]</msg>
<status status="PASS" starttime="20201112 12:26:48.142" endtime="20201112 12:26:48.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.137" endtime="20201112 12:26:48.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.147" endtime="20201112 12:26:48.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.150" endtime="20201112 12:26:48.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.148" endtime="20201112 12:26:48.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.145" endtime="20201112 12:26:48.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.776" endtime="20201112 12:26:48.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.775" endtime="20201112 12:26:48.171"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.179" endtime="20201112 12:26:48.201"></status>
</kw>
<msg timestamp="20201112 12:26:48.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.178" endtime="20201112 12:26:48.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.203" endtime="20201112 12:26:48.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.205" endtime="20201112 12:26:48.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.175" endtime="20201112 12:26:48.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.173" endtime="20201112 12:26:48.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.214" endtime="20201112 12:26:48.502"></status>
</kw>
<msg timestamp="20201112 12:26:48.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023903236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023956361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.213" endtime="20201112 12:26:48.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023903236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023956361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.506" endtime="20201112 12:26:48.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.514" endtime="20201112 12:26:48.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.210" endtime="20201112 12:26:48.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.208" endtime="20201112 12:26:48.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.521" level="INFO">${RESULT} = [{'time': 0.023956361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.312499999999762e-05, 'source_diff': 5.312499999999762e-05}, {'time': 0.024017375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:48.518" endtime="20201112 12:26:48.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:48.534" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:48.522" endtime="20201112 12:26:48.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.539" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:26:48.538" endtime="20201112 12:26:48.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.541" level="INFO">VALUE: [5.312499999999762e-05, 5.490300000000198e-05, 5.408299999999991e-05, 5.122299999999955e-05, 5.023600000000211e-05, 5.109699999999995e-05, 5.311099999999805e-05, 5.409699999999948e-05, 5.205499999999877e-05, 5.4999999999999494e-05, 5.309700000000195e-05, 5.209800000000042e-05, 5.311100000000152e-05, 5.5013999999999064e-05, 5.5986000000000924e-05, 5.409699999999948e-05, 5.312500000000109e-05, 5.4916000000002074e-05, 5.3999999999998494e-05, 5.0237000000001586e-05, 5.3944000000000214e-05, 5.5957999999998315e-05, 5.595900000000126e-05, 5.309799999999795e-05, 5.108399999999985e-05, 5.025000000000168e-05, 5.394499999999969e-05, 5.502699999999916e-05, 5.4943999999997745e-05, 5.215299999999923e-05, 5.118100000000084e-05, 5.120899999999998e-05, 5.501400000000253e-05, 5.023600000000211e-05, 5.119500000000041e-05, 5.5972000000001354e-05, 5.301400000000053e-05, 5.2151999999999754e-05, 5.595899999999779e-05, 5.604099999999973e-05, 5.295899999999826e-05, 5.308300000000238e-05, 5.309700000000195e-05, 5.309799999999795e-05, 5.109699999999995e-05, 5.5958000000001784e-05, 5.21530000000027e-05, 5.0151999999997754e-05, 5.118100000000084e-05, 5.215299999999923e-05]</msg>
<status status="PASS" starttime="20201112 12:26:48.540" endtime="20201112 12:26:48.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.535" endtime="20201112 12:26:48.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.545" endtime="20201112 12:26:48.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.548" endtime="20201112 12:26:48.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.547" endtime="20201112 12:26:48.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.543" endtime="20201112 12:26:48.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.172" endtime="20201112 12:26:48.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.171" endtime="20201112 12:26:48.569"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.578" endtime="20201112 12:26:48.599"></status>
</kw>
<msg timestamp="20201112 12:26:48.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.576" endtime="20201112 12:26:48.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.601" endtime="20201112 12:26:48.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.603" endtime="20201112 12:26:48.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.574" endtime="20201112 12:26:48.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.572" endtime="20201112 12:26:48.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.612" endtime="20201112 12:26:48.899"></status>
</kw>
<msg timestamp="20201112 12:26:48.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.611" endtime="20201112 12:26:48.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.903" endtime="20201112 12:26:48.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.912" endtime="20201112 12:26:48.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.608" endtime="20201112 12:26:48.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.606" endtime="20201112 12:26:48.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.918" level="INFO">${RESULT} = [{'time': 0.022496528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1596999999997386e-05, 'source_diff': 4.1596999999997386e-05}, {'time': 0.022557611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:48.915" endtime="20201112 12:26:48.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:48.933" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:48.919" endtime="20201112 12:26:48.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.937" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:26:48.936" endtime="20201112 12:26:48.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.940" level="INFO">VALUE: [4.1596999999997386e-05, 5.590300000000298e-05, 5.4972000000000354e-05, 5.301400000000053e-05, 5.119400000000093e-05, 5.111099999999952e-05, 5.308299999999891e-05, 5.12080000000005e-05, 5.582000000000156e-05, 5.595900000000126e-05, 5.501299999999959e-05, 5.025000000000168e-05, 5.108300000000038e-05, 5.113900000000213e-05, 5.5972000000001354e-05, 5.588899999999994e-05, 5.212500000000009e-05, 5.023599999999864e-05, 5.4972000000000354e-05, 5.213899999999966e-05, 5.300000000000096e-05, 5.398600000000239e-05, 5.301400000000053e-05, 5.306899999999934e-05, 5.58610000000008e-05, 5.011100000000199e-05, 5.4999999999999494e-05, 5.022200000000254e-05, 5.409699999999948e-05, 5.113900000000213e-05, 5.307000000000228e-05, 5.588899999999994e-05, 5.594500000000169e-05, 5.3013999999997063e-05, 5.119400000000093e-05, 5.493100000000112e-05, 5.311100000000152e-05, 4.929200000000286e-05, 5.205499999999877e-05, 5.119499999999694e-05, 5.205499999999877e-05, 5.1193999999997464e-05, 5.588899999999994e-05, 5.111199999999899e-05, 5.215299999999923e-05, 5.297200000000182e-05, 5.50280000000021e-05, 5.109699999999995e-05, 5.5958000000001784e-05, 5.109699999999995e-05]</msg>
<status status="PASS" starttime="20201112 12:26:48.938" endtime="20201112 12:26:48.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.934" endtime="20201112 12:26:48.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.943" endtime="20201112 12:26:48.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.947" endtime="20201112 12:26:48.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.945" endtime="20201112 12:26:48.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.942" endtime="20201112 12:26:48.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.570" endtime="20201112 12:26:48.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.569" endtime="20201112 12:26:48.968"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.976" endtime="20201112 12:26:48.996"></status>
</kw>
<msg timestamp="20201112 12:26:48.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.975" endtime="20201112 12:26:48.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.997" endtime="20201112 12:26:48.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.000" endtime="20201112 12:26:49.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.972" endtime="20201112 12:26:49.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.970" endtime="20201112 12:26:49.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.009" endtime="20201112 12:26:49.295"></status>
</kw>
<msg timestamp="20201112 12:26:49.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020824931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020884681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.007" endtime="20201112 12:26:49.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020824931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020884681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.299" endtime="20201112 12:26:49.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.308" endtime="20201112 12:26:49.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.005" endtime="20201112 12:26:49.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.003" endtime="20201112 12:26:49.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.315" level="INFO">${RESULT} = [{'time': 0.020884681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9749999999997305e-05, 'source_diff': 5.9749999999997305e-05}, {'time': 0.020945722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:49.311" endtime="20201112 12:26:49.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:49.328" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:49.316" endtime="20201112 12:26:49.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.332" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:26:49.331" endtime="20201112 12:26:49.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.335" level="INFO">VALUE: [5.9749999999997305e-05, 5.3999999999998494e-05, 5.2151999999999754e-05, 5.590300000000298e-05, 5.019499999999941e-05, 5.588899999999994e-05, 5.11530000000017e-05, 5.688900000000094e-05, 5.401300000000206e-05, 5.4958000000000784e-05, 5.311099999999805e-05, 5.207000000000128e-05, 5.68610000000018e-05, 5.311100000000152e-05, 5.012500000000156e-05, 5.118000000000136e-05, 5.218100000000184e-05, 5.309700000000195e-05, 5.023599999999864e-05, 5.684699999999876e-05, 5.4999999999999494e-05, 5.119400000000093e-05, 5.118000000000136e-05, 5.112499999999909e-05, 5.312500000000109e-05, 5.026300000000178e-05, 5.5985999999997454e-05, 5.3985999999998924e-05, 5.118100000000084e-05, 5.3013999999997063e-05, 5.119500000000041e-05, 5.2999999999997494e-05, 5.211099999999705e-05, 5.408399999999938e-05, 5.013899999999766e-05, 5.4013999999998064e-05, 4.919399999999893e-05, 5.119400000000093e-05, 5.307000000000228e-05, 5.500000000000296e-05, 5.211100000000052e-05, 5.595899999999779e-05, 5.604200000000267e-05, 5.3943999999996745e-05, 5.212500000000009e-05, 5.6027999999999634e-05, 5.4929999999998175e-05, 5.4999999999999494e-05, 5.501400000000253e-05, 5.690300000000051e-05]</msg>
<status status="PASS" starttime="20201112 12:26:49.333" endtime="20201112 12:26:49.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.329" endtime="20201112 12:26:49.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.338" endtime="20201112 12:26:49.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.342" endtime="20201112 12:26:49.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.340" endtime="20201112 12:26:49.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.337" endtime="20201112 12:26:49.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.969" endtime="20201112 12:26:49.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.968" endtime="20201112 12:26:49.363"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.371" endtime="20201112 12:26:49.393"></status>
</kw>
<msg timestamp="20201112 12:26:49.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.370" endtime="20201112 12:26:49.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.394" endtime="20201112 12:26:49.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.397" endtime="20201112 12:26:49.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.367" endtime="20201112 12:26:49.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.365" endtime="20201112 12:26:49.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.406" endtime="20201112 12:26:49.692"></status>
</kw>
<msg timestamp="20201112 12:26:49.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0228745, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:49.404" endtime="20201112 12:26:49.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0228745, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:49.696" endtime="20201112 12:26:49.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.704" endtime="20201112 12:26:49.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.401" endtime="20201112 12:26:49.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.400" endtime="20201112 12:26:49.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.711" level="INFO">${RESULT} = [{'time': 0.0228745, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.354199999999977e-05, 'source_diff': 6.354199999999977e-05}, {'time': 0.022935333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:49.708" endtime="20201112 12:26:49.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:49.724" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:49.712" endtime="20201112 12:26:49.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.729" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:26:49.728" endtime="20201112 12:26:49.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.731" level="INFO">VALUE: [6.354199999999977e-05, 5.3013999999997063e-05, 5.5013999999999064e-05, 5.495900000000026e-05, 5.020899999999898e-05, 5.590299999999951e-05, 5.40280000000011e-05, 5.502699999999916e-05, 5.304199999999967e-05, 5.305599999999924e-05, 5.127699999999888e-05, 5.108299999999691e-05, 5.2138000000000184e-05, 5.016600000000079e-05, 5.4999999999999494e-05, 5.301300000000106e-05, 5.023599999999864e-05, 5.5971999999997885e-05, 5.206999999999781e-05, 5.311200000000099e-05, 5.109699999999995e-05, 5.5930000000002644e-05, 5.5888000000000465e-05, 5.401299999999859e-05, 5.208300000000138e-05, 5.211100000000052e-05, 5.490299999999851e-05, 5.018000000000036e-05, 5.493100000000112e-05, 5.311099999999805e-05, 5.597300000000083e-05, 5.205599999999824e-05, 5.308299999999891e-05, 5.4943999999997745e-05, 5.11669999999978e-05, 5.022199999999907e-05, 5.302700000000063e-05, 5.497299999999983e-05, 5.3985999999998924e-05, 5.591699999999908e-05, 5.122200000000007e-05, 5.022199999999907e-05, 5.587500000000037e-05, 5.411099999999905e-05, 4.9167000000002736e-05, 5.3985999999998924e-05, 5.406900000000034e-05, 5.301400000000053e-05, 5.5929999999999175e-05, 5.116600000000179e-05]</msg>
<status status="PASS" starttime="20201112 12:26:49.730" endtime="20201112 12:26:49.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.725" endtime="20201112 12:26:49.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.735" endtime="20201112 12:26:49.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.738" endtime="20201112 12:26:49.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.737" endtime="20201112 12:26:49.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.733" endtime="20201112 12:26:49.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.363" endtime="20201112 12:26:49.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.363" endtime="20201112 12:26:49.759"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.768" endtime="20201112 12:26:49.789"></status>
</kw>
<msg timestamp="20201112 12:26:49.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.766" endtime="20201112 12:26:49.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.791" endtime="20201112 12:26:49.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.793" endtime="20201112 12:26:49.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.764" endtime="20201112 12:26:49.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.762" endtime="20201112 12:26:49.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.802" endtime="20201112 12:26:50.090"></status>
</kw>
<msg timestamp="20201112 12:26:50.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023117583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023154403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.801" endtime="20201112 12:26:50.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023117583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023154403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.094" endtime="20201112 12:26:50.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.103" endtime="20201112 12:26:50.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.798" endtime="20201112 12:26:50.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.796" endtime="20201112 12:26:50.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.109" level="INFO">${RESULT} = [{'time': 0.023154403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.681999999999991e-05, 'source_diff': 3.681999999999991e-05}, {'time': 0.023215722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:50.106" endtime="20201112 12:26:50.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:50.123" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:50.110" endtime="20201112 12:26:50.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.127" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:26:50.126" endtime="20201112 12:26:50.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.130" level="INFO">VALUE: [3.681999999999991e-05, 5.3944000000000214e-05, 5.594500000000169e-05, 5.4943999999997745e-05, 5.4027999999997633e-05, 5.311099999999805e-05, 5.3957999999999784e-05, 5.0237000000001586e-05, 5.202699999999963e-05, 5.120899999999998e-05, 5.205499999999877e-05, 5.404200000000067e-05, 5.5971999999997885e-05, 5.01530000000007e-05, 5.309699999999848e-05, 5.20409999999992e-05, 5.401300000000206e-05, 5.205599999999824e-05, 5.122200000000007e-05, 5.401400000000153e-05, 5.5013999999999064e-05, 5.5985999999997454e-05, 5.205600000000171e-05, 5.5944000000002214e-05, 5.5013999999999064e-05, 5.20279999999991e-05, 5.4985999999999924e-05, 5.5986000000000924e-05, 5.3957999999999784e-05, 5.024999999999821e-05, 5.20279999999991e-05, 5.5972000000001354e-05, 5.107000000000028e-05, 5.023599999999864e-05, 5.300000000000096e-05, 5.312499999999762e-05, 5.6930000000000175e-05, 5.493100000000112e-05, 5.023600000000211e-05, 5.119400000000093e-05, 5.111099999999952e-05, 5.213899999999966e-05, 5.215299999999923e-05, 5.3971999999999354e-05, 5.584699999999776e-05, 5.023599999999864e-05, 5.587500000000037e-05, 5.505600000000124e-05, 5.4944000000001214e-05, 5.502699999999916e-05]</msg>
<status status="PASS" starttime="20201112 12:26:50.128" endtime="20201112 12:26:50.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.123" endtime="20201112 12:26:50.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.133" endtime="20201112 12:26:50.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.137" endtime="20201112 12:26:50.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.135" endtime="20201112 12:26:50.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.132" endtime="20201112 12:26:50.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.760" endtime="20201112 12:26:50.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.760" endtime="20201112 12:26:50.158"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.166" endtime="20201112 12:26:50.186"></status>
</kw>
<msg timestamp="20201112 12:26:50.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.165" endtime="20201112 12:26:50.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.188" endtime="20201112 12:26:50.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.190" endtime="20201112 12:26:50.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.162" endtime="20201112 12:26:50.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.160" endtime="20201112 12:26:50.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.199" endtime="20201112 12:26:50.487"></status>
</kw>
<msg timestamp="20201112 12:26:50.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.198" endtime="20201112 12:26:50.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.491" endtime="20201112 12:26:50.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.499" endtime="20201112 12:26:50.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.195" endtime="20201112 12:26:50.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.194" endtime="20201112 12:26:50.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.506" level="INFO">${RESULT} = [{'time': 0.021695167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.94030000000026e-05, 'source_diff': 6.94030000000026e-05}, {'time': 0.021786333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:50.502" endtime="20201112 12:26:50.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:50.520" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:50.507" endtime="20201112 12:26:50.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.525" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:26:50.524" endtime="20201112 12:26:50.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.527" level="INFO">VALUE: [6.94030000000026e-05, 8.269400000000121e-05, 8.273599999999992e-05, 8.269399999999774e-05, 8.165199999999803e-05, 8.172199999999935e-05, 8.266700000000154e-05, 8.649999999999977e-05, 8.458299999999919e-05, 8.461099999999833e-05, 8.559699999999976e-05, 8.080499999999977e-05, 8.459699999999876e-05, 8.173600000000239e-05, 8.370800000000178e-05, 8.459699999999876e-05, 8.362500000000037e-05, 8.172199999999935e-05, 8.46660000000006e-05, 8.26109999999998e-05, 8.368100000000211e-05, 8.644400000000149e-05, 8.559699999999976e-05, 8.562500000000237e-05, 8.268100000000111e-05, 8.074999999999749e-05, 8.559699999999976e-05, 8.366699999999908e-05, 8.362500000000037e-05, 8.170799999999978e-05, 8.282000000000081e-05, 8.655600000000152e-05, 8.266700000000154e-05, 8.266700000000154e-05, 8.367999999999917e-05, 8.07780000000001e-05, 8.551399999999834e-05, 8.373599999999745e-05, 8.066699999999954e-05, 8.648700000000314e-05, 8.072199999999835e-05, 8.177799999999763e-05, 8.64730000000001e-05, 8.36110000000008e-05, 8.270899999999679e-05, 8.368099999999865e-05, 8.273599999999992e-05, 8.465199999999756e-05, 8.561099999999933e-05, 8.175000000000196e-05]</msg>
<status status="PASS" starttime="20201112 12:26:50.526" endtime="20201112 12:26:50.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.521" endtime="20201112 12:26:50.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.531" endtime="20201112 12:26:50.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.534" endtime="20201112 12:26:50.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.533" endtime="20201112 12:26:50.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.529" endtime="20201112 12:26:50.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.158" endtime="20201112 12:26:50.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.158" endtime="20201112 12:26:50.555"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.564" endtime="20201112 12:26:50.583"></status>
</kw>
<msg timestamp="20201112 12:26:50.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.562" endtime="20201112 12:26:50.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.585" endtime="20201112 12:26:50.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.587" endtime="20201112 12:26:50.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.560" endtime="20201112 12:26:50.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.558" endtime="20201112 12:26:50.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.596" endtime="20201112 12:26:50.883"></status>
</kw>
<msg timestamp="20201112 12:26:50.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020795389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020876125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.594" endtime="20201112 12:26:50.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020795389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020876125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.888" endtime="20201112 12:26:50.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.896" endtime="20201112 12:26:50.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.592" endtime="20201112 12:26:50.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.590" endtime="20201112 12:26:50.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.903" level="INFO">${RESULT} = [{'time': 0.020876125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.073599999999792e-05, 'source_diff': 8.073599999999792e-05}, {'time': 0.020968097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:50.899" endtime="20201112 12:26:50.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:50.916" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:50.903" endtime="20201112 12:26:50.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.920" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:26:50.919" endtime="20201112 12:26:50.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.923" level="INFO">VALUE: [8.073599999999792e-05, 8.168000000000064e-05, 8.372200000000135e-05, 8.458400000000213e-05, 8.651399999999934e-05, 8.556900000000062e-05, 8.176400000000153e-05, 8.644400000000149e-05, 8.276399999999906e-05, 8.369399999999874e-05, 8.56119999999988e-05, 8.172200000000282e-05, 8.654200000000195e-05, 8.081899999999934e-05, 8.268099999999765e-05, 8.56660000000016e-05, 8.172299999999882e-05, 8.458399999999866e-05, 8.468000000000017e-05, 8.273599999999992e-05, 8.080600000000271e-05, 8.183400000000285e-05, 8.265300000000197e-05, 8.558399999999966e-05, 8.647200000000063e-05, 8.084699999999848e-05, 8.557000000000009e-05, 8.456999999999909e-05, 8.46110000000018e-05, 8.369400000000221e-05, 8.363899999999994e-05, 8.169400000000021e-05, 8.273599999999992e-05, 8.552799999999791e-05, 8.363899999999994e-05, 8.476400000000106e-05, 8.269499999999722e-05, 8.561099999999933e-05, 8.554200000000095e-05, 8.169499999999968e-05, 8.173600000000239e-05, 8.181999999999981e-05, 8.175000000000196e-05, 8.463900000000094e-05, 8.351299999999687e-05, 8.273599999999992e-05, 8.459699999999876e-05, 8.64860000000002e-05, 8.654099999999901e-05, 8.369400000000221e-05]</msg>
<status status="PASS" starttime="20201112 12:26:50.921" endtime="20201112 12:26:50.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.917" endtime="20201112 12:26:50.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.926" endtime="20201112 12:26:50.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.930" endtime="20201112 12:26:50.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.928" endtime="20201112 12:26:50.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.925" endtime="20201112 12:26:50.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.556" endtime="20201112 12:26:50.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.556" endtime="20201112 12:26:50.951"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.959" endtime="20201112 12:26:50.981"></status>
</kw>
<msg timestamp="20201112 12:26:50.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.958" endtime="20201112 12:26:50.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.983" endtime="20201112 12:26:50.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.985" endtime="20201112 12:26:50.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.955" endtime="20201112 12:26:50.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.953" endtime="20201112 12:26:50.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.994" endtime="20201112 12:26:51.281"></status>
</kw>
<msg timestamp="20201112 12:26:51.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:50.993" endtime="20201112 12:26:51.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:51.285" endtime="20201112 12:26:51.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.293" endtime="20201112 12:26:51.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.990" endtime="20201112 12:26:51.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.988" endtime="20201112 12:26:51.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:51.300" level="INFO">${RESULT} = [{'time': 0.022500139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.263899999999894e-05, 'source_diff': 8.263899999999894e-05}, {'time': 0.022591139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:51.297" endtime="20201112 12:26:51.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:51.313" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:51.301" endtime="20201112 12:26:51.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.318" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:26:51.317" endtime="20201112 12:26:51.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.320" level="INFO">VALUE: [8.263899999999894e-05, 8.373600000000092e-05, 8.072199999999835e-05, 8.376400000000006e-05, 8.26390000000024e-05, 8.086200000000099e-05, 8.652799999999891e-05, 8.659700000000076e-05, 8.172199999999935e-05, 8.183399999999938e-05, 8.465200000000103e-05, 8.07780000000001e-05, 8.274999999999949e-05, 8.656900000000162e-05, 8.563900000000194e-05, 8.172200000000282e-05, 8.375000000000049e-05, 8.554099999999801e-05, 8.559699999999976e-05, 8.463900000000094e-05, 7.99169999999988e-05, 8.270800000000078e-05, 8.273599999999992e-05, 8.366699999999908e-05, 8.273599999999992e-05, 8.080599999999924e-05, 8.469399999999974e-05, 8.648699999999968e-05, 8.469500000000268e-05, 8.659700000000076e-05, 8.46530000000005e-05, 8.651400000000281e-05, 8.275000000000296e-05, 8.081899999999934e-05, 8.558399999999966e-05, 8.559700000000323e-05, 8.66119999999998e-05, 8.262500000000284e-05, 8.287499999999962e-05, 8.170799999999978e-05, 8.655499999999858e-05, 8.556900000000062e-05, 8.468099999999965e-05, 8.456899999999962e-05, 8.186099999999905e-05, 8.556900000000062e-05, 8.07780000000001e-05, 8.177799999999763e-05, 8.17780000000011e-05, 8.080599999999924e-05]</msg>
<status status="PASS" starttime="20201112 12:26:51.319" endtime="20201112 12:26:51.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.314" endtime="20201112 12:26:51.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.324" endtime="20201112 12:26:51.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.327" endtime="20201112 12:26:51.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.326" endtime="20201112 12:26:51.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.322" endtime="20201112 12:26:51.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.951" endtime="20201112 12:26:51.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.951" endtime="20201112 12:26:51.348"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.357" endtime="20201112 12:26:51.378"></status>
</kw>
<msg timestamp="20201112 12:26:51.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.355" endtime="20201112 12:26:51.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.379" endtime="20201112 12:26:51.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.381" endtime="20201112 12:26:51.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.352" endtime="20201112 12:26:51.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.350" endtime="20201112 12:26:51.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.391" endtime="20201112 12:26:51.678"></status>
</kw>
<msg timestamp="20201112 12:26:51.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.389" endtime="20201112 12:26:51.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.683" endtime="20201112 12:26:51.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.691" endtime="20201112 12:26:51.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.386" endtime="20201112 12:26:51.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.385" endtime="20201112 12:26:51.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:51.698" level="INFO">${RESULT} = [{'time': 0.021895458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.340199999999937e-05, 'source_diff': 9.340199999999937e-05}, {'time': 0.021986458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:51.694" endtime="20201112 12:26:51.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:51.711" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:51.699" endtime="20201112 12:26:51.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.715" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:26:51.714" endtime="20201112 12:26:51.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.718" level="INFO">VALUE: [9.340199999999937e-05, 8.172199999999935e-05, 8.281899999999787e-05, 8.64860000000002e-05, 8.36110000000008e-05, 8.66249999999999e-05, 8.555599999999705e-05, 8.269400000000121e-05, 8.18329999999999e-05, 8.649999999999977e-05, 8.652799999999891e-05, 8.56110000000028e-05, 8.276399999999906e-05, 8.555600000000052e-05, 8.649999999999977e-05, 8.176399999999806e-05, 8.266699999999808e-05, 8.559699999999976e-05, 8.168000000000064e-05, 8.368000000000264e-05, 8.169499999999968e-05, 8.176300000000206e-05, 8.358300000000166e-05, 8.273599999999992e-05, 8.551399999999834e-05, 8.366699999999908e-05, 8.274999999999949e-05, 8.362500000000037e-05, 8.466700000000008e-05, 8.07780000000001e-05, 8.372299999999736e-05, 8.64860000000002e-05, 8.551399999999834e-05, 8.66530000000025e-05, 8.076400000000053e-05, 8.649999999999977e-05, 8.180500000000077e-05, 8.173599999999892e-05, 8.084699999999848e-05, 8.742999999999945e-05, 8.455599999999952e-05, 8.269399999999774e-05, 8.559699999999976e-05, 8.738900000000022e-05, 8.369500000000168e-05, 8.463900000000094e-05, 8.269500000000068e-05, 8.272200000000035e-05, 8.654199999999848e-05, 8.362500000000037e-05]</msg>
<status status="PASS" starttime="20201112 12:26:51.716" endtime="20201112 12:26:51.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.712" endtime="20201112 12:26:51.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.721" endtime="20201112 12:26:51.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.725" endtime="20201112 12:26:51.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.723" endtime="20201112 12:26:51.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.720" endtime="20201112 12:26:51.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.349" endtime="20201112 12:26:51.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.348" endtime="20201112 12:26:51.746"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.754" endtime="20201112 12:26:51.774"></status>
</kw>
<msg timestamp="20201112 12:26:51.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.753" endtime="20201112 12:26:51.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.776" endtime="20201112 12:26:51.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.778" endtime="20201112 12:26:51.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.750" endtime="20201112 12:26:51.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.748" endtime="20201112 12:26:51.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.787" endtime="20201112 12:26:52.073"></status>
</kw>
<msg timestamp="20201112 12:26:52.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021137917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.786" endtime="20201112 12:26:52.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021137917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.078" endtime="20201112 12:26:52.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.086" endtime="20201112 12:26:52.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.783" endtime="20201112 12:26:52.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.781" endtime="20201112 12:26:52.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.093" level="INFO">${RESULT} = [{'time': 0.021137917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.852799999999744e-05, 'source_diff': 8.852799999999744e-05}, {'time': 0.021229056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:52.090" endtime="20201112 12:26:52.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.107" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:52.094" endtime="20201112 12:26:52.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.112" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.111" endtime="20201112 12:26:52.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.115" level="INFO">VALUE: [8.852799999999744e-05, 8.645900000000054e-05, 8.17780000000011e-05, 8.081899999999934e-05, 8.26529999999985e-05, 8.551399999999834e-05, 8.459700000000223e-05, 8.651399999999934e-05, 8.558300000000019e-05, 8.363899999999994e-05, 8.370800000000178e-05, 8.357000000000156e-05, 8.07910000000002e-05, 8.366600000000307e-05, 8.073600000000139e-05, 8.362500000000037e-05, 8.074999999999749e-05, 8.081999999999881e-05, 8.462500000000137e-05, 8.651400000000281e-05, 8.176399999999806e-05, 8.559799999999923e-05, 8.269500000000068e-05, 8.551399999999834e-05, 8.272200000000035e-05, 8.651400000000281e-05, 8.17780000000011e-05, 8.26390000000024e-05, 8.472299999999836e-05, 8.180500000000077e-05, 8.270800000000078e-05, 8.549999999999877e-05, 8.36529999999995e-05, 8.08190000000028e-05, 8.172199999999935e-05, 8.36110000000008e-05, 8.463900000000094e-05, 8.16529999999975e-05, 8.362500000000037e-05, 8.56249999999989e-05, 8.46110000000018e-05, 8.647199999999716e-05, 8.655600000000152e-05, 8.170900000000272e-05, 8.36659999999996e-05, 8.362500000000037e-05, 8.177700000000163e-05, 8.452800000000038e-05, 8.18329999999999e-05, 8.363800000000046e-05]</msg>
<status status="PASS" starttime="20201112 12:26:52.113" endtime="20201112 12:26:52.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.108" endtime="20201112 12:26:52.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.118" endtime="20201112 12:26:52.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.121" endtime="20201112 12:26:52.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.120" endtime="20201112 12:26:52.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.116" endtime="20201112 12:26:52.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.747" endtime="20201112 12:26:52.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.746" endtime="20201112 12:26:52.142"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.151" endtime="20201112 12:26:52.172"></status>
</kw>
<msg timestamp="20201112 12:26:52.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.149" endtime="20201112 12:26:52.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.173" endtime="20201112 12:26:52.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.176" endtime="20201112 12:26:52.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.147" endtime="20201112 12:26:52.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.145" endtime="20201112 12:26:52.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.185" endtime="20201112 12:26:52.472"></status>
</kw>
<msg timestamp="20201112 12:26:52.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021289264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.183" endtime="20201112 12:26:52.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021289264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.476" endtime="20201112 12:26:52.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.485" endtime="20201112 12:26:52.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.181" endtime="20201112 12:26:52.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.179" endtime="20201112 12:26:52.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.491" level="INFO">${RESULT} = [{'time': 0.021356597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.733300000000275e-05, 'source_diff': 6.733300000000275e-05}, {'time': 0.021448069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:52.488" endtime="20201112 12:26:52.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.504" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:52.492" endtime="20201112 12:26:52.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.509" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.508" endtime="20201112 12:26:52.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.511" level="INFO">VALUE: [6.733300000000275e-05, 8.180500000000077e-05, 8.468099999999965e-05, 8.458299999999919e-05, 8.458299999999919e-05, 8.744400000000249e-05, 8.26529999999985e-05, 8.463900000000094e-05, 8.654099999999901e-05, 8.259700000000023e-05, 8.46530000000005e-05, 8.465200000000103e-05, 8.369499999999822e-05, 8.46249999999979e-05, 8.554200000000095e-05, 8.747200000000163e-05, 8.181900000000034e-05, 8.458299999999919e-05, 8.659699999999729e-05, 8.173600000000239e-05, 8.458399999999866e-05, 8.086099999999805e-05, 8.559699999999976e-05, 8.557000000000009e-05, 8.077700000000063e-05, 8.555600000000052e-05, 8.274999999999949e-05, 8.451300000000134e-05, 8.373600000000092e-05, 8.172199999999935e-05, 8.463900000000094e-05, 8.64860000000002e-05, 8.370800000000178e-05, 8.268000000000164e-05, 8.359699999999776e-05, 8.38049999999993e-05, 8.166700000000054e-05, 8.555500000000105e-05, 8.272299999999982e-05, 8.075000000000096e-05, 8.362500000000037e-05, 8.172199999999935e-05, 8.369500000000168e-05, 8.36529999999995e-05, 8.26529999999985e-05, 8.170799999999978e-05, 8.369400000000221e-05, 8.262500000000284e-05, 8.351399999999981e-05, 8.56530000000015e-05]</msg>
<status status="PASS" starttime="20201112 12:26:52.510" endtime="20201112 12:26:52.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.505" endtime="20201112 12:26:52.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.515" endtime="20201112 12:26:52.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.518" endtime="20201112 12:26:52.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.517" endtime="20201112 12:26:52.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.513" endtime="20201112 12:26:52.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.143" endtime="20201112 12:26:52.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.143" endtime="20201112 12:26:52.539"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.548" endtime="20201112 12:26:52.569"></status>
</kw>
<msg timestamp="20201112 12:26:52.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.546" endtime="20201112 12:26:52.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.570" endtime="20201112 12:26:52.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.573" endtime="20201112 12:26:52.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.544" endtime="20201112 12:26:52.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.542" endtime="20201112 12:26:52.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.582" endtime="20201112 12:26:52.868"></status>
</kw>
<msg timestamp="20201112 12:26:52.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021260792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021332028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.580" endtime="20201112 12:26:52.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021260792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021332028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.873" endtime="20201112 12:26:52.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.881" endtime="20201112 12:26:52.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.578" endtime="20201112 12:26:52.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.576" endtime="20201112 12:26:52.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.887" level="INFO">${RESULT} = [{'time': 0.021332028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.123599999999883e-05, 'source_diff': 7.123599999999883e-05}, {'time': 0.021423194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:52.884" endtime="20201112 12:26:52.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.901" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:52.888" endtime="20201112 12:26:52.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.905" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.904" endtime="20201112 12:26:52.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.908" level="INFO">VALUE: [7.123599999999883e-05, 8.080499999999977e-05, 8.276399999999906e-05, 8.56530000000015e-05, 8.654099999999901e-05, 8.073600000000139e-05, 8.176400000000153e-05, 8.368100000000211e-05, 8.376400000000006e-05, 8.262499999999937e-05, 8.369500000000168e-05, 7.979199999999867e-05, 8.17910000000012e-05, 8.26109999999998e-05, 8.08329999999989e-05, 8.073599999999792e-05, 8.272200000000035e-05, 8.263899999999894e-05, 8.270900000000025e-05, 8.357000000000156e-05, 8.272200000000035e-05, 8.368099999999865e-05, 8.26659999999986e-05, 8.167999999999717e-05, 8.366700000000254e-05, 8.46660000000006e-05, 8.554200000000095e-05, 8.172199999999935e-05, 8.458300000000266e-05, 8.64860000000002e-05, 8.174999999999849e-05, 8.751400000000034e-05, 8.557000000000009e-05, 8.367999999999917e-05, 8.455599999999952e-05, 8.372199999999788e-05, 8.17230000000023e-05, 8.36110000000008e-05, 8.469399999999974e-05, 8.552799999999791e-05, 8.654199999999848e-05, 8.561099999999933e-05, 8.652799999999891e-05, 8.456899999999962e-05, 8.076400000000053e-05, 8.26529999999985e-05, 8.459699999999876e-05, 8.561099999999933e-05, 8.750000000000077e-05, 8.355499999999905e-05]</msg>
<status status="PASS" starttime="20201112 12:26:52.906" endtime="20201112 12:26:52.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.902" endtime="20201112 12:26:52.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.911" endtime="20201112 12:26:52.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.915" endtime="20201112 12:26:52.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.913" endtime="20201112 12:26:52.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.910" endtime="20201112 12:26:52.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.540" endtime="20201112 12:26:52.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.540" endtime="20201112 12:26:52.936"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.944" endtime="20201112 12:26:52.965"></status>
</kw>
<msg timestamp="20201112 12:26:52.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.943" endtime="20201112 12:26:52.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.967" endtime="20201112 12:26:52.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.969" endtime="20201112 12:26:52.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.940" endtime="20201112 12:26:52.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.938" endtime="20201112 12:26:52.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.978" endtime="20201112 12:26:53.265"></status>
</kw>
<msg timestamp="20201112 12:26:53.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021916931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.977" endtime="20201112 12:26:53.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021916931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.270" endtime="20201112 12:26:53.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.278" endtime="20201112 12:26:53.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.974" endtime="20201112 12:26:53.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.972" endtime="20201112 12:26:53.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:53.285" level="INFO">${RESULT} = [{'time': 0.021916931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.466700000000008e-05, 'source_diff': 8.466700000000008e-05}, {'time': 0.022009278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:53.282" endtime="20201112 12:26:53.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:53.298" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:53.286" endtime="20201112 12:26:53.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.303" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:26:53.302" endtime="20201112 12:26:53.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.305" level="INFO">VALUE: [8.466700000000008e-05, 8.257000000000056e-05, 8.272299999999982e-05, 8.63470000000005e-05, 8.07780000000001e-05, 8.45980000000017e-05, 8.370800000000178e-05, 8.16390000000014e-05, 8.084699999999848e-05, 8.076400000000053e-05, 8.554100000000148e-05, 8.181999999999981e-05, 8.26529999999985e-05, 8.655500000000205e-05, 8.468000000000017e-05, 8.175000000000196e-05, 8.456899999999962e-05, 8.652799999999891e-05, 8.168000000000064e-05, 8.651399999999934e-05, 8.265300000000197e-05, 8.552700000000191e-05, 8.468099999999965e-05, 8.365200000000003e-05, 8.16659999999976e-05, 8.658400000000066e-05, 8.56249999999989e-05, 8.073599999999792e-05, 8.36529999999995e-05, 8.557000000000009e-05, 8.26109999999998e-05, 8.455500000000005e-05, 8.550000000000224e-05, 8.649999999999977e-05, 8.179200000000067e-05, 7.980599999999824e-05, 8.554100000000148e-05, 8.652800000000238e-05, 8.654199999999848e-05, 8.163899999999794e-05, 8.375000000000049e-05, 8.556900000000062e-05, 8.269400000000121e-05, 8.36659999999996e-05, 8.455599999999952e-05, 8.473599999999845e-05, 8.073599999999792e-05, 8.176400000000153e-05, 8.370800000000178e-05, 8.259700000000023e-05]</msg>
<status status="PASS" starttime="20201112 12:26:53.304" endtime="20201112 12:26:53.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.299" endtime="20201112 12:26:53.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.309" endtime="20201112 12:26:53.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.312" endtime="20201112 12:26:53.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.311" endtime="20201112 12:26:53.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.307" endtime="20201112 12:26:53.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.937" endtime="20201112 12:26:53.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.936" endtime="20201112 12:26:53.333"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.342" endtime="20201112 12:26:53.362"></status>
</kw>
<msg timestamp="20201112 12:26:53.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.341" endtime="20201112 12:26:53.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.364" endtime="20201112 12:26:53.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.366" endtime="20201112 12:26:53.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.338" endtime="20201112 12:26:53.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.336" endtime="20201112 12:26:53.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.375" endtime="20201112 12:26:53.663"></status>
</kw>
<msg timestamp="20201112 12:26:53.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021256181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.374" endtime="20201112 12:26:53.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021256181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.668" endtime="20201112 12:26:53.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.676" endtime="20201112 12:26:53.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.371" endtime="20201112 12:26:53.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.369" endtime="20201112 12:26:53.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:53.682" level="INFO">${RESULT} = [{'time': 0.021342708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.652699999999944e-05, 'source_diff': 8.652699999999944e-05}, {'time': 0.021434486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:53.679" endtime="20201112 12:26:53.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:53.697" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:53.683" endtime="20201112 12:26:53.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.702" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:26:53.701" endtime="20201112 12:26:53.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.704" level="INFO">VALUE: [8.652699999999944e-05, 8.066699999999954e-05, 8.36110000000008e-05, 8.555600000000052e-05, 8.551399999999834e-05, 8.640199999999931e-05, 8.083300000000238e-05, 8.549999999999877e-05, 8.26529999999985e-05, 8.272200000000035e-05, 8.356999999999809e-05, 8.658300000000119e-05, 8.551400000000181e-05, 8.559700000000323e-05, 8.655600000000152e-05, 8.362500000000037e-05, 8.172199999999935e-05, 8.64860000000002e-05, 8.181999999999981e-05, 8.173599999999892e-05, 8.266699999999808e-05, 8.27780000000021e-05, 8.551399999999834e-05, 8.566700000000108e-05, 8.263899999999894e-05, 8.273599999999992e-05, 8.180500000000077e-05, 8.263899999999894e-05, 8.370800000000178e-05, 8.556900000000062e-05, 8.181900000000034e-05, 8.643099999999793e-05, 8.563899999999847e-05, 8.651399999999934e-05, 8.46660000000006e-05, 8.555600000000052e-05, 8.176400000000153e-05, 8.454199999999995e-05, 8.375000000000049e-05, 8.170799999999978e-05, 8.56249999999989e-05, 8.26529999999985e-05, 8.459700000000223e-05, 8.649999999999977e-05, 8.367999999999917e-05, 8.744500000000197e-05, 8.652800000000238e-05, 8.555599999999705e-05, 8.177799999999763e-05, 8.174999999999849e-05]</msg>
<status status="PASS" starttime="20201112 12:26:53.703" endtime="20201112 12:26:53.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.698" endtime="20201112 12:26:53.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.708" endtime="20201112 12:26:53.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.711" endtime="20201112 12:26:53.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.710" endtime="20201112 12:26:53.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.706" endtime="20201112 12:26:53.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.334" endtime="20201112 12:26:53.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.334" endtime="20201112 12:26:53.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.936" endtime="20201112 12:26:53.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.737" endtime="20201112 12:26:53.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.735" endtime="20201112 12:26:53.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.734" endtime="20201112 12:26:53.757"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:13.860" endtime="20201112 12:26:53.757" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.765" endtime="20201112 12:26:53.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.763" endtime="20201112 12:26:53.785"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.799" endtime="20201112 12:26:53.815"></status>
</kw>
<msg timestamp="20201112 12:26:53.816" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.796" endtime="20201112 12:26:53.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.818" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.817" endtime="20201112 12:26:53.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.821" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:53.819" endtime="20201112 12:26:53.821"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:53.794" endtime="20201112 12:26:53.822"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:53.791" endtime="20201112 12:26:53.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.790" endtime="20201112 12:26:53.823"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:53.827" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:53.826" endtime="20201112 12:26:53.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.824" endtime="20201112 12:26:53.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.789" endtime="20201112 12:26:53.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.789" endtime="20201112 12:26:53.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.828" endtime="20201112 12:26:53.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.787" endtime="20201112 12:26:53.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.786" endtime="20201112 12:26:53.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.762" endtime="20201112 12:26:53.831"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.841" endtime="20201112 12:26:53.863"></status>
</kw>
<msg timestamp="20201112 12:26:53.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.839" endtime="20201112 12:26:53.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.864" endtime="20201112 12:26:53.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.867" endtime="20201112 12:26:53.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.837" endtime="20201112 12:26:53.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.835" endtime="20201112 12:26:53.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.876" endtime="20201112 12:26:54.163"></status>
</kw>
<msg timestamp="20201112 12:26:54.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071118569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071127306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.874" endtime="20201112 12:26:54.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071118569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071127306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.167" endtime="20201112 12:26:54.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.175" endtime="20201112 12:26:54.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.872" endtime="20201112 12:26:54.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.870" endtime="20201112 12:26:54.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.182" level="INFO">${RESULT} = [{'time': 0.071127306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736999999994777e-06, 'source_diff': 8.736999999994777e-06}, {'time': 0.071144, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:54.179" endtime="20201112 12:26:54.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.196" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:54.183" endtime="20201112 12:26:54.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.201" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.200" endtime="20201112 12:26:54.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.203" level="INFO">VALUE: [8.736999999994777e-06, 8.778000000000952e-06, 8.791999999993583e-06, 8.79200000000746e-06, 8.778000000000952e-06, 8.860999999998898e-06, 8.778000000000952e-06, 8.846999999992389e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.888999999998037e-06, 8.778000000000952e-06, 8.819000000007127e-06, 8.76400000000832e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.707999999996163e-06, 8.806000000000092e-06, 8.695000000003006e-06, 8.805000000000618e-06, 8.791999999993583e-06, 8.749999999987934e-06, 8.749999999987934e-06, 8.777999999987074e-06, 8.749999999987934e-06, 8.777000000001478e-06, 8.806000000000092e-06, 8.79200000000746e-06, 8.79200000000746e-06, 8.790999999994109e-06, 8.791999999993583e-06, 8.79200000000746e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.76400000000832e-06, 8.777000000001478e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.860999999998898e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.791000000007987e-06, 8.8200000000066e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.790999999994109e-06]</msg>
<status status="PASS" starttime="20201112 12:26:54.202" endtime="20201112 12:26:54.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.197" endtime="20201112 12:26:54.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.206" endtime="20201112 12:26:54.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.210" endtime="20201112 12:26:54.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.208" endtime="20201112 12:26:54.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.205" endtime="20201112 12:26:54.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.833" endtime="20201112 12:26:54.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.832" endtime="20201112 12:26:54.231"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.240" endtime="20201112 12:26:54.257"></status>
</kw>
<msg timestamp="20201112 12:26:54.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.238" endtime="20201112 12:26:54.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.259" endtime="20201112 12:26:54.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.261" endtime="20201112 12:26:54.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.236" endtime="20201112 12:26:54.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.233" endtime="20201112 12:26:54.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.270" endtime="20201112 12:26:54.556"></status>
</kw>
<msg timestamp="20201112 12:26:54.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023196097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023204889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.269" endtime="20201112 12:26:54.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023196097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023204889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.560" endtime="20201112 12:26:54.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.568" endtime="20201112 12:26:54.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.266" endtime="20201112 12:26:54.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.264" endtime="20201112 12:26:54.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.575" level="INFO">${RESULT} = [{'time': 0.023204889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.023221069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:54.572" endtime="20201112 12:26:54.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.589" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:54.576" endtime="20201112 12:26:54.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.594" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.593" endtime="20201112 12:26:54.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.596" level="INFO">VALUE: [8.792000000000522e-06, 8.735999999998773e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.861000000002367e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.819999999999661e-06, 8.804999999997148e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.819999999999661e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.846999999999328e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.762999999998439e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.806000000000092e-06, 8.820000000003131e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.736000000002242e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.846999999999328e-06, 8.875000000001937e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.86200000000184e-06, 8.861000000002367e-06]</msg>
<status status="PASS" starttime="20201112 12:26:54.595" endtime="20201112 12:26:54.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.590" endtime="20201112 12:26:54.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.599" endtime="20201112 12:26:54.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.603" endtime="20201112 12:26:54.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.602" endtime="20201112 12:26:54.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.598" endtime="20201112 12:26:54.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.232" endtime="20201112 12:26:54.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.231" endtime="20201112 12:26:54.624"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.633" endtime="20201112 12:26:54.649"></status>
</kw>
<msg timestamp="20201112 12:26:54.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.631" endtime="20201112 12:26:54.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.650" endtime="20201112 12:26:54.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.653" endtime="20201112 12:26:54.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.629" endtime="20201112 12:26:54.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.626" endtime="20201112 12:26:54.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.662" endtime="20201112 12:26:54.947"></status>
</kw>
<msg timestamp="20201112 12:26:54.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.660" endtime="20201112 12:26:54.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.951" endtime="20201112 12:26:54.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.960" endtime="20201112 12:26:54.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.658" endtime="20201112 12:26:54.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.656" endtime="20201112 12:26:54.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.967" level="INFO">${RESULT} = [{'time': 0.021667153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.021682181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:54.964" endtime="20201112 12:26:54.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.980" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:54.968" endtime="20201112 12:26:54.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.985" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.984" endtime="20201112 12:26:54.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.987" level="INFO">VALUE: [8.806000000000092e-06, 8.763999999997912e-06, 8.832999999999758e-06, 8.805000000000618e-06, 8.722000000002672e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.707999999999633e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.804999999997148e-06, 8.791000000001048e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.763000000001908e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.722000000002672e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.805000000000618e-06, 8.749999999998342e-06, 8.722000000002672e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.860999999998898e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.736000000002242e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.763000000001908e-06, 8.819000000000188e-06]</msg>
<status status="PASS" starttime="20201112 12:26:54.986" endtime="20201112 12:26:54.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.981" endtime="20201112 12:26:54.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.991" endtime="20201112 12:26:54.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.995" endtime="20201112 12:26:55.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.993" endtime="20201112 12:26:55.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.989" endtime="20201112 12:26:55.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.625" endtime="20201112 12:26:55.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.624" endtime="20201112 12:26:55.016"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.024" endtime="20201112 12:26:55.044"></status>
</kw>
<msg timestamp="20201112 12:26:55.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.023" endtime="20201112 12:26:55.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.046" endtime="20201112 12:26:55.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.048" endtime="20201112 12:26:55.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.020" endtime="20201112 12:26:55.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.018" endtime="20201112 12:26:55.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.057" endtime="20201112 12:26:55.346"></status>
</kw>
<msg timestamp="20201112 12:26:55.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.056" endtime="20201112 12:26:55.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.350" endtime="20201112 12:26:55.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.359" endtime="20201112 12:26:55.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.053" endtime="20201112 12:26:55.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.052" endtime="20201112 12:26:55.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.365" level="INFO">${RESULT} = [{'time': 0.021999139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.022013097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:55.362" endtime="20201112 12:26:55.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:55.379" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:55.367" endtime="20201112 12:26:55.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.383" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.382" endtime="20201112 12:26:55.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.386" level="INFO">VALUE: [8.750000000001812e-06, 8.763999999997912e-06, 8.790999999997579e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.791999999997052e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.791999999997052e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.861000000002367e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.790999999997579e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.832999999999758e-06, 8.791000000001048e-06, 8.763999999997912e-06, 8.819000000000188e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201112 12:26:55.384" endtime="20201112 12:26:55.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.380" endtime="20201112 12:26:55.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.389" endtime="20201112 12:26:55.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.393" endtime="20201112 12:26:55.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.391" endtime="20201112 12:26:55.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.388" endtime="20201112 12:26:55.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.017" endtime="20201112 12:26:55.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.016" endtime="20201112 12:26:55.414"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.422" endtime="20201112 12:26:55.438"></status>
</kw>
<msg timestamp="20201112 12:26:55.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.421" endtime="20201112 12:26:55.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.440" endtime="20201112 12:26:55.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.442" endtime="20201112 12:26:55.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.418" endtime="20201112 12:26:55.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.416" endtime="20201112 12:26:55.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.451" endtime="20201112 12:26:55.737"></status>
</kw>
<msg timestamp="20201112 12:26:55.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020809708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020818486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.449" endtime="20201112 12:26:55.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020809708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020818486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.741" endtime="20201112 12:26:55.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.749" endtime="20201112 12:26:55.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.447" endtime="20201112 12:26:55.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.445" endtime="20201112 12:26:55.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.756" level="INFO">${RESULT} = [{'time': 0.020818486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.020832597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:55.753" endtime="20201112 12:26:55.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:55.769" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:55.757" endtime="20201112 12:26:55.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.774" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.773" endtime="20201112 12:26:55.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.776" level="INFO">VALUE: [8.778000000000952e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.776999999998009e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.819999999999661e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.762999999998439e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.763000000001908e-06, 8.791000000001048e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.707999999999633e-06, 8.776999999998009e-06, 8.777999999997482e-06, 8.791999999997052e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.777000000001478e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201112 12:26:55.775" endtime="20201112 12:26:55.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.770" endtime="20201112 12:26:55.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.780" endtime="20201112 12:26:55.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.783" endtime="20201112 12:26:55.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.782" endtime="20201112 12:26:55.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.778" endtime="20201112 12:26:55.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.415" endtime="20201112 12:26:55.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.414" endtime="20201112 12:26:55.804"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.813" endtime="20201112 12:26:55.830"></status>
</kw>
<msg timestamp="20201112 12:26:55.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.811" endtime="20201112 12:26:55.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.831" endtime="20201112 12:26:55.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.833" endtime="20201112 12:26:55.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.809" endtime="20201112 12:26:55.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.807" endtime="20201112 12:26:55.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.843" endtime="20201112 12:26:56.130"></status>
</kw>
<msg timestamp="20201112 12:26:56.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022032014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.841" endtime="20201112 12:26:56.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022032014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.134" endtime="20201112 12:26:56.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.142" endtime="20201112 12:26:56.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.839" endtime="20201112 12:26:56.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.837" endtime="20201112 12:26:56.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.149" level="INFO">${RESULT} = [{'time': 0.022040806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.022055528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:56.145" endtime="20201112 12:26:56.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.162" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:56.150" endtime="20201112 12:26:56.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.167" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.166" endtime="20201112 12:26:56.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.169" level="INFO">VALUE: [8.792000000000522e-06, 8.709000000002576e-06, 8.763999999997912e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.763000000001908e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.776999999998009e-06, 8.763999999997912e-06, 8.791000000001048e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.860999999998898e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.762999999998439e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.763999999997912e-06, 8.791000000001048e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.804999999997148e-06, 8.778000000000952e-06, 8.804999999997148e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.791000000001048e-06]</msg>
<status status="PASS" starttime="20201112 12:26:56.168" endtime="20201112 12:26:56.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.163" endtime="20201112 12:26:56.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.173" endtime="20201112 12:26:56.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.176" endtime="20201112 12:26:56.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.175" endtime="20201112 12:26:56.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.171" endtime="20201112 12:26:56.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.805" endtime="20201112 12:26:56.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.805" endtime="20201112 12:26:56.197"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.206" endtime="20201112 12:26:56.226"></status>
</kw>
<msg timestamp="20201112 12:26:56.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.204" endtime="20201112 12:26:56.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.228" endtime="20201112 12:26:56.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.230" endtime="20201112 12:26:56.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.202" endtime="20201112 12:26:56.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.199" endtime="20201112 12:26:56.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.239" endtime="20201112 12:26:56.527"></status>
</kw>
<msg timestamp="20201112 12:26:56.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021078778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021087569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.238" endtime="20201112 12:26:56.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021078778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021087569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.531" endtime="20201112 12:26:56.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.539" endtime="20201112 12:26:56.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.235" endtime="20201112 12:26:56.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.233" endtime="20201112 12:26:56.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.546" level="INFO">${RESULT} = [{'time': 0.021087569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.791000000001048e-06, 'source_diff': 8.791000000001048e-06}, {'time': 0.021104431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:56.543" endtime="20201112 12:26:56.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.559" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:56.547" endtime="20201112 12:26:56.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.564" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.563" endtime="20201112 12:26:56.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.566" level="INFO">VALUE: [8.791000000001048e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.804999999997148e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.709000000002576e-06, 8.777000000001478e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.722000000002672e-06, 8.749999999998342e-06, 8.776999999998009e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.8340000000027e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.722000000002672e-06, 8.791000000001048e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.762999999998439e-06, 8.762999999998439e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.806000000000092e-06]</msg>
<status status="PASS" starttime="20201112 12:26:56.565" endtime="20201112 12:26:56.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.560" endtime="20201112 12:26:56.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.570" endtime="20201112 12:26:56.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.573" endtime="20201112 12:26:56.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.572" endtime="20201112 12:26:56.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.568" endtime="20201112 12:26:56.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.198" endtime="20201112 12:26:56.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.197" endtime="20201112 12:26:56.594"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.603" endtime="20201112 12:26:56.618"></status>
</kw>
<msg timestamp="20201112 12:26:56.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.601" endtime="20201112 12:26:56.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.619" endtime="20201112 12:26:56.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.622" endtime="20201112 12:26:56.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.599" endtime="20201112 12:26:56.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.597" endtime="20201112 12:26:56.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.631" endtime="20201112 12:26:56.918"></status>
</kw>
<msg timestamp="20201112 12:26:56.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020770222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020779028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.629" endtime="20201112 12:26:56.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020770222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020779028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.922" endtime="20201112 12:26:56.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.930" endtime="20201112 12:26:56.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.627" endtime="20201112 12:26:56.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.625" endtime="20201112 12:26:56.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.937" level="INFO">${RESULT} = [{'time': 0.020779028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.020796542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:56.933" endtime="20201112 12:26:56.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.950" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:56.938" endtime="20201112 12:26:56.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.955" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.953" endtime="20201112 12:26:56.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.957" level="INFO">VALUE: [8.806000000000092e-06, 8.764000000001382e-06, 8.833999999999231e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.735999999998773e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.777000000001478e-06, 8.777000000001478e-06, 8.790999999997579e-06, 8.777000000001478e-06, 8.791999999997052e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.846999999999328e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.819999999999661e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.790999999997579e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.805000000000618e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201112 12:26:56.956" endtime="20201112 12:26:56.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.951" endtime="20201112 12:26:56.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.961" endtime="20201112 12:26:56.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.964" endtime="20201112 12:26:56.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.962" endtime="20201112 12:26:56.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.959" endtime="20201112 12:26:56.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.595" endtime="20201112 12:26:56.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.595" endtime="20201112 12:26:56.985"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.994" endtime="20201112 12:26:57.010"></status>
</kw>
<msg timestamp="20201112 12:26:57.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.992" endtime="20201112 12:26:57.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.012" endtime="20201112 12:26:57.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.014" endtime="20201112 12:26:57.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.989" endtime="20201112 12:26:57.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.987" endtime="20201112 12:26:57.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.023" endtime="20201112 12:26:57.312"></status>
</kw>
<msg timestamp="20201112 12:26:57.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.022" endtime="20201112 12:26:57.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.316" endtime="20201112 12:26:57.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.325" endtime="20201112 12:26:57.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.019" endtime="20201112 12:26:57.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.018" endtime="20201112 12:26:57.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.331" level="INFO">${RESULT} = [{'time': 0.021989944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.022003292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:57.328" endtime="20201112 12:26:57.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.345" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:57.332" endtime="20201112 12:26:57.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.349" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.348" endtime="20201112 12:26:57.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.352" level="INFO">VALUE: [8.805000000000618e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.805000000000618e-06, 8.791999999997052e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.790999999997579e-06, 8.763999999997912e-06, 8.776999999998009e-06, 8.791000000001048e-06, 8.791999999997052e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.846999999999328e-06, 8.721999999999203e-06, 8.833999999999231e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.764000000001382e-06, 8.833999999999231e-06, 8.860999999998898e-06, 8.791999999997052e-06, 8.792000000000522e-06, 8.805999999996622e-06, 8.763000000001908e-06, 8.847000000002797e-06, 8.806000000000092e-06, 8.777999999997482e-06, 8.791000000001048e-06, 8.791000000001048e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201112 12:26:57.351" endtime="20201112 12:26:57.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.346" endtime="20201112 12:26:57.353"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.356" endtime="20201112 12:26:57.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.359" endtime="20201112 12:26:57.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.357" endtime="20201112 12:26:57.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.354" endtime="20201112 12:26:57.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.986" endtime="20201112 12:26:57.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.985" endtime="20201112 12:26:57.380"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.389" endtime="20201112 12:26:57.408"></status>
</kw>
<msg timestamp="20201112 12:26:57.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.387" endtime="20201112 12:26:57.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.410" endtime="20201112 12:26:57.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.412" endtime="20201112 12:26:57.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.384" endtime="20201112 12:26:57.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.382" endtime="20201112 12:26:57.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.421" endtime="20201112 12:26:57.709"></status>
</kw>
<msg timestamp="20201112 12:26:57.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024043319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024052069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.419" endtime="20201112 12:26:57.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024043319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024052069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.713" endtime="20201112 12:26:57.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.721" endtime="20201112 12:26:57.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.417" endtime="20201112 12:26:57.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.415" endtime="20201112 12:26:57.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.728" level="INFO">${RESULT} = [{'time': 0.024052069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999998342e-06, 'source_diff': 8.749999999998342e-06}, {'time': 0.024068431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:57.725" endtime="20201112 12:26:57.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.741" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:57.729" endtime="20201112 12:26:57.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.746" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.745" endtime="20201112 12:26:57.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.748" level="INFO">VALUE: [8.749999999998342e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.776999999998009e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.790999999997579e-06, 8.777000000001478e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.806000000000092e-06, 8.832999999999758e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.763000000001908e-06, 8.832999999999758e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.8340000000027e-06, 8.846999999999328e-06, 8.735999999998773e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.777000000001478e-06, 8.805000000000618e-06, 8.805999999996622e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.805000000000618e-06, 8.777999999997482e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201112 12:26:57.747" endtime="20201112 12:26:57.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.742" endtime="20201112 12:26:57.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.752" endtime="20201112 12:26:57.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.755" endtime="20201112 12:26:57.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.754" endtime="20201112 12:26:57.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.750" endtime="20201112 12:26:57.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.381" endtime="20201112 12:26:57.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.380" endtime="20201112 12:26:57.776"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.785" endtime="20201112 12:26:57.804"></status>
</kw>
<msg timestamp="20201112 12:26:57.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.783" endtime="20201112 12:26:57.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.805" endtime="20201112 12:26:57.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.808" endtime="20201112 12:26:57.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.781" endtime="20201112 12:26:57.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.779" endtime="20201112 12:26:57.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.817" endtime="20201112 12:26:58.103"></status>
</kw>
<msg timestamp="20201112 12:26:58.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024486625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024495417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.815" endtime="20201112 12:26:58.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024486625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024495417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.107" endtime="20201112 12:26:58.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.115" endtime="20201112 12:26:58.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.812" endtime="20201112 12:26:58.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.811" endtime="20201112 12:26:58.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.122" level="INFO">${RESULT} = [{'time': 0.024495417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.791999999997052e-06, 'source_diff': 8.791999999997052e-06}, {'time': 0.024508986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:58.119" endtime="20201112 12:26:58.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.135" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:58.123" endtime="20201112 12:26:58.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.140" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.139" endtime="20201112 12:26:58.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.142" level="INFO">VALUE: [8.791999999997052e-06, 8.707999999999633e-06, 8.790999999997579e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.723000000002146e-06, 8.778000000000952e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.819999999999661e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.762999999998439e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.763000000001908e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.806000000000092e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.735999999998773e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201112 12:26:58.141" endtime="20201112 12:26:58.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.136" endtime="20201112 12:26:58.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.146" endtime="20201112 12:26:58.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.149" endtime="20201112 12:26:58.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.148" endtime="20201112 12:26:58.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.144" endtime="20201112 12:26:58.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.777" endtime="20201112 12:26:58.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.777" endtime="20201112 12:26:58.170"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.179" endtime="20201112 12:26:58.196"></status>
</kw>
<msg timestamp="20201112 12:26:58.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.177" endtime="20201112 12:26:58.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.198" endtime="20201112 12:26:58.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.200" endtime="20201112 12:26:58.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.175" endtime="20201112 12:26:58.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.173" endtime="20201112 12:26:58.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.209" endtime="20201112 12:26:58.497"></status>
</kw>
<msg timestamp="20201112 12:26:58.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022410653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.208" endtime="20201112 12:26:58.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022410653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.501" endtime="20201112 12:26:58.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.509" endtime="20201112 12:26:58.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.205" endtime="20201112 12:26:58.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.204" endtime="20201112 12:26:58.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.516" level="INFO">${RESULT} = [{'time': 0.022419444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.791000000001048e-06, 'source_diff': 8.791000000001048e-06}, {'time': 0.022435875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:58.513" endtime="20201112 12:26:58.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.530" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:58.517" endtime="20201112 12:26:58.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.535" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.534" endtime="20201112 12:26:58.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.537" level="INFO">VALUE: [8.791000000001048e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.777999999997482e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.763000000001908e-06, 8.777999999997482e-06, 8.791000000001048e-06, 8.791999999997052e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.819999999999661e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.819999999999661e-06, 8.847999999998801e-06, 8.791000000001048e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.762999999998439e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.790999999997579e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.777000000001478e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.805000000000618e-06]</msg>
<status status="PASS" starttime="20201112 12:26:58.536" endtime="20201112 12:26:58.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.531" endtime="20201112 12:26:58.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.541" endtime="20201112 12:26:58.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.544" endtime="20201112 12:26:58.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.542" endtime="20201112 12:26:58.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.539" endtime="20201112 12:26:58.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.171" endtime="20201112 12:26:58.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.171" endtime="20201112 12:26:58.565"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.574" endtime="20201112 12:26:58.593"></status>
</kw>
<msg timestamp="20201112 12:26:58.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.572" endtime="20201112 12:26:58.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.594" endtime="20201112 12:26:58.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.597" endtime="20201112 12:26:58.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.570" endtime="20201112 12:26:58.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.567" endtime="20201112 12:26:58.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.606" endtime="20201112 12:26:58.892"></status>
</kw>
<msg timestamp="20201112 12:26:58.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024563486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024572208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.604" endtime="20201112 12:26:58.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024563486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024572208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.896" endtime="20201112 12:26:58.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.904" endtime="20201112 12:26:58.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.602" endtime="20201112 12:26:58.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.600" endtime="20201112 12:26:58.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.911" level="INFO">${RESULT} = [{'time': 0.024572208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.024591458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:58.908" endtime="20201112 12:26:58.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.924" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:58.912" endtime="20201112 12:26:58.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.929" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.928" endtime="20201112 12:26:58.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.931" level="INFO">VALUE: [8.722000000002672e-06, 8.777000000001478e-06, 8.819999999999661e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.777000000001478e-06, 8.722999999998676e-06, 8.792000000000522e-06, 8.889000000001507e-06, 8.764000000001382e-06, 8.790999999997579e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.818999999996718e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.804999999997148e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.776999999998009e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.791000000001048e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.805000000000618e-06, 8.791999999997052e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.763999999997912e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201112 12:26:58.930" endtime="20201112 12:26:58.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.925" endtime="20201112 12:26:58.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.935" endtime="20201112 12:26:58.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.938" endtime="20201112 12:26:58.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.937" endtime="20201112 12:26:58.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.933" endtime="20201112 12:26:58.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.566" endtime="20201112 12:26:58.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.565" endtime="20201112 12:26:58.959"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.968" endtime="20201112 12:26:58.984"></status>
</kw>
<msg timestamp="20201112 12:26:58.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.966" endtime="20201112 12:26:58.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.986" endtime="20201112 12:26:58.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.988" endtime="20201112 12:26:58.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.964" endtime="20201112 12:26:58.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.962" endtime="20201112 12:26:58.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.997" endtime="20201112 12:26:59.285"></status>
</kw>
<msg timestamp="20201112 12:26:59.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.996" endtime="20201112 12:26:59.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.289" endtime="20201112 12:26:59.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.297" endtime="20201112 12:26:59.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.993" endtime="20201112 12:26:59.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.992" endtime="20201112 12:26:59.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.304" level="INFO">${RESULT} = [{'time': 0.022157236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.022173458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:59.300" endtime="20201112 12:26:59.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.317" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:59.305" endtime="20201112 12:26:59.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.322" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.321" endtime="20201112 12:26:59.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.324" level="INFO">VALUE: [8.764000000001382e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.860999999998898e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.847999999998801e-06, 8.708999999999106e-06, 8.806000000000092e-06, 8.776999999998009e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.763999999997912e-06, 8.791000000001048e-06, 8.832999999999758e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.708999999999106e-06, 8.846999999999328e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.749999999998342e-06]</msg>
<status status="PASS" starttime="20201112 12:26:59.323" endtime="20201112 12:26:59.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.318" endtime="20201112 12:26:59.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.328" endtime="20201112 12:26:59.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.331" endtime="20201112 12:26:59.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.330" endtime="20201112 12:26:59.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.326" endtime="20201112 12:26:59.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.960" endtime="20201112 12:26:59.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.960" endtime="20201112 12:26:59.352"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.361" endtime="20201112 12:26:59.380"></status>
</kw>
<msg timestamp="20201112 12:26:59.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.359" endtime="20201112 12:26:59.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.381" endtime="20201112 12:26:59.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.384" endtime="20201112 12:26:59.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.357" endtime="20201112 12:26:59.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.355" endtime="20201112 12:26:59.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.393" endtime="20201112 12:26:59.680"></status>
</kw>
<msg timestamp="20201112 12:26:59.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021184903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021193736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.391" endtime="20201112 12:26:59.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021184903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021193736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.684" endtime="20201112 12:26:59.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.692" endtime="20201112 12:26:59.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.389" endtime="20201112 12:26:59.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.387" endtime="20201112 12:26:59.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.699" level="INFO">${RESULT} = [{'time': 0.021193736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.021207056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:59.696" endtime="20201112 12:26:59.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.712" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:59.700" endtime="20201112 12:26:59.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.717" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.716" endtime="20201112 12:26:59.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.719" level="INFO">VALUE: [8.832999999999758e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.805000000000618e-06, 8.832999999999758e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.791999999997052e-06, 8.791000000001048e-06, 8.707999999999633e-06, 8.764000000001382e-06, 8.819999999999661e-06, 8.776999999998009e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.846999999999328e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.819999999999661e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.806000000000092e-06, 8.832999999999758e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.762999999998439e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201112 12:26:59.718" endtime="20201112 12:26:59.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.713" endtime="20201112 12:26:59.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.723" endtime="20201112 12:26:59.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.726" endtime="20201112 12:26:59.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.725" endtime="20201112 12:26:59.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.721" endtime="20201112 12:26:59.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.353" endtime="20201112 12:26:59.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.352" endtime="20201112 12:26:59.747"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.756" endtime="20201112 12:26:59.774"></status>
</kw>
<msg timestamp="20201112 12:26:59.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.754" endtime="20201112 12:26:59.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.775" endtime="20201112 12:26:59.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.778" endtime="20201112 12:26:59.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.752" endtime="20201112 12:26:59.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.750" endtime="20201112 12:26:59.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.787" endtime="20201112 12:27:00.076"></status>
</kw>
<msg timestamp="20201112 12:27:00.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023086889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.785" endtime="20201112 12:27:00.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023086889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.080" endtime="20201112 12:27:00.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.088" endtime="20201112 12:27:00.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.783" endtime="20201112 12:27:00.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.781" endtime="20201112 12:27:00.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.095" level="INFO">${RESULT} = [{'time': 0.023086889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.023104917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:00.092" endtime="20201112 12:27:00.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.108" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:00.096" endtime="20201112 12:27:00.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.113" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.112" endtime="20201112 12:27:00.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.115" level="INFO">VALUE: [8.792000000000522e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.762999999998439e-06, 8.763999999997912e-06, 8.762999999998439e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.847999999998801e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.832999999999758e-06, 8.777000000001478e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.777000000001478e-06, 8.804999999997148e-06, 8.763000000001908e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.819000000000188e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.875000000001937e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.763999999997912e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201112 12:27:00.114" endtime="20201112 12:27:00.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.109" endtime="20201112 12:27:00.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.119" endtime="20201112 12:27:00.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.122" endtime="20201112 12:27:00.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.121" endtime="20201112 12:27:00.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.117" endtime="20201112 12:27:00.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.748" endtime="20201112 12:27:00.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.747" endtime="20201112 12:27:00.143"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.152" endtime="20201112 12:27:00.170"></status>
</kw>
<msg timestamp="20201112 12:27:00.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.150" endtime="20201112 12:27:00.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.172" endtime="20201112 12:27:00.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.174" endtime="20201112 12:27:00.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.148" endtime="20201112 12:27:00.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.146" endtime="20201112 12:27:00.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.183" endtime="20201112 12:27:00.471"></status>
</kw>
<msg timestamp="20201112 12:27:00.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024058556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024067333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.182" endtime="20201112 12:27:00.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024058556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024067333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.475" endtime="20201112 12:27:00.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.484" endtime="20201112 12:27:00.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.179" endtime="20201112 12:27:00.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.177" endtime="20201112 12:27:00.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.490" level="INFO">${RESULT} = [{'time': 0.024067333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.777000000001478e-06, 'source_diff': 8.777000000001478e-06}, {'time': 0.024083069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:00.487" endtime="20201112 12:27:00.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.504" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:00.491" endtime="20201112 12:27:00.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.508" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.507" endtime="20201112 12:27:00.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.511" level="INFO">VALUE: [8.777000000001478e-06, 8.762999999998439e-06, 8.763000000001908e-06, 8.749999999998342e-06, 8.763000000001908e-06, 8.846999999999328e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.819999999999661e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.791999999997052e-06, 8.763999999997912e-06, 8.762999999998439e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.820000000003131e-06, 8.778000000000952e-06, 8.763000000001908e-06, 8.762999999998439e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.804999999997148e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.804999999997148e-06, 8.791000000001048e-06]</msg>
<status status="PASS" starttime="20201112 12:27:00.509" endtime="20201112 12:27:00.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.505" endtime="20201112 12:27:00.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.514" endtime="20201112 12:27:00.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.518" endtime="20201112 12:27:00.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.516" endtime="20201112 12:27:00.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.512" endtime="20201112 12:27:00.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.144" endtime="20201112 12:27:00.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.143" endtime="20201112 12:27:00.539"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.548" endtime="20201112 12:27:00.572"></status>
</kw>
<msg timestamp="20201112 12:27:00.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.546" endtime="20201112 12:27:00.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.573" endtime="20201112 12:27:00.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.576" endtime="20201112 12:27:00.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.543" endtime="20201112 12:27:00.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.541" endtime="20201112 12:27:00.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.585" endtime="20201112 12:27:00.870"></status>
</kw>
<msg timestamp="20201112 12:27:00.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025456083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025464861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.583" endtime="20201112 12:27:00.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025456083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025464861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.875" endtime="20201112 12:27:00.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.883" endtime="20201112 12:27:00.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.581" endtime="20201112 12:27:00.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.579" endtime="20201112 12:27:00.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.890" level="INFO">${RESULT} = [{'time': 0.025464861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.0254805, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:00.886" endtime="20201112 12:27:00.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.903" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:00.891" endtime="20201112 12:27:00.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.908" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.907" endtime="20201112 12:27:00.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.910" level="INFO">VALUE: [8.777999999997482e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.791999999997052e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.818999999996718e-06, 8.777000000001478e-06, 8.777000000001478e-06, 8.791999999997052e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.833999999999231e-06, 8.818999999996718e-06, 8.777000000001478e-06, 8.762999999998439e-06, 8.791000000001048e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.763999999997912e-06, 8.791999999997052e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201112 12:27:00.909" endtime="20201112 12:27:00.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.904" endtime="20201112 12:27:00.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.913" endtime="20201112 12:27:00.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.917" endtime="20201112 12:27:00.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.916" endtime="20201112 12:27:00.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.912" endtime="20201112 12:27:00.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.539" endtime="20201112 12:27:00.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.539" endtime="20201112 12:27:00.938"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.947" endtime="20201112 12:27:00.963"></status>
</kw>
<msg timestamp="20201112 12:27:00.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.945" endtime="20201112 12:27:00.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.965" endtime="20201112 12:27:00.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.967" endtime="20201112 12:27:00.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.942" endtime="20201112 12:27:00.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.940" endtime="20201112 12:27:00.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.976" endtime="20201112 12:27:01.264"></status>
</kw>
<msg timestamp="20201112 12:27:01.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.975" endtime="20201112 12:27:01.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.268" endtime="20201112 12:27:01.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.276" endtime="20201112 12:27:01.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.972" endtime="20201112 12:27:01.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.970" endtime="20201112 12:27:01.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.283" level="INFO">${RESULT} = [{'time': 0.022918528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.022937222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:01.280" endtime="20201112 12:27:01.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.296" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:01.284" endtime="20201112 12:27:01.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.301" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.300" endtime="20201112 12:27:01.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.303" level="INFO">VALUE: [8.792000000000522e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.790999999997579e-06, 8.790999999997579e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.776999999998009e-06, 8.763999999997912e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.723000000002146e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.819999999999661e-06, 8.805000000000618e-06, 8.819000000000188e-06]</msg>
<status status="PASS" starttime="20201112 12:27:01.302" endtime="20201112 12:27:01.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.297" endtime="20201112 12:27:01.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.307" endtime="20201112 12:27:01.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.310" endtime="20201112 12:27:01.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.309" endtime="20201112 12:27:01.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.305" endtime="20201112 12:27:01.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.939" endtime="20201112 12:27:01.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.938" endtime="20201112 12:27:01.331"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.340" endtime="20201112 12:27:01.356"></status>
</kw>
<msg timestamp="20201112 12:27:01.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.338" endtime="20201112 12:27:01.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.358" endtime="20201112 12:27:01.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.360" endtime="20201112 12:27:01.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.336" endtime="20201112 12:27:01.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.334" endtime="20201112 12:27:01.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.369" endtime="20201112 12:27:01.657"></status>
</kw>
<msg timestamp="20201112 12:27:01.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021627347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.368" endtime="20201112 12:27:01.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021627347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.661" endtime="20201112 12:27:01.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.669" endtime="20201112 12:27:01.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.365" endtime="20201112 12:27:01.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.363" endtime="20201112 12:27:01.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.676" level="INFO">${RESULT} = [{'time': 0.021627347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.021640389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:01.673" endtime="20201112 12:27:01.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.689" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:01.677" endtime="20201112 12:27:01.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.694" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.693" endtime="20201112 12:27:01.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.696" level="INFO">VALUE: [8.764000000001382e-06, 8.763999999997912e-06, 8.708999999999106e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.819999999999661e-06, 8.735999999998773e-06, 8.819999999999661e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.762999999998439e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.791999999997052e-06, 8.819000000000188e-06, 8.777999999997482e-06, 8.762999999998439e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.680999999999967e-06, 8.777999999997482e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.846999999999328e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201112 12:27:01.695" endtime="20201112 12:27:01.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.690" endtime="20201112 12:27:01.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.700" endtime="20201112 12:27:01.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.703" endtime="20201112 12:27:01.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.702" endtime="20201112 12:27:01.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.698" endtime="20201112 12:27:01.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.332" endtime="20201112 12:27:01.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.332" endtime="20201112 12:27:01.724"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.733" endtime="20201112 12:27:01.749"></status>
</kw>
<msg timestamp="20201112 12:27:01.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.731" endtime="20201112 12:27:01.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.750" endtime="20201112 12:27:01.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.753" endtime="20201112 12:27:01.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.729" endtime="20201112 12:27:01.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.727" endtime="20201112 12:27:01.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.762" endtime="20201112 12:27:02.050"></status>
</kw>
<msg timestamp="20201112 12:27:02.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020452722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020461486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.760" endtime="20201112 12:27:02.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020452722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020461486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.054" endtime="20201112 12:27:02.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.062" endtime="20201112 12:27:02.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.758" endtime="20201112 12:27:02.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.756" endtime="20201112 12:27:02.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.069" level="INFO">${RESULT} = [{'time': 0.020461486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.020479014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:02.066" endtime="20201112 12:27:02.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.083" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:02.071" endtime="20201112 12:27:02.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.088" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.087" endtime="20201112 12:27:02.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.091" level="INFO">VALUE: [8.764000000001382e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.707999999999633e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.819999999999661e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.763000000001908e-06, 8.805999999996622e-06, 8.832999999999758e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.806000000000092e-06, 8.750000000001812e-06, 8.776999999998009e-06, 8.792000000000522e-06, 8.888999999998037e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.709000000002576e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.777000000001478e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.763999999997912e-06]</msg>
<status status="PASS" starttime="20201112 12:27:02.089" endtime="20201112 12:27:02.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.084" endtime="20201112 12:27:02.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.094" endtime="20201112 12:27:02.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.098" endtime="20201112 12:27:02.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.096" endtime="20201112 12:27:02.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.093" endtime="20201112 12:27:02.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.725" endtime="20201112 12:27:02.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.725" endtime="20201112 12:27:02.119"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.129" endtime="20201112 12:27:02.144"></status>
</kw>
<msg timestamp="20201112 12:27:02.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.127" endtime="20201112 12:27:02.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.146" endtime="20201112 12:27:02.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.149" endtime="20201112 12:27:02.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.124" endtime="20201112 12:27:02.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.122" endtime="20201112 12:27:02.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.158" endtime="20201112 12:27:02.445"></status>
</kw>
<msg timestamp="20201112 12:27:02.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.157" endtime="20201112 12:27:02.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.449" endtime="20201112 12:27:02.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.458" endtime="20201112 12:27:02.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.154" endtime="20201112 12:27:02.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.152" endtime="20201112 12:27:02.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.465" level="INFO">${RESULT} = [{'time': 0.022711889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.022726597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:02.461" endtime="20201112 12:27:02.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.478" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:02.466" endtime="20201112 12:27:02.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.483" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.482" endtime="20201112 12:27:02.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.486" level="INFO">VALUE: [8.819999999999661e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.763000000001908e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.776999999998009e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.776999999998009e-06, 8.791000000001048e-06, 8.804999999997148e-06, 8.791000000001048e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.806000000000092e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.791999999997052e-06]</msg>
<status status="PASS" starttime="20201112 12:27:02.484" endtime="20201112 12:27:02.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.479" endtime="20201112 12:27:02.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.496" endtime="20201112 12:27:02.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.500" endtime="20201112 12:27:02.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.498" endtime="20201112 12:27:02.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.494" endtime="20201112 12:27:02.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.120" endtime="20201112 12:27:02.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.119" endtime="20201112 12:27:02.521"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.530" endtime="20201112 12:27:02.550"></status>
</kw>
<msg timestamp="20201112 12:27:02.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.528" endtime="20201112 12:27:02.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.552" endtime="20201112 12:27:02.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.554" endtime="20201112 12:27:02.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.526" endtime="20201112 12:27:02.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.523" endtime="20201112 12:27:02.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.564" endtime="20201112 12:27:02.851"></status>
</kw>
<msg timestamp="20201112 12:27:02.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02269025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:02.562" endtime="20201112 12:27:02.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02269025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:02.855" endtime="20201112 12:27:02.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.863" endtime="20201112 12:27:02.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.559" endtime="20201112 12:27:02.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.558" endtime="20201112 12:27:02.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.870" level="INFO">${RESULT} = [{'time': 0.02269025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.022703819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:02.867" endtime="20201112 12:27:02.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.884" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:02.871" endtime="20201112 12:27:02.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.889" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.888" endtime="20201112 12:27:02.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.891" level="INFO">VALUE: [8.777999999997482e-06, 8.777000000001478e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.832999999999758e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.804999999997148e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.707999999999633e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.762999999998439e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.722999999998676e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.791999999997052e-06, 8.778000000000952e-06, 8.791999999997052e-06, 8.819999999999661e-06, 8.791999999997052e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.736000000002242e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201112 12:27:02.890" endtime="20201112 12:27:02.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.885" endtime="20201112 12:27:02.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.895" endtime="20201112 12:27:02.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.899" endtime="20201112 12:27:02.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.897" endtime="20201112 12:27:02.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.893" endtime="20201112 12:27:02.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.522" endtime="20201112 12:27:02.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.521" endtime="20201112 12:27:02.920"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.929" endtime="20201112 12:27:02.949"></status>
</kw>
<msg timestamp="20201112 12:27:02.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.927" endtime="20201112 12:27:02.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.950" endtime="20201112 12:27:02.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.953" endtime="20201112 12:27:02.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.924" endtime="20201112 12:27:02.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.922" endtime="20201112 12:27:02.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.962" endtime="20201112 12:27:03.251"></status>
</kw>
<msg timestamp="20201112 12:27:03.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025828347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025837111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.961" endtime="20201112 12:27:03.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025828347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025837111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.255" endtime="20201112 12:27:03.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.264" endtime="20201112 12:27:03.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.958" endtime="20201112 12:27:03.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.956" endtime="20201112 12:27:03.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.271" level="INFO">${RESULT} = [{'time': 0.025837111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999997912e-06, 'source_diff': 8.763999999997912e-06}, {'time': 0.025850681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:03.267" endtime="20201112 12:27:03.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.284" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:03.272" endtime="20201112 12:27:03.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.289" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.288" endtime="20201112 12:27:03.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.291" level="INFO">VALUE: [8.763999999997912e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.832999999999758e-06, 8.776999999998009e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.832999999999758e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.762999999998439e-06, 8.778000000000952e-06, 8.776999999998009e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.846999999999328e-06, 8.778000000000952e-06, 8.790999999997579e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.707999999999633e-06, 8.776999999998009e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.762999999998439e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.776999999998009e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.791000000001048e-06, 8.847999999998801e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201112 12:27:03.290" endtime="20201112 12:27:03.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.285" endtime="20201112 12:27:03.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.295" endtime="20201112 12:27:03.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.299" endtime="20201112 12:27:03.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.297" endtime="20201112 12:27:03.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.293" endtime="20201112 12:27:03.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.920" endtime="20201112 12:27:03.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.920" endtime="20201112 12:27:03.320"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.329" endtime="20201112 12:27:03.345"></status>
</kw>
<msg timestamp="20201112 12:27:03.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.327" endtime="20201112 12:27:03.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.347" endtime="20201112 12:27:03.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.349" endtime="20201112 12:27:03.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.325" endtime="20201112 12:27:03.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.322" endtime="20201112 12:27:03.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.359" endtime="20201112 12:27:03.645"></status>
</kw>
<msg timestamp="20201112 12:27:03.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022663861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.357" endtime="20201112 12:27:03.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022663861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.650" endtime="20201112 12:27:03.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.658" endtime="20201112 12:27:03.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.354" endtime="20201112 12:27:03.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.353" endtime="20201112 12:27:03.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.665" level="INFO">${RESULT} = [{'time': 0.022672667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.022691972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:03.662" endtime="20201112 12:27:03.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.679" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:03.666" endtime="20201112 12:27:03.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.683" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.682" endtime="20201112 12:27:03.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.686" level="INFO">VALUE: [8.806000000000092e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.819999999999661e-06, 8.86200000000184e-06, 8.777000000001478e-06, 8.791000000001048e-06, 8.722999999998676e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.819999999999661e-06, 8.791000000001048e-06, 8.847000000002797e-06, 8.818999999996718e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.749999999998342e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.833999999999231e-06, 8.791000000001048e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.749999999998342e-06]</msg>
<status status="PASS" starttime="20201112 12:27:03.685" endtime="20201112 12:27:03.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.680" endtime="20201112 12:27:03.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.690" endtime="20201112 12:27:03.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.694" endtime="20201112 12:27:03.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.692" endtime="20201112 12:27:03.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.688" endtime="20201112 12:27:03.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.321" endtime="20201112 12:27:03.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.320" endtime="20201112 12:27:03.715"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.724" endtime="20201112 12:27:03.746"></status>
</kw>
<msg timestamp="20201112 12:27:03.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.722" endtime="20201112 12:27:03.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.747" endtime="20201112 12:27:03.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.750" endtime="20201112 12:27:03.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.719" endtime="20201112 12:27:03.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.717" endtime="20201112 12:27:03.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.759" endtime="20201112 12:27:04.046"></status>
</kw>
<msg timestamp="20201112 12:27:04.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024610431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024619222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.758" endtime="20201112 12:27:04.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024610431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024619222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.051" endtime="20201112 12:27:04.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.059" endtime="20201112 12:27:04.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.755" endtime="20201112 12:27:04.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.753" endtime="20201112 12:27:04.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.066" level="INFO">${RESULT} = [{'time': 0.024619222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.791000000001048e-06, 'source_diff': 8.791000000001048e-06}, {'time': 0.024638153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:04.063" endtime="20201112 12:27:04.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.080" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:04.067" endtime="20201112 12:27:04.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.085" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.084" endtime="20201112 12:27:04.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.087" level="INFO">VALUE: [8.791000000001048e-06, 8.833999999999231e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.736999999998246e-06, 8.806000000000092e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.805000000000618e-06, 8.833999999999231e-06, 8.791000000001048e-06, 8.791000000001048e-06, 8.735999999998773e-06, 8.776999999998009e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.777999999997482e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.819999999999661e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201112 12:27:04.086" endtime="20201112 12:27:04.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.081" endtime="20201112 12:27:04.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.091" endtime="20201112 12:27:04.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.095" endtime="20201112 12:27:04.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.093" endtime="20201112 12:27:04.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.089" endtime="20201112 12:27:04.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.716" endtime="20201112 12:27:04.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.715" endtime="20201112 12:27:04.116"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.125" endtime="20201112 12:27:04.145"></status>
</kw>
<msg timestamp="20201112 12:27:04.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.123" endtime="20201112 12:27:04.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.146" endtime="20201112 12:27:04.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.149" endtime="20201112 12:27:04.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.120" endtime="20201112 12:27:04.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.118" endtime="20201112 12:27:04.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.158" endtime="20201112 12:27:04.445"></status>
</kw>
<msg timestamp="20201112 12:27:04.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025582125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025590889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.157" endtime="20201112 12:27:04.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025582125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025590889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.449" endtime="20201112 12:27:04.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.458" endtime="20201112 12:27:04.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.154" endtime="20201112 12:27:04.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.152" endtime="20201112 12:27:04.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.465" level="INFO">${RESULT} = [{'time': 0.025590889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999997912e-06, 'source_diff': 8.763999999997912e-06}, {'time': 0.025608139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:04.461" endtime="20201112 12:27:04.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.479" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:04.466" endtime="20201112 12:27:04.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.483" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.482" endtime="20201112 12:27:04.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.486" level="INFO">VALUE: [8.763999999997912e-06, 8.819999999999661e-06, 8.778000000000952e-06, 8.790999999997579e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.762999999998439e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.819000000000188e-06, 8.777000000001478e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.776999999998009e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.790999999997579e-06, 8.764000000001382e-06, 8.791999999997052e-06, 8.777999999997482e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.708999999999106e-06, 8.806000000000092e-06, 8.791999999997052e-06, 8.806000000000092e-06]</msg>
<status status="PASS" starttime="20201112 12:27:04.484" endtime="20201112 12:27:04.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.479" endtime="20201112 12:27:04.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.490" endtime="20201112 12:27:04.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.493" endtime="20201112 12:27:04.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.492" endtime="20201112 12:27:04.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.488" endtime="20201112 12:27:04.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.117" endtime="20201112 12:27:04.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.116" endtime="20201112 12:27:04.514"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.523" endtime="20201112 12:27:04.541"></status>
</kw>
<msg timestamp="20201112 12:27:04.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.521" endtime="20201112 12:27:04.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.543" endtime="20201112 12:27:04.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.545" endtime="20201112 12:27:04.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.519" endtime="20201112 12:27:04.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.517" endtime="20201112 12:27:04.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.555" endtime="20201112 12:27:04.843"></status>
</kw>
<msg timestamp="20201112 12:27:04.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023915472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023924222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.553" endtime="20201112 12:27:04.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023915472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023924222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.847" endtime="20201112 12:27:04.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.856" endtime="20201112 12:27:04.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.550" endtime="20201112 12:27:04.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.548" endtime="20201112 12:27:04.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.863" level="INFO">${RESULT} = [{'time': 0.023924222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999998342e-06, 'source_diff': 8.749999999998342e-06}, {'time': 0.023940694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:04.859" endtime="20201112 12:27:04.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.876" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:04.864" endtime="20201112 12:27:04.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.881" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.880" endtime="20201112 12:27:04.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.883" level="INFO">VALUE: [8.749999999998342e-06, 8.776999999998009e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.763999999997912e-06, 8.791000000001048e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.791999999997052e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.778000000000952e-06, 8.791999999997052e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.846999999999328e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.846999999999328e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.804999999997148e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.722000000002672e-06]</msg>
<status status="PASS" starttime="20201112 12:27:04.882" endtime="20201112 12:27:04.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.877" endtime="20201112 12:27:04.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.887" endtime="20201112 12:27:04.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.891" endtime="20201112 12:27:04.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.889" endtime="20201112 12:27:04.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.885" endtime="20201112 12:27:04.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.515" endtime="20201112 12:27:04.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.514" endtime="20201112 12:27:04.912"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.921" endtime="20201112 12:27:04.938"></status>
</kw>
<msg timestamp="20201112 12:27:04.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.919" endtime="20201112 12:27:04.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.939" endtime="20201112 12:27:04.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.942" endtime="20201112 12:27:04.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.916" endtime="20201112 12:27:04.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.914" endtime="20201112 12:27:04.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.951" endtime="20201112 12:27:05.238"></status>
</kw>
<msg timestamp="20201112 12:27:05.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023179597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023188403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.950" endtime="20201112 12:27:05.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023179597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023188403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.243" endtime="20201112 12:27:05.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.251" endtime="20201112 12:27:05.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.947" endtime="20201112 12:27:05.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.945" endtime="20201112 12:27:05.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.258" level="INFO">${RESULT} = [{'time': 0.023188403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.023202292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:05.255" endtime="20201112 12:27:05.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.272" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:05.259" endtime="20201112 12:27:05.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.277" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.276" endtime="20201112 12:27:05.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.279" level="INFO">VALUE: [8.806000000000092e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.791000000001048e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.832999999999758e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.694000000000063e-06, 8.792000000000522e-06, 8.790999999997579e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.694999999999536e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.777000000001478e-06]</msg>
<status status="PASS" starttime="20201112 12:27:05.278" endtime="20201112 12:27:05.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.273" endtime="20201112 12:27:05.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.283" endtime="20201112 12:27:05.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.287" endtime="20201112 12:27:05.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.285" endtime="20201112 12:27:05.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.281" endtime="20201112 12:27:05.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.913" endtime="20201112 12:27:05.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.912" endtime="20201112 12:27:05.308"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.317" endtime="20201112 12:27:05.335"></status>
</kw>
<msg timestamp="20201112 12:27:05.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.315" endtime="20201112 12:27:05.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.337" endtime="20201112 12:27:05.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.339" endtime="20201112 12:27:05.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.312" endtime="20201112 12:27:05.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.310" endtime="20201112 12:27:05.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.349" endtime="20201112 12:27:05.635"></status>
</kw>
<msg timestamp="20201112 12:27:05.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024221444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02423025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:05.347" endtime="20201112 12:27:05.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024221444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02423025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:05.639" endtime="20201112 12:27:05.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.648" endtime="20201112 12:27:05.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.345" endtime="20201112 12:27:05.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.343" endtime="20201112 12:27:05.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.655" level="INFO">${RESULT} = [{'time': 0.02423025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.805999999996622e-06, 'source_diff': 8.805999999996622e-06}, {'time': 0.024247653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:05.651" endtime="20201112 12:27:05.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.669" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:05.656" endtime="20201112 12:27:05.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.673" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.672" endtime="20201112 12:27:05.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.676" level="INFO">VALUE: [8.805999999996622e-06, 8.778000000000952e-06, 8.832999999999758e-06, 8.708999999999106e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.819000000000188e-06, 8.750000000001812e-06, 8.777000000001478e-06, 8.750000000001812e-06, 8.777000000001478e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.777999999997482e-06, 8.777999999997482e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.804999999997148e-06, 8.819000000000188e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.763000000001908e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.776999999998009e-06, 8.776999999998009e-06, 8.749999999998342e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.790999999997579e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201112 12:27:05.675" endtime="20201112 12:27:05.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.670" endtime="20201112 12:27:05.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.680" endtime="20201112 12:27:05.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.683" endtime="20201112 12:27:05.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.682" endtime="20201112 12:27:05.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.678" endtime="20201112 12:27:05.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.308" endtime="20201112 12:27:05.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.308" endtime="20201112 12:27:05.704"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.713" endtime="20201112 12:27:05.735"></status>
</kw>
<msg timestamp="20201112 12:27:05.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.712" endtime="20201112 12:27:05.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.736" endtime="20201112 12:27:05.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.739" endtime="20201112 12:27:05.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.709" endtime="20201112 12:27:05.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.707" endtime="20201112 12:27:05.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.748" endtime="20201112 12:27:06.035"></status>
</kw>
<msg timestamp="20201112 12:27:06.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024424583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024439069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.747" endtime="20201112 12:27:06.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024424583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024439069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.040" endtime="20201112 12:27:06.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.048" endtime="20201112 12:27:06.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.744" endtime="20201112 12:27:06.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.742" endtime="20201112 12:27:06.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.055" level="INFO">${RESULT} = [{'time': 0.024439069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4486000000001054e-05, 'source_diff': 1.4486000000001054e-05}, {'time': 0.024469569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:06.052" endtime="20201112 12:27:06.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.069" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:06.056" endtime="20201112 12:27:06.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.074" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.073" endtime="20201112 12:27:06.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.076" level="INFO">VALUE: [1.4486000000001054e-05, 2.2193999999999686e-05, 2.4056000000001465e-05, 2.4082999999997662e-05, 2.5999999999998247e-05, 2.4166000000002547e-05, 2.313900000000188e-05, 2.120899999999773e-05, 2.5985999999998677e-05, 2.115299999999945e-05, 2.30969999999997e-05, 2.5027999999999856e-05, 2.411100000000027e-05, 2.5986000000002146e-05, 2.5041999999999426e-05, 2.5943999999999967e-05, 2.1221999999997826e-05, 2.219499999999916e-05, 1.926299999999853e-05, 2.027700000000257e-05, 2.5040999999999952e-05, 2.215300000000045e-05, 2.40970000000007e-05, 2.5014000000000286e-05, 2.1222000000001295e-05, 2.4986000000001146e-05, 2.5986000000002146e-05, 2.0264000000002474e-05, 2.1221999999997826e-05, 2.2138000000001407e-05, 2.1208000000001725e-05, 2.211100000000174e-05, 2.0235999999999865e-05, 2.408300000000113e-05, 2.5040999999999952e-05, 2.5985999999998677e-05, 2.408300000000113e-05, 2.115299999999945e-05, 2.5014000000000286e-05, 2.411100000000027e-05, 2.5054999999999522e-05, 2.5958000000003006e-05, 2.6028000000000856e-05, 2.411100000000027e-05, 2.30969999999997e-05, 2.5041999999999426e-05, 2.4041999999998426e-05, 2.693100000000087e-05, 2.4082999999997662e-05, 2.313900000000188e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.075" endtime="20201112 12:27:06.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.070" endtime="20201112 12:27:06.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.080" endtime="20201112 12:27:06.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.084" endtime="20201112 12:27:06.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.082" endtime="20201112 12:27:06.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.078" endtime="20201112 12:27:06.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.705" endtime="20201112 12:27:06.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.705" endtime="20201112 12:27:06.105"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.114" endtime="20201112 12:27:06.131"></status>
</kw>
<msg timestamp="20201112 12:27:06.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.112" endtime="20201112 12:27:06.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.133" endtime="20201112 12:27:06.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.136" endtime="20201112 12:27:06.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.109" endtime="20201112 12:27:06.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.107" endtime="20201112 12:27:06.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.145" endtime="20201112 12:27:06.432"></status>
</kw>
<msg timestamp="20201112 12:27:06.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020956639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020965444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.143" endtime="20201112 12:27:06.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020956639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020965444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.437" endtime="20201112 12:27:06.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.445" endtime="20201112 12:27:06.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.141" endtime="20201112 12:27:06.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.139" endtime="20201112 12:27:06.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.452" level="INFO">${RESULT} = [{'time': 0.020965444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.020995611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:06.449" endtime="20201112 12:27:06.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.466" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:06.453" endtime="20201112 12:27:06.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.471" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.469" endtime="20201112 12:27:06.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.473" level="INFO">VALUE: [8.805000000000618e-06, 2.40970000000007e-05, 2.1166000000003016e-05, 2.4056000000001465e-05, 2.691699999999783e-05, 2.5055999999998996e-05, 2.218099999999959e-05, 2.1208000000001725e-05, 2.4041999999998426e-05, 1.9249999999998435e-05, 2.4098000000000175e-05, 2.1208000000001725e-05, 2.219500000000263e-05, 2.223700000000134e-05, 2.4986000000001146e-05, 2.0249999999999435e-05, 2.1221999999997826e-05, 2.5027999999999856e-05, 2.315299999999798e-05, 2.4098000000000175e-05, 2.1208000000001725e-05, 2.3068999999997092e-05, 2.215300000000045e-05, 2.1236000000000865e-05, 2.0222000000000295e-05, 2.5943999999999967e-05, 2.4999999999997247e-05, 2.308300000000013e-05, 2.406900000000156e-05, 2.3070000000000035e-05, 2.6027999999997387e-05, 2.313900000000188e-05, 2.20969999999987e-05, 2.30969999999997e-05, 2.5985999999998677e-05, 2.40970000000007e-05, 2.1194000000002156e-05, 2.118099999999859e-05, 2.695900000000001e-05, 2.2180000000000116e-05, 2.308300000000013e-05, 2.3054999999997522e-05, 2.411100000000027e-05, 2.312499999999884e-05, 2.213900000000088e-05, 2.029099999999867e-05, 2.116699999999902e-05, 2.0237000000002808e-05, 2.4028000000002325e-05, 2.4985999999997677e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.472" endtime="20201112 12:27:06.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.467" endtime="20201112 12:27:06.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.477" endtime="20201112 12:27:06.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.480" endtime="20201112 12:27:06.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.479" endtime="20201112 12:27:06.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.475" endtime="20201112 12:27:06.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.106" endtime="20201112 12:27:06.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.105" endtime="20201112 12:27:06.501"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.510" endtime="20201112 12:27:06.528"></status>
</kw>
<msg timestamp="20201112 12:27:06.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.509" endtime="20201112 12:27:06.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.530" endtime="20201112 12:27:06.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.532" endtime="20201112 12:27:06.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.506" endtime="20201112 12:27:06.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.504" endtime="20201112 12:27:06.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.542" endtime="20201112 12:27:06.830"></status>
</kw>
<msg timestamp="20201112 12:27:06.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021095458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021123375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.540" endtime="20201112 12:27:06.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021095458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021123375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.834" endtime="20201112 12:27:06.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.843" endtime="20201112 12:27:06.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.537" endtime="20201112 12:27:06.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.536" endtime="20201112 12:27:06.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.850" level="INFO">${RESULT} = [{'time': 0.021123375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.791699999999883e-05, 'source_diff': 2.791699999999883e-05}, {'time': 0.021154319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:06.846" endtime="20201112 12:27:06.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.863" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:06.851" endtime="20201112 12:27:06.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.868" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.867" endtime="20201112 12:27:06.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.871" level="INFO">VALUE: [2.791699999999883e-05, 2.6902000000002257e-05, 2.5014000000000286e-05, 2.5027999999999856e-05, 2.4070000000001035e-05, 2.5943999999999967e-05, 2.216700000000002e-05, 2.5041999999999426e-05, 2.5986000000002146e-05, 2.4013999999999286e-05, 2.211100000000174e-05, 2.0235999999999865e-05, 2.215300000000045e-05, 2.5014000000000286e-05, 2.219499999999916e-05, 2.4082999999997662e-05, 2.122300000000077e-05, 2.5957999999999537e-05, 2.109700000000117e-05, 2.597299999999858e-05, 2.1193999999998686e-05, 2.0264000000002474e-05, 2.5041999999999426e-05, 2.497300000000105e-05, 2.212500000000131e-05, 2.6000000000001716e-05, 2.411100000000027e-05, 2.216700000000002e-05, 2.313900000000188e-05, 2.0249999999999435e-05, 2.5041999999999426e-05, 2.311099999999927e-05, 2.30969999999997e-05, 2.1180000000002586e-05, 2.118099999999859e-05, 2.311099999999927e-05, 2.4082999999997662e-05, 2.215300000000045e-05, 2.3054999999997522e-05, 2.1207999999998256e-05, 2.0249999999999435e-05, 2.0292000000001614e-05, 2.1207999999998256e-05, 2.691699999999783e-05, 2.5943999999999967e-05, 2.2180000000000116e-05, 2.5014000000000286e-05, 2.4054999999998522e-05, 2.5055999999998996e-05, 2.6874999999999122e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.869" endtime="20201112 12:27:06.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.864" endtime="20201112 12:27:06.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.874" endtime="20201112 12:27:06.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.878" endtime="20201112 12:27:06.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.876" endtime="20201112 12:27:06.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.873" endtime="20201112 12:27:06.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.502" endtime="20201112 12:27:06.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.502" endtime="20201112 12:27:06.899"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.908" endtime="20201112 12:27:06.931"></status>
</kw>
<msg timestamp="20201112 12:27:06.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.906" endtime="20201112 12:27:06.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.933" endtime="20201112 12:27:06.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.936" endtime="20201112 12:27:06.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.904" endtime="20201112 12:27:06.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.902" endtime="20201112 12:27:06.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.945" endtime="20201112 12:27:07.231"></status>
</kw>
<msg timestamp="20201112 12:27:07.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025378986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025401125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.943" endtime="20201112 12:27:07.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025378986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025401125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.236" endtime="20201112 12:27:07.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.245" endtime="20201112 12:27:07.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.941" endtime="20201112 12:27:07.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.939" endtime="20201112 12:27:07.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.251" level="INFO">${RESULT} = [{'time': 0.025401125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.213900000000088e-05, 'source_diff': 2.213900000000088e-05}, {'time': 0.025431611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:07.248" endtime="20201112 12:27:07.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.265" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:07.252" endtime="20201112 12:27:07.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.270" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.269" endtime="20201112 12:27:07.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.272" level="INFO">VALUE: [2.213900000000088e-05, 2.4986000000001146e-05, 2.690299999999826e-05, 2.411100000000027e-05, 2.5054999999999522e-05, 2.594499999999944e-05, 2.5943999999999967e-05, 2.1222000000001295e-05, 2.216700000000002e-05, 2.313899999999841e-05, 2.405500000000199e-05, 2.6013999999997817e-05, 2.0249999999999435e-05, 2.6874999999999122e-05, 2.311099999999927e-05, 2.313899999999841e-05, 2.6972000000000107e-05, 2.213900000000088e-05, 2.0249999999999435e-05, 2.6000000000001716e-05, 2.5040999999999952e-05, 2.2180000000000116e-05, 2.6041000000000952e-05, 2.5985999999998677e-05, 2.119500000000163e-05, 2.1166000000003016e-05, 2.5014000000000286e-05, 2.5999999999998247e-05, 2.313899999999841e-05, 2.0264000000002474e-05, 2.2193999999999686e-05, 2.115299999999945e-05, 2.118100000000206e-05, 2.5068999999999092e-05, 2.412499999999984e-05, 2.597299999999858e-05, 2.119500000000163e-05, 2.212500000000131e-05, 2.4013999999999286e-05, 2.5055999999998996e-05, 2.5096999999998232e-05, 2.5056000000002465e-05, 2.304100000000142e-05, 2.3056000000000465e-05, 2.5014000000000286e-05, 2.2193999999999686e-05, 2.3084000000003074e-05, 2.118099999999859e-05, 2.308300000000013e-05, 2.312499999999884e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.271" endtime="20201112 12:27:07.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.266" endtime="20201112 12:27:07.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.276" endtime="20201112 12:27:07.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.280" endtime="20201112 12:27:07.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.278" endtime="20201112 12:27:07.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.274" endtime="20201112 12:27:07.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.900" endtime="20201112 12:27:07.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.899" endtime="20201112 12:27:07.301"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.310" endtime="20201112 12:27:07.333"></status>
</kw>
<msg timestamp="20201112 12:27:07.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.308" endtime="20201112 12:27:07.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.334" endtime="20201112 12:27:07.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.337" endtime="20201112 12:27:07.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.306" endtime="20201112 12:27:07.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.303" endtime="20201112 12:27:07.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.346" endtime="20201112 12:27:07.634"></status>
</kw>
<msg timestamp="20201112 12:27:07.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025588278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025619986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.345" endtime="20201112 12:27:07.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025588278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025619986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.638" endtime="20201112 12:27:07.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.647" endtime="20201112 12:27:07.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.342" endtime="20201112 12:27:07.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.340" endtime="20201112 12:27:07.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.655" level="INFO">${RESULT} = [{'time': 0.025619986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.170800000000182e-05, 'source_diff': 3.170800000000182e-05}, {'time': 0.025650958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:07.651" endtime="20201112 12:27:07.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.669" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:07.656" endtime="20201112 12:27:07.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.673" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.672" endtime="20201112 12:27:07.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.676" level="INFO">VALUE: [3.170800000000182e-05, 2.6000000000001716e-05, 2.1165999999999546e-05, 2.222300000000177e-05, 2.3097999999999175e-05, 2.1165999999999546e-05, 2.5054999999999522e-05, 2.123700000000034e-05, 2.209700000000217e-05, 2.216700000000002e-05, 2.4055999999997996e-05, 2.12090000000012e-05, 2.5000000000000716e-05, 2.30969999999997e-05, 2.306900000000056e-05, 2.120899999999773e-05, 2.20969999999987e-05, 2.5000000000000716e-05, 2.6972000000000107e-05, 2.408300000000113e-05, 2.311099999999927e-05, 2.688900000000216e-05, 2.0249999999999435e-05, 2.5027000000000382e-05, 2.5986000000002146e-05, 2.0235999999999865e-05, 2.4054999999998522e-05, 2.1222000000001295e-05, 2.306900000000056e-05, 2.5014000000000286e-05, 2.5943999999999967e-05, 2.22090000000022e-05, 2.3083999999999605e-05, 2.215300000000045e-05, 2.120899999999773e-05, 2.5068999999999092e-05, 2.2098000000001644e-05, 2.211100000000174e-05, 2.0193999999997686e-05, 2.12229999999973e-05, 2.5999999999998247e-05, 2.5027999999999856e-05, 2.597299999999858e-05, 2.118100000000206e-05, 2.4972000000001576e-05, 2.3070000000000035e-05, 2.12090000000012e-05, 2.6972000000000107e-05, 2.4042000000001895e-05, 2.497299999999758e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.675" endtime="20201112 12:27:07.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.670" endtime="20201112 12:27:07.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.684" endtime="20201112 12:27:07.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.688" endtime="20201112 12:27:07.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.686" endtime="20201112 12:27:07.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.683" endtime="20201112 12:27:07.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.302" endtime="20201112 12:27:07.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.301" endtime="20201112 12:27:07.709"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.718" endtime="20201112 12:27:07.739"></status>
</kw>
<msg timestamp="20201112 12:27:07.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.716" endtime="20201112 12:27:07.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.741" endtime="20201112 12:27:07.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.743" endtime="20201112 12:27:07.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.714" endtime="20201112 12:27:07.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.712" endtime="20201112 12:27:07.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.753" endtime="20201112 12:27:08.040"></status>
</kw>
<msg timestamp="20201112 12:27:08.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024325333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024342708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.751" endtime="20201112 12:27:08.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024325333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024342708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.045" endtime="20201112 12:27:08.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.053" endtime="20201112 12:27:08.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.748" endtime="20201112 12:27:08.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.747" endtime="20201112 12:27:08.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.061" level="INFO">${RESULT} = [{'time': 0.024342708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.737500000000003e-05, 'source_diff': 1.737500000000003e-05}, {'time': 0.024372778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:08.058" endtime="20201112 12:27:08.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.075" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:08.062" endtime="20201112 12:27:08.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.079" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.078" endtime="20201112 12:27:08.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.082" level="INFO">VALUE: [1.737500000000003e-05, 2.013900000000235e-05, 2.59170000000003e-05, 2.120899999999773e-05, 2.215300000000045e-05, 2.4070000000001035e-05, 2.0249999999999435e-05, 2.4054999999998522e-05, 2.212499999999784e-05, 2.0222000000000295e-05, 2.5916000000000827e-05, 2.0263999999999005e-05, 2.5027999999999856e-05, 2.59170000000003e-05, 2.012500000000278e-05, 2.312499999999884e-05, 2.4084000000000605e-05, 2.40970000000007e-05, 2.0250000000002905e-05, 2.218099999999959e-05, 2.5874999999998122e-05, 2.5027999999999856e-05, 2.40970000000007e-05, 2.022299999999977e-05, 2.3083999999999605e-05, 2.119499999999816e-05, 1.930499999999724e-05, 2.3070000000000035e-05, 2.3083999999999605e-05, 2.0208000000000725e-05, 2.211099999999827e-05, 2.598700000000162e-05, 2.408300000000113e-05, 2.4000000000003185e-05, 2.30969999999997e-05, 2.6014000000001286e-05, 2.1193999999998686e-05, 2.0222000000000295e-05, 2.4027999999998856e-05, 2.118099999999859e-05, 2.5972000000002576e-05, 2.408300000000113e-05, 2.0222000000000295e-05, 2.3055999999996996e-05, 2.4041999999998426e-05, 2.215300000000045e-05, 2.311099999999927e-05, 2.308300000000013e-05, 2.3083999999999605e-05, 2.5068999999999092e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.081" endtime="20201112 12:27:08.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.076" endtime="20201112 12:27:08.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.086" endtime="20201112 12:27:08.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.089" endtime="20201112 12:27:08.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.088" endtime="20201112 12:27:08.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.084" endtime="20201112 12:27:08.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.710" endtime="20201112 12:27:08.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.709" endtime="20201112 12:27:08.110"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.119" endtime="20201112 12:27:08.142"></status>
</kw>
<msg timestamp="20201112 12:27:08.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.118" endtime="20201112 12:27:08.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.144" endtime="20201112 12:27:08.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.147" endtime="20201112 12:27:08.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.115" endtime="20201112 12:27:08.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.113" endtime="20201112 12:27:08.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.156" endtime="20201112 12:27:08.444"></status>
</kw>
<msg timestamp="20201112 12:27:08.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02485025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024866625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:08.154" endtime="20201112 12:27:08.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02485025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024866625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:08.448" endtime="20201112 12:27:08.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.457" endtime="20201112 12:27:08.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.152" endtime="20201112 12:27:08.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.150" endtime="20201112 12:27:08.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.464" level="INFO">${RESULT} = [{'time': 0.024866625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.637499999999903e-05, 'source_diff': 1.637499999999903e-05}, {'time': 0.024896361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:08.460" endtime="20201112 12:27:08.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.478" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:08.465" endtime="20201112 12:27:08.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.482" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.481" endtime="20201112 12:27:08.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.485" level="INFO">VALUE: [1.637499999999903e-05, 2.3971999999997107e-05, 2.5027999999999856e-05, 2.5054999999999522e-05, 2.5014000000000286e-05, 2.6014000000001286e-05, 2.1250000000000435e-05, 2.593099999999987e-05, 2.4054999999998522e-05, 2.593099999999987e-05, 2.212499999999784e-05, 2.118100000000206e-05, 2.0249999999999435e-05, 2.308300000000013e-05, 2.5000000000000716e-05, 2.115299999999945e-05, 2.0263999999999005e-05, 2.3111999999998745e-05, 2.30969999999997e-05, 2.1179999999999116e-05, 2.4055999999997996e-05, 2.4070000000001035e-05, 2.694500000000044e-05, 2.1194000000002156e-05, 2.0235999999999865e-05, 2.4986000000001146e-05, 2.5013999999996817e-05, 2.0264000000002474e-05, 2.5014000000000286e-05, 2.5971999999999107e-05, 2.1151999999999976e-05, 2.2084000000002074e-05, 2.018100000000106e-05, 2.5999999999998247e-05, 2.6042000000000426e-05, 2.5014000000000286e-05, 2.2180000000000116e-05, 2.315299999999798e-05, 2.313899999999841e-05, 2.306900000000056e-05, 2.215300000000045e-05, 2.212499999999784e-05, 2.0250000000002905e-05, 2.3138000000002407e-05, 2.4069999999997566e-05, 2.2098000000001644e-05, 2.30969999999997e-05, 2.6972000000000107e-05, 2.5999999999998247e-05, 2.213900000000088e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.483" endtime="20201112 12:27:08.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.479" endtime="20201112 12:27:08.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.489" endtime="20201112 12:27:08.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.492" endtime="20201112 12:27:08.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.491" endtime="20201112 12:27:08.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.487" endtime="20201112 12:27:08.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.111" endtime="20201112 12:27:08.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.111" endtime="20201112 12:27:08.513"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.522" endtime="20201112 12:27:08.542"></status>
</kw>
<msg timestamp="20201112 12:27:08.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.521" endtime="20201112 12:27:08.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.544" endtime="20201112 12:27:08.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.547" endtime="20201112 12:27:08.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.518" endtime="20201112 12:27:08.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.516" endtime="20201112 12:27:08.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.556" endtime="20201112 12:27:08.845"></status>
</kw>
<msg timestamp="20201112 12:27:08.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023993917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024016069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.554" endtime="20201112 12:27:08.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023993917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024016069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.849" endtime="20201112 12:27:08.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.858" endtime="20201112 12:27:08.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.552" endtime="20201112 12:27:08.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.550" endtime="20201112 12:27:08.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.865" level="INFO">${RESULT} = [{'time': 0.024016069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2152000000000976e-05, 'source_diff': 2.2152000000000976e-05}, {'time': 0.024047097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:08.861" endtime="20201112 12:27:08.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.879" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:08.866" endtime="20201112 12:27:08.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.883" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.882" endtime="20201112 12:27:08.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.886" level="INFO">VALUE: [2.2152000000000976e-05, 2.6958000000000537e-05, 2.312499999999884e-05, 2.308300000000013e-05, 2.4028000000002325e-05, 2.213899999999741e-05, 2.1221999999997826e-05, 2.5068999999999092e-05, 2.2166000000000546e-05, 2.4112000000003214e-05, 2.59170000000003e-05, 2.594500000000291e-05, 2.216700000000002e-05, 2.312499999999884e-05, 2.5041999999999426e-05, 2.213900000000088e-05, 2.311099999999927e-05, 2.4056000000001465e-05, 2.3151999999998507e-05, 2.5082999999998662e-05, 2.0249999999999435e-05, 2.5985999999998677e-05, 2.1165999999999546e-05, 2.213900000000088e-05, 2.311099999999927e-05, 2.026299999999953e-05, 2.6055000000000522e-05, 2.40970000000007e-05, 2.0194000000001155e-05, 2.30969999999997e-05, 2.116699999999902e-05, 2.6972000000000107e-05, 2.5040999999999952e-05, 2.694500000000044e-05, 2.1222000000001295e-05, 2.3152000000001977e-05, 2.312499999999884e-05, 2.4028000000002325e-05, 2.590299999999726e-05, 2.109700000000117e-05, 2.30969999999997e-05, 2.2166000000000546e-05, 2.313900000000188e-05, 2.5014000000000286e-05, 2.4084000000000605e-05, 2.311099999999927e-05, 2.311100000000274e-05, 2.6888999999998692e-05, 2.5000000000000716e-05, 2.216700000000002e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.884" endtime="20201112 12:27:08.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.879" endtime="20201112 12:27:08.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.889" endtime="20201112 12:27:08.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.893" endtime="20201112 12:27:08.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.891" endtime="20201112 12:27:08.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.888" endtime="20201112 12:27:08.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.514" endtime="20201112 12:27:08.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.513" endtime="20201112 12:27:08.914"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.923" endtime="20201112 12:27:08.945"></status>
</kw>
<msg timestamp="20201112 12:27:08.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.921" endtime="20201112 12:27:08.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.947" endtime="20201112 12:27:08.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.949" endtime="20201112 12:27:08.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.919" endtime="20201112 12:27:08.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.917" endtime="20201112 12:27:08.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.959" endtime="20201112 12:27:09.247"></status>
</kw>
<msg timestamp="20201112 12:27:09.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025034056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025059056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.957" endtime="20201112 12:27:09.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025034056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025059056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.251" endtime="20201112 12:27:09.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.260" endtime="20201112 12:27:09.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.955" endtime="20201112 12:27:09.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.953" endtime="20201112 12:27:09.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.267" level="INFO">${RESULT} = [{'time': 0.025059056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000000716e-05, 'source_diff': 2.5000000000000716e-05}, {'time': 0.025089861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:09.263" endtime="20201112 12:27:09.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.280" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:09.268" endtime="20201112 12:27:09.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.285" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.284" endtime="20201112 12:27:09.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.287" level="INFO">VALUE: [2.5000000000000716e-05, 2.1180000000002586e-05, 2.311099999999927e-05, 2.215300000000045e-05, 2.313900000000188e-05, 2.6042000000000426e-05, 2.4042000000001895e-05, 2.1208000000001725e-05, 2.312499999999884e-05, 2.4055999999997996e-05, 2.115299999999945e-05, 2.594499999999944e-05, 2.0263999999999005e-05, 2.5985999999998677e-05, 2.5000000000000716e-05, 2.5000000000000716e-05, 2.1236000000000865e-05, 2.5027999999999856e-05, 2.3000000000002185e-05, 2.4056000000001465e-05, 2.6014000000001286e-05, 2.2207999999999256e-05, 2.30969999999997e-05, 2.0249999999999435e-05, 2.3972000000000576e-05, 2.305500000000099e-05, 2.119499999999816e-05, 2.5027000000000382e-05, 2.215300000000045e-05, 2.0264000000002474e-05, 2.5999999999998247e-05, 2.02769999999991e-05, 2.404100000000242e-05, 2.0235999999999865e-05, 2.5971999999999107e-05, 2.594499999999944e-05, 2.5041999999999426e-05, 2.029099999999867e-05, 2.688900000000216e-05, 2.1194000000002156e-05, 2.5027000000000382e-05, 2.0222000000000295e-05, 2.115299999999945e-05, 2.4098000000000175e-05, 2.312500000000231e-05, 2.5971999999999107e-05, 2.4985999999997677e-05, 2.4056000000001465e-05, 2.6014000000001286e-05, 2.1207999999998256e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.286" endtime="20201112 12:27:09.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.281" endtime="20201112 12:27:09.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.291" endtime="20201112 12:27:09.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.295" endtime="20201112 12:27:09.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.293" endtime="20201112 12:27:09.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.289" endtime="20201112 12:27:09.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.915" endtime="20201112 12:27:09.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.915" endtime="20201112 12:27:09.316"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.325" endtime="20201112 12:27:09.347"></status>
</kw>
<msg timestamp="20201112 12:27:09.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.323" endtime="20201112 12:27:09.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.349" endtime="20201112 12:27:09.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.351" endtime="20201112 12:27:09.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.321" endtime="20201112 12:27:09.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.318" endtime="20201112 12:27:09.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.361" endtime="20201112 12:27:09.649"></status>
</kw>
<msg timestamp="20201112 12:27:09.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025141903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025155444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.359" endtime="20201112 12:27:09.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025141903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025155444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.654" endtime="20201112 12:27:09.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.662" endtime="20201112 12:27:09.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.356" endtime="20201112 12:27:09.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.354" endtime="20201112 12:27:09.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.669" level="INFO">${RESULT} = [{'time': 0.025155444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.354099999999886e-05, 'source_diff': 1.354099999999886e-05}, {'time': 0.025186681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:09.666" endtime="20201112 12:27:09.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.683" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:09.670" endtime="20201112 12:27:09.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.688" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.687" endtime="20201112 12:27:09.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.691" level="INFO">VALUE: [1.354099999999886e-05, 2.1250000000000435e-05, 2.5027000000000382e-05, 2.5014000000000286e-05, 2.5014000000000286e-05, 2.311099999999927e-05, 2.694500000000044e-05, 2.311099999999927e-05, 2.312500000000231e-05, 2.5986000000002146e-05, 2.5972000000002576e-05, 2.5000000000000716e-05, 2.5943999999999967e-05, 2.5055999999998996e-05, 2.5986000000002146e-05, 2.1165999999999546e-05, 2.30969999999997e-05, 2.316700000000102e-05, 2.5027999999999856e-05, 2.6000000000001716e-05, 2.0249999999999435e-05, 2.116700000000249e-05, 2.2180000000000116e-05, 2.3111999999998745e-05, 2.593099999999987e-05, 2.5986000000002146e-05, 2.4069999999997566e-05, 2.211099999999827e-05, 2.118099999999859e-05, 2.6026999999997913e-05, 2.5027999999999856e-05, 2.5014000000000286e-05, 2.2152000000000976e-05, 2.397300000000005e-05, 2.1193999999998686e-05, 2.3097999999999175e-05, 2.312499999999884e-05, 2.6014000000001286e-05, 2.2152000000000976e-05, 2.1236000000000865e-05, 2.594499999999944e-05, 2.5027999999999856e-05, 2.216700000000002e-05, 2.6014000000001286e-05, 2.0222000000000295e-05, 2.0166000000002016e-05, 2.116699999999902e-05, 2.6000000000001716e-05, 2.6014000000001286e-05, 2.1138000000000406e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.689" endtime="20201112 12:27:09.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.684" endtime="20201112 12:27:09.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.695" endtime="20201112 12:27:09.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.699" endtime="20201112 12:27:09.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.697" endtime="20201112 12:27:09.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.693" endtime="20201112 12:27:09.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.317" endtime="20201112 12:27:09.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.316" endtime="20201112 12:27:09.720"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.729" endtime="20201112 12:27:09.749"></status>
</kw>
<msg timestamp="20201112 12:27:09.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.727" endtime="20201112 12:27:09.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.750" endtime="20201112 12:27:09.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.753" endtime="20201112 12:27:09.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.724" endtime="20201112 12:27:09.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.722" endtime="20201112 12:27:09.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.762" endtime="20201112 12:27:10.050"></status>
</kw>
<msg timestamp="20201112 12:27:10.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023210986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023237917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.761" endtime="20201112 12:27:10.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023210986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023237917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.054" endtime="20201112 12:27:10.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.063" endtime="20201112 12:27:10.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.758" endtime="20201112 12:27:10.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.756" endtime="20201112 12:27:10.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.070" level="INFO">${RESULT} = [{'time': 0.023237917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.693100000000087e-05, 'source_diff': 2.693100000000087e-05}, {'time': 0.023267986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:10.066" endtime="20201112 12:27:10.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.083" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:10.071" endtime="20201112 12:27:10.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.088" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.087" endtime="20201112 12:27:10.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.091" level="INFO">VALUE: [2.693100000000087e-05, 2.0222000000000295e-05, 2.312499999999884e-05, 2.313899999999841e-05, 2.308300000000013e-05, 2.5000000000000716e-05, 2.0249999999999435e-05, 2.5027000000000382e-05, 2.4027999999998856e-05, 2.4041999999998426e-05, 2.4040999999998952e-05, 2.311099999999927e-05, 2.0222000000000295e-05, 2.5930000000000397e-05, 2.6041000000000952e-05, 2.695900000000001e-05, 2.405500000000199e-05, 2.30969999999997e-05, 2.595900000000248e-05, 2.311099999999927e-05, 2.4070000000001035e-05, 2.4098000000000175e-05, 2.5014000000000286e-05, 2.311099999999927e-05, 2.4986000000001146e-05, 2.222300000000177e-05, 2.0222000000000295e-05, 2.4041999999998426e-05, 2.2193999999999686e-05, 2.6013000000001812e-05, 2.0235999999999865e-05, 2.1193999999998686e-05, 2.5957999999999537e-05, 2.0208000000000725e-05, 2.1165999999999546e-05, 2.0222000000000295e-05, 2.0194000000001155e-05, 2.4972000000001576e-05, 2.30969999999997e-05, 2.0235999999999865e-05, 2.5014000000000286e-05, 2.02090000000002e-05, 2.4055999999997996e-05, 2.6972000000000107e-05, 2.213900000000088e-05, 2.4971999999998107e-05, 2.6013999999997817e-05, 2.5985999999998677e-05, 2.0222000000000295e-05, 2.4026999999999382e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.089" endtime="20201112 12:27:10.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.084" endtime="20201112 12:27:10.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.095" endtime="20201112 12:27:10.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.098" endtime="20201112 12:27:10.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.097" endtime="20201112 12:27:10.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.093" endtime="20201112 12:27:10.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.721" endtime="20201112 12:27:10.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.720" endtime="20201112 12:27:10.119"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.128" endtime="20201112 12:27:10.150"></status>
</kw>
<msg timestamp="20201112 12:27:10.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.127" endtime="20201112 12:27:10.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.152" endtime="20201112 12:27:10.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.154" endtime="20201112 12:27:10.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.124" endtime="20201112 12:27:10.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.122" endtime="20201112 12:27:10.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.164" endtime="20201112 12:27:10.452"></status>
</kw>
<msg timestamp="20201112 12:27:10.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025692639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025714792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.162" endtime="20201112 12:27:10.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025692639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025714792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.456" endtime="20201112 12:27:10.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.465" endtime="20201112 12:27:10.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.159" endtime="20201112 12:27:10.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.158" endtime="20201112 12:27:10.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.472" level="INFO">${RESULT} = [{'time': 0.025714792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.215300000000045e-05, 'source_diff': 2.215300000000045e-05}, {'time': 0.025745569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:10.468" endtime="20201112 12:27:10.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.485" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:10.473" endtime="20201112 12:27:10.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.490" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.489" endtime="20201112 12:27:10.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.493" level="INFO">VALUE: [2.215300000000045e-05, 2.5054999999999522e-05, 2.5055999999998996e-05, 2.0263999999999005e-05, 2.4096999999997232e-05, 2.1221999999997826e-05, 2.5985999999998677e-05, 2.5055999999998996e-05, 2.4070000000001035e-05, 2.216700000000002e-05, 2.2180000000000116e-05, 2.506900000000256e-05, 2.6972000000000107e-05, 2.026299999999953e-05, 2.4070000000001035e-05, 2.218099999999959e-05, 2.5985999999998677e-05, 2.313900000000188e-05, 2.213899999999741e-05, 2.306900000000056e-05, 2.215299999999698e-05, 2.5999999999998247e-05, 2.213900000000088e-05, 2.6000000000001716e-05, 2.216700000000002e-05, 2.4096999999997232e-05, 2.593099999999987e-05, 2.3083999999999605e-05, 2.5957999999999537e-05, 2.6014000000001286e-05, 2.1194000000002156e-05, 2.6014000000001286e-05, 2.219499999999916e-05, 2.5985999999998677e-05, 2.216700000000002e-05, 2.594499999999944e-05, 2.208299999999913e-05, 2.408300000000113e-05, 2.312500000000231e-05, 2.315299999999798e-05, 2.5054999999999522e-05, 2.1193999999998686e-05, 2.022300000000324e-05, 2.49169999999993e-05, 2.212500000000131e-05, 2.119499999999816e-05, 2.313900000000188e-05, 2.6000000000001716e-05, 2.406900000000156e-05, 2.211099999999827e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.491" endtime="20201112 12:27:10.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.486" endtime="20201112 12:27:10.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.496" endtime="20201112 12:27:10.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.500" endtime="20201112 12:27:10.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.498" endtime="20201112 12:27:10.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.495" endtime="20201112 12:27:10.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.120" endtime="20201112 12:27:10.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.119" endtime="20201112 12:27:10.521"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.530" endtime="20201112 12:27:10.548"></status>
</kw>
<msg timestamp="20201112 12:27:10.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.528" endtime="20201112 12:27:10.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.550" endtime="20201112 12:27:10.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.552" endtime="20201112 12:27:10.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.526" endtime="20201112 12:27:10.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.523" endtime="20201112 12:27:10.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.562" endtime="20201112 12:27:10.848"></status>
</kw>
<msg timestamp="20201112 12:27:10.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020775194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020806819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.560" endtime="20201112 12:27:10.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020775194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020806819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.852" endtime="20201112 12:27:10.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.861" endtime="20201112 12:27:10.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.557" endtime="20201112 12:27:10.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.556" endtime="20201112 12:27:10.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.868" level="INFO">${RESULT} = [{'time': 0.020806819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.16250000000004e-05, 'source_diff': 3.16250000000004e-05}, {'time': 0.020836819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:10.864" endtime="20201112 12:27:10.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.881" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:10.869" endtime="20201112 12:27:10.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.886" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.885" endtime="20201112 12:27:10.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.889" level="INFO">VALUE: [3.16250000000004e-05, 2.5957999999999537e-05, 2.3111999999998745e-05, 2.6042000000000426e-05, 2.315299999999798e-05, 2.3083999999999605e-05, 2.312499999999884e-05, 2.30969999999997e-05, 2.3957999999997537e-05, 2.4055999999997996e-05, 2.2193999999999686e-05, 2.5055999999998996e-05, 2.3026999999998382e-05, 2.0237000000002808e-05, 2.0208000000000725e-05, 2.312500000000231e-05, 2.1264000000000005e-05, 2.4040999999998952e-05, 2.4041999999998426e-05, 2.118099999999859e-05, 2.0235999999999865e-05, 2.5082999999998662e-05, 2.406900000000156e-05, 2.3097999999999175e-05, 2.212500000000131e-05, 2.1236000000000865e-05, 2.0235999999999865e-05, 2.498699999999715e-05, 2.3042000000000895e-05, 2.308300000000013e-05, 2.315300000000145e-05, 2.5971999999999107e-05, 2.118100000000206e-05, 2.5040999999999952e-05, 2.118099999999859e-05, 2.6943999999997498e-05, 2.4041999999998426e-05, 2.4986000000001146e-05, 2.12090000000012e-05, 2.2152000000000976e-05, 2.4054999999998522e-05, 2.3097999999999175e-05, 2.594499999999944e-05, 2.5027999999999856e-05, 2.5054999999999522e-05, 2.3097999999999175e-05, 2.4972000000001576e-05, 2.4098000000000175e-05, 2.218100000000306e-05, 2.1264000000000005e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.887" endtime="20201112 12:27:10.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.882" endtime="20201112 12:27:10.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.892" endtime="20201112 12:27:10.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.896" endtime="20201112 12:27:10.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.894" endtime="20201112 12:27:10.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.891" endtime="20201112 12:27:10.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.522" endtime="20201112 12:27:10.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.521" endtime="20201112 12:27:10.917"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.926" endtime="20201112 12:27:10.945"></status>
</kw>
<msg timestamp="20201112 12:27:10.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.925" endtime="20201112 12:27:10.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.946" endtime="20201112 12:27:10.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.949" endtime="20201112 12:27:10.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.922" endtime="20201112 12:27:10.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.920" endtime="20201112 12:27:10.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.958" endtime="20201112 12:27:11.247"></status>
</kw>
<msg timestamp="20201112 12:27:11.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.957" endtime="20201112 12:27:11.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.251" endtime="20201112 12:27:11.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.260" endtime="20201112 12:27:11.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.954" endtime="20201112 12:27:11.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.952" endtime="20201112 12:27:11.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.267" level="INFO">${RESULT} = [{'time': 0.021483333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.021514361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:11.263" endtime="20201112 12:27:11.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.280" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:11.268" endtime="20201112 12:27:11.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.285" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.284" endtime="20201112 12:27:11.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.288" level="INFO">VALUE: [8.764000000001382e-06, 2.5000000000000716e-05, 2.312499999999884e-05, 2.213900000000088e-05, 2.1222000000001295e-05, 2.3138000000002407e-05, 2.5027999999999856e-05, 2.4098000000000175e-05, 2.2137999999997937e-05, 2.30969999999997e-05, 2.0263999999999005e-05, 2.2166000000000546e-05, 2.113899999999988e-05, 2.119499999999816e-05, 2.1236000000000865e-05, 2.5041999999999426e-05, 2.2112000000001214e-05, 2.30969999999997e-05, 2.40970000000007e-05, 2.313900000000188e-05, 2.4068999999998092e-05, 2.5014000000000286e-05, 2.4068999999998092e-05, 2.119499999999816e-05, 2.120899999999773e-05, 2.30969999999997e-05, 2.116700000000249e-05, 2.0221999999996826e-05, 2.4096999999997232e-05, 2.40970000000007e-05, 2.312499999999884e-05, 2.311100000000274e-05, 2.4054999999998522e-05, 2.0222000000000295e-05, 2.02090000000002e-05, 2.4999999999997247e-05, 2.312499999999884e-05, 2.313900000000188e-05, 2.5069999999998566e-05, 2.5985999999998677e-05, 2.4986000000001146e-05, 2.1221999999997826e-05, 2.215300000000045e-05, 2.0263999999999005e-05, 2.6916000000001827e-05, 2.119500000000163e-05, 2.122300000000077e-05, 2.5042000000002895e-05, 2.0277999999998575e-05, 2.0208000000000725e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.286" endtime="20201112 12:27:11.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.281" endtime="20201112 12:27:11.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.291" endtime="20201112 12:27:11.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.295" endtime="20201112 12:27:11.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.293" endtime="20201112 12:27:11.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.290" endtime="20201112 12:27:11.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.918" endtime="20201112 12:27:11.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.917" endtime="20201112 12:27:11.316"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.325" endtime="20201112 12:27:11.347"></status>
</kw>
<msg timestamp="20201112 12:27:11.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.324" endtime="20201112 12:27:11.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.349" endtime="20201112 12:27:11.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.351" endtime="20201112 12:27:11.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.321" endtime="20201112 12:27:11.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.319" endtime="20201112 12:27:11.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.361" endtime="20201112 12:27:11.647"></status>
</kw>
<msg timestamp="20201112 12:27:11.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024413542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024449028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.359" endtime="20201112 12:27:11.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024413542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024449028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.652" endtime="20201112 12:27:11.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.660" endtime="20201112 12:27:11.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.356" endtime="20201112 12:27:11.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.355" endtime="20201112 12:27:11.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.667" level="INFO">${RESULT} = [{'time': 0.024449028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.548600000000124e-05, 'source_diff': 3.548600000000124e-05}, {'time': 0.024479472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:11.664" endtime="20201112 12:27:11.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.681" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:11.668" endtime="20201112 12:27:11.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.686" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.685" endtime="20201112 12:27:11.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.688" level="INFO">VALUE: [3.548600000000124e-05, 2.111099999999727e-05, 2.5041999999999426e-05, 2.312499999999884e-05, 2.4041999999998426e-05, 2.4068999999998092e-05, 2.0263999999999005e-05, 2.312500000000231e-05, 2.213900000000088e-05, 2.218099999999959e-05, 2.1235999999997396e-05, 2.1165999999999546e-05, 2.5013000000000812e-05, 2.305500000000099e-05, 2.215300000000045e-05, 2.219499999999916e-05, 2.1250000000000435e-05, 2.5014000000000286e-05, 2.118099999999859e-05, 2.312499999999884e-05, 2.597299999999858e-05, 2.218099999999959e-05, 2.311099999999927e-05, 2.5041999999999426e-05, 2.3056000000000465e-05, 2.115299999999945e-05, 2.0222000000000295e-05, 2.1207999999998256e-05, 2.5972000000002576e-05, 2.316700000000102e-05, 2.595899999999901e-05, 2.3986000000000146e-05, 2.5027999999999856e-05, 2.306900000000056e-05, 2.5014000000000286e-05, 2.406900000000156e-05, 2.6028000000000856e-05, 2.5985999999998677e-05, 2.5000000000000716e-05, 2.5957999999999537e-05, 2.2152000000000976e-05, 2.219499999999916e-05, 2.406900000000156e-05, 2.5055999999998996e-05, 2.115299999999945e-05, 2.1165999999999546e-05, 2.6000000000001716e-05, 2.406900000000156e-05, 2.5013000000000812e-05, 2.311099999999927e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.687" endtime="20201112 12:27:11.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.682" endtime="20201112 12:27:11.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.692" endtime="20201112 12:27:11.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.696" endtime="20201112 12:27:11.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.694" endtime="20201112 12:27:11.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.690" endtime="20201112 12:27:11.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.317" endtime="20201112 12:27:11.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.316" endtime="20201112 12:27:11.717"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.727" endtime="20201112 12:27:11.748"></status>
</kw>
<msg timestamp="20201112 12:27:11.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.725" endtime="20201112 12:27:11.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.750" endtime="20201112 12:27:11.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.752" endtime="20201112 12:27:11.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.722" endtime="20201112 12:27:11.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.720" endtime="20201112 12:27:11.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.762" endtime="20201112 12:27:12.050"></status>
</kw>
<msg timestamp="20201112 12:27:12.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025820792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025858278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.760" endtime="20201112 12:27:12.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025820792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025858278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.054" endtime="20201112 12:27:12.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.063" endtime="20201112 12:27:12.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.757" endtime="20201112 12:27:12.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.756" endtime="20201112 12:27:12.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.070" level="INFO">${RESULT} = [{'time': 0.025858278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.748599999999977e-05, 'source_diff': 3.748599999999977e-05}, {'time': 0.025888778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:12.066" endtime="20201112 12:27:12.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.083" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:12.071" endtime="20201112 12:27:12.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.088" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.087" endtime="20201112 12:27:12.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.091" level="INFO">VALUE: [3.748599999999977e-05, 2.216700000000002e-05, 2.4027999999998856e-05, 2.686100000000302e-05, 2.5971999999999107e-05, 2.5985999999998677e-05, 2.4082999999997662e-05, 2.1208000000001725e-05, 2.213900000000088e-05, 2.215300000000045e-05, 2.3041999999997426e-05, 2.5056000000002465e-05, 2.4026999999999382e-05, 2.0249999999999435e-05, 2.30969999999997e-05, 2.1250000000000435e-05, 2.216700000000002e-05, 2.5027999999999856e-05, 2.408300000000113e-05, 2.5068999999999092e-05, 2.115299999999945e-05, 2.5014000000000286e-05, 2.315299999999798e-05, 2.1222000000001295e-05, 2.311099999999927e-05, 2.216700000000002e-05, 2.306900000000056e-05, 2.2999999999998716e-05, 2.1194000000002156e-05, 2.220899999999873e-05, 2.313899999999841e-05, 2.5027999999999856e-05, 2.6014000000001286e-05, 2.2193999999999686e-05, 2.1222000000001295e-05, 2.312499999999884e-05, 2.4098000000000175e-05, 2.218099999999959e-05, 2.690299999999826e-05, 2.306900000000056e-05, 2.312499999999884e-05, 2.0249999999999435e-05, 2.4096999999997232e-05, 2.690300000000173e-05, 2.4054999999998522e-05, 2.5041999999999426e-05, 2.0222000000000295e-05, 2.1179999999999116e-05, 2.6042000000000426e-05, 2.3138000000002407e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.089" endtime="20201112 12:27:12.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.084" endtime="20201112 12:27:12.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.094" endtime="20201112 12:27:12.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.098" endtime="20201112 12:27:12.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.096" endtime="20201112 12:27:12.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.093" endtime="20201112 12:27:12.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.718" endtime="20201112 12:27:12.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.717" endtime="20201112 12:27:12.119"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.128" endtime="20201112 12:27:12.150"></status>
</kw>
<msg timestamp="20201112 12:27:12.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.126" endtime="20201112 12:27:12.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.151" endtime="20201112 12:27:12.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.154" endtime="20201112 12:27:12.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.124" endtime="20201112 12:27:12.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.122" endtime="20201112 12:27:12.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.163" endtime="20201112 12:27:12.449"></status>
</kw>
<msg timestamp="20201112 12:27:12.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0253305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025344042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:12.162" endtime="20201112 12:27:12.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0253305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025344042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:12.453" endtime="20201112 12:27:12.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.462" endtime="20201112 12:27:12.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.159" endtime="20201112 12:27:12.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.157" endtime="20201112 12:27:12.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.469" level="INFO">${RESULT} = [{'time': 0.025344042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3542000000001803e-05, 'source_diff': 1.3542000000001803e-05}, {'time': 0.025374722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:12.465" endtime="20201112 12:27:12.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.483" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:12.470" endtime="20201112 12:27:12.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.487" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.486" endtime="20201112 12:27:12.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.490" level="INFO">VALUE: [1.3542000000001803e-05, 2.0277999999998575e-05, 2.313899999999841e-05, 2.497300000000105e-05, 2.2193999999999686e-05, 2.5014000000000286e-05, 2.211100000000174e-05, 2.498700000000062e-05, 2.213900000000088e-05, 2.6027999999997387e-05, 2.5056000000002465e-05, 2.5943999999999967e-05, 2.4070000000001035e-05, 2.408300000000113e-05, 2.3097999999999175e-05, 2.02090000000002e-05, 2.6041000000000952e-05, 2.311099999999927e-05, 2.5999999999998247e-05, 2.216700000000002e-05, 2.4041999999998426e-05, 2.215299999999698e-05, 2.213899999999741e-05, 2.3068999999997092e-05, 2.50970000000017e-05, 2.213900000000088e-05, 2.215300000000045e-05, 2.118099999999859e-05, 2.318100000000059e-05, 2.408300000000113e-05, 2.5000000000000716e-05, 2.5999999999998247e-05, 2.3165999999998077e-05, 2.5971999999999107e-05, 2.4026999999999382e-05, 2.1221999999997826e-05, 2.022299999999977e-05, 2.3083999999999605e-05, 2.404100000000242e-05, 2.5957999999999537e-05, 2.5986000000002146e-05, 2.116700000000249e-05, 2.213900000000088e-05, 2.219499999999916e-05, 2.5014000000000286e-05, 2.211099999999827e-05, 2.30969999999997e-05, 2.316699999999755e-05, 2.2180000000000116e-05, 2.312499999999884e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.488" endtime="20201112 12:27:12.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.483" endtime="20201112 12:27:12.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.494" endtime="20201112 12:27:12.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.497" endtime="20201112 12:27:12.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.496" endtime="20201112 12:27:12.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.492" endtime="20201112 12:27:12.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.120" endtime="20201112 12:27:12.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.119" endtime="20201112 12:27:12.518"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.527" endtime="20201112 12:27:12.549"></status>
</kw>
<msg timestamp="20201112 12:27:12.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.525" endtime="20201112 12:27:12.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.551" endtime="20201112 12:27:12.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.554" endtime="20201112 12:27:12.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.523" endtime="20201112 12:27:12.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.521" endtime="20201112 12:27:12.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.563" endtime="20201112 12:27:12.853"></status>
</kw>
<msg timestamp="20201112 12:27:12.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023137042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:12.561" endtime="20201112 12:27:12.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023137042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:12.857" endtime="20201112 12:27:12.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.866" endtime="20201112 12:27:12.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.559" endtime="20201112 12:27:12.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.557" endtime="20201112 12:27:12.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.873" level="INFO">${RESULT} = [{'time': 0.0231525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5457999999999444e-05, 'source_diff': 1.5457999999999444e-05}, {'time': 0.023183014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:12.869" endtime="20201112 12:27:12.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.886" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:12.874" endtime="20201112 12:27:12.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.891" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.890" endtime="20201112 12:27:12.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.894" level="INFO">VALUE: [1.5457999999999444e-05, 2.0207999999997256e-05, 2.212500000000131e-05, 2.408300000000113e-05, 2.5999999999998247e-05, 2.1193999999998686e-05, 2.216700000000002e-05, 2.1179999999999116e-05, 2.1222000000001295e-05, 2.119499999999816e-05, 2.216700000000002e-05, 2.212500000000131e-05, 2.312499999999884e-05, 2.5999999999998247e-05, 2.30969999999997e-05, 2.211100000000174e-05, 2.111100000000074e-05, 2.5972000000002576e-05, 2.4084000000000605e-05, 2.118099999999859e-05, 2.312499999999884e-05, 2.5055999999998996e-05, 2.1222000000001295e-05, 2.5056000000002465e-05, 2.5027999999999856e-05, 2.5972000000002576e-05, 2.0264000000002474e-05, 2.2137999999997937e-05, 2.2137999999997937e-05, 2.216700000000002e-05, 2.40970000000007e-05, 2.0249999999999435e-05, 1.92769999999981e-05, 2.311100000000274e-05, 2.59170000000003e-05, 2.695900000000001e-05, 2.1207999999998256e-05, 2.40970000000007e-05, 2.1235999999997396e-05, 2.406900000000156e-05, 2.0249999999999435e-05, 2.5027999999999856e-05, 2.111100000000074e-05, 2.112499999999684e-05, 2.40970000000007e-05, 2.6055000000000522e-05, 2.5055999999998996e-05, 2.311099999999927e-05, 2.119499999999816e-05, 2.5027999999999856e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.892" endtime="20201112 12:27:12.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.887" endtime="20201112 12:27:12.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.901" endtime="20201112 12:27:12.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.905" endtime="20201112 12:27:12.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.903" endtime="20201112 12:27:12.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.899" endtime="20201112 12:27:12.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.519" endtime="20201112 12:27:12.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.518" endtime="20201112 12:27:12.926"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.935" endtime="20201112 12:27:12.954"></status>
</kw>
<msg timestamp="20201112 12:27:12.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.933" endtime="20201112 12:27:12.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.956" endtime="20201112 12:27:12.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.958" endtime="20201112 12:27:12.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.930" endtime="20201112 12:27:12.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.928" endtime="20201112 12:27:12.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.968" endtime="20201112 12:27:13.256"></status>
</kw>
<msg timestamp="20201112 12:27:13.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.966" endtime="20201112 12:27:13.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.260" endtime="20201112 12:27:13.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.269" endtime="20201112 12:27:13.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.963" endtime="20201112 12:27:13.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.962" endtime="20201112 12:27:13.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.275" level="INFO">${RESULT} = [{'time': 0.022485028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.118100000000206e-05, 'source_diff': 2.118100000000206e-05}, {'time': 0.022515556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:13.272" endtime="20201112 12:27:13.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.289" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:13.276" endtime="20201112 12:27:13.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.293" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.292" endtime="20201112 12:27:13.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.296" level="INFO">VALUE: [2.118100000000206e-05, 2.2111999999997745e-05, 2.5985999999998677e-05, 2.405500000000199e-05, 2.593099999999987e-05, 2.4986000000001146e-05, 2.6028000000000856e-05, 2.312500000000231e-05, 2.406900000000156e-05, 2.30969999999997e-05, 2.4028000000002325e-05, 2.5929999999996928e-05, 2.506900000000256e-05, 2.2166000000000546e-05, 2.4054999999998522e-05, 2.213900000000088e-05, 2.319500000000016e-05, 2.216700000000002e-05, 2.6000000000001716e-05, 2.0249999999999435e-05, 2.0208000000000725e-05, 2.4055999999997996e-05, 2.5097999999997705e-05, 2.312500000000231e-05, 2.0166000000002016e-05, 2.0208000000000725e-05, 2.306900000000056e-05, 2.313900000000188e-05, 2.4972000000001576e-05, 2.4070000000001035e-05, 2.119499999999816e-05, 2.40970000000007e-05, 2.219499999999916e-05, 2.690300000000173e-05, 2.4054999999998522e-05, 2.6000000000001716e-05, 2.5985999999998677e-05, 2.4098000000000175e-05, 2.4041999999998426e-05, 2.5971999999999107e-05, 2.20969999999987e-05, 2.312500000000231e-05, 2.5000000000000716e-05, 2.211099999999827e-05, 2.5999999999998247e-05, 2.315300000000145e-05, 2.1193999999998686e-05, 2.4027999999998856e-05, 2.12770000000001e-05, 2.311099999999927e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.294" endtime="20201112 12:27:13.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.290" endtime="20201112 12:27:13.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.299" endtime="20201112 12:27:13.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.303" endtime="20201112 12:27:13.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.301" endtime="20201112 12:27:13.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.298" endtime="20201112 12:27:13.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.927" endtime="20201112 12:27:13.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.926" endtime="20201112 12:27:13.324"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.333" endtime="20201112 12:27:13.351"></status>
</kw>
<msg timestamp="20201112 12:27:13.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.331" endtime="20201112 12:27:13.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.352" endtime="20201112 12:27:13.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.355" endtime="20201112 12:27:13.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.328" endtime="20201112 12:27:13.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.326" endtime="20201112 12:27:13.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.364" endtime="20201112 12:27:13.651"></status>
</kw>
<msg timestamp="20201112 12:27:13.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021391903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021422597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.362" endtime="20201112 12:27:13.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021391903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021422597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.655" endtime="20201112 12:27:13.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.664" endtime="20201112 12:27:13.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.360" endtime="20201112 12:27:13.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.358" endtime="20201112 12:27:13.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.670" level="INFO">${RESULT} = [{'time': 0.021422597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.069400000000125e-05, 'source_diff': 3.069400000000125e-05}, {'time': 0.021452847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:13.667" endtime="20201112 12:27:13.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.684" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:13.671" endtime="20201112 12:27:13.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.688" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.687" endtime="20201112 12:27:13.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.691" level="INFO">VALUE: [3.069400000000125e-05, 2.1194000000002156e-05, 2.412499999999984e-05, 2.591699999999683e-05, 2.4028000000002325e-05, 2.0236000000003335e-05, 2.6944000000000967e-05, 2.597300000000205e-05, 2.308300000000013e-05, 2.216700000000002e-05, 2.6028000000000856e-05, 2.0222000000000295e-05, 2.1151999999999976e-05, 2.5972000000002576e-05, 2.0249999999999435e-05, 2.308300000000013e-05, 2.212499999999784e-05, 2.4986000000001146e-05, 2.309700000000317e-05, 2.1221999999997826e-05, 2.5986000000002146e-05, 2.408300000000113e-05, 2.1207999999998256e-05, 2.308300000000013e-05, 2.4042000000001895e-05, 2.5999999999998247e-05, 2.2180000000000116e-05, 2.118099999999859e-05, 2.119500000000163e-05, 2.218099999999959e-05, 2.0249999999999435e-05, 2.316700000000102e-05, 2.211100000000174e-05, 2.40970000000007e-05, 2.5042000000002895e-05, 2.115299999999945e-05, 2.595899999999901e-05, 2.315299999999798e-05, 2.12090000000012e-05, 2.1179999999999116e-05, 2.0249999999999435e-05, 2.6958000000000537e-05, 2.312499999999884e-05, 2.4971999999998107e-05, 2.1180000000002586e-05, 2.408300000000113e-05, 2.218099999999959e-05, 2.213900000000088e-05, 2.116699999999902e-05, 2.213900000000088e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.689" endtime="20201112 12:27:13.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.685" endtime="20201112 12:27:13.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.695" endtime="20201112 12:27:13.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.698" endtime="20201112 12:27:13.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.697" endtime="20201112 12:27:13.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.693" endtime="20201112 12:27:13.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.325" endtime="20201112 12:27:13.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.324" endtime="20201112 12:27:13.719"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.728" endtime="20201112 12:27:13.748"></status>
</kw>
<msg timestamp="20201112 12:27:13.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.726" endtime="20201112 12:27:13.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.749" endtime="20201112 12:27:13.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.752" endtime="20201112 12:27:13.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.724" endtime="20201112 12:27:13.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.722" endtime="20201112 12:27:13.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.761" endtime="20201112 12:27:14.048"></status>
</kw>
<msg timestamp="20201112 12:27:14.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022802125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.760" endtime="20201112 12:27:14.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022802125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.052" endtime="20201112 12:27:14.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.060" endtime="20201112 12:27:14.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.757" endtime="20201112 12:27:14.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.755" endtime="20201112 12:27:14.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.067" level="INFO">${RESULT} = [{'time': 0.022802125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5041999999999426e-05, 'source_diff': 2.5041999999999426e-05}, {'time': 0.022832111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:14.064" endtime="20201112 12:27:14.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.080" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:14.068" endtime="20201112 12:27:14.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.085" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.084" endtime="20201112 12:27:14.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.087" level="INFO">VALUE: [2.5041999999999426e-05, 2.311099999999927e-05, 2.212500000000131e-05, 2.4999999999997247e-05, 2.316700000000102e-05, 2.5014000000000286e-05, 2.212500000000131e-05, 2.5014000000000286e-05, 2.0249999999999435e-05, 2.218099999999959e-05, 2.5055999999998996e-05, 2.313899999999841e-05, 2.5985999999998677e-05, 2.0249999999999435e-05, 2.408300000000113e-05, 2.0207999999997256e-05, 2.6944000000000967e-05, 2.213899999999741e-05, 2.6014000000001286e-05, 2.5999999999998247e-05, 2.311099999999927e-05, 2.312500000000231e-05, 2.218099999999959e-05, 2.5041999999999426e-05, 2.319500000000016e-05, 2.311100000000274e-05, 2.30969999999997e-05, 2.122300000000077e-05, 2.4096999999997232e-05, 2.2083999999998605e-05, 2.2152000000000976e-05, 1.9249999999998435e-05, 2.594499999999944e-05, 2.0208000000000725e-05, 2.2152000000000976e-05, 2.4068999999998092e-05, 2.5957999999999537e-05, 2.406900000000156e-05, 2.123700000000034e-05, 2.398699999999962e-05, 2.216700000000002e-05, 2.0264000000002474e-05, 2.408300000000113e-05, 2.0249999999999435e-05, 2.693100000000087e-05, 2.2193999999999686e-05, 2.211100000000174e-05, 2.3151999999998507e-05, 2.0235999999999865e-05, 2.405500000000199e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.086" endtime="20201112 12:27:14.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.081" endtime="20201112 12:27:14.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.091" endtime="20201112 12:27:14.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.094" endtime="20201112 12:27:14.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.093" endtime="20201112 12:27:14.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.089" endtime="20201112 12:27:14.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.720" endtime="20201112 12:27:14.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.720" endtime="20201112 12:27:14.115"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.124" endtime="20201112 12:27:14.144"></status>
</kw>
<msg timestamp="20201112 12:27:14.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.122" endtime="20201112 12:27:14.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.146" endtime="20201112 12:27:14.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.148" endtime="20201112 12:27:14.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.120" endtime="20201112 12:27:14.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.118" endtime="20201112 12:27:14.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.157" endtime="20201112 12:27:14.444"></status>
</kw>
<msg timestamp="20201112 12:27:14.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023538389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023570097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.156" endtime="20201112 12:27:14.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023538389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023570097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.448" endtime="20201112 12:27:14.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.457" endtime="20201112 12:27:14.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.153" endtime="20201112 12:27:14.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.151" endtime="20201112 12:27:14.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.463" level="INFO">${RESULT} = [{'time': 0.023570097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.170800000000182e-05, 'source_diff': 3.170800000000182e-05}, {'time': 0.023601222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:14.460" endtime="20201112 12:27:14.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.477" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:14.464" endtime="20201112 12:27:14.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.481" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.480" endtime="20201112 12:27:14.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.484" level="INFO">VALUE: [3.170800000000182e-05, 2.311100000000274e-05, 2.3083999999999605e-05, 2.215300000000045e-05, 2.5041999999999426e-05, 2.4096999999997232e-05, 2.215300000000045e-05, 2.4971999999998107e-05, 2.3070000000000035e-05, 2.4026999999999382e-05, 2.0249999999999435e-05, 2.312499999999884e-05, 2.2112000000001214e-05, 2.690299999999826e-05, 2.408300000000113e-05, 2.2152000000000976e-05, 2.4985999999997677e-05, 2.022299999999977e-05, 2.6985999999999677e-05, 2.4070000000001035e-05, 2.0250000000002905e-05, 2.5943999999999967e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2.112500000000031e-05, 2.018099999999759e-05, 2.0235999999999865e-05, 2.4042000000001895e-05, 2.026299999999953e-05, 2.6028000000000856e-05, 2.6806000000000746e-05, 2.118099999999859e-05, 2.313899999999841e-05, 2.1236000000000865e-05, 2.116699999999902e-05, 2.308300000000013e-05, 2.213899999999741e-05, 2.4056000000001465e-05, 2.315299999999798e-05, 2.6958000000000537e-05, 2.119499999999816e-05, 2.5000000000000716e-05, 2.1222000000001295e-05, 2.5986000000002146e-05, 2.2137999999997937e-05, 2.4027999999998856e-05, 2.2180000000000116e-05, 2.316699999999755e-05, 2.0235999999999865e-05, 2.1179999999999116e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.482" endtime="20201112 12:27:14.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.478" endtime="20201112 12:27:14.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.487" endtime="20201112 12:27:14.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.490" endtime="20201112 12:27:14.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.489" endtime="20201112 12:27:14.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.486" endtime="20201112 12:27:14.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.116" endtime="20201112 12:27:14.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.116" endtime="20201112 12:27:14.511"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.520" endtime="20201112 12:27:14.542"></status>
</kw>
<msg timestamp="20201112 12:27:14.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.519" endtime="20201112 12:27:14.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.544" endtime="20201112 12:27:14.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.546" endtime="20201112 12:27:14.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.516" endtime="20201112 12:27:14.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.514" endtime="20201112 12:27:14.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.555" endtime="20201112 12:27:14.841"></status>
</kw>
<msg timestamp="20201112 12:27:14.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024305764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024339347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.554" endtime="20201112 12:27:14.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024305764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024339347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.846" endtime="20201112 12:27:14.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.854" endtime="20201112 12:27:14.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.551" endtime="20201112 12:27:14.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.549" endtime="20201112 12:27:14.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.861" level="INFO">${RESULT} = [{'time': 0.024339347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3583000000000224e-05, 'source_diff': 3.3583000000000224e-05}, {'time': 0.024369444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:14.857" endtime="20201112 12:27:14.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.874" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:14.861" endtime="20201112 12:27:14.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.878" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.877" endtime="20201112 12:27:14.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.881" level="INFO">VALUE: [3.3583000000000224e-05, 2.406900000000156e-05, 2.406900000000156e-05, 2.5014000000000286e-05, 2.5014000000000286e-05, 2.5957999999999537e-05, 2.5056000000002465e-05, 2.0263999999999005e-05, 2.594499999999944e-05, 2.40970000000007e-05, 2.313899999999841e-05, 2.5027999999999856e-05, 2.5027999999999856e-05, 2.0236000000003335e-05, 2.3084000000003074e-05, 2.5957999999999537e-05, 2.6972000000000107e-05, 2.5999999999998247e-05, 2.2152000000000976e-05, 2.588900000000116e-05, 2.4098000000000175e-05, 2.5041999999999426e-05, 1.930500000000071e-05, 2.0249999999999435e-05, 2.5957999999999537e-05, 2.4054999999998522e-05, 2.6013000000001812e-05, 2.0208000000000725e-05, 2.031899999999781e-05, 2.0237000000002808e-05, 2.4013999999999286e-05, 2.5985999999998677e-05, 2.118100000000206e-05, 2.5040999999999952e-05, 2.4027999999998856e-05, 2.588899999999769e-05, 2.6972000000000107e-05, 2.113899999999988e-05, 2.312499999999884e-05, 2.506900000000256e-05, 2.0278000000002044e-05, 2.311099999999927e-05, 2.0235999999999865e-05, 2.215300000000045e-05, 2.408300000000113e-05, 2.0208000000000725e-05, 2.5000000000000716e-05, 2.311099999999927e-05, 2.6000000000001716e-05, 2.0222000000000295e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.879" endtime="20201112 12:27:14.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.875" endtime="20201112 12:27:14.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.884" endtime="20201112 12:27:14.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.888" endtime="20201112 12:27:14.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.886" endtime="20201112 12:27:14.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.883" endtime="20201112 12:27:14.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.512" endtime="20201112 12:27:14.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.512" endtime="20201112 12:27:14.909"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.918" endtime="20201112 12:27:14.939"></status>
</kw>
<msg timestamp="20201112 12:27:14.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.916" endtime="20201112 12:27:14.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.940" endtime="20201112 12:27:14.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.943" endtime="20201112 12:27:14.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.913" endtime="20201112 12:27:14.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.911" endtime="20201112 12:27:14.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.952" endtime="20201112 12:27:15.238"></status>
</kw>
<msg timestamp="20201112 12:27:15.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023832264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023856347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.950" endtime="20201112 12:27:15.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023832264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023856347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.242" endtime="20201112 12:27:15.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.250" endtime="20201112 12:27:15.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.948" endtime="20201112 12:27:15.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.946" endtime="20201112 12:27:15.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.257" level="INFO">${RESULT} = [{'time': 0.023856347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.408300000000113e-05, 'source_diff': 2.408300000000113e-05}, {'time': 0.023887139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:15.254" endtime="20201112 12:27:15.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.270" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:15.258" endtime="20201112 12:27:15.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.275" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.274" endtime="20201112 12:27:15.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.277" level="INFO">VALUE: [2.408300000000113e-05, 2.215300000000045e-05, 2.1236000000000865e-05, 2.219499999999916e-05, 2.1166000000003016e-05, 2.2152000000000976e-05, 2.693100000000087e-05, 2.5056000000002465e-05, 2.2208000000002726e-05, 2.0236000000003335e-05, 2.4084000000000605e-05, 2.308300000000013e-05, 2.5000000000000716e-05, 2.313899999999841e-05, 2.1194000000002156e-05, 2.1221999999997826e-05, 2.5014000000000286e-05, 2.30969999999997e-05, 2.0292000000001614e-05, 2.2166000000000546e-05, 2.1165999999999546e-05, 2.0235999999999865e-05, 2.3207999999996787e-05, 2.5041999999999426e-05, 2.594500000000291e-05, 2.697300000000305e-05, 2.406900000000156e-05, 2.6027999999997387e-05, 2.1222000000001295e-05, 2.30969999999997e-05, 2.5957999999999537e-05, 2.1179999999999116e-05, 2.218099999999959e-05, 2.697299999999958e-05, 2.1193999999998686e-05, 2.598700000000162e-05, 2.5972000000002576e-05, 2.5027999999999856e-05, 2.116699999999902e-05, 2.4056000000001465e-05, 2.218099999999959e-05, 2.213899999999741e-05, 2.412499999999984e-05, 2.312499999999884e-05, 2.4986000000001146e-05, 2.0235999999999865e-05, 2.6915999999998358e-05, 2.311100000000274e-05, 2.215300000000045e-05, 2.0221999999996826e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.276" endtime="20201112 12:27:15.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.271" endtime="20201112 12:27:15.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.281" endtime="20201112 12:27:15.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.285" endtime="20201112 12:27:15.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.283" endtime="20201112 12:27:15.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.279" endtime="20201112 12:27:15.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.910" endtime="20201112 12:27:15.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.909" endtime="20201112 12:27:15.306"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.314" endtime="20201112 12:27:15.335"></status>
</kw>
<msg timestamp="20201112 12:27:15.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.313" endtime="20201112 12:27:15.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.337" endtime="20201112 12:27:15.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.339" endtime="20201112 12:27:15.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.310" endtime="20201112 12:27:15.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.308" endtime="20201112 12:27:15.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.348" endtime="20201112 12:27:15.635"></status>
</kw>
<msg timestamp="20201112 12:27:15.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024038542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024076042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.347" endtime="20201112 12:27:15.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024038542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024076042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.640" endtime="20201112 12:27:15.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.648" endtime="20201112 12:27:15.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.344" endtime="20201112 12:27:15.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.343" endtime="20201112 12:27:15.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.655" level="INFO">${RESULT} = [{'time': 0.024076042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.749999999999934e-05, 'source_diff': 3.749999999999934e-05}, {'time': 0.024106361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:15.651" endtime="20201112 12:27:15.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.668" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:15.656" endtime="20201112 12:27:15.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.672" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.671" endtime="20201112 12:27:15.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.675" level="INFO">VALUE: [3.749999999999934e-05, 2.0222000000000295e-05, 2.122300000000077e-05, 2.408300000000113e-05, 2.40970000000007e-05, 2.595899999999901e-05, 2.211100000000174e-05, 2.1165999999999546e-05, 2.3026999999998382e-05, 2.4056000000001465e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.1151999999999976e-05, 2.122300000000077e-05, 2.0264000000002474e-05, 2.5068999999999092e-05, 2.5985999999998677e-05, 2.594500000000291e-05, 2.115299999999945e-05, 2.312499999999884e-05, 2.2180000000000116e-05, 2.4054999999998522e-05, 2.498700000000062e-05, 2.218099999999959e-05, 2.218099999999959e-05, 1.9207999999999725e-05, 2.405500000000199e-05, 2.215300000000045e-05, 2.0249999999999435e-05, 2.4986000000001146e-05, 2.312499999999884e-05, 2.590300000000073e-05, 2.212500000000131e-05, 2.1222000000001295e-05, 2.6000000000001716e-05, 2.308300000000013e-05, 2.5000000000000716e-05, 2.216700000000002e-05, 2.211100000000174e-05, 2.5943999999999967e-05, 2.0250000000002905e-05, 2.2193999999999686e-05, 2.3041999999997426e-05, 2.506900000000256e-05, 2.1193999999998686e-05, 2.5943999999999967e-05, 2.312499999999884e-05, 2.5957999999999537e-05, 2.120899999999773e-05, 2.5014000000000286e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.673" endtime="20201112 12:27:15.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.669" endtime="20201112 12:27:15.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.678" endtime="20201112 12:27:15.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.682" endtime="20201112 12:27:15.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.680" endtime="20201112 12:27:15.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.677" endtime="20201112 12:27:15.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.306" endtime="20201112 12:27:15.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.306" endtime="20201112 12:27:15.703"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.711" endtime="20201112 12:27:15.733"></status>
</kw>
<msg timestamp="20201112 12:27:15.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.710" endtime="20201112 12:27:15.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.735" endtime="20201112 12:27:15.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.737" endtime="20201112 12:27:15.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.707" endtime="20201112 12:27:15.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.705" endtime="20201112 12:27:15.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.746" endtime="20201112 12:27:16.034"></status>
</kw>
<msg timestamp="20201112 12:27:16.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023748708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023776653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.745" endtime="20201112 12:27:16.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023748708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023776653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.038" endtime="20201112 12:27:16.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.046" endtime="20201112 12:27:16.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.742" endtime="20201112 12:27:16.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.740" endtime="20201112 12:27:16.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.053" level="INFO">${RESULT} = [{'time': 0.023776653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.794499999999797e-05, 'source_diff': 2.794499999999797e-05}, {'time': 0.023806417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:16.050" endtime="20201112 12:27:16.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.066" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:16.054" endtime="20201112 12:27:16.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.071" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.070" endtime="20201112 12:27:16.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.073" level="INFO">VALUE: [2.794499999999797e-05, 1.9264000000001474e-05, 2.2235999999998396e-05, 2.116700000000249e-05, 2.3042000000000895e-05, 2.2152000000000976e-05, 2.211100000000174e-05, 2.1179999999999116e-05, 2.6013000000001812e-05, 2.312500000000231e-05, 2.118100000000206e-05, 2.5041999999999426e-05, 1.930500000000071e-05, 2.215300000000045e-05, 2.311099999999927e-05, 2.5000000000000716e-05, 2.6000000000001716e-05, 2.595899999999901e-05, 2.5000000000000716e-05, 2.6055999999999996e-05, 2.218099999999959e-05, 2.5986000000002146e-05, 2.595899999999901e-05, 2.30969999999997e-05, 2.5986000000002146e-05, 2.311100000000274e-05, 2.5042000000002895e-05, 2.4070000000001035e-05, 2.5054999999999522e-05, 2.5054999999999522e-05, 2.2193999999999686e-05, 2.0235999999999865e-05, 2.119499999999816e-05, 2.5014000000000286e-05, 2.3098000000002644e-05, 2.313899999999841e-05, 2.40970000000007e-05, 2.6055999999999996e-05, 2.311099999999927e-05, 2.5042000000002895e-05, 2.313899999999841e-05, 2.0222000000000295e-05, 2.5930000000000397e-05, 2.5957999999999537e-05, 2.0277999999998575e-05, 2.5041999999999426e-05, 2.5041999999999426e-05, 2.02769999999991e-05, 2.406900000000156e-05, 2.5957999999999537e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.072" endtime="20201112 12:27:16.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.067" endtime="20201112 12:27:16.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.077" endtime="20201112 12:27:16.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.080" endtime="20201112 12:27:16.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.079" endtime="20201112 12:27:16.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.075" endtime="20201112 12:27:16.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.704" endtime="20201112 12:27:16.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.703" endtime="20201112 12:27:16.101"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.110" endtime="20201112 12:27:16.129"></status>
</kw>
<msg timestamp="20201112 12:27:16.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.108" endtime="20201112 12:27:16.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.130" endtime="20201112 12:27:16.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.133" endtime="20201112 12:27:16.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.106" endtime="20201112 12:27:16.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.104" endtime="20201112 12:27:16.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.142" endtime="20201112 12:27:16.430"></status>
</kw>
<msg timestamp="20201112 12:27:16.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.140" endtime="20201112 12:27:16.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.434" endtime="20201112 12:27:16.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.443" endtime="20201112 12:27:16.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.138" endtime="20201112 12:27:16.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.136" endtime="20201112 12:27:16.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.449" level="INFO">${RESULT} = [{'time': 0.022164222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5943999999999967e-05, 'source_diff': 2.5943999999999967e-05}, {'time': 0.022194972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:16.446" endtime="20201112 12:27:16.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.463" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:16.450" endtime="20201112 12:27:16.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.467" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.466" endtime="20201112 12:27:16.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.470" level="INFO">VALUE: [2.5943999999999967e-05, 2.212500000000131e-05, 2.0264000000002474e-05, 2.6027999999997387e-05, 2.5971999999999107e-05, 2.12229999999973e-05, 2.311099999999927e-05, 2.215300000000045e-05, 2.30969999999997e-05, 2.408300000000113e-05, 2.5902000000001257e-05, 2.1207999999998256e-05, 2.5027999999999856e-05, 2.511100000000127e-05, 2.313899999999841e-05, 2.402700000000285e-05, 2.4012999999999812e-05, 2.2138000000001407e-05, 2.6000000000001716e-05, 2.408300000000113e-05, 2.1264000000000005e-05, 2.308300000000013e-05, 2.4041999999998426e-05, 2.0249999999999435e-05, 2.6027999999997387e-05, 2.40970000000007e-05, 2.5096999999998232e-05, 2.212500000000131e-05, 2.594499999999944e-05, 2.5971999999999107e-05, 2.4070000000001035e-05, 2.318100000000059e-05, 2.0207999999997256e-05, 2.122300000000077e-05, 2.119499999999816e-05, 2.215300000000045e-05, 2.5957999999999537e-05, 2.019500000000063e-05, 2.312499999999884e-05, 2.2152000000000976e-05, 2.308300000000013e-05, 2.213900000000088e-05, 2.311099999999927e-05, 2.5014000000000286e-05, 2.690300000000173e-05, 2.0249999999999435e-05, 2.6972000000000107e-05, 2.215300000000045e-05, 2.2180000000000116e-05, 2.5971999999999107e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.468" endtime="20201112 12:27:16.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.464" endtime="20201112 12:27:16.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.473" endtime="20201112 12:27:16.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.477" endtime="20201112 12:27:16.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.475" endtime="20201112 12:27:16.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.472" endtime="20201112 12:27:16.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.102" endtime="20201112 12:27:16.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.101" endtime="20201112 12:27:16.498"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.506" endtime="20201112 12:27:16.527"></status>
</kw>
<msg timestamp="20201112 12:27:16.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.505" endtime="20201112 12:27:16.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.528" endtime="20201112 12:27:16.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.531" endtime="20201112 12:27:16.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.502" endtime="20201112 12:27:16.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.500" endtime="20201112 12:27:16.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.540" endtime="20201112 12:27:16.825"></status>
</kw>
<msg timestamp="20201112 12:27:16.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022566972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.538" endtime="20201112 12:27:16.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022566972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.829" endtime="20201112 12:27:16.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.838" endtime="20201112 12:27:16.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.535" endtime="20201112 12:27:16.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.534" endtime="20201112 12:27:16.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.844" level="INFO">${RESULT} = [{'time': 0.022566972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3528000000002233e-05, 'source_diff': 1.3528000000002233e-05}, {'time': 0.022597292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:16.841" endtime="20201112 12:27:16.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.858" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:16.845" endtime="20201112 12:27:16.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.862" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.861" endtime="20201112 12:27:16.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.865" level="INFO">VALUE: [1.3528000000002233e-05, 2.594500000000291e-05, 2.30969999999997e-05, 2.2236000000001865e-05, 2.1208000000001725e-05, 2.593099999999987e-05, 2.4056000000001465e-05, 2.6000000000001716e-05, 2.4068999999998092e-05, 2.0208000000000725e-05, 2.411100000000027e-05, 2.0250000000002905e-05, 2.0235999999999865e-05, 2.6000000000001716e-05, 2.5084000000001605e-05, 2.40970000000007e-05, 2.5957999999999537e-05, 2.4027999999998856e-05, 2.5999999999998247e-05, 2.5068999999999092e-05, 2.595899999999901e-05, 2.118100000000206e-05, 2.4070000000001035e-05, 2.5070000000002035e-05, 2.216700000000002e-05, 2.593099999999987e-05, 2.5957999999999537e-05, 2.4027999999998856e-05, 2.5943999999999967e-05, 2.506900000000256e-05, 2.306900000000056e-05, 2.4986000000001146e-05, 2.5027999999999856e-05, 2.5999999999998247e-05, 2.0208000000000725e-05, 2.116699999999902e-05, 2.12090000000012e-05, 2.0277999999998575e-05, 2.4986000000001146e-05, 2.395900000000048e-05, 2.213900000000088e-05, 2.5040999999999952e-05, 2.1193999999998686e-05, 2.4041999999998426e-05, 2.3097999999999175e-05, 2.12770000000001e-05, 2.219499999999916e-05, 2.4972000000001576e-05, 2.1194000000002156e-05, 2.5957999999999537e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.863" endtime="20201112 12:27:16.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.859" endtime="20201112 12:27:16.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.868" endtime="20201112 12:27:16.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.872" endtime="20201112 12:27:16.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.870" endtime="20201112 12:27:16.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.867" endtime="20201112 12:27:16.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.499" endtime="20201112 12:27:16.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.498" endtime="20201112 12:27:16.893"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.901" endtime="20201112 12:27:16.925"></status>
</kw>
<msg timestamp="20201112 12:27:16.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.900" endtime="20201112 12:27:16.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.927" endtime="20201112 12:27:16.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.929" endtime="20201112 12:27:16.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.897" endtime="20201112 12:27:16.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.895" endtime="20201112 12:27:16.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.938" endtime="20201112 12:27:17.224"></status>
</kw>
<msg timestamp="20201112 12:27:17.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024329139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024342681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.937" endtime="20201112 12:27:17.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024329139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024342681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.228" endtime="20201112 12:27:17.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.236" endtime="20201112 12:27:17.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.934" endtime="20201112 12:27:17.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.932" endtime="20201112 12:27:17.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.243" level="INFO">${RESULT} = [{'time': 0.024342681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3542000000001803e-05, 'source_diff': 1.3542000000001803e-05}, {'time': 0.024373486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:17.240" endtime="20201112 12:27:17.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.256" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:17.244" endtime="20201112 12:27:17.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.261" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.260" endtime="20201112 12:27:17.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.263" level="INFO">VALUE: [1.3542000000001803e-05, 2.5027999999999856e-05, 2.5985999999998677e-05, 2.408300000000113e-05, 2.6014000000001286e-05, 2.1193999999998686e-05, 2.4055999999997996e-05, 2.0249999999999435e-05, 2.1264000000000005e-05, 2.6014000000001286e-05, 2.5054999999999522e-05, 2.408300000000113e-05, 2.213900000000088e-05, 2.2151999999997507e-05, 2.4098000000000175e-05, 2.1236000000000865e-05, 2.0235999999999865e-05, 2.5014000000000286e-05, 2.4041999999998426e-05, 2.0208000000000725e-05, 2.311100000000274e-05, 2.6000000000001716e-05, 2.59170000000003e-05, 2.211099999999827e-05, 2.4013999999999286e-05, 2.4055999999997996e-05, 2.6013999999997817e-05, 2.1193999999998686e-05, 2.306900000000056e-05, 2.116699999999902e-05, 2.5096999999998232e-05, 2.511100000000127e-05, 2.1193999999998686e-05, 2.4082999999997662e-05, 2.118099999999859e-05, 2.5972000000002576e-05, 2.30969999999997e-05, 2.02090000000002e-05, 2.5957999999999537e-05, 2.1180000000002586e-05, 2.122300000000077e-05, 2.5985999999998677e-05, 2.0263999999999005e-05, 2.5985999999998677e-05, 2.02090000000002e-05, 2.597300000000205e-05, 2.1250000000000435e-05, 2.023699999999934e-05, 2.1194000000002156e-05, 2.2111999999997745e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.262" endtime="20201112 12:27:17.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.257" endtime="20201112 12:27:17.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.267" endtime="20201112 12:27:17.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.270" endtime="20201112 12:27:17.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.269" endtime="20201112 12:27:17.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.265" endtime="20201112 12:27:17.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.894" endtime="20201112 12:27:17.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.893" endtime="20201112 12:27:17.291"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.300" endtime="20201112 12:27:17.320"></status>
</kw>
<msg timestamp="20201112 12:27:17.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.298" endtime="20201112 12:27:17.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.321" endtime="20201112 12:27:17.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.324" endtime="20201112 12:27:17.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.296" endtime="20201112 12:27:17.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.294" endtime="20201112 12:27:17.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.333" endtime="20201112 12:27:17.620"></status>
</kw>
<msg timestamp="20201112 12:27:17.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.331" endtime="20201112 12:27:17.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.624" endtime="20201112 12:27:17.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.632" endtime="20201112 12:27:17.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.329" endtime="20201112 12:27:17.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.327" endtime="20201112 12:27:17.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.639" level="INFO">${RESULT} = [{'time': 0.022761222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7861000000000552e-05, 'source_diff': 2.7861000000000552e-05}, {'time': 0.022792069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:17.636" endtime="20201112 12:27:17.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.652" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:17.640" endtime="20201112 12:27:17.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.657" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.656" endtime="20201112 12:27:17.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.659" level="INFO">VALUE: [2.7861000000000552e-05, 2.2194000000003156e-05, 2.6042000000000426e-05, 2.4986000000001146e-05, 2.5000000000000716e-05, 2.018100000000106e-05, 2.5985999999998677e-05, 2.497300000000105e-05, 2.5985999999998677e-05, 2.0249999999999435e-05, 2.5000000000000716e-05, 2.4042000000001895e-05, 2.4068999999998092e-05, 2.211099999999827e-05, 2.315299999999798e-05, 2.118099999999859e-05, 2.213900000000088e-05, 2.313899999999841e-05, 2.122300000000077e-05, 2.0208000000000725e-05, 2.59170000000003e-05, 2.688900000000216e-05, 2.5957999999999537e-05, 2.120899999999773e-05, 2.311099999999927e-05, 2.305500000000099e-05, 2.212500000000131e-05, 2.023699999999934e-05, 2.4056000000001465e-05, 2.1138000000000406e-05, 2.212500000000131e-05, 2.30969999999997e-05, 2.4055999999997996e-05, 2.5957999999999537e-05, 2.0250000000002905e-05, 2.1235999999997396e-05, 2.212500000000131e-05, 2.0277999999998575e-05, 2.597300000000205e-05, 2.4041999999998426e-05, 2.694500000000044e-05, 2.313900000000188e-05, 2.215300000000045e-05, 2.3056000000000465e-05, 2.215300000000045e-05, 2.2152000000000976e-05, 2.595900000000248e-05, 2.113899999999988e-05, 2.4027999999998856e-05, 2.4082999999997662e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.658" endtime="20201112 12:27:17.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.653" endtime="20201112 12:27:17.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.663" endtime="20201112 12:27:17.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.666" endtime="20201112 12:27:17.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.665" endtime="20201112 12:27:17.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.661" endtime="20201112 12:27:17.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.292" endtime="20201112 12:27:17.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.292" endtime="20201112 12:27:17.687"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.696" endtime="20201112 12:27:17.716"></status>
</kw>
<msg timestamp="20201112 12:27:17.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.694" endtime="20201112 12:27:17.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.718" endtime="20201112 12:27:17.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.720" endtime="20201112 12:27:17.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.692" endtime="20201112 12:27:17.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.690" endtime="20201112 12:27:17.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.729" endtime="20201112 12:27:18.015"></status>
</kw>
<msg timestamp="20201112 12:27:18.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023601167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023621389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.728" endtime="20201112 12:27:18.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023601167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023621389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.019" endtime="20201112 12:27:18.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.027" endtime="20201112 12:27:18.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.725" endtime="20201112 12:27:18.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.724" endtime="20201112 12:27:18.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.034" level="INFO">${RESULT} = [{'time': 0.023621389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0222000000000295e-05, 'source_diff': 2.0222000000000295e-05}, {'time': 0.023651847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:18.031" endtime="20201112 12:27:18.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.048" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:18.035" endtime="20201112 12:27:18.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.052" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.051" endtime="20201112 12:27:18.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.055" level="INFO">VALUE: [2.0222000000000295e-05, 2.5040999999999952e-05, 2.311099999999927e-05, 2.312499999999884e-05, 2.1193999999998686e-05, 1.9264000000001474e-05, 2.4027999999998856e-05, 2.40970000000007e-05, 2.308300000000013e-05, 2.5986000000002146e-05, 2.312499999999884e-05, 2.0263999999999005e-05, 2.1193999999998686e-05, 2.691699999999783e-05, 2.0207999999997256e-05, 2.313900000000188e-05, 2.0249999999999435e-05, 2.408300000000113e-05, 2.1235999999997396e-05, 2.2055999999999465e-05, 2.211099999999827e-05, 2.5985999999998677e-05, 2.4084000000000605e-05, 2.5027999999999856e-05, 2.311099999999927e-05, 2.5054999999999522e-05, 2.6027000000001382e-05, 2.5957999999999537e-05, 2.6929999999997928e-05, 2.5041999999999426e-05, 2.5943999999999967e-05, 2.40970000000007e-05, 2.5056000000002465e-05, 2.4056000000001465e-05, 2.319500000000016e-05, 2.218099999999959e-05, 2.026299999999953e-05, 2.0207999999997256e-05, 2.6028000000000856e-05, 2.4985999999997677e-05, 2.218099999999959e-05, 2.5957999999999537e-05, 2.5000000000000716e-05, 2.6014000000001286e-05, 2.2193999999999686e-05, 2.5054999999999522e-05, 2.218099999999959e-05, 2.4056000000001465e-05, 2.1208000000001725e-05, 2.0291999999998145e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.053" endtime="20201112 12:27:18.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.048" endtime="20201112 12:27:18.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.058" endtime="20201112 12:27:18.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.062" endtime="20201112 12:27:18.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.060" endtime="20201112 12:27:18.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.057" endtime="20201112 12:27:18.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.688" endtime="20201112 12:27:18.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.688" endtime="20201112 12:27:18.082"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.091" endtime="20201112 12:27:18.110"></status>
</kw>
<msg timestamp="20201112 12:27:18.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.090" endtime="20201112 12:27:18.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.112" endtime="20201112 12:27:18.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.114" endtime="20201112 12:27:18.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.087" endtime="20201112 12:27:18.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.085" endtime="20201112 12:27:18.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.123" endtime="20201112 12:27:18.410"></status>
</kw>
<msg timestamp="20201112 12:27:18.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020332167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.122" endtime="20201112 12:27:18.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020332167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.415" endtime="20201112 12:27:18.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.423" endtime="20201112 12:27:18.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.119" endtime="20201112 12:27:18.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.117" endtime="20201112 12:27:18.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.429" level="INFO">${RESULT} = [{'time': 0.020392542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.037499999999793e-05, 'source_diff': 6.037499999999793e-05}, {'time': 0.020453417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:18.426" endtime="20201112 12:27:18.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.443" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:18.430" endtime="20201112 12:27:18.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.447" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.446" endtime="20201112 12:27:18.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.450" level="INFO">VALUE: [6.037499999999793e-05, 5.661100000000155e-05, 5.280599999999899e-05, 5.279199999999942e-05, 5.273600000000114e-05, 5.181899999999809e-05, 5.180599999999799e-05, 5.561200000000002e-05, 5.662499999999765e-05, 5.088899999999841e-05, 5.179199999999842e-05, 5.184800000000017e-05, 5.082000000000003e-05, 5.463899999999869e-05, 5.456900000000084e-05, 5.5651999999999785e-05, 5.566699999999883e-05, 5.662500000000112e-05, 5.463899999999869e-05, 5.2693999999998964e-05, 5.663900000000069e-05, 5.566699999999883e-05, 5.466699999999783e-05, 5.463899999999869e-05, 5.661099999999808e-05, 5.183299999999766e-05, 5.558300000000141e-05, 5.5665999999999355e-05, 5.470900000000001e-05, 5.4749999999999244e-05, 5.661099999999808e-05, 5.6541999999999704e-05, 5.180600000000146e-05, 5.662500000000112e-05, 5.279199999999942e-05, 5.6500000000000994e-05, 5.563900000000316e-05, 5.661100000000155e-05, 5.081900000000056e-05, 5.562500000000012e-05, 5.5666000000002824e-05, 5.273600000000114e-05, 5.375000000000171e-05, 5.558300000000141e-05, 5.563899999999969e-05, 5.558399999999741e-05, 5.563900000000316e-05, 5.4735999999999674e-05, 5.661200000000102e-05, 5.270900000000148e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.448" endtime="20201112 12:27:18.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.444" endtime="20201112 12:27:18.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.453" endtime="20201112 12:27:18.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.457" endtime="20201112 12:27:18.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.455" endtime="20201112 12:27:18.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.452" endtime="20201112 12:27:18.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.083" endtime="20201112 12:27:18.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.083" endtime="20201112 12:27:18.478"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.487" endtime="20201112 12:27:18.507"></status>
</kw>
<msg timestamp="20201112 12:27:18.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.485" endtime="20201112 12:27:18.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.508" endtime="20201112 12:27:18.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.511" endtime="20201112 12:27:18.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.482" endtime="20201112 12:27:18.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.480" endtime="20201112 12:27:18.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.520" endtime="20201112 12:27:18.805"></status>
</kw>
<msg timestamp="20201112 12:27:18.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.518" endtime="20201112 12:27:18.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.809" endtime="20201112 12:27:18.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.817" endtime="20201112 12:27:18.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.516" endtime="20201112 12:27:18.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.514" endtime="20201112 12:27:18.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.825" level="INFO">${RESULT} = [{'time': 0.021894347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5153000000002635e-05, 'source_diff': 4.5153000000002635e-05}, {'time': 0.021954917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:18.821" endtime="20201112 12:27:18.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.838" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:18.826" endtime="20201112 12:27:18.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.843" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.842" endtime="20201112 12:27:18.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.845" level="INFO">VALUE: [4.5153000000002635e-05, 5.559800000000045e-05, 5.6541999999999704e-05, 5.4708000000000534e-05, 5.365300000000073e-05, 5.187499999999984e-05, 5.6514000000000564e-05, 5.555600000000174e-05, 5.4735999999999674e-05, 5.361099999999855e-05, 5.5665999999999355e-05, 5.559700000000098e-05, 5.368099999999987e-05, 5.6707999999999065e-05, 5.556899999999837e-05, 5.186100000000027e-05, 5.462499999999912e-05, 5.5665999999999355e-05, 5.079200000000089e-05, 5.181899999999809e-05, 5.7499999999998525e-05, 4.993099999999959e-05, 5.365300000000073e-05, 5.18340000000006e-05, 5.076400000000175e-05, 5.26669999999993e-05, 5.665300000000026e-05, 5.559700000000098e-05, 5.662500000000112e-05, 5.079199999999742e-05, 5.181900000000156e-05, 5.459699999999998e-05, 5.18470000000007e-05, 5.461099999999955e-05, 5.46670000000013e-05, 5.266700000000277e-05, 5.555600000000174e-05, 5.666699999999983e-05, 5.55549999999988e-05, 5.379099999999748e-05, 5.36670000000003e-05, 5.469500000000044e-05, 5.36670000000003e-05, 5.280599999999899e-05, 5.263900000000016e-05, 5.281899999999909e-05, 5.2708000000002e-05, 5.566699999999883e-05, 5.363899999999769e-05, 5.4694000000000964e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.844" endtime="20201112 12:27:18.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.839" endtime="20201112 12:27:18.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.849" endtime="20201112 12:27:18.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.852" endtime="20201112 12:27:18.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.851" endtime="20201112 12:27:18.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.847" endtime="20201112 12:27:18.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.479" endtime="20201112 12:27:18.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.478" endtime="20201112 12:27:18.873"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.882" endtime="20201112 12:27:18.908"></status>
</kw>
<msg timestamp="20201112 12:27:18.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.880" endtime="20201112 12:27:18.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.909" endtime="20201112 12:27:18.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.912" endtime="20201112 12:27:18.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.878" endtime="20201112 12:27:18.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.876" endtime="20201112 12:27:18.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.921" endtime="20201112 12:27:19.210"></status>
</kw>
<msg timestamp="20201112 12:27:19.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023229875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.919" endtime="20201112 12:27:19.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023229875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.214" endtime="20201112 12:27:19.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.222" endtime="20201112 12:27:19.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.917" endtime="20201112 12:27:19.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.915" endtime="20201112 12:27:19.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.229" level="INFO">${RESULT} = [{'time': 0.023273028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3153000000000635e-05, 'source_diff': 4.3153000000000635e-05}, {'time': 0.023334194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:19.225" endtime="20201112 12:27:19.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.242" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:19.230" endtime="20201112 12:27:19.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.246" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.245" endtime="20201112 12:27:19.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.249" level="INFO">VALUE: [4.3153000000000635e-05, 5.4735999999999674e-05, 5.4735999999999674e-05, 5.173600000000014e-05, 5.469500000000044e-05, 5.6500000000000994e-05, 5.3749999999998244e-05, 5.186199999999974e-05, 5.663899999999722e-05, 5.083300000000013e-05, 5.665299999999679e-05, 5.458300000000041e-05, 5.183399999999713e-05, 5.4735999999999674e-05, 5.5541999999998704e-05, 5.662499999999765e-05, 5.5680000000002394e-05, 5.176399999999928e-05, 5.3763999999997814e-05, 5.088899999999841e-05, 5.6514000000000564e-05, 5.184800000000017e-05, 5.56809999999984e-05, 5.272200000000157e-05, 5.376400000000128e-05, 5.184699999999723e-05, 5.662499999999765e-05, 5.455500000000127e-05, 4.995899999999873e-05, 5.744499999999972e-05, 5.655600000000274e-05, 5.5665999999999355e-05, 5.458300000000041e-05, 5.665300000000026e-05, 5.5541999999998704e-05, 5.088900000000188e-05, 5.281899999999909e-05, 5.365300000000073e-05, 5.277799999999985e-05, 5.461099999999955e-05, 5.665300000000026e-05, 5.172300000000005e-05, 5.4749999999999244e-05, 5.279099999999995e-05, 5.176399999999928e-05, 5.375000000000171e-05, 5.076399999999828e-05, 5.758299999999994e-05, 5.1708000000001e-05, 5.077699999999838e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.247" endtime="20201112 12:27:19.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.243" endtime="20201112 12:27:19.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.252" endtime="20201112 12:27:19.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.256" endtime="20201112 12:27:19.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.254" endtime="20201112 12:27:19.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.251" endtime="20201112 12:27:19.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.874" endtime="20201112 12:27:19.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.874" endtime="20201112 12:27:19.277"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.285" endtime="20201112 12:27:19.305"></status>
</kw>
<msg timestamp="20201112 12:27:19.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.284" endtime="20201112 12:27:19.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.307" endtime="20201112 12:27:19.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.309" endtime="20201112 12:27:19.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.281" endtime="20201112 12:27:19.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.279" endtime="20201112 12:27:19.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.318" endtime="20201112 12:27:19.605"></status>
</kw>
<msg timestamp="20201112 12:27:19.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021690889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.316" endtime="20201112 12:27:19.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021690889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.609" endtime="20201112 12:27:19.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.617" endtime="20201112 12:27:19.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.314" endtime="20201112 12:27:19.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.312" endtime="20201112 12:27:19.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.624" level="INFO">${RESULT} = [{'time': 0.021690889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.130600000000137e-05, 'source_diff': 4.130600000000137e-05}, {'time': 0.021752347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:19.620" endtime="20201112 12:27:19.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.637" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:19.625" endtime="20201112 12:27:19.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.642" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.641" endtime="20201112 12:27:19.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.644" level="INFO">VALUE: [4.130600000000137e-05, 5.459699999999998e-05, 5.658299999999894e-05, 5.555500000000227e-05, 5.659700000000198e-05, 5.079199999999742e-05, 5.659700000000198e-05, 5.081900000000056e-05, 5.659799999999798e-05, 5.356899999999984e-05, 5.569500000000144e-05, 5.082000000000003e-05, 5.086099999999927e-05, 5.36670000000003e-05, 5.377800000000085e-05, 5.177699999999938e-05, 5.556899999999837e-05, 5.558300000000141e-05, 5.3680000000000394e-05, 5.462499999999912e-05, 5.074999999999871e-05, 5.565300000000273e-05, 5.176400000000275e-05, 5.082000000000003e-05, 5.7499999999998525e-05, 5.086099999999927e-05, 5.6500000000000994e-05, 5.656899999999937e-05, 5.275000000000071e-05, 5.177799999999885e-05, 5.4637999999999215e-05, 5.272200000000157e-05, 5.2679999999999394e-05, 5.370899999999901e-05, 5.3749999999998244e-05, 5.4679999999997925e-05, 5.084800000000264e-05, 5.658299999999894e-05, 5.275000000000071e-05, 5.556899999999837e-05, 5.086199999999874e-05, 5.08469999999997e-05, 5.6555999999999274e-05, 5.086099999999927e-05, 5.273600000000114e-05, 5.375000000000171e-05, 5.080600000000046e-05, 5.273600000000114e-05, 5.275000000000071e-05, 5.086100000000274e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.643" endtime="20201112 12:27:19.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.638" endtime="20201112 12:27:19.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.648" endtime="20201112 12:27:19.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.651" endtime="20201112 12:27:19.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.650" endtime="20201112 12:27:19.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.646" endtime="20201112 12:27:19.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.278" endtime="20201112 12:27:19.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.277" endtime="20201112 12:27:19.672"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.681" endtime="20201112 12:27:19.702"></status>
</kw>
<msg timestamp="20201112 12:27:19.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.679" endtime="20201112 12:27:19.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.703" endtime="20201112 12:27:19.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.706" endtime="20201112 12:27:19.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.677" endtime="20201112 12:27:19.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.674" endtime="20201112 12:27:19.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.715" endtime="20201112 12:27:20.002"></status>
</kw>
<msg timestamp="20201112 12:27:20.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023419583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023466556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.713" endtime="20201112 12:27:20.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023419583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023466556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.007" endtime="20201112 12:27:20.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.015" endtime="20201112 12:27:20.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.711" endtime="20201112 12:27:20.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.709" endtime="20201112 12:27:20.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.022" level="INFO">${RESULT} = [{'time': 0.023466556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6972999999998766e-05, 'source_diff': 4.6972999999998766e-05}, {'time': 0.023527514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:20.018" endtime="20201112 12:27:20.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.035" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:20.023" endtime="20201112 12:27:20.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.039" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.038" endtime="20201112 12:27:20.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.042" level="INFO">VALUE: [4.6972999999998766e-05, 5.079200000000089e-05, 5.18470000000007e-05, 5.562500000000012e-05, 5.363900000000116e-05, 5.183299999999766e-05, 5.458300000000041e-05, 5.376400000000128e-05, 5.3637999999998215e-05, 5.569499999999797e-05, 5.173600000000014e-05, 5.377800000000085e-05, 5.2707999999998534e-05, 5.662500000000112e-05, 5.6500000000000994e-05, 5.174999999999971e-05, 5.661199999999755e-05, 5.376300000000181e-05, 5.365300000000073e-05, 5.184699999999723e-05, 5.372200000000257e-05, 5.279099999999995e-05, 5.176399999999928e-05, 5.4708000000000534e-05, 5.55549999999988e-05, 5.279099999999995e-05, 5.6528000000000134e-05, 5.463900000000216e-05, 5.661099999999808e-05, 5.1707999999997534e-05, 5.182000000000103e-05, 5.461100000000302e-05, 5.662499999999765e-05, 5.2707999999998534e-05, 5.0901999999998504e-05, 5.280499999999952e-05, 5.176399999999928e-05, 5.55280000000026e-05, 5.662500000000112e-05, 5.272200000000157e-05, 5.377800000000085e-05, 5.080600000000046e-05, 5.568100000000187e-05, 5.070899999999948e-05, 5.662499999999765e-05, 5.376400000000128e-05, 5.459699999999998e-05, 5.6514000000000564e-05, 5.5665999999999355e-05, 5.279199999999942e-05]</msg>
<status status="PASS" starttime="20201112 12:27:20.041" endtime="20201112 12:27:20.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.036" endtime="20201112 12:27:20.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.046" endtime="20201112 12:27:20.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.049" endtime="20201112 12:27:20.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.047" endtime="20201112 12:27:20.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.044" endtime="20201112 12:27:20.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.673" endtime="20201112 12:27:20.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.672" endtime="20201112 12:27:20.070"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.079" endtime="20201112 12:27:20.100"></status>
</kw>
<msg timestamp="20201112 12:27:20.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.077" endtime="20201112 12:27:20.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.101" endtime="20201112 12:27:20.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.104" endtime="20201112 12:27:20.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.074" endtime="20201112 12:27:20.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.072" endtime="20201112 12:27:20.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.113" endtime="20201112 12:27:20.400"></status>
</kw>
<msg timestamp="20201112 12:27:20.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022377167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022434667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.111" endtime="20201112 12:27:20.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022377167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022434667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.404" endtime="20201112 12:27:20.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.412" endtime="20201112 12:27:20.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.109" endtime="20201112 12:27:20.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.107" endtime="20201112 12:27:20.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.419" level="INFO">${RESULT} = [{'time': 0.022434667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7499999999998525e-05, 'source_diff': 5.7499999999998525e-05}, {'time': 0.022495778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:20.416" endtime="20201112 12:27:20.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.432" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:20.420" endtime="20201112 12:27:20.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.437" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.436" endtime="20201112 12:27:20.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.439" level="INFO">VALUE: [5.7499999999998525e-05, 5.280600000000246e-05, 5.086099999999927e-05, 5.6555999999999274e-05, 5.376400000000128e-05, 5.465299999999826e-05, 5.463899999999869e-05, 5.18470000000007e-05, 5.465299999999826e-05, 5.174999999999971e-05, 5.661100000000155e-05, 5.180600000000146e-05, 5.177700000000285e-05, 5.4694000000000964e-05, 5.1708000000001e-05, 5.4722000000000104e-05, 5.463899999999869e-05, 5.5721999999997635e-05, 5.086099999999927e-05, 5.463899999999869e-05, 5.563899999999969e-05, 5.179199999999842e-05, 4.98330000000026e-05, 5.280600000000246e-05, 5.559700000000098e-05, 5.2707999999998534e-05, 5.562500000000012e-05, 5.273600000000114e-05, 5.086100000000274e-05, 5.176400000000275e-05, 5.4722000000000104e-05, 5.4665999999998355e-05, 5.273600000000114e-05, 5.180499999999852e-05, 5.558299999999794e-05, 5.087499999999884e-05, 5.5665999999999355e-05, 5.176399999999928e-05, 5.563900000000316e-05, 5.5527999999999134e-05, 5.3693999999999964e-05, 5.280599999999899e-05, 5.5665999999999355e-05, 5.558300000000141e-05, 5.181900000000156e-05, 5.3721999999999104e-05, 5.080600000000046e-05, 5.3735999999998674e-05, 5.558299999999794e-05, 5.3693999999999964e-05]</msg>
<status status="PASS" starttime="20201112 12:27:20.438" endtime="20201112 12:27:20.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.433" endtime="20201112 12:27:20.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.443" endtime="20201112 12:27:20.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.446" endtime="20201112 12:27:20.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.445" endtime="20201112 12:27:20.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.441" endtime="20201112 12:27:20.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.071" endtime="20201112 12:27:20.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.070" endtime="20201112 12:27:20.467"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.476" endtime="20201112 12:27:20.496"></status>
</kw>
<msg timestamp="20201112 12:27:20.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.475" endtime="20201112 12:27:20.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.498" endtime="20201112 12:27:20.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.500" endtime="20201112 12:27:20.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.472" endtime="20201112 12:27:20.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.470" endtime="20201112 12:27:20.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.509" endtime="20201112 12:27:20.795"></status>
</kw>
<msg timestamp="20201112 12:27:20.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.508" endtime="20201112 12:27:20.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.799" endtime="20201112 12:27:20.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.808" endtime="20201112 12:27:20.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.505" endtime="20201112 12:27:20.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.503" endtime="20201112 12:27:20.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.814" level="INFO">${RESULT} = [{'time': 0.021860944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.905500000000189e-05, 'source_diff': 6.905500000000189e-05}, {'time': 0.021921514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:20.811" endtime="20201112 12:27:20.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.827" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:20.815" endtime="20201112 12:27:20.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.832" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.831" endtime="20201112 12:27:20.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.834" level="INFO">VALUE: [6.905500000000189e-05, 5.173600000000014e-05, 5.191700000000202e-05, 5.455500000000127e-05, 5.277799999999985e-05, 5.554099999999923e-05, 5.182000000000103e-05, 5.3652000000001254e-05, 5.473699999999915e-05, 5.076400000000175e-05, 5.5665999999999355e-05, 5.370899999999901e-05, 5.087500000000231e-05, 5.459699999999998e-05, 5.375000000000171e-05, 5.2708000000002e-05, 5.558300000000141e-05, 5.084799999999917e-05, 5.269400000000243e-05, 5.562500000000012e-05, 5.184699999999723e-05, 5.563899999999969e-05, 5.363899999999769e-05, 5.3749999999998244e-05, 5.5555999999998273e-05, 5.4694000000000964e-05, 5.172200000000057e-05, 5.5513999999999564e-05, 5.661100000000155e-05, 5.659699999999851e-05, 5.55549999999988e-05, 5.56670000000023e-05, 5.359699999999898e-05, 5.661100000000155e-05, 5.36670000000003e-05, 5.280599999999899e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.08469999999997e-05, 5.459699999999998e-05, 5.088899999999841e-05, 5.6471999999998385e-05, 5.565300000000273e-05, 5.461099999999955e-05, 5.284800000000117e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.565299999999926e-05, 5.086099999999927e-05, 5.4679999999997925e-05]</msg>
<status status="PASS" starttime="20201112 12:27:20.833" endtime="20201112 12:27:20.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.828" endtime="20201112 12:27:20.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.838" endtime="20201112 12:27:20.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.841" endtime="20201112 12:27:20.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.840" endtime="20201112 12:27:20.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.836" endtime="20201112 12:27:20.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.468" endtime="20201112 12:27:20.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.468" endtime="20201112 12:27:20.863"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.871" endtime="20201112 12:27:20.893"></status>
</kw>
<msg timestamp="20201112 12:27:20.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.870" endtime="20201112 12:27:20.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.894" endtime="20201112 12:27:20.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.897" endtime="20201112 12:27:20.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.867" endtime="20201112 12:27:20.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.865" endtime="20201112 12:27:20.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.906" endtime="20201112 12:27:21.192"></status>
</kw>
<msg timestamp="20201112 12:27:21.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023626083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023667319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.904" endtime="20201112 12:27:21.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023626083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023667319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.196" endtime="20201112 12:27:21.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.204" endtime="20201112 12:27:21.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.902" endtime="20201112 12:27:21.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.900" endtime="20201112 12:27:21.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.211" level="INFO">${RESULT} = [{'time': 0.023667319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.123600000000005e-05, 'source_diff': 4.123600000000005e-05}, {'time': 0.023728083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:21.207" endtime="20201112 12:27:21.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.224" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:21.212" endtime="20201112 12:27:21.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.229" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.228" endtime="20201112 12:27:21.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.231" level="INFO">VALUE: [4.123600000000005e-05, 5.087499999999884e-05, 5.280499999999952e-05, 5.3707999999999534e-05, 5.6500000000000994e-05, 5.373600000000214e-05, 5.558400000000088e-05, 5.568100000000187e-05, 5.174999999999971e-05, 5.463899999999869e-05, 5.565299999999926e-05, 5.2708000000002e-05, 5.663899999999722e-05, 5.5665999999999355e-05, 5.3721999999999104e-05, 5.177699999999938e-05, 5.377800000000085e-05, 5.376400000000128e-05, 5.6514000000000564e-05, 4.993099999999959e-05, 5.180600000000146e-05, 5.2707999999998534e-05, 5.4708000000000534e-05, 5.08469999999997e-05, 5.558300000000141e-05, 5.08469999999997e-05, 5.4693999999997495e-05, 5.563899999999969e-05, 5.556899999999837e-05, 5.176400000000275e-05, 5.365299999999726e-05, 5.4722000000000104e-05, 5.663900000000069e-05, 5.090299999999798e-05, 5.755499999999733e-05, 5.176399999999928e-05, 5.561099999999708e-05, 5.465300000000173e-05, 5.277799999999985e-05, 5.468100000000087e-05, 5.461199999999902e-05, 5.183300000000113e-05, 4.988900000000088e-05, 5.2735999999997674e-05, 5.183300000000113e-05, 5.08469999999997e-05, 5.652700000000066e-05, 5.087499999999884e-05, 5.184800000000017e-05, 5.566699999999883e-05]</msg>
<status status="PASS" starttime="20201112 12:27:21.230" endtime="20201112 12:27:21.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.225" endtime="20201112 12:27:21.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.235" endtime="20201112 12:27:21.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.238" endtime="20201112 12:27:21.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.237" endtime="20201112 12:27:21.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.233" endtime="20201112 12:27:21.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.863" endtime="20201112 12:27:21.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.863" endtime="20201112 12:27:21.259"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.268" endtime="20201112 12:27:21.291"></status>
</kw>
<msg timestamp="20201112 12:27:21.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.266" endtime="20201112 12:27:21.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.292" endtime="20201112 12:27:21.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.295" endtime="20201112 12:27:21.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.264" endtime="20201112 12:27:21.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.261" endtime="20201112 12:27:21.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.304" endtime="20201112 12:27:21.591"></status>
</kw>
<msg timestamp="20201112 12:27:21.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023869611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023916708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.302" endtime="20201112 12:27:21.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023869611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023916708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.595" endtime="20201112 12:27:21.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.603" endtime="20201112 12:27:21.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.300" endtime="20201112 12:27:21.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.298" endtime="20201112 12:27:21.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.610" level="INFO">${RESULT} = [{'time': 0.023916708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.709699999999942e-05, 'source_diff': 4.709699999999942e-05}, {'time': 0.023978028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:21.607" endtime="20201112 12:27:21.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.623" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:21.611" endtime="20201112 12:27:21.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.628" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.627" endtime="20201112 12:27:21.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.630" level="INFO">VALUE: [4.709699999999942e-05, 5.086099999999927e-05, 5.4694000000000964e-05, 5.268099999999887e-05, 5.177800000000232e-05, 5.094400000000068e-05, 5.186100000000027e-05, 5.279199999999942e-05, 5.561100000000055e-05, 5.656899999999937e-05, 5.281899999999909e-05, 5.56670000000023e-05, 5.5750000000000244e-05, 5.0902000000001973e-05, 5.091700000000102e-05, 5.276400000000028e-05, 5.3735999999998674e-05, 5.570899999999754e-05, 5.186100000000027e-05, 5.281899999999909e-05, 5.379200000000042e-05, 5.279199999999942e-05, 5.656900000000284e-05, 5.277799999999985e-05, 5.377800000000085e-05, 5.569500000000144e-05, 5.2735999999997674e-05, 5.4693999999997495e-05, 5.090299999999798e-05, 5.562500000000012e-05, 5.3763999999997814e-05, 5.280599999999899e-05, 5.377699999999791e-05, 5.4722000000000104e-05, 5.18340000000006e-05, 5.177700000000285e-05, 5.369499999999944e-05, 5.3749999999998244e-05, 5.281899999999909e-05, 5.279200000000289e-05, 5.4652000000002254e-05, 5.083300000000013e-05, 5.665300000000026e-05, 5.4735999999999674e-05, 5.280599999999899e-05, 5.569499999999797e-05, 5.179200000000189e-05, 5.470900000000001e-05, 5.379100000000095e-05, 5.370899999999901e-05]</msg>
<status status="PASS" starttime="20201112 12:27:21.629" endtime="20201112 12:27:21.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.624" endtime="20201112 12:27:21.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.634" endtime="20201112 12:27:21.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.637" endtime="20201112 12:27:21.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.636" endtime="20201112 12:27:21.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.632" endtime="20201112 12:27:21.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.260" endtime="20201112 12:27:21.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.259" endtime="20201112 12:27:21.658"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.667" endtime="20201112 12:27:21.686"></status>
</kw>
<msg timestamp="20201112 12:27:21.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.665" endtime="20201112 12:27:21.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.688" endtime="20201112 12:27:21.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.690" endtime="20201112 12:27:21.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.663" endtime="20201112 12:27:21.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.661" endtime="20201112 12:27:21.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.699" endtime="20201112 12:27:21.985"></status>
</kw>
<msg timestamp="20201112 12:27:21.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021613319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.698" endtime="20201112 12:27:21.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021613319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.989" endtime="20201112 12:27:21.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.998" endtime="20201112 12:27:21.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.695" endtime="20201112 12:27:22.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.693" endtime="20201112 12:27:22.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.004" level="INFO">${RESULT} = [{'time': 0.021664194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.087500000000231e-05, 'source_diff': 5.087500000000231e-05}, {'time': 0.021725333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:22.001" endtime="20201112 12:27:22.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.018" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:22.005" endtime="20201112 12:27:22.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.022" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.021" endtime="20201112 12:27:22.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.025" level="INFO">VALUE: [5.087500000000231e-05, 5.4708000000000534e-05, 5.3721999999999104e-05, 5.269500000000191e-05, 5.180500000000199e-05, 5.086099999999927e-05, 5.3637999999998215e-05, 5.273600000000114e-05, 5.279199999999942e-05, 5.181899999999809e-05, 5.280499999999952e-05, 5.558400000000088e-05, 5.469500000000044e-05, 5.0887999999998934e-05, 5.372299999999858e-05, 5.076400000000175e-05, 5.561100000000055e-05, 5.3693999999999964e-05, 5.375000000000171e-05, 5.565300000000273e-05, 5.373600000000214e-05, 5.372299999999858e-05, 5.652700000000066e-05, 5.556899999999837e-05, 5.280599999999899e-05, 5.461099999999955e-05, 5.658300000000241e-05, 5.558299999999794e-05, 5.4708000000000534e-05, 5.559700000000098e-05, 5.559699999999751e-05, 5.18470000000007e-05, 5.3708000000003e-05, 5.3693999999999964e-05, 5.554099999999923e-05, 5.279199999999942e-05, 5.3735999999998674e-05, 5.173600000000014e-05, 5.086099999999927e-05, 5.375000000000171e-05, 5.183299999999766e-05, 5.1693999999997964e-05, 5.2763999999996813e-05, 5.281900000000256e-05, 5.177799999999885e-05, 5.179099999999895e-05, 5.380599999999999e-05, 5.177799999999885e-05, 5.4708000000000534e-05, 4.983299999999913e-05]</msg>
<status status="PASS" starttime="20201112 12:27:22.023" endtime="20201112 12:27:22.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.019" endtime="20201112 12:27:22.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.028" endtime="20201112 12:27:22.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.032" endtime="20201112 12:27:22.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.030" endtime="20201112 12:27:22.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.027" endtime="20201112 12:27:22.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.659" endtime="20201112 12:27:22.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.659" endtime="20201112 12:27:22.053"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.061" endtime="20201112 12:27:22.084"></status>
</kw>
<msg timestamp="20201112 12:27:22.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.060" endtime="20201112 12:27:22.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.085" endtime="20201112 12:27:22.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.088" endtime="20201112 12:27:22.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.057" endtime="20201112 12:27:22.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.055" endtime="20201112 12:27:22.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.097" endtime="20201112 12:27:22.384"></status>
</kw>
<msg timestamp="20201112 12:27:22.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024108639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024171903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.095" endtime="20201112 12:27:22.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024108639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024171903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.388" endtime="20201112 12:27:22.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.397" endtime="20201112 12:27:22.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.093" endtime="20201112 12:27:22.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.091" endtime="20201112 12:27:22.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.403" level="INFO">${RESULT} = [{'time': 0.024171903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.326400000000038e-05, 'source_diff': 6.326400000000038e-05}, {'time': 0.02423325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:22.400" endtime="20201112 12:27:22.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.416" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:22.404" endtime="20201112 12:27:22.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.421" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.420" endtime="20201112 12:27:22.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.423" level="INFO">VALUE: [6.326400000000038e-05, 5.083300000000013e-05, 5.181900000000156e-05, 5.281899999999909e-05, 5.280599999999899e-05, 5.561100000000055e-05, 5.079200000000089e-05, 5.279099999999995e-05, 5.466699999999783e-05, 5.461099999999955e-05, 5.281899999999909e-05, 5.5679999999998925e-05, 5.468100000000087e-05, 5.2707999999998534e-05, 5.3721999999999104e-05, 5.093100000000059e-05, 5.373600000000214e-05, 5.183300000000113e-05, 5.181899999999809e-05, 5.088899999999841e-05, 5.472299999999958e-05, 5.183300000000113e-05, 5.4694000000000964e-05, 5.465300000000173e-05, 5.18609999999968e-05, 5.469500000000044e-05, 5.176399999999928e-05, 5.275000000000071e-05, 5.4693999999997495e-05, 5.280599999999899e-05, 5.658400000000188e-05, 5.566699999999883e-05, 5.561100000000055e-05, 5.563899999999969e-05, 5.375000000000171e-05, 5.661100000000155e-05, 5.280599999999899e-05, 5.4680000000001394e-05, 5.08469999999997e-05, 5.086099999999927e-05, 5.279199999999942e-05, 5.079200000000089e-05, 5.465299999999826e-05, 5.087499999999884e-05, 5.2749999999997244e-05, 5.3693999999999964e-05, 5.079100000000142e-05, 5.472299999999958e-05, 5.663900000000069e-05, 5.4708000000000534e-05]</msg>
<status status="PASS" starttime="20201112 12:27:22.422" endtime="20201112 12:27:22.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.417" endtime="20201112 12:27:22.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.427" endtime="20201112 12:27:22.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.430" endtime="20201112 12:27:22.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.429" endtime="20201112 12:27:22.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.425" endtime="20201112 12:27:22.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.054" endtime="20201112 12:27:22.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.053" endtime="20201112 12:27:22.451"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.460" endtime="20201112 12:27:22.480"></status>
</kw>
<msg timestamp="20201112 12:27:22.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.459" endtime="20201112 12:27:22.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.482" endtime="20201112 12:27:22.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.485" endtime="20201112 12:27:22.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.456" endtime="20201112 12:27:22.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.454" endtime="20201112 12:27:22.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.493" endtime="20201112 12:27:22.780"></status>
</kw>
<msg timestamp="20201112 12:27:22.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022346514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.492" endtime="20201112 12:27:22.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022346514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.784" endtime="20201112 12:27:22.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.792" endtime="20201112 12:27:22.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.489" endtime="20201112 12:27:22.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.488" endtime="20201112 12:27:22.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.799" level="INFO">${RESULT} = [{'time': 0.022346514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.232000000000112e-05, 'source_diff': 6.232000000000112e-05}, {'time': 0.022407653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:22.796" endtime="20201112 12:27:22.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.813" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:22.800" endtime="20201112 12:27:22.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.817" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.816" endtime="20201112 12:27:22.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.820" level="INFO">VALUE: [6.232000000000112e-05, 5.3749999999998244e-05, 5.665300000000026e-05, 5.186199999999974e-05, 5.186100000000027e-05, 5.176399999999928e-05, 5.087500000000231e-05, 5.279099999999995e-05, 4.994399999999968e-05, 5.659699999999851e-05, 5.086099999999927e-05, 5.556999999999784e-05, 5.3735999999998674e-05, 5.279099999999995e-05, 5.470900000000001e-05, 5.173600000000014e-05, 5.280599999999899e-05, 5.186100000000027e-05, 5.087499999999884e-05, 5.088899999999841e-05, 5.183300000000113e-05, 5.079100000000142e-05, 5.665300000000026e-05, 5.086199999999874e-05, 5.4735999999999674e-05, 5.559699999999751e-05, 5.658300000000241e-05, 5.651300000000109e-05, 5.470900000000001e-05, 5.087499999999884e-05, 5.661100000000155e-05, 5.472300000000305e-05, 5.282000000000203e-05, 5.758299999999994e-05, 5.56809999999984e-05, 5.281899999999909e-05, 5.173600000000014e-05, 5.3749999999998244e-05, 5.5665999999999355e-05, 5.659700000000198e-05, 5.472299999999958e-05, 5.747299999999886e-05, 5.376400000000128e-05, 5.372200000000257e-05, 5.662499999999765e-05, 5.75689999999969e-05, 5.572299999999711e-05, 5.087500000000231e-05, 5.088899999999841e-05, 5.283300000000213e-05]</msg>
<status status="PASS" starttime="20201112 12:27:22.818" endtime="20201112 12:27:22.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.814" endtime="20201112 12:27:22.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.823" endtime="20201112 12:27:22.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.827" endtime="20201112 12:27:22.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.825" endtime="20201112 12:27:22.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.822" endtime="20201112 12:27:22.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.452" endtime="20201112 12:27:22.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.452" endtime="20201112 12:27:22.848"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.856" endtime="20201112 12:27:22.877"></status>
</kw>
<msg timestamp="20201112 12:27:22.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.855" endtime="20201112 12:27:22.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.879" endtime="20201112 12:27:22.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.882" endtime="20201112 12:27:22.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.852" endtime="20201112 12:27:22.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.850" endtime="20201112 12:27:22.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.892" endtime="20201112 12:27:23.178"></status>
</kw>
<msg timestamp="20201112 12:27:23.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022856236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.890" endtime="20201112 12:27:23.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022856236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.183" endtime="20201112 12:27:23.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.191" endtime="20201112 12:27:23.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.887" endtime="20201112 12:27:23.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.885" endtime="20201112 12:27:23.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.197" level="INFO">${RESULT} = [{'time': 0.022902236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.60000000000009e-05, 'source_diff': 4.60000000000009e-05}, {'time': 0.022963347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:23.194" endtime="20201112 12:27:23.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.211" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:23.198" endtime="20201112 12:27:23.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.215" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.214" endtime="20201112 12:27:23.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.218" level="INFO">VALUE: [4.60000000000009e-05, 5.383299999999966e-05, 5.6486000000001424e-05, 5.5707999999998065e-05, 5.758299999999994e-05, 5.558299999999794e-05, 5.463900000000216e-05, 5.283299999999866e-05, 5.3651999999997785e-05, 5.562500000000012e-05, 5.375000000000171e-05, 5.462499999999912e-05, 5.088900000000188e-05, 5.183300000000113e-05, 5.179199999999842e-05, 5.5651999999999785e-05, 5.558300000000141e-05, 5.277700000000038e-05, 5.461099999999955e-05, 5.469500000000044e-05, 5.081900000000056e-05, 5.4694000000000964e-05, 5.080599999999699e-05, 5.569499999999797e-05, 5.280599999999899e-05, 5.558299999999794e-05, 5.665300000000026e-05, 5.368099999999987e-05, 5.087500000000231e-05, 5.359700000000245e-05, 5.281899999999909e-05, 5.275000000000071e-05, 5.277799999999985e-05, 5.1707999999997534e-05, 5.461099999999955e-05, 5.662500000000112e-05, 5.556900000000184e-05, 5.279099999999995e-05, 5.279199999999942e-05, 5.272300000000105e-05, 5.563899999999969e-05, 5.65549999999998e-05, 5.18470000000007e-05, 5.18340000000006e-05, 5.6555999999999274e-05, 5.088899999999841e-05, 5.375000000000171e-05, 5.566699999999883e-05, 5.279199999999942e-05, 5.272200000000157e-05]</msg>
<status status="PASS" starttime="20201112 12:27:23.216" endtime="20201112 12:27:23.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.212" endtime="20201112 12:27:23.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.225" endtime="20201112 12:27:23.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.228" endtime="20201112 12:27:23.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.227" endtime="20201112 12:27:23.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.223" endtime="20201112 12:27:23.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.849" endtime="20201112 12:27:23.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.848" endtime="20201112 12:27:23.249"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.258" endtime="20201112 12:27:23.283"></status>
</kw>
<msg timestamp="20201112 12:27:23.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.256" endtime="20201112 12:27:23.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.285" endtime="20201112 12:27:23.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.288" endtime="20201112 12:27:23.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.254" endtime="20201112 12:27:23.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.252" endtime="20201112 12:27:23.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.297" endtime="20201112 12:27:23.584"></status>
</kw>
<msg timestamp="20201112 12:27:23.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023172375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.295" endtime="20201112 12:27:23.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023172375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.588" endtime="20201112 12:27:23.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.596" endtime="20201112 12:27:23.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.292" endtime="20201112 12:27:23.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.291" endtime="20201112 12:27:23.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.603" level="INFO">${RESULT} = [{'time': 0.023211764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9389000000000784e-05, 'source_diff': 3.9389000000000784e-05}, {'time': 0.023273139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:23.600" endtime="20201112 12:27:23.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.616" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:23.604" endtime="20201112 12:27:23.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.621" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.620" endtime="20201112 12:27:23.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.623" level="INFO">VALUE: [3.9389000000000784e-05, 5.6514000000000564e-05, 5.659699999999851e-05, 5.375000000000171e-05, 5.555600000000174e-05, 5.658399999999841e-05, 5.358300000000288e-05, 5.569500000000144e-05, 5.076400000000175e-05, 5.563899999999969e-05, 5.36670000000003e-05, 5.7569999999999844e-05, 5.46670000000013e-05, 5.370900000000248e-05, 5.080600000000046e-05, 5.273600000000114e-05, 5.190300000000245e-05, 5.6514000000000564e-05, 5.077799999999785e-05, 5.3721999999999104e-05, 5.079200000000089e-05, 5.563899999999969e-05, 5.2708000000002e-05, 5.658399999999841e-05, 5.16669999999983e-05, 5.455600000000074e-05, 5.4694000000000964e-05, 5.6486000000001424e-05, 5.176399999999928e-05, 5.662500000000112e-05, 5.561100000000055e-05, 5.18470000000007e-05, 5.465299999999826e-05, 5.658299999999894e-05, 5.55549999999988e-05, 5.368099999999987e-05, 5.377800000000085e-05, 5.563899999999969e-05, 5.6514000000000564e-05, 5.659700000000198e-05, 5.174999999999971e-05, 5.177799999999885e-05, 5.459699999999998e-05, 5.661200000000102e-05, 5.554099999999923e-05, 5.3721999999999104e-05, 5.5555999999998273e-05, 5.659699999999851e-05, 5.3666000000000824e-05, 5.656899999999937e-05]</msg>
<status status="PASS" starttime="20201112 12:27:23.622" endtime="20201112 12:27:23.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.617" endtime="20201112 12:27:23.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.627" endtime="20201112 12:27:23.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.630" endtime="20201112 12:27:23.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.629" endtime="20201112 12:27:23.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.625" endtime="20201112 12:27:23.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.250" endtime="20201112 12:27:23.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.250" endtime="20201112 12:27:23.651"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.660" endtime="20201112 12:27:23.680"></status>
</kw>
<msg timestamp="20201112 12:27:23.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.658" endtime="20201112 12:27:23.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.682" endtime="20201112 12:27:23.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.685" endtime="20201112 12:27:23.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.656" endtime="20201112 12:27:23.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.653" endtime="20201112 12:27:23.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.693" endtime="20201112 12:27:23.983"></status>
</kw>
<msg timestamp="20201112 12:27:23.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0232885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023339389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:23.692" endtime="20201112 12:27:23.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0232885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023339389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:23.987" endtime="20201112 12:27:23.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.995" endtime="20201112 12:27:23.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.689" endtime="20201112 12:27:23.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.688" endtime="20201112 12:27:23.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.002" level="INFO">${RESULT} = [{'time': 0.023339389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.088899999999841e-05, 'source_diff': 5.088899999999841e-05}, {'time': 0.023399694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:23.998" endtime="20201112 12:27:24.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.015" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:24.003" endtime="20201112 12:27:24.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.020" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.019" endtime="20201112 12:27:24.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.022" level="INFO">VALUE: [5.088899999999841e-05, 5.4693999999997495e-05, 5.180500000000199e-05, 5.470900000000001e-05, 5.661099999999808e-05, 5.183299999999766e-05, 5.277799999999985e-05, 5.4708000000000534e-05, 5.277799999999985e-05, 5.177799999999885e-05, 5.091600000000154e-05, 5.180599999999799e-05, 5.279199999999942e-05, 5.3707999999999534e-05, 5.377800000000085e-05, 5.080600000000046e-05, 5.463900000000216e-05, 5.3721999999999104e-05, 5.279199999999942e-05, 5.174999999999971e-05, 5.373699999999815e-05, 5.087499999999884e-05, 5.469500000000044e-05, 5.179099999999895e-05, 5.265299999999973e-05, 5.272300000000105e-05, 5.3735999999998674e-05, 5.279199999999942e-05, 5.654100000000023e-05, 5.280599999999899e-05, 5.468100000000087e-05, 5.652700000000066e-05, 5.659699999999851e-05, 5.183300000000113e-05, 5.469499999999697e-05, 5.556999999999784e-05, 5.275000000000071e-05, 5.087499999999884e-05, 5.277799999999985e-05, 5.662500000000112e-05, 5.5680000000002394e-05, 5.08469999999997e-05, 5.557000000000131e-05, 5.373600000000214e-05, 5.562500000000012e-05, 5.279199999999942e-05, 5.654100000000023e-05, 5.561100000000055e-05, 5.181900000000156e-05, 5.276400000000028e-05]</msg>
<status status="PASS" starttime="20201112 12:27:24.021" endtime="20201112 12:27:24.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.016" endtime="20201112 12:27:24.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.026" endtime="20201112 12:27:24.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.029" endtime="20201112 12:27:24.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.028" endtime="20201112 12:27:24.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.024" endtime="20201112 12:27:24.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.652" endtime="20201112 12:27:24.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.651" endtime="20201112 12:27:24.050"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.059" endtime="20201112 12:27:24.078"></status>
</kw>
<msg timestamp="20201112 12:27:24.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.057" endtime="20201112 12:27:24.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.080" endtime="20201112 12:27:24.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.082" endtime="20201112 12:27:24.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.055" endtime="20201112 12:27:24.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.052" endtime="20201112 12:27:24.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.091" endtime="20201112 12:27:24.378"></status>
</kw>
<msg timestamp="20201112 12:27:24.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021299944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.090" endtime="20201112 12:27:24.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021299944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.382" endtime="20201112 12:27:24.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.391" endtime="20201112 12:27:24.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.087" endtime="20201112 12:27:24.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.086" endtime="20201112 12:27:24.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.397" level="INFO">${RESULT} = [{'time': 0.021299944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0361000000002645e-05, 'source_diff': 4.0361000000002645e-05}, {'time': 0.021361181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:24.394" endtime="20201112 12:27:24.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.411" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:24.398" endtime="20201112 12:27:24.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.415" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.414" endtime="20201112 12:27:24.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.418" level="INFO">VALUE: [4.0361000000002645e-05, 5.376400000000128e-05, 5.4735999999999674e-05, 5.556899999999837e-05, 5.182000000000103e-05, 5.56670000000023e-05, 5.55549999999988e-05, 5.659700000000198e-05, 5.558300000000141e-05, 5.661100000000155e-05, 5.4735999999999674e-05, 5.1708000000001e-05, 5.363899999999769e-05, 5.182000000000103e-05, 5.265299999999973e-05, 5.372200000000257e-05, 5.091700000000102e-05, 5.6514000000000564e-05, 5.0887999999998934e-05, 5.5541999999998704e-05, 5.279199999999942e-05, 5.28470000000017e-05, 5.183399999999713e-05, 5.365299999999726e-05, 5.376400000000128e-05, 5.5665999999999355e-05, 5.362500000000159e-05, 5.559699999999751e-05, 5.3749999999998244e-05, 5.758299999999994e-05, 5.557000000000131e-05, 5.280499999999952e-05, 5.3749999999998244e-05, 5.46670000000013e-05, 5.4680000000001394e-05, 5.186199999999974e-05, 5.182000000000103e-05, 5.365300000000073e-05, 5.279200000000289e-05, 5.462499999999912e-05, 5.088899999999841e-05, 5.6528000000000134e-05, 5.181899999999809e-05, 5.561100000000055e-05, 5.3721999999999104e-05, 5.65549999999998e-05, 5.365299999999726e-05, 5.279099999999995e-05, 5.183299999999766e-05, 5.561100000000055e-05]</msg>
<status status="PASS" starttime="20201112 12:27:24.416" endtime="20201112 12:27:24.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.411" endtime="20201112 12:27:24.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.421" endtime="20201112 12:27:24.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.425" endtime="20201112 12:27:24.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.423" endtime="20201112 12:27:24.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.419" endtime="20201112 12:27:24.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.051" endtime="20201112 12:27:24.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.050" endtime="20201112 12:27:24.446"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.454" endtime="20201112 12:27:24.476"></status>
</kw>
<msg timestamp="20201112 12:27:24.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.453" endtime="20201112 12:27:24.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.477" endtime="20201112 12:27:24.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.480" endtime="20201112 12:27:24.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.450" endtime="20201112 12:27:24.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.448" endtime="20201112 12:27:24.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.489" endtime="20201112 12:27:24.776"></status>
</kw>
<msg timestamp="20201112 12:27:24.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.487" endtime="20201112 12:27:24.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.780" endtime="20201112 12:27:24.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.788" endtime="20201112 12:27:24.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.485" endtime="20201112 12:27:24.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.483" endtime="20201112 12:27:24.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.795" level="INFO">${RESULT} = [{'time': 0.022679042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7917000000001486e-05, 'source_diff': 4.7917000000001486e-05}, {'time': 0.022739958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:24.792" endtime="20201112 12:27:24.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.808" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:24.796" endtime="20201112 12:27:24.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.813" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.812" endtime="20201112 12:27:24.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.815" level="INFO">VALUE: [4.7917000000001486e-05, 5.559700000000098e-05, 5.177799999999885e-05, 5.459699999999998e-05, 5.086099999999927e-05, 5.277700000000038e-05, 5.3680000000000394e-05, 5.181900000000156e-05, 5.174999999999971e-05, 5.4680000000001394e-05, 5.2707999999998534e-05, 5.1902000000002974e-05, 5.3763999999997814e-05, 5.263900000000016e-05, 5.661100000000155e-05, 5.6457999999998815e-05, 5.26669999999993e-05, 5.562500000000012e-05, 5.181999999999756e-05, 5.176299999999981e-05, 5.569500000000144e-05, 5.279199999999942e-05, 5.461100000000302e-05, 5.375000000000171e-05, 5.4735999999999674e-05, 5.5541999999998704e-05, 5.08469999999997e-05, 5.462499999999912e-05, 5.174999999999971e-05, 5.087499999999884e-05, 5.6555999999999274e-05, 5.281999999999856e-05, 5.465300000000173e-05, 5.181999999999756e-05, 5.565300000000273e-05, 5.462499999999912e-05, 5.665300000000026e-05, 5.08469999999997e-05, 5.363900000000116e-05, 5.662500000000112e-05, 5.5694000000001964e-05, 5.6541999999999704e-05, 5.279199999999942e-05, 5.379100000000095e-05, 5.561100000000055e-05, 5.363900000000116e-05, 5.18470000000007e-05, 5.563899999999969e-05, 5.4708000000000534e-05, 5.6528000000000134e-05]</msg>
<status status="PASS" starttime="20201112 12:27:24.814" endtime="20201112 12:27:24.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.809" endtime="20201112 12:27:24.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.819" endtime="20201112 12:27:24.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.822" endtime="20201112 12:27:24.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.821" endtime="20201112 12:27:24.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.817" endtime="20201112 12:27:24.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.446" endtime="20201112 12:27:24.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.446" endtime="20201112 12:27:24.843"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.852" endtime="20201112 12:27:24.872"></status>
</kw>
<msg timestamp="20201112 12:27:24.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.850" endtime="20201112 12:27:24.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.873" endtime="20201112 12:27:24.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.876" endtime="20201112 12:27:24.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.848" endtime="20201112 12:27:24.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.846" endtime="20201112 12:27:24.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.885" endtime="20201112 12:27:25.171"></status>
</kw>
<msg timestamp="20201112 12:27:25.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.883" endtime="20201112 12:27:25.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.175" endtime="20201112 12:27:25.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.184" endtime="20201112 12:27:25.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.881" endtime="20201112 12:27:25.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.879" endtime="20201112 12:27:25.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.190" level="INFO">${RESULT} = [{'time': 0.021799403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.270899999999801e-05, 'source_diff': 5.270899999999801e-05}, {'time': 0.021860556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:25.187" endtime="20201112 12:27:25.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.204" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:25.191" endtime="20201112 12:27:25.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.208" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.207" endtime="20201112 12:27:25.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.211" level="INFO">VALUE: [5.270899999999801e-05, 5.087499999999884e-05, 5.6528000000000134e-05, 5.477800000000185e-05, 5.369499999999944e-05, 5.2708000000002e-05, 5.473600000000314e-05, 5.080500000000099e-05, 5.08469999999997e-05, 5.184699999999723e-05, 5.3680000000000394e-05, 5.4735999999999674e-05, 5.3652000000001254e-05, 5.4693999999997495e-05, 5.173600000000014e-05, 5.280499999999952e-05, 5.173600000000014e-05, 5.276400000000028e-05, 5.3637999999998215e-05, 5.465299999999826e-05, 5.555600000000174e-05, 5.468100000000087e-05, 5.461200000000249e-05, 5.087499999999884e-05, 5.6500000000000994e-05, 5.662500000000112e-05, 5.173600000000014e-05, 4.991600000000054e-05, 5.2707999999998534e-05, 5.470900000000001e-05, 5.269400000000243e-05, 5.270899999999801e-05, 5.465300000000173e-05, 5.658299999999894e-05, 5.362500000000159e-05, 5.36670000000003e-05, 5.3749999999998244e-05, 5.563899999999969e-05, 5.079200000000089e-05, 5.368099999999987e-05, 5.461100000000302e-05, 5.3721999999999104e-05, 5.462499999999912e-05, 5.561099999999708e-05, 5.5541999999998704e-05, 5.270900000000148e-05, 5.562500000000012e-05, 5.173600000000014e-05, 5.468100000000087e-05, 5.5527999999999134e-05]</msg>
<status status="PASS" starttime="20201112 12:27:25.209" endtime="20201112 12:27:25.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.205" endtime="20201112 12:27:25.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.214" endtime="20201112 12:27:25.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.218" endtime="20201112 12:27:25.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.216" endtime="20201112 12:27:25.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.213" endtime="20201112 12:27:25.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.844" endtime="20201112 12:27:25.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.844" endtime="20201112 12:27:25.239"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.247" endtime="20201112 12:27:25.268"></status>
</kw>
<msg timestamp="20201112 12:27:25.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.246" endtime="20201112 12:27:25.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.270" endtime="20201112 12:27:25.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.272" endtime="20201112 12:27:25.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.243" endtime="20201112 12:27:25.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.241" endtime="20201112 12:27:25.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.281" endtime="20201112 12:27:25.570"></status>
</kw>
<msg timestamp="20201112 12:27:25.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023411264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023453528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.280" endtime="20201112 12:27:25.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023411264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023453528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.574" endtime="20201112 12:27:25.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.582" endtime="20201112 12:27:25.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.277" endtime="20201112 12:27:25.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.275" endtime="20201112 12:27:25.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.589" level="INFO">${RESULT} = [{'time': 0.023453528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.226400000000019e-05, 'source_diff': 4.226400000000019e-05}, {'time': 0.023513819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:25.585" endtime="20201112 12:27:25.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.602" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:25.590" endtime="20201112 12:27:25.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.606" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.605" endtime="20201112 12:27:25.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.609" level="INFO">VALUE: [4.226400000000019e-05, 4.9887999999997934e-05, 5.558299999999794e-05, 5.277799999999985e-05, 5.5694000000001964e-05, 5.6541999999999704e-05, 5.565299999999926e-05, 5.4694000000000964e-05, 5.559700000000098e-05, 5.369499999999944e-05, 5.277799999999985e-05, 5.562500000000012e-05, 5.462499999999912e-05, 5.4735999999999674e-05, 5.269400000000243e-05, 5.4693999999997495e-05, 5.565299999999926e-05, 5.4665999999998355e-05, 5.181999999999756e-05, 5.18470000000007e-05, 5.177800000000232e-05, 5.556900000000184e-05, 5.661200000000102e-05, 5.563899999999969e-05, 5.369499999999944e-05, 5.180499999999852e-05, 5.659700000000198e-05, 5.275000000000071e-05, 5.3735999999998674e-05, 5.282000000000203e-05, 5.082000000000003e-05, 5.273700000000062e-05, 5.186100000000027e-05, 5.377800000000085e-05, 5.563899999999969e-05, 5.182000000000103e-05, 5.5680000000002394e-05, 5.658400000000188e-05, 5.372200000000257e-05, 4.987500000000131e-05, 5.273600000000114e-05, 5.65549999999998e-05, 5.4651999999998785e-05, 5.180499999999852e-05, 5.273600000000114e-05, 5.183299999999766e-05, 5.562500000000012e-05, 5.655600000000274e-05, 5.275000000000071e-05, 5.275000000000071e-05]</msg>
<status status="PASS" starttime="20201112 12:27:25.608" endtime="20201112 12:27:25.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.603" endtime="20201112 12:27:25.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.612" endtime="20201112 12:27:25.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.616" endtime="20201112 12:27:25.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.614" endtime="20201112 12:27:25.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.611" endtime="20201112 12:27:25.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.240" endtime="20201112 12:27:25.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.239" endtime="20201112 12:27:25.637"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.646" endtime="20201112 12:27:25.668"></status>
</kw>
<msg timestamp="20201112 12:27:25.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.644" endtime="20201112 12:27:25.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.669" endtime="20201112 12:27:25.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.672" endtime="20201112 12:27:25.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.641" endtime="20201112 12:27:25.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.639" endtime="20201112 12:27:25.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.681" endtime="20201112 12:27:25.967"></status>
</kw>
<msg timestamp="20201112 12:27:25.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.679" endtime="20201112 12:27:25.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.971" endtime="20201112 12:27:25.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.980" endtime="20201112 12:27:25.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.677" endtime="20201112 12:27:25.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.675" endtime="20201112 12:27:25.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.986" level="INFO">${RESULT} = [{'time': 0.022054458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.615199999999988e-05, 'source_diff': 6.615199999999988e-05}, {'time': 0.022115778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:25.983" endtime="20201112 12:27:25.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.000" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:25.987" endtime="20201112 12:27:26.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.004" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.003" endtime="20201112 12:27:26.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.007" level="INFO">VALUE: [6.615199999999988e-05, 5.46809999999974e-05, 5.4749999999999244e-05, 5.3735999999998674e-05, 5.18470000000007e-05, 5.083300000000013e-05, 5.18470000000007e-05, 5.4694000000000964e-05, 5.469500000000044e-05, 5.3693999999999964e-05, 5.280499999999952e-05, 5.0888000000002404e-05, 5.080599999999699e-05, 5.658299999999894e-05, 5.56670000000023e-05, 5.087500000000231e-05, 5.573700000000015e-05, 5.3735999999998674e-05, 5.280599999999899e-05, 5.462499999999912e-05, 5.6569999999998843e-05, 5.5665999999999355e-05, 5.280599999999899e-05, 5.381900000000009e-05, 5.4694000000000964e-05, 5.279200000000289e-05, 5.463900000000216e-05, 5.561100000000055e-05, 5.565299999999926e-05, 5.663900000000069e-05, 5.758299999999994e-05, 5.4680000000001394e-05, 5.6666000000000355e-05, 5.375000000000171e-05, 5.08339999999996e-05, 5.4665999999998355e-05, 5.568100000000187e-05, 5.08469999999997e-05, 5.373600000000214e-05, 5.177699999999938e-05, 5.083300000000013e-05, 5.470900000000001e-05, 5.281899999999909e-05, 5.566699999999883e-05, 5.3721999999999104e-05, 5.656899999999937e-05, 5.568100000000187e-05, 5.174999999999971e-05, 5.275000000000071e-05, 5.279199999999942e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.005" endtime="20201112 12:27:26.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.001" endtime="20201112 12:27:26.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.010" endtime="20201112 12:27:26.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.014" endtime="20201112 12:27:26.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.012" endtime="20201112 12:27:26.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.009" endtime="20201112 12:27:26.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.638" endtime="20201112 12:27:26.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.637" endtime="20201112 12:27:26.035"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.044" endtime="20201112 12:27:26.063"></status>
</kw>
<msg timestamp="20201112 12:27:26.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.042" endtime="20201112 12:27:26.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.064" endtime="20201112 12:27:26.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.067" endtime="20201112 12:27:26.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.039" endtime="20201112 12:27:26.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.037" endtime="20201112 12:27:26.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.076" endtime="20201112 12:27:26.361"></status>
</kw>
<msg timestamp="20201112 12:27:26.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020945264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.074" endtime="20201112 12:27:26.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020945264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.365" endtime="20201112 12:27:26.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.373" endtime="20201112 12:27:26.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.072" endtime="20201112 12:27:26.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.070" endtime="20201112 12:27:26.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.380" level="INFO">${RESULT} = [{'time': 0.020992222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.695799999999972e-05, 'source_diff': 4.695799999999972e-05}, {'time': 0.021053, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:27:26.377" endtime="20201112 12:27:26.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.393" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:26.381" endtime="20201112 12:27:26.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.398" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.397" endtime="20201112 12:27:26.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.400" level="INFO">VALUE: [4.695799999999972e-05, 5.276400000000028e-05, 5.468100000000087e-05, 5.462499999999912e-05, 5.087499999999884e-05, 5.273600000000114e-05, 5.081900000000056e-05, 5.372200000000257e-05, 5.570899999999754e-05, 5.268100000000234e-05, 5.177800000000232e-05, 5.6514000000000564e-05, 5.086099999999927e-05, 5.273600000000114e-05, 5.4693999999997495e-05, 5.3735999999998674e-05, 5.181900000000156e-05, 5.4541999999997703e-05, 5.376400000000128e-05, 5.083300000000013e-05, 5.466699999999783e-05, 5.657000000000231e-05, 5.561200000000002e-05, 5.177800000000232e-05, 5.275000000000071e-05, 5.5527999999999134e-05, 5.470900000000001e-05, 5.179099999999895e-05, 5.659699999999851e-05, 5.265299999999973e-05, 5.086099999999927e-05, 5.279199999999942e-05, 5.081900000000056e-05, 5.565299999999926e-05, 5.655600000000274e-05, 5.2680000000002863e-05, 5.174999999999971e-05, 5.275000000000071e-05, 5.359699999999898e-05, 5.18340000000006e-05, 5.461099999999955e-05, 5.186100000000027e-05, 5.074999999999871e-05, 5.373600000000214e-05, 5.273600000000114e-05, 5.086099999999927e-05, 5.082000000000003e-05, 5.276400000000028e-05, 5.6541999999999704e-05, 5.469500000000044e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.399" endtime="20201112 12:27:26.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.394" endtime="20201112 12:27:26.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.404" endtime="20201112 12:27:26.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.407" endtime="20201112 12:27:26.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.406" endtime="20201112 12:27:26.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.402" endtime="20201112 12:27:26.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.036" endtime="20201112 12:27:26.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.035" endtime="20201112 12:27:26.428"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.437" endtime="20201112 12:27:26.459"></status>
</kw>
<msg timestamp="20201112 12:27:26.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.435" endtime="20201112 12:27:26.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.461" endtime="20201112 12:27:26.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.463" endtime="20201112 12:27:26.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.433" endtime="20201112 12:27:26.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.431" endtime="20201112 12:27:26.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.472" endtime="20201112 12:27:26.759"></status>
</kw>
<msg timestamp="20201112 12:27:26.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024307097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024355111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.471" endtime="20201112 12:27:26.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024307097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024355111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.763" endtime="20201112 12:27:26.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.772" endtime="20201112 12:27:26.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.468" endtime="20201112 12:27:26.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.467" endtime="20201112 12:27:26.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.778" level="INFO">${RESULT} = [{'time': 0.024355111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8013999999999e-05, 'source_diff': 4.8013999999999e-05}, {'time': 0.024416167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201112 12:27:26.775" endtime="20201112 12:27:26.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.792" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:26.779" endtime="20201112 12:27:26.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.796" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.795" endtime="20201112 12:27:26.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.799" level="INFO">VALUE: [4.8013999999999e-05, 5.5541999999998704e-05, 5.4763999999998814e-05, 5.556999999999784e-05, 5.180599999999799e-05, 5.555600000000174e-05, 5.4693999999997495e-05, 5.077800000000132e-05, 5.077800000000132e-05, 5.658299999999894e-05, 5.3749999999998244e-05, 5.365300000000073e-05, 5.370900000000248e-05, 5.090299999999798e-05, 5.7471999999999385e-05, 5.087500000000231e-05, 5.4722000000000104e-05, 5.552699999999966e-05, 5.459699999999998e-05, 5.182000000000103e-05, 5.363900000000116e-05, 5.273600000000114e-05, 5.556999999999784e-05, 5.180600000000146e-05, 5.177799999999885e-05, 5.3721999999999104e-05, 5.5651999999999785e-05, 5.174999999999971e-05, 5.279099999999995e-05, 5.088900000000188e-05, 5.747299999999886e-05, 5.6500000000000994e-05, 5.5679999999998925e-05, 5.172200000000057e-05, 5.6666000000000355e-05, 5.461099999999955e-05, 5.088900000000188e-05, 5.451400000000203e-05, 5.287500000000084e-05, 5.076399999999828e-05, 5.3735999999998674e-05, 5.459699999999998e-05, 5.087499999999884e-05, 5.381999999999956e-05, 5.173699999999962e-05, 5.662500000000112e-05, 5.087499999999884e-05, 5.7458000000003284e-05, 5.665300000000026e-05, 5.658299999999894e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.797" endtime="20201112 12:27:26.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.793" endtime="20201112 12:27:26.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.802" endtime="20201112 12:27:26.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.806" endtime="20201112 12:27:26.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.804" endtime="20201112 12:27:26.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.801" endtime="20201112 12:27:26.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.429" endtime="20201112 12:27:26.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.429" endtime="20201112 12:27:26.827"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.835" endtime="20201112 12:27:26.856"></status>
</kw>
<msg timestamp="20201112 12:27:26.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.834" endtime="20201112 12:27:26.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.858" endtime="20201112 12:27:26.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.860" endtime="20201112 12:27:26.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.831" endtime="20201112 12:27:26.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.829" endtime="20201112 12:27:26.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.869" endtime="20201112 12:27:27.156"></status>
</kw>
<msg timestamp="20201112 12:27:27.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022958069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:26.868" endtime="20201112 12:27:27.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022958069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:27.161" endtime="20201112 12:27:27.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.169" endtime="20201112 12:27:27.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.865" endtime="20201112 12:27:27.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.863" endtime="20201112 12:27:27.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.176" level="INFO">${RESULT} = [{'time': 0.0230185, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.043099999999968e-05, 'source_diff': 6.043099999999968e-05}, {'time': 0.023079333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:27.172" endtime="20201112 12:27:27.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.189" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:27.177" endtime="20201112 12:27:27.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.193" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.192" endtime="20201112 12:27:27.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.196" level="INFO">VALUE: [6.043099999999968e-05, 5.376400000000128e-05, 5.659700000000198e-05, 5.087500000000231e-05, 5.658299999999894e-05, 5.273600000000114e-05, 5.3693999999999964e-05, 5.276400000000028e-05, 5.080600000000046e-05, 5.183300000000113e-05, 5.272200000000157e-05, 5.369500000000291e-05, 5.3735999999998674e-05, 5.080600000000046e-05, 5.3693999999999964e-05, 5.183300000000113e-05, 5.181899999999809e-05, 5.555600000000174e-05, 5.176399999999928e-05, 5.079200000000089e-05, 5.370899999999901e-05, 5.182000000000103e-05, 5.172200000000057e-05, 5.273600000000114e-05, 5.373600000000214e-05, 5.461100000000302e-05, 5.7542000000000704e-05, 5.088899999999841e-05, 5.176399999999928e-05, 5.180500000000199e-05, 5.3666000000000824e-05, 5.65549999999998e-05, 5.077800000000132e-05, 5.4665999999998355e-05, 5.3680000000000394e-05, 5.554099999999923e-05, 5.558299999999794e-05, 5.658299999999894e-05, 5.5513999999999564e-05, 5.369499999999944e-05, 5.4694000000000964e-05, 5.461199999999902e-05, 5.561100000000055e-05, 5.179199999999842e-05, 5.659699999999851e-05, 5.276400000000028e-05, 5.088900000000188e-05, 5.566699999999883e-05, 5.559700000000098e-05, 5.46670000000013e-05]</msg>
<status status="PASS" starttime="20201112 12:27:27.195" endtime="20201112 12:27:27.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.190" endtime="20201112 12:27:27.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.199" endtime="20201112 12:27:27.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.203" endtime="20201112 12:27:27.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.201" endtime="20201112 12:27:27.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.198" endtime="20201112 12:27:27.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.827" endtime="20201112 12:27:27.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.827" endtime="20201112 12:27:27.224"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.232" endtime="20201112 12:27:27.253"></status>
</kw>
<msg timestamp="20201112 12:27:27.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.231" endtime="20201112 12:27:27.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.254" endtime="20201112 12:27:27.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.257" endtime="20201112 12:27:27.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.228" endtime="20201112 12:27:27.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.226" endtime="20201112 12:27:27.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.266" endtime="20201112 12:27:27.552"></status>
</kw>
<msg timestamp="20201112 12:27:27.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.264" endtime="20201112 12:27:27.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.556" endtime="20201112 12:27:27.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.565" endtime="20201112 12:27:27.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.262" endtime="20201112 12:27:27.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.260" endtime="20201112 12:27:27.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.571" level="INFO">${RESULT} = [{'time': 0.022779639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.13750000000024e-05, 'source_diff': 6.13750000000024e-05}, {'time': 0.022840778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:27.568" endtime="20201112 12:27:27.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.585" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:27.572" endtime="20201112 12:27:27.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.589" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.588" endtime="20201112 12:27:27.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.591" level="INFO">VALUE: [6.13750000000024e-05, 5.457000000000031e-05, 5.3749999999998244e-05, 5.270900000000148e-05, 5.373700000000162e-05, 5.077800000000132e-05, 5.662500000000112e-05, 5.554099999999923e-05, 5.663900000000069e-05, 5.662500000000112e-05, 5.2708000000002e-05, 5.3735999999998674e-05, 5.277799999999985e-05, 5.081900000000056e-05, 5.1707999999997534e-05, 5.086099999999927e-05, 5.5665999999999355e-05, 5.55549999999988e-05, 5.087500000000231e-05, 5.3735999999998674e-05, 5.181899999999809e-05, 5.5541999999998704e-05, 5.280499999999952e-05, 5.1708000000001e-05, 5.184800000000017e-05, 5.362500000000159e-05, 5.3777999999997383e-05, 5.463899999999869e-05, 5.3763999999997814e-05, 5.18340000000006e-05, 5.6485999999997955e-05, 5.4722000000000104e-05, 5.173600000000014e-05, 4.991600000000054e-05, 5.555600000000174e-05, 5.663900000000069e-05, 5.562500000000012e-05, 5.558400000000088e-05, 5.3749999999998244e-05, 5.659699999999851e-05, 5.558400000000088e-05, 5.180499999999852e-05, 5.265299999999973e-05, 5.4694000000000964e-05, 5.184800000000017e-05, 5.556899999999837e-05, 5.183299999999766e-05, 5.659699999999851e-05, 5.565299999999926e-05, 5.172300000000005e-05]</msg>
<status status="PASS" starttime="20201112 12:27:27.590" endtime="20201112 12:27:27.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.585" endtime="20201112 12:27:27.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.595" endtime="20201112 12:27:27.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.599" endtime="20201112 12:27:27.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.597" endtime="20201112 12:27:27.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.593" endtime="20201112 12:27:27.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.225" endtime="20201112 12:27:27.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.224" endtime="20201112 12:27:27.619"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.628" endtime="20201112 12:27:27.654"></status>
</kw>
<msg timestamp="20201112 12:27:27.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.627" endtime="20201112 12:27:27.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.656" endtime="20201112 12:27:27.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.658" endtime="20201112 12:27:27.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.624" endtime="20201112 12:27:27.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.622" endtime="20201112 12:27:27.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.667" endtime="20201112 12:27:27.954"></status>
</kw>
<msg timestamp="20201112 12:27:27.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023806222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023853292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.666" endtime="20201112 12:27:27.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023806222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023853292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.958" endtime="20201112 12:27:27.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.967" endtime="20201112 12:27:27.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.663" endtime="20201112 12:27:27.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.662" endtime="20201112 12:27:27.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.973" level="INFO">${RESULT} = [{'time': 0.023853292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.707000000000322e-05, 'source_diff': 4.707000000000322e-05}, {'time': 0.023914319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:27.970" endtime="20201112 12:27:27.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.987" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:27.974" endtime="20201112 12:27:27.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.991" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.990" endtime="20201112 12:27:27.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.994" level="INFO">VALUE: [4.707000000000322e-05, 5.173600000000014e-05, 5.084700000000317e-05, 5.369499999999944e-05, 5.7569999999999844e-05, 5.275000000000071e-05, 5.4693999999997495e-05, 5.36670000000003e-05, 5.179200000000189e-05, 5.46809999999974e-05, 5.654100000000023e-05, 5.275000000000071e-05, 5.2721999999998104e-05, 5.276400000000028e-05, 5.272200000000157e-05, 5.180599999999799e-05, 4.995799999999925e-05, 5.6528000000000134e-05, 5.279099999999995e-05, 5.465299999999826e-05, 5.281900000000256e-05, 5.459699999999998e-05, 5.558300000000141e-05, 5.280600000000246e-05, 5.376299999999834e-05, 5.2708000000002e-05, 5.083300000000013e-05, 5.3680000000000394e-05, 5.181900000000156e-05, 5.08339999999996e-05, 5.466699999999783e-05, 5.556900000000184e-05, 5.088899999999841e-05, 5.5665999999999355e-05, 5.469500000000044e-05, 5.375000000000171e-05, 5.262500000000059e-05, 5.562500000000012e-05, 5.462499999999912e-05, 5.7569999999999844e-05, 5.656899999999937e-05, 5.18340000000006e-05, 5.2735999999997674e-05, 5.186100000000027e-05, 5.6541999999999704e-05, 5.279099999999995e-05, 5.36670000000003e-05, 5.4707999999997065e-05, 5.188899999999941e-05, 5.555500000000227e-05]</msg>
<status status="PASS" starttime="20201112 12:27:27.992" endtime="20201112 12:27:27.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.987" endtime="20201112 12:27:27.995"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.997" endtime="20201112 12:27:27.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.001" endtime="20201112 12:27:28.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.999" endtime="20201112 12:27:28.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.996" endtime="20201112 12:27:28.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.620" endtime="20201112 12:27:28.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.620" endtime="20201112 12:27:28.022"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.030" endtime="20201112 12:27:28.052"></status>
</kw>
<msg timestamp="20201112 12:27:28.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.029" endtime="20201112 12:27:28.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.054" endtime="20201112 12:27:28.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.056" endtime="20201112 12:27:28.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.026" endtime="20201112 12:27:28.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.024" endtime="20201112 12:27:28.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.065" endtime="20201112 12:27:28.352"></status>
</kw>
<msg timestamp="20201112 12:27:28.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023630778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023675931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.064" endtime="20201112 12:27:28.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023630778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023675931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.356" endtime="20201112 12:27:28.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.364" endtime="20201112 12:27:28.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.061" endtime="20201112 12:27:28.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.060" endtime="20201112 12:27:28.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.371" level="INFO">${RESULT} = [{'time': 0.023675931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5152999999999166e-05, 'source_diff': 4.5152999999999166e-05}, {'time': 0.023736444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:28.368" endtime="20201112 12:27:28.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.384" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:28.372" endtime="20201112 12:27:28.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.389" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.388" endtime="20201112 12:27:28.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.391" level="INFO">VALUE: [4.5152999999999166e-05, 5.362499999999812e-05, 5.656899999999937e-05, 5.476400000000228e-05, 5.5555999999998273e-05, 5.277799999999985e-05, 5.174999999999971e-05, 5.658400000000188e-05, 5.3679999999996925e-05, 5.566699999999883e-05, 5.182000000000103e-05, 5.459799999999945e-05, 5.561100000000055e-05, 5.46670000000013e-05, 5.3735999999998674e-05, 5.076399999999828e-05, 5.65549999999998e-05, 5.183300000000113e-05, 5.6528000000000134e-05, 5.280599999999899e-05, 5.55549999999988e-05, 5.086099999999927e-05, 5.6528000000000134e-05, 5.180600000000146e-05, 5.5666000000002824e-05, 5.172200000000057e-05, 5.182000000000103e-05, 5.565300000000273e-05, 5.1707999999997534e-05, 5.658399999999841e-05, 5.087500000000231e-05, 5.074999999999871e-05, 5.4763999999998814e-05, 5.076299999999881e-05, 5.4693999999997495e-05, 5.275000000000071e-05, 5.661099999999808e-05, 5.461099999999955e-05, 5.565299999999926e-05, 5.566699999999883e-05, 5.0901999999998504e-05, 5.6485999999997955e-05, 5.468100000000087e-05, 5.565299999999926e-05, 5.459699999999998e-05, 5.563899999999969e-05, 5.459699999999998e-05, 5.0887999999998934e-05, 5.076400000000175e-05, 5.565300000000273e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.390" endtime="20201112 12:27:28.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.385" endtime="20201112 12:27:28.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.399" endtime="20201112 12:27:28.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.402" endtime="20201112 12:27:28.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.400" endtime="20201112 12:27:28.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.397" endtime="20201112 12:27:28.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.022" endtime="20201112 12:27:28.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.022" endtime="20201112 12:27:28.423"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.432" endtime="20201112 12:27:28.454"></status>
</kw>
<msg timestamp="20201112 12:27:28.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.430" endtime="20201112 12:27:28.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.456" endtime="20201112 12:27:28.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.458" endtime="20201112 12:27:28.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.427" endtime="20201112 12:27:28.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.425" endtime="20201112 12:27:28.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.467" endtime="20201112 12:27:28.754"></status>
</kw>
<msg timestamp="20201112 12:27:28.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024337, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024382153, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:28.466" endtime="20201112 12:27:28.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024337, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024382153, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:28.758" endtime="20201112 12:27:28.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.767" endtime="20201112 12:27:28.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.463" endtime="20201112 12:27:28.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.461" endtime="20201112 12:27:28.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.773" level="INFO">${RESULT} = [{'time': 0.024382153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5152999999999166e-05, 'source_diff': 4.5152999999999166e-05}, {'time': 0.024443417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:28.770" endtime="20201112 12:27:28.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.787" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:28.774" endtime="20201112 12:27:28.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.791" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.790" endtime="20201112 12:27:28.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.794" level="INFO">VALUE: [4.5152999999999166e-05, 5.659799999999798e-05, 5.565300000000273e-05, 5.280599999999899e-05, 5.275000000000071e-05, 5.177799999999885e-05, 5.765300000000126e-05, 5.187499999999984e-05, 5.559700000000098e-05, 5.086099999999927e-05, 5.3749999999998244e-05, 5.284699999999823e-05, 5.3735999999998674e-05, 5.469499999999697e-05, 5.190299999999898e-05, 5.277700000000038e-05, 5.662500000000112e-05, 5.3721999999999104e-05, 5.661100000000155e-05, 5.55549999999988e-05, 5.177800000000232e-05, 5.183300000000113e-05, 5.0901999999998504e-05, 5.373600000000214e-05, 5.65549999999998e-05, 5.093000000000111e-05, 5.465300000000173e-05, 5.658299999999894e-05, 5.4694000000000964e-05, 5.472299999999958e-05, 5.276400000000028e-05, 5.183300000000113e-05, 5.277799999999985e-05, 5.277799999999985e-05, 4.991700000000002e-05, 5.183300000000113e-05, 5.087500000000231e-05, 5.077800000000132e-05, 5.087500000000231e-05, 5.375000000000171e-05, 5.0915999999998074e-05, 5.65549999999998e-05, 5.0887999999998934e-05, 5.375000000000171e-05, 5.4679999999997925e-05, 5.663900000000069e-05, 5.184699999999723e-05, 5.18340000000006e-05, 5.077700000000185e-05, 5.658300000000241e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.792" endtime="20201112 12:27:28.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.788" endtime="20201112 12:27:28.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.797" endtime="20201112 12:27:28.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.801" endtime="20201112 12:27:28.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.799" endtime="20201112 12:27:28.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.796" endtime="20201112 12:27:28.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.424" endtime="20201112 12:27:28.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.423" endtime="20201112 12:27:28.821"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.830" endtime="20201112 12:27:28.852"></status>
</kw>
<msg timestamp="20201112 12:27:28.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.829" endtime="20201112 12:27:28.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.853" endtime="20201112 12:27:28.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.856" endtime="20201112 12:27:28.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.826" endtime="20201112 12:27:28.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.824" endtime="20201112 12:27:28.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.865" endtime="20201112 12:27:29.152"></status>
</kw>
<msg timestamp="20201112 12:27:29.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022586903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.863" endtime="20201112 12:27:29.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022586903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.156" endtime="20201112 12:27:29.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.164" endtime="20201112 12:27:29.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.861" endtime="20201112 12:27:29.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.859" endtime="20201112 12:27:29.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.171" level="INFO">${RESULT} = [{'time': 0.022586903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.512499999999921e-05, 'source_diff': 6.512499999999921e-05}, {'time': 0.022648236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:29.168" endtime="20201112 12:27:29.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.184" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:29.172" endtime="20201112 12:27:29.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.189" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.188" endtime="20201112 12:27:29.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.191" level="INFO">VALUE: [6.512499999999921e-05, 5.3721999999999104e-05, 5.661199999999755e-05, 5.079100000000142e-05, 5.377800000000085e-05, 5.559699999999751e-05, 5.079099999999795e-05, 5.461200000000249e-05, 5.279199999999942e-05, 5.463899999999869e-05, 5.280599999999899e-05, 5.6528000000000134e-05, 5.281999999999856e-05, 5.173600000000014e-05, 5.279199999999942e-05, 5.6500000000000994e-05, 5.363900000000116e-05, 5.569499999999797e-05, 5.652700000000066e-05, 5.4722000000000104e-05, 5.459799999999945e-05, 5.279199999999942e-05, 5.461099999999955e-05, 5.088900000000188e-05, 5.5541999999998704e-05, 5.280499999999952e-05, 5.5527999999999134e-05, 5.569499999999797e-05, 5.193100000000159e-05, 5.2707999999998534e-05, 5.465299999999826e-05, 5.456900000000084e-05, 5.183300000000113e-05, 5.359699999999898e-05, 5.375000000000171e-05, 4.983299999999913e-05, 5.376400000000128e-05, 5.2679999999999394e-05, 5.659700000000198e-05, 5.561100000000055e-05, 5.270900000000148e-05, 5.086099999999927e-05, 5.079100000000142e-05, 5.662500000000112e-05, 5.459799999999945e-05, 5.272200000000157e-05, 5.568100000000187e-05, 5.459699999999998e-05, 5.3763999999997814e-05, 5.556899999999837e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.190" endtime="20201112 12:27:29.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.185" endtime="20201112 12:27:29.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.195" endtime="20201112 12:27:29.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.198" endtime="20201112 12:27:29.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.197" endtime="20201112 12:27:29.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.193" endtime="20201112 12:27:29.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.822" endtime="20201112 12:27:29.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.822" endtime="20201112 12:27:29.219"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.228" endtime="20201112 12:27:29.247"></status>
</kw>
<msg timestamp="20201112 12:27:29.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.226" endtime="20201112 12:27:29.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.249" endtime="20201112 12:27:29.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.251" endtime="20201112 12:27:29.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.224" endtime="20201112 12:27:29.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.222" endtime="20201112 12:27:29.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.260" endtime="20201112 12:27:29.546"></status>
</kw>
<msg timestamp="20201112 12:27:29.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:29.259" endtime="20201112 12:27:29.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:29.551" endtime="20201112 12:27:29.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.559" endtime="20201112 12:27:29.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.256" endtime="20201112 12:27:29.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.254" endtime="20201112 12:27:29.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.565" level="INFO">${RESULT} = [{'time': 0.02182975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4693999999997495e-05, 'source_diff': 5.4693999999997495e-05}, {'time': 0.021890597, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:27:29.562" endtime="20201112 12:27:29.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.579" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:29.566" endtime="20201112 12:27:29.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.583" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.582" endtime="20201112 12:27:29.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.586" level="INFO">VALUE: [5.4693999999997495e-05, 5.4680000000001394e-05, 5.5694000000001964e-05, 5.269499999999844e-05, 5.5680000000002394e-05, 5.6638000000001215e-05, 5.4722000000000104e-05, 5.466699999999783e-05, 5.077800000000132e-05, 5.666699999999983e-05, 5.563899999999969e-05, 5.462499999999912e-05, 5.177799999999885e-05, 5.3721999999999104e-05, 5.661100000000155e-05, 5.65549999999998e-05, 5.275000000000071e-05, 5.090299999999798e-05, 5.6500000000000994e-05, 5.3707999999999534e-05, 5.562500000000012e-05, 5.662499999999765e-05, 5.3680000000000394e-05, 5.18340000000006e-05, 5.380599999999999e-05, 5.174999999999971e-05, 5.084799999999917e-05, 5.181899999999809e-05, 5.6514000000000564e-05, 5.656899999999937e-05, 5.081900000000056e-05, 5.183300000000113e-05, 5.556899999999837e-05, 5.086099999999927e-05, 5.079100000000142e-05, 5.562500000000012e-05, 5.280599999999899e-05, 5.458399999999988e-05, 5.565299999999926e-05, 5.088899999999841e-05, 5.5679999999998925e-05, 5.365300000000073e-05, 5.2735999999997674e-05, 5.3651999999997785e-05, 5.086099999999927e-05, 5.4735999999999674e-05, 5.169499999999744e-05, 5.375000000000171e-05, 5.176399999999928e-05, 5.56809999999984e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.584" endtime="20201112 12:27:29.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.580" endtime="20201112 12:27:29.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.589" endtime="20201112 12:27:29.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.593" endtime="20201112 12:27:29.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.591" endtime="20201112 12:27:29.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.588" endtime="20201112 12:27:29.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.220" endtime="20201112 12:27:29.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.220" endtime="20201112 12:27:29.614"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.622" endtime="20201112 12:27:29.645"></status>
</kw>
<msg timestamp="20201112 12:27:29.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.621" endtime="20201112 12:27:29.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.647" endtime="20201112 12:27:29.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.649" endtime="20201112 12:27:29.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.618" endtime="20201112 12:27:29.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.616" endtime="20201112 12:27:29.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.658" endtime="20201112 12:27:29.945"></status>
</kw>
<msg timestamp="20201112 12:27:29.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02407225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024125042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:29.657" endtime="20201112 12:27:29.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02407225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024125042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:29.949" endtime="20201112 12:27:29.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.958" endtime="20201112 12:27:29.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.654" endtime="20201112 12:27:29.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.652" endtime="20201112 12:27:29.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.965" level="INFO">${RESULT} = [{'time': 0.024125042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.279199999999942e-05, 'source_diff': 5.279199999999942e-05}, {'time': 0.024185292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:29.961" endtime="20201112 12:27:29.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.978" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:29.966" endtime="20201112 12:27:29.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.983" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.982" endtime="20201112 12:27:29.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.986" level="INFO">VALUE: [5.279199999999942e-05, 5.554200000000217e-05, 5.661100000000155e-05, 5.174999999999971e-05, 5.087499999999884e-05, 5.181900000000156e-05, 5.170900000000048e-05, 5.172200000000057e-05, 5.093000000000111e-05, 5.169400000000143e-05, 5.087499999999884e-05, 5.082000000000003e-05, 5.172200000000057e-05, 5.565300000000273e-05, 5.176400000000275e-05, 5.4722000000000104e-05, 5.180599999999799e-05, 5.356899999999984e-05, 5.5665999999999355e-05, 5.358399999999888e-05, 5.4722000000000104e-05, 5.280499999999952e-05, 5.270899999999801e-05, 5.279199999999942e-05, 5.6528000000000134e-05, 5.4708000000000534e-05, 5.555600000000174e-05, 5.470900000000001e-05, 5.469500000000044e-05, 5.462499999999912e-05, 5.086099999999927e-05, 5.36670000000003e-05, 5.276400000000028e-05, 5.184699999999723e-05, 5.268099999999887e-05, 5.087500000000231e-05, 5.4637999999999215e-05, 5.087500000000231e-05, 5.7499999999998525e-05, 5.181899999999809e-05, 5.758299999999994e-05, 5.465300000000173e-05, 5.56809999999984e-05, 5.365299999999726e-05, 5.566699999999883e-05, 5.462500000000259e-05, 5.186100000000027e-05, 5.565299999999926e-05, 5.461099999999955e-05, 5.270899999999801e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.984" endtime="20201112 12:27:29.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.979" endtime="20201112 12:27:29.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.989" endtime="20201112 12:27:29.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.993" endtime="20201112 12:27:30.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.992" endtime="20201112 12:27:30.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.988" endtime="20201112 12:27:30.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.615" endtime="20201112 12:27:30.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.614" endtime="20201112 12:27:30.015"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.023" endtime="20201112 12:27:30.048"></status>
</kw>
<msg timestamp="20201112 12:27:30.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.022" endtime="20201112 12:27:30.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.049" endtime="20201112 12:27:30.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.051" endtime="20201112 12:27:30.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.019" endtime="20201112 12:27:30.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.017" endtime="20201112 12:27:30.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.060" endtime="20201112 12:27:30.348"></status>
</kw>
<msg timestamp="20201112 12:27:30.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025325736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025412056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.059" endtime="20201112 12:27:30.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025325736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025412056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.352" endtime="20201112 12:27:30.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.361" endtime="20201112 12:27:30.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.056" endtime="20201112 12:27:30.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.055" endtime="20201112 12:27:30.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.367" level="INFO">${RESULT} = [{'time': 0.025412056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.631999999999737e-05, 'source_diff': 8.631999999999737e-05}, {'time': 0.025503194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:30.364" endtime="20201112 12:27:30.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.381" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:30.368" endtime="20201112 12:27:30.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.385" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.384" endtime="20201112 12:27:30.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.388" level="INFO">VALUE: [8.631999999999737e-05, 8.523599999999895e-05, 8.53050000000008e-05, 8.722300000000086e-05, 8.437500000000112e-05, 8.151400000000128e-05, 8.426399999999709e-05, 8.341699999999883e-05, 8.137499999999812e-05, 8.723599999999748e-05, 8.525000000000199e-05, 8.619500000000072e-05, 8.624999999999952e-05, 8.619500000000072e-05, 8.53189999999969e-05, 8.530600000000027e-05, 8.436099999999808e-05, 8.622200000000038e-05, 8.129200000000017e-05, 8.630600000000127e-05, 8.137500000000158e-05, 8.520899999999929e-05, 8.24720000000001e-05, 8.427800000000013e-05, 8.43330000000024e-05, 8.627800000000213e-05, 8.43469999999985e-05, 8.623699999999943e-05, 8.63059999999978e-05, 8.620800000000081e-05, 8.150000000000171e-05, 8.423699999999743e-05, 8.722199999999791e-05, 8.248599999999967e-05, 8.438900000000069e-05, 8.432000000000231e-05, 8.809799999999826e-05, 8.633400000000041e-05, 8.618100000000115e-05, 8.151399999999781e-05, 8.14719999999991e-05, 8.434700000000198e-05, 8.530600000000027e-05, 8.437500000000112e-05, 8.725000000000052e-05, 8.138900000000115e-05, 8.631900000000137e-05, 8.245800000000053e-05, 8.427800000000013e-05, 8.14719999999991e-05]</msg>
<status status="PASS" starttime="20201112 12:27:30.386" endtime="20201112 12:27:30.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.381" endtime="20201112 12:27:30.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.391" endtime="20201112 12:27:30.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.395" endtime="20201112 12:27:30.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.393" endtime="20201112 12:27:30.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.389" endtime="20201112 12:27:30.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.016" endtime="20201112 12:27:30.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.015" endtime="20201112 12:27:30.416"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.424" endtime="20201112 12:27:30.444"></status>
</kw>
<msg timestamp="20201112 12:27:30.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.423" endtime="20201112 12:27:30.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.446" endtime="20201112 12:27:30.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.448" endtime="20201112 12:27:30.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.420" endtime="20201112 12:27:30.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.418" endtime="20201112 12:27:30.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.457" endtime="20201112 12:27:30.744"></status>
</kw>
<msg timestamp="20201112 12:27:30.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021080694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021175389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.456" endtime="20201112 12:27:30.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021080694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021175389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.748" endtime="20201112 12:27:30.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.756" endtime="20201112 12:27:30.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.453" endtime="20201112 12:27:30.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.451" endtime="20201112 12:27:30.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.763" level="INFO">${RESULT} = [{'time': 0.021175389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.469499999999881e-05, 'source_diff': 9.469499999999881e-05}, {'time': 0.021266792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:30.759" endtime="20201112 12:27:30.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.776" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:30.764" endtime="20201112 12:27:30.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.780" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.779" endtime="20201112 12:27:30.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.783" level="INFO">VALUE: [9.469499999999881e-05, 8.433399999999841e-05, 8.338899999999969e-05, 8.706999999999812e-05, 8.523699999999843e-05, 8.519400000000024e-05, 8.340299999999926e-05, 8.813900000000097e-05, 8.32919999999987e-05, 8.33330000000014e-05, 8.136099999999855e-05, 8.431899999999937e-05, 8.43469999999985e-05, 8.61669999999981e-05, 8.530600000000027e-05, 8.430600000000274e-05, 8.331900000000184e-05, 8.713800000000049e-05, 8.43469999999985e-05, 8.237499999999912e-05, 8.43049999999998e-05, 8.14170000000003e-05, 8.718000000000267e-05, 8.716599999999963e-05, 8.711099999999736e-05, 8.237499999999912e-05, 8.231900000000084e-05, 8.333400000000088e-05, 8.426300000000109e-05, 8.234699999999998e-05, 8.422199999999838e-05, 8.618099999999768e-05, 8.619399999999777e-05, 8.426400000000056e-05, 8.530600000000027e-05, 8.229099999999823e-05, 8.622300000000332e-05, 8.236099999999955e-05, 8.525000000000199e-05, 8.241600000000182e-05, 8.237499999999912e-05, 8.236099999999955e-05, 8.242999999999792e-05, 8.436100000000155e-05, 8.425000000000099e-05, 8.143099999999986e-05, 8.237499999999912e-05, 8.619400000000124e-05, 8.711099999999736e-05, 8.331999999999784e-05]</msg>
<status status="PASS" starttime="20201112 12:27:30.782" endtime="20201112 12:27:30.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.777" endtime="20201112 12:27:30.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.787" endtime="20201112 12:27:30.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.790" endtime="20201112 12:27:30.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.788" endtime="20201112 12:27:30.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.785" endtime="20201112 12:27:30.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.417" endtime="20201112 12:27:30.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.416" endtime="20201112 12:27:30.811"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.819" endtime="20201112 12:27:30.841"></status>
</kw>
<msg timestamp="20201112 12:27:30.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.818" endtime="20201112 12:27:30.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.842" endtime="20201112 12:27:30.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.845" endtime="20201112 12:27:30.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.815" endtime="20201112 12:27:30.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.813" endtime="20201112 12:27:30.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.854" endtime="20201112 12:27:31.140"></status>
</kw>
<msg timestamp="20201112 12:27:31.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.852" endtime="20201112 12:27:31.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.145" endtime="20201112 12:27:31.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.153" endtime="20201112 12:27:31.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.850" endtime="20201112 12:27:31.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.848" endtime="20201112 12:27:31.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.159" level="INFO">${RESULT} = [{'time': 0.022828236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.870799999999944e-05, 'source_diff': 9.870799999999944e-05}, {'time': 0.022920097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:31.156" endtime="20201112 12:27:31.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.173" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:31.160" endtime="20201112 12:27:31.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.177" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.176" endtime="20201112 12:27:31.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.180" level="INFO">VALUE: [9.870799999999944e-05, 8.436100000000155e-05, 8.626399999999909e-05, 8.140300000000072e-05, 8.629199999999823e-05, 8.523600000000242e-05, 8.441699999999983e-05, 8.14170000000003e-05, 8.340199999999978e-05, 8.629100000000223e-05, 8.234799999999945e-05, 8.627700000000266e-05, 8.338800000000021e-05, 8.334700000000098e-05, 8.240299999999826e-05, 8.622200000000038e-05, 8.244400000000096e-05, 8.331999999999784e-05, 8.624999999999952e-05, 8.245800000000053e-05, 8.618100000000115e-05, 8.150000000000171e-05, 8.136099999999855e-05, 8.720900000000129e-05, 8.440300000000026e-05, 8.24720000000001e-05, 8.423599999999795e-05, 8.344400000000196e-05, 8.138899999999769e-05, 8.627799999999866e-05, 8.047299999999757e-05, 8.620800000000081e-05, 8.438900000000069e-05, 8.715200000000006e-05, 8.14719999999991e-05, 8.61799999999982e-05, 8.145799999999953e-05, 8.713899999999997e-05, 8.723600000000095e-05, 8.144399999999996e-05, 8.43469999999985e-05, 8.1458999999999e-05, 8.240299999999826e-05, 8.715200000000006e-05, 8.629199999999823e-05, 8.530499999999733e-05, 8.134699999999898e-05, 8.531999999999984e-05, 8.427800000000013e-05, 8.245800000000053e-05]</msg>
<status status="PASS" starttime="20201112 12:27:31.178" endtime="20201112 12:27:31.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.173" endtime="20201112 12:27:31.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.183" endtime="20201112 12:27:31.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.187" endtime="20201112 12:27:31.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.185" endtime="20201112 12:27:31.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.182" endtime="20201112 12:27:31.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.812" endtime="20201112 12:27:31.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.811" endtime="20201112 12:27:31.208"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.216" endtime="20201112 12:27:31.237"></status>
</kw>
<msg timestamp="20201112 12:27:31.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.215" endtime="20201112 12:27:31.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.239" endtime="20201112 12:27:31.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.241" endtime="20201112 12:27:31.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.212" endtime="20201112 12:27:31.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.210" endtime="20201112 12:27:31.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.250" endtime="20201112 12:27:31.536"></status>
</kw>
<msg timestamp="20201112 12:27:31.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.249" endtime="20201112 12:27:31.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.540" endtime="20201112 12:27:31.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.549" endtime="20201112 12:27:31.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.246" endtime="20201112 12:27:31.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.245" endtime="20201112 12:27:31.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.555" level="INFO">${RESULT} = [{'time': 0.022894986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.719399999999877e-05, 'source_diff': 8.719399999999877e-05}, {'time': 0.022986694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:31.552" endtime="20201112 12:27:31.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.569" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:31.556" endtime="20201112 12:27:31.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.573" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.572" endtime="20201112 12:27:31.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.576" level="INFO">VALUE: [8.719399999999877e-05, 8.629099999999876e-05, 8.143000000000039e-05, 8.715299999999954e-05, 8.531900000000037e-05, 8.24720000000001e-05, 8.240299999999826e-05, 8.331900000000184e-05, 8.527700000000166e-05, 8.340299999999926e-05, 8.53059999999968e-05, 8.620800000000081e-05, 8.624999999999952e-05, 8.522199999999938e-05, 8.338900000000316e-05, 8.334700000000098e-05, 8.2459e-05, 8.526400000000156e-05, 8.331900000000184e-05, 8.044399999999896e-05, 8.24720000000001e-05, 8.438800000000121e-05, 8.34170000000023e-05, 8.148599999999867e-05, 8.147299999999857e-05, 8.619400000000124e-05, 8.533400000000288e-05, 8.619400000000124e-05, 8.149999999999824e-05, 8.334700000000098e-05, 8.440300000000026e-05, 8.149999999999824e-05, 8.43049999999998e-05, 8.151400000000128e-05, 8.326399999999956e-05, 8.533299999999994e-05, 8.244400000000096e-05, 8.42919999999997e-05, 8.530600000000027e-05, 8.336099999999708e-05, 8.241699999999783e-05, 8.42919999999997e-05, 8.244499999999697e-05, 8.526399999999809e-05, 8.719399999999877e-05, 8.71799999999992e-05, 8.630499999999833e-05, 8.238800000000268e-05, 8.531999999999984e-05, 8.244400000000096e-05]</msg>
<status status="PASS" starttime="20201112 12:27:31.574" endtime="20201112 12:27:31.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.569" endtime="20201112 12:27:31.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.579" endtime="20201112 12:27:31.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.583" endtime="20201112 12:27:31.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.581" endtime="20201112 12:27:31.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.577" endtime="20201112 12:27:31.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.209" endtime="20201112 12:27:31.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.208" endtime="20201112 12:27:31.603"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.612" endtime="20201112 12:27:31.635"></status>
</kw>
<msg timestamp="20201112 12:27:31.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.611" endtime="20201112 12:27:31.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.637" endtime="20201112 12:27:31.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.639" endtime="20201112 12:27:31.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.608" endtime="20201112 12:27:31.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.606" endtime="20201112 12:27:31.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.648" endtime="20201112 12:27:31.936"></status>
</kw>
<msg timestamp="20201112 12:27:31.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023888222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023969792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.647" endtime="20201112 12:27:31.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023888222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023969792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.941" endtime="20201112 12:27:31.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.949" endtime="20201112 12:27:31.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.644" endtime="20201112 12:27:31.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.642" endtime="20201112 12:27:31.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.956" level="INFO">${RESULT} = [{'time': 0.023969792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.156999999999956e-05, 'source_diff': 8.156999999999956e-05}, {'time': 0.02406125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:31.952" endtime="20201112 12:27:31.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.014" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:31.957" endtime="20201112 12:27:32.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.019" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.018" endtime="20201112 12:27:32.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.022" level="INFO">VALUE: [8.156999999999956e-05, 8.715299999999954e-05, 8.340299999999926e-05, 8.231900000000084e-05, 8.147300000000204e-05, 8.151399999999781e-05, 8.43330000000024e-05, 8.522299999999886e-05, 8.627799999999866e-05, 8.43049999999998e-05, 8.53050000000008e-05, 8.433299999999894e-05, 8.340300000000272e-05, 8.34170000000023e-05, 8.429200000000317e-05, 8.34170000000023e-05, 8.426400000000056e-05, 8.437500000000112e-05, 8.522199999999938e-05, 8.431899999999937e-05, 8.53050000000008e-05, 8.433399999999841e-05, 8.244499999999697e-05, 8.140300000000072e-05, 8.148600000000214e-05, 8.148600000000214e-05, 8.234699999999998e-05, 8.63189999999979e-05, 8.334700000000098e-05, 8.33049999999988e-05, 8.340299999999926e-05, 8.626399999999909e-05, 8.336100000000055e-05, 8.524999999999852e-05, 8.736099999999761e-05, 8.813900000000097e-05, 8.151400000000128e-05, 8.709699999999779e-05, 8.24720000000001e-05, 8.442999999999992e-05, 8.138900000000115e-05, 8.331999999999784e-05, 8.615299999999854e-05, 8.341600000000282e-05, 8.618099999999768e-05, 8.248599999999967e-05, 8.424999999999752e-05, 8.144399999999996e-05, 8.722199999999791e-05, 8.33330000000014e-05]</msg>
<status status="PASS" starttime="20201112 12:27:32.020" endtime="20201112 12:27:32.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.015" endtime="20201112 12:27:32.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.026" endtime="20201112 12:27:32.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.029" endtime="20201112 12:27:32.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.028" endtime="20201112 12:27:32.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.024" endtime="20201112 12:27:32.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.604" endtime="20201112 12:27:32.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.604" endtime="20201112 12:27:32.050"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.059" endtime="20201112 12:27:32.086"></status>
</kw>
<msg timestamp="20201112 12:27:32.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.058" endtime="20201112 12:27:32.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.088" endtime="20201112 12:27:32.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.090" endtime="20201112 12:27:32.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.054" endtime="20201112 12:27:32.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.052" endtime="20201112 12:27:32.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.099" endtime="20201112 12:27:32.385"></status>
</kw>
<msg timestamp="20201112 12:27:32.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024537014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024608917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.098" endtime="20201112 12:27:32.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024537014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024608917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.389" endtime="20201112 12:27:32.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.397" endtime="20201112 12:27:32.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.095" endtime="20201112 12:27:32.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.094" endtime="20201112 12:27:32.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.404" level="INFO">${RESULT} = [{'time': 0.024608917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.190300000000163e-05, 'source_diff': 7.190300000000163e-05}, {'time': 0.024700403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:32.401" endtime="20201112 12:27:32.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.417" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:32.405" endtime="20201112 12:27:32.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.422" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.421" endtime="20201112 12:27:32.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.424" level="INFO">VALUE: [7.190300000000163e-05, 8.619500000000072e-05, 8.623599999999995e-05, 8.525000000000199e-05, 8.23330000000004e-05, 8.530600000000027e-05, 8.805599999999955e-05, 8.716700000000258e-05, 8.625000000000299e-05, 8.244500000000043e-05, 8.232000000000031e-05, 8.61249999999994e-05, 8.623699999999943e-05, 8.331899999999837e-05, 8.42370000000009e-05, 8.343100000000186e-05, 8.32919999999987e-05, 8.429200000000317e-05, 8.336100000000055e-05, 8.143099999999986e-05, 8.71250000000004e-05, 8.523600000000242e-05, 8.718099999999868e-05, 8.706899999999865e-05, 8.337499999999665e-05, 8.234699999999998e-05, 8.52920000000007e-05, 8.518100000000015e-05, 8.61669999999981e-05, 8.140200000000125e-05, 8.144399999999996e-05, 8.143000000000039e-05, 8.43049999999998e-05, 8.422199999999838e-05, 8.437500000000112e-05, 8.330599999999827e-05, 8.329200000000217e-05, 8.231899999999737e-05, 8.1458000000003e-05, 8.525000000000199e-05, 8.527800000000113e-05, 8.523599999999895e-05, 8.138900000000115e-05, 8.630499999999833e-05, 8.243000000000139e-05, 8.333400000000088e-05, 8.234699999999998e-05, 8.715299999999954e-05, 8.61799999999982e-05, 8.71250000000004e-05]</msg>
<status status="PASS" starttime="20201112 12:27:32.423" endtime="20201112 12:27:32.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.418" endtime="20201112 12:27:32.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.428" endtime="20201112 12:27:32.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.431" endtime="20201112 12:27:32.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.430" endtime="20201112 12:27:32.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.426" endtime="20201112 12:27:32.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.051" endtime="20201112 12:27:32.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.050" endtime="20201112 12:27:32.452"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.462" endtime="20201112 12:27:32.484"></status>
</kw>
<msg timestamp="20201112 12:27:32.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.460" endtime="20201112 12:27:32.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.485" endtime="20201112 12:27:32.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.488" endtime="20201112 12:27:32.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.457" endtime="20201112 12:27:32.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.455" endtime="20201112 12:27:32.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.497" endtime="20201112 12:27:32.783"></status>
</kw>
<msg timestamp="20201112 12:27:32.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024103333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024186708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.495" endtime="20201112 12:27:32.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024103333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024186708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.787" endtime="20201112 12:27:32.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.795" endtime="20201112 12:27:32.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.493" endtime="20201112 12:27:32.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.491" endtime="20201112 12:27:32.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.802" level="INFO">${RESULT} = [{'time': 0.024186708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.337500000000012e-05, 'source_diff': 8.337500000000012e-05}, {'time': 0.024277778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:32.799" endtime="20201112 12:27:32.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.815" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:32.803" endtime="20201112 12:27:32.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.820" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.819" endtime="20201112 12:27:32.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.822" level="INFO">VALUE: [8.337500000000012e-05, 8.520899999999929e-05, 8.329099999999923e-05, 8.150000000000171e-05, 8.341699999999883e-05, 8.708300000000169e-05, 8.244500000000043e-05, 8.144499999999943e-05, 8.338899999999969e-05, 8.522299999999886e-05, 8.137500000000158e-05, 8.720899999999782e-05, 8.337500000000012e-05, 8.331900000000184e-05, 8.609700000000026e-05, 8.722199999999791e-05, 8.425000000000099e-05, 8.140299999999726e-05, 8.430599999999927e-05, 8.23330000000004e-05, 8.336100000000055e-05, 8.524999999999852e-05, 8.516700000000058e-05, 8.14170000000003e-05, 8.148599999999867e-05, 8.520899999999929e-05, 8.71519999999966e-05, 8.14170000000003e-05, 8.719399999999877e-05, 8.237500000000259e-05, 8.337500000000012e-05, 8.526400000000156e-05, 8.815300000000054e-05, 8.238900000000215e-05, 8.236199999999902e-05, 8.237499999999912e-05, 8.147300000000204e-05, 8.708300000000169e-05, 8.243100000000086e-05, 8.71250000000004e-05, 8.23330000000004e-05, 8.61249999999994e-05, 8.718099999999868e-05, 8.61249999999994e-05, 8.433399999999841e-05, 8.716599999999963e-05, 8.423599999999795e-05, 8.618000000000167e-05, 8.327799999999913e-05, 8.149999999999824e-05]</msg>
<status status="PASS" starttime="20201112 12:27:32.821" endtime="20201112 12:27:32.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.816" endtime="20201112 12:27:32.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.826" endtime="20201112 12:27:32.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.829" endtime="20201112 12:27:32.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.828" endtime="20201112 12:27:32.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.824" endtime="20201112 12:27:32.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.453" endtime="20201112 12:27:32.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.453" endtime="20201112 12:27:32.850"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.859" endtime="20201112 12:27:32.880"></status>
</kw>
<msg timestamp="20201112 12:27:32.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.857" endtime="20201112 12:27:32.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.882" endtime="20201112 12:27:32.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.884" endtime="20201112 12:27:32.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.855" endtime="20201112 12:27:32.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.853" endtime="20201112 12:27:32.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.893" endtime="20201112 12:27:33.179"></status>
</kw>
<msg timestamp="20201112 12:27:33.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02303625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023123389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:32.892" endtime="20201112 12:27:33.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02303625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023123389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:33.183" endtime="20201112 12:27:33.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.191" endtime="20201112 12:27:33.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.889" endtime="20201112 12:27:33.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.888" endtime="20201112 12:27:33.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.198" level="INFO">${RESULT} = [{'time': 0.023123389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.713899999999997e-05, 'source_diff': 8.713899999999997e-05}, {'time': 0.023215319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:33.195" endtime="20201112 12:27:33.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.212" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:33.199" endtime="20201112 12:27:33.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.216" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:27:33.215" endtime="20201112 12:27:33.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.219" level="INFO">VALUE: [8.713899999999997e-05, 8.144399999999996e-05, 8.236099999999955e-05, 8.615299999999854e-05, 8.150000000000171e-05, 8.42370000000009e-05, 8.33330000000014e-05, 8.329200000000217e-05, 8.426400000000056e-05, 8.330599999999827e-05, 8.527800000000113e-05, 8.22910000000017e-05, 8.809699999999879e-05, 8.136099999999855e-05, 8.627799999999866e-05, 8.32780000000026e-05, 8.71669999999991e-05, 8.048600000000114e-05, 8.337500000000012e-05, 8.436200000000102e-05, 8.326399999999956e-05, 8.626399999999909e-05, 8.237500000000259e-05, 8.32780000000026e-05, 8.327799999999913e-05, 8.149999999999824e-05, 8.144399999999996e-05, 8.148599999999867e-05, 8.15269999999979e-05, 8.23330000000004e-05, 8.719399999999877e-05, 8.518100000000015e-05, 8.137499999999812e-05, 8.247299999999957e-05, 8.620800000000081e-05, 8.324999999999999e-05, 8.525000000000199e-05, 8.140300000000072e-05, 8.33469999999975e-05, 8.244500000000043e-05, 8.530600000000027e-05, 8.616599999999863e-05, 8.236100000000302e-05, 8.720900000000129e-05, 8.334700000000098e-05, 8.618000000000167e-05, 8.7153000000003e-05, 8.531999999999984e-05, 8.148699999999814e-05, 8.713800000000049e-05]</msg>
<status status="PASS" starttime="20201112 12:27:33.217" endtime="20201112 12:27:33.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.212" endtime="20201112 12:27:33.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.222" endtime="20201112 12:27:33.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.226" endtime="20201112 12:27:33.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.224" endtime="20201112 12:27:33.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.221" endtime="20201112 12:27:33.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.851" endtime="20201112 12:27:33.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.851" endtime="20201112 12:27:33.247"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.255" endtime="20201112 12:27:33.279"></status>
</kw>
<msg timestamp="20201112 12:27:33.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.254" endtime="20201112 12:27:33.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.280" endtime="20201112 12:27:33.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.283" endtime="20201112 12:27:33.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.251" endtime="20201112 12:27:33.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.249" endtime="20201112 12:27:33.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.292" endtime="20201112 12:27:33.579"></status>
</kw>
<msg timestamp="20201112 12:27:33.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023632069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023709736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.291" endtime="20201112 12:27:33.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023632069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023709736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.583" endtime="20201112 12:27:33.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.591" endtime="20201112 12:27:33.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.288" endtime="20201112 12:27:33.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.286" endtime="20201112 12:27:33.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.598" level="INFO">${RESULT} = [{'time': 0.023709736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.766700000000001e-05, 'source_diff': 7.766700000000001e-05}, {'time': 0.023800986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:33.594" endtime="20201112 12:27:33.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.612" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:33.599" endtime="20201112 12:27:33.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.617" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:27:33.616" endtime="20201112 12:27:33.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.619" level="INFO">VALUE: [7.766700000000001e-05, 8.327799999999913e-05, 8.244500000000043e-05, 8.23330000000004e-05, 8.524999999999852e-05, 8.419399999999924e-05, 8.623599999999995e-05, 8.619500000000072e-05, 8.245800000000053e-05, 8.337500000000012e-05, 8.14170000000003e-05, 8.431899999999937e-05, 8.050000000000071e-05, 8.230600000000074e-05, 8.337500000000012e-05, 8.52920000000007e-05, 8.522299999999886e-05, 8.059800000000117e-05, 8.715299999999954e-05, 8.33469999999975e-05, 8.433400000000188e-05, 8.71669999999991e-05, 8.138899999999769e-05, 8.622200000000038e-05, 8.434700000000198e-05, 8.238900000000215e-05, 8.708299999999822e-05, 8.143099999999986e-05, 8.520799999999981e-05, 8.723600000000095e-05, 8.14170000000003e-05, 8.622200000000038e-05, 8.62370000000029e-05, 8.43049999999998e-05, 8.806899999999965e-05, 8.144399999999996e-05, 8.240199999999878e-05, 8.609799999999973e-05, 8.436100000000155e-05, 8.620799999999734e-05, 8.34309999999984e-05, 8.426399999999709e-05, 8.511200000000177e-05, 8.431900000000284e-05, 8.054199999999942e-05, 8.524999999999852e-05, 8.422299999999786e-05, 8.520799999999981e-05, 8.419399999999924e-05, 8.616599999999863e-05]</msg>
<status status="PASS" starttime="20201112 12:27:33.618" endtime="20201112 12:27:33.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.613" endtime="20201112 12:27:33.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.629" endtime="20201112 12:27:33.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.632" endtime="20201112 12:27:33.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.631" endtime="20201112 12:27:33.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.627" endtime="20201112 12:27:33.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.248" endtime="20201112 12:27:33.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.247" endtime="20201112 12:27:33.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.832" endtime="20201112 12:27:33.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.658" endtime="20201112 12:27:33.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.656" endtime="20201112 12:27:33.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.655" endtime="20201112 12:27:33.678"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:53.759" endtime="20201112 12:27:33.679" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:26:12.329" endtime="20201112 12:27:33.683"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.739" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:27:33.747" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:27:34.835" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:27:33.737" endtime="20201112 12:27:34.836"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.838" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:27:34.837" endtime="20201112 12:27:34.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.736" endtime="20201112 12:27:34.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:34.841" endtime="20201112 12:27:35.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.840" endtime="20201112 12:27:35.027"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.039" endtime="20201112 12:27:35.056"></status>
</kw>
<msg timestamp="20201112 12:27:35.056" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [')\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.038" endtime="20201112 12:27:35.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.059" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [')\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.058" endtime="20201112 12:27:35.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.063" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:35.060" endtime="20201112 12:27:35.063"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:35.035" endtime="20201112 12:27:35.064"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:35.033" endtime="20201112 12:27:35.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.032" endtime="20201112 12:27:35.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:35.070" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:35.069" endtime="20201112 12:27:35.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.066" endtime="20201112 12:27:35.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.031" endtime="20201112 12:27:35.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.030" endtime="20201112 12:27:35.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.072" endtime="20201112 12:27:35.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.029" endtime="20201112 12:27:35.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.075" endtime="20201112 12:27:35.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.027" endtime="20201112 12:27:35.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.735" endtime="20201112 12:27:35.077"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:35.084" endtime="20201112 12:27:35.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.082" endtime="20201112 12:27:35.104"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.117" endtime="20201112 12:27:35.137"></status>
</kw>
<msg timestamp="20201112 12:27:35.138" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.115" endtime="20201112 12:27:35.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.140" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.139" endtime="20201112 12:27:35.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.143" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:35.141" endtime="20201112 12:27:35.144"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:35.113" endtime="20201112 12:27:35.144"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:35.110" endtime="20201112 12:27:35.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.109" endtime="20201112 12:27:35.145"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:35.149" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:35.148" endtime="20201112 12:27:35.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.146" endtime="20201112 12:27:35.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.108" endtime="20201112 12:27:35.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.108" endtime="20201112 12:27:35.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.151" endtime="20201112 12:27:35.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.106" endtime="20201112 12:27:35.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.105" endtime="20201112 12:27:35.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.081" endtime="20201112 12:27:35.153"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:35.159" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.178" endtime="20201112 12:27:37.289"></status>
</kw>
<msg timestamp="20201112 12:27:37.290" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 397338, 'wakeups': [407348, 417358, 427368, 437347, 447357, 457366, 46...</msg>
<status status="PASS" starttime="20201112 12:27:35.175" endtime="20201112 12:27:37.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.296" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 397338, 'wakeups': [407348, 417358, 427368, 437347, 447357, 457366, 46...</msg>
<status status="PASS" starttime="20201112 12:27:37.292" endtime="20201112 12:27:37.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.299" endtime="20201112 12:27:37.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.169" endtime="20201112 12:27:37.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.163" endtime="20201112 12:27:37.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.309" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [407348, 417358, 427368, 437347, 447357, 457366, 467346, 477355, 487365, 497344, 507354, 517364, 527343, 537353, 547363, 557342, 567352, 577362, 587341, 597351, 607360, 6...</msg>
<status status="PASS" starttime="20201112 12:27:37.307" endtime="20201112 12:27:37.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.313" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:37.312" endtime="20201112 12:27:37.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.315" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:37.314" endtime="20201112 12:27:37.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.310" endtime="20201112 12:27:37.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.320" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:37.319" endtime="20201112 12:27:37.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.322" level="INFO">VALUE: 397338</msg>
<status status="PASS" starttime="20201112 12:27:37.321" endtime="20201112 12:27:37.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.317" endtime="20201112 12:27:37.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.327" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:37.326" endtime="20201112 12:27:37.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.329" level="INFO">VALUE: [407348, 417358, 427368, 437347, 447357, 457366, 467346, 477355, 487365, 497344, 507354, 517364, 527343, 537353, 547363, 557342, 567352, 577362, 587341, 597351, 607360, 617340, 627349, 637359, 647338, 657348, 667358, 677368, 687347, 697357, 707366, 717346, 727355, 737365, 747344, 757354, 767364, 777343, 787353, 797363, 807342, 817352, 827362, 837341, 847351, 857360, 867340, 877349, 887359, 897338, 907348, 917358, 927368, 937347, 947357, 957366, 967346, 977355, 987365, 997344, 1007354, 1017364, 1027343, 1037353, 1047363, 1057342, 1067352, 1077362, 1087341, 1097351, 1107360, 1117340, 1127349, 1137359, 1147338, 1157348, 1167358, 1177368, 1187347, 1197357, 1207366, 1217346, 1227355, 1237365, 1247344, 1257354, 1267364, 1277343, 1287353, 1297363, 1307342, 1317352, 1327362, 1337341, 1347351, 1357360, 1367340, 1377349, 1387359, 1397338]</msg>
<status status="PASS" starttime="20201112 12:27:37.328" endtime="20201112 12:27:37.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.324" endtime="20201112 12:27:37.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.337" endtime="20201112 12:27:37.633"></status>
</kw>
<msg timestamp="20201112 12:27:37.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.088370708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.098374431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.335" endtime="20201112 12:27:37.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.088370708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.098374431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.637" endtime="20201112 12:27:37.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.645" endtime="20201112 12:27:37.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.332" endtime="20201112 12:27:37.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.331" endtime="20201112 12:27:37.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.672" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:37.648" endtime="20201112 12:27:37.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.676" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:37.675" endtime="20201112 12:27:37.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.679" level="INFO">VALUE: 0.088370708</msg>
<status status="PASS" starttime="20201112 12:27:37.678" endtime="20201112 12:27:37.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.672" endtime="20201112 12:27:37.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.684" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:37.683" endtime="20201112 12:27:37.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.686" level="INFO">VALUE: [0.098374431, 0.108383903, 0.118393361, 0.128372222, 0.138381708, 0.148391208, 0.158370153, 0.168379611, 0.178389, 0.188367986, 0.198377458, 0.208386847, 0.21836575, 0.228375236, 0.238384681, 0.248363639, 0.258373069, 0.268382514, 0.278361444, 0.288370889, 0.298380347, 0.308359319, 0.31836875, 0.328378236, 0.338357139, 0.348366556, 0.358376056, 0.368385458, 0.378364389, 0.388373958, 0.398383347, 0.408362264, 0.418371667, 0.428381153, 0.438360083, 0.448369556, 0.458378986, 0.468357931, 0.478367403, 0.488376778, 0.498355736, 0.508365292, 0.518374611, 0.528353625, 0.538363042, 0.5483725, 0.558351431, 0.568360847, 0.578370361, 0.588349292, 0.598358736, 0.608368125, 0.618377611, 0.628356528, 0.638366, 0.648375458, 0.658354347, 0.668363819, 0.678373292, 0.688352222, 0.698361681, 0.708371167, 0.718350056, 0.728359514, 0.738368944, 0.748347833, 0.758357333, 0.768366764, 0.778345764, 0.788355194, 0.798364681, 0.808343569, 0.818353056, 0.828362472, 0.838341403, 0.848350806, 0.858360319, 0.868369819, 0.878348681, 0.888358194, 0.898367611, 0.908346569, 0.918355958, 0.928365431, 0.938344375, 0.948353847, 0.958363264, 0.968342264, 0.978351667, 0.988361139, 0.998340028, 1.008349528, 1.018359, 1.028337903, 1.038347333, 1.04835675, 1.058335708, 1.068345194, 1.078354611, 1.088333514] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:37.685" endtime="20201112 12:27:37.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.680" endtime="20201112 12:27:37.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.689" endtime="20201112 12:27:37.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.693" endtime="20201112 12:27:37.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.691" endtime="20201112 12:27:37.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.688" endtime="20201112 12:27:37.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.160" endtime="20201112 12:27:37.713"></status>
</kw>
<msg timestamp="20201112 12:27:37.714" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.722" endtime="20201112 12:27:39.839"></status>
</kw>
<msg timestamp="20201112 12:27:39.840" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2939819, 'wakeups': [2949859, 2959838, 2969848, 2979827, 2989837, 2999...</msg>
<status status="PASS" starttime="20201112 12:27:37.720" endtime="20201112 12:27:39.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.846" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2939819, 'wakeups': [2949859, 2959838, 2969848, 2979827, 2989837, 2999...</msg>
<status status="PASS" starttime="20201112 12:27:39.842" endtime="20201112 12:27:39.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.848" endtime="20201112 12:27:39.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.718" endtime="20201112 12:27:39.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.716" endtime="20201112 12:27:39.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.859" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [2949859, 2959838, 2969848, 2979827, 2989837, 2999847, 3009826, 3019836, 3029846, 3039825, 3049835, 3059844, 3069824, 3079833, 3089843, 3099822, 3109832, 3119842, 3129821...</msg>
<status status="PASS" starttime="20201112 12:27:39.855" endtime="20201112 12:27:39.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.866" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:39.865" endtime="20201112 12:27:39.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.868" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:39.867" endtime="20201112 12:27:39.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.861" endtime="20201112 12:27:39.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.874" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:39.872" endtime="20201112 12:27:39.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.876" level="INFO">VALUE: 2939819</msg>
<status status="PASS" starttime="20201112 12:27:39.875" endtime="20201112 12:27:39.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.870" endtime="20201112 12:27:39.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.881" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:39.880" endtime="20201112 12:27:39.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.883" level="INFO">VALUE: [2949859, 2959838, 2969848, 2979827, 2989837, 2999847, 3009826, 3019836, 3029846, 3039825, 3049835, 3059844, 3069824, 3079833, 3089843, 3099822, 3109832, 3119842, 3129821, 3139831, 3149841, 3159820, 3169830, 3179840, 3189819, 3199829, 3209838, 3219848, 3229827, 3239837, 3249847, 3259826, 3269836, 3279846, 3289825, 3299835, 3309844, 3319824, 3329833, 3339843, 3349822, 3359832, 3369842, 3379821, 3389831, 3399841, 3409820, 3419830, 3429840, 3439819, 3449829, 3459838, 3469848, 3479827, 3489837, 3499847, 3509826, 3519836, 3529846, 3539825, 3549835, 3559844, 3569824, 3579833, 3589843, 3599822, 3609832, 3619842, 3629821, 3639831, 3649841, 3659820, 3669830, 3679840, 3689819, 3699829, 3709838, 3719848, 3729827, 3739837, 3749847, 3759826, 3769836, 3779846, 3789825, 3799835, 3809844, 3819824, 3829833, 3839843, 3849822, 3859832, 3869842, 3879821, 3889831, 3899841, 3909820, 3919830, 3929840, 3939819]</msg>
<status status="PASS" starttime="20201112 12:27:39.882" endtime="20201112 12:27:39.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.877" endtime="20201112 12:27:39.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.890" endtime="20201112 12:27:40.182"></status>
</kw>
<msg timestamp="20201112 12:27:40.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021644611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031667417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.889" endtime="20201112 12:27:40.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021644611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031667417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.186" endtime="20201112 12:27:40.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.194" endtime="20201112 12:27:40.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.886" endtime="20201112 12:27:40.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.884" endtime="20201112 12:27:40.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:40.221" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:40.197" endtime="20201112 12:27:40.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.226" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:40.225" endtime="20201112 12:27:40.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.228" level="INFO">VALUE: 0.021644611</msg>
<status status="PASS" starttime="20201112 12:27:40.227" endtime="20201112 12:27:40.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.222" endtime="20201112 12:27:40.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.233" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:40.232" endtime="20201112 12:27:40.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.235" level="INFO">VALUE: [0.031667417, 0.041646264, 0.051655681, 0.061634653, 0.071644056, 0.0816535, 0.091632431, 0.101641889, 0.111651333, 0.121630333, 0.131639708, 0.141649194, 0.151628111, 0.161637583, 0.171647, 0.181625944, 0.191635375, 0.201644917, 0.211623819, 0.221633264, 0.231642708, 0.241621708, 0.251631056, 0.261640569, 0.271619458, 0.281628931, 0.291638347, 0.301647819, 0.311626792, 0.321636222, 0.331645625, 0.341624667, 0.351634014, 0.3616435, 0.371622458, 0.381631903, 0.391641319, 0.401620278, 0.411629708, 0.421639208, 0.431618125, 0.441627597, 0.451637042, 0.461615958, 0.471625403, 0.481634875, 0.491613792, 0.501623208, 0.511632694, 0.521611667, 0.531621111, 0.541630583, 0.551639986, 0.561618931, 0.571628389, 0.581637792, 0.59161675, 0.601626236, 0.611635694, 0.621614583, 0.631624069, 0.641633458, 0.651612389, 0.661621833, 0.671631347, 0.681610278, 0.691619736, 0.701629139, 0.711608083, 0.721617542, 0.731627014, 0.741605931, 0.751615417, 0.761624847, 0.771603736, 0.781613194, 0.791622625, 0.801632097, 0.811611083, 0.8216205, 0.831629958, 0.841608889, 0.851618361, 0.861627806, 0.871606736, 0.881616194, 0.891625653, 0.901604597, 0.911614014, 0.9216235, 0.931602417, 0.941611889, 0.951621306, 0.961600222, 0.971609792, 0.981619181, 0.991598042, 1.001607514, 1.011617014, 1.021595889] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:40.234" endtime="20201112 12:27:40.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.229" endtime="20201112 12:27:40.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.239" endtime="20201112 12:27:40.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:40.242" endtime="20201112 12:27:40.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.241" endtime="20201112 12:27:40.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.237" endtime="20201112 12:27:40.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.714" endtime="20201112 12:27:40.263"></status>
</kw>
<msg timestamp="20201112 12:27:40.263" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.271" endtime="20201112 12:27:42.388"></status>
</kw>
<msg timestamp="20201112 12:27:42.389" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5487365, 'wakeups': [5497375, 5507385, 5517395, 5527374, 5537384, 5547...</msg>
<status status="PASS" starttime="20201112 12:27:40.270" endtime="20201112 12:27:42.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.395" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5487365, 'wakeups': [5497375, 5507385, 5517395, 5527374, 5537384, 5547...</msg>
<status status="PASS" starttime="20201112 12:27:42.392" endtime="20201112 12:27:42.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.398" endtime="20201112 12:27:42.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.267" endtime="20201112 12:27:42.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.265" endtime="20201112 12:27:42.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.409" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [5497375, 5507385, 5517395, 5527374, 5537384, 5547393, 5557373, 5567382, 5577392, 5587371, 5597381, 5607391, 5617370, 5627380, 5637390, 5647369, 5657379, 5667388, 5677368...</msg>
<status status="PASS" starttime="20201112 12:27:42.405" endtime="20201112 12:27:42.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.417" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:42.415" endtime="20201112 12:27:42.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.420" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:42.419" endtime="20201112 12:27:42.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.410" endtime="20201112 12:27:42.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.424" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:42.423" endtime="20201112 12:27:42.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.427" level="INFO">VALUE: 5487365</msg>
<status status="PASS" starttime="20201112 12:27:42.426" endtime="20201112 12:27:42.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.421" endtime="20201112 12:27:42.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.431" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:42.430" endtime="20201112 12:27:42.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.434" level="INFO">VALUE: [5497375, 5507385, 5517395, 5527374, 5537384, 5547393, 5557373, 5567382, 5577392, 5587371, 5597381, 5607391, 5617370, 5627380, 5637390, 5647369, 5657379, 5667388, 5677368, 5687377, 5697387, 5707366, 5717376, 5727386, 5737365, 5747375, 5757385, 5767395, 5777374, 5787384, 5797393, 5807373, 5817382, 5827392, 5837371, 5847381, 5857391, 5867370, 5877380, 5887390, 5897369, 5907379, 5917388, 5927368, 5937377, 5947387, 5957366, 5967376, 5977386, 5987365, 5997375, 6007385, 6017395, 6027374, 6037384, 6047393, 6057373, 6067382, 6077392, 6087371, 6097381, 6107391, 6117370, 6127380, 6137390, 6147369, 6157379, 6167388, 6177368, 6187377, 6197387, 6207366, 6217376, 6227386, 6237365, 6247375, 6257385, 6267395, 6277374, 6287384, 6297393, 6307373, 6317382, 6327392, 6337371, 6347381, 6357391, 6367370, 6377380, 6387390, 6397369, 6407379, 6417388, 6427368, 6437377, 6447387, 6457366, 6467376, 6477386, 6487365]</msg>
<status status="PASS" starttime="20201112 12:27:42.432" endtime="20201112 12:27:42.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.428" endtime="20201112 12:27:42.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.443" endtime="20201112 12:27:42.735"></status>
</kw>
<msg timestamp="20201112 12:27:42.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019049264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029053333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.441" endtime="20201112 12:27:42.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019049264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029053333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.739" endtime="20201112 12:27:42.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.746" endtime="20201112 12:27:42.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.439" endtime="20201112 12:27:42.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.436" endtime="20201112 12:27:42.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.773" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:42.750" endtime="20201112 12:27:42.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.777" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:42.776" endtime="20201112 12:27:42.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.779" level="INFO">VALUE: 0.019049264</msg>
<status status="PASS" starttime="20201112 12:27:42.778" endtime="20201112 12:27:42.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.773" endtime="20201112 12:27:42.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.784" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:42.783" endtime="20201112 12:27:42.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.787" level="INFO">VALUE: [0.029053333, 0.039062861, 0.049072333, 0.059051208, 0.069060639, 0.079070097, 0.089049056, 0.099058472, 0.109067889, 0.119046903, 0.129056319, 0.139065806, 0.149044722, 0.159054153, 0.169063611, 0.179042528, 0.189051986, 0.199061431, 0.209040361, 0.219049889, 0.229059333, 0.239038181, 0.249047722, 0.259057097, 0.269036069, 0.279045528, 0.289054931, 0.299064403, 0.309043319, 0.319052861, 0.329062236, 0.339041181, 0.349050611, 0.359060056, 0.369038986, 0.379048569, 0.389057931, 0.399036861, 0.409046264, 0.41905575, 0.429034681, 0.439044153, 0.449053583, 0.459032514, 0.469042042, 0.479051403, 0.489030347, 0.499039778, 0.509049278, 0.519028208, 0.529037625, 0.539047111, 0.549056528, 0.559035472, 0.569044917, 0.579054375, 0.589033361, 0.599042819, 0.60905225, 0.619031139, 0.629040569, 0.639050042, 0.649029, 0.659038458, 0.669047903, 0.679026861, 0.68903625, 0.699045694, 0.709024653, 0.719034083, 0.7290435, 0.739022472, 0.749031986, 0.759041403, 0.769020347, 0.77902975, 0.789039264, 0.799048653, 0.809027639, 0.819037097, 0.829046556, 0.839025444, 0.849034861, 0.859044417, 0.86902325, 0.87903275, 0.889042167, 0.899021167, 0.909030556, 0.919040014, 0.929018986, 0.939028403, 0.949037875, 0.959016792, 0.969026236, 0.979035694, 0.989014639, 0.999024069, 1.009033569, 1.019012514] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:42.786" endtime="20201112 12:27:42.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.781" endtime="20201112 12:27:42.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.790" endtime="20201112 12:27:42.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.794" endtime="20201112 12:27:42.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.792" endtime="20201112 12:27:42.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.788" endtime="20201112 12:27:42.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.264" endtime="20201112 12:27:42.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.156" endtime="20201112 12:27:42.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.155" endtime="20201112 12:27:42.815"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:42.818" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.826" endtime="20201112 12:27:44.931"></status>
</kw>
<msg timestamp="20201112 12:27:44.932" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8044921, 'wakeups': [8054962, 8064941, 8074951, 8084930, 8094940, 8104...</msg>
<status status="PASS" starttime="20201112 12:27:42.824" endtime="20201112 12:27:44.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.935" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8044921, 'wakeups': [8054962, 8064941, 8074951, 8084930, 8094940, 8104...</msg>
<status status="PASS" starttime="20201112 12:27:44.933" endtime="20201112 12:27:44.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.936" endtime="20201112 12:27:44.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.822" endtime="20201112 12:27:44.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.820" endtime="20201112 12:27:44.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:44.941" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [8054962, 8064941, 8074951, 8084930, 8094940, 8104949, 8114929, 8124938, 8134948, 8144927, 8154937, 8164947, 8174926, 8184936, 8194946, 8204925, 8214935, 8224945, 8234924...</msg>
<status status="PASS" starttime="20201112 12:27:44.939" endtime="20201112 12:27:44.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.945" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:44.944" endtime="20201112 12:27:44.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.947" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:44.947" endtime="20201112 12:27:44.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.942" endtime="20201112 12:27:44.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.952" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:44.951" endtime="20201112 12:27:44.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.954" level="INFO">VALUE: 8044921</msg>
<status status="PASS" starttime="20201112 12:27:44.953" endtime="20201112 12:27:44.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.949" endtime="20201112 12:27:44.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.959" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:44.958" endtime="20201112 12:27:44.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.961" level="INFO">VALUE: [8054962, 8064941, 8074951, 8084930, 8094940, 8104949, 8114929, 8124938, 8134948, 8144927, 8154937, 8164947, 8174926, 8184936, 8194946, 8204925, 8214935, 8224945, 8234924, 8244934, 8254943, 8264923, 8274932, 8284942, 8294921, 8304931, 8314941, 8324951, 8334930, 8344940, 8354949, 8364929, 8374938, 8384948, 8394927, 8404937, 8414947, 8424926, 8434936, 8444946, 8454925, 8464935, 8474945, 8484924, 8494934, 8504943, 8514923, 8524932, 8534942, 8544921, 8554931, 8564941, 8574951, 8584930, 8594940, 8604949, 8614929, 8624938, 8634948, 8644927, 8654937, 8664947, 8674926, 8684936, 8694946, 8704925, 8714935, 8724945, 8734924, 8744934, 8754943, 8764923, 8774932, 8784942, 8794921, 8804931, 8814941, 8824951, 8834930, 8844940, 8854949, 8864929, 8874938, 8884948, 8894927, 8904937, 8914947, 8924926, 8934936, 8944946, 8954925, 8964935, 8974945, 8984924, 8994934, 9004943, 9014923, 9024932, 9034942, 9044921]</msg>
<status status="PASS" starttime="20201112 12:27:44.960" endtime="20201112 12:27:44.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.956" endtime="20201112 12:27:44.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.969" endtime="20201112 12:27:45.262"></status>
</kw>
<msg timestamp="20201112 12:27:45.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024601083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034633764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.967" endtime="20201112 12:27:45.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024601083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034633764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:45.266" endtime="20201112 12:27:45.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.273" endtime="20201112 12:27:45.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.965" endtime="20201112 12:27:45.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.963" endtime="20201112 12:27:45.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:45.301" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:45.277" endtime="20201112 12:27:45.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.305" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:45.304" endtime="20201112 12:27:45.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.307" level="INFO">VALUE: 0.024601083</msg>
<status status="PASS" starttime="20201112 12:27:45.306" endtime="20201112 12:27:45.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.302" endtime="20201112 12:27:45.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.312" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:45.311" endtime="20201112 12:27:45.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.315" level="INFO">VALUE: [0.034633764, 0.044612667, 0.054622181, 0.064601153, 0.074610556, 0.084619944, 0.094598958, 0.104608333, 0.114617847, 0.124596764, 0.134606181, 0.144615681, 0.154594611, 0.164604028, 0.174613528, 0.1845925, 0.194601903, 0.204611347, 0.214590292, 0.224599694, 0.234609181, 0.244588125, 0.254597569, 0.264606972, 0.274585944, 0.284595431, 0.294604903, 0.304614375, 0.314593208, 0.324602722, 0.334612167, 0.344591042, 0.354600514, 0.364609944, 0.374588931, 0.384598347, 0.394607806, 0.404586764, 0.414596236, 0.424605653, 0.434584569, 0.444594042, 0.454603514, 0.464582389, 0.474591875, 0.484601375, 0.494580236, 0.504589667, 0.514599208, 0.524578139, 0.534587583, 0.544596931, 0.554606417, 0.564585347, 0.574594819, 0.584604236, 0.594583181, 0.604592708, 0.614602153, 0.624581083, 0.634590556, 0.6446, 0.654578903, 0.664588361, 0.674597764, 0.68457675, 0.694586167, 0.704595569, 0.714574542, 0.724584028, 0.734593472, 0.744572472, 0.754581889, 0.764591306, 0.774570236, 0.784579625, 0.794589139, 0.804598597, 0.814577514, 0.824586958, 0.834596431, 0.844575347, 0.854584792, 0.864594208, 0.874573181, 0.884582639, 0.894592139, 0.904571042, 0.914580486, 0.924589903, 0.934568861, 0.944578319, 0.954587806, 0.964566708, 0.974576194, 0.984585681, 0.994564569, 1.004574, 1.014583458, 1.024562361] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:45.314" endtime="20201112 12:27:45.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.308" endtime="20201112 12:27:45.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.318" endtime="20201112 12:27:45.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:45.321" endtime="20201112 12:27:45.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.320" endtime="20201112 12:27:45.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.316" endtime="20201112 12:27:45.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.819" endtime="20201112 12:27:45.342"></status>
</kw>
<msg timestamp="20201112 12:27:45.342" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.350" endtime="20201112 12:27:47.480"></status>
</kw>
<msg timestamp="20201112 12:27:47.481" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10567321, 'wakeups': [10577362, 10587341, 10597351, 10607330, 10617340...</msg>
<status status="PASS" starttime="20201112 12:27:45.349" endtime="20201112 12:27:47.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.487" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10567321, 'wakeups': [10577362, 10587341, 10597351, 10607330, 10617340...</msg>
<status status="PASS" starttime="20201112 12:27:47.484" endtime="20201112 12:27:47.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.488" endtime="20201112 12:27:47.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.346" endtime="20201112 12:27:47.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.344" endtime="20201112 12:27:47.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:47.494" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [10577362, 10587341, 10597351, 10607330, 10617340, 10627349, 10637329, 10647338, 10657348, 10667327, 10677337, 10687347, 10697326, 10707336, 10717346, 10727325, 10737335,...</msg>
<status status="PASS" starttime="20201112 12:27:47.492" endtime="20201112 12:27:47.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.498" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:47.497" endtime="20201112 12:27:47.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.500" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:47.499" endtime="20201112 12:27:47.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.494" endtime="20201112 12:27:47.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.505" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:47.504" endtime="20201112 12:27:47.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.507" level="INFO">VALUE: 10567321</msg>
<status status="PASS" starttime="20201112 12:27:47.506" endtime="20201112 12:27:47.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.502" endtime="20201112 12:27:47.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.512" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:47.511" endtime="20201112 12:27:47.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.514" level="INFO">VALUE: [10577362, 10587341, 10597351, 10607330, 10617340, 10627349, 10637329, 10647338, 10657348, 10667327, 10677337, 10687347, 10697326, 10707336, 10717346, 10727325, 10737335, 10747344, 10757324, 10767333, 10777343, 10787322, 10797332, 10807342, 10817321, 10827331, 10837341, 10847351, 10857330, 10867340, 10877349, 10887329, 10897338, 10907348, 10917327, 10927337, 10937347, 10947326, 10957336, 10967346, 10977325, 10987335, 10997344, 11007324, 11017333, 11027343, 11037322, 11047332, 11057342, 11067321, 11077331, 11087341, 11097351, 11107330, 11117340, 11127349, 11137329, 11147338, 11157348, 11167327, 11177337, 11187347, 11197326, 11207336, 11217346, 11227325, 11237335, 11247344, 11257324, 11267333, 11277343, 11287322, 11297332, 11307342, 11317321, 11327331, 11337341, 11347351, 11357330, 11367340, 11377349, 11387329, 11397338, 11407348, 11417327, 11427337, 11437347, 11447326, 11457336, 11467346, 11477325, 11487335, 11497344, 11507324, 11517333, 11527343, 11537322, 11547332, 11557342, 11567321]</msg>
<status status="PASS" starttime="20201112 12:27:47.513" endtime="20201112 12:27:47.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.508" endtime="20201112 12:27:47.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.521" endtime="20201112 12:27:47.811"></status>
</kw>
<msg timestamp="20201112 12:27:47.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019508167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029532125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.520" endtime="20201112 12:27:47.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019508167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029532125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.815" endtime="20201112 12:27:47.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.822" endtime="20201112 12:27:47.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.517" endtime="20201112 12:27:47.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.516" endtime="20201112 12:27:47.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:47.849" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:47.826" endtime="20201112 12:27:47.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.854" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:47.853" endtime="20201112 12:27:47.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.856" level="INFO">VALUE: 0.019508167</msg>
<status status="PASS" starttime="20201112 12:27:47.855" endtime="20201112 12:27:47.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.850" endtime="20201112 12:27:47.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.861" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:47.860" endtime="20201112 12:27:47.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.864" level="INFO">VALUE: [0.029532125, 0.039529861, 0.049539667, 0.059518528, 0.069527903, 0.079537361, 0.089516278, 0.099525681, 0.109535222, 0.119514208, 0.129523583, 0.139533042, 0.149511972, 0.159521444, 0.169530875, 0.179509847, 0.189519236, 0.199528736, 0.209507722, 0.219517069, 0.2295265, 0.239505514, 0.249514944, 0.259524444, 0.269503333, 0.279512806, 0.289522194, 0.299531694, 0.309510597, 0.319520028, 0.329529458, 0.339508431, 0.349517889, 0.359527347, 0.369506319, 0.37951575, 0.389525208, 0.399504139, 0.409513556, 0.419523056, 0.429501972, 0.439511389, 0.449520792, 0.45949975, 0.469509278, 0.479518694, 0.489497639, 0.499507153, 0.509516542, 0.519495389, 0.529504944, 0.539514319, 0.549523736, 0.559502681, 0.569512181, 0.579521625, 0.589500611, 0.599510014, 0.609519458, 0.619498472, 0.629507833, 0.639517319, 0.649496208, 0.659505736, 0.669515111, 0.679494153, 0.689503528, 0.699512944, 0.709491875, 0.719501403, 0.729510847, 0.739489764, 0.749499181, 0.759508653, 0.769487583, 0.779497097, 0.789506486, 0.799515889, 0.809494889, 0.819504306, 0.829513764, 0.839492736, 0.849502181, 0.859511569, 0.869490542, 0.879500028, 0.8895095, 0.899488417, 0.909497847, 0.919507278, 0.929486181, 0.939495667, 0.949505056, 0.959484069, 0.969493472, 0.979502986, 0.989481875, 0.999491389, 1.00950075, 1.019479764] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:47.862" endtime="20201112 12:27:47.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.857" endtime="20201112 12:27:47.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.867" endtime="20201112 12:27:47.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:47.870" endtime="20201112 12:27:47.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.869" endtime="20201112 12:27:47.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.865" endtime="20201112 12:27:47.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.343" endtime="20201112 12:27:47.891"></status>
</kw>
<msg timestamp="20201112 12:27:47.891" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.899" endtime="20201112 12:27:50.028"></status>
</kw>
<msg timestamp="20201112 12:27:50.030" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13119873, 'wakeups': [13129882, 13139892, 13149902, 13159881, 13169891...</msg>
<status status="PASS" starttime="20201112 12:27:47.898" endtime="20201112 12:27:50.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.034" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13119873, 'wakeups': [13129882, 13139892, 13149902, 13159881, 13169891...</msg>
<status status="PASS" starttime="20201112 12:27:50.032" endtime="20201112 12:27:50.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.035" endtime="20201112 12:27:50.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.895" endtime="20201112 12:27:50.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.893" endtime="20201112 12:27:50.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:50.040" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [13129882, 13139892, 13149902, 13159881, 13169891, 13179901, 13189880, 13199890, 13209899, 13219879, 13229888, 13239898, 13249877, 13259887, 13269897, 13279876, 13289886,...</msg>
<status status="PASS" starttime="20201112 12:27:50.038" endtime="20201112 12:27:50.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.044" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:50.043" endtime="20201112 12:27:50.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.047" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:50.046" endtime="20201112 12:27:50.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.041" endtime="20201112 12:27:50.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.051" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:50.050" endtime="20201112 12:27:50.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.055" level="INFO">VALUE: 13119873</msg>
<status status="PASS" starttime="20201112 12:27:50.052" endtime="20201112 12:27:50.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.048" endtime="20201112 12:27:50.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.060" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:50.059" endtime="20201112 12:27:50.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.062" level="INFO">VALUE: [13129882, 13139892, 13149902, 13159881, 13169891, 13179901, 13189880, 13199890, 13209899, 13219879, 13229888, 13239898, 13249877, 13259887, 13269897, 13279876, 13289886, 13299896, 13309875, 13319885, 13329895, 13339874, 13349884, 13359893, 13369903, 13379882, 13389892, 13399902, 13409881, 13419891, 13429901, 13439880, 13449890, 13459899, 13469879, 13479888, 13489898, 13499877, 13509887, 13519897, 13529876, 13539886, 13549896, 13559875, 13569885, 13579895, 13589874, 13599884, 13609893, 13619903, 13629882, 13639892, 13649902, 13659881, 13669891, 13679901, 13689880, 13699890, 13709899, 13719879, 13729888, 13739898, 13749877, 13759887, 13769897, 13779876, 13789886, 13799896, 13809875, 13819885, 13829895, 13839874, 13849884, 13859893, 13869903, 13879882, 13889892, 13899902, 13909881, 13919891, 13929901, 13939880, 13949890, 13959899, 13969879, 13979888, 13989898, 13999877, 14009887, 14019897, 14029876, 14039886, 14049896, 14059875, 14069885, 14079895, 14089874, 14099884, 14109893, 14119903]</msg>
<status status="PASS" starttime="20201112 12:27:50.061" endtime="20201112 12:27:50.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.056" endtime="20201112 12:27:50.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.070" endtime="20201112 12:27:50.362"></status>
</kw>
<msg timestamp="20201112 12:27:50.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032644056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.068" endtime="20201112 12:27:50.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032644056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.366" endtime="20201112 12:27:50.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.373" endtime="20201112 12:27:50.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.065" endtime="20201112 12:27:50.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.064" endtime="20201112 12:27:50.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:50.400" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:50.377" endtime="20201112 12:27:50.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.405" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:50.404" endtime="20201112 12:27:50.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.407" level="INFO">VALUE: 0.022597319</msg>
<status status="PASS" starttime="20201112 12:27:50.406" endtime="20201112 12:27:50.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.401" endtime="20201112 12:27:50.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.412" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:50.411" endtime="20201112 12:27:50.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.415" level="INFO">VALUE: [0.032644056, 0.042653472, 0.052662917, 0.062641889, 0.072651319, 0.082660819, 0.092639611, 0.102649111, 0.112658611, 0.122637542, 0.132646972, 0.142656389, 0.152635333, 0.162644806, 0.172654222, 0.182633153, 0.192642681, 0.202652042, 0.212630986, 0.222640458, 0.232649958, 0.242628889, 0.252638333, 0.262647792, 0.272657292, 0.282636097, 0.292645611, 0.302655097, 0.312633972, 0.322643403, 0.332652833, 0.342631847, 0.352641306, 0.362650736, 0.372629681, 0.382639111, 0.392648542, 0.402627514, 0.412637, 0.422646431, 0.432625333, 0.442634736, 0.452644167, 0.462623181, 0.472632569, 0.482642028, 0.492620986, 0.502630472, 0.512639875, 0.522649347, 0.532628347, 0.542637764, 0.552647181, 0.562626153, 0.572635569, 0.582645028, 0.592623931, 0.602633444, 0.612642778, 0.622621792, 0.63263125, 0.642640667, 0.652619611, 0.662629028, 0.6726385, 0.682617444, 0.692626861, 0.702636333, 0.712615264, 0.72262475, 0.732634181, 0.742613153, 0.752622583, 0.762632014, 0.772641486, 0.782620458, 0.792629819, 0.802639333, 0.812618264, 0.822627708, 0.832637153, 0.842616083, 0.852625514, 0.862635, 0.872613889, 0.882623361, 0.892632819, 0.902611722, 0.912621153, 0.922630625, 0.932609611, 0.942618986, 0.952628514, 0.962607403, 0.972616889, 0.982626361, 0.992605236, 1.00261475, 1.012624208, 1.022633625] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:50.414" endtime="20201112 12:27:50.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.408" endtime="20201112 12:27:50.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.418" endtime="20201112 12:27:50.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:50.421" endtime="20201112 12:27:50.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.420" endtime="20201112 12:27:50.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.417" endtime="20201112 12:27:50.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.892" endtime="20201112 12:27:50.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.817" endtime="20201112 12:27:50.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.816" endtime="20201112 12:27:50.447"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:50.450" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.458" endtime="20201112 12:27:52.585"></status>
</kw>
<msg timestamp="20201112 12:27:52.587" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15677429, 'wakeups': [15687469, 15697448, 15707489, 15717437, 15727478...</msg>
<status status="PASS" starttime="20201112 12:27:50.456" endtime="20201112 12:27:52.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.592" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15677429, 'wakeups': [15687469, 15697448, 15707489, 15717437, 15727478...</msg>
<status status="PASS" starttime="20201112 12:27:52.589" endtime="20201112 12:27:52.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.595" endtime="20201112 12:27:52.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.453" endtime="20201112 12:27:52.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.452" endtime="20201112 12:27:52.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:52.601" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [15687469, 15697448, 15707489, 15717437, 15727478, 15737457, 15747467, 15757446, 15767486, 15777435, 15787475, 15797454, 15807464, 15817443, 15827484, 15837432, 15847473,...</msg>
<status status="PASS" starttime="20201112 12:27:52.599" endtime="20201112 12:27:52.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.605" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:52.604" endtime="20201112 12:27:52.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.607" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:52.606" endtime="20201112 12:27:52.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.602" endtime="20201112 12:27:52.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.612" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:52.611" endtime="20201112 12:27:52.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.614" level="INFO">VALUE: 15677429</msg>
<status status="PASS" starttime="20201112 12:27:52.613" endtime="20201112 12:27:52.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.609" endtime="20201112 12:27:52.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.619" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:52.618" endtime="20201112 12:27:52.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.621" level="INFO">VALUE: [15687469, 15697448, 15707489, 15717437, 15727478, 15737457, 15747467, 15757446, 15767486, 15777435, 15787475, 15797454, 15807464, 15817443, 15827484, 15837432, 15847473, 15857452, 15867462, 15877441, 15887481, 15897430, 15907470, 15917449, 15927490, 15937438, 15947479, 15957458, 15967468, 15977447, 15987487, 15997436, 16007476, 16017456, 16027465, 16037445, 16047485, 16057434, 16067474, 16077453, 16087463, 16097442, 16107482, 16117431, 16127471, 16137451, 16147460, 16157440, 16167480, 16177459, 16187469, 16197448, 16207489, 16217437, 16227478, 16237457, 16247467, 16257446, 16267486, 16277435, 16287475, 16297454, 16307464, 16317443, 16327484, 16337432, 16347473, 16357452, 16367462, 16377441, 16387481, 16397430, 16407470, 16417449, 16427490, 16437438, 16447479, 16457458, 16467468, 16477447, 16487487, 16497436, 16507476, 16517456, 16527465, 16537445, 16547485, 16557434, 16567474, 16577453, 16587463, 16597442, 16607482, 16617431, 16627471, 16637451, 16647460, 16657440, 16667480, 16677459]</msg>
<status status="PASS" starttime="20201112 12:27:52.620" endtime="20201112 12:27:52.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.616" endtime="20201112 12:27:52.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.630" endtime="20201112 12:27:52.921"></status>
</kw>
<msg timestamp="20201112 12:27:52.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028619333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03868375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:52.627" endtime="20201112 12:27:52.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028619333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03868375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:52.925" endtime="20201112 12:27:52.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.933" endtime="20201112 12:27:52.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.625" endtime="20201112 12:27:52.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.623" endtime="20201112 12:27:52.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:52.959" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:52.936" endtime="20201112 12:27:52.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.963" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:52.962" endtime="20201112 12:27:52.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.965" level="INFO">VALUE: 0.028619333</msg>
<status status="PASS" starttime="20201112 12:27:52.964" endtime="20201112 12:27:52.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.960" endtime="20201112 12:27:52.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.971" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:52.970" endtime="20201112 12:27:52.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.973" level="INFO">VALUE: [0.03868375, 0.048676264, 0.058702389, 0.068664639, 0.07869075, 0.088683514, 0.098679236, 0.108671861, 0.118698139, 0.128660319, 0.138686486, 0.148679125, 0.158674819, 0.168667514, 0.178693694, 0.188655931, 0.198682181, 0.208674861, 0.218670486, 0.228663222, 0.238689403, 0.248651611, 0.25867775, 0.268670486, 0.278696667, 0.288658875, 0.298685097, 0.30867775, 0.3186735, 0.328666139, 0.338692417, 0.348654583, 0.358680778, 0.368673431, 0.378669153, 0.388661847, 0.398688056, 0.408650319, 0.418676472, 0.428669167, 0.438664833, 0.448657528, 0.45868375, 0.468645931, 0.478672181, 0.488664778, 0.498660458, 0.508653208, 0.518679347, 0.528672139, 0.538667708, 0.548660486, 0.558686625, 0.568648917, 0.578675069, 0.588667708, 0.5986635, 0.608656153, 0.618682333, 0.628644528, 0.638670764, 0.648663458, 0.658659153, 0.668651806, 0.678678042, 0.688640236, 0.698666347, 0.708659083, 0.718654847, 0.728647514, 0.73867375, 0.748635931, 0.758662139, 0.768654847, 0.778680958, 0.788643153, 0.798669361, 0.808662028, 0.818657792, 0.828650528, 0.838676736, 0.848638861, 0.858665097, 0.86865775, 0.878653417, 0.888646153, 0.898672403, 0.908634597, 0.918660764, 0.928653431, 0.938649083, 0.948641847, 0.958668, 0.968630153, 0.978656486, 0.988649236, 0.998644736, 1.008637528, 1.018663819, 1.028656403] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:52.972" endtime="20201112 12:27:52.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.967" endtime="20201112 12:27:52.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.976" endtime="20201112 12:27:52.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:52.979" endtime="20201112 12:27:52.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.978" endtime="20201112 12:27:52.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.974" endtime="20201112 12:27:53.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.450" endtime="20201112 12:27:53.000"></status>
</kw>
<msg timestamp="20201112 12:27:53.000" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.009" endtime="20201112 12:27:55.139"></status>
</kw>
<msg timestamp="20201112 12:27:55.141" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18229949, 'wakeups': [18239990, 18249969, 18260009, 18269958, 18279998...</msg>
<status status="PASS" starttime="20201112 12:27:53.008" endtime="20201112 12:27:55.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.145" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18229949, 'wakeups': [18239990, 18249969, 18260009, 18269958, 18279998...</msg>
<status status="PASS" starttime="20201112 12:27:55.142" endtime="20201112 12:27:55.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.146" endtime="20201112 12:27:55.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.004" endtime="20201112 12:27:55.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.002" endtime="20201112 12:27:55.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.151" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [18239990, 18249969, 18260009, 18269958, 18279998, 18289978, 18299987, 18309967, 18320007, 18329956, 18339996, 18349975, 18359985, 18369964, 18380004, 18389953, 18399993,...</msg>
<status status="PASS" starttime="20201112 12:27:55.149" endtime="20201112 12:27:55.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.155" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:55.154" endtime="20201112 12:27:55.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.157" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:55.156" endtime="20201112 12:27:55.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.152" endtime="20201112 12:27:55.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.162" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:55.161" endtime="20201112 12:27:55.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.164" level="INFO">VALUE: 18229949</msg>
<status status="PASS" starttime="20201112 12:27:55.163" endtime="20201112 12:27:55.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.159" endtime="20201112 12:27:55.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.169" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:55.168" endtime="20201112 12:27:55.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.171" level="INFO">VALUE: [18239990, 18249969, 18260009, 18269958, 18279998, 18289978, 18299987, 18309967, 18320007, 18329956, 18339996, 18349975, 18359985, 18369964, 18380004, 18389953, 18399993, 18409973, 18419982, 18429962, 18440002, 18449951, 18459991, 18469970, 18479980, 18489959, 18500000, 18509979, 18519989, 18529968, 18540008, 18549957, 18559997, 18569976, 18579986, 18589965, 18600006, 18609954, 18619995, 18629974, 18639984, 18649963, 18660003, 18669952, 18679992, 18689971, 18699981, 18709960, 18720001, 18729949, 18739990, 18749969, 18760009, 18769958, 18779998, 18789978, 18799987, 18809967, 18820007, 18829956, 18839996, 18849975, 18859985, 18869964, 18880004, 18889953, 18899993, 18909973, 18919982, 18929962, 18940002, 18949951, 18959991, 18969970, 18979980, 18989959, 19000000, 19009979, 19019989, 19029968, 19040008, 19049957, 19059997, 19069976, 19079986, 19089965, 19100006, 19109954, 19119995, 19129974, 19139984, 19149963, 19160003, 19169952, 19179992, 19189971, 19199981, 19209960, 19220001, 19229949]</msg>
<status status="PASS" starttime="20201112 12:27:55.170" endtime="20201112 12:27:55.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.166" endtime="20201112 12:27:55.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.179" endtime="20201112 12:27:55.469"></status>
</kw>
<msg timestamp="20201112 12:27:55.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023066417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033108486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.177" endtime="20201112 12:27:55.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023066417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033108486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.472" endtime="20201112 12:27:55.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.480" endtime="20201112 12:27:55.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.175" endtime="20201112 12:27:55.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.173" endtime="20201112 12:27:55.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.507" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:55.483" endtime="20201112 12:27:55.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.516" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:55.515" endtime="20201112 12:27:55.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.518" level="INFO">VALUE: 0.023066417</msg>
<status status="PASS" starttime="20201112 12:27:55.517" endtime="20201112 12:27:55.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.512" endtime="20201112 12:27:55.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.524" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:55.523" endtime="20201112 12:27:55.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.526" level="INFO">VALUE: [0.033108486, 0.043100889, 0.053127139, 0.063089375, 0.073115486, 0.083108278, 0.093103875, 0.103096653, 0.113122833, 0.123084986, 0.133111236, 0.143103889, 0.153099625, 0.163092208, 0.1731185, 0.183080667, 0.193106889, 0.203099583, 0.213095319, 0.223087944, 0.233114222, 0.243076347, 0.253102569, 0.263095278, 0.273090972, 0.283083681, 0.293109875, 0.303102611, 0.313098236, 0.323090903, 0.333117042, 0.343079319, 0.353105528, 0.363098111, 0.373093889, 0.383086611, 0.393112736, 0.403075, 0.413101222, 0.423093847, 0.433089556, 0.443082278, 0.453108444, 0.463070764, 0.473096903, 0.483089514, 0.493085306, 0.503077958, 0.513104167, 0.523066306, 0.533092583, 0.543085236, 0.553111472, 0.563073611, 0.573099806, 0.583092556, 0.593088181, 0.603080889, 0.613107097, 0.623069278, 0.633095486, 0.643088208, 0.653083917, 0.663076556, 0.673102736, 0.683065028, 0.693091111, 0.703083889, 0.713079625, 0.723072278, 0.733098472, 0.743060611, 0.753086833, 0.763079556, 0.77307525, 0.783067944, 0.793094139, 0.803086875, 0.813082514, 0.823075208, 0.833101444, 0.843063639, 0.853089819, 0.863082486, 0.873078097, 0.883070889, 0.893097028, 0.903059236, 0.913085444, 0.923078181, 0.933073875, 0.943066542, 0.953092764, 0.963054986, 0.973081056, 0.983073806, 0.993069583, 1.00306225, 1.013088458, 1.023050639] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:55.525" endtime="20201112 12:27:55.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.520" endtime="20201112 12:27:55.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.529" endtime="20201112 12:27:55.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:55.532" endtime="20201112 12:27:55.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.531" endtime="20201112 12:27:55.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.527" endtime="20201112 12:27:55.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.001" endtime="20201112 12:27:55.553"></status>
</kw>
<msg timestamp="20201112 12:27:55.553" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.561" endtime="20201112 12:27:57.690"></status>
</kw>
<msg timestamp="20201112 12:27:57.691" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20782501, 'wakeups': [20792541, 20802520, 20812561, 20822509, 20832550...</msg>
<status status="PASS" starttime="20201112 12:27:55.560" endtime="20201112 12:27:57.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.697" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20782501, 'wakeups': [20792541, 20802520, 20812561, 20822509, 20832550...</msg>
<status status="PASS" starttime="20201112 12:27:57.693" endtime="20201112 12:27:57.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.700" endtime="20201112 12:27:57.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.557" endtime="20201112 12:27:57.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.555" endtime="20201112 12:27:57.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:57.707" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [20792541, 20802520, 20812561, 20822509, 20832550, 20842529, 20852539, 20862518, 20872558, 20882507, 20892547, 20902526, 20912536, 20922515, 20932556, 20942504, 20952545,...</msg>
<status status="PASS" starttime="20201112 12:27:57.705" endtime="20201112 12:27:57.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.712" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:57.711" endtime="20201112 12:27:57.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.714" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:57.713" endtime="20201112 12:27:57.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.708" endtime="20201112 12:27:57.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.721" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:57.720" endtime="20201112 12:27:57.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.723" level="INFO">VALUE: 20782501</msg>
<status status="PASS" starttime="20201112 12:27:57.722" endtime="20201112 12:27:57.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.716" endtime="20201112 12:27:57.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.728" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:57.727" endtime="20201112 12:27:57.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.730" level="INFO">VALUE: [20792541, 20802520, 20812561, 20822509, 20832550, 20842529, 20852539, 20862518, 20872558, 20882507, 20892547, 20902526, 20912536, 20922515, 20932556, 20942504, 20952545, 20962524, 20972534, 20982513, 20992553, 21002502, 21012542, 21022521, 21032562, 21042510, 21052551, 21062530, 21072540, 21082519, 21092559, 21102508, 21112548, 21122528, 21132537, 21142517, 21152557, 21162506, 21172546, 21182525, 21192535, 21202514, 21212554, 21222503, 21232543, 21242523, 21252532, 21262512, 21272552, 21282531, 21292541, 21302520, 21312561, 21322509, 21332550, 21342529, 21352539, 21362518, 21372558, 21382507, 21392547, 21402526, 21412536, 21422515, 21432556, 21442504, 21452545, 21462524, 21472534, 21482513, 21492553, 21502502, 21512542, 21522521, 21532562, 21542510, 21552551, 21562530, 21572540, 21582519, 21592559, 21602508, 21612548, 21622528, 21632537, 21642517, 21652557, 21662506, 21672546, 21682525, 21692535, 21702514, 21712554, 21722503, 21732543, 21742523, 21752532, 21762512, 21772552, 21782531]</msg>
<status status="PASS" starttime="20201112 12:27:57.729" endtime="20201112 12:27:57.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.725" endtime="20201112 12:27:57.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.738" endtime="20201112 12:27:58.029"></status>
</kw>
<msg timestamp="20201112 12:27:58.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022282278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032324889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.736" endtime="20201112 12:27:58.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022282278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032324889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.033" endtime="20201112 12:27:58.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.040" endtime="20201112 12:27:58.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.733" endtime="20201112 12:27:58.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.732" endtime="20201112 12:27:58.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:58.066" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:58.043" endtime="20201112 12:27:58.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.071" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:58.070" endtime="20201112 12:27:58.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.073" level="INFO">VALUE: 0.022282278</msg>
<status status="PASS" starttime="20201112 12:27:58.072" endtime="20201112 12:27:58.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.067" endtime="20201112 12:27:58.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.079" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:58.078" endtime="20201112 12:27:58.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.081" level="INFO">VALUE: [0.032324889, 0.042317389, 0.052343542, 0.06230575, 0.072332, 0.082324722, 0.092320306, 0.102313028, 0.112339319, 0.122301431, 0.132327639, 0.142320264, 0.152316056, 0.16230875, 0.172334917, 0.182297083, 0.192323306, 0.202315986, 0.212311722, 0.222304417, 0.232330639, 0.242292792, 0.252319014, 0.262311625, 0.272338028, 0.282300139, 0.292326319, 0.302318903, 0.312314681, 0.322307375, 0.332333528, 0.34229575, 0.352321986, 0.362314653, 0.372310306, 0.382303042, 0.392329278, 0.402291389, 0.412317542, 0.422310278, 0.432306056, 0.442298722, 0.452324931, 0.462287069, 0.47231325, 0.482306014, 0.492301653, 0.502294389, 0.512320597, 0.522313264, 0.532308944, 0.542301722, 0.552327903, 0.56229, 0.57231625, 0.582309, 0.592304639, 0.602297278, 0.612323556, 0.622285764, 0.632311889, 0.642304556, 0.652300319, 0.662292986, 0.672319194, 0.682281361, 0.692307625, 0.702300222, 0.712295972, 0.722288694, 0.732314819, 0.742276986, 0.752303222, 0.762295958, 0.772322208, 0.782284292, 0.792310639, 0.802303167, 0.812298889, 0.822291569, 0.832317764, 0.842280028, 0.852306167, 0.862298875, 0.872294583, 0.882287306, 0.892313542, 0.902275708, 0.912301931, 0.922294542, 0.932290278, 0.942282931, 0.952309181, 0.962271389, 0.9722975, 0.982290236, 0.992285847, 1.002278639, 1.012304764, 1.0222975] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:58.080" endtime="20201112 12:27:58.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.075" endtime="20201112 12:27:58.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.085" endtime="20201112 12:27:58.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:58.088" endtime="20201112 12:27:58.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.087" endtime="20201112 12:27:58.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.083" endtime="20201112 12:27:58.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.554" endtime="20201112 12:27:58.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.448" endtime="20201112 12:27:58.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.447" endtime="20201112 12:27:58.109"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:58.112" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.120" endtime="20201112 12:28:00.250"></status>
</kw>
<msg timestamp="20201112 12:28:00.252" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23340057, 'wakeups': [23350097, 23360107, 23370117, 23380096, 23390106...</msg>
<status status="PASS" starttime="20201112 12:27:58.118" endtime="20201112 12:28:00.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.255" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23340057, 'wakeups': [23350097, 23360107, 23370117, 23380096, 23390106...</msg>
<status status="PASS" starttime="20201112 12:28:00.253" endtime="20201112 12:28:00.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.256" endtime="20201112 12:28:00.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.116" endtime="20201112 12:28:00.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.114" endtime="20201112 12:28:00.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:00.261" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [23350097, 23360107, 23370117, 23380096, 23390106, 23400115, 23410095, 23420104, 23430114, 23440093, 23450103, 23460113, 23470092, 23480102, 23490112, 23500091, 23510101,...</msg>
<status status="PASS" starttime="20201112 12:28:00.259" endtime="20201112 12:28:00.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.265" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:00.264" endtime="20201112 12:28:00.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.267" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:00.266" endtime="20201112 12:28:00.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.262" endtime="20201112 12:28:00.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.272" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:00.271" endtime="20201112 12:28:00.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.274" level="INFO">VALUE: 23340057</msg>
<status status="PASS" starttime="20201112 12:28:00.273" endtime="20201112 12:28:00.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.269" endtime="20201112 12:28:00.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.279" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:00.278" endtime="20201112 12:28:00.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.282" level="INFO">VALUE: [23350097, 23360107, 23370117, 23380096, 23390106, 23400115, 23410095, 23420104, 23430114, 23440093, 23450103, 23460113, 23470092, 23480102, 23490112, 23500091, 23510101, 23520111, 23530090, 23540100, 23550109, 23560089, 23570098, 23580108, 23590087, 23600097, 23610107, 23620117, 23630096, 23640106, 23650115, 23660095, 23670104, 23680114, 23690093, 23700103, 23710113, 23720092, 23730102, 23740112, 23750091, 23760101, 23770111, 23780090, 23790100, 23800109, 23810089, 23820098, 23830108, 23840087, 23850097, 23860107, 23870117, 23880096, 23890106, 23900115, 23910095, 23920104, 23930114, 23940093, 23950103, 23960113, 23970092, 23980102, 23990112, 24000091, 24010101, 24020111, 24030090, 24040100, 24050109, 24060089, 24070098, 24080108, 24090087, 24100097, 24110107, 24120117, 24130096, 24140106, 24150115, 24160095, 24170104, 24180114, 24190093, 24200103, 24210113, 24220092, 24230102, 24240112, 24250091, 24260101, 24270111, 24280090, 24290100, 24300109, 24310089, 24320098, 24330108, 24340087]</msg>
<status status="PASS" starttime="20201112 12:28:00.281" endtime="20201112 12:28:00.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.275" endtime="20201112 12:28:00.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.291" endtime="20201112 12:28:00.583"></status>
</kw>
<msg timestamp="20201112 12:28:00.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023544653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033604722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.289" endtime="20201112 12:28:00.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023544653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033604722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.587" endtime="20201112 12:28:00.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.595" endtime="20201112 12:28:00.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.285" endtime="20201112 12:28:00.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.284" endtime="20201112 12:28:00.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:00.621" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:00.598" endtime="20201112 12:28:00.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.626" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:00.625" endtime="20201112 12:28:00.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.628" level="INFO">VALUE: 0.023544653</msg>
<status status="PASS" starttime="20201112 12:28:00.627" endtime="20201112 12:28:00.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.622" endtime="20201112 12:28:00.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.633" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:00.632" endtime="20201112 12:28:00.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.636" level="INFO">VALUE: [0.033604722, 0.043613986, 0.053623444, 0.063602333, 0.073611889, 0.083621208, 0.093600139, 0.103609583, 0.113619028, 0.123597986, 0.133607486, 0.143616917, 0.153595875, 0.163605292, 0.173614792, 0.183593722, 0.193603208, 0.203612569, 0.213591472, 0.223600958, 0.233610472, 0.243589431, 0.253598764, 0.263608444, 0.273587819, 0.283596667, 0.293606083, 0.303615611, 0.313594542, 0.323604, 0.333613403, 0.343592333, 0.353601681, 0.363611292, 0.373590139, 0.383599667, 0.393609097, 0.403587986, 0.413597458, 0.423606847, 0.433585958, 0.443595375, 0.453604681, 0.463583625, 0.473593208, 0.483602472, 0.493581542, 0.503590972, 0.513600639, 0.523579931, 0.533588833, 0.543598222, 0.553607694, 0.563586653, 0.573596069, 0.583605583, 0.593584514, 0.603593986, 0.613603361, 0.623582292, 0.633591667, 0.643601167, 0.653580125, 0.663589639, 0.673599111, 0.683578, 0.693587486, 0.703596903, 0.713575903, 0.723585222, 0.733594722, 0.743573722, 0.753583167, 0.763592778, 0.773572097, 0.783580958, 0.793590361, 0.803599861, 0.813578833, 0.823588292, 0.833597722, 0.843576583, 0.853586097, 0.863595556, 0.873574486, 0.883583819, 0.893593306, 0.903572264, 0.913581694, 0.923591069, 0.933570042, 0.943579556, 0.953589056, 0.963567889, 0.973577417, 0.983586806, 0.993565819, 1.003575167, 1.013584917, 1.023564125] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:00.635" endtime="20201112 12:28:00.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.630" endtime="20201112 12:28:00.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.639" endtime="20201112 12:28:00.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:00.642" endtime="20201112 12:28:00.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.641" endtime="20201112 12:28:00.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.637" endtime="20201112 12:28:00.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.113" endtime="20201112 12:28:00.663"></status>
</kw>
<msg timestamp="20201112 12:28:00.663" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.679" endtime="20201112 12:28:02.805"></status>
</kw>
<msg timestamp="20201112 12:28:02.807" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25897644, 'wakeups': [25907684, 25917694, 25927703, 25937683, 25947692...</msg>
<status status="PASS" starttime="20201112 12:28:00.671" endtime="20201112 12:28:02.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.810" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25897644, 'wakeups': [25907684, 25917694, 25927703, 25937683, 25947692...</msg>
<status status="PASS" starttime="20201112 12:28:02.808" endtime="20201112 12:28:02.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.811" endtime="20201112 12:28:02.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.667" endtime="20201112 12:28:02.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.665" endtime="20201112 12:28:02.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:02.816" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [25907684, 25917694, 25927703, 25937683, 25947692, 25957702, 25967681, 25977691, 25987701, 25997680, 26007690, 26017700, 26027679, 26037689, 26047698, 26057678, 26067687,...</msg>
<status status="PASS" starttime="20201112 12:28:02.814" endtime="20201112 12:28:02.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.820" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:02.819" endtime="20201112 12:28:02.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.822" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:02.822" endtime="20201112 12:28:02.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.817" endtime="20201112 12:28:02.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.827" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:02.826" endtime="20201112 12:28:02.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.829" level="INFO">VALUE: 25897644</msg>
<status status="PASS" starttime="20201112 12:28:02.828" endtime="20201112 12:28:02.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.824" endtime="20201112 12:28:02.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.834" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:02.833" endtime="20201112 12:28:02.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.837" level="INFO">VALUE: [25907684, 25917694, 25927703, 25937683, 25947692, 25957702, 25967681, 25977691, 25987701, 25997680, 26007690, 26017700, 26027679, 26037689, 26047698, 26057678, 26067687, 26077697, 26087677, 26097686, 26107696, 26117675, 26127685, 26137695, 26147705, 26157684, 26167694, 26177703, 26187683, 26197692, 26207702, 26217681, 26227691, 26237701, 26247680, 26257690, 26267700, 26277679, 26287689, 26297698, 26307678, 26317687, 26327697, 26337677, 26347686, 26357696, 26367675, 26377685, 26387695, 26397705, 26407684, 26417694, 26427703, 26437683, 26447692, 26457702, 26467681, 26477691, 26487701, 26497680, 26507690, 26517700, 26527679, 26537689, 26547698, 26557678, 26567687, 26577697, 26587677, 26597686, 26607696, 26617675, 26627685, 26637695, 26647705, 26657684, 26667694, 26677703, 26687683, 26697692, 26707702, 26717681, 26727691, 26737701, 26747680, 26757690, 26767700, 26777679, 26787689, 26797698, 26807678, 26817687, 26827697, 26837677, 26847686, 26857696, 26867675, 26877685, 26887695, 26897705]</msg>
<status status="PASS" starttime="20201112 12:28:02.836" endtime="20201112 12:28:02.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.831" endtime="20201112 12:28:02.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.845" endtime="20201112 12:28:03.136"></status>
</kw>
<msg timestamp="20201112 12:28:03.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026722819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036788333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:02.843" endtime="20201112 12:28:03.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026722819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036788333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.139" endtime="20201112 12:28:03.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.147" endtime="20201112 12:28:03.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.840" endtime="20201112 12:28:03.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.839" endtime="20201112 12:28:03.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:03.174" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:03.150" endtime="20201112 12:28:03.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.179" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:03.178" endtime="20201112 12:28:03.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.181" level="INFO">VALUE: 0.026722819</msg>
<status status="PASS" starttime="20201112 12:28:03.180" endtime="20201112 12:28:03.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.175" endtime="20201112 12:28:03.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.186" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:03.185" endtime="20201112 12:28:03.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.188" level="INFO">VALUE: [0.036788333, 0.046797569, 0.056807014, 0.066785958, 0.076795375, 0.086804889, 0.096783833, 0.106793264, 0.116802694, 0.1267815, 0.136791056, 0.146800569, 0.156779444, 0.166788903, 0.176798292, 0.186777292, 0.196786764, 0.206796153, 0.216775097, 0.226784458, 0.236794083, 0.246772944, 0.256782361, 0.266791833, 0.276801306, 0.286780208, 0.296789639, 0.306799069, 0.316778125, 0.326787472, 0.336796986, 0.346775875, 0.356785375, 0.366794778, 0.376773778, 0.386783222, 0.396792694, 0.406771625, 0.416780972, 0.426790528, 0.436769403, 0.446778806, 0.456788278, 0.466767208, 0.476776722, 0.486786194, 0.496765111, 0.506774583, 0.516784028, 0.526793389, 0.536772319, 0.546781875, 0.556791319, 0.566770264, 0.576779667, 0.586789111, 0.596768042, 0.606777458, 0.616786875, 0.626765917, 0.636775361, 0.646784778, 0.656763778, 0.666773222, 0.676782653, 0.686761528, 0.696771042, 0.706780417, 0.716759319, 0.726768778, 0.736778333, 0.746757181, 0.756766708, 0.766776153, 0.776785569, 0.786764514, 0.796773875, 0.806783417, 0.816762403, 0.826771847, 0.836781306, 0.846760153, 0.856769569, 0.866779222, 0.876757958, 0.886767472, 0.896776889, 0.906755958, 0.916765347, 0.926774764, 0.936753611, 0.946763153, 0.956772542, 0.966751472, 0.976760986, 0.986770458, 0.996749361, 1.006758722, 1.01676825, 1.026777764] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:03.187" endtime="20201112 12:28:03.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.182" endtime="20201112 12:28:03.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.191" endtime="20201112 12:28:03.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:03.195" endtime="20201112 12:28:03.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.193" endtime="20201112 12:28:03.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.190" endtime="20201112 12:28:03.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.664" endtime="20201112 12:28:03.216"></status>
</kw>
<msg timestamp="20201112 12:28:03.216" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.224" endtime="20201112 12:28:05.350"></status>
</kw>
<msg timestamp="20201112 12:28:05.352" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28445129, 'wakeups': [28455200, 28465179, 28475189, 28485168, 28495178...</msg>
<status status="PASS" starttime="20201112 12:28:03.222" endtime="20201112 12:28:05.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.357" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28445129, 'wakeups': [28455200, 28465179, 28475189, 28485168, 28495178...</msg>
<status status="PASS" starttime="20201112 12:28:05.354" endtime="20201112 12:28:05.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.360" endtime="20201112 12:28:05.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.220" endtime="20201112 12:28:05.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.218" endtime="20201112 12:28:05.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:05.367" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [28455200, 28465179, 28475189, 28485168, 28495178, 28505187, 28515167, 28525177, 28535186, 28545166, 28555175, 28565185, 28575164, 28585174, 28595184, 28605163, 28615173,...</msg>
<status status="PASS" starttime="20201112 12:28:05.365" endtime="20201112 12:28:05.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.371" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:05.370" endtime="20201112 12:28:05.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.373" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:05.372" endtime="20201112 12:28:05.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.367" endtime="20201112 12:28:05.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.378" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:05.377" endtime="20201112 12:28:05.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.381" level="INFO">VALUE: 28445129</msg>
<status status="PASS" starttime="20201112 12:28:05.380" endtime="20201112 12:28:05.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.375" endtime="20201112 12:28:05.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.386" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:05.385" endtime="20201112 12:28:05.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.388" level="INFO">VALUE: [28455200, 28465179, 28475189, 28485168, 28495178, 28505187, 28515167, 28525177, 28535186, 28545166, 28555175, 28565185, 28575164, 28585174, 28595184, 28605163, 28615173, 28625183, 28635162, 28645172, 28655181, 28665161, 28675170, 28685180, 28695159, 28705169, 28715179, 28725189, 28735168, 28745178, 28755187, 28765167, 28775177, 28785186, 28795166, 28805175, 28815185, 28825164, 28835174, 28845184, 28855163, 28865173, 28875183, 28885162, 28895172, 28905181, 28915161, 28925170, 28935180, 28945159, 28955169, 28965179, 28975189, 28985168, 28995178, 29005187, 29015167, 29025177, 29035186, 29045166, 29055175, 29065185, 29075164, 29085174, 29095184, 29105163, 29115173, 29125183, 29135162, 29145172, 29155181, 29165161, 29175170, 29185180, 29195159, 29205169, 29215179, 29225189, 29235168, 29245178, 29255187, 29265167, 29275177, 29285186, 29295166, 29305175, 29315185, 29325164, 29335174, 29345184, 29355163, 29365173, 29375183, 29385162, 29395172, 29405181, 29415161, 29425170, 29435180, 29445159]</msg>
<status status="PASS" starttime="20201112 12:28:05.387" endtime="20201112 12:28:05.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.383" endtime="20201112 12:28:05.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.396" endtime="20201112 12:28:05.686"></status>
</kw>
<msg timestamp="20201112 12:28:05.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021319917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031397014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.394" endtime="20201112 12:28:05.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021319917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031397014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.690" endtime="20201112 12:28:05.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.697" endtime="20201112 12:28:05.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.392" endtime="20201112 12:28:05.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.390" endtime="20201112 12:28:05.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:05.724" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:05.701" endtime="20201112 12:28:05.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.729" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:05.727" endtime="20201112 12:28:05.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.731" level="INFO">VALUE: 0.021319917</msg>
<status status="PASS" starttime="20201112 12:28:05.730" endtime="20201112 12:28:05.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.725" endtime="20201112 12:28:05.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.736" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:05.735" endtime="20201112 12:28:05.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.745" level="INFO">VALUE: [0.031397014, 0.041375694, 0.051385083, 0.061364125, 0.0713735, 0.081383042, 0.091361944, 0.101371403, 0.111380764, 0.121359694, 0.131369139, 0.141378694, 0.151357597, 0.161367083, 0.171376514, 0.181355306, 0.191364847, 0.201374361, 0.211353181, 0.221362694, 0.231372194, 0.241351069, 0.251360583, 0.261370236, 0.271349597, 0.281358431, 0.291367819, 0.301377319, 0.311356222, 0.321365694, 0.331375069, 0.341354069, 0.351363542, 0.361372875, 0.371351861, 0.381361458, 0.391370736, 0.401349778, 0.411359208, 0.421368667, 0.431347514, 0.441357056, 0.451366486, 0.461345444, 0.471354833, 0.48136425, 0.491343264, 0.501352722, 0.511362431, 0.521341681, 0.5313505, 0.541359931, 0.551369403, 0.561348389, 0.571357819, 0.581367319, 0.591346139, 0.601355722, 0.611365208, 0.621344014, 0.631353403, 0.641362875, 0.651341917, 0.661351375, 0.671360722, 0.68133975, 0.691349236, 0.701358556, 0.711337611, 0.721346986, 0.731356403, 0.741335444, 0.751344806, 0.761354514, 0.771333792, 0.781342556, 0.791352125, 0.801361639, 0.811340542, 0.821349944, 0.831359403, 0.841338361, 0.851347833, 0.861357222, 0.871336194, 0.881345569, 0.891355167, 0.901334, 0.911343486, 0.921352972, 0.931331847, 0.941341208, 0.951350694, 0.96132975, 0.971339125, 0.981348611, 0.991327569, 1.001336972, 1.011346653, 1.021326] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:05.738" endtime="20201112 12:28:05.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.732" endtime="20201112 12:28:05.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.749" endtime="20201112 12:28:05.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:05.752" endtime="20201112 12:28:05.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.750" endtime="20201112 12:28:05.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.747" endtime="20201112 12:28:05.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.216" endtime="20201112 12:28:05.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.110" endtime="20201112 12:28:05.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.110" endtime="20201112 12:28:05.773"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:05.776" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.784" endtime="20201112 12:28:07.916"></status>
</kw>
<msg timestamp="20201112 12:28:07.918" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31007751, 'wakeups': [31017822, 31027801, 31037841, 31047790, 31057830...</msg>
<status status="PASS" starttime="20201112 12:28:05.782" endtime="20201112 12:28:07.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.923" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31007751, 'wakeups': [31017822, 31027801, 31037841, 31047790, 31057830...</msg>
<status status="PASS" starttime="20201112 12:28:07.920" endtime="20201112 12:28:07.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.926" endtime="20201112 12:28:07.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.780" endtime="20201112 12:28:07.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.778" endtime="20201112 12:28:07.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:07.931" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [31017822, 31027801, 31037841, 31047790, 31057830, 31067810, 31077819, 31087799, 31097839, 31107788, 31117828, 31127807, 31137817, 31147796, 31157836, 31167785, 31177825,...</msg>
<status status="PASS" starttime="20201112 12:28:07.930" endtime="20201112 12:28:07.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.936" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:07.935" endtime="20201112 12:28:07.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.938" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:07.937" endtime="20201112 12:28:07.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.932" endtime="20201112 12:28:07.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.943" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:07.942" endtime="20201112 12:28:07.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.945" level="INFO">VALUE: 31007751</msg>
<status status="PASS" starttime="20201112 12:28:07.944" endtime="20201112 12:28:07.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.939" endtime="20201112 12:28:07.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.950" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:07.949" endtime="20201112 12:28:07.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.952" level="INFO">VALUE: [31017822, 31027801, 31037841, 31047790, 31057830, 31067810, 31077819, 31087799, 31097839, 31107788, 31117828, 31127807, 31137817, 31147796, 31157836, 31167785, 31177825, 31187805, 31197814, 31207794, 31217834, 31227783, 31237823, 31247802, 31257812, 31267791, 31277832, 31287811, 31297821, 31307800, 31317840, 31327789, 31337829, 31347808, 31357818, 31367797, 31377838, 31387786, 31397827, 31407806, 31417816, 31427795, 31437835, 31447784, 31457824, 31467803, 31477813, 31487792, 31497833, 31507781, 31517761, 31527832, 31537811, 31547760, 31557830, 31567810, 31577819, 31587799, 31597839, 31607788, 31617828, 31627807, 31637817, 31647796, 31657836, 31667785, 31677825, 31687805, 31697814, 31707794, 31717834, 31727783, 31737823, 31747802, 31757812, 31767791, 31777832, 31787811, 31797821, 31807800, 31817840, 31827789, 31837829, 31847808, 31857818, 31867797, 31877838, 31887786, 31897827, 31907806, 31917816, 31927795, 31937835, 31947784, 31957824, 31967803, 31977813, 31987792, 31997833, 32007781]</msg>
<status status="PASS" starttime="20201112 12:28:07.951" endtime="20201112 12:28:07.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.946" endtime="20201112 12:28:07.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.960" endtime="20201112 12:28:08.253"></status>
</kw>
<msg timestamp="20201112 12:28:08.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026346722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036431514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.958" endtime="20201112 12:28:08.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026346722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036431514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.257" endtime="20201112 12:28:08.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.264" endtime="20201112 12:28:08.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.955" endtime="20201112 12:28:08.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.954" endtime="20201112 12:28:08.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:08.291" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:08.268" endtime="20201112 12:28:08.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.295" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:08.294" endtime="20201112 12:28:08.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.297" level="INFO">VALUE: 0.026346722</msg>
<status status="PASS" starttime="20201112 12:28:08.296" endtime="20201112 12:28:08.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.292" endtime="20201112 12:28:08.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.302" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:08.301" endtime="20201112 12:28:08.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.305" level="INFO">VALUE: [0.036431514, 0.046422139, 0.056450125, 0.066410569, 0.0764385, 0.086429431, 0.096426917, 0.10641775, 0.116445792, 0.126406278, 0.136434236, 0.146425111, 0.156422597, 0.166413542, 0.176441444, 0.186401917, 0.196429889, 0.206420764, 0.216418236, 0.226409194, 0.236437167, 0.246397639, 0.256425458, 0.266416722, 0.276414528, 0.286404875, 0.296432861, 0.306423819, 0.316421208, 0.326412194, 0.336440167, 0.346400583, 0.3564285, 0.366419444, 0.376416944, 0.386407875, 0.396435778, 0.406396222, 0.416424208, 0.426415153, 0.436412583, 0.446403528, 0.456431458, 0.466391917, 0.476419819, 0.486410736, 0.496408264, 0.506399139, 0.516426653, 0.52636975, 0.536360875, 0.546424931, 0.556398056, 0.566358625, 0.576422708, 0.586413653, 0.596411222, 0.606402194, 0.616430167, 0.626390556, 0.636418528, 0.646409472, 0.656406819, 0.666397889, 0.676425764, 0.686386167, 0.696414181, 0.706405153, 0.716402625, 0.726393569, 0.736421528, 0.746381917, 0.756409792, 0.766401042, 0.776398847, 0.786389194, 0.796417125, 0.806408167, 0.816405556, 0.826396375, 0.836424431, 0.846384861, 0.85641275, 0.866403806, 0.876401208, 0.886392083, 0.896420069, 0.906380514, 0.916408444, 0.926399431, 0.936396917, 0.946387861, 0.956415847, 0.966376208, 0.976404236, 0.986395028, 0.996392569, 1.006383528, 1.016410917, 1.026353944] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:08.304" endtime="20201112 12:28:08.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.299" endtime="20201112 12:28:08.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.308" endtime="20201112 12:28:08.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:08.312" endtime="20201112 12:28:08.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.310" endtime="20201112 12:28:08.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.306" endtime="20201112 12:28:08.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.776" endtime="20201112 12:28:08.332"></status>
</kw>
<msg timestamp="20201112 12:28:08.333" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.342" endtime="20201112 12:28:10.471"></status>
</kw>
<msg timestamp="20201112 12:28:10.472" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33565307, 'wakeups': [33575408, 33585357, 33595397, 33605346, 33615386...</msg>
<status status="PASS" starttime="20201112 12:28:08.340" endtime="20201112 12:28:10.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.475" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33565307, 'wakeups': [33575408, 33585357, 33595397, 33605346, 33615386...</msg>
<status status="PASS" starttime="20201112 12:28:10.473" endtime="20201112 12:28:10.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.476" endtime="20201112 12:28:10.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.337" endtime="20201112 12:28:10.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.335" endtime="20201112 12:28:10.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:10.481" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [33575408, 33585357, 33595397, 33605346, 33615386, 33625366, 33635375, 33645355, 33655395, 33665344, 33675384, 33685363, 33695373, 33705352, 33715393, 33725341, 33735382,...</msg>
<status status="PASS" starttime="20201112 12:28:10.479" endtime="20201112 12:28:10.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.486" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:10.485" endtime="20201112 12:28:10.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.488" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:10.487" endtime="20201112 12:28:10.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.482" endtime="20201112 12:28:10.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.493" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:10.492" endtime="20201112 12:28:10.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.495" level="INFO">VALUE: 33565307</msg>
<status status="PASS" starttime="20201112 12:28:10.494" endtime="20201112 12:28:10.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.489" endtime="20201112 12:28:10.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.499" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:10.498" endtime="20201112 12:28:10.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.502" level="INFO">VALUE: [33575408, 33585357, 33595397, 33605346, 33615386, 33625366, 33635375, 33645355, 33655395, 33665344, 33675384, 33685363, 33695373, 33705352, 33715393, 33725341, 33735382, 33745361, 33755371, 33765350, 33775390, 33785339, 33795379, 33805358, 33815368, 33825347, 33835388, 33845367, 33855377, 33865356, 33875396, 33885345, 33895385, 33905364, 33915374, 33925354, 33935394, 33945343, 33955383, 33965362, 33975372, 33985351, 33995391, 34005340, 34015380, 34025360, 34035369, 34045349, 34055389, 34065338, 34075317, 34085388, 34095367, 34105316, 34115386, 34125366, 34135314, 34145385, 34155364, 34165313, 34175384, 34185363, 34195373, 34205352, 34215393, 34225341, 34235382, 34245361, 34255371, 34265350, 34275390, 34285339, 34295379, 34305358, 34315368, 34325347, 34335388, 34345367, 34355377, 34365356, 34375396, 34385345, 34395385, 34405364, 34415374, 34425354, 34435394, 34445343, 34455383, 34465362, 34475372, 34485351, 34495391, 34505340, 34515380, 34525360, 34535369, 34545349, 34555389, 34565338]</msg>
<status status="PASS" starttime="20201112 12:28:10.501" endtime="20201112 12:28:10.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.496" endtime="20201112 12:28:10.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.510" endtime="20201112 12:28:10.798"></status>
</kw>
<msg timestamp="20201112 12:28:10.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023968833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034060292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.507" endtime="20201112 12:28:10.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023968833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034060292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.802" endtime="20201112 12:28:10.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.810" endtime="20201112 12:28:10.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.505" endtime="20201112 12:28:10.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.503" endtime="20201112 12:28:10.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:10.837" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:10.813" endtime="20201112 12:28:10.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.842" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:10.841" endtime="20201112 12:28:10.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.844" level="INFO">VALUE: 0.023968833</msg>
<status status="PASS" starttime="20201112 12:28:10.843" endtime="20201112 12:28:10.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.838" endtime="20201112 12:28:10.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.849" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:10.848" endtime="20201112 12:28:10.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.851" level="INFO">VALUE: [0.034060292, 0.044020361, 0.054048167, 0.064008694, 0.074036708, 0.084027625, 0.094024931, 0.104015917, 0.114043875, 0.124004292, 0.13403225, 0.144023236, 0.154020667, 0.164011653, 0.174039514, 0.183999986, 0.194027917, 0.204018875, 0.214016333, 0.224007208, 0.23403525, 0.243995708, 0.254023667, 0.264014792, 0.274012542, 0.284003028, 0.294030847, 0.304021875, 0.314019431, 0.324010278, 0.334038194, 0.343998583, 0.354026667, 0.364017556, 0.374015014, 0.384005875, 0.394033778, 0.403994236, 0.414022236, 0.424013139, 0.434010681, 0.444001625, 0.454029611, 0.463990014, 0.474018, 0.484008875, 0.494006278, 0.503997194, 0.514024681, 0.523967764, 0.533958917, 0.544023056, 0.553996167, 0.56395675, 0.574020861, 0.583993917, 0.593954625, 0.604018708, 0.613991792, 0.623952403, 0.634016431, 0.644007486, 0.654004931, 0.663995861, 0.674023806, 0.683984222, 0.694012181, 0.704003139, 0.714000569, 0.723991556, 0.734019569, 0.743979958, 0.754007875, 0.763999097, 0.773996944, 0.783987208, 0.794015292, 0.804006097, 0.814003625, 0.823994611, 0.834022472, 0.843982931, 0.854010944, 0.864001806, 0.873999319, 0.88399025, 0.894018222, 0.903978625, 0.914006569, 0.923997514, 0.933994986, 0.943985958, 0.954013819, 0.963974333, 0.974002319, 0.983993222, 0.993990667, 1.003981486, 1.014009014, 1.023952042] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:10.850" endtime="20201112 12:28:10.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.845" endtime="20201112 12:28:10.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.854" endtime="20201112 12:28:10.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:10.858" endtime="20201112 12:28:10.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.856" endtime="20201112 12:28:10.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.853" endtime="20201112 12:28:10.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.333" endtime="20201112 12:28:10.879"></status>
</kw>
<msg timestamp="20201112 12:28:10.879" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.887" endtime="20201112 12:28:12.998"></status>
</kw>
<msg timestamp="20201112 12:28:12.998" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36107818, 'wakeups': [36117889, 36127868, 36137908, 36147857, 36157897...</msg>
<status status="PASS" starttime="20201112 12:28:10.885" endtime="20201112 12:28:12.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.001" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36107818, 'wakeups': [36117889, 36127868, 36137908, 36147857, 36157897...</msg>
<status status="PASS" starttime="20201112 12:28:12.999" endtime="20201112 12:28:13.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.003" endtime="20201112 12:28:13.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.883" endtime="20201112 12:28:13.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.881" endtime="20201112 12:28:13.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:13.008" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [36117889, 36127868, 36137908, 36147857, 36157897, 36167877, 36177886, 36187866, 36197906, 36207855, 36217895, 36227874, 36237884, 36247863, 36257904, 36267852, 36277893,...</msg>
<status status="PASS" starttime="20201112 12:28:13.006" endtime="20201112 12:28:13.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.012" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:13.011" endtime="20201112 12:28:13.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.014" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:13.013" endtime="20201112 12:28:13.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.009" endtime="20201112 12:28:13.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.020" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:13.019" endtime="20201112 12:28:13.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.022" level="INFO">VALUE: 36107818</msg>
<status status="PASS" starttime="20201112 12:28:13.021" endtime="20201112 12:28:13.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.016" endtime="20201112 12:28:13.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.027" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:13.026" endtime="20201112 12:28:13.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.029" level="INFO">VALUE: [36117889, 36127868, 36137908, 36147857, 36157897, 36167877, 36177886, 36187866, 36197906, 36207855, 36217895, 36227874, 36237884, 36247863, 36257904, 36267852, 36277893, 36287872, 36297882, 36307861, 36317901, 36327850, 36337890, 36347869, 36357879, 36367858, 36377899, 36387878, 36397888, 36407867, 36417907, 36427856, 36437896, 36447875, 36457885, 36467864, 36477905, 36487854, 36497894, 36507873, 36517883, 36527862, 36537902, 36547851, 36557891, 36567871, 36577880, 36587860, 36597900, 36607849, 36617828, 36627899, 36637878, 36647827, 36657897, 36667877, 36677825, 36687896, 36697875, 36707824, 36717895, 36727874, 36737823, 36747894, 36757873, 36767822, 36777893, 36787872, 36797821, 36807891, 36817871, 36827819, 36837890, 36847869, 36857879, 36867858, 36877899, 36887878, 36897888, 36907867, 36917907, 36927856, 36937896, 36947875, 36957885, 36967864, 36977905, 36987854, 36997894, 37007873, 37017883, 37027862, 37037902, 37047851, 37057891, 37067871, 37077880, 37087860, 37097900, 37107849]</msg>
<status status="PASS" starttime="20201112 12:28:13.028" endtime="20201112 12:28:13.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.024" endtime="20201112 12:28:13.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.037" endtime="20201112 12:28:13.329"></status>
</kw>
<msg timestamp="20201112 12:28:13.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029860278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.035" endtime="20201112 12:28:13.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029860278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.333" endtime="20201112 12:28:13.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.341" endtime="20201112 12:28:13.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.033" endtime="20201112 12:28:13.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.031" endtime="20201112 12:28:13.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:13.367" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:13.344" endtime="20201112 12:28:13.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.372" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:13.371" endtime="20201112 12:28:13.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.374" level="INFO">VALUE: 0.019783556</msg>
<status status="PASS" starttime="20201112 12:28:13.373" endtime="20201112 12:28:13.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.368" endtime="20201112 12:28:13.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.380" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:13.379" endtime="20201112 12:28:13.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.382" level="INFO">VALUE: [0.029860278, 0.039850528, 0.049878444, 0.059838903, 0.069866819, 0.079857875, 0.089855167, 0.099846222, 0.109874042, 0.119834569, 0.129862472, 0.139853389, 0.149850903, 0.159841889, 0.16986975, 0.179830222, 0.189858194, 0.199849069, 0.209846556, 0.219837514, 0.229865528, 0.239825792, 0.249853861, 0.259845042, 0.269842861, 0.279833236, 0.289861097, 0.299852097, 0.309849583, 0.3198405, 0.329868444, 0.339828792, 0.349856889, 0.359847708, 0.369845125, 0.379836083, 0.389864167, 0.399824542, 0.409852486, 0.419843458, 0.429840833, 0.439831764, 0.449859792, 0.459820181, 0.469848222, 0.479839069, 0.489836569, 0.499827431, 0.509854986, 0.519797903, 0.529789167, 0.539853292, 0.549826361, 0.559786958, 0.569851111, 0.579824181, 0.589784792, 0.599848917, 0.609822028, 0.619782667, 0.629846625, 0.639819833, 0.649780472, 0.659844597, 0.669817681, 0.679778333, 0.689842347, 0.699815472, 0.709776097, 0.719840139, 0.729813292, 0.739773972, 0.749838014, 0.759811208, 0.769826528, 0.779817417, 0.789845347, 0.799836278, 0.809833792, 0.819824764, 0.829852708, 0.839812986, 0.849841042, 0.859831917, 0.869829389, 0.879820389, 0.889848319, 0.899808806, 0.909836722, 0.919827639, 0.929825125, 0.939816083, 0.949843972, 0.959804486, 0.969832444, 0.979823319, 0.989820736, 0.999811681, 1.009839306, 1.019782167] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:13.381" endtime="20201112 12:28:13.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.375" endtime="20201112 12:28:13.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.385" endtime="20201112 12:28:13.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:13.389" endtime="20201112 12:28:13.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.387" endtime="20201112 12:28:13.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.384" endtime="20201112 12:28:13.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.879" endtime="20201112 12:28:13.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.774" endtime="20201112 12:28:13.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.773" endtime="20201112 12:28:13.410"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:13.413" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.421" endtime="20201112 12:28:15.540"></status>
</kw>
<msg timestamp="20201112 12:28:15.540" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38645294, 'wakeups': [38655395, 38665374, 38675354, 38685302, 38695404...</msg>
<status status="PASS" starttime="20201112 12:28:13.419" endtime="20201112 12:28:15.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.543" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38645294, 'wakeups': [38655395, 38665374, 38675354, 38685302, 38695404...</msg>
<status status="PASS" starttime="20201112 12:28:15.542" endtime="20201112 12:28:15.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.544" endtime="20201112 12:28:15.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.417" endtime="20201112 12:28:15.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.415" endtime="20201112 12:28:15.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:15.550" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [38655395, 38665374, 38675354, 38685302, 38695404, 38705383, 38715362, 38725341, 38735321, 38745391, 38755371, 38765380, 38775329, 38785308, 38795410, 38805358, 38815368,...</msg>
<status status="PASS" starttime="20201112 12:28:15.548" endtime="20201112 12:28:15.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.554" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:15.553" endtime="20201112 12:28:15.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.556" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:15.555" endtime="20201112 12:28:15.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.550" endtime="20201112 12:28:15.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.561" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:15.560" endtime="20201112 12:28:15.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.563" level="INFO">VALUE: 38645294</msg>
<status status="PASS" starttime="20201112 12:28:15.562" endtime="20201112 12:28:15.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.558" endtime="20201112 12:28:15.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.568" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:15.567" endtime="20201112 12:28:15.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.570" level="INFO">VALUE: [38655395, 38665374, 38675354, 38685302, 38695404, 38705383, 38715362, 38725341, 38735321, 38745391, 38755371, 38765380, 38775329, 38785308, 38795410, 38805358, 38815368, 38825347, 38835296, 38845397, 38855377, 38865356, 38875335, 38885314, 38895416, 38905364, 38915374, 38925354, 38935302, 38945404, 38955383, 38965362, 38975341, 38985321, 38995391, 39005371, 39015380, 39025329, 39035308, 39045410, 39055358, 39065368, 39075347, 39085296, 39095397, 39105377, 39115356, 39125335, 39135314, 39145416, 39155364, 39165374, 39175354, 39185302, 39195404, 39205383, 39215362, 39225341, 39235321, 39245391, 39255371, 39265380, 39275329, 39285308, 39295410, 39305358, 39315368, 39325347, 39335296, 39345397, 39355377, 39365356, 39375335, 39385314, 39395416, 39405364, 39415374, 39425354, 39435302, 39445404, 39455383, 39465362, 39475341, 39485321, 39495391, 39505371, 39515380, 39525329, 39535308, 39545410, 39555358, 39565368, 39575347, 39585296, 39595397, 39605377, 39615356, 39625335, 39635314, 39645416]</msg>
<status status="PASS" starttime="20201112 12:28:15.569" endtime="20201112 12:28:15.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.565" endtime="20201112 12:28:15.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.579" endtime="20201112 12:28:15.870"></status>
</kw>
<msg timestamp="20201112 12:28:15.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025894208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035998792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.577" endtime="20201112 12:28:15.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025894208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035998792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.874" endtime="20201112 12:28:15.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.881" endtime="20201112 12:28:15.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.573" endtime="20201112 12:28:15.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.572" endtime="20201112 12:28:15.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:15.907" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:15.885" endtime="20201112 12:28:15.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.912" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:15.911" endtime="20201112 12:28:15.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.914" level="INFO">VALUE: 0.025894208</msg>
<status status="PASS" starttime="20201112 12:28:15.913" endtime="20201112 12:28:15.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.908" endtime="20201112 12:28:15.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.919" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:15.918" endtime="20201112 12:28:15.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.921" level="INFO">VALUE: [0.035998792, 0.045968986, 0.055959653, 0.065919667, 0.076004792, 0.085995014, 0.095954986, 0.105945722, 0.115936347, 0.125991042, 0.135981208, 0.14597175, 0.155931833, 0.165922542, 0.176007653, 0.185967403, 0.195957917, 0.205948625, 0.215908819, 0.225993917, 0.235984167, 0.245944181, 0.255934861, 0.265925528, 0.276010542, 0.285970361, 0.295960806, 0.305951528, 0.315911764, 0.32599675, 0.335987125, 0.345947069, 0.355937764, 0.365928569, 0.375983042, 0.385973264, 0.395963875, 0.405923986, 0.415914681, 0.42599975, 0.435959458, 0.445950097, 0.455940736, 0.465900861, 0.475986069, 0.485976264, 0.495936347, 0.505927014, 0.515917694, 0.526002653, 0.535962583, 0.545953097, 0.555943681, 0.565903944, 0.575989, 0.585979236, 0.595939306, 0.605929861, 0.615920694, 0.625975069, 0.635965458, 0.645955958, 0.655916083, 0.665906875, 0.675991931, 0.685951625, 0.695942264, 0.705932944, 0.715893069, 0.725978139, 0.735968444, 0.745928417, 0.755919097, 0.765909833, 0.775994944, 0.785954653, 0.795945181, 0.805935806, 0.815896042, 0.825981125, 0.835971375, 0.845931347, 0.855922111, 0.865912722, 0.875967347, 0.885957681, 0.895948153, 0.905908319, 0.915898958, 0.925984139, 0.935943931, 0.945934361, 0.955925, 0.965885181, 0.975970306, 0.985960597, 0.995920597, 1.005911319, 1.015902014, 1.025987056] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:15.920" endtime="20201112 12:28:15.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.915" endtime="20201112 12:28:15.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.925" endtime="20201112 12:28:15.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:15.928" endtime="20201112 12:28:15.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.927" endtime="20201112 12:28:15.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.923" endtime="20201112 12:28:15.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.413" endtime="20201112 12:28:15.949"></status>
</kw>
<msg timestamp="20201112 12:28:15.949" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.959" endtime="20201112 12:28:18.087"></status>
</kw>
<msg timestamp="20201112 12:28:18.088" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41182769, 'wakeups': [41192871, 41202850, 41212860, 41222808, 41232788...</msg>
<status status="PASS" starttime="20201112 12:28:15.957" endtime="20201112 12:28:18.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.094" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41182769, 'wakeups': [41192871, 41202850, 41212860, 41222808, 41232788...</msg>
<status status="PASS" starttime="20201112 12:28:18.090" endtime="20201112 12:28:18.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.096" endtime="20201112 12:28:18.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.953" endtime="20201112 12:28:18.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.951" endtime="20201112 12:28:18.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:18.102" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [41192871, 41202850, 41212860, 41222808, 41232788, 41242889, 41252838, 41262847, 41272827, 41282775, 41292877, 41302856, 41312835, 41322814, 41332794, 41342864, 41352844,...</msg>
<status status="PASS" starttime="20201112 12:28:18.100" endtime="20201112 12:28:18.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.106" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:18.105" endtime="20201112 12:28:18.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.108" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:18.107" endtime="20201112 12:28:18.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.103" endtime="20201112 12:28:18.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.113" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:18.112" endtime="20201112 12:28:18.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.115" level="INFO">VALUE: 41182769</msg>
<status status="PASS" starttime="20201112 12:28:18.114" endtime="20201112 12:28:18.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.109" endtime="20201112 12:28:18.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.120" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:18.119" endtime="20201112 12:28:18.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.122" level="INFO">VALUE: [41192871, 41202850, 41212860, 41222808, 41232788, 41242889, 41252838, 41262847, 41272827, 41282775, 41292877, 41302856, 41312835, 41322814, 41332794, 41342864, 41352844, 41362854, 41372802, 41382781, 41392883, 41402832, 41412841, 41422821, 41432769, 41442871, 41452850, 41462860, 41472808, 41482788, 41492889, 41502838, 41512847, 41522827, 41532775, 41542877, 41552856, 41562835, 41572814, 41582794, 41592864, 41602844, 41612854, 41622802, 41632781, 41642883, 41652832, 41662841, 41672821, 41682769, 41692871, 41702850, 41712860, 41722808, 41732788, 41742889, 41752838, 41762847, 41772827, 41782775, 41792877, 41802856, 41812835, 41822814, 41832794, 41842864, 41852844, 41862854, 41872802, 41882781, 41892883, 41902832, 41912841, 41922821, 41932769, 41942871, 41952850, 41962860, 41972808, 41982788, 41992889, 42002838, 42012847, 42022827, 42032775, 42042877, 42052856, 42062835, 42072814, 42082794, 42092864, 42102844, 42112854, 42122802, 42132781, 42142883, 42152832, 42162841, 42172821, 42182769]</msg>
<status status="PASS" starttime="20201112 12:28:18.121" endtime="20201112 12:28:18.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.116" endtime="20201112 12:28:18.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.134" endtime="20201112 12:28:18.426"></status>
</kw>
<msg timestamp="20201112 12:28:18.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023503319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033629694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:18.132" endtime="20201112 12:28:18.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023503319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033629694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:18.430" endtime="20201112 12:28:18.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.438" endtime="20201112 12:28:18.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.130" endtime="20201112 12:28:18.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.123" endtime="20201112 12:28:18.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:18.464" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:18.441" endtime="20201112 12:28:18.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.469" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:18.468" endtime="20201112 12:28:18.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.471" level="INFO">VALUE: 0.023503319</msg>
<status status="PASS" starttime="20201112 12:28:18.470" endtime="20201112 12:28:18.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.465" endtime="20201112 12:28:18.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.476" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:18.475" endtime="20201112 12:28:18.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.478" level="INFO">VALUE: [0.033629694, 0.04361925, 0.053609611, 0.063569847, 0.073560514, 0.083645528, 0.093605444, 0.103595792, 0.113586542, 0.123546736, 0.133631806, 0.143622167, 0.153582125, 0.163572833, 0.173563528, 0.183618, 0.193608306, 0.203598903, 0.213558972, 0.223549806, 0.233634778, 0.243594611, 0.253585125, 0.263575792, 0.273535931, 0.283620917, 0.293611375, 0.303601833, 0.313562097, 0.323552708, 0.333637708, 0.343597542, 0.353588097, 0.363578764, 0.373538917, 0.383623903, 0.393614278, 0.403574278, 0.413565, 0.423555694, 0.433610264, 0.443600528, 0.453591042, 0.463551153, 0.473541903, 0.483626958, 0.493586764, 0.503577236, 0.513567917, 0.523528167, 0.533613181, 0.543603403, 0.553594, 0.563554042, 0.573544861, 0.583629792, 0.593589694, 0.603580153, 0.613570931, 0.623531097, 0.633616042, 0.643606375, 0.653566431, 0.663557153, 0.673547819, 0.683602278, 0.693592653, 0.703583083, 0.713543319, 0.723533986, 0.733618958, 0.743578875, 0.753569347, 0.763560028, 0.773520222, 0.783605222, 0.793595625, 0.803586125, 0.81354625, 0.823536903, 0.833622069, 0.843581847, 0.853572278, 0.863563028, 0.873523125, 0.883608167, 0.893598556, 0.903558583, 0.913549208, 0.923539861, 0.933594431, 0.943584833, 0.953575208, 0.963535458, 0.973526139, 0.983611347, 0.993570931, 1.003561472, 1.013552139, 1.023512361] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:18.477" endtime="20201112 12:28:18.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.472" endtime="20201112 12:28:18.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.482" endtime="20201112 12:28:18.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:18.485" endtime="20201112 12:28:18.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.483" endtime="20201112 12:28:18.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.480" endtime="20201112 12:28:18.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.950" endtime="20201112 12:28:18.506"></status>
</kw>
<msg timestamp="20201112 12:28:18.506" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.514" endtime="20201112 12:28:20.640"></status>
</kw>
<msg timestamp="20201112 12:28:20.641" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43735290, 'wakeups': [43745391, 43755371, 43765350, 43775299, 43785369...</msg>
<status status="PASS" starttime="20201112 12:28:18.513" endtime="20201112 12:28:20.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.645" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43735290, 'wakeups': [43745391, 43755371, 43765350, 43775299, 43785369...</msg>
<status status="PASS" starttime="20201112 12:28:20.643" endtime="20201112 12:28:20.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.646" endtime="20201112 12:28:20.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.510" endtime="20201112 12:28:20.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.508" endtime="20201112 12:28:20.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:20.651" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [43745391, 43755371, 43765350, 43775299, 43785369, 43795379, 43805328, 43815307, 43825408, 43835357, 43845367, 43855346, 43865295, 43875396, 43885375, 43895355, 43905334,...</msg>
<status status="PASS" starttime="20201112 12:28:20.649" endtime="20201112 12:28:20.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.655" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:20.654" endtime="20201112 12:28:20.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.658" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:20.657" endtime="20201112 12:28:20.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.652" endtime="20201112 12:28:20.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.662" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:20.661" endtime="20201112 12:28:20.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.666" level="INFO">VALUE: 43735290</msg>
<status status="PASS" starttime="20201112 12:28:20.665" endtime="20201112 12:28:20.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.659" endtime="20201112 12:28:20.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.671" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:20.670" endtime="20201112 12:28:20.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.673" level="INFO">VALUE: [43745391, 43755371, 43765350, 43775299, 43785369, 43795379, 43805328, 43815307, 43825408, 43835357, 43845367, 43855346, 43865295, 43875396, 43885375, 43895355, 43905334, 43915313, 43925384, 43935363, 43945373, 43955322, 43965301, 43975402, 43985382, 43995361, 44005371, 44015350, 44025299, 44035400, 44045379, 44055358, 44065338, 44075317, 44085388, 44095367, 44105377, 44115325, 44125305, 44135406, 44145355, 44155364, 44165344, 44175292, 44185394, 44195373, 44205352, 44215332, 44225311, 44235351, 44245330, 44255310, 44265380, 44275360, 44285339, 44295318, 44305389, 44315368, 44325378, 44335327, 44345306, 44355407, 44365356, 44375366, 44385345, 44395294, 44405395, 44415374, 44425354, 44435333, 44445312, 44455383, 44465362, 44475372, 44485290, 44495361, 44505371, 44515350, 44525299, 44535400, 44545379, 44555358, 44565338, 44575317, 44585388, 44595367, 44605377, 44615325, 44625305, 44635406, 44645355, 44655364, 44665344, 44675292, 44685394, 44695373, 44705352, 44715332, 44725311, 44735351]</msg>
<status status="PASS" starttime="20201112 12:28:20.672" endtime="20201112 12:28:20.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.667" endtime="20201112 12:28:20.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.680" endtime="20201112 12:28:20.972"></status>
</kw>
<msg timestamp="20201112 12:28:20.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018891722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029001264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:20.679" endtime="20201112 12:28:20.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018891722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029001264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:20.976" endtime="20201112 12:28:20.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.984" endtime="20201112 12:28:20.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.676" endtime="20201112 12:28:20.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.674" endtime="20201112 12:28:20.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:21.010" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:20.987" endtime="20201112 12:28:21.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.015" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:21.014" endtime="20201112 12:28:21.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.017" level="INFO">VALUE: 0.018891722</msg>
<status status="PASS" starttime="20201112 12:28:21.016" endtime="20201112 12:28:21.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.011" endtime="20201112 12:28:21.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.022" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:21.021" endtime="20201112 12:28:21.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.025" level="INFO">VALUE: [0.029001264, 0.038971375, 0.048962083, 0.058922264, 0.068988167, 0.078978444, 0.088938667, 0.098929417, 0.109014431, 0.118974222, 0.128964722, 0.138955431, 0.148915556, 0.15900075, 0.168990958, 0.178950944, 0.188941583, 0.198932431, 0.208986875, 0.218977153, 0.228967694, 0.238927847, 0.248918514, 0.259002486, 0.268982903, 0.278972708, 0.288963389, 0.298954014, 0.308914139, 0.318999306, 0.328989639, 0.338949625, 0.348940236, 0.358931056, 0.3689855, 0.378975847, 0.388966306, 0.398926528, 0.408917167, 0.41900225, 0.428962083, 0.438952569, 0.448943236, 0.458903361, 0.468988472, 0.478978792, 0.488938778, 0.498929444, 0.508920167, 0.518937028, 0.5289275, 0.538918194, 0.548984139, 0.558943889, 0.568934556, 0.578925236, 0.58897975, 0.598970167, 0.608960639, 0.618920764, 0.628911514, 0.638996444, 0.648956347, 0.658946819, 0.668937514, 0.678897667, 0.688982806, 0.698973056, 0.708933097, 0.71892375, 0.728914375, 0.738968986, 0.748959319, 0.758950028, 0.768891625, 0.778957403, 0.788947639, 0.798938333, 0.808898542, 0.818983514, 0.828973917, 0.838933861, 0.848924472, 0.85891525, 0.868969764, 0.878959986, 0.888950583, 0.898910736, 0.908901486, 0.918986472, 0.928946236, 0.938936736, 0.948927597, 0.958887764, 0.968972819, 0.978963111, 0.988923097, 0.998913778, 1.008904444, 1.018921208] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:21.024" endtime="20201112 12:28:21.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.018" endtime="20201112 12:28:21.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.028" endtime="20201112 12:28:21.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:21.032" endtime="20201112 12:28:21.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.030" endtime="20201112 12:28:21.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.027" endtime="20201112 12:28:21.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.507" endtime="20201112 12:28:21.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.411" endtime="20201112 12:28:21.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.410" endtime="20201112 12:28:21.053"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:21.056" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.064" endtime="20201112 12:28:23.191"></status>
</kw>
<msg timestamp="20201112 12:28:23.192" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46287841, 'wakeups': [46297973, 46307922, 46317993, 46327911, 46337982...</msg>
<status status="PASS" starttime="20201112 12:28:21.062" endtime="20201112 12:28:23.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.197" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46287841, 'wakeups': [46297973, 46307922, 46317993, 46327911, 46337982...</msg>
<status status="PASS" starttime="20201112 12:28:23.195" endtime="20201112 12:28:23.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.199" endtime="20201112 12:28:23.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.059" endtime="20201112 12:28:23.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.058" endtime="20201112 12:28:23.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:23.204" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [46297973, 46307922, 46317993, 46327911, 46337982, 46347930, 46357971, 46367919, 46377990, 46387908, 46397979, 46407928, 46417968, 46427917, 46437988, 46447906, 46457977,...</msg>
<status status="PASS" starttime="20201112 12:28:23.202" endtime="20201112 12:28:23.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.213" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:23.212" endtime="20201112 12:28:23.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.215" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:23.214" endtime="20201112 12:28:23.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.209" endtime="20201112 12:28:23.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.220" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:23.219" endtime="20201112 12:28:23.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.222" level="INFO">VALUE: 46287841</msg>
<status status="PASS" starttime="20201112 12:28:23.221" endtime="20201112 12:28:23.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.216" endtime="20201112 12:28:23.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.227" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:23.226" endtime="20201112 12:28:23.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.229" level="INFO">VALUE: [46297973, 46307922, 46317993, 46327911, 46337982, 46347930, 46357971, 46367919, 46377990, 46387908, 46397979, 46407928, 46417968, 46427917, 46437988, 46447906, 46457977, 46467926, 46477966, 46487915, 46497985, 46507904, 46517974, 46527923, 46537963, 46547912, 46557983, 46567932, 46577972, 46587921, 46597991, 46607910, 46617980, 46627929, 46637969, 46647918, 46657989, 46667907, 46677978, 46687927, 46697967, 46707916, 46717987, 46727905, 46737976, 46747924, 46757965, 46767913, 46777984, 46787902, 46797973, 46807922, 46817993, 46827911, 46837982, 46847930, 46857971, 46867919, 46877990, 46887908, 46897979, 46907928, 46917968, 46927917, 46937988, 46947906, 46957977, 46967926, 46977966, 46987915, 46997985, 47007904, 47017974, 47027923, 47037963, 47047912, 47057983, 47067932, 47077972, 47087921, 47097991, 47107910, 47117980, 47127929, 47137969, 47147918, 47157989, 47167907, 47177978, 47187927, 47197967, 47207916, 47217987, 47227905, 47237976, 47247924, 47257965, 47267913, 47277984, 47287902]</msg>
<status status="PASS" starttime="20201112 12:28:23.228" endtime="20201112 12:28:23.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.223" endtime="20201112 12:28:23.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.238" endtime="20201112 12:28:23.531"></status>
</kw>
<msg timestamp="20201112 12:28:23.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024427222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034558931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:23.235" endtime="20201112 12:28:23.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024427222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034558931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:23.535" endtime="20201112 12:28:23.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.543" endtime="20201112 12:28:23.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.232" endtime="20201112 12:28:23.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.230" endtime="20201112 12:28:23.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:23.569" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:23.546" endtime="20201112 12:28:23.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.573" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:23.572" endtime="20201112 12:28:23.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.575" level="INFO">VALUE: 0.024427222</msg>
<status status="PASS" starttime="20201112 12:28:23.574" endtime="20201112 12:28:23.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.570" endtime="20201112 12:28:23.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.581" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:23.580" endtime="20201112 12:28:23.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.583" level="INFO">VALUE: [0.034558931, 0.044527528, 0.054576319, 0.064515986, 0.074564764, 0.084534778, 0.094553042, 0.104523167, 0.114572111, 0.124511667, 0.134560472, 0.144530556, 0.154548764, 0.164518792, 0.174567681, 0.184507319, 0.194556, 0.20452625, 0.214544486, 0.224514583, 0.234563417, 0.244503014, 0.254551722, 0.264521806, 0.274540208, 0.284510278, 0.294559111, 0.304529194, 0.314547528, 0.324517556, 0.334566375, 0.344505986, 0.354554625, 0.364524889, 0.374543208, 0.384513292, 0.394562097, 0.404501597, 0.414550417, 0.424520472, 0.434538681, 0.444508972, 0.454557681, 0.464497236, 0.474546014, 0.484516236, 0.4945345, 0.504504556, 0.514553444, 0.524493, 0.534541736, 0.544511875, 0.554560653, 0.56450025, 0.574549097, 0.584519222, 0.594537458, 0.604507472, 0.614556389, 0.624496069, 0.634544653, 0.64451475, 0.654533069, 0.664503236, 0.674551986, 0.684491708, 0.694540292, 0.704510542, 0.714528819, 0.724498875, 0.734547625, 0.744487236, 0.754536097, 0.764506083, 0.774524403, 0.784494542, 0.794543278, 0.804513486, 0.814531708, 0.824501917, 0.834550667, 0.844490278, 0.854539097, 0.864509236, 0.874527486, 0.884497486, 0.894546389, 0.904485944, 0.914534736, 0.924504847, 0.934523069, 0.944493264, 0.954541972, 0.964481653, 0.974530403, 0.984500458, 0.994518833, 1.004488819, 1.014537625, 1.024477194] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:23.582" endtime="20201112 12:28:23.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.577" endtime="20201112 12:28:23.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.586" endtime="20201112 12:28:23.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:23.590" endtime="20201112 12:28:23.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.588" endtime="20201112 12:28:23.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.585" endtime="20201112 12:28:23.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.056" endtime="20201112 12:28:23.611"></status>
</kw>
<msg timestamp="20201112 12:28:23.611" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.620" endtime="20201112 12:28:25.751"></status>
</kw>
<msg timestamp="20201112 12:28:25.752" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48845397, 'wakeups': [48855529, 48865478, 48875549, 48885467, 48895538...</msg>
<status status="PASS" starttime="20201112 12:28:23.618" endtime="20201112 12:28:25.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.755" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48845397, 'wakeups': [48855529, 48865478, 48875549, 48885467, 48895538...</msg>
<status status="PASS" starttime="20201112 12:28:25.753" endtime="20201112 12:28:25.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.756" endtime="20201112 12:28:25.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.615" endtime="20201112 12:28:25.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.613" endtime="20201112 12:28:25.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:25.761" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [48855529, 48865478, 48875549, 48885467, 48895538, 48905487, 48915527, 48925476, 48935546, 48945465, 48955535, 48965484, 48975524, 48985473, 48995544, 49005462, 49015533,...</msg>
<status status="PASS" starttime="20201112 12:28:25.759" endtime="20201112 12:28:25.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.765" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:25.764" endtime="20201112 12:28:25.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.767" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:25.766" endtime="20201112 12:28:25.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.762" endtime="20201112 12:28:25.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.772" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:25.771" endtime="20201112 12:28:25.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.774" level="INFO">VALUE: 48845397</msg>
<status status="PASS" starttime="20201112 12:28:25.773" endtime="20201112 12:28:25.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.769" endtime="20201112 12:28:25.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.779" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:25.778" endtime="20201112 12:28:25.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.782" level="INFO">VALUE: [48855529, 48865478, 48875549, 48885467, 48895538, 48905487, 48915527, 48925476, 48935546, 48945465, 48955535, 48965484, 48975524, 48985473, 48995544, 49005462, 49015533, 49025482, 49035522, 49045471, 49055541, 49065460, 49075531, 49085479, 49095520, 49105468, 49115539, 49125488, 49135528, 49145477, 49155548, 49165466, 49175537, 49185485, 49195526, 49205474, 49215545, 49225463, 49235534, 49245483, 49255523, 49265472, 49275543, 49285461, 49295532, 49305480, 49315521, 49325469, 49335540, 49345458, 49355529, 49365478, 49375549, 49385467, 49395538, 49405487, 49415527, 49425476, 49435546, 49445465, 49455535, 49465484, 49475524, 49485473, 49495544, 49505462, 49515533, 49525482, 49535522, 49545471, 49555541, 49565460, 49575531, 49585479, 49595520, 49605468, 49615539, 49625488, 49635528, 49645477, 49655548, 49665466, 49675537, 49685485, 49695526, 49705474, 49715545, 49725463, 49735534, 49745483, 49755523, 49765472, 49775543, 49785461, 49795532, 49805480, 49815521, 49825469, 49835540, 49845458]</msg>
<status status="PASS" starttime="20201112 12:28:25.780" endtime="20201112 12:28:25.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.776" endtime="20201112 12:28:25.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.789" endtime="20201112 12:28:26.080"></status>
</kw>
<msg timestamp="20201112 12:28:26.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023642736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033774819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:25.788" endtime="20201112 12:28:26.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023642736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033774819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:26.084" endtime="20201112 12:28:26.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.091" endtime="20201112 12:28:26.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.785" endtime="20201112 12:28:26.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.783" endtime="20201112 12:28:26.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:26.118" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:26.095" endtime="20201112 12:28:26.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.123" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:26.122" endtime="20201112 12:28:26.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.125" level="INFO">VALUE: 0.023642736</msg>
<status status="PASS" starttime="20201112 12:28:26.124" endtime="20201112 12:28:26.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.119" endtime="20201112 12:28:26.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.130" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:26.129" endtime="20201112 12:28:26.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.132" level="INFO">VALUE: [0.033774819, 0.043743528, 0.053792306, 0.063731819, 0.073780764, 0.083750806, 0.093769111, 0.103739139, 0.113787972, 0.123727611, 0.133776444, 0.143746458, 0.15376475, 0.163734889, 0.173783708, 0.183723194, 0.193771931, 0.203742083, 0.213760375, 0.223730528, 0.233779264, 0.243718958, 0.253767708, 0.26373775, 0.273756153, 0.28372625, 0.293775014, 0.303745153, 0.3137635, 0.3237335, 0.333782319, 0.343721903, 0.353770722, 0.363740833, 0.373759125, 0.383729208, 0.393778014, 0.403717597, 0.413766375, 0.423736514, 0.433754764, 0.443724778, 0.453773667, 0.46371325, 0.473762014, 0.483732139, 0.493750444, 0.503720542, 0.513769361, 0.523708875, 0.533757611, 0.543727764, 0.553776653, 0.563716222, 0.573764944, 0.583735139, 0.593753458, 0.603723417, 0.613772347, 0.623711889, 0.633760764, 0.643730806, 0.653749069, 0.663719181, 0.673768, 0.683707611, 0.693756347, 0.703726472, 0.713744639, 0.723714819, 0.733763667, 0.743703264, 0.753752069, 0.763722153, 0.773740319, 0.783710417, 0.793759403, 0.8037295, 0.813747708, 0.823717792, 0.833766611, 0.843706222, 0.853755014, 0.863725083, 0.873743417, 0.883713486, 0.893762306, 0.903701806, 0.913750667, 0.923720681, 0.933739139, 0.943709194, 0.953757958, 0.963697583, 0.973746389, 0.983716472, 0.993734667, 1.003704819, 1.013753681, 1.023693222] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:26.131" endtime="20201112 12:28:26.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.126" endtime="20201112 12:28:26.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.135" endtime="20201112 12:28:26.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:26.139" endtime="20201112 12:28:26.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.137" endtime="20201112 12:28:26.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.134" endtime="20201112 12:28:26.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.611" endtime="20201112 12:28:26.160"></status>
</kw>
<msg timestamp="20201112 12:28:26.160" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.168" endtime="20201112 12:28:28.297"></status>
</kw>
<msg timestamp="20201112 12:28:28.298" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51392913, 'wakeups': [51403076, 51412994, 51423065, 51432983, 51443054...</msg>
<status status="PASS" starttime="20201112 12:28:26.167" endtime="20201112 12:28:28.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.304" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51392913, 'wakeups': [51403076, 51412994, 51423065, 51432983, 51443054...</msg>
<status status="PASS" starttime="20201112 12:28:28.300" endtime="20201112 12:28:28.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.306" endtime="20201112 12:28:28.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.164" endtime="20201112 12:28:28.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.162" endtime="20201112 12:28:28.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:28.312" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [51403076, 51412994, 51423065, 51432983, 51443054, 51453002, 51463043, 51472991, 51483062, 51492980, 51503051, 51513000, 51523040, 51532989, 51543060, 51552978, 51563049,...</msg>
<status status="PASS" starttime="20201112 12:28:28.310" endtime="20201112 12:28:28.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.316" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:28.315" endtime="20201112 12:28:28.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.318" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:28.317" endtime="20201112 12:28:28.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.313" endtime="20201112 12:28:28.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.324" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:28.323" endtime="20201112 12:28:28.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.326" level="INFO">VALUE: 51392913</msg>
<status status="PASS" starttime="20201112 12:28:28.325" endtime="20201112 12:28:28.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.321" endtime="20201112 12:28:28.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.331" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:28.330" endtime="20201112 12:28:28.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.333" level="INFO">VALUE: [51403076, 51412994, 51423065, 51432983, 51443054, 51453002, 51463043, 51472991, 51483062, 51492980, 51503051, 51513000, 51523040, 51532989, 51543060, 51552978, 51563049, 51572998, 51583038, 51592987, 51603057, 51612976, 51623046, 51632995, 51643035, 51652984, 51663055, 51673004, 51683044, 51692993, 51703063, 51712982, 51723052, 51733001, 51743041, 51752990, 51763061, 51772979, 51783050, 51792999, 51803039, 51812988, 51823059, 51832977, 51843048, 51852996, 51863037, 51872985, 51883056, 51892974, 51903045, 51912994, 51923065, 51932983, 51943054, 51953002, 51963043, 51972991, 51983062, 51992980, 52003051, 52013000, 52023040, 52032989, 52043060, 52052978, 52063049, 52072998, 52083038, 52092987, 52103057, 52112976, 52123046, 52132995, 52143035, 52152984, 52163055, 52173004, 52183044, 52192993, 52203063, 52212982, 52223052, 52233001, 52243041, 52252990, 52263061, 52272979, 52283050, 52292999, 52303039, 52312988, 52323059, 52332977, 52343048, 52352996, 52363037, 52372985, 52383056, 52392974]</msg>
<status status="PASS" starttime="20201112 12:28:28.332" endtime="20201112 12:28:28.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.328" endtime="20201112 12:28:28.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.341" endtime="20201112 12:28:28.632"></status>
</kw>
<msg timestamp="20201112 12:28:28.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031984792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:28.339" endtime="20201112 12:28:28.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031984792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:28.640" endtime="20201112 12:28:28.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.647" endtime="20201112 12:28:28.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.336" endtime="20201112 12:28:28.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.335" endtime="20201112 12:28:28.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:28.674" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:28.651" endtime="20201112 12:28:28.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.679" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:28.678" endtime="20201112 12:28:28.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.681" level="INFO">VALUE: 0.021847097</msg>
<status status="PASS" starttime="20201112 12:28:28.680" endtime="20201112 12:28:28.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.675" endtime="20201112 12:28:28.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.687" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:28.686" endtime="20201112 12:28:28.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.689" level="INFO">VALUE: [0.031984792, 0.041923236, 0.051971986, 0.0619115, 0.071960389, 0.081930403, 0.091948819, 0.101918833, 0.111967611, 0.121907264, 0.131956111, 0.141926194, 0.151944444, 0.161914583, 0.171963444, 0.181902944, 0.191951722, 0.201921764, 0.211940153, 0.22191025, 0.231959, 0.241898597, 0.251947417, 0.261917486, 0.27193575, 0.281905903, 0.29195475, 0.301924708, 0.311943028, 0.321913222, 0.331961972, 0.341901611, 0.351950458, 0.3619205, 0.371938708, 0.381908931, 0.391957611, 0.401897181, 0.411945958, 0.421916194, 0.431934472, 0.441904625, 0.451953444, 0.461892958, 0.471941778, 0.481911903, 0.491930069, 0.501900306, 0.511948972, 0.521888722, 0.531937319, 0.541907569, 0.551956278, 0.561895917, 0.571944722, 0.581914847, 0.591933111, 0.601903194, 0.611951986, 0.621891653, 0.631940292, 0.641910528, 0.651928833, 0.661898903, 0.671947736, 0.681887264, 0.691936111, 0.701906222, 0.7119245, 0.721894556, 0.731943375, 0.741882958, 0.751931778, 0.761901778, 0.771920097, 0.781890194, 0.791938986, 0.801909222, 0.811927333, 0.821897556, 0.831946292, 0.841885889, 0.851934694, 0.861904806, 0.871923097, 0.881893153, 0.891941986, 0.901881542, 0.911930444, 0.921900444, 0.931918778, 0.941888958, 0.951937694, 0.961877153, 0.971926056, 0.981896139, 0.991914403, 1.001884583, 1.011933389, 1.021872986] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:28.688" endtime="20201112 12:28:28.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.683" endtime="20201112 12:28:28.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.692" endtime="20201112 12:28:28.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:28.695" endtime="20201112 12:28:28.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.694" endtime="20201112 12:28:28.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.690" endtime="20201112 12:28:28.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.161" endtime="20201112 12:28:28.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.054" endtime="20201112 12:28:28.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.053" endtime="20201112 12:28:28.717"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:28.719" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.727" endtime="20201112 12:28:30.857"></status>
</kw>
<msg timestamp="20201112 12:28:30.858" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 53950469, 'wakeups': [53960632, 53970611, 53980621, 53990600, 54000610...</msg>
<status status="PASS" starttime="20201112 12:28:28.726" endtime="20201112 12:28:30.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.865" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 53950469, 'wakeups': [53960632, 53970611, 53980621, 53990600, 54000610...</msg>
<status status="PASS" starttime="20201112 12:28:30.861" endtime="20201112 12:28:30.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.867" endtime="20201112 12:28:30.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.723" endtime="20201112 12:28:30.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.721" endtime="20201112 12:28:30.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:30.872" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [53960632, 53970611, 53980621, 53990600, 54000610, 54010620, 54020599, 54030609, 54040618, 54050598, 54060607, 54070617, 54080596, 54090606, 54100616, 54110595, 54120605,...</msg>
<status status="PASS" starttime="20201112 12:28:30.870" endtime="20201112 12:28:30.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.877" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:30.876" endtime="20201112 12:28:30.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.879" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:30.878" endtime="20201112 12:28:30.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.873" endtime="20201112 12:28:30.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.883" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:30.882" endtime="20201112 12:28:30.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.886" level="INFO">VALUE: 53950469</msg>
<status status="PASS" starttime="20201112 12:28:30.885" endtime="20201112 12:28:30.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.880" endtime="20201112 12:28:30.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.890" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:30.889" endtime="20201112 12:28:30.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.893" level="INFO">VALUE: [53960632, 53970611, 53980621, 53990600, 54000610, 54010620, 54020599, 54030609, 54040618, 54050598, 54060607, 54070617, 54080596, 54090606, 54100616, 54110595, 54120605, 54130615, 54140594, 54150604, 54160614, 54170593, 54180603, 54190612, 54200592, 54210601, 54220611, 54230621, 54240600, 54250610, 54260620, 54270599, 54280609, 54290618, 54300598, 54310607, 54320617, 54330596, 54340606, 54350616, 54360595, 54370605, 54380615, 54390594, 54400604, 54410614, 54420593, 54430603, 54440612, 54450592, 54460601, 54470611, 54480621, 54490600, 54500610, 54510620, 54520599, 54530609, 54540618, 54550598, 54560607, 54570617, 54580596, 54590606, 54600616, 54610595, 54620605, 54630615, 54640594, 54650604, 54660614, 54670593, 54680603, 54690612, 54700592, 54710601, 54720611, 54730621, 54740600, 54750610, 54760620, 54770599, 54780609, 54790618, 54800598, 54810607, 54820617, 54830596, 54840606, 54850616, 54860595, 54870605, 54880615, 54890594, 54900604, 54910614, 54920593, 54930603, 54940612, 54950592]</msg>
<status status="PASS" starttime="20201112 12:28:30.891" endtime="20201112 12:28:30.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.887" endtime="20201112 12:28:30.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.901" endtime="20201112 12:28:31.193"></status>
</kw>
<msg timestamp="20201112 12:28:31.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032477278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:30.900" endtime="20201112 12:28:31.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032477278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:31.197" endtime="20201112 12:28:31.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.204" endtime="20201112 12:28:31.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.897" endtime="20201112 12:28:31.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.894" endtime="20201112 12:28:31.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:31.230" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:31.207" endtime="20201112 12:28:31.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.235" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:31.234" endtime="20201112 12:28:31.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.237" level="INFO">VALUE: 0.022312583</msg>
<status status="PASS" starttime="20201112 12:28:31.236" endtime="20201112 12:28:31.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.231" endtime="20201112 12:28:31.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.242" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:31.241" endtime="20201112 12:28:31.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.245" level="INFO">VALUE: [0.032477278, 0.042454653, 0.052464028, 0.062443042, 0.072452542, 0.082461847, 0.092440917, 0.102450389, 0.112459806, 0.122438764, 0.132448194, 0.142457458, 0.152436556, 0.162446056, 0.172455444, 0.182434444, 0.192443764, 0.202453194, 0.212432222, 0.222441694, 0.232451125, 0.242430111, 0.252439403, 0.262449042, 0.272427944, 0.282437444, 0.292446806, 0.302456278, 0.312435167, 0.322444694, 0.332454125, 0.342433097, 0.352442514, 0.362451944, 0.372430875, 0.382440389, 0.392449833, 0.402428667, 0.412438097, 0.422447569, 0.432426528, 0.442435944, 0.452445431, 0.462424403, 0.47243375, 0.482443236, 0.492422153, 0.502431653, 0.512441153, 0.522420028, 0.532429472, 0.542438847, 0.552448444, 0.562427389, 0.572436861, 0.582446306, 0.59242525, 0.602434597, 0.612444083, 0.622423, 0.632432514, 0.642441972, 0.652420847, 0.662430347, 0.672439653, 0.682418667, 0.692428069, 0.702437653, 0.712416556, 0.722425972, 0.732435417, 0.742414278, 0.752423778, 0.762433194, 0.772412181, 0.782421542, 0.792431139, 0.802440556, 0.812419486, 0.822429014, 0.832438403, 0.842417306, 0.852426778, 0.862436264, 0.872415278, 0.882424625, 0.892434097, 0.902413, 0.912422486, 0.922431931, 0.932410847, 0.942420306, 0.952429681, 0.962408653, 0.972418139, 0.982427583, 0.992406569, 1.002415917, 1.012425389, 1.022404389] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:31.243" endtime="20201112 12:28:31.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.238" endtime="20201112 12:28:31.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.248" endtime="20201112 12:28:31.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:31.251" endtime="20201112 12:28:31.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.249" endtime="20201112 12:28:31.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.246" endtime="20201112 12:28:31.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.720" endtime="20201112 12:28:31.273"></status>
</kw>
<msg timestamp="20201112 12:28:31.273" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.281" endtime="20201112 12:28:33.413"></status>
</kw>
<msg timestamp="20201112 12:28:33.415" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56508056, 'wakeups': [56518218, 56528198, 56538208, 56548187, 56558197...</msg>
<status status="PASS" starttime="20201112 12:28:31.279" endtime="20201112 12:28:33.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.418" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56508056, 'wakeups': [56518218, 56528198, 56538208, 56548187, 56558197...</msg>
<status status="PASS" starttime="20201112 12:28:33.417" endtime="20201112 12:28:33.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.419" endtime="20201112 12:28:33.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.277" endtime="20201112 12:28:33.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.275" endtime="20201112 12:28:33.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:33.425" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [56518218, 56528198, 56538208, 56548187, 56558197, 56568206, 56578186, 56588195, 56598205, 56608184, 56618194, 56628204, 56638183, 56648193, 56658203, 56668182, 56678192,...</msg>
<status status="PASS" starttime="20201112 12:28:33.423" endtime="20201112 12:28:33.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.429" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:33.428" endtime="20201112 12:28:33.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.431" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:33.430" endtime="20201112 12:28:33.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.426" endtime="20201112 12:28:33.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.437" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:33.436" endtime="20201112 12:28:33.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.439" level="INFO">VALUE: 56508056</msg>
<status status="PASS" starttime="20201112 12:28:33.438" endtime="20201112 12:28:33.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.433" endtime="20201112 12:28:33.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.444" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:33.443" endtime="20201112 12:28:33.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.446" level="INFO">VALUE: [56518218, 56528198, 56538208, 56548187, 56558197, 56568206, 56578186, 56588195, 56598205, 56608184, 56618194, 56628204, 56638183, 56648193, 56658203, 56668182, 56678192, 56688201, 56698181, 56708190, 56718200, 56728179, 56738189, 56748199, 56758178, 56768188, 56778198, 56788208, 56798187, 56808197, 56818206, 56828186, 56838195, 56848205, 56858184, 56868194, 56878204, 56888183, 56898193, 56908203, 56918182, 56928192, 56938201, 56948181, 56958190, 56968200, 56978179, 56988189, 56998199, 57008178, 57018188, 57028198, 57038208, 57048187, 57058197, 57068206, 57078186, 57088195, 57098205, 57108184, 57118194, 57128204, 57138183, 57148193, 57158203, 57168182, 57178192, 57188201, 57198181, 57208190, 57218200, 57228179, 57238189, 57248199, 57258178, 57268188, 57278198, 57288208, 57298187, 57308197, 57318206, 57328186, 57338195, 57348205, 57358184, 57368194, 57378204, 57388183, 57398193, 57408203, 57418182, 57428192, 57438201, 57448181, 57458190, 57468200, 57478179, 57488189, 57498199, 57508178]</msg>
<status status="PASS" starttime="20201112 12:28:33.445" endtime="20201112 12:28:33.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.440" endtime="20201112 12:28:33.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.453" endtime="20201112 12:28:33.746"></status>
</kw>
<msg timestamp="20201112 12:28:33.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023332167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033494083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.452" endtime="20201112 12:28:33.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023332167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033494083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.750" endtime="20201112 12:28:33.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.757" endtime="20201112 12:28:33.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.449" endtime="20201112 12:28:33.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.447" endtime="20201112 12:28:33.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:33.784" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:33.760" endtime="20201112 12:28:33.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.788" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:33.787" endtime="20201112 12:28:33.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.790" level="INFO">VALUE: 0.023332167</msg>
<status status="PASS" starttime="20201112 12:28:33.789" endtime="20201112 12:28:33.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.785" endtime="20201112 12:28:33.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.796" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:33.795" endtime="20201112 12:28:33.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.798" level="INFO">VALUE: [0.033494083, 0.043471486, 0.053480917, 0.063459833, 0.073469306, 0.083478625, 0.093457667, 0.103467153, 0.113476667, 0.123455458, 0.133464931, 0.143474417, 0.153453333, 0.163462778, 0.173472167, 0.183451208, 0.193460597, 0.203470056, 0.213449083, 0.2234585, 0.233467903, 0.243446889, 0.25345625, 0.263464736, 0.273444944, 0.283454153, 0.293463583, 0.303473097, 0.313451958, 0.323461458, 0.333470778, 0.343449708, 0.353459153, 0.363468569, 0.373447583, 0.383457111, 0.393466653, 0.403445583, 0.413454903, 0.423464444, 0.433443264, 0.443452819, 0.453462153, 0.463441111, 0.473450556, 0.483460125, 0.493439056, 0.5034485, 0.513457083, 0.523437153, 0.533446306, 0.54345575, 0.553465208, 0.563444153, 0.573453625, 0.583463083, 0.593441986, 0.603451514, 0.613461028, 0.623439847, 0.633449319, 0.64345875, 0.653437667, 0.663447083, 0.673456569, 0.683435389, 0.693445056, 0.703454403, 0.713433375, 0.723442847, 0.733452222, 0.743431181, 0.753440667, 0.763449222, 0.773429403, 0.783438444, 0.793447986, 0.803457403, 0.813436222, 0.823445681, 0.833455194, 0.843434083, 0.853443681, 0.863453097, 0.873432056, 0.883441431, 0.893450833, 0.90342975, 0.913439222, 0.923448653, 0.933427611, 0.943437069, 0.9534465, 0.963425528, 0.973434931, 0.983444347, 0.993423361, 1.003432681, 1.013441264, 1.023421458] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:33.797" endtime="20201112 12:28:33.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.792" endtime="20201112 12:28:33.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.805" endtime="20201112 12:28:33.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:33.809" endtime="20201112 12:28:33.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.807" endtime="20201112 12:28:33.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.804" endtime="20201112 12:28:33.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.273" endtime="20201112 12:28:33.830"></status>
</kw>
<msg timestamp="20201112 12:28:33.830" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.838" endtime="20201112 12:28:35.952"></status>
</kw>
<msg timestamp="20201112 12:28:35.953" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59065643, 'wakeups': [59075775, 59085784, 59095794, 59105773, 59115783...</msg>
<status status="PASS" starttime="20201112 12:28:33.837" endtime="20201112 12:28:35.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.956" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59065643, 'wakeups': [59075775, 59085784, 59095794, 59105773, 59115783...</msg>
<status status="PASS" starttime="20201112 12:28:35.954" endtime="20201112 12:28:35.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.957" endtime="20201112 12:28:35.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.834" endtime="20201112 12:28:35.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.832" endtime="20201112 12:28:35.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:35.963" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [59075775, 59085784, 59095794, 59105773, 59115783, 59125793, 59135772, 59145782, 59155792, 59165771, 59175781, 59185791, 59195770, 59205780, 59215789, 59225769, 59235778,...</msg>
<status status="PASS" starttime="20201112 12:28:35.961" endtime="20201112 12:28:35.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.967" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:35.966" endtime="20201112 12:28:35.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.969" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:35.968" endtime="20201112 12:28:35.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.963" endtime="20201112 12:28:35.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.974" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:35.973" endtime="20201112 12:28:35.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.976" level="INFO">VALUE: 59065643</msg>
<status status="PASS" starttime="20201112 12:28:35.975" endtime="20201112 12:28:35.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.970" endtime="20201112 12:28:35.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.981" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:35.980" endtime="20201112 12:28:35.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.983" level="INFO">VALUE: [59075775, 59085784, 59095794, 59105773, 59115783, 59125793, 59135772, 59145782, 59155792, 59165771, 59175781, 59185791, 59195770, 59205780, 59215789, 59225769, 59235778, 59245788, 59255767, 59265777, 59275787, 59285766, 59295776, 59305786, 59315765, 59325775, 59335784, 59345794, 59355773, 59365783, 59375793, 59385772, 59395782, 59405792, 59415771, 59425781, 59435791, 59445770, 59455780, 59465789, 59475769, 59485778, 59495788, 59505767, 59515777, 59525787, 59535766, 59545776, 59555786, 59565765, 59575775, 59585784, 59595794, 59605773, 59615783, 59625793, 59635772, 59645782, 59655792, 59665771, 59675781, 59685791, 59695770, 59705780, 59715789, 59725769, 59735778, 59745788, 59755767, 59765777, 59775787, 59785766, 59795776, 59805786, 59815765, 59825775, 59835784, 59845794, 59855773, 59865783, 59875793, 59885772, 59895782, 59905792, 59915771, 59925781, 59935791, 59945770, 59955780, 59965789, 59975769, 59985778, 59995788, 60005767, 60015777, 60025787, 60035766, 60045776, 60055786, 60065765]</msg>
<status status="PASS" starttime="20201112 12:28:35.982" endtime="20201112 12:28:35.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.977" endtime="20201112 12:28:35.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.991" endtime="20201112 12:28:36.283"></status>
</kw>
<msg timestamp="20201112 12:28:36.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023350444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03350425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:35.989" endtime="20201112 12:28:36.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023350444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03350425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:36.287" endtime="20201112 12:28:36.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.294" endtime="20201112 12:28:36.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.987" endtime="20201112 12:28:36.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.984" endtime="20201112 12:28:36.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:36.321" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:36.298" endtime="20201112 12:28:36.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.326" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:36.325" endtime="20201112 12:28:36.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.328" level="INFO">VALUE: 0.023350444</msg>
<status status="PASS" starttime="20201112 12:28:36.327" endtime="20201112 12:28:36.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.322" endtime="20201112 12:28:36.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.333" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:36.332" endtime="20201112 12:28:36.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.335" level="INFO">VALUE: [0.03350425, 0.043511583, 0.053520917, 0.063499833, 0.0735095, 0.083518736, 0.093497736, 0.103507236, 0.113516694, 0.123495653, 0.133505111, 0.143514361, 0.153493472, 0.163502847, 0.173512458, 0.183491306, 0.193500681, 0.20351025, 0.213489167, 0.223498653, 0.233508069, 0.243486986, 0.253496444, 0.263505, 0.273485083, 0.283494375, 0.293503792, 0.303513194, 0.313492236, 0.323501653, 0.333511069, 0.343489986, 0.353499389, 0.363508903, 0.373487764, 0.383497306, 0.393506778, 0.403485708, 0.413495097, 0.423504611, 0.433483486, 0.443492972, 0.453502389, 0.463481403, 0.473490764, 0.483500292, 0.493479306, 0.503488597, 0.513497194, 0.523477306, 0.533486403, 0.543495944, 0.553505306, 0.563484333, 0.573493875, 0.583503125, 0.593482139, 0.603491653, 0.613500972, 0.623480042, 0.633489472, 0.643498931, 0.653477708, 0.663487347, 0.673496764, 0.683475611, 0.693485, 0.703494444, 0.713473403, 0.723482875, 0.733492333, 0.743471347, 0.753480694, 0.763489306, 0.773469486, 0.783478611, 0.793488042, 0.803497528, 0.813476472, 0.823485889, 0.833495278, 0.843474361, 0.853483764, 0.863493153, 0.873472014, 0.883481597, 0.893490972, 0.90347, 0.913479333, 0.923488819, 0.933467708, 0.943477208, 0.953486708, 0.963465694, 0.973475069, 0.983484514, 0.993463403, 1.003472917, 1.013481458, 1.023461583] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:36.334" endtime="20201112 12:28:36.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.329" endtime="20201112 12:28:36.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.338" endtime="20201112 12:28:36.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:36.342" endtime="20201112 12:28:36.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.340" endtime="20201112 12:28:36.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.337" endtime="20201112 12:28:36.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.831" endtime="20201112 12:28:36.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.718" endtime="20201112 12:28:36.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.717" endtime="20201112 12:28:36.363"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:36.365" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.374" endtime="20201112 12:28:38.487"></status>
</kw>
<msg timestamp="20201112 12:28:38.488" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61598083, 'wakeups': [61608245, 61618255, 61628265, 61638244, 61648254...</msg>
<status status="PASS" starttime="20201112 12:28:36.372" endtime="20201112 12:28:38.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.490" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61598083, 'wakeups': [61608245, 61618255, 61628265, 61638244, 61648254...</msg>
<status status="PASS" starttime="20201112 12:28:38.489" endtime="20201112 12:28:38.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.491" endtime="20201112 12:28:38.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.369" endtime="20201112 12:28:38.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.367" endtime="20201112 12:28:38.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:38.497" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [61608245, 61618255, 61628265, 61638244, 61648254, 61658264, 61668243, 61678253, 61688262, 61698242, 61708251, 61718261, 61728240, 61738250, 61748260, 61758239, 61768249,...</msg>
<status status="PASS" starttime="20201112 12:28:38.495" endtime="20201112 12:28:38.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.501" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:38.500" endtime="20201112 12:28:38.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.503" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:38.502" endtime="20201112 12:28:38.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.498" endtime="20201112 12:28:38.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.509" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:38.507" endtime="20201112 12:28:38.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.511" level="INFO">VALUE: 61598083</msg>
<status status="PASS" starttime="20201112 12:28:38.510" endtime="20201112 12:28:38.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.504" endtime="20201112 12:28:38.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.516" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:38.515" endtime="20201112 12:28:38.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.518" level="INFO">VALUE: [61608245, 61618255, 61628265, 61638244, 61648254, 61658264, 61668243, 61678253, 61688262, 61698242, 61708251, 61718261, 61728240, 61738250, 61748260, 61758239, 61768249, 61778259, 61788238, 61798248, 61808258, 61818237, 61828247, 61838256, 61848236, 61858245, 61868255, 61878265, 61888244, 61898254, 61908264, 61918243, 61928253, 61938262, 61948242, 61958251, 61968261, 61978240, 61988250, 61998260, 62008239, 62018249, 62028259, 62038238, 62048248, 62058258, 62068237, 62078247, 62088256, 62098236, 62108245, 62118255, 62128265, 62138244, 62148254, 62158264, 62168243, 62178253, 62188262, 62198242, 62208251, 62218261, 62228240, 62238250, 62248260, 62258239, 62268249, 62278259, 62288238, 62298248, 62308258, 62318237, 62328247, 62338256, 62348236, 62358245, 62368255, 62378265, 62388244, 62398254, 62408264, 62418243, 62428253, 62438262, 62448242, 62458251, 62468261, 62478240, 62488250, 62498260, 62508239, 62518249, 62528259, 62538238, 62548248, 62558258, 62568237, 62578247, 62588256, 62598236]</msg>
<status status="PASS" starttime="20201112 12:28:38.517" endtime="20201112 12:28:38.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.513" endtime="20201112 12:28:38.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.526" endtime="20201112 12:28:38.817"></status>
</kw>
<msg timestamp="20201112 12:28:38.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032843125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:38.524" endtime="20201112 12:28:38.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032843125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:38.821" endtime="20201112 12:28:38.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.828" endtime="20201112 12:28:38.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.521" endtime="20201112 12:28:38.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.520" endtime="20201112 12:28:38.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:38.861" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:38.838" endtime="20201112 12:28:38.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.866" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:38.865" endtime="20201112 12:28:38.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.868" level="INFO">VALUE: 0.022668764</msg>
<status status="PASS" starttime="20201112 12:28:38.867" endtime="20201112 12:28:38.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.862" endtime="20201112 12:28:38.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.873" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:38.872" endtime="20201112 12:28:38.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.876" level="INFO">VALUE: [0.032843125, 0.042848694, 0.052858111, 0.062837028, 0.072846528, 0.082855931, 0.092834833, 0.1028445, 0.112853778, 0.122832708, 0.132842125, 0.142851597, 0.152830583, 0.162839972, 0.172849458, 0.182828375, 0.192837847, 0.202847278, 0.212826208, 0.222835819, 0.232845125, 0.242824042, 0.252833611, 0.262843028, 0.272823, 0.282831389, 0.292840806, 0.302850306, 0.312829222, 0.322838653, 0.332848083, 0.342827097, 0.3528365, 0.362845889, 0.372824986, 0.382834375, 0.392843764, 0.402822736, 0.412832208, 0.422841597, 0.432820681, 0.442830042, 0.4528395, 0.462818542, 0.472827875, 0.482837347, 0.492816194, 0.502825653, 0.512835069, 0.522815097, 0.532823417, 0.542832944, 0.552842542, 0.562821319, 0.572830819, 0.58284025, 0.592819319, 0.602828639, 0.612838042, 0.622816986, 0.632826458, 0.642836056, 0.652814861, 0.662824403, 0.672833764, 0.682812681, 0.692822139, 0.702831694, 0.712810653, 0.722819944, 0.732829569, 0.742808514, 0.752817958, 0.762827222, 0.772807375, 0.78281575, 0.792825208, 0.802834681, 0.812813431, 0.822823056, 0.832832444, 0.842811403, 0.852820861, 0.862830333, 0.872809264, 0.882818764, 0.892828181, 0.902807083, 0.912816542, 0.922825986, 0.932804944, 0.942814389, 0.952823931, 0.962802819, 0.97281225, 0.982821708, 0.992800653, 1.002810097, 1.012819486, 1.022799431] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:38.875" endtime="20201112 12:28:38.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.869" endtime="20201112 12:28:38.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.879" endtime="20201112 12:28:38.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:38.883" endtime="20201112 12:28:38.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.881" endtime="20201112 12:28:38.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.878" endtime="20201112 12:28:38.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.366" endtime="20201112 12:28:38.904"></status>
</kw>
<msg timestamp="20201112 12:28:38.904" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.912" endtime="20201112 12:28:41.036"></status>
</kw>
<msg timestamp="20201112 12:28:41.037" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64135559, 'wakeups': [64145751, 64155731, 64165740, 64175720, 64185729...</msg>
<status status="PASS" starttime="20201112 12:28:38.910" endtime="20201112 12:28:41.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.040" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64135559, 'wakeups': [64145751, 64155731, 64165740, 64175720, 64185729...</msg>
<status status="PASS" starttime="20201112 12:28:41.038" endtime="20201112 12:28:41.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.041" endtime="20201112 12:28:41.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.908" endtime="20201112 12:28:41.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.906" endtime="20201112 12:28:41.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:41.046" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [64145751, 64155731, 64165740, 64175720, 64185729, 64195739, 64205718, 64215728, 64225738, 64235717, 64245727, 64255737, 64265716, 64275726, 64285736, 64295715, 64305725,...</msg>
<status status="PASS" starttime="20201112 12:28:41.044" endtime="20201112 12:28:41.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.051" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:41.050" endtime="20201112 12:28:41.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.053" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:41.052" endtime="20201112 12:28:41.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.047" endtime="20201112 12:28:41.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.058" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:41.057" endtime="20201112 12:28:41.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.060" level="INFO">VALUE: 64135559</msg>
<status status="PASS" starttime="20201112 12:28:41.059" endtime="20201112 12:28:41.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.054" endtime="20201112 12:28:41.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.064" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:41.063" endtime="20201112 12:28:41.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.067" level="INFO">VALUE: [64145751, 64155731, 64165740, 64175720, 64185729, 64195739, 64205718, 64215728, 64225738, 64235717, 64245727, 64255737, 64265716, 64275726, 64285736, 64295715, 64305725, 64315734, 64325714, 64335723, 64345733, 64355712, 64365722, 64375732, 64385742, 64395721, 64405731, 64415740, 64425720, 64435729, 64445739, 64455718, 64465728, 64475738, 64485717, 64495727, 64505737, 64515716, 64525726, 64535736, 64545715, 64555725, 64565734, 64575714, 64585723, 64595733, 64605712, 64615722, 64625732, 64635742, 64645721, 64655731, 64665740, 64675720, 64685729, 64695739, 64705718, 64715728, 64725738, 64735717, 64745727, 64755737, 64765716, 64775726, 64785736, 64795715, 64805725, 64815734, 64825714, 64835723, 64845733, 64855712, 64865722, 64875732, 64885742, 64895721, 64905731, 64915740, 64925720, 64935729, 64945739, 64955718, 64965728, 64975738, 64985717, 64995727, 65005737, 65015716, 65025726, 65035736, 65045715, 65055725, 65065734, 65075714, 65085723, 65095733, 65105712, 65115722, 65125732, 65135742]</msg>
<status status="PASS" starttime="20201112 12:28:41.066" endtime="20201112 12:28:41.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.061" endtime="20201112 12:28:41.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.074" endtime="20201112 12:28:41.367"></status>
</kw>
<msg timestamp="20201112 12:28:41.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01863175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028826153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:41.072" endtime="20201112 12:28:41.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01863175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028826153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:41.371" endtime="20201112 12:28:41.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.378" endtime="20201112 12:28:41.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.070" endtime="20201112 12:28:41.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.068" endtime="20201112 12:28:41.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:41.404" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:41.382" endtime="20201112 12:28:41.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.409" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:41.408" endtime="20201112 12:28:41.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.411" level="INFO">VALUE: 0.01863175</msg>
<status status="PASS" starttime="20201112 12:28:41.410" endtime="20201112 12:28:41.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.405" endtime="20201112 12:28:41.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.416" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:41.415" endtime="20201112 12:28:41.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.419" level="INFO">VALUE: [0.028826153, 0.03880225, 0.048811611, 0.058790597, 0.068800056, 0.078809472, 0.088788306, 0.098797778, 0.108807319, 0.118786236, 0.128795542, 0.138805111, 0.148784056, 0.158793375, 0.168802903, 0.178781861, 0.188791292, 0.198800806, 0.208779806, 0.218789167, 0.228798653, 0.238777667, 0.248787042, 0.258796472, 0.268805958, 0.278784861, 0.288794306, 0.298803792, 0.308782681, 0.318792194, 0.328801778, 0.338780597, 0.348790083, 0.358799458, 0.368778472, 0.378787819, 0.388797319, 0.39877625, 0.408785694, 0.418795236, 0.428774111, 0.438783542, 0.448792931, 0.458771903, 0.468781333, 0.478790819, 0.488769736, 0.498779306, 0.508788569, 0.518798042, 0.528777014, 0.5387865, 0.548795903, 0.558774917, 0.568784319, 0.57879375, 0.588772764, 0.598782264, 0.608791653, 0.6187705, 0.628780069, 0.638789597, 0.648768458, 0.658777944, 0.668787431, 0.678766347, 0.688775764, 0.698785097, 0.708764042, 0.718773597, 0.728783028, 0.738761861, 0.748771236, 0.758780764, 0.768790139, 0.778769194, 0.788778653, 0.79878825, 0.808767153, 0.818776472, 0.828785847, 0.838764944, 0.848774306, 0.85878375, 0.868762806, 0.878772222, 0.888781597, 0.898760639, 0.908770097, 0.918779597, 0.928758556, 0.938767944, 0.948777403, 0.958756361, 0.968765833, 0.978775153, 0.988754125, 0.998763597, 1.008772931, 1.0187825] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:41.418" endtime="20201112 12:28:41.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.412" endtime="20201112 12:28:41.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.422" endtime="20201112 12:28:41.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:41.425" endtime="20201112 12:28:41.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.424" endtime="20201112 12:28:41.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.420" endtime="20201112 12:28:41.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.904" endtime="20201112 12:28:41.446"></status>
</kw>
<msg timestamp="20201112 12:28:41.446" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.455" endtime="20201112 12:28:43.586"></status>
</kw>
<msg timestamp="20201112 12:28:43.587" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66683074, 'wakeups': [66693237, 66703247, 66713256, 66723236, 66733245...</msg>
<status status="PASS" starttime="20201112 12:28:41.453" endtime="20201112 12:28:43.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.589" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66683074, 'wakeups': [66693237, 66703247, 66713256, 66723236, 66733245...</msg>
<status status="PASS" starttime="20201112 12:28:43.588" endtime="20201112 12:28:43.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.591" endtime="20201112 12:28:43.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.450" endtime="20201112 12:28:43.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.448" endtime="20201112 12:28:43.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:43.596" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [66693237, 66703247, 66713256, 66723236, 66733245, 66743255, 66753234, 66763244, 66773254, 66783233, 66793243, 66803253, 66813232, 66823242, 66833251, 66843231, 66853240,...</msg>
<status status="PASS" starttime="20201112 12:28:43.594" endtime="20201112 12:28:43.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.600" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:43.599" endtime="20201112 12:28:43.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.602" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:43.601" endtime="20201112 12:28:43.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.597" endtime="20201112 12:28:43.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.607" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:43.606" endtime="20201112 12:28:43.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.609" level="INFO">VALUE: 66683074</msg>
<status status="PASS" starttime="20201112 12:28:43.608" endtime="20201112 12:28:43.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.603" endtime="20201112 12:28:43.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.614" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:43.613" endtime="20201112 12:28:43.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.616" level="INFO">VALUE: [66693237, 66703247, 66713256, 66723236, 66733245, 66743255, 66753234, 66763244, 66773254, 66783233, 66793243, 66803253, 66813232, 66823242, 66833251, 66843231, 66853240, 66863250, 66873229, 66883239, 66893249, 66903228, 66913238, 66923248, 66933227, 66943237, 66953247, 66963256, 66973236, 66983245, 66993255, 67003234, 67013244, 67023254, 67033233, 67043243, 67053253, 67063232, 67073242, 67083251, 67093231, 67103240, 67113250, 67123229, 67133239, 67143249, 67153228, 67163238, 67173248, 67183227, 67193237, 67203247, 67213256, 67223236, 67233245, 67243255, 67253234, 67263244, 67273254, 67283233, 67293243, 67303253, 67313232, 67323242, 67333251, 67343231, 67353240, 67363250, 67373229, 67383239, 67393249, 67403228, 67413238, 67423248, 67433227, 67443237, 67453247, 67463256, 67473236, 67483245, 67493255, 67503234, 67513244, 67523254, 67533233, 67543243, 67553253, 67563232, 67573242, 67583251, 67593231, 67603240, 67613250, 67623229, 67633239, 67643249, 67653228, 67663238, 67673248, 67683227]</msg>
<status status="PASS" starttime="20201112 12:28:43.615" endtime="20201112 12:28:43.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.610" endtime="20201112 12:28:43.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.624" endtime="20201112 12:28:43.915"></status>
</kw>
<msg timestamp="20201112 12:28:43.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03332525, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:28:43.622" endtime="20201112 12:28:43.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03332525, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:28:43.919" endtime="20201112 12:28:43.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.926" endtime="20201112 12:28:43.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.620" endtime="20201112 12:28:43.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.618" endtime="20201112 12:28:43.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:43.954" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:43.929" endtime="20201112 12:28:43.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.959" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:43.958" endtime="20201112 12:28:43.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.961" level="INFO">VALUE: 0.023153</msg>
<status status="PASS" starttime="20201112 12:28:43.960" endtime="20201112 12:28:43.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.955" endtime="20201112 12:28:43.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.966" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:43.965" endtime="20201112 12:28:43.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.968" level="INFO">VALUE: [0.03332525, 0.043330931, 0.053340319, 0.063319042, 0.073328764, 0.083338, 0.093316875, 0.103326458, 0.113335931, 0.123314819, 0.13332425, 0.143333833, 0.153312625, 0.163322069, 0.173331528, 0.183310431, 0.193320125, 0.203329347, 0.213308347, 0.223317819, 0.23332725, 0.243306181, 0.253315611, 0.263325153, 0.273303972, 0.283313444, 0.293322958, 0.303332389, 0.313311389, 0.323320736, 0.333330292, 0.343309264, 0.353318625, 0.363328139, 0.373307, 0.383316444, 0.393325903, 0.403304806, 0.413314333, 0.42332375, 0.433302694, 0.443312069, 0.453321625, 0.463300639, 0.473310083, 0.483319347, 0.493298389, 0.503307708, 0.513317306, 0.523296181, 0.533305667, 0.543315111, 0.553324486, 0.563303458, 0.573312944, 0.583322375, 0.593301292, 0.603310778, 0.613320125, 0.623299181, 0.633308792, 0.643318125, 0.653296986, 0.663306389, 0.673315986, 0.683294847, 0.693304333, 0.703313819, 0.713292667, 0.723302125, 0.733311583, 0.743290542, 0.753299931, 0.763309403, 0.773288403, 0.783297944, 0.793307264, 0.803316708, 0.813295708, 0.823305097, 0.833314528, 0.843293569, 0.853302944, 0.863312403, 0.873291417, 0.883300847, 0.893310181, 0.903289153, 0.913298792, 0.923308111, 0.933287042, 0.9432965, 0.953305958, 0.963284931, 0.973294292, 0.983303792, 0.993282792, 1.003292111, 1.013301583, 1.023280444] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:43.967" endtime="20201112 12:28:43.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.962" endtime="20201112 12:28:43.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.971" endtime="20201112 12:28:43.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:43.975" endtime="20201112 12:28:43.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.973" endtime="20201112 12:28:43.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.970" endtime="20201112 12:28:44.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.447" endtime="20201112 12:28:44.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.364" endtime="20201112 12:28:44.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.363" endtime="20201112 12:28:44.001"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:44.003" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.011" endtime="20201112 12:28:46.142"></status>
</kw>
<msg timestamp="20201112 12:28:46.143" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69240753, 'wakeups': [69250946, 69260955, 69270904, 69280853, 692908...</msg>
<status status="PASS" starttime="20201112 12:28:44.010" endtime="20201112 12:28:46.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.149" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69240753, 'wakeups': [69250946, 69260955, 69270904, 69280853, 692908...</msg>
<status status="PASS" starttime="20201112 12:28:46.146" endtime="20201112 12:28:46.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.151" endtime="20201112 12:28:46.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.007" endtime="20201112 12:28:46.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.005" endtime="20201112 12:28:46.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:46.162" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [69250946, 69260955, 69270904, 69280853, 69290832, 69300811, 69310760, 69320922, 69330871, 69340911, 69350952, 69360900, 69370849, 69380828, 69390808, 69400756, 69410919...</msg>
<status status="PASS" starttime="20201112 12:28:46.158" endtime="20201112 12:28:46.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.171" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:46.169" endtime="20201112 12:28:46.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.176" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:46.173" endtime="20201112 12:28:46.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.164" endtime="20201112 12:28:46.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.182" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:46.181" endtime="20201112 12:28:46.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.184" level="INFO">VALUE: 69240753</msg>
<status status="PASS" starttime="20201112 12:28:46.183" endtime="20201112 12:28:46.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.177" endtime="20201112 12:28:46.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.189" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:46.188" endtime="20201112 12:28:46.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.191" level="INFO">VALUE: [69250946, 69260955, 69270904, 69280853, 69290832, 69300811, 69310760, 69320922, 69330871, 69340911, 69350952, 69360900, 69370849, 69380828, 69390808, 69400756, 69410919, 69420867, 69430908, 69440948, 69450897, 69460845, 69470825, 69480804, 69490783, 69500915, 69510864, 69520935, 69530944, 69540893, 69550872, 69560821, 69570800, 69580780, 69590911, 69600860, 69610931, 69620941, 69630889, 69640869, 69650817, 69660797, 69670776, 69680908, 69690856, 69700927, 69710937, 69720886, 69730865, 69740844, 69750823, 69760803, 69770782, 69780914, 69790863, 69800933, 69810943, 69820892, 69830871, 69840820, 69850799, 69860778, 69870910, 69880859, 69890930, 69900939, 69910888, 69920867, 69930816, 69940795, 69950775, 69960906, 69970855, 69980926, 69990936, 70000946, 70010894, 70020874, 70030822, 70040802, 70050781, 70060913, 70070861, 70080932, 70090942, 70100891, 70110870, 70120819, 70130798, 70140777, 70150909, 70160858, 70170928, 70180938, 70190887, 70200866, 70210815, 70220794, 70230773, 70240905]</msg>
<status status="PASS" starttime="20201112 12:28:46.190" endtime="20201112 12:28:46.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.186" endtime="20201112 12:28:46.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.199" endtime="20201112 12:28:46.490"></status>
</kw>
<msg timestamp="20201112 12:28:46.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031074722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041274458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:46.197" endtime="20201112 12:28:46.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031074722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041274458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:46.493" endtime="20201112 12:28:46.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.501" endtime="20201112 12:28:46.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.195" endtime="20201112 12:28:46.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.193" endtime="20201112 12:28:46.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:46.527" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:46.504" endtime="20201112 12:28:46.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.531" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:46.530" endtime="20201112 12:28:46.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.533" level="INFO">VALUE: 0.031074722</msg>
<status status="PASS" starttime="20201112 12:28:46.533" endtime="20201112 12:28:46.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.528" endtime="20201112 12:28:46.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.540" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:46.539" endtime="20201112 12:28:46.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.542" level="INFO">VALUE: [0.041274458, 0.051274542, 0.061217944, 0.071152944, 0.081140847, 0.091128778, 0.101086292, 0.111225764, 0.121191569, 0.131235764, 0.141268028, 0.1512115, 0.161146431, 0.171134333, 0.181122292, 0.191079917, 0.201219278, 0.211185097, 0.221229417, 0.231261611, 0.241204958, 0.251140028, 0.261127903, 0.271115833, 0.281096569, 0.291212986, 0.301178667, 0.3112535, 0.321255194, 0.331198625, 0.341164, 0.351121375, 0.361109403, 0.371097361, 0.381206403, 0.391172167, 0.401246917, 0.411248639, 0.421192194, 0.431157639, 0.441114972, 0.451102931, 0.461091, 0.471199986, 0.481165583, 0.491240389, 0.501242194, 0.511185681, 0.521151167, 0.531132431, 0.541117764, 0.551105917, 0.561093931, 0.571202861, 0.581168653, 0.591243486, 0.601245042, 0.611188583, 0.621154125, 0.631111431, 0.641099431, 0.651087431, 0.661196361, 0.671162069, 0.681236903, 0.691238556, 0.701182125, 0.711147569, 0.721104778, 0.731092833, 0.741081042, 0.751189875, 0.761155556, 0.771230403, 0.7812345, 0.791241764, 0.801184944, 0.811150611, 0.821107889, 0.831095889, 0.841083917, 0.851192778, 0.861158486, 0.871233403, 0.881235069, 0.891178542, 0.901144042, 0.911101375, 0.921089417, 0.931077444, 0.941186292, 0.951152056, 0.961226972, 0.971228556, 0.981172028, 0.991137611, 1.001094903, 1.011082875, 1.021070972, 1.031182306] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:46.541" endtime="20201112 12:28:46.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.535" endtime="20201112 12:28:46.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.545" endtime="20201112 12:28:46.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:46.549" endtime="20201112 12:28:46.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.547" endtime="20201112 12:28:46.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.543" endtime="20201112 12:28:46.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.004" endtime="20201112 12:28:46.569"></status>
</kw>
<msg timestamp="20201112 12:28:46.569" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.578" endtime="20201112 12:28:48.701"></status>
</kw>
<msg timestamp="20201112 12:28:48.701" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71803344, 'wakeups': [71813537, 71823547, 71833496, 71843444, 718534...</msg>
<status status="PASS" starttime="20201112 12:28:46.576" endtime="20201112 12:28:48.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.705" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71803344, 'wakeups': [71813537, 71823547, 71833496, 71843444, 718534...</msg>
<status status="PASS" starttime="20201112 12:28:48.702" endtime="20201112 12:28:48.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.706" endtime="20201112 12:28:48.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.573" endtime="20201112 12:28:48.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.571" endtime="20201112 12:28:48.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:48.711" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [71813537, 71823547, 71833496, 71843444, 71853424, 71863403, 71873352, 71883514, 71893463, 71903503, 71913543, 71923492, 71933441, 71943420, 71953399, 71963348, 71973510...</msg>
<status status="PASS" starttime="20201112 12:28:48.709" endtime="20201112 12:28:48.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.715" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:48.714" endtime="20201112 12:28:48.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.717" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:48.716" endtime="20201112 12:28:48.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.712" endtime="20201112 12:28:48.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.722" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:48.721" endtime="20201112 12:28:48.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.724" level="INFO">VALUE: 71803344</msg>
<status status="PASS" starttime="20201112 12:28:48.723" endtime="20201112 12:28:48.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.719" endtime="20201112 12:28:48.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.729" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:48.728" endtime="20201112 12:28:48.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.731" level="INFO">VALUE: [71813537, 71823547, 71833496, 71843444, 71853424, 71863403, 71873352, 71883514, 71893463, 71903503, 71913543, 71923492, 71933441, 71943420, 71953399, 71963348, 71973510, 71983459, 71993499, 72003540, 72013488, 72023437, 72033416, 72043395, 72053497, 72063446, 72073516, 72083557, 72093475, 72103454, 72113433, 72123382, 72133361, 72143524, 72153442, 72163513, 72173553, 72183471, 72193450, 72203430, 72213378, 72223358, 72233520, 72243438, 72253509, 72263549, 72273468, 72283447, 72293426, 72303344, 72313507, 72323455, 72333526, 72343536, 72353485, 72363464, 72373413, 72383392, 72393371, 72403503, 72413452, 72423522, 72433532, 72443481, 72453460, 72463409, 72473388, 72483367, 72493499, 72503448, 72513519, 72523529, 72533477, 72543457, 72553375, 72563354, 72573516, 72583465, 72593505, 72603546, 72613494, 72623443, 72633422, 72643402, 72653350, 72663513, 72673461, 72683502, 72693542, 72703491, 72713439, 72723419, 72733398, 72743347, 72753509, 72763458, 72773498, 72783538, 72793487, 72803405]</msg>
<status status="PASS" starttime="20201112 12:28:48.730" endtime="20201112 12:28:48.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.726" endtime="20201112 12:28:48.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.740" endtime="20201112 12:28:49.031"></status>
</kw>
<msg timestamp="20201112 12:28:49.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01963775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029838306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:48.737" endtime="20201112 12:28:49.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01963775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029838306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:49.035" endtime="20201112 12:28:49.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.043" endtime="20201112 12:28:49.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.735" endtime="20201112 12:28:49.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.733" endtime="20201112 12:28:49.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:49.069" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:49.046" endtime="20201112 12:28:49.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.078" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:49.077" endtime="20201112 12:28:49.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.080" level="INFO">VALUE: 0.01963775</msg>
<status status="PASS" starttime="20201112 12:28:49.079" endtime="20201112 12:28:49.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.075" endtime="20201112 12:28:49.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.086" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:49.085" endtime="20201112 12:28:49.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.088" level="INFO">VALUE: [0.029838306, 0.039838542, 0.049782056, 0.059716889, 0.069704833, 0.079692875, 0.089650361, 0.099789736, 0.109755472, 0.119799819, 0.129831944, 0.139775458, 0.149710347, 0.159698236, 0.169686292, 0.179643875, 0.189783181, 0.199749056, 0.209793319, 0.219825458, 0.229769028, 0.239703972, 0.249691861, 0.259679889, 0.269767472, 0.279732972, 0.289807833, 0.299840139, 0.309753194, 0.319718625, 0.329706417, 0.339663875, 0.349651986, 0.359791431, 0.369726708, 0.379801333, 0.389833639, 0.399746597, 0.409712069, 0.419699861, 0.4296575, 0.439645472, 0.449784861, 0.459720056, 0.469795069, 0.479827236, 0.489740139, 0.499705611, 0.509693653, 0.519629736, 0.529768889, 0.539734681, 0.549809597, 0.559811222, 0.569754625, 0.579720153, 0.589677403, 0.599665486, 0.609653611, 0.619762375, 0.629728153, 0.639803042, 0.649804569, 0.659748139, 0.669713625, 0.679670944, 0.689659097, 0.699647069, 0.709755917, 0.719721653, 0.729796514, 0.739798208, 0.749741667, 0.759706722, 0.769643278, 0.779631139, 0.7897705, 0.799736264, 0.809780708, 0.819812847, 0.829756222, 0.839691181, 0.849679097, 0.859667125, 0.869624694, 0.879764056, 0.889729778, 0.899774167, 0.909806347, 0.919749875, 0.929684736, 0.939672625, 0.949660694, 0.959618111, 0.969757542, 0.979723292, 0.989767708, 0.999799806, 1.009742236, 1.019656903] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:49.087" endtime="20201112 12:28:49.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.082" endtime="20201112 12:28:49.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.091" endtime="20201112 12:28:49.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:49.095" endtime="20201112 12:28:49.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.093" endtime="20201112 12:28:49.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.089" endtime="20201112 12:28:49.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.570" endtime="20201112 12:28:49.116"></status>
</kw>
<msg timestamp="20201112 12:28:49.116" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.125" endtime="20201112 12:28:51.252"></status>
</kw>
<msg timestamp="20201112 12:28:51.252" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74350860, 'wakeups': [74361053, 74371063, 74381011, 74390960, 744009...</msg>
<status status="PASS" starttime="20201112 12:28:49.124" endtime="20201112 12:28:51.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.255" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74350860, 'wakeups': [74361053, 74371063, 74381011, 74390960, 744009...</msg>
<status status="PASS" starttime="20201112 12:28:51.254" endtime="20201112 12:28:51.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.257" endtime="20201112 12:28:51.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.120" endtime="20201112 12:28:51.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.118" endtime="20201112 12:28:51.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:51.262" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [74361053, 74371063, 74381011, 74390960, 74400939, 74410919, 74420867, 74431030, 74440979, 74451019, 74461059, 74471008, 74480957, 74490936, 74500915, 74510864, 74521026...</msg>
<status status="PASS" starttime="20201112 12:28:51.260" endtime="20201112 12:28:51.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.266" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:51.265" endtime="20201112 12:28:51.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.268" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:51.267" endtime="20201112 12:28:51.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.263" endtime="20201112 12:28:51.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.273" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:51.272" endtime="20201112 12:28:51.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.275" level="INFO">VALUE: 74350860</msg>
<status status="PASS" starttime="20201112 12:28:51.274" endtime="20201112 12:28:51.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.270" endtime="20201112 12:28:51.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.280" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:51.279" endtime="20201112 12:28:51.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.283" level="INFO">VALUE: [74361053, 74371063, 74381011, 74390960, 74400939, 74410919, 74420867, 74431030, 74440979, 74451019, 74461059, 74471008, 74480957, 74490936, 74500915, 74510864, 74521026, 74530975, 74541015, 74551055, 74561004, 74570953, 74580932, 74590911, 74600952, 74611022, 74620971, 74631042, 74641052, 74651000, 74660980, 74670928, 74680908, 74690887, 74701019, 74710968, 74721038, 74731048, 74740997, 74750976, 74760925, 74770904, 74780883, 74791015, 74800964, 74811035, 74821044, 74830993, 74840972, 74850982, 74860961, 74870941, 74880920, 74890869, 74901031, 74910980, 74921020, 74931060, 74941009, 74950958, 74960937, 74970916, 74980865, 74991027, 75000976, 75011016, 75021057, 75031005, 75040954, 75050933, 75060913, 75070861, 75081024, 75090972, 75101013, 75111022, 75121063, 75131011, 75140960, 75150939, 75160919, 75170867, 75181030, 75190979, 75201019, 75211059, 75221008, 75230957, 75240936, 75250915, 75260864, 75271026, 75280975, 75291015, 75301055, 75311004, 75320953, 75330932, 75340911, 75350952]</msg>
<status status="PASS" starttime="20201112 12:28:51.281" endtime="20201112 12:28:51.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.277" endtime="20201112 12:28:51.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.290" endtime="20201112 12:28:51.582"></status>
</kw>
<msg timestamp="20201112 12:28:51.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030154944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:51.288" endtime="20201112 12:28:51.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030154944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:51.585" endtime="20201112 12:28:51.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.593" endtime="20201112 12:28:51.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.286" endtime="20201112 12:28:51.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.284" endtime="20201112 12:28:51.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:51.620" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:51.596" endtime="20201112 12:28:51.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.624" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:51.623" endtime="20201112 12:28:51.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.626" level="INFO">VALUE: 0.019951431</msg>
<status status="PASS" starttime="20201112 12:28:51.625" endtime="20201112 12:28:51.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.621" endtime="20201112 12:28:51.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.632" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:51.631" endtime="20201112 12:28:51.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.634" level="INFO">VALUE: [0.030154944, 0.040155306, 0.050098722, 0.060033819, 0.070021611, 0.080009611, 0.089967125, 0.100106472, 0.110072264, 0.120116625, 0.130148806, 0.140092194, 0.150027181, 0.160015097, 0.170003167, 0.179960681, 0.190100042, 0.200065861, 0.210110125, 0.220142403, 0.230085792, 0.240020722, 0.250008611, 0.259996653, 0.270041722, 0.280093722, 0.290059264, 0.300134181, 0.310135972, 0.320079347, 0.330044861, 0.340002167, 0.349990194, 0.35997825, 0.370087181, 0.380052778, 0.390127667, 0.4001295, 0.410072875, 0.420038361, 0.429995653, 0.439983653, 0.449971708, 0.460080597, 0.470046375, 0.480121264, 0.490122986, 0.500066292, 0.510031431, 0.520056, 0.530020375, 0.540008097, 0.549996028, 0.559953625, 0.570093042, 0.580058778, 0.590103083, 0.600135333, 0.610078792, 0.620013736, 0.630001597, 0.639989611, 0.649947097, 0.660086556, 0.670052222, 0.680096583, 0.690128792, 0.700072333, 0.710007139, 0.719995014, 0.729983167, 0.739940597, 0.750079972, 0.760045611, 0.770091444, 0.780099722, 0.790131875, 0.800075347, 0.810010306, 0.819998139, 0.829986139, 0.839943681, 0.850082972, 0.860048736, 0.870093083, 0.880125292, 0.890068833, 0.900003667, 0.909991569, 0.919979653, 0.929937181, 0.940076583, 0.950042292, 0.960086708, 0.970118819, 0.980062375, 0.989997333, 0.999985208, 1.009973194, 1.020018292] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:51.633" endtime="20201112 12:28:51.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.628" endtime="20201112 12:28:51.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.637" endtime="20201112 12:28:51.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:51.641" endtime="20201112 12:28:51.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.639" endtime="20201112 12:28:51.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.636" endtime="20201112 12:28:51.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.117" endtime="20201112 12:28:51.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.002" endtime="20201112 12:28:51.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.001" endtime="20201112 12:28:51.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.154" endtime="20201112 12:28:51.662"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:35.078" endtime="20201112 12:28:51.663" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:27:33.692" endtime="20201112 12:28:51.666"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:25:46.103" endtime="20201112 12:28:51.682"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
