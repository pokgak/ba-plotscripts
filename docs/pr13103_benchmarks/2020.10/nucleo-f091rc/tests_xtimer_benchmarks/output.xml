<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 12:25:58.897" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.466" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:25:59.474" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:00.578" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:25:59.465" endtime="20201112 12:26:00.579"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.581" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:00.580" endtime="20201112 12:26:00.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.463" endtime="20201112 12:26:00.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:00.584" endtime="20201112 12:26:00.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.583" endtime="20201112 12:26:00.770"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.784" endtime="20201112 12:26:00.798"></status>
</kw>
<msg timestamp="20201112 12:26:00.799" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.782" endtime="20201112 12:26:00.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.802" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.800" endtime="20201112 12:26:00.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.805" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:00.803" endtime="20201112 12:26:00.805"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:00.780" endtime="20201112 12:26:00.806"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:00.777" endtime="20201112 12:26:00.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.775" endtime="20201112 12:26:00.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:00.811" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:00.810" endtime="20201112 12:26:00.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.808" endtime="20201112 12:26:00.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.775" endtime="20201112 12:26:00.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.774" endtime="20201112 12:26:00.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.813" endtime="20201112 12:26:00.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.772" endtime="20201112 12:26:00.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.815" endtime="20201112 12:26:00.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.771" endtime="20201112 12:26:00.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.461" endtime="20201112 12:26:00.818"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:00.825" endtime="20201112 12:26:00.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.823" endtime="20201112 12:26:00.845"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.860" endtime="20201112 12:26:00.874"></status>
</kw>
<msg timestamp="20201112 12:26:00.875" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.858" endtime="20201112 12:26:00.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.877" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.876" endtime="20201112 12:26:00.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.880" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:00.878" endtime="20201112 12:26:00.881"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:00.856" endtime="20201112 12:26:00.881"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:00.853" endtime="20201112 12:26:00.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.851" endtime="20201112 12:26:00.882"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:00.886" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:00.886" endtime="20201112 12:26:00.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.883" endtime="20201112 12:26:00.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.850" endtime="20201112 12:26:00.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.850" endtime="20201112 12:26:00.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.888" endtime="20201112 12:26:00.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.847" endtime="20201112 12:26:00.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.846" endtime="20201112 12:26:00.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.822" endtime="20201112 12:26:00.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.898" endtime="20201112 12:26:00.908"></status>
</kw>
<msg timestamp="20201112 12:26:00.909" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.897" endtime="20201112 12:26:00.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.912" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.910" endtime="20201112 12:26:00.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.913" endtime="20201112 12:26:00.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.894" endtime="20201112 12:26:00.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.892" endtime="20201112 12:26:00.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.920" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:26:00.919" endtime="20201112 12:26:00.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.922" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:26:00.921" endtime="20201112 12:26:00.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.916" endtime="20201112 12:26:00.923"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:00.818" endtime="20201112 12:26:00.924" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:25:59.012" endtime="20201112 12:26:00.927"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.982" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:26:00.990" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:02.096" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:26:00.980" endtime="20201112 12:26:02.096"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.100" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:02.097" endtime="20201112 12:26:02.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.979" endtime="20201112 12:26:02.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:02.103" endtime="20201112 12:26:02.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.101" endtime="20201112 12:26:02.324"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.336" endtime="20201112 12:26:02.350"></status>
</kw>
<msg timestamp="20201112 12:26:02.350" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201112 12:26:02.334" endtime="20201112 12:26:02.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.353" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201112 12:26:02.352" endtime="20201112 12:26:02.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.356" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:02.354" endtime="20201112 12:26:02.356"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:02.332" endtime="20201112 12:26:02.357"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:02.330" endtime="20201112 12:26:02.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.328" endtime="20201112 12:26:02.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:02.362" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:02.361" endtime="20201112 12:26:02.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.359" endtime="20201112 12:26:02.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.328" endtime="20201112 12:26:02.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.327" endtime="20201112 12:26:02.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.363" endtime="20201112 12:26:02.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.326" endtime="20201112 12:26:02.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.366" endtime="20201112 12:26:02.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.324" endtime="20201112 12:26:02.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.977" endtime="20201112 12:26:02.368"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:02.374" endtime="20201112 12:26:02.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.372" endtime="20201112 12:26:02.394"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.407" endtime="20201112 12:26:02.421"></status>
</kw>
<msg timestamp="20201112 12:26:02.422" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.405" endtime="20201112 12:26:02.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.424" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.423" endtime="20201112 12:26:02.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.427" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:02.425" endtime="20201112 12:26:02.428"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:02.403" endtime="20201112 12:26:02.428"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:02.400" endtime="20201112 12:26:02.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.399" endtime="20201112 12:26:02.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:02.433" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:02.432" endtime="20201112 12:26:02.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.430" endtime="20201112 12:26:02.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.398" endtime="20201112 12:26:02.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.398" endtime="20201112 12:26:02.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.434" endtime="20201112 12:26:02.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.396" endtime="20201112 12:26:02.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.395" endtime="20201112 12:26:02.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.371" endtime="20201112 12:26:02.437"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:26:02.439" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.447" endtime="20201112 12:26:02.457"></status>
</kw>
<msg timestamp="20201112 12:26:02.458" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.445" endtime="20201112 12:26:02.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.460" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.459" endtime="20201112 12:26:02.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.461" endtime="20201112 12:26:02.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.443" endtime="20201112 12:26:02.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.441" endtime="20201112 12:26:02.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.470" endtime="20201112 12:26:02.772"></status>
</kw>
<msg timestamp="20201112 12:26:02.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062958931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062959403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.468" endtime="20201112 12:26:02.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062958931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062959403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.776" endtime="20201112 12:26:02.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.784" endtime="20201112 12:26:02.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.466" endtime="20201112 12:26:02.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.464" endtime="20201112 12:26:02.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.791" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:02.790" endtime="20201112 12:26:02.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.796" level="INFO">VALUE: [{'time': 0.062958931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062959403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.062971764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361000000002398e-05, 'source_diff': 1.2361000000002398e-05}, {'time': 0.062972236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.06298075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.062981236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.062989917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.681000000010375e-06, 'source_diff': 8.681000000010375e-06}, {'time': 0.062990403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.062997764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.062998236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063004597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999996397e-06, 'source_diff': 6.360999999996397e-06}, {'time': 0.063005069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063018931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3862000000003372e-05, 'source_diff': 1.3862000000003372e-05}, {'time': 0.063019403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063031278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1874999999994529e-05, 'source_diff': 1.1874999999994529e-05}, {'time': 0.06303175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063036097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.063036569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063051097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.063051569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063062111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0542000000002272e-05, 'source_diff': 1.0542000000002272e-05}, {'time': 0.063062583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063073958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1374999999994029e-05, 'source_diff': 1.1374999999994029e-05}, {'time': 0.063074431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.063088097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3665999999995515e-05, 'source_diff': 1.3665999999995515e-05}, {'time': 0.063088583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.063094944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999996397e-06, 'source_diff': 6.360999999996397e-06}, {'time': 0.063095417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.063103597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999996523e-06, 'source_diff': 8.179999999996523e-06}, {'time': 0.063104083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.063118111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.063118583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063131611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.063132083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063136972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.888999999994037e-06, 'source_diff': 4.888999999994037e-06}, {'time': 0.063137444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063144111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.063144583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063158444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.386099999999002e-05, 'source_diff': 1.386099999999002e-05}, {'time': 0.063158917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.063167944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027000000008667e-06, 'source_diff': 9.027000000008667e-06}, {'time': 0.063168417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.063179111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999991655e-05, 'source_diff': 1.0693999999991655e-05}, {'time': 0.063179583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063183986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.063184458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063195792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1334000000001732e-05, 'source_diff': 1.1334000000001732e-05}, {'time': 0.063196264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063206778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0514000000003132e-05, 'source_diff': 1.0514000000003132e-05}, {'time': 0.063207264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.063212611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.063213097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.063217444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.063217931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000073427e-07, 'source_diff': 4.870000000073427e-07}, {'time': 0.063226611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.679999999997023e-06, 'source_diff': 8.679999999997023e-06}, {'time': 0.063227097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.063236292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000003506e-06, 'source_diff': 9.195000000003506e-06}, {'time': 0.063236764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063251458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999995655e-05, 'source_diff': 1.4693999999995655e-05}, {'time': 0.063251931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.063263792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.063264264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063269875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.063270347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063283792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3445000000000817e-05, 'source_diff': 1.3445000000000817e-05}, {'time': 0.063284264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063288792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5279999999897624e-06, 'source_diff': 4.5279999999897624e-06}, {'time': 0.063289264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063302792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.063303278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.0633155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2221999999992295e-05, 'source_diff': 1.2221999999992295e-05}, {'time': 0.063315972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063329958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000007492e-05, 'source_diff': 1.3986000000007492e-05}, {'time': 0.063330444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.063337833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.388999999996537e-06, 'source_diff': 7.388999999996537e-06}, {'time': 0.063338306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.063351625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.331899999999775e-05, 'source_diff': 1.331899999999775e-05}, {'time': 0.063352111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.063358139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999912626e-06, 'source_diff': 6.0279999999912626e-06}, {'time': 0.063358611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063370806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2195000000006506e-05, 'source_diff': 1.2195000000006506e-05}, {'time': 0.063371278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063379639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.063380111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063387306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.195000000001506e-06, 'source_diff': 7.195000000001506e-06}, {'time': 0.063387778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063398806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999996263e-05, 'source_diff': 1.1027999999996263e-05}, {'time': 0.063399278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063413472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4193999999995155e-05, 'source_diff': 1.4193999999995155e-05}, {'time': 0.063413944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063427139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194999999993628e-05, 'source_diff': 1.3194999999993628e-05}, {'time': 0.063427611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063438153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0542000000002272e-05, 'source_diff': 1.0542000000002272e-05}, {'time': 0.063438625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063446806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999995997e-06, 'source_diff': 8.180999999995997e-06}, {'time': 0.063447292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.063455972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.679999999997023e-06, 'source_diff': 8.679999999997023e-06}, {'time': 0.063456458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.063465806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.34800000000624e-06, 'source_diff': 9.34800000000624e-06}, {'time': 0.063466292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:02.792" endtime="20201112 12:26:02.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.787" endtime="20201112 12:26:02.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:02.823" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:02.800" endtime="20201112 12:26:02.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.827" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:02.826" endtime="20201112 12:26:02.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.831" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 1.2361000000002398e-05, 4.720000000013602e-07, 8.514000000001132e-06, 4.859999999939912e-07, 8.681000000010375e-06, 4.859999999939912e-07, 7.360999999997397e-06, 4.720000000013602e-07, 6.360999999996397e-06, 4.720000000013602e-07, 1.3862000000003372e-05, 4.720000000013602e-07, 1.1874999999994529e-05, 4.720000000013602e-07, 4.347000000001766e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 1.1374999999994029e-05, 4.7300000000083386e-07, 1.3665999999995515e-05, 4.86000000007869e-07, 6.360999999996397e-06, 4.7300000000083386e-07, 8.179999999996523e-06, 4.86000000007869e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 4.888999999994037e-06, 4.720000000013602e-07, 6.667000000001866e-06, 4.720000000013602e-07, 1.386099999999002e-05, 4.7300000000083386e-07, 9.027000000008667e-06, 4.7300000000083386e-07, 1.0693999999991655e-05, 4.720000000013602e-07, 4.403000000000046e-06, 4.720000000013602e-07, 1.1334000000001732e-05, 4.720000000013602e-07, 1.0514000000003132e-05, 4.859999999939912e-07, 5.347000000002766e-06, 4.859999999939912e-07, 4.347000000001766e-06, 4.870000000073427e-07, 8.679999999997023e-06, 4.859999999939912e-07, 9.195000000003506e-06, 4.720000000013602e-07, 1.4693999999995655e-05, 4.7300000000083386e-07, 1.1861000000001898e-05, 4.720000000013602e-07, 5.611000000002586e-06, 4.720000000013602e-07, 1.3445000000000817e-05, 4.720000000013602e-07, 4.5279999999897624e-06, 4.720000000013602e-07, 1.3527999999998763e-05, 4.86000000007869e-07, 1.2221999999992295e-05, 4.720000000013602e-07, 1.3986000000007492e-05, 4.859999999939912e-07, 7.388999999996537e-06, 4.7300000000083386e-07, 1.331899999999775e-05, 4.86000000007869e-07, 6.0279999999912626e-06, 4.720000000013602e-07, 1.2195000000006506e-05, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 7.195000000001506e-06, 4.720000000013602e-07, 1.1027999999996263e-05, 4.720000000013602e-07, 1.4193999999995155e-05, 4.720000000013602e-07, 1.3194999999993628e-05, 4.720000000013602e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 8.180999999995997e-06, 4.86000000007869e-07, 8.679999999997023e-06, 4.859999999939912e-07, 9.34800000000624e-06, 4.859999999939912e-07], 'eventtime': [0.062958931, 0.062959403, 0.062971764, 0.062972236, 0.06298075, 0.062981236, 0.062989917, 0.062990403, 0.062997764, 0.062998236, 0.063004597, 0.063005069, 0.063018931, 0.063019403, 0.063031278, 0.06303175, 0.063036097, 0.063036569, 0.063051097, 0.063051569, 0.063062111, 0.063062583, 0.063073958, 0.063074431, 0.063088097, 0.063088583, 0.063094944, 0.063095417, 0.063103597, 0.063104083, 0.063118111, 0.063118583, 0.063131611, 0.063132083, 0.063136972, 0.063137444, 0.063144111, 0.063144583, 0.063158444, 0.063158917, 0.063167944, 0.063168417, 0.063179111, 0.063179583, 0.063183986, 0.063184458, 0.063195792, 0.063196264, 0.063206778, 0.063207264, 0.063212611, 0.063213097, 0.063217444, 0.063217931, 0.063226611, 0.063227097, 0.063236292, 0.063236764, 0.063251458, 0.063251931, 0.063263792, 0.063264264, 0.063269875, 0.063270347, 0.063283792, 0.063284264, 0.063288792, 0.063289264, 0.063302792, 0.063303278, 0.0633155, 0.063315972, 0.063329958, 0.063330444, 0.063337833, 0.063338306, 0.063351625, 0.063352111, 0.063358139, 0.063358611, 0.063370806, 0.063371278, 0.063379639, 0.063380111, 0.063387306, 0.063387778, 0.063398806, 0.063399278, 0.063413472, 0.063413944, 0.063427139, 0.063427611, 0.063438153, 0.063438625, 0.063446806, 0.063447292, 0.063455972, 0.063456458, 0.063465806, 0.063466292], 'diff': [0, 4.720000000013602e-07, 1.2361000000002398e-05, 4.720000000013602e-07, 8.514000000001132e-06, 4.859999999939912e-07, 8.681000000010375e-06, 4.859999999939912e-07, 7.360999999997397e-06, 4.720000000013602e-07, 6.360999999996397e-06, 4.720000000013602e-07, 1.3862000000003372e-05, 4.720000000013602e-07, 1.1874999999994529e-05, 4.720000000013602e-07, 4.347000000001766e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 1.1374999999994029e-05, 4.7300000000083386e-07, 1.3665999999995515e-05, 4.86000000007869e-07, 6.360999999996397e-06, 4.7300000000083386e-07, 8.179999999996523e-06, 4.86000000007869e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 4.888999999994037e-06, 4.720000000013602e-07, 6.667000000001866e-06, 4.720000000013602e-07, 1.386099999999002e-05, 4.7300000000083386e-07, 9.027000000008667e-06, 4.7300000000083386e-07, 1.0693999999991655e-05, 4.720000000013602e-07, 4.403000000000046e-06, 4.720000000013602e-07, 1.1334000000001732e-05, 4.720000000013602e-07, 1.0514000000003132e-05, 4.859999999939912e-07, 5.347000000002766e-06, 4.859999999939912e-07, 4.347000000001766e-06, 4.870000000073427e-07, 8.679999999997023e-06, 4.859999999939912e-07, 9.195000000003506e-06, 4.720000000013602e-07, 1.4693999999995655e-05, 4.7300000000083386e-07, 1.1861000000001898e-05, 4.720000000013602e-07, 5.611000000002586e-06, 4.720000000013602e-07, 1.3445000000000817e-05, 4.720000000013602e-07, 4.5279999999897624e-06, 4.720000000013602e-07, 1.3527999999998763e-05, 4.86000000007869e-07, 1.2221999999992295e-05, 4.720000000013602e-07, 1.3986000000007492e-05, 4.859999999939912e-07, 7.388999999996537e-06, 4.7300000000083386e-07, 1.331899999999775e-05, 4.86000000007869e-07, 6.0279999999912626e-06, 4.720000000013602e-07, 1.2195000000006506e-05, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 7.195000000001506e-06, 4.720000000013602e-07, 1.1027999999996263e-05, 4.720000000013602e-07, 1.4193999999995155e-05, 4.720000000013602e-07, 1.3194999999993628e-05, 4.720000000013602e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 8.180999999995997e-06, 4.86000000007869e-07, 8.679999999997023e-06, 4.859999999939912e-07, 9.34800000000624e-06, 4.859999999939912e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:02.828" endtime="20201112 12:26:02.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.824" endtime="20201112 12:26:02.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:02.836" level="INFO">${RESULT} = [{'time': 0.062959403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.062972236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:02.833" endtime="20201112 12:26:02.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:02.850" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:02.837" endtime="20201112 12:26:02.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.854" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:02.853" endtime="20201112 12:26:02.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.856" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.870000000073427e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.859999999939912e-07]</msg>
<status status="PASS" starttime="20201112 12:26:02.855" endtime="20201112 12:26:02.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.851" endtime="20201112 12:26:02.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.860" endtime="20201112 12:26:02.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:02.863" endtime="20201112 12:26:02.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.861" endtime="20201112 12:26:02.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.858" endtime="20201112 12:26:02.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.440" endtime="20201112 12:26:02.884"></status>
</kw>
<msg timestamp="20201112 12:26:02.884" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.893" endtime="20201112 12:26:02.904"></status>
</kw>
<msg timestamp="20201112 12:26:02.904" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.892" endtime="20201112 12:26:02.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.907" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.905" endtime="20201112 12:26:02.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.908" endtime="20201112 12:26:02.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.887" endtime="20201112 12:26:02.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.885" endtime="20201112 12:26:02.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.917" endtime="20201112 12:26:03.207"></status>
</kw>
<msg timestamp="20201112 12:26:03.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020445403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020445889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.915" endtime="20201112 12:26:03.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020445403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020445889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.211" endtime="20201112 12:26:03.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.220" endtime="20201112 12:26:03.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.913" endtime="20201112 12:26:03.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.911" endtime="20201112 12:26:03.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.226" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:03.225" endtime="20201112 12:26:03.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.231" level="INFO">VALUE: [{'time': 0.020445403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020445889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020457736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1847000000002328e-05, 'source_diff': 1.1847000000002328e-05}, {'time': 0.020458222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020471583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.020472056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020476569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513000000001127e-06, 'source_diff': 4.513000000001127e-06}, {'time': 0.020477056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020489569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.251299999999872e-05, 'source_diff': 1.251299999999872e-05}, {'time': 0.020490056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020496417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.020496889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020501319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.020501792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020510417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.020510889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020515917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.020516389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020524083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.020524556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020538944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4388000000000595e-05, 'source_diff': 1.4388000000000595e-05}, {'time': 0.020539417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020545417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.020545889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020556083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.020556556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020568583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2027000000001259e-05, 'source_diff': 1.2027000000001259e-05}, {'time': 0.020569069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020582583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3514000000002663e-05, 'source_diff': 1.3514000000002663e-05}, {'time': 0.020583069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020595583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2514000000001663e-05, 'source_diff': 1.2514000000001663e-05}, {'time': 0.020596069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020602264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194999999997036e-06, 'source_diff': 6.194999999997036e-06}, {'time': 0.020602736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020614583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1846999999998858e-05, 'source_diff': 1.1846999999998858e-05}, {'time': 0.020615069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020622944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000000937e-06, 'source_diff': 7.875000000000937e-06}, {'time': 0.020623417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020629931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.020630403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020640611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208000000001133e-05, 'source_diff': 1.0208000000001133e-05}, {'time': 0.020641083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020653431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2347999999998832e-05, 'source_diff': 1.2347999999998832e-05}, {'time': 0.020653903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020658931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.020659403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020672597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.020673069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020677625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.020678097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020692764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4666999999999458e-05, 'source_diff': 1.4666999999999458e-05}, {'time': 0.02069325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020705264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2014000000001163e-05, 'source_diff': 1.2014000000001163e-05}, {'time': 0.02070575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020710264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.02071075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020715931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.020716417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020730958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.454099999999986e-05, 'source_diff': 1.454099999999986e-05}, {'time': 0.020731431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020736278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.02073675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020744111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.020744583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020757611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.020758083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020768111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.020768583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02077275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.020773236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02078575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.020786236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02079175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.020792236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020803778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541999999999802e-05, 'source_diff': 1.1541999999999802e-05}, {'time': 0.02080425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020818764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.020819236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020833278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4041999999998833e-05, 'source_diff': 1.4041999999998833e-05}, {'time': 0.02083375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020844764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1013999999996693e-05, 'source_diff': 1.1013999999996693e-05}, {'time': 0.020845236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020853597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.020854069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020859111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.020859583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020870931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1347999999997832e-05, 'source_diff': 1.1347999999997832e-05}, {'time': 0.020871417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020882264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.02088275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020894778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.02089525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020900444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.020900917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020914931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.020915417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020920764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.02092125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020935111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.020935583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:03.227" endtime="20201112 12:26:03.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.223" endtime="20201112 12:26:03.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:03.257" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:03.234" endtime="20201112 12:26:03.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.261" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:03.260" endtime="20201112 12:26:03.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.265" level="INFO">VALUE: {'sourcesource_diff': [0, 4.859999999974607e-07, 1.1847000000002328e-05, 4.860000000009301e-07, 1.3360999999999928e-05, 4.729999999973644e-07, 4.513000000001127e-06, 4.870000000004038e-07, 1.251299999999872e-05, 4.870000000004038e-07, 6.360999999999867e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 8.624999999998217e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 7.693999999999063e-06, 4.7300000000083386e-07, 1.4388000000000595e-05, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0193999999998093e-05, 4.7300000000083386e-07, 1.2027000000001259e-05, 4.859999999974607e-07, 1.3514000000002663e-05, 4.859999999974607e-07, 1.2514000000001663e-05, 4.860000000009301e-07, 6.194999999997036e-06, 4.720000000013602e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 7.875000000000937e-06, 4.7300000000083386e-07, 6.513999999999132e-06, 4.7199999999789077e-07, 1.0208000000001133e-05, 4.720000000013602e-07, 1.2347999999998832e-05, 4.720000000013602e-07, 5.027999999997201e-06, 4.720000000013602e-07, 1.3194000000001094e-05, 4.7199999999789077e-07, 4.55600000000278e-06, 4.7199999999789077e-07, 1.4666999999999458e-05, 4.860000000009301e-07, 1.2014000000001163e-05, 4.859999999974607e-07, 4.514000000000601e-06, 4.860000000009301e-07, 5.180999999999936e-06, 4.860000000009301e-07, 1.454099999999986e-05, 4.7300000000083386e-07, 4.846999999998797e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 5.514000000001601e-06, 4.859999999974607e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.4514000000000193e-05, 4.720000000013602e-07, 1.4041999999998833e-05, 4.720000000013602e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 1.1347999999997832e-05, 4.860000000009301e-07, 1.0847000000001328e-05, 4.859999999974607e-07, 1.2028000000000733e-05, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 1.4013999999999693e-05, 4.859999999974607e-07, 5.347000000002766e-06, 4.859999999974607e-07, 1.3861000000000429e-05, 4.720000000013602e-07], 'eventtime': [0.020445403, 0.020445889, 0.020457736, 0.020458222, 0.020471583, 0.020472056, 0.020476569, 0.020477056, 0.020489569, 0.020490056, 0.020496417, 0.020496889, 0.020501319, 0.020501792, 0.020510417, 0.020510889, 0.020515917, 0.020516389, 0.020524083, 0.020524556, 0.020538944, 0.020539417, 0.020545417, 0.020545889, 0.020556083, 0.020556556, 0.020568583, 0.020569069, 0.020582583, 0.020583069, 0.020595583, 0.020596069, 0.020602264, 0.020602736, 0.020614583, 0.020615069, 0.020622944, 0.020623417, 0.020629931, 0.020630403, 0.020640611, 0.020641083, 0.020653431, 0.020653903, 0.020658931, 0.020659403, 0.020672597, 0.020673069, 0.020677625, 0.020678097, 0.020692764, 0.02069325, 0.020705264, 0.02070575, 0.020710264, 0.02071075, 0.020715931, 0.020716417, 0.020730958, 0.020731431, 0.020736278, 0.02073675, 0.020744111, 0.020744583, 0.020757611, 0.020758083, 0.020768111, 0.020768583, 0.02077275, 0.020773236, 0.02078575, 0.020786236, 0.02079175, 0.020792236, 0.020803778, 0.02080425, 0.020818764, 0.020819236, 0.020833278, 0.02083375, 0.020844764, 0.020845236, 0.020853597, 0.020854069, 0.020859111, 0.020859583, 0.020870931, 0.020871417, 0.020882264, 0.02088275, 0.020894778, 0.02089525, 0.020900444, 0.020900917, 0.020914931, 0.020915417, 0.020920764, 0.02092125, 0.020935111, 0.020935583], 'diff': [0, 4.859999999974607e-07, 1.1847000000002328e-05, 4.860000000009301e-07, 1.3360999999999928e-05, 4.729999999973644e-07, 4.513000000001127e-06, 4.870000000004038e-07, 1.251299999999872e-05, 4.870000000004038e-07, 6.360999999999867e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 8.624999999998217e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 7.693999999999063e-06, 4.7300000000083386e-07, 1.4388000000000595e-05, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0193999999998093e-05, 4.7300000000083386e-07, 1.2027000000001259e-05, 4.859999999974607e-07, 1.3514000000002663e-05, 4.859999999974607e-07, 1.2514000000001663e-05, 4.860000000009301e-07, 6.194999999997036e-06, 4.720000000013602e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 7.875000000000937e-06, 4.7300000000083386e-07, 6.513999999999132e-06, 4.7199999999789077e-07, 1.0208000000001133e-05, 4.720000000013602e-07, 1.2347999999998832e-05, 4.720000000013602e-07, 5.027999999997201e-06, 4.720000000013602e-07, 1.3194000000001094e-05, 4.7199999999789077e-07, 4.55600000000278e-06, 4.7199999999789077e-07, 1.4666999999999458e-05, 4.860000000009301e-07, 1.2014000000001163e-05, 4.859999999974607e-07, 4.514000000000601e-06, 4.860000000009301e-07, 5.180999999999936e-06, 4.860000000009301e-07, 1.454099999999986e-05, 4.7300000000083386e-07, 4.846999999998797e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 5.514000000001601e-06, 4.859999999974607e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.4514000000000193e-05, 4.720000000013602e-07, 1.4041999999998833e-05, 4.720000000013602e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 1.1347999999997832e-05, 4.860000000009301e-07, 1.0847000000001328e-05, 4.859999999974607e-07, 1.2028000000000733e-05, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 1.4013999999999693e-05, 4.859999999974607e-07, 5.347000000002766e-06, 4.859999999974607e-07, 1.3861000000000429e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:03.262" endtime="20201112 12:26:03.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.258" endtime="20201112 12:26:03.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:03.271" level="INFO">${RESULT} = [{'time': 0.020445889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020458222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:03.268" endtime="20201112 12:26:03.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:03.285" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:03.272" endtime="20201112 12:26:03.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.289" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:03.288" endtime="20201112 12:26:03.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.291" level="INFO">VALUE: [4.859999999974607e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:26:03.290" endtime="20201112 12:26:03.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.286" endtime="20201112 12:26:03.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.294" endtime="20201112 12:26:03.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.298" endtime="20201112 12:26:03.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.296" endtime="20201112 12:26:03.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.293" endtime="20201112 12:26:03.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.884" endtime="20201112 12:26:03.318"></status>
</kw>
<msg timestamp="20201112 12:26:03.318" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.326" endtime="20201112 12:26:03.336"></status>
</kw>
<msg timestamp="20201112 12:26:03.337" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.325" endtime="20201112 12:26:03.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.339" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.338" endtime="20201112 12:26:03.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.340" endtime="20201112 12:26:03.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.322" endtime="20201112 12:26:03.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.320" endtime="20201112 12:26:03.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.349" endtime="20201112 12:26:03.634"></status>
</kw>
<msg timestamp="20201112 12:26:03.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018305361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018305833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.348" endtime="20201112 12:26:03.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018305361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018305833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.638" endtime="20201112 12:26:03.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.647" endtime="20201112 12:26:03.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.345" endtime="20201112 12:26:03.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.343" endtime="20201112 12:26:03.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.654" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:03.653" endtime="20201112 12:26:03.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.659" level="INFO">VALUE: [{'time': 0.018305361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018305833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018317208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1375000000000968e-05, 'source_diff': 1.1375000000000968e-05}, {'time': 0.018317681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018326375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018326847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018336194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018336681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018347194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513000000000189e-05, 'source_diff': 1.0513000000000189e-05}, {'time': 0.018347681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018360208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.252699999999829e-05, 'source_diff': 1.252699999999829e-05}, {'time': 0.018360681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018367861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.018368347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018380708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018381181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018385347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018385833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018400361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018400833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018407014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.0184075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018416208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.018416681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018430014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3333000000000789e-05, 'source_diff': 1.3333000000000789e-05}, {'time': 0.0184305, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018439528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.01844, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018446542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.018447014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018459361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.018459833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018466194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.018466667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018478056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1389000000000538e-05, 'source_diff': 1.1389000000000538e-05}, {'time': 0.018478528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018483889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018484361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018495861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1499999999997623e-05, 'source_diff': 1.1499999999997623e-05}, {'time': 0.018496333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018508194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1860999999998428e-05, 'source_diff': 1.1860999999998428e-05}, {'time': 0.018508681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018519694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1013000000000689e-05, 'source_diff': 1.1013000000000689e-05}, {'time': 0.018520181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018529694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.512999999999189e-06, 'source_diff': 9.512999999999189e-06}, {'time': 0.018530181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018542069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1888000000001564e-05, 'source_diff': 1.1888000000001564e-05}, {'time': 0.018542542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018555542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3000000000002593e-05, 'source_diff': 1.3000000000002593e-05}, {'time': 0.018556014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018570042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.018570514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018580375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.018580847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018594722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.018595194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018603222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.018603694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018614292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0598000000000551e-05, 'source_diff': 1.0598000000000551e-05}, {'time': 0.018614764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018622556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.018623028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018636722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3694000000001594e-05, 'source_diff': 1.3694000000001594e-05}, {'time': 0.018637194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018647375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000001467e-05, 'source_diff': 1.0181000000001467e-05}, {'time': 0.018647861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018652542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.018653028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018657389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018657861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018665042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.018665528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018675875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.018676361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018690903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4541999999999333e-05, 'source_diff': 1.4541999999999333e-05}, {'time': 0.018691375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018703569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.018704042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018712889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.018713361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018723722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.018724194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018734889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0695000000001537e-05, 'source_diff': 1.0695000000001537e-05}, {'time': 0.018735361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018744403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.018744875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018758403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.018758875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018768222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018768708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018775056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3479999999997705e-06, 'source_diff': 6.3479999999997705e-06}, {'time': 0.018775542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018782722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180000000002462e-06, 'source_diff': 7.180000000002462e-06}, {'time': 0.018783208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018788222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.018788708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018812472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3763999999999036e-05, 'source_diff': 2.3763999999999036e-05}, {'time': 0.018812944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018821625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.018822111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:03.655" endtime="20201112 12:26:03.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.650" endtime="20201112 12:26:03.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:03.686" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:03.661" endtime="20201112 12:26:03.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.690" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:03.689" endtime="20201112 12:26:03.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.694" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 1.1375000000000968e-05, 4.729999999973644e-07, 8.694000000000063e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.870000000004038e-07, 1.0513000000000189e-05, 4.870000000004038e-07, 1.252699999999829e-05, 4.7300000000083386e-07, 7.179999999998993e-06, 4.860000000009301e-07, 1.2360999999998928e-05, 4.7300000000083386e-07, 4.165999999999892e-06, 4.860000000009301e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.860000000009301e-07, 8.707999999999633e-06, 4.7300000000083386e-07, 1.3333000000000789e-05, 4.859999999974607e-07, 9.028000000001202e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 1.2346999999999358e-05, 4.7199999999789077e-07, 6.360999999999867e-06, 4.7300000000083386e-07, 1.1389000000000538e-05, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.1499999999997623e-05, 4.720000000013602e-07, 1.1860999999998428e-05, 4.870000000004038e-07, 1.1013000000000689e-05, 4.870000000004038e-07, 9.512999999999189e-06, 4.870000000004038e-07, 1.1888000000001564e-05, 4.729999999973644e-07, 1.3000000000002593e-05, 4.7199999999789077e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.3874999999999998e-05, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.0598000000000551e-05, 4.7199999999789077e-07, 7.791999999999522e-06, 4.720000000013602e-07, 1.3694000000001594e-05, 4.7199999999789077e-07, 1.0181000000001467e-05, 4.860000000009301e-07, 4.680999999999436e-06, 4.859999999974607e-07, 4.361000000001336e-06, 4.720000000013602e-07, 7.180999999998466e-06, 4.860000000009301e-07, 1.0347000000000828e-05, 4.859999999974607e-07, 1.4541999999999333e-05, 4.720000000013602e-07, 1.2194000000000094e-05, 4.7300000000083386e-07, 8.846999999999328e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 1.0695000000001537e-05, 4.7199999999789077e-07, 9.042000000000772e-06, 4.720000000013602e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.859999999974607e-07, 6.3479999999997705e-06, 4.860000000009301e-07, 7.180000000002462e-06, 4.859999999974607e-07, 5.014000000001101e-06, 4.860000000009301e-07, 2.3763999999999036e-05, 4.720000000013602e-07, 8.680999999999967e-06, 4.859999999974607e-07], 'eventtime': [0.018305361, 0.018305833, 0.018317208, 0.018317681, 0.018326375, 0.018326847, 0.018336194, 0.018336681, 0.018347194, 0.018347681, 0.018360208, 0.018360681, 0.018367861, 0.018368347, 0.018380708, 0.018381181, 0.018385347, 0.018385833, 0.018400361, 0.018400833, 0.018407014, 0.0184075, 0.018416208, 0.018416681, 0.018430014, 0.0184305, 0.018439528, 0.01844, 0.018446542, 0.018447014, 0.018459361, 0.018459833, 0.018466194, 0.018466667, 0.018478056, 0.018478528, 0.018483889, 0.018484361, 0.018495861, 0.018496333, 0.018508194, 0.018508681, 0.018519694, 0.018520181, 0.018529694, 0.018530181, 0.018542069, 0.018542542, 0.018555542, 0.018556014, 0.018570042, 0.018570514, 0.018580375, 0.018580847, 0.018594722, 0.018595194, 0.018603222, 0.018603694, 0.018614292, 0.018614764, 0.018622556, 0.018623028, 0.018636722, 0.018637194, 0.018647375, 0.018647861, 0.018652542, 0.018653028, 0.018657389, 0.018657861, 0.018665042, 0.018665528, 0.018675875, 0.018676361, 0.018690903, 0.018691375, 0.018703569, 0.018704042, 0.018712889, 0.018713361, 0.018723722, 0.018724194, 0.018734889, 0.018735361, 0.018744403, 0.018744875, 0.018758403, 0.018758875, 0.018768222, 0.018768708, 0.018775056, 0.018775542, 0.018782722, 0.018783208, 0.018788222, 0.018788708, 0.018812472, 0.018812944, 0.018821625, 0.018822111], 'diff': [0, 4.720000000013602e-07, 1.1375000000000968e-05, 4.729999999973644e-07, 8.694000000000063e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.870000000004038e-07, 1.0513000000000189e-05, 4.870000000004038e-07, 1.252699999999829e-05, 4.7300000000083386e-07, 7.179999999998993e-06, 4.860000000009301e-07, 1.2360999999998928e-05, 4.7300000000083386e-07, 4.165999999999892e-06, 4.860000000009301e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.860000000009301e-07, 8.707999999999633e-06, 4.7300000000083386e-07, 1.3333000000000789e-05, 4.859999999974607e-07, 9.028000000001202e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 1.2346999999999358e-05, 4.7199999999789077e-07, 6.360999999999867e-06, 4.7300000000083386e-07, 1.1389000000000538e-05, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.1499999999997623e-05, 4.720000000013602e-07, 1.1860999999998428e-05, 4.870000000004038e-07, 1.1013000000000689e-05, 4.870000000004038e-07, 9.512999999999189e-06, 4.870000000004038e-07, 1.1888000000001564e-05, 4.729999999973644e-07, 1.3000000000002593e-05, 4.7199999999789077e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.3874999999999998e-05, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.0598000000000551e-05, 4.7199999999789077e-07, 7.791999999999522e-06, 4.720000000013602e-07, 1.3694000000001594e-05, 4.7199999999789077e-07, 1.0181000000001467e-05, 4.860000000009301e-07, 4.680999999999436e-06, 4.859999999974607e-07, 4.361000000001336e-06, 4.720000000013602e-07, 7.180999999998466e-06, 4.860000000009301e-07, 1.0347000000000828e-05, 4.859999999974607e-07, 1.4541999999999333e-05, 4.720000000013602e-07, 1.2194000000000094e-05, 4.7300000000083386e-07, 8.846999999999328e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 1.0695000000001537e-05, 4.7199999999789077e-07, 9.042000000000772e-06, 4.720000000013602e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.859999999974607e-07, 6.3479999999997705e-06, 4.860000000009301e-07, 7.180000000002462e-06, 4.859999999974607e-07, 5.014000000001101e-06, 4.860000000009301e-07, 2.3763999999999036e-05, 4.720000000013602e-07, 8.680999999999967e-06, 4.859999999974607e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:03.691" endtime="20201112 12:26:03.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.687" endtime="20201112 12:26:03.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:03.699" level="INFO">${RESULT} = [{'time': 0.018305833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018317681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:03.696" endtime="20201112 12:26:03.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:03.713" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:03.700" endtime="20201112 12:26:03.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.717" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:03.716" endtime="20201112 12:26:03.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.719" level="INFO">VALUE: [4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201112 12:26:03.718" endtime="20201112 12:26:03.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.714" endtime="20201112 12:26:03.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.723" endtime="20201112 12:26:03.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.726" endtime="20201112 12:26:03.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.725" endtime="20201112 12:26:03.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.721" endtime="20201112 12:26:03.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.319" endtime="20201112 12:26:03.747"></status>
</kw>
<msg timestamp="20201112 12:26:03.747" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.755" endtime="20201112 12:26:03.765"></status>
</kw>
<msg timestamp="20201112 12:26:03.765" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.753" endtime="20201112 12:26:03.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.768" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.766" endtime="20201112 12:26:03.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.769" endtime="20201112 12:26:03.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.751" endtime="20201112 12:26:03.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.749" endtime="20201112 12:26:03.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.778" endtime="20201112 12:26:04.067"></status>
</kw>
<msg timestamp="20201112 12:26:04.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018511361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018511833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.777" endtime="20201112 12:26:04.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018511361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018511833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.071" endtime="20201112 12:26:04.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.080" endtime="20201112 12:26:04.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.774" endtime="20201112 12:26:04.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.772" endtime="20201112 12:26:04.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.086" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:04.085" endtime="20201112 12:26:04.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.091" level="INFO">VALUE: [{'time': 0.018511361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018511833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018521361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.018521833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018528347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.018528833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018543181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4347999999997363e-05, 'source_diff': 1.4347999999997363e-05}, {'time': 0.018543667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018550861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.018551333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018564042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708999999999637e-05, 'source_diff': 1.2708999999999637e-05}, {'time': 0.018564514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018578361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.018578833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018588194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018588667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018603194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.452700000000029e-05, 'source_diff': 1.452700000000029e-05}, {'time': 0.018603667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018610194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.018610667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018620361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.693999999997593e-06, 'source_diff': 9.693999999997593e-06}, {'time': 0.018620847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018626194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018626681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018641375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4694000000002594e-05, 'source_diff': 1.4694000000002594e-05}, {'time': 0.018641847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018652375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.018652847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018658403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.018658875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018670194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1319000000002688e-05, 'source_diff': 1.1319000000002688e-05}, {'time': 0.018670681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018676375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6939999999970625e-06, 'source_diff': 5.6939999999970625e-06}, {'time': 0.018676847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018689042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194999999999567e-05, 'source_diff': 1.2194999999999567e-05}, {'time': 0.018689514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018704042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018704514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018715375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.018715847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018721875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018722347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018736208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018736694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018747889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1194999999998567e-05, 'source_diff': 1.1194999999998567e-05}, {'time': 0.018748361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018762083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3721999999997264e-05, 'source_diff': 1.3721999999997264e-05}, {'time': 0.018762556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018774722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2166000000000954e-05, 'source_diff': 1.2166000000000954e-05}, {'time': 0.018775194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018784208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.018784694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018789889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.018790361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018794931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.57000000000235e-06, 'source_diff': 4.57000000000235e-06}, {'time': 0.018795403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018803889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.018804361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018812056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.695000000002006e-06, 'source_diff': 7.695000000002006e-06}, {'time': 0.018812528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018819903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.018820375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018834556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4180999999998528e-05, 'source_diff': 1.4180999999998528e-05}, {'time': 0.018835028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018846056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.018846528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018850903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3749999999974365e-06, 'source_diff': 4.3749999999974365e-06}, {'time': 0.018851375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018857389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.018857861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018864056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.018864542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018877569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.302699999999879e-05, 'source_diff': 1.302699999999879e-05}, {'time': 0.018878042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018891722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3679999999998554e-05, 'source_diff': 1.3679999999998554e-05}, {'time': 0.018892208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018901556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.018902042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018907625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.018908097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018919569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1472000000001953e-05, 'source_diff': 1.1472000000001953e-05}, {'time': 0.018920042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018930403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0360999999996928e-05, 'source_diff': 1.0360999999996928e-05}, {'time': 0.018930875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018943583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.018944056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018949944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.887999999999033e-06, 'source_diff': 5.887999999999033e-06}, {'time': 0.018950417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018959236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.018959708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018972569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2861000000002898e-05, 'source_diff': 1.2861000000002898e-05}, {'time': 0.018973042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018978736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.018979222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018991736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.018992222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019002403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000001467e-05, 'source_diff': 1.0181000000001467e-05}, {'time': 0.019002889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019007569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.019008056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:04.087" endtime="20201112 12:26:04.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.083" endtime="20201112 12:26:04.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:04.117" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:04.094" endtime="20201112 12:26:04.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.121" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:04.120" endtime="20201112 12:26:04.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.125" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7199999999789077e-07, 9.528000000001702e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.860000000009301e-07, 1.4347999999997363e-05, 4.860000000009301e-07, 7.193999999998563e-06, 4.720000000013602e-07, 1.2708999999999637e-05, 4.720000000013602e-07, 1.3847000000000859e-05, 4.7199999999789077e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 1.452700000000029e-05, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 9.693999999997593e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.870000000004038e-07, 1.4694000000002594e-05, 4.7199999999789077e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 5.556000000000311e-06, 4.7199999999789077e-07, 1.1319000000002688e-05, 4.870000000004038e-07, 5.6939999999970625e-06, 4.720000000013602e-07, 1.2194999999999567e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.860000000009301e-07, 1.1194999999998567e-05, 4.720000000013602e-07, 1.3721999999997264e-05, 4.7300000000083386e-07, 1.2166000000000954e-05, 4.7199999999789077e-07, 9.014000000001632e-06, 4.860000000009301e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 4.57000000000235e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 7.695000000002006e-06, 4.7199999999789077e-07, 7.375000000000437e-06, 4.720000000013602e-07, 1.4180999999998528e-05, 4.720000000013602e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 4.3749999999974365e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 6.195000000000506e-06, 4.860000000009301e-07, 1.302699999999879e-05, 4.7300000000083386e-07, 1.3679999999998554e-05, 4.860000000009301e-07, 9.347999999999301e-06, 4.860000000009301e-07, 5.582999999999977e-06, 4.7199999999789077e-07, 1.1472000000001953e-05, 4.7300000000083386e-07, 1.0360999999996928e-05, 4.720000000013602e-07, 1.2708000000000164e-05, 4.7300000000083386e-07, 5.887999999999033e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.7199999999789077e-07, 1.2861000000002898e-05, 4.729999999973644e-07, 5.694000000000532e-06, 4.860000000009301e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 1.0181000000001467e-05, 4.859999999974607e-07, 4.679999999999962e-06, 4.870000000004038e-07], 'eventtime': [0.018511361, 0.018511833, 0.018521361, 0.018521833, 0.018528347, 0.018528833, 0.018543181, 0.018543667, 0.018550861, 0.018551333, 0.018564042, 0.018564514, 0.018578361, 0.018578833, 0.018588194, 0.018588667, 0.018603194, 0.018603667, 0.018610194, 0.018610667, 0.018620361, 0.018620847, 0.018626194, 0.018626681, 0.018641375, 0.018641847, 0.018652375, 0.018652847, 0.018658403, 0.018658875, 0.018670194, 0.018670681, 0.018676375, 0.018676847, 0.018689042, 0.018689514, 0.018704042, 0.018704514, 0.018715375, 0.018715847, 0.018721875, 0.018722347, 0.018736208, 0.018736694, 0.018747889, 0.018748361, 0.018762083, 0.018762556, 0.018774722, 0.018775194, 0.018784208, 0.018784694, 0.018789889, 0.018790361, 0.018794931, 0.018795403, 0.018803889, 0.018804361, 0.018812056, 0.018812528, 0.018819903, 0.018820375, 0.018834556, 0.018835028, 0.018846056, 0.018846528, 0.018850903, 0.018851375, 0.018857389, 0.018857861, 0.018864056, 0.018864542, 0.018877569, 0.018878042, 0.018891722, 0.018892208, 0.018901556, 0.018902042, 0.018907625, 0.018908097, 0.018919569, 0.018920042, 0.018930403, 0.018930875, 0.018943583, 0.018944056, 0.018949944, 0.018950417, 0.018959236, 0.018959708, 0.018972569, 0.018973042, 0.018978736, 0.018979222, 0.018991736, 0.018992222, 0.019002403, 0.019002889, 0.019007569, 0.019008056], 'diff': [0, 4.7199999999789077e-07, 9.528000000001702e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.860000000009301e-07, 1.4347999999997363e-05, 4.860000000009301e-07, 7.193999999998563e-06, 4.720000000013602e-07, 1.2708999999999637e-05, 4.720000000013602e-07, 1.3847000000000859e-05, 4.7199999999789077e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 1.452700000000029e-05, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 9.693999999997593e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.870000000004038e-07, 1.4694000000002594e-05, 4.7199999999789077e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 5.556000000000311e-06, 4.7199999999789077e-07, 1.1319000000002688e-05, 4.870000000004038e-07, 5.6939999999970625e-06, 4.720000000013602e-07, 1.2194999999999567e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.860000000009301e-07, 1.1194999999998567e-05, 4.720000000013602e-07, 1.3721999999997264e-05, 4.7300000000083386e-07, 1.2166000000000954e-05, 4.7199999999789077e-07, 9.014000000001632e-06, 4.860000000009301e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 4.57000000000235e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 7.695000000002006e-06, 4.7199999999789077e-07, 7.375000000000437e-06, 4.720000000013602e-07, 1.4180999999998528e-05, 4.720000000013602e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 4.3749999999974365e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 6.195000000000506e-06, 4.860000000009301e-07, 1.302699999999879e-05, 4.7300000000083386e-07, 1.3679999999998554e-05, 4.860000000009301e-07, 9.347999999999301e-06, 4.860000000009301e-07, 5.582999999999977e-06, 4.7199999999789077e-07, 1.1472000000001953e-05, 4.7300000000083386e-07, 1.0360999999996928e-05, 4.720000000013602e-07, 1.2708000000000164e-05, 4.7300000000083386e-07, 5.887999999999033e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.7199999999789077e-07, 1.2861000000002898e-05, 4.729999999973644e-07, 5.694000000000532e-06, 4.860000000009301e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 1.0181000000001467e-05, 4.859999999974607e-07, 4.679999999999962e-06, 4.870000000004038e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:04.122" endtime="20201112 12:26:04.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.118" endtime="20201112 12:26:04.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:04.131" level="INFO">${RESULT} = [{'time': 0.018511833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018521833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:04.127" endtime="20201112 12:26:04.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:04.144" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:04.132" endtime="20201112 12:26:04.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.149" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:04.147" endtime="20201112 12:26:04.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.152" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.870000000004038e-07]</msg>
<status status="PASS" starttime="20201112 12:26:04.150" endtime="20201112 12:26:04.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.145" endtime="20201112 12:26:04.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.155" endtime="20201112 12:26:04.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.158" endtime="20201112 12:26:04.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.157" endtime="20201112 12:26:04.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.153" endtime="20201112 12:26:04.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.748" endtime="20201112 12:26:04.179"></status>
</kw>
<msg timestamp="20201112 12:26:04.179" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.186" endtime="20201112 12:26:04.197"></status>
</kw>
<msg timestamp="20201112 12:26:04.197" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.185" endtime="20201112 12:26:04.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.200" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.198" endtime="20201112 12:26:04.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.201" endtime="20201112 12:26:04.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.182" endtime="20201112 12:26:04.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.181" endtime="20201112 12:26:04.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.210" endtime="20201112 12:26:04.495"></status>
</kw>
<msg timestamp="20201112 12:26:04.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018279875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018280347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.208" endtime="20201112 12:26:04.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018279875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018280347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.499" endtime="20201112 12:26:04.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.507" endtime="20201112 12:26:04.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.205" endtime="20201112 12:26:04.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.204" endtime="20201112 12:26:04.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.514" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:04.513" endtime="20201112 12:26:04.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.519" level="INFO">VALUE: [{'time': 0.018279875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018280347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018287153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.018287639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018296333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018296806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018308014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1208000000002133e-05, 'source_diff': 1.1208000000002133e-05}, {'time': 0.018308486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018317361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.018317833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018331681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3848000000000332e-05, 'source_diff': 1.3848000000000332e-05}, {'time': 0.018332153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018343014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.018343486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0183495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.018349972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018354347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.018354819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018367333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.018367806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018373, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018373472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018385833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361000000002398e-05, 'source_diff': 1.2361000000002398e-05}, {'time': 0.018386319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018397681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361999999997402e-05, 'source_diff': 1.1361999999997402e-05}, {'time': 0.018398153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018410333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180000000000524e-05, 'source_diff': 1.2180000000000524e-05}, {'time': 0.018410819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018418833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.018419319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018427167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.84800000000127e-06, 'source_diff': 7.84800000000127e-06}, {'time': 0.018427653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018435028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.0184355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018446014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.018446486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018456347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.018456819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018469847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3028000000001733e-05, 'source_diff': 1.3028000000001733e-05}, {'time': 0.018470319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018476347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018476819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018488347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018488819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018495347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.018495833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018503681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.84800000000127e-06, 'source_diff': 7.84800000000127e-06}, {'time': 0.018504167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018511194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.027000000003197e-06, 'source_diff': 7.027000000003197e-06}, {'time': 0.018511667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018516681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.018517167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018529681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.018530167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018539514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.01854, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018549014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.0185495, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018562028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.0185625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018569028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.0185695, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018582694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.018583167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018592944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.776999999999009e-06, 'source_diff': 9.776999999999009e-06}, {'time': 0.018593417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018600194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.776999999999478e-06, 'source_diff': 6.776999999999478e-06}, {'time': 0.018600667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018611361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.018611833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018625028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194999999997098e-05, 'source_diff': 1.3194999999997098e-05}, {'time': 0.018625514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018640028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.018640514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018647944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.018648417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018659028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.018659514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018664528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.018665014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018670861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018671347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018677597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018678069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018686722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.018687194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018700375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3181000000000997e-05, 'source_diff': 1.3181000000000997e-05}, {'time': 0.018700847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018708542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.695000000002006e-06, 'source_diff': 7.695000000002006e-06}, {'time': 0.018709014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018722389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3374999999999498e-05, 'source_diff': 1.3374999999999498e-05}, {'time': 0.018722861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018733875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.018734347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018739375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018739847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018749556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.018750028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018760389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.018760861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:04.515" endtime="20201112 12:26:04.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.510" endtime="20201112 12:26:04.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:04.546" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:04.521" endtime="20201112 12:26:04.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.550" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:04.549" endtime="20201112 12:26:04.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.554" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7199999999789077e-07, 6.806000000001561e-06, 4.860000000009301e-07, 8.694000000000063e-06, 4.729999999973644e-07, 1.1208000000002133e-05, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 1.3848000000000332e-05, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 6.014000000002101e-06, 4.7199999999789077e-07, 4.375000000000906e-06, 4.720000000013602e-07, 1.2513999999998193e-05, 4.7300000000083386e-07, 5.194000000000032e-06, 4.7199999999789077e-07, 1.2361000000002398e-05, 4.860000000009301e-07, 1.1361999999997402e-05, 4.720000000013602e-07, 1.2180000000000524e-05, 4.859999999974607e-07, 8.014000000000632e-06, 4.860000000009301e-07, 7.84800000000127e-06, 4.859999999974607e-07, 7.375000000000437e-06, 4.720000000013602e-07, 1.0513999999999663e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.7199999999789077e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.860000000009301e-07, 7.84800000000127e-06, 4.859999999974607e-07, 7.027000000003197e-06, 4.729999999973644e-07, 5.014000000001101e-06, 4.860000000009301e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 9.776999999999009e-06, 4.7300000000083386e-07, 6.776999999999478e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 1.3194999999997098e-05, 4.860000000009301e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 1.0611000000000648e-05, 4.859999999974607e-07, 5.014000000001101e-06, 4.860000000009301e-07, 5.846999999999797e-06, 4.860000000009301e-07, 6.249999999999312e-06, 4.7199999999789077e-07, 8.653000000000827e-06, 4.720000000013602e-07, 1.3181000000000997e-05, 4.7199999999789077e-07, 7.695000000002006e-06, 4.7199999999789077e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 1.1014000000000163e-05, 4.7199999999789077e-07, 5.028000000000671e-06, 4.720000000013602e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.720000000013602e-07], 'eventtime': [0.018279875, 0.018280347, 0.018287153, 0.018287639, 0.018296333, 0.018296806, 0.018308014, 0.018308486, 0.018317361, 0.018317833, 0.018331681, 0.018332153, 0.018343014, 0.018343486, 0.0183495, 0.018349972, 0.018354347, 0.018354819, 0.018367333, 0.018367806, 0.018373, 0.018373472, 0.018385833, 0.018386319, 0.018397681, 0.018398153, 0.018410333, 0.018410819, 0.018418833, 0.018419319, 0.018427167, 0.018427653, 0.018435028, 0.0184355, 0.018446014, 0.018446486, 0.018456347, 0.018456819, 0.018469847, 0.018470319, 0.018476347, 0.018476819, 0.018488347, 0.018488819, 0.018495347, 0.018495833, 0.018503681, 0.018504167, 0.018511194, 0.018511667, 0.018516681, 0.018517167, 0.018529681, 0.018530167, 0.018539514, 0.01854, 0.018549014, 0.0185495, 0.018562028, 0.0185625, 0.018569028, 0.0185695, 0.018582694, 0.018583167, 0.018592944, 0.018593417, 0.018600194, 0.018600667, 0.018611361, 0.018611833, 0.018625028, 0.018625514, 0.018640028, 0.018640514, 0.018647944, 0.018648417, 0.018659028, 0.018659514, 0.018664528, 0.018665014, 0.018670861, 0.018671347, 0.018677597, 0.018678069, 0.018686722, 0.018687194, 0.018700375, 0.018700847, 0.018708542, 0.018709014, 0.018722389, 0.018722861, 0.018733875, 0.018734347, 0.018739375, 0.018739847, 0.018749556, 0.018750028, 0.018760389, 0.018760861], 'diff': [0, 4.7199999999789077e-07, 6.806000000001561e-06, 4.860000000009301e-07, 8.694000000000063e-06, 4.729999999973644e-07, 1.1208000000002133e-05, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 1.3848000000000332e-05, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 6.014000000002101e-06, 4.7199999999789077e-07, 4.375000000000906e-06, 4.720000000013602e-07, 1.2513999999998193e-05, 4.7300000000083386e-07, 5.194000000000032e-06, 4.7199999999789077e-07, 1.2361000000002398e-05, 4.860000000009301e-07, 1.1361999999997402e-05, 4.720000000013602e-07, 1.2180000000000524e-05, 4.859999999974607e-07, 8.014000000000632e-06, 4.860000000009301e-07, 7.84800000000127e-06, 4.859999999974607e-07, 7.375000000000437e-06, 4.720000000013602e-07, 1.0513999999999663e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.7199999999789077e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.860000000009301e-07, 7.84800000000127e-06, 4.859999999974607e-07, 7.027000000003197e-06, 4.729999999973644e-07, 5.014000000001101e-06, 4.860000000009301e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 9.776999999999009e-06, 4.7300000000083386e-07, 6.776999999999478e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 1.3194999999997098e-05, 4.860000000009301e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 1.0611000000000648e-05, 4.859999999974607e-07, 5.014000000001101e-06, 4.860000000009301e-07, 5.846999999999797e-06, 4.860000000009301e-07, 6.249999999999312e-06, 4.7199999999789077e-07, 8.653000000000827e-06, 4.720000000013602e-07, 1.3181000000000997e-05, 4.7199999999789077e-07, 7.695000000002006e-06, 4.7199999999789077e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 1.1014000000000163e-05, 4.7199999999789077e-07, 5.028000000000671e-06, 4.720000000013602e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:04.551" endtime="20201112 12:26:04.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.547" endtime="20201112 12:26:04.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:04.560" level="INFO">${RESULT} = [{'time': 0.018280347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018287639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:04.556" endtime="20201112 12:26:04.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:04.573" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:04.561" endtime="20201112 12:26:04.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.577" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:04.576" endtime="20201112 12:26:04.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.580" level="INFO">VALUE: [4.7199999999789077e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:26:04.578" endtime="20201112 12:26:04.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.574" endtime="20201112 12:26:04.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.583" endtime="20201112 12:26:04.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.586" endtime="20201112 12:26:04.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.584" endtime="20201112 12:26:04.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.581" endtime="20201112 12:26:04.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.179" endtime="20201112 12:26:04.607"></status>
</kw>
<msg timestamp="20201112 12:26:04.607" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.614" endtime="20201112 12:26:04.625"></status>
</kw>
<msg timestamp="20201112 12:26:04.625" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.613" endtime="20201112 12:26:04.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.628" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.626" endtime="20201112 12:26:04.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.629" endtime="20201112 12:26:04.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.610" endtime="20201112 12:26:04.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.609" endtime="20201112 12:26:04.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.639" endtime="20201112 12:26:04.923"></status>
</kw>
<msg timestamp="20201112 12:26:04.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018281625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018282097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.637" endtime="20201112 12:26:04.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018281625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018282097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.928" endtime="20201112 12:26:04.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.936" endtime="20201112 12:26:04.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.634" endtime="20201112 12:26:04.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.632" endtime="20201112 12:26:04.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.943" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:04.942" endtime="20201112 12:26:04.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.948" level="INFO">VALUE: [{'time': 0.018281625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018282097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018287639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018288111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018295278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.01829575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018306125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.018306597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018312, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.402999999997576e-06, 'source_diff': 5.402999999997576e-06}, {'time': 0.018312472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018323125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.018323597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018329444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018329917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018334625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.018335097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018340819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018341292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018350625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018351097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018362125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.018362597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0183675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.902999999997076e-06, 'source_diff': 4.902999999997076e-06}, {'time': 0.018367972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018376944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.018377431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018388944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1513000000001189e-05, 'source_diff': 1.1513000000001189e-05}, {'time': 0.018389431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018400958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.152699999999729e-05, 'source_diff': 1.152699999999729e-05}, {'time': 0.018401431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018411819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388000000000064e-05, 'source_diff': 1.0388000000000064e-05}, {'time': 0.018412292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018420792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999998092e-06, 'source_diff': 8.499999999998092e-06}, {'time': 0.018421264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018433653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2389000000001538e-05, 'source_diff': 1.2389000000001538e-05}, {'time': 0.018434125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018447625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.018448097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018455292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.195000000001506e-06, 'source_diff': 7.195000000001506e-06}, {'time': 0.018455764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018462972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.018463444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018476625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3181000000000997e-05, 'source_diff': 1.3181000000000997e-05}, {'time': 0.018477111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018490958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.384699999999739e-05, 'source_diff': 1.384699999999739e-05}, {'time': 0.018491444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018505306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861999999999902e-05, 'source_diff': 1.3861999999999902e-05}, {'time': 0.018505778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018520306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018520778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018529472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018529944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018535486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018535958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018545194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999999273e-06, 'source_diff': 9.235999999999273e-06}, {'time': 0.018545667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018557806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2139000000001288e-05, 'source_diff': 1.2139000000001288e-05}, {'time': 0.018558278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018562806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018563278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018575306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.018575778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018584639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018585111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018597139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2027999999997263e-05, 'source_diff': 1.2027999999997263e-05}, {'time': 0.018597625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018611806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.018612292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018619139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.018619625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018626139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.018626625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018634986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.018635458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018649319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018649792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018659833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041000000002298e-05, 'source_diff': 1.0041000000002298e-05}, {'time': 0.018660306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018667486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.018667958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018681514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3556000000001373e-05, 'source_diff': 1.3556000000001373e-05}, {'time': 0.018681986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018686486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.018686958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018694486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.018694958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018704319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018704806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.0187095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018709972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018715319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.018715806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018725653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.846999999996858e-06, 'source_diff': 9.846999999996858e-06}, {'time': 0.018726139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018736653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.018737139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018742319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.018742806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018749528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.01875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:04.944" endtime="20201112 12:26:04.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.940" endtime="20201112 12:26:04.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:04.974" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:04.951" endtime="20201112 12:26:04.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.978" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:04.977" endtime="20201112 12:26:04.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.982" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.720000000013602e-07, 5.542000000000741e-06, 4.7199999999789077e-07, 7.167000000002366e-06, 4.7199999999789077e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 5.402999999997576e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 5.846999999999797e-06, 4.7300000000083386e-07, 4.707999999999102e-06, 4.720000000013602e-07, 5.721999999999672e-06, 4.729999999973644e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 4.902999999997076e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.870000000004038e-07, 1.1513000000001189e-05, 4.870000000004038e-07, 1.152699999999729e-05, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 8.499999999998092e-06, 4.720000000013602e-07, 1.2389000000001538e-05, 4.7199999999789077e-07, 1.3499999999999623e-05, 4.720000000013602e-07, 7.195000000001506e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.7199999999789077e-07, 1.3181000000000997e-05, 4.860000000009301e-07, 1.384699999999739e-05, 4.860000000009301e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 5.542000000000741e-06, 4.720000000013602e-07, 9.235999999999273e-06, 4.729999999973644e-07, 1.2139000000001288e-05, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 1.2028000000000733e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.2027999999997263e-05, 4.860000000009301e-07, 1.4181000000001998e-05, 4.859999999974607e-07, 6.847000000000797e-06, 4.860000000009301e-07, 6.513999999999132e-06, 4.860000000009301e-07, 8.360999999998397e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.729999999973644e-07, 1.0041000000002298e-05, 4.7300000000083386e-07, 7.179999999998993e-06, 4.7199999999789077e-07, 1.3556000000001373e-05, 4.720000000013602e-07, 4.4999999999975615e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.870000000004038e-07, 4.693999999999532e-06, 4.7199999999789077e-07, 5.347000000002766e-06, 4.870000000004038e-07, 9.846999999996858e-06, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 5.180000000000462e-06, 4.870000000004038e-07, 6.722000000000672e-06, 4.7199999999789077e-07], 'eventtime': [0.018281625, 0.018282097, 0.018287639, 0.018288111, 0.018295278, 0.01829575, 0.018306125, 0.018306597, 0.018312, 0.018312472, 0.018323125, 0.018323597, 0.018329444, 0.018329917, 0.018334625, 0.018335097, 0.018340819, 0.018341292, 0.018350625, 0.018351097, 0.018362125, 0.018362597, 0.0183675, 0.018367972, 0.018376944, 0.018377431, 0.018388944, 0.018389431, 0.018400958, 0.018401431, 0.018411819, 0.018412292, 0.018420792, 0.018421264, 0.018433653, 0.018434125, 0.018447625, 0.018448097, 0.018455292, 0.018455764, 0.018462972, 0.018463444, 0.018476625, 0.018477111, 0.018490958, 0.018491444, 0.018505306, 0.018505778, 0.018520306, 0.018520778, 0.018529472, 0.018529944, 0.018535486, 0.018535958, 0.018545194, 0.018545667, 0.018557806, 0.018558278, 0.018562806, 0.018563278, 0.018575306, 0.018575778, 0.018584639, 0.018585111, 0.018597139, 0.018597625, 0.018611806, 0.018612292, 0.018619139, 0.018619625, 0.018626139, 0.018626625, 0.018634986, 0.018635458, 0.018649319, 0.018649792, 0.018659833, 0.018660306, 0.018667486, 0.018667958, 0.018681514, 0.018681986, 0.018686486, 0.018686958, 0.018694486, 0.018694958, 0.018704319, 0.018704806, 0.0187095, 0.018709972, 0.018715319, 0.018715806, 0.018725653, 0.018726139, 0.018736653, 0.018737139, 0.018742319, 0.018742806, 0.018749528, 0.01875], 'diff': [0, 4.720000000013602e-07, 5.542000000000741e-06, 4.7199999999789077e-07, 7.167000000002366e-06, 4.7199999999789077e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 5.402999999997576e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 5.846999999999797e-06, 4.7300000000083386e-07, 4.707999999999102e-06, 4.720000000013602e-07, 5.721999999999672e-06, 4.729999999973644e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 4.902999999997076e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.870000000004038e-07, 1.1513000000001189e-05, 4.870000000004038e-07, 1.152699999999729e-05, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 8.499999999998092e-06, 4.720000000013602e-07, 1.2389000000001538e-05, 4.7199999999789077e-07, 1.3499999999999623e-05, 4.720000000013602e-07, 7.195000000001506e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.7199999999789077e-07, 1.3181000000000997e-05, 4.860000000009301e-07, 1.384699999999739e-05, 4.860000000009301e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 5.542000000000741e-06, 4.720000000013602e-07, 9.235999999999273e-06, 4.729999999973644e-07, 1.2139000000001288e-05, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 1.2028000000000733e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.2027999999997263e-05, 4.860000000009301e-07, 1.4181000000001998e-05, 4.859999999974607e-07, 6.847000000000797e-06, 4.860000000009301e-07, 6.513999999999132e-06, 4.860000000009301e-07, 8.360999999998397e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.729999999973644e-07, 1.0041000000002298e-05, 4.7300000000083386e-07, 7.179999999998993e-06, 4.7199999999789077e-07, 1.3556000000001373e-05, 4.720000000013602e-07, 4.4999999999975615e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.870000000004038e-07, 4.693999999999532e-06, 4.7199999999789077e-07, 5.347000000002766e-06, 4.870000000004038e-07, 9.846999999996858e-06, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 5.180000000000462e-06, 4.870000000004038e-07, 6.722000000000672e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:04.979" endtime="20201112 12:26:04.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.975" endtime="20201112 12:26:04.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:04.988" level="INFO">${RESULT} = [{'time': 0.018282097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018288111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:04.985" endtime="20201112 12:26:04.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.002" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:04.989" endtime="20201112 12:26:05.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.006" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:05.005" endtime="20201112 12:26:05.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.009" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 12:26:05.007" endtime="20201112 12:26:05.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.003" endtime="20201112 12:26:05.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.012" endtime="20201112 12:26:05.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.016" endtime="20201112 12:26:05.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.014" endtime="20201112 12:26:05.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.010" endtime="20201112 12:26:05.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.607" endtime="20201112 12:26:05.037"></status>
</kw>
<msg timestamp="20201112 12:26:05.037" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.045" endtime="20201112 12:26:05.055"></status>
</kw>
<msg timestamp="20201112 12:26:05.055" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.043" endtime="20201112 12:26:05.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.058" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.056" endtime="20201112 12:26:05.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.059" endtime="20201112 12:26:05.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.041" endtime="20201112 12:26:05.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.039" endtime="20201112 12:26:05.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.067" endtime="20201112 12:26:05.355"></status>
</kw>
<msg timestamp="20201112 12:26:05.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018545792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018546278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.066" endtime="20201112 12:26:05.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018545792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018546278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.360" endtime="20201112 12:26:05.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.368" endtime="20201112 12:26:05.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.064" endtime="20201112 12:26:05.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.062" endtime="20201112 12:26:05.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.375" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:05.374" endtime="20201112 12:26:05.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.380" level="INFO">VALUE: [{'time': 0.018545792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018546278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018560972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.018561444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018570153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708999999999106e-06, 'source_diff': 8.708999999999106e-06}, {'time': 0.018570625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018577958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.018578444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018590194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1750000000001343e-05, 'source_diff': 1.1750000000001343e-05}, {'time': 0.018590667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018595153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018595625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018607472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1846999999998858e-05, 'source_diff': 1.1846999999998858e-05}, {'time': 0.018607944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018617986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041999999998302e-05, 'source_diff': 1.0041999999998302e-05}, {'time': 0.018618458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018629972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018630444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018640653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0209000000000606e-05, 'source_diff': 1.0209000000000606e-05}, {'time': 0.018641125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018648486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.018648958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018653472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018653958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018660306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3479999999997705e-06, 'source_diff': 6.3479999999997705e-06}, {'time': 0.018660792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018668861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.018669333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018678639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.018679125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018689319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.018689792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018694986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018695458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018707486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2027999999997263e-05, 'source_diff': 1.2027999999997263e-05}, {'time': 0.018707958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018720153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194999999999567e-05, 'source_diff': 1.2194999999999567e-05}, {'time': 0.018720625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018727319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.018727792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018742319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.452700000000029e-05, 'source_diff': 1.452700000000029e-05}, {'time': 0.018742792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0187565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3707999999997694e-05, 'source_diff': 1.3707999999997694e-05}, {'time': 0.018756972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018767486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.018767958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018780986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.018781472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018791653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.018792139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018803153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.018803639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018817486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.018817972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018827167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.018827639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018837667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.018838139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018843833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.018844306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0188535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.193999999997093e-06, 'source_diff': 9.193999999997093e-06}, {'time': 0.018853972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018863667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.018864139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018876347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2208000000003133e-05, 'source_diff': 1.2208000000003133e-05}, {'time': 0.018876819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018881333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018881806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018886, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.018886472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0188965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.018896972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.018905472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018913819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.018914292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018922819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527000000001228e-06, 'source_diff': 8.527000000001228e-06}, {'time': 0.018923292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018935028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1735999999998303e-05, 'source_diff': 1.1735999999998303e-05}, {'time': 0.0189355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018944833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018945306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018956833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1527000000000759e-05, 'source_diff': 1.1527000000000759e-05}, {'time': 0.018957306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018966667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018967139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018976653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.018977139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018987319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.018987806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018992319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513000000001127e-06, 'source_diff': 4.513000000001127e-06}, {'time': 0.018992806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019002361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.554999999997899e-06, 'source_diff': 9.554999999997899e-06}, {'time': 0.019002833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019017, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4166999999998958e-05, 'source_diff': 1.4166999999998958e-05}, {'time': 0.019017472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019027333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.019027806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019040208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2401999999998164e-05, 'source_diff': 1.2401999999998164e-05}, {'time': 0.019040681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:05.376" endtime="20201112 12:26:05.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.371" endtime="20201112 12:26:05.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:05.407" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.382" endtime="20201112 12:26:05.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.410" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:05.409" endtime="20201112 12:26:05.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.414" level="INFO">VALUE: {'sourcesource_diff': [0, 4.860000000009301e-07, 1.4693999999999124e-05, 4.720000000013602e-07, 8.708999999999106e-06, 4.720000000013602e-07, 7.332999999998258e-06, 4.860000000009301e-07, 1.1750000000001343e-05, 4.7300000000083386e-07, 4.485999999997992e-06, 4.720000000013602e-07, 1.1846999999998858e-05, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 1.1514000000000663e-05, 4.7199999999789077e-07, 1.0209000000000606e-05, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.860000000009301e-07, 6.3479999999997705e-06, 4.859999999974607e-07, 8.068999999999438e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.860000000009301e-07, 1.0193999999998093e-05, 4.7300000000083386e-07, 5.194000000000032e-06, 4.720000000013602e-07, 1.2027999999997263e-05, 4.720000000013602e-07, 1.2194999999999567e-05, 4.720000000013602e-07, 6.693999999998063e-06, 4.7300000000083386e-07, 1.452700000000029e-05, 4.7300000000083386e-07, 1.3707999999997694e-05, 4.720000000013602e-07, 1.0513999999999663e-05, 4.720000000013602e-07, 1.3027999999998263e-05, 4.860000000009301e-07, 1.0180999999997997e-05, 4.860000000009301e-07, 1.1014000000000163e-05, 4.860000000009301e-07, 1.3847000000000859e-05, 4.859999999974607e-07, 9.195000000000036e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 5.694000000000532e-06, 4.7300000000083386e-07, 9.193999999997093e-06, 4.720000000013602e-07, 9.695000000000537e-06, 4.7199999999789077e-07, 1.2208000000003133e-05, 4.7199999999789077e-07, 4.514000000000601e-06, 4.7300000000083386e-07, 4.193999999999032e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 8.346999999998828e-06, 4.7300000000083386e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 1.1735999999998303e-05, 4.720000000013602e-07, 9.333000000000258e-06, 4.729999999973644e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.860000000009301e-07, 1.0179999999998524e-05, 4.870000000004038e-07, 4.513000000001127e-06, 4.870000000004038e-07, 9.554999999997899e-06, 4.720000000013602e-07, 1.4166999999998958e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 1.2401999999998164e-05, 4.7300000000083386e-07], 'eventtime': [0.018545792, 0.018546278, 0.018560972, 0.018561444, 0.018570153, 0.018570625, 0.018577958, 0.018578444, 0.018590194, 0.018590667, 0.018595153, 0.018595625, 0.018607472, 0.018607944, 0.018617986, 0.018618458, 0.018629972, 0.018630444, 0.018640653, 0.018641125, 0.018648486, 0.018648958, 0.018653472, 0.018653958, 0.018660306, 0.018660792, 0.018668861, 0.018669333, 0.018678639, 0.018679125, 0.018689319, 0.018689792, 0.018694986, 0.018695458, 0.018707486, 0.018707958, 0.018720153, 0.018720625, 0.018727319, 0.018727792, 0.018742319, 0.018742792, 0.0187565, 0.018756972, 0.018767486, 0.018767958, 0.018780986, 0.018781472, 0.018791653, 0.018792139, 0.018803153, 0.018803639, 0.018817486, 0.018817972, 0.018827167, 0.018827639, 0.018837667, 0.018838139, 0.018843833, 0.018844306, 0.0188535, 0.018853972, 0.018863667, 0.018864139, 0.018876347, 0.018876819, 0.018881333, 0.018881806, 0.018886, 0.018886472, 0.0188965, 0.018896972, 0.018905, 0.018905472, 0.018913819, 0.018914292, 0.018922819, 0.018923292, 0.018935028, 0.0189355, 0.018944833, 0.018945306, 0.018956833, 0.018957306, 0.018966667, 0.018967139, 0.018976653, 0.018977139, 0.018987319, 0.018987806, 0.018992319, 0.018992806, 0.019002361, 0.019002833, 0.019017, 0.019017472, 0.019027333, 0.019027806, 0.019040208, 0.019040681], 'diff': [0, 4.860000000009301e-07, 1.4693999999999124e-05, 4.720000000013602e-07, 8.708999999999106e-06, 4.720000000013602e-07, 7.332999999998258e-06, 4.860000000009301e-07, 1.1750000000001343e-05, 4.7300000000083386e-07, 4.485999999997992e-06, 4.720000000013602e-07, 1.1846999999998858e-05, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 1.1514000000000663e-05, 4.7199999999789077e-07, 1.0209000000000606e-05, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.860000000009301e-07, 6.3479999999997705e-06, 4.859999999974607e-07, 8.068999999999438e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.860000000009301e-07, 1.0193999999998093e-05, 4.7300000000083386e-07, 5.194000000000032e-06, 4.720000000013602e-07, 1.2027999999997263e-05, 4.720000000013602e-07, 1.2194999999999567e-05, 4.720000000013602e-07, 6.693999999998063e-06, 4.7300000000083386e-07, 1.452700000000029e-05, 4.7300000000083386e-07, 1.3707999999997694e-05, 4.720000000013602e-07, 1.0513999999999663e-05, 4.720000000013602e-07, 1.3027999999998263e-05, 4.860000000009301e-07, 1.0180999999997997e-05, 4.860000000009301e-07, 1.1014000000000163e-05, 4.860000000009301e-07, 1.3847000000000859e-05, 4.859999999974607e-07, 9.195000000000036e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 5.694000000000532e-06, 4.7300000000083386e-07, 9.193999999997093e-06, 4.720000000013602e-07, 9.695000000000537e-06, 4.7199999999789077e-07, 1.2208000000003133e-05, 4.7199999999789077e-07, 4.514000000000601e-06, 4.7300000000083386e-07, 4.193999999999032e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 8.346999999998828e-06, 4.7300000000083386e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 1.1735999999998303e-05, 4.720000000013602e-07, 9.333000000000258e-06, 4.729999999973644e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.860000000009301e-07, 1.0179999999998524e-05, 4.870000000004038e-07, 4.513000000001127e-06, 4.870000000004038e-07, 9.554999999997899e-06, 4.720000000013602e-07, 1.4166999999998958e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 1.2401999999998164e-05, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:05.412" endtime="20201112 12:26:05.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.407" endtime="20201112 12:26:05.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:05.420" level="INFO">${RESULT} = [{'time': 0.018546278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018561444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:05.417" endtime="20201112 12:26:05.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.433" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.421" endtime="20201112 12:26:05.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.438" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:05.437" endtime="20201112 12:26:05.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.440" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 12:26:05.439" endtime="20201112 12:26:05.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.434" endtime="20201112 12:26:05.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.443" endtime="20201112 12:26:05.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.446" endtime="20201112 12:26:05.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.445" endtime="20201112 12:26:05.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.442" endtime="20201112 12:26:05.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.038" endtime="20201112 12:26:05.467"></status>
</kw>
<msg timestamp="20201112 12:26:05.467" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.475" endtime="20201112 12:26:05.485"></status>
</kw>
<msg timestamp="20201112 12:26:05.486" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.473" endtime="20201112 12:26:05.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.488" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.487" endtime="20201112 12:26:05.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.489" endtime="20201112 12:26:05.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.471" endtime="20201112 12:26:05.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.469" endtime="20201112 12:26:05.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.498" endtime="20201112 12:26:05.785"></status>
</kw>
<msg timestamp="20201112 12:26:05.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018379, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018379472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:05.496" endtime="20201112 12:26:05.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018379, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018379472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:05.789" endtime="20201112 12:26:05.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.797" endtime="20201112 12:26:05.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.494" endtime="20201112 12:26:05.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.492" endtime="20201112 12:26:05.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.804" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:05.803" endtime="20201112 12:26:05.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.809" level="INFO">VALUE: [{'time': 0.018379, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018379472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018387653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.018388125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018397347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.221999999999703e-06, 'source_diff': 9.221999999999703e-06}, {'time': 0.018397819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018412514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4695000000002068e-05, 'source_diff': 1.4695000000002068e-05}, {'time': 0.018412986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018421, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.018421472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018429667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.018430139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018434819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.018435306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018446, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694000000002063e-05, 'source_diff': 1.0694000000002063e-05}, {'time': 0.018446472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018460847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.018461319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018472847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018473319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0184825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.018482972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018494875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.018495347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018502833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.018503306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018517847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.454099999999986e-05, 'source_diff': 1.454099999999986e-05}, {'time': 0.018518319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0185245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018524986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018530167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018530653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018536181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.018536653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018542681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018543153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018549903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.018550375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018557667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.018558153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018566833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.018567319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018581181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861999999999902e-05, 'source_diff': 1.3861999999999902e-05}, {'time': 0.018581653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018586347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018586819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018595361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.018595833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018609347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.018609819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018621361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541999999999802e-05, 'source_diff': 1.1541999999999802e-05}, {'time': 0.018621833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018634042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2208999999999137e-05, 'source_diff': 1.2208999999999137e-05}, {'time': 0.018634514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018642028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.0186425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018647194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018647667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018661903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4236000000000804e-05, 'source_diff': 1.4236000000000804e-05}, {'time': 0.018662375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018676181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3806000000001623e-05, 'source_diff': 1.3806000000001623e-05}, {'time': 0.018676667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018687056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.018687528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018694528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.018695, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018700861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018701333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018707028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.0187075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018717861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.018718333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018731861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.018732333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018737861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018738333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018750694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018751181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018765042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018765514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018778361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.018778847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018789194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0346999999997358e-05, 'source_diff': 1.0346999999997358e-05}, {'time': 0.018789681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018801375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.018801847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018808375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.018808847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018818375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527999999998232e-06, 'source_diff': 9.527999999998232e-06}, {'time': 0.018818847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018833042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4195000000001567e-05, 'source_diff': 1.4195000000001567e-05}, {'time': 0.018833514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018841875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.018842347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018853444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1097000000001578e-05, 'source_diff': 1.1097000000001578e-05}, {'time': 0.018853917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018858708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.790999999997048e-06, 'source_diff': 4.790999999997048e-06}, {'time': 0.018859181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018873236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4055000000002399e-05, 'source_diff': 1.4055000000002399e-05}, {'time': 0.018873708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:05.805" endtime="20201112 12:26:05.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.801" endtime="20201112 12:26:05.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:05.836" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.811" endtime="20201112 12:26:05.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.839" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:05.838" endtime="20201112 12:26:05.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.843" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 8.180999999999466e-06, 4.720000000013602e-07, 9.221999999999703e-06, 4.7199999999789077e-07, 1.4695000000002068e-05, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 4.679999999999962e-06, 4.869999999969343e-07, 1.0694000000002063e-05, 4.7199999999789077e-07, 1.4375000000000498e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 1.1903000000000608e-05, 4.7199999999789077e-07, 7.486000000000992e-06, 4.7300000000083386e-07, 1.454099999999986e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.860000000009301e-07, 5.180999999999936e-06, 4.860000000009301e-07, 5.527999999997701e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 6.749999999999812e-06, 4.720000000013602e-07, 7.2919999999990215e-06, 4.860000000009301e-07, 8.680000000000493e-06, 4.859999999974607e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 4.693999999999532e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999789077e-07, 1.3513999999999193e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 1.4236000000000804e-05, 4.7199999999789077e-07, 1.3806000000001623e-05, 4.860000000009301e-07, 1.0388999999999537e-05, 4.7199999999789077e-07, 7.000000000000062e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 1.2360999999998928e-05, 4.870000000004038e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.0346999999997358e-05, 4.870000000004038e-07, 1.1693999999999594e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 1.4195000000001567e-05, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 1.1097000000001578e-05, 4.7300000000083386e-07, 4.790999999997048e-06, 4.7300000000083386e-07, 1.4055000000002399e-05, 4.7199999999789077e-07], 'eventtime': [0.018379, 0.018379472, 0.018387653, 0.018388125, 0.018397347, 0.018397819, 0.018412514, 0.018412986, 0.018421, 0.018421472, 0.018429667, 0.018430139, 0.018434819, 0.018435306, 0.018446, 0.018446472, 0.018460847, 0.018461319, 0.018472847, 0.018473319, 0.0184825, 0.018482972, 0.018494875, 0.018495347, 0.018502833, 0.018503306, 0.018517847, 0.018518319, 0.0185245, 0.018524986, 0.018530167, 0.018530653, 0.018536181, 0.018536653, 0.018542681, 0.018543153, 0.018549903, 0.018550375, 0.018557667, 0.018558153, 0.018566833, 0.018567319, 0.018581181, 0.018581653, 0.018586347, 0.018586819, 0.018595361, 0.018595833, 0.018609347, 0.018609819, 0.018621361, 0.018621833, 0.018634042, 0.018634514, 0.018642028, 0.0186425, 0.018647194, 0.018647667, 0.018661903, 0.018662375, 0.018676181, 0.018676667, 0.018687056, 0.018687528, 0.018694528, 0.018695, 0.018700861, 0.018701333, 0.018707028, 0.0187075, 0.018717861, 0.018718333, 0.018731861, 0.018732333, 0.018737861, 0.018738333, 0.018750694, 0.018751181, 0.018765042, 0.018765514, 0.018778361, 0.018778847, 0.018789194, 0.018789681, 0.018801375, 0.018801847, 0.018808375, 0.018808847, 0.018818375, 0.018818847, 0.018833042, 0.018833514, 0.018841875, 0.018842347, 0.018853444, 0.018853917, 0.018858708, 0.018859181, 0.018873236, 0.018873708], 'diff': [0, 4.720000000013602e-07, 8.180999999999466e-06, 4.720000000013602e-07, 9.221999999999703e-06, 4.7199999999789077e-07, 1.4695000000002068e-05, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 4.679999999999962e-06, 4.869999999969343e-07, 1.0694000000002063e-05, 4.7199999999789077e-07, 1.4375000000000498e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 1.1903000000000608e-05, 4.7199999999789077e-07, 7.486000000000992e-06, 4.7300000000083386e-07, 1.454099999999986e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.860000000009301e-07, 5.180999999999936e-06, 4.860000000009301e-07, 5.527999999997701e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 6.749999999999812e-06, 4.720000000013602e-07, 7.2919999999990215e-06, 4.860000000009301e-07, 8.680000000000493e-06, 4.859999999974607e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 4.693999999999532e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999789077e-07, 1.3513999999999193e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 1.4236000000000804e-05, 4.7199999999789077e-07, 1.3806000000001623e-05, 4.860000000009301e-07, 1.0388999999999537e-05, 4.7199999999789077e-07, 7.000000000000062e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 1.2360999999998928e-05, 4.870000000004038e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.0346999999997358e-05, 4.870000000004038e-07, 1.1693999999999594e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 1.4195000000001567e-05, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 1.1097000000001578e-05, 4.7300000000083386e-07, 4.790999999997048e-06, 4.7300000000083386e-07, 1.4055000000002399e-05, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:05.840" endtime="20201112 12:26:05.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.837" endtime="20201112 12:26:05.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:05.849" level="INFO">${RESULT} = [{'time': 0.018379472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018388125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:05.846" endtime="20201112 12:26:05.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.863" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.850" endtime="20201112 12:26:05.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.867" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:05.866" endtime="20201112 12:26:05.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.869" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.869999999969343e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 12:26:05.868" endtime="20201112 12:26:05.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.864" endtime="20201112 12:26:05.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.872" endtime="20201112 12:26:05.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.876" endtime="20201112 12:26:05.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.874" endtime="20201112 12:26:05.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.871" endtime="20201112 12:26:05.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.468" endtime="20201112 12:26:05.896"></status>
</kw>
<msg timestamp="20201112 12:26:05.897" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.905" endtime="20201112 12:26:05.915"></status>
</kw>
<msg timestamp="20201112 12:26:05.916" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.903" endtime="20201112 12:26:05.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.918" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.917" endtime="20201112 12:26:05.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.919" endtime="20201112 12:26:05.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.900" endtime="20201112 12:26:05.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.898" endtime="20201112 12:26:05.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.928" endtime="20201112 12:26:06.222"></status>
</kw>
<msg timestamp="20201112 12:26:06.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019087, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019087472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:05.926" endtime="20201112 12:26:06.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019087, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019087472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:06.232" endtime="20201112 12:26:06.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.252" endtime="20201112 12:26:06.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.924" endtime="20201112 12:26:06.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.922" endtime="20201112 12:26:06.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.266" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:06.264" endtime="20201112 12:26:06.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.278" level="INFO">VALUE: [{'time': 0.019087, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019087472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019091639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.019092111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019106806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4695000000002068e-05, 'source_diff': 1.4695000000002068e-05}, {'time': 0.019107278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019114139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.019114611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019126472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1860999999998428e-05, 'source_diff': 1.1860999999998428e-05}, {'time': 0.019126944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019136972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.019137444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019146139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.019146611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019159806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.019160278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019174319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.404099999999936e-05, 'source_diff': 1.404099999999936e-05}, {'time': 0.019174792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019188014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3222000000000234e-05, 'source_diff': 1.3222000000000234e-05}, {'time': 0.019188486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019193972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.019194458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019200639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.019201125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019210694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.019211167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019216972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.019217458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019229486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.019229958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019237306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.348000000000771e-06, 'source_diff': 7.348000000000771e-06}, {'time': 0.019237792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.019250472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019262667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194999999999567e-05, 'source_diff': 1.2194999999999567e-05}, {'time': 0.019263139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0192675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.019267972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019279056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1083999999998012e-05, 'source_diff': 1.1083999999998012e-05}, {'time': 0.019279528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019290986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.019291458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019297153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.019297625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019303167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.019303639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019309333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.019309806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019317819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.013000000001158e-06, 'source_diff': 8.013000000001158e-06}, {'time': 0.019318306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019326653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.019327139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019333986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.019334472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019338708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.019339181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019351806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2624999999998748e-05, 'source_diff': 1.2624999999998748e-05}, {'time': 0.019352278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019357486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.019357958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019371806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847999999996863e-05, 'source_diff': 1.3847999999996863e-05}, {'time': 0.019372292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019385139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.019385625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019400319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.019400792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019413819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.302699999999879e-05, 'source_diff': 1.302699999999879e-05}, {'time': 0.019414292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019428486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4193999999998624e-05, 'source_diff': 1.4193999999998624e-05}, {'time': 0.019428958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019434486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.019434958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019440153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.195000000002975e-06, 'source_diff': 5.195000000002975e-06}, {'time': 0.019440625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019450986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.019451458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019456653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.019457125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019462153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.019462625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019468986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.019469458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019478819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361000000002867e-06, 'source_diff': 9.361000000002867e-06}, {'time': 0.019479292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019492667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3375000000002968e-05, 'source_diff': 1.3375000000002968e-05}, {'time': 0.019493139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019501319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.019501806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019507319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.512999999998658e-06, 'source_diff': 5.512999999998658e-06}, {'time': 0.019507806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019516986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.019517472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019524819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.019525306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019536319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1013000000000689e-05, 'source_diff': 1.1013000000000689e-05}, {'time': 0.019536806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.0195465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.019546972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019554375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.019554847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:06.269" endtime="20201112 12:26:06.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.259" endtime="20201112 12:26:06.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:06.307" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.282" endtime="20201112 12:26:06.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.311" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:06.310" endtime="20201112 12:26:06.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.315" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.720000000013602e-07, 4.166999999999366e-06, 4.7199999999789077e-07, 1.4695000000002068e-05, 4.7199999999789077e-07, 6.861000000000367e-06, 4.720000000013602e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 8.694999999999536e-06, 4.720000000013602e-07, 1.3195000000000567e-05, 4.7199999999789077e-07, 1.404099999999936e-05, 4.7300000000083386e-07, 1.3222000000000234e-05, 4.720000000013602e-07, 5.485999999998992e-06, 4.860000000009301e-07, 6.180999999997466e-06, 4.860000000009301e-07, 9.569000000000938e-06, 4.7300000000083386e-07, 5.804999999997618e-06, 4.860000000009301e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 7.348000000000771e-06, 4.860000000009301e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 1.2194999999999567e-05, 4.7199999999789077e-07, 4.361000000001336e-06, 4.720000000013602e-07, 1.1083999999998012e-05, 4.720000000013602e-07, 1.1457999999998913e-05, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 5.542000000000741e-06, 4.720000000013602e-07, 5.694000000000532e-06, 4.729999999973644e-07, 8.013000000001158e-06, 4.870000000004038e-07, 8.346999999998828e-06, 4.860000000009301e-07, 6.847000000000797e-06, 4.859999999974607e-07, 4.236000000001211e-06, 4.7300000000083386e-07, 1.2624999999998748e-05, 4.720000000013602e-07, 5.207999999999602e-06, 4.720000000013602e-07, 1.3847999999996863e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.4693999999999124e-05, 4.7300000000083386e-07, 1.302699999999879e-05, 4.7300000000083386e-07, 1.4193999999998624e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 5.195000000002975e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.720000000013602e-07, 6.360999999999867e-06, 4.7199999999789077e-07, 9.361000000002867e-06, 4.729999999973644e-07, 1.3375000000002968e-05, 4.7199999999789077e-07, 8.179999999999993e-06, 4.870000000004038e-07, 5.512999999998658e-06, 4.870000000004038e-07, 9.180000000000993e-06, 4.860000000009301e-07, 7.3469999999978275e-06, 4.870000000004038e-07, 1.1013000000000689e-05, 4.870000000004038e-07, 9.694000000001063e-06, 4.7199999999789077e-07, 7.402999999999577e-06, 4.720000000013602e-07], 'eventtime': [0.019087, 0.019087472, 0.019091639, 0.019092111, 0.019106806, 0.019107278, 0.019114139, 0.019114611, 0.019126472, 0.019126944, 0.019136972, 0.019137444, 0.019146139, 0.019146611, 0.019159806, 0.019160278, 0.019174319, 0.019174792, 0.019188014, 0.019188486, 0.019193972, 0.019194458, 0.019200639, 0.019201125, 0.019210694, 0.019211167, 0.019216972, 0.019217458, 0.019229486, 0.019229958, 0.019237306, 0.019237792, 0.01925, 0.019250472, 0.019262667, 0.019263139, 0.0192675, 0.019267972, 0.019279056, 0.019279528, 0.019290986, 0.019291458, 0.019297153, 0.019297625, 0.019303167, 0.019303639, 0.019309333, 0.019309806, 0.019317819, 0.019318306, 0.019326653, 0.019327139, 0.019333986, 0.019334472, 0.019338708, 0.019339181, 0.019351806, 0.019352278, 0.019357486, 0.019357958, 0.019371806, 0.019372292, 0.019385139, 0.019385625, 0.019400319, 0.019400792, 0.019413819, 0.019414292, 0.019428486, 0.019428958, 0.019434486, 0.019434958, 0.019440153, 0.019440625, 0.019450986, 0.019451458, 0.019456653, 0.019457125, 0.019462153, 0.019462625, 0.019468986, 0.019469458, 0.019478819, 0.019479292, 0.019492667, 0.019493139, 0.019501319, 0.019501806, 0.019507319, 0.019507806, 0.019516986, 0.019517472, 0.019524819, 0.019525306, 0.019536319, 0.019536806, 0.0195465, 0.019546972, 0.019554375, 0.019554847], 'diff': [0, 4.720000000013602e-07, 4.166999999999366e-06, 4.7199999999789077e-07, 1.4695000000002068e-05, 4.7199999999789077e-07, 6.861000000000367e-06, 4.720000000013602e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 8.694999999999536e-06, 4.720000000013602e-07, 1.3195000000000567e-05, 4.7199999999789077e-07, 1.404099999999936e-05, 4.7300000000083386e-07, 1.3222000000000234e-05, 4.720000000013602e-07, 5.485999999998992e-06, 4.860000000009301e-07, 6.180999999997466e-06, 4.860000000009301e-07, 9.569000000000938e-06, 4.7300000000083386e-07, 5.804999999997618e-06, 4.860000000009301e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 7.348000000000771e-06, 4.860000000009301e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 1.2194999999999567e-05, 4.7199999999789077e-07, 4.361000000001336e-06, 4.720000000013602e-07, 1.1083999999998012e-05, 4.720000000013602e-07, 1.1457999999998913e-05, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 5.542000000000741e-06, 4.720000000013602e-07, 5.694000000000532e-06, 4.729999999973644e-07, 8.013000000001158e-06, 4.870000000004038e-07, 8.346999999998828e-06, 4.860000000009301e-07, 6.847000000000797e-06, 4.859999999974607e-07, 4.236000000001211e-06, 4.7300000000083386e-07, 1.2624999999998748e-05, 4.720000000013602e-07, 5.207999999999602e-06, 4.720000000013602e-07, 1.3847999999996863e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.4693999999999124e-05, 4.7300000000083386e-07, 1.302699999999879e-05, 4.7300000000083386e-07, 1.4193999999998624e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 5.195000000002975e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.720000000013602e-07, 6.360999999999867e-06, 4.7199999999789077e-07, 9.361000000002867e-06, 4.729999999973644e-07, 1.3375000000002968e-05, 4.7199999999789077e-07, 8.179999999999993e-06, 4.870000000004038e-07, 5.512999999998658e-06, 4.870000000004038e-07, 9.180000000000993e-06, 4.860000000009301e-07, 7.3469999999978275e-06, 4.870000000004038e-07, 1.1013000000000689e-05, 4.870000000004038e-07, 9.694000000001063e-06, 4.7199999999789077e-07, 7.402999999999577e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:06.312" endtime="20201112 12:26:06.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.308" endtime="20201112 12:26:06.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.321" level="INFO">${RESULT} = [{'time': 0.019087472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019092111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:06.317" endtime="20201112 12:26:06.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.335" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.322" endtime="20201112 12:26:06.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.340" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:06.338" endtime="20201112 12:26:06.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.342" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:26:06.341" endtime="20201112 12:26:06.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.336" endtime="20201112 12:26:06.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.345" endtime="20201112 12:26:06.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.349" endtime="20201112 12:26:06.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.347" endtime="20201112 12:26:06.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.344" endtime="20201112 12:26:06.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.897" endtime="20201112 12:26:06.370"></status>
</kw>
<msg timestamp="20201112 12:26:06.370" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.378" endtime="20201112 12:26:06.389"></status>
</kw>
<msg timestamp="20201112 12:26:06.389" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.376" endtime="20201112 12:26:06.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.392" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.391" endtime="20201112 12:26:06.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.393" endtime="20201112 12:26:06.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.373" endtime="20201112 12:26:06.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.372" endtime="20201112 12:26:06.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.402" endtime="20201112 12:26:06.692"></status>
</kw>
<msg timestamp="20201112 12:26:06.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018717069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018717556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.401" endtime="20201112 12:26:06.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018717069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018717556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.696" endtime="20201112 12:26:06.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.705" endtime="20201112 12:26:06.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.398" endtime="20201112 12:26:06.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.396" endtime="20201112 12:26:06.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.712" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:06.711" endtime="20201112 12:26:06.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.718" level="INFO">VALUE: [{'time': 0.018717069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018717556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018723236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.018723722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018732236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.513999999997662e-06, 'source_diff': 8.513999999997662e-06}, {'time': 0.018732722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018740569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018741056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018749931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.018750403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01875575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.018756222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01876775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018768222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018775583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.018776056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018785764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.018786236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018796264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.018796736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018811431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4694999999998598e-05, 'source_diff': 1.4694999999998598e-05}, {'time': 0.018811903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018817083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1799999999969926e-06, 'source_diff': 5.1799999999969926e-06}, {'time': 0.018817556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01882775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194000000001563e-05, 'source_diff': 1.0194000000001563e-05}, {'time': 0.018828236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018833583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018834069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018843778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.01884425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018848403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018848875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018856236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.018856708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018863236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.018863708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018872083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.018872556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018881958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402000000002103e-06, 'source_diff': 9.402000000002103e-06}, {'time': 0.018882431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018894417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1985999999998553e-05, 'source_diff': 1.1985999999998553e-05}, {'time': 0.018894889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018908403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.018908889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01891375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.018914222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018927083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.018927556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01893825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.018938722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01895125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.018951722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018957431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.018957903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018964583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.679999999998493e-06, 'source_diff': 6.679999999998493e-06}, {'time': 0.018965056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018971264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.018971736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018976417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.018976889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018985417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.018985889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018999917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4028000000002733e-05, 'source_diff': 1.4028000000002733e-05}, {'time': 0.019000403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019007431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.028000000002671e-06, 'source_diff': 7.028000000002671e-06}, {'time': 0.019007903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01901425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.347000000000297e-06, 'source_diff': 6.347000000000297e-06}, {'time': 0.019014736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01902625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.019026736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019039083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.019039569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019046792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2230000000006456e-06, 'source_diff': 7.2230000000006456e-06}, {'time': 0.019047264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019055097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.019055569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019062931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3620000000003405e-06, 'source_diff': 7.3620000000003405e-06}, {'time': 0.019063403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019077778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.01907825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019091111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.019091583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019102778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1195000000002037e-05, 'source_diff': 1.1195000000002037e-05}, {'time': 0.01910325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019107417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.167000000002835e-06, 'source_diff': 4.167000000002835e-06}, {'time': 0.019107889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019112069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.019112542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019123889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1347000000001828e-05, 'source_diff': 1.1347000000001828e-05}, {'time': 0.019124375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019137722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.019138208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01915125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3042000000001303e-05, 'source_diff': 1.3042000000001303e-05}, {'time': 0.019151722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019162556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.019163042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019169403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.019169875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019179917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.019180389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:06.713" endtime="20201112 12:26:06.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.708" endtime="20201112 12:26:06.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:06.745" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.721" endtime="20201112 12:26:06.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.749" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:06.748" endtime="20201112 12:26:06.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.754" level="INFO">VALUE: {'sourcesource_diff': [0, 4.870000000004038e-07, 5.680000000000962e-06, 4.860000000009301e-07, 8.513999999997662e-06, 4.860000000009301e-07, 7.846999999998328e-06, 4.870000000004038e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 5.347000000002766e-06, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 9.708000000000633e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 5.1799999999969926e-06, 4.7300000000083386e-07, 1.0194000000001563e-05, 4.860000000009301e-07, 5.346999999999297e-06, 4.859999999974607e-07, 9.709000000000106e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 8.375000000001437e-06, 4.729999999973644e-07, 9.402000000002103e-06, 4.7300000000083386e-07, 1.1985999999998553e-05, 4.720000000013602e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 4.860999999998367e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 1.2527999999997763e-05, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 6.679999999998493e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.7199999999789077e-07, 4.680999999999436e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 1.4028000000002733e-05, 4.859999999974607e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 6.347000000000297e-06, 4.860000000009301e-07, 1.1514000000000663e-05, 4.859999999974607e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 7.2230000000006456e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 7.3620000000003405e-06, 4.7199999999789077e-07, 1.4375000000000498e-05, 4.720000000013602e-07, 1.2860999999999428e-05, 4.7199999999789077e-07, 1.1195000000002037e-05, 4.7199999999789077e-07, 4.167000000002835e-06, 4.7199999999789077e-07, 4.179999999999462e-06, 4.7300000000083386e-07, 1.1347000000001828e-05, 4.859999999974607e-07, 1.3347000000000359e-05, 4.860000000009301e-07, 1.3042000000001303e-05, 4.7199999999789077e-07, 1.0834000000001232e-05, 4.860000000009301e-07, 6.360999999999867e-06, 4.7199999999789077e-07, 1.0042000000001772e-05, 4.7199999999789077e-07], 'eventtime': [0.018717069, 0.018717556, 0.018723236, 0.018723722, 0.018732236, 0.018732722, 0.018740569, 0.018741056, 0.018749931, 0.018750403, 0.01875575, 0.018756222, 0.01876775, 0.018768222, 0.018775583, 0.018776056, 0.018785764, 0.018786236, 0.018796264, 0.018796736, 0.018811431, 0.018811903, 0.018817083, 0.018817556, 0.01882775, 0.018828236, 0.018833583, 0.018834069, 0.018843778, 0.01884425, 0.018848403, 0.018848875, 0.018856236, 0.018856708, 0.018863236, 0.018863708, 0.018872083, 0.018872556, 0.018881958, 0.018882431, 0.018894417, 0.018894889, 0.018908403, 0.018908889, 0.01891375, 0.018914222, 0.018927083, 0.018927556, 0.01893825, 0.018938722, 0.01895125, 0.018951722, 0.018957431, 0.018957903, 0.018964583, 0.018965056, 0.018971264, 0.018971736, 0.018976417, 0.018976889, 0.018985417, 0.018985889, 0.018999917, 0.019000403, 0.019007431, 0.019007903, 0.01901425, 0.019014736, 0.01902625, 0.019026736, 0.019039083, 0.019039569, 0.019046792, 0.019047264, 0.019055097, 0.019055569, 0.019062931, 0.019063403, 0.019077778, 0.01907825, 0.019091111, 0.019091583, 0.019102778, 0.01910325, 0.019107417, 0.019107889, 0.019112069, 0.019112542, 0.019123889, 0.019124375, 0.019137722, 0.019138208, 0.01915125, 0.019151722, 0.019162556, 0.019163042, 0.019169403, 0.019169875, 0.019179917, 0.019180389], 'diff': [0, 4.870000000004038e-07, 5.680000000000962e-06, 4.860000000009301e-07, 8.513999999997662e-06, 4.860000000009301e-07, 7.846999999998328e-06, 4.870000000004038e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 5.347000000002766e-06, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 9.708000000000633e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 5.1799999999969926e-06, 4.7300000000083386e-07, 1.0194000000001563e-05, 4.860000000009301e-07, 5.346999999999297e-06, 4.859999999974607e-07, 9.709000000000106e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 8.375000000001437e-06, 4.729999999973644e-07, 9.402000000002103e-06, 4.7300000000083386e-07, 1.1985999999998553e-05, 4.720000000013602e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 4.860999999998367e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 1.2527999999997763e-05, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 6.679999999998493e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.7199999999789077e-07, 4.680999999999436e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 1.4028000000002733e-05, 4.859999999974607e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 6.347000000000297e-06, 4.860000000009301e-07, 1.1514000000000663e-05, 4.859999999974607e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 7.2230000000006456e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 7.3620000000003405e-06, 4.7199999999789077e-07, 1.4375000000000498e-05, 4.720000000013602e-07, 1.2860999999999428e-05, 4.7199999999789077e-07, 1.1195000000002037e-05, 4.7199999999789077e-07, 4.167000000002835e-06, 4.7199999999789077e-07, 4.179999999999462e-06, 4.7300000000083386e-07, 1.1347000000001828e-05, 4.859999999974607e-07, 1.3347000000000359e-05, 4.860000000009301e-07, 1.3042000000001303e-05, 4.7199999999789077e-07, 1.0834000000001232e-05, 4.860000000009301e-07, 6.360999999999867e-06, 4.7199999999789077e-07, 1.0042000000001772e-05, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:06.750" endtime="20201112 12:26:06.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.746" endtime="20201112 12:26:06.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.759" level="INFO">${RESULT} = [{'time': 0.018717556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018723722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:06.756" endtime="20201112 12:26:06.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.773" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.760" endtime="20201112 12:26:06.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.778" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:06.777" endtime="20201112 12:26:06.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.780" level="INFO">VALUE: [4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 12:26:06.779" endtime="20201112 12:26:06.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.774" endtime="20201112 12:26:06.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.784" endtime="20201112 12:26:06.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.787" endtime="20201112 12:26:06.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.786" endtime="20201112 12:26:06.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.782" endtime="20201112 12:26:06.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.370" endtime="20201112 12:26:06.808"></status>
</kw>
<msg timestamp="20201112 12:26:06.808" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.817" endtime="20201112 12:26:06.827"></status>
</kw>
<msg timestamp="20201112 12:26:06.828" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.815" endtime="20201112 12:26:06.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.830" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.829" endtime="20201112 12:26:06.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.832" endtime="20201112 12:26:06.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.812" endtime="20201112 12:26:06.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.810" endtime="20201112 12:26:06.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.841" endtime="20201112 12:26:07.126"></status>
</kw>
<msg timestamp="20201112 12:26:07.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.839" endtime="20201112 12:26:07.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.130" endtime="20201112 12:26:07.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.139" endtime="20201112 12:26:07.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.837" endtime="20201112 12:26:07.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.835" endtime="20201112 12:26:07.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.146" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:07.145" endtime="20201112 12:26:07.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.151" level="INFO">VALUE: [{'time': 0.019797819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019811486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.019811958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019822819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0860999999997428e-05, 'source_diff': 1.0860999999997428e-05}, {'time': 0.019823292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019829514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.019829986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019835819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.019836292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019844319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027000000000728e-06, 'source_diff': 8.027000000000728e-06}, {'time': 0.019844792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019852486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.019852958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019866333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3374999999999498e-05, 'source_diff': 1.3374999999999498e-05}, {'time': 0.019866806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019880319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.351299999999972e-05, 'source_diff': 1.351299999999972e-05}, {'time': 0.019880806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019886319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.512999999998658e-06, 'source_diff': 5.512999999998658e-06}, {'time': 0.019886806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019894333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.019894806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019904903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.019905375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019914167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.019914639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019922167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019922639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019927333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.019927806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019933333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527000000001697e-06, 'source_diff': 5.527000000001697e-06}, {'time': 0.019933806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019941167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.019941639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019953667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.019954139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019966833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2694000000000594e-05, 'source_diff': 1.2694000000000594e-05}, {'time': 0.019967306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01998, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2694000000000594e-05, 'source_diff': 1.2694000000000594e-05}, {'time': 0.019980486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019986681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.019987153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0199945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.019994986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020001, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.020001486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020009, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.020009486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020020181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0695000000001537e-05, 'source_diff': 1.0695000000001537e-05}, {'time': 0.020020653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020028889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.020029361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020042681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3320000000000692e-05, 'source_diff': 1.3320000000000692e-05}, {'time': 0.020043153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020048514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.020048986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020063681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4694999999998598e-05, 'source_diff': 1.4694999999998598e-05}, {'time': 0.020064153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020077514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.020077986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020086028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.0200865, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020094681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.020095167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020107694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.252699999999829e-05, 'source_diff': 1.252699999999829e-05}, {'time': 0.020108167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020112514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.020113, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020120514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.020121, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020129181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.020129667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020133833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.020134306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020146847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.254099999999786e-05, 'source_diff': 1.254099999999786e-05}, {'time': 0.020147319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020158847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.020159319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020164833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.020165319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0201775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180999999999997e-05, 'source_diff': 1.2180999999999997e-05}, {'time': 0.020177986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020190833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.020191319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020202181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0862000000000371e-05, 'source_diff': 1.0862000000000371e-05}, {'time': 0.020202653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020207403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.020207875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020218694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0818999999998719e-05, 'source_diff': 1.0818999999998719e-05}, {'time': 0.020219167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020230417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.020230889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020245042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4153000000002858e-05, 'source_diff': 1.4153000000002858e-05}, {'time': 0.020245514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020254375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.020254847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020262861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.020263333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020272347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.020272833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:07.147" endtime="20201112 12:26:07.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.143" endtime="20201112 12:26:07.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:07.178" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:07.154" endtime="20201112 12:26:07.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.182" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:07.181" endtime="20201112 12:26:07.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.187" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.729999999973644e-07, 1.3194000000001094e-05, 4.720000000013602e-07, 1.0860999999997428e-05, 4.7300000000083386e-07, 6.222000000000172e-06, 4.720000000013602e-07, 5.833000000000227e-06, 4.729999999973644e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 7.693999999999063e-06, 4.720000000013602e-07, 1.3374999999999498e-05, 4.7300000000083386e-07, 1.351299999999972e-05, 4.870000000004038e-07, 5.512999999998658e-06, 4.870000000004038e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 1.0097000000000578e-05, 4.7199999999789077e-07, 8.792000000000522e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 5.527000000001697e-06, 4.729999999973644e-07, 7.361000000000867e-06, 4.720000000013602e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 1.2694000000000594e-05, 4.7300000000083386e-07, 1.2694000000000594e-05, 4.859999999974607e-07, 6.195000000000506e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.860000000009301e-07, 6.014000000002101e-06, 4.859999999974607e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.0695000000001537e-05, 4.7199999999789077e-07, 8.236000000001742e-06, 4.7199999999789077e-07, 1.3320000000000692e-05, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 1.3360999999999928e-05, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.860000000009301e-07, 1.252699999999829e-05, 4.7300000000083386e-07, 4.347000000001766e-06, 4.859999999974607e-07, 7.514000000000132e-06, 4.860000000009301e-07, 8.180999999999466e-06, 4.860000000009301e-07, 4.165999999999892e-06, 4.7300000000083386e-07, 1.254099999999786e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 5.514000000001601e-06, 4.860000000009301e-07, 1.2180999999999997e-05, 4.859999999974607e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.0862000000000371e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 1.0818999999998719e-05, 4.7300000000083386e-07, 1.1250000000000843e-05, 4.7199999999789077e-07, 1.4153000000002858e-05, 4.7199999999789077e-07, 8.861000000002367e-06, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 9.013999999998162e-06, 4.860000000009301e-07], 'eventtime': [0.019797819, 0.019798292, 0.019811486, 0.019811958, 0.019822819, 0.019823292, 0.019829514, 0.019829986, 0.019835819, 0.019836292, 0.019844319, 0.019844792, 0.019852486, 0.019852958, 0.019866333, 0.019866806, 0.019880319, 0.019880806, 0.019886319, 0.019886806, 0.019894333, 0.019894806, 0.019904903, 0.019905375, 0.019914167, 0.019914639, 0.019922167, 0.019922639, 0.019927333, 0.019927806, 0.019933333, 0.019933806, 0.019941167, 0.019941639, 0.019953667, 0.019954139, 0.019966833, 0.019967306, 0.01998, 0.019980486, 0.019986681, 0.019987153, 0.0199945, 0.019994986, 0.020001, 0.020001486, 0.020009, 0.020009486, 0.020020181, 0.020020653, 0.020028889, 0.020029361, 0.020042681, 0.020043153, 0.020048514, 0.020048986, 0.020063681, 0.020064153, 0.020077514, 0.020077986, 0.020086028, 0.0200865, 0.020094681, 0.020095167, 0.020107694, 0.020108167, 0.020112514, 0.020113, 0.020120514, 0.020121, 0.020129181, 0.020129667, 0.020133833, 0.020134306, 0.020146847, 0.020147319, 0.020158847, 0.020159319, 0.020164833, 0.020165319, 0.0201775, 0.020177986, 0.020190833, 0.020191319, 0.020202181, 0.020202653, 0.020207403, 0.020207875, 0.020218694, 0.020219167, 0.020230417, 0.020230889, 0.020245042, 0.020245514, 0.020254375, 0.020254847, 0.020262861, 0.020263333, 0.020272347, 0.020272833], 'diff': [0, 4.729999999973644e-07, 1.3194000000001094e-05, 4.720000000013602e-07, 1.0860999999997428e-05, 4.7300000000083386e-07, 6.222000000000172e-06, 4.720000000013602e-07, 5.833000000000227e-06, 4.729999999973644e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 7.693999999999063e-06, 4.720000000013602e-07, 1.3374999999999498e-05, 4.7300000000083386e-07, 1.351299999999972e-05, 4.870000000004038e-07, 5.512999999998658e-06, 4.870000000004038e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 1.0097000000000578e-05, 4.7199999999789077e-07, 8.792000000000522e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 5.527000000001697e-06, 4.729999999973644e-07, 7.361000000000867e-06, 4.720000000013602e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 1.2694000000000594e-05, 4.7300000000083386e-07, 1.2694000000000594e-05, 4.859999999974607e-07, 6.195000000000506e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.860000000009301e-07, 6.014000000002101e-06, 4.859999999974607e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.0695000000001537e-05, 4.7199999999789077e-07, 8.236000000001742e-06, 4.7199999999789077e-07, 1.3320000000000692e-05, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 1.3360999999999928e-05, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.860000000009301e-07, 1.252699999999829e-05, 4.7300000000083386e-07, 4.347000000001766e-06, 4.859999999974607e-07, 7.514000000000132e-06, 4.860000000009301e-07, 8.180999999999466e-06, 4.860000000009301e-07, 4.165999999999892e-06, 4.7300000000083386e-07, 1.254099999999786e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 5.514000000001601e-06, 4.860000000009301e-07, 1.2180999999999997e-05, 4.859999999974607e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.0862000000000371e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 1.0818999999998719e-05, 4.7300000000083386e-07, 1.1250000000000843e-05, 4.7199999999789077e-07, 1.4153000000002858e-05, 4.7199999999789077e-07, 8.861000000002367e-06, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 9.013999999998162e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:07.184" endtime="20201112 12:26:07.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.179" endtime="20201112 12:26:07.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:07.193" level="INFO">${RESULT} = [{'time': 0.019798292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019811958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:07.189" endtime="20201112 12:26:07.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:07.207" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:07.194" endtime="20201112 12:26:07.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.212" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:07.211" endtime="20201112 12:26:07.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.214" level="INFO">VALUE: [4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 12:26:07.213" endtime="20201112 12:26:07.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.208" endtime="20201112 12:26:07.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.218" endtime="20201112 12:26:07.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:07.221" endtime="20201112 12:26:07.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.220" endtime="20201112 12:26:07.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.216" endtime="20201112 12:26:07.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.809" endtime="20201112 12:26:07.242"></status>
</kw>
<msg timestamp="20201112 12:26:07.242" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.250" endtime="20201112 12:26:07.260"></status>
</kw>
<msg timestamp="20201112 12:26:07.261" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.249" endtime="20201112 12:26:07.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.263" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.262" endtime="20201112 12:26:07.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.264" endtime="20201112 12:26:07.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.246" endtime="20201112 12:26:07.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.244" endtime="20201112 12:26:07.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.274" endtime="20201112 12:26:07.558"></status>
</kw>
<msg timestamp="20201112 12:26:07.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018991, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018991472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:07.272" endtime="20201112 12:26:07.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018991, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018991472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:07.562" endtime="20201112 12:26:07.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.571" endtime="20201112 12:26:07.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.269" endtime="20201112 12:26:07.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.268" endtime="20201112 12:26:07.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.577" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:07.576" endtime="20201112 12:26:07.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.583" level="INFO">VALUE: [{'time': 0.018991, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018991472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019002708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1236000000001273e-05, 'source_diff': 1.1236000000001273e-05}, {'time': 0.019003181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019014486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1304999999999649e-05, 'source_diff': 1.1304999999999649e-05}, {'time': 0.019014958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019027, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2042000000000302e-05, 'source_diff': 1.2042000000000302e-05}, {'time': 0.019027472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019039153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680999999999497e-05, 'source_diff': 1.1680999999999497e-05}, {'time': 0.019039639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019047014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.019047486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019062153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4666999999999458e-05, 'source_diff': 1.4666999999999458e-05}, {'time': 0.019062639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019071847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.019072319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0190795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.019079972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019092181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2208999999999137e-05, 'source_diff': 1.2208999999999137e-05}, {'time': 0.019092653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019102, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.019102472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0191125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.019112972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01912, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.028000000002671e-06, 'source_diff': 7.028000000002671e-06}, {'time': 0.019120472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019134833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.019135306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019149347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.404099999999936e-05, 'source_diff': 1.404099999999936e-05}, {'time': 0.019149819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019162736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2917000000001178e-05, 'source_diff': 1.2917000000001178e-05}, {'time': 0.019163208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019170514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.019170986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019179833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.019180319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019185514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.019185986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019191333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.019191819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019200167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.34800000000177e-06, 'source_diff': 8.34800000000177e-06}, {'time': 0.019200653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019214681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.019215153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019221083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.930000000001212e-06, 'source_diff': 5.930000000001212e-06}, {'time': 0.019221556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019232514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0957999999998413e-05, 'source_diff': 1.0957999999998413e-05}, {'time': 0.019232986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019240347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.019240819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019247847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.019248319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019258681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361999999999871e-05, 'source_diff': 1.0361999999999871e-05}, {'time': 0.019259153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019270181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.019270653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019277194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541000000002267e-06, 'source_diff': 6.541000000002267e-06}, {'time': 0.019277667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019286681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.019287167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019296361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.019296833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019305028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.0193055, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019312514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019313, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019318514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.019319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019326181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.181000000001936e-06, 'source_diff': 7.181000000001936e-06}, {'time': 0.019326667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019338194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1527000000000759e-05, 'source_diff': 1.1527000000000759e-05}, {'time': 0.019338667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019350042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1375000000000968e-05, 'source_diff': 1.1375000000000968e-05}, {'time': 0.019350514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019360375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.019360847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019368694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.019369167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019382889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3722000000000734e-05, 'source_diff': 1.3722000000000734e-05}, {'time': 0.019383361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019392528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.019393, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019401194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.019401681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019411056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.019411528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019418528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019419014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019433542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4528000000003233e-05, 'source_diff': 1.4528000000003233e-05}, {'time': 0.019434014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019448375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.019448847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019456556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.019457028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019468375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1346999999998358e-05, 'source_diff': 1.1346999999998358e-05}, {'time': 0.019468847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019473208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.019473681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019479375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.019479847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:07.579" endtime="20201112 12:26:07.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.574" endtime="20201112 12:26:07.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:07.610" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:07.585" endtime="20201112 12:26:07.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.614" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:07.613" endtime="20201112 12:26:07.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.619" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7199999999789077e-07, 1.1236000000001273e-05, 4.7300000000083386e-07, 1.1304999999999649e-05, 4.7199999999789077e-07, 1.2042000000000302e-05, 4.720000000013602e-07, 1.1680999999999497e-05, 4.860000000009301e-07, 7.375000000000437e-06, 4.7199999999789077e-07, 1.4666999999999458e-05, 4.860000000009301e-07, 9.208000000000133e-06, 4.720000000013602e-07, 7.180999999998466e-06, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 1.4361000000000929e-05, 4.7300000000083386e-07, 1.404099999999936e-05, 4.7199999999789077e-07, 1.2917000000001178e-05, 4.720000000013602e-07, 7.305999999998591e-06, 4.720000000013602e-07, 8.846999999999328e-06, 4.860000000009301e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 5.347000000002766e-06, 4.859999999974607e-07, 8.34800000000177e-06, 4.860000000009301e-07, 1.4027999999999263e-05, 4.7199999999789077e-07, 5.930000000001212e-06, 4.7300000000083386e-07, 1.0957999999998413e-05, 4.720000000013602e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.0361999999999871e-05, 4.720000000013602e-07, 1.1027999999999732e-05, 4.7199999999789077e-07, 6.541000000002267e-06, 4.729999999973644e-07, 9.014000000001632e-06, 4.860000000009301e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 8.194999999999036e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.860000000009301e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 7.181000000001936e-06, 4.859999999974607e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 1.1375000000000968e-05, 4.7199999999789077e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 1.3722000000000734e-05, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 8.193999999999563e-06, 4.870000000004038e-07, 9.374999999998967e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.859999999974607e-07, 1.4528000000003233e-05, 4.7199999999789077e-07, 1.4361000000000929e-05, 4.7199999999789077e-07, 7.709000000001576e-06, 4.720000000013602e-07, 1.1346999999998358e-05, 4.720000000013602e-07, 4.360999999997867e-06, 4.7300000000083386e-07, 5.694000000000532e-06, 4.720000000013602e-07], 'eventtime': [0.018991, 0.018991472, 0.019002708, 0.019003181, 0.019014486, 0.019014958, 0.019027, 0.019027472, 0.019039153, 0.019039639, 0.019047014, 0.019047486, 0.019062153, 0.019062639, 0.019071847, 0.019072319, 0.0190795, 0.019079972, 0.019092181, 0.019092653, 0.019102, 0.019102472, 0.0191125, 0.019112972, 0.01912, 0.019120472, 0.019134833, 0.019135306, 0.019149347, 0.019149819, 0.019162736, 0.019163208, 0.019170514, 0.019170986, 0.019179833, 0.019180319, 0.019185514, 0.019185986, 0.019191333, 0.019191819, 0.019200167, 0.019200653, 0.019214681, 0.019215153, 0.019221083, 0.019221556, 0.019232514, 0.019232986, 0.019240347, 0.019240819, 0.019247847, 0.019248319, 0.019258681, 0.019259153, 0.019270181, 0.019270653, 0.019277194, 0.019277667, 0.019286681, 0.019287167, 0.019296361, 0.019296833, 0.019305028, 0.0193055, 0.019312514, 0.019313, 0.019318514, 0.019319, 0.019326181, 0.019326667, 0.019338194, 0.019338667, 0.019350042, 0.019350514, 0.019360375, 0.019360847, 0.019368694, 0.019369167, 0.019382889, 0.019383361, 0.019392528, 0.019393, 0.019401194, 0.019401681, 0.019411056, 0.019411528, 0.019418528, 0.019419014, 0.019433542, 0.019434014, 0.019448375, 0.019448847, 0.019456556, 0.019457028, 0.019468375, 0.019468847, 0.019473208, 0.019473681, 0.019479375, 0.019479847], 'diff': [0, 4.7199999999789077e-07, 1.1236000000001273e-05, 4.7300000000083386e-07, 1.1304999999999649e-05, 4.7199999999789077e-07, 1.2042000000000302e-05, 4.720000000013602e-07, 1.1680999999999497e-05, 4.860000000009301e-07, 7.375000000000437e-06, 4.7199999999789077e-07, 1.4666999999999458e-05, 4.860000000009301e-07, 9.208000000000133e-06, 4.720000000013602e-07, 7.180999999998466e-06, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 1.4361000000000929e-05, 4.7300000000083386e-07, 1.404099999999936e-05, 4.7199999999789077e-07, 1.2917000000001178e-05, 4.720000000013602e-07, 7.305999999998591e-06, 4.720000000013602e-07, 8.846999999999328e-06, 4.860000000009301e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 5.347000000002766e-06, 4.859999999974607e-07, 8.34800000000177e-06, 4.860000000009301e-07, 1.4027999999999263e-05, 4.7199999999789077e-07, 5.930000000001212e-06, 4.7300000000083386e-07, 1.0957999999998413e-05, 4.720000000013602e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.0361999999999871e-05, 4.720000000013602e-07, 1.1027999999999732e-05, 4.7199999999789077e-07, 6.541000000002267e-06, 4.729999999973644e-07, 9.014000000001632e-06, 4.860000000009301e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 8.194999999999036e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.860000000009301e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 7.181000000001936e-06, 4.859999999974607e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 1.1375000000000968e-05, 4.7199999999789077e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 1.3722000000000734e-05, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 8.193999999999563e-06, 4.870000000004038e-07, 9.374999999998967e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.859999999974607e-07, 1.4528000000003233e-05, 4.7199999999789077e-07, 1.4361000000000929e-05, 4.7199999999789077e-07, 7.709000000001576e-06, 4.720000000013602e-07, 1.1346999999998358e-05, 4.720000000013602e-07, 4.360999999997867e-06, 4.7300000000083386e-07, 5.694000000000532e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:07.616" endtime="20201112 12:26:07.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.611" endtime="20201112 12:26:07.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:07.624" level="INFO">${RESULT} = [{'time': 0.018991472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019003181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:07.621" endtime="20201112 12:26:07.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:07.639" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:07.625" endtime="20201112 12:26:07.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.643" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:07.642" endtime="20201112 12:26:07.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.646" level="INFO">VALUE: [4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:26:07.644" endtime="20201112 12:26:07.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.640" endtime="20201112 12:26:07.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.649" endtime="20201112 12:26:07.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:07.652" endtime="20201112 12:26:07.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.651" endtime="20201112 12:26:07.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.647" endtime="20201112 12:26:07.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.243" endtime="20201112 12:26:07.673"></status>
</kw>
<msg timestamp="20201112 12:26:07.673" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.681" endtime="20201112 12:26:07.692"></status>
</kw>
<msg timestamp="20201112 12:26:07.692" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.680" endtime="20201112 12:26:07.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.695" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.693" endtime="20201112 12:26:07.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.696" endtime="20201112 12:26:07.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.677" endtime="20201112 12:26:07.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.675" endtime="20201112 12:26:07.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.706" endtime="20201112 12:26:07.990"></status>
</kw>
<msg timestamp="20201112 12:26:07.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019001125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019001611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.704" endtime="20201112 12:26:07.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019001125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019001611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.994" endtime="20201112 12:26:08.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.003" endtime="20201112 12:26:08.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.702" endtime="20201112 12:26:08.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.700" endtime="20201112 12:26:08.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.010" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:08.009" endtime="20201112 12:26:08.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.015" level="INFO">VALUE: [{'time': 0.019001125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019001611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019006972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.019007444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019017139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.019017611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019023375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.019023847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019033486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.019033958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019047986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.019048458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019056306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847999999997801e-06, 'source_diff': 7.847999999997801e-06}, {'time': 0.019056778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019061972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.019062444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019068139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.019068611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019077056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.444999999999286e-06, 'source_diff': 8.444999999999286e-06}, {'time': 0.019077528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019087639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000000148e-05, 'source_diff': 1.0111000000000148e-05}, {'time': 0.019088125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019102681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4555999999998903e-05, 'source_diff': 1.4555999999998903e-05}, {'time': 0.019103153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019112986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.832999999997288e-06, 'source_diff': 9.832999999997288e-06}, {'time': 0.019113458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019118639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.019119125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019130306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1180999999998997e-05, 'source_diff': 1.1180999999998997e-05}, {'time': 0.019130792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019143, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.019143472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019152653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.019153125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.019167472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019178986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1513999999997193e-05, 'source_diff': 1.1513999999997193e-05}, {'time': 0.019179458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019189986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.019190458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019197653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194999999998036e-06, 'source_diff': 7.194999999998036e-06}, {'time': 0.019198125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0192075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.019207972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019215653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.019216139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019226361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.019226833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019235833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.019236306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019240819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.512999999997658e-06, 'source_diff': 4.512999999997658e-06}, {'time': 0.019241306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019251486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000001993e-05, 'source_diff': 1.0180000000001993e-05}, {'time': 0.019251972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019257833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019258306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019264333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.027000000002197e-06, 'source_diff': 6.027000000002197e-06}, {'time': 0.019264806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019273681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.019274153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019280181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.019280653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0192915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.019291972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019300833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019301306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019308167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.019308639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019322667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4028000000002733e-05, 'source_diff': 1.4028000000002733e-05}, {'time': 0.019323153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019335667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2514000000001663e-05, 'source_diff': 1.2514000000001663e-05}, {'time': 0.019336153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019345167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.019345653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019359347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3693999999998124e-05, 'source_diff': 1.3693999999998124e-05}, {'time': 0.019359819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019369833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.019370319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019382347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.019382819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019396681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861999999999902e-05, 'source_diff': 1.3861999999999902e-05}, {'time': 0.019397153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019405181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.019405653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019419347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3694000000001594e-05, 'source_diff': 1.3694000000001594e-05}, {'time': 0.019419819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019425514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.019425986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019437528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541999999999802e-05, 'source_diff': 1.1541999999999802e-05}, {'time': 0.019438, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019450347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.019450833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019456347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.019456833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019468514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680999999999497e-05, 'source_diff': 1.1680999999999497e-05}, {'time': 0.019469, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019482722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3722000000000734e-05, 'source_diff': 1.3722000000000734e-05}, {'time': 0.019483194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019491347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019491833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:08.011" endtime="20201112 12:26:08.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.006" endtime="20201112 12:26:08.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:08.043" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.018" endtime="20201112 12:26:08.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.047" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:08.046" endtime="20201112 12:26:08.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.051" level="INFO">VALUE: {'sourcesource_diff': [0, 4.860000000009301e-07, 5.360999999998867e-06, 4.7199999999789077e-07, 9.695000000000537e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 7.847999999997801e-06, 4.720000000013602e-07, 5.194000000000032e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 8.444999999999286e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.860000000009301e-07, 1.4555999999998903e-05, 4.720000000013602e-07, 9.832999999997288e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.860000000009301e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 1.1513999999997193e-05, 4.720000000013602e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 7.194999999998036e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 7.680999999998966e-06, 4.860000000009301e-07, 1.0222000000000703e-05, 4.7199999999789077e-07, 9.000000000002062e-06, 4.7300000000083386e-07, 4.512999999997658e-06, 4.870000000004038e-07, 1.0180000000001993e-05, 4.859999999974607e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 6.027000000002197e-06, 4.729999999973644e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 1.0847000000001328e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 6.861000000000367e-06, 4.7199999999789077e-07, 1.4028000000002733e-05, 4.859999999974607e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 9.014000000001632e-06, 4.860000000009301e-07, 1.3693999999998124e-05, 4.720000000013602e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 1.3694000000001594e-05, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 1.1680999999999497e-05, 4.860000000009301e-07, 1.3722000000000734e-05, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07], 'eventtime': [0.019001125, 0.019001611, 0.019006972, 0.019007444, 0.019017139, 0.019017611, 0.019023375, 0.019023847, 0.019033486, 0.019033958, 0.019047986, 0.019048458, 0.019056306, 0.019056778, 0.019061972, 0.019062444, 0.019068139, 0.019068611, 0.019077056, 0.019077528, 0.019087639, 0.019088125, 0.019102681, 0.019103153, 0.019112986, 0.019113458, 0.019118639, 0.019119125, 0.019130306, 0.019130792, 0.019143, 0.019143472, 0.019152653, 0.019153125, 0.019167, 0.019167472, 0.019178986, 0.019179458, 0.019189986, 0.019190458, 0.019197653, 0.019198125, 0.0192075, 0.019207972, 0.019215653, 0.019216139, 0.019226361, 0.019226833, 0.019235833, 0.019236306, 0.019240819, 0.019241306, 0.019251486, 0.019251972, 0.019257833, 0.019258306, 0.019264333, 0.019264806, 0.019273681, 0.019274153, 0.019280181, 0.019280653, 0.0192915, 0.019291972, 0.019300833, 0.019301306, 0.019308167, 0.019308639, 0.019322667, 0.019323153, 0.019335667, 0.019336153, 0.019345167, 0.019345653, 0.019359347, 0.019359819, 0.019369833, 0.019370319, 0.019382347, 0.019382819, 0.019396681, 0.019397153, 0.019405181, 0.019405653, 0.019419347, 0.019419819, 0.019425514, 0.019425986, 0.019437528, 0.019438, 0.019450347, 0.019450833, 0.019456347, 0.019456833, 0.019468514, 0.019469, 0.019482722, 0.019483194, 0.019491347, 0.019491833], 'diff': [0, 4.860000000009301e-07, 5.360999999998867e-06, 4.7199999999789077e-07, 9.695000000000537e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 7.847999999997801e-06, 4.720000000013602e-07, 5.194000000000032e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 8.444999999999286e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.860000000009301e-07, 1.4555999999998903e-05, 4.720000000013602e-07, 9.832999999997288e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.860000000009301e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 1.1513999999997193e-05, 4.720000000013602e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 7.194999999998036e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 7.680999999998966e-06, 4.860000000009301e-07, 1.0222000000000703e-05, 4.7199999999789077e-07, 9.000000000002062e-06, 4.7300000000083386e-07, 4.512999999997658e-06, 4.870000000004038e-07, 1.0180000000001993e-05, 4.859999999974607e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 6.027000000002197e-06, 4.729999999973644e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 1.0847000000001328e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 6.861000000000367e-06, 4.7199999999789077e-07, 1.4028000000002733e-05, 4.859999999974607e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 9.014000000001632e-06, 4.860000000009301e-07, 1.3693999999998124e-05, 4.720000000013602e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 1.3694000000001594e-05, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 1.1680999999999497e-05, 4.860000000009301e-07, 1.3722000000000734e-05, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:08.048" endtime="20201112 12:26:08.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.044" endtime="20201112 12:26:08.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.057" level="INFO">${RESULT} = [{'time': 0.019001611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019007444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:08.053" endtime="20201112 12:26:08.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.072" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.058" endtime="20201112 12:26:08.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.076" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:08.075" endtime="20201112 12:26:08.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.079" level="INFO">VALUE: [4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 12:26:08.078" endtime="20201112 12:26:08.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.073" endtime="20201112 12:26:08.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.083" endtime="20201112 12:26:08.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.086" endtime="20201112 12:26:08.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.085" endtime="20201112 12:26:08.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.081" endtime="20201112 12:26:08.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.674" endtime="20201112 12:26:08.107"></status>
</kw>
<msg timestamp="20201112 12:26:08.107" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.115" endtime="20201112 12:26:08.125"></status>
</kw>
<msg timestamp="20201112 12:26:08.126" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.114" endtime="20201112 12:26:08.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.128" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.127" endtime="20201112 12:26:08.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.129" endtime="20201112 12:26:08.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.111" endtime="20201112 12:26:08.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.109" endtime="20201112 12:26:08.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.138" endtime="20201112 12:26:08.422"></status>
</kw>
<msg timestamp="20201112 12:26:08.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019070542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019071014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.137" endtime="20201112 12:26:08.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019070542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019071014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.427" endtime="20201112 12:26:08.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.436" endtime="20201112 12:26:08.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.134" endtime="20201112 12:26:08.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.133" endtime="20201112 12:26:08.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.442" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:08.441" endtime="20201112 12:26:08.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.448" level="INFO">VALUE: [{'time': 0.019070542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019071014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019083264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2249999999998373e-05, 'source_diff': 1.2249999999998373e-05}, {'time': 0.019083736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019092042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.019092514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019102917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.019103389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019110222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833000000001227e-06, 'source_diff': 6.833000000001227e-06}, {'time': 0.019110694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019125042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4347999999997363e-05, 'source_diff': 1.4347999999997363e-05}, {'time': 0.019125514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019136708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1193999999999094e-05, 'source_diff': 1.1193999999999094e-05}, {'time': 0.019137181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019149042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.019149514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019155375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019155861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019162889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.019163361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019175722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.019176194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019183208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019183694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019188236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.019188708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019202722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.019203194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019209736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.542000000001741e-06, 'source_diff': 6.542000000001741e-06}, {'time': 0.019210208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019224889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4680999999999028e-05, 'source_diff': 1.4680999999999028e-05}, {'time': 0.019225361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019240056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4694999999998598e-05, 'source_diff': 1.4694999999998598e-05}, {'time': 0.019240528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019252056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.019252528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019261389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019261861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019276403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4541999999999333e-05, 'source_diff': 1.4541999999999333e-05}, {'time': 0.019276875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019290222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.019290708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019298722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.019299208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019305056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.019305542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019312597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055000000002337e-06, 'source_diff': 7.055000000002337e-06}, {'time': 0.019313069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019317236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.167000000002835e-06, 'source_diff': 4.167000000002835e-06}, {'time': 0.019317708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019325903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.019326375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019330708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.019331181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019342042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019342528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019352875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0346999999997358e-05, 'source_diff': 1.0346999999997358e-05}, {'time': 0.019353361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019364542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1180999999998997e-05, 'source_diff': 1.1180999999998997e-05}, {'time': 0.019365028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019378764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3736000000000304e-05, 'source_diff': 1.3736000000000304e-05}, {'time': 0.019379236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019388708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.471999999999953e-06, 'source_diff': 9.471999999999953e-06}, {'time': 0.019389194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019396583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.019397056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019407583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0526999999999759e-05, 'source_diff': 1.0526999999999759e-05}, {'time': 0.019408056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019421583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.352699999999929e-05, 'source_diff': 1.352699999999929e-05}, {'time': 0.019422056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019429889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.019430361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019442222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1860999999998428e-05, 'source_diff': 1.1860999999998428e-05}, {'time': 0.019442694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019453222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.019453694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019466222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.019466708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019475264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.019475736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019486556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819999999998192e-05, 'source_diff': 1.0819999999998192e-05}, {'time': 0.019487042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019499903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.019500375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019514917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4541999999999333e-05, 'source_diff': 1.4541999999999333e-05}, {'time': 0.019515389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019523736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.019524208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019532403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.019532875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019547403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.019547875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019560569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2694000000000594e-05, 'source_diff': 1.2694000000000594e-05}, {'time': 0.019561042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019567903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.019568375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019577403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.019577889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01959125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.019591722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:08.443" endtime="20201112 12:26:08.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.439" endtime="20201112 12:26:08.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:08.476" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.450" endtime="20201112 12:26:08.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.480" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:08.479" endtime="20201112 12:26:08.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.484" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 1.2249999999998373e-05, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.7199999999789077e-07, 6.833000000001227e-06, 4.720000000013602e-07, 1.4347999999997363e-05, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 1.1861000000001898e-05, 4.7199999999789077e-07, 5.860999999999367e-06, 4.860000000009301e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 7.013999999999632e-06, 4.860000000009301e-07, 4.541999999999741e-06, 4.7199999999789077e-07, 1.4013999999999693e-05, 4.720000000013602e-07, 6.542000000001741e-06, 4.7199999999789077e-07, 1.4680999999999028e-05, 4.720000000013602e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.4541999999999333e-05, 4.7199999999789077e-07, 1.3347000000000359e-05, 4.860000000009301e-07, 8.014000000000632e-06, 4.860000000009301e-07, 5.8479999999992704e-06, 4.859999999974607e-07, 7.055000000002337e-06, 4.7199999999789077e-07, 4.167000000002835e-06, 4.7199999999789077e-07, 8.194999999999036e-06, 4.720000000013602e-07, 4.332999999998727e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.860000000009301e-07, 1.0346999999997358e-05, 4.860000000009301e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 1.3736000000000304e-05, 4.720000000013602e-07, 9.471999999999953e-06, 4.859999999974607e-07, 7.389000000000007e-06, 4.7300000000083386e-07, 1.0526999999999759e-05, 4.7300000000083386e-07, 1.352699999999929e-05, 4.7300000000083386e-07, 7.832999999998758e-06, 4.720000000013602e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.2527999999997763e-05, 4.860000000009301e-07, 8.555999999999842e-06, 4.720000000013602e-07, 1.0819999999998192e-05, 4.860000000009301e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.4541999999999333e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 1.2694000000000594e-05, 4.7300000000083386e-07, 6.861000000000367e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.860000000009301e-07, 1.3360999999999928e-05, 4.7199999999789077e-07], 'eventtime': [0.019070542, 0.019071014, 0.019083264, 0.019083736, 0.019092042, 0.019092514, 0.019102917, 0.019103389, 0.019110222, 0.019110694, 0.019125042, 0.019125514, 0.019136708, 0.019137181, 0.019149042, 0.019149514, 0.019155375, 0.019155861, 0.019162889, 0.019163361, 0.019175722, 0.019176194, 0.019183208, 0.019183694, 0.019188236, 0.019188708, 0.019202722, 0.019203194, 0.019209736, 0.019210208, 0.019224889, 0.019225361, 0.019240056, 0.019240528, 0.019252056, 0.019252528, 0.019261389, 0.019261861, 0.019276403, 0.019276875, 0.019290222, 0.019290708, 0.019298722, 0.019299208, 0.019305056, 0.019305542, 0.019312597, 0.019313069, 0.019317236, 0.019317708, 0.019325903, 0.019326375, 0.019330708, 0.019331181, 0.019342042, 0.019342528, 0.019352875, 0.019353361, 0.019364542, 0.019365028, 0.019378764, 0.019379236, 0.019388708, 0.019389194, 0.019396583, 0.019397056, 0.019407583, 0.019408056, 0.019421583, 0.019422056, 0.019429889, 0.019430361, 0.019442222, 0.019442694, 0.019453222, 0.019453694, 0.019466222, 0.019466708, 0.019475264, 0.019475736, 0.019486556, 0.019487042, 0.019499903, 0.019500375, 0.019514917, 0.019515389, 0.019523736, 0.019524208, 0.019532403, 0.019532875, 0.019547403, 0.019547875, 0.019560569, 0.019561042, 0.019567903, 0.019568375, 0.019577403, 0.019577889, 0.01959125, 0.019591722], 'diff': [0, 4.720000000013602e-07, 1.2249999999998373e-05, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.7199999999789077e-07, 6.833000000001227e-06, 4.720000000013602e-07, 1.4347999999997363e-05, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 1.1861000000001898e-05, 4.7199999999789077e-07, 5.860999999999367e-06, 4.860000000009301e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 7.013999999999632e-06, 4.860000000009301e-07, 4.541999999999741e-06, 4.7199999999789077e-07, 1.4013999999999693e-05, 4.720000000013602e-07, 6.542000000001741e-06, 4.7199999999789077e-07, 1.4680999999999028e-05, 4.720000000013602e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.4541999999999333e-05, 4.7199999999789077e-07, 1.3347000000000359e-05, 4.860000000009301e-07, 8.014000000000632e-06, 4.860000000009301e-07, 5.8479999999992704e-06, 4.859999999974607e-07, 7.055000000002337e-06, 4.7199999999789077e-07, 4.167000000002835e-06, 4.7199999999789077e-07, 8.194999999999036e-06, 4.720000000013602e-07, 4.332999999998727e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.860000000009301e-07, 1.0346999999997358e-05, 4.860000000009301e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 1.3736000000000304e-05, 4.720000000013602e-07, 9.471999999999953e-06, 4.859999999974607e-07, 7.389000000000007e-06, 4.7300000000083386e-07, 1.0526999999999759e-05, 4.7300000000083386e-07, 1.352699999999929e-05, 4.7300000000083386e-07, 7.832999999998758e-06, 4.720000000013602e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.2527999999997763e-05, 4.860000000009301e-07, 8.555999999999842e-06, 4.720000000013602e-07, 1.0819999999998192e-05, 4.860000000009301e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.4541999999999333e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 1.2694000000000594e-05, 4.7300000000083386e-07, 6.861000000000367e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.860000000009301e-07, 1.3360999999999928e-05, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:08.481" endtime="20201112 12:26:08.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.477" endtime="20201112 12:26:08.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.490" level="INFO">${RESULT} = [{'time': 0.019071014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019083736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:08.486" endtime="20201112 12:26:08.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.504" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.491" endtime="20201112 12:26:08.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.508" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:08.507" endtime="20201112 12:26:08.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.511" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 12:26:08.510" endtime="20201112 12:26:08.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.505" endtime="20201112 12:26:08.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.514" endtime="20201112 12:26:08.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.518" endtime="20201112 12:26:08.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.516" endtime="20201112 12:26:08.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.513" endtime="20201112 12:26:08.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.108" endtime="20201112 12:26:08.539"></status>
</kw>
<msg timestamp="20201112 12:26:08.539" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.547" endtime="20201112 12:26:08.557"></status>
</kw>
<msg timestamp="20201112 12:26:08.557" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.545" endtime="20201112 12:26:08.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.560" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.558" endtime="20201112 12:26:08.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.561" endtime="20201112 12:26:08.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.543" endtime="20201112 12:26:08.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.541" endtime="20201112 12:26:08.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.571" endtime="20201112 12:26:08.855"></status>
</kw>
<msg timestamp="20201112 12:26:08.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018892514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018892986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.570" endtime="20201112 12:26:08.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018892514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018892986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.860" endtime="20201112 12:26:08.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.869" endtime="20201112 12:26:08.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.566" endtime="20201112 12:26:08.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.564" endtime="20201112 12:26:08.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.875" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:08.874" endtime="20201112 12:26:08.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.881" level="INFO">VALUE: [{'time': 0.018892514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018892986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0189, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018900472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018911181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708999999997637e-05, 'source_diff': 1.0708999999997637e-05}, {'time': 0.018911653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01892, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.018920472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018925847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.018926319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018932181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.86199999999884e-06, 'source_diff': 5.86199999999884e-06}, {'time': 0.018932653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0189405, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018940972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018950667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.018951153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018965667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.018966153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018972333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.018972819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018987167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4348000000000832e-05, 'source_diff': 1.4348000000000832e-05}, {'time': 0.018987653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018998181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.018998653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019009014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.019009486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019019361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.019019833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019030361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.019030833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019039528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.01904, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019049681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.680999999997497e-06, 'source_diff': 9.680999999997497e-06}, {'time': 0.019050153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019063514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.019063986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019075694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1707999999999164e-05, 'source_diff': 1.1707999999999164e-05}, {'time': 0.019076167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019086681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.019087167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019101014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.0191015, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019110014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.0191105, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019115694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.019116167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019130861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.019131333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019136528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.019137, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019150361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.019150833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019160194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.019160667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019165861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.019166333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019171694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.019172167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019185028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.0191855, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019193208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.707999999998633e-06, 'source_diff': 7.707999999998633e-06}, {'time': 0.019193681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019205028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1346999999998358e-05, 'source_diff': 1.1346999999998358e-05}, {'time': 0.019205514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019219028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.019219514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019233722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4208000000001664e-05, 'source_diff': 1.4208000000001664e-05}, {'time': 0.019234194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019247736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3542000000001803e-05, 'source_diff': 1.3542000000001803e-05}, {'time': 0.019248208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019252542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.019253014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019260708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.019261181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019271875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694000000002063e-05, 'source_diff': 1.0694000000002063e-05}, {'time': 0.019272347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019280389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.019280861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019291056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000001037e-05, 'source_diff': 1.0195000000001037e-05}, {'time': 0.019291528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019304208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2680000000001024e-05, 'source_diff': 1.2680000000001024e-05}, {'time': 0.019304681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019318375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3693999999998124e-05, 'source_diff': 1.3693999999998124e-05}, {'time': 0.019318861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019333042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.019333528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019340208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680000000001962e-06, 'source_diff': 6.680000000001962e-06}, {'time': 0.019340694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019347208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.514000000002601e-06, 'source_diff': 6.514000000002601e-06}, {'time': 0.019347694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019358236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0542000000002272e-05, 'source_diff': 1.0542000000002272e-05}, {'time': 0.019358708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019369556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0848000000000801e-05, 'source_diff': 1.0848000000000801e-05}, {'time': 0.019370028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019374569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.019375042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019384556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.019385028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019397222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.019397694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:08.876" endtime="20201112 12:26:08.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.872" endtime="20201112 12:26:08.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:08.908" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.884" endtime="20201112 12:26:08.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.912" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:08.911" endtime="20201112 12:26:08.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.916" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 5.374999999998437e-06, 4.720000000013602e-07, 5.86199999999884e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 9.695000000000537e-06, 4.859999999974607e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 6.180000000001462e-06, 4.859999999974607e-07, 1.4348000000000832e-05, 4.860000000009301e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 8.694999999999536e-06, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 1.3360999999999928e-05, 4.720000000013602e-07, 1.1707999999999164e-05, 4.7300000000083386e-07, 1.0513999999999663e-05, 4.859999999974607e-07, 1.3847000000000859e-05, 4.860000000009301e-07, 8.514000000001132e-06, 4.859999999974607e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 1.4693999999999124e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 1.3360999999999928e-05, 4.7199999999789077e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 5.194000000000032e-06, 4.720000000013602e-07, 5.360999999998867e-06, 4.7300000000083386e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 7.707999999998633e-06, 4.7300000000083386e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 1.4208000000001664e-05, 4.7199999999789077e-07, 1.3542000000001803e-05, 4.7199999999789077e-07, 4.33400000000167e-06, 4.7199999999789077e-07, 7.694000000002532e-06, 4.729999999973644e-07, 1.0694000000002063e-05, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 1.0195000000001037e-05, 4.7199999999789077e-07, 1.2680000000001024e-05, 4.7300000000083386e-07, 1.3693999999998124e-05, 4.860000000009301e-07, 1.4181000000001998e-05, 4.859999999974607e-07, 6.680000000001962e-06, 4.859999999974607e-07, 6.514000000002601e-06, 4.859999999974607e-07, 1.0542000000002272e-05, 4.7199999999789077e-07, 1.0848000000000801e-05, 4.720000000013602e-07, 4.541000000000267e-06, 4.729999999973644e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 1.2194000000000094e-05, 4.720000000013602e-07], 'eventtime': [0.018892514, 0.018892986, 0.0189, 0.018900472, 0.018911181, 0.018911653, 0.01892, 0.018920472, 0.018925847, 0.018926319, 0.018932181, 0.018932653, 0.0189405, 0.018940972, 0.018950667, 0.018951153, 0.018965667, 0.018966153, 0.018972333, 0.018972819, 0.018987167, 0.018987653, 0.018998181, 0.018998653, 0.019009014, 0.019009486, 0.019019361, 0.019019833, 0.019030361, 0.019030833, 0.019039528, 0.01904, 0.019049681, 0.019050153, 0.019063514, 0.019063986, 0.019075694, 0.019076167, 0.019086681, 0.019087167, 0.019101014, 0.0191015, 0.019110014, 0.0191105, 0.019115694, 0.019116167, 0.019130861, 0.019131333, 0.019136528, 0.019137, 0.019150361, 0.019150833, 0.019160194, 0.019160667, 0.019165861, 0.019166333, 0.019171694, 0.019172167, 0.019185028, 0.0191855, 0.019193208, 0.019193681, 0.019205028, 0.019205514, 0.019219028, 0.019219514, 0.019233722, 0.019234194, 0.019247736, 0.019248208, 0.019252542, 0.019253014, 0.019260708, 0.019261181, 0.019271875, 0.019272347, 0.019280389, 0.019280861, 0.019291056, 0.019291528, 0.019304208, 0.019304681, 0.019318375, 0.019318861, 0.019333042, 0.019333528, 0.019340208, 0.019340694, 0.019347208, 0.019347694, 0.019358236, 0.019358708, 0.019369556, 0.019370028, 0.019374569, 0.019375042, 0.019384556, 0.019385028, 0.019397222, 0.019397694], 'diff': [0, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 5.374999999998437e-06, 4.720000000013602e-07, 5.86199999999884e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 9.695000000000537e-06, 4.859999999974607e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 6.180000000001462e-06, 4.859999999974607e-07, 1.4348000000000832e-05, 4.860000000009301e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 8.694999999999536e-06, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 1.3360999999999928e-05, 4.720000000013602e-07, 1.1707999999999164e-05, 4.7300000000083386e-07, 1.0513999999999663e-05, 4.859999999974607e-07, 1.3847000000000859e-05, 4.860000000009301e-07, 8.514000000001132e-06, 4.859999999974607e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 1.4693999999999124e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 1.3360999999999928e-05, 4.7199999999789077e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 5.194000000000032e-06, 4.720000000013602e-07, 5.360999999998867e-06, 4.7300000000083386e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 7.707999999998633e-06, 4.7300000000083386e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 1.4208000000001664e-05, 4.7199999999789077e-07, 1.3542000000001803e-05, 4.7199999999789077e-07, 4.33400000000167e-06, 4.7199999999789077e-07, 7.694000000002532e-06, 4.729999999973644e-07, 1.0694000000002063e-05, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 1.0195000000001037e-05, 4.7199999999789077e-07, 1.2680000000001024e-05, 4.7300000000083386e-07, 1.3693999999998124e-05, 4.860000000009301e-07, 1.4181000000001998e-05, 4.859999999974607e-07, 6.680000000001962e-06, 4.859999999974607e-07, 6.514000000002601e-06, 4.859999999974607e-07, 1.0542000000002272e-05, 4.7199999999789077e-07, 1.0848000000000801e-05, 4.720000000013602e-07, 4.541000000000267e-06, 4.729999999973644e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 1.2194000000000094e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:08.913" endtime="20201112 12:26:08.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.909" endtime="20201112 12:26:08.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.922" level="INFO">${RESULT} = [{'time': 0.018892986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018900472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:08.919" endtime="20201112 12:26:08.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.936" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.923" endtime="20201112 12:26:08.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.941" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:08.940" endtime="20201112 12:26:08.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.944" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:26:08.942" endtime="20201112 12:26:08.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.937" endtime="20201112 12:26:08.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.947" endtime="20201112 12:26:08.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.951" endtime="20201112 12:26:08.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.949" endtime="20201112 12:26:08.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.946" endtime="20201112 12:26:08.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.539" endtime="20201112 12:26:08.972"></status>
</kw>
<msg timestamp="20201112 12:26:08.972" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.980" endtime="20201112 12:26:08.990"></status>
</kw>
<msg timestamp="20201112 12:26:08.991" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.978" endtime="20201112 12:26:08.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.993" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.992" endtime="20201112 12:26:08.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.994" endtime="20201112 12:26:08.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.975" endtime="20201112 12:26:08.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.974" endtime="20201112 12:26:08.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.004" endtime="20201112 12:26:09.289"></status>
</kw>
<msg timestamp="20201112 12:26:09.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018850625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018851097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.002" endtime="20201112 12:26:09.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018850625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018851097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.293" endtime="20201112 12:26:09.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.302" endtime="20201112 12:26:09.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.999" endtime="20201112 12:26:09.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.998" endtime="20201112 12:26:09.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.309" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:09.308" endtime="20201112 12:26:09.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.314" level="INFO">VALUE: [{'time': 0.018850625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018851097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018855958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.018856431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018866153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.018866625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018879486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.018879958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018892347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2389000000001538e-05, 'source_diff': 1.2389000000001538e-05}, {'time': 0.018892819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018901514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.018901986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018913167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1181000000002467e-05, 'source_diff': 1.1181000000002467e-05}, {'time': 0.018913639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018923292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.018923764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018934625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.018935111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018949292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4180999999998528e-05, 'source_diff': 1.4180999999998528e-05}, {'time': 0.018949778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018956625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.018957111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018966958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.018967444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018972972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018973444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018980306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8619999999998404e-06, 'source_diff': 6.8619999999998404e-06}, {'time': 0.018980778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018989986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.018990458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018996139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680999999996966e-06, 'source_diff': 5.680999999996966e-06}, {'time': 0.018996611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019000972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.019001444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019008347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.019008819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019016306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4870000000004655e-06, 'source_diff': 7.4870000000004655e-06}, {'time': 0.019016778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019024639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.019025111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019033306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.019033778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019042639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019043111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019050153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.019050625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019065139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4513999999996724e-05, 'source_diff': 1.4513999999996724e-05}, {'time': 0.019065625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019069792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.019070264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019080292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.019080764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019094625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.019095097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019105958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019106431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019118806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2374999999998498e-05, 'source_diff': 1.2374999999998498e-05}, {'time': 0.019119278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019127958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.019128444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019135792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347999999997301e-06, 'source_diff': 7.347999999997301e-06}, {'time': 0.019136278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019141472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.019141944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019155792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3848000000000332e-05, 'source_diff': 1.3848000000000332e-05}, {'time': 0.019156278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019163472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.019163944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019174819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.019175292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019185306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.019185778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019195139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.019195611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019204153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.019204625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019216306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680999999999497e-05, 'source_diff': 1.1680999999999497e-05}, {'time': 0.019216778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019228139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361000000001398e-05, 'source_diff': 1.1361000000001398e-05}, {'time': 0.019228611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019236653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.019237125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019245028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.0192455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019254139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.019254625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019260806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.019261292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019275306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.019275792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019286972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1179999999999524e-05, 'source_diff': 1.1179999999999524e-05}, {'time': 0.019287458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019300819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.019301292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019309819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.526999999997759e-06, 'source_diff': 8.526999999997759e-06}, {'time': 0.019310292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019317986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.019318458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019329986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.019330458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:09.310" endtime="20201112 12:26:09.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.305" endtime="20201112 12:26:09.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:09.342" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:09.317" endtime="20201112 12:26:09.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.346" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:09.345" endtime="20201112 12:26:09.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.351" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 4.860999999998367e-06, 4.7300000000083386e-07, 9.722000000000203e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.7199999999789077e-07, 1.2389000000001538e-05, 4.720000000013602e-07, 8.694999999999536e-06, 4.7199999999789077e-07, 1.1181000000002467e-05, 4.7199999999789077e-07, 9.653000000001827e-06, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.860000000009301e-07, 1.4180999999998528e-05, 4.860000000009301e-07, 6.847000000000797e-06, 4.859999999974607e-07, 9.847000000000328e-06, 4.860000000009301e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 6.8619999999998404e-06, 4.720000000013602e-07, 9.208000000000133e-06, 4.720000000013602e-07, 5.680999999996966e-06, 4.720000000013602e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 7.4870000000004655e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.4513999999996724e-05, 4.860000000009301e-07, 4.166999999999366e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 1.3861000000000429e-05, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.7300000000083386e-07, 1.2374999999998498e-05, 4.720000000013602e-07, 8.680000000000493e-06, 4.860000000009301e-07, 7.347999999997301e-06, 4.860000000009301e-07, 5.194000000000032e-06, 4.720000000013602e-07, 1.3848000000000332e-05, 4.859999999974607e-07, 7.194000000002032e-06, 4.7199999999789077e-07, 1.0875000000000468e-05, 4.7300000000083386e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999789077e-07, 1.1680999999999497e-05, 4.720000000013602e-07, 1.1361000000001398e-05, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 7.903000000000077e-06, 4.7199999999789077e-07, 8.639000000001257e-06, 4.860000000009301e-07, 6.180999999997466e-06, 4.860000000009301e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 1.1179999999999524e-05, 4.860000000009301e-07, 1.3360999999999928e-05, 4.7300000000083386e-07, 8.526999999997759e-06, 4.7300000000083386e-07, 7.693999999999063e-06, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07], 'eventtime': [0.018850625, 0.018851097, 0.018855958, 0.018856431, 0.018866153, 0.018866625, 0.018879486, 0.018879958, 0.018892347, 0.018892819, 0.018901514, 0.018901986, 0.018913167, 0.018913639, 0.018923292, 0.018923764, 0.018934625, 0.018935111, 0.018949292, 0.018949778, 0.018956625, 0.018957111, 0.018966958, 0.018967444, 0.018972972, 0.018973444, 0.018980306, 0.018980778, 0.018989986, 0.018990458, 0.018996139, 0.018996611, 0.019000972, 0.019001444, 0.019008347, 0.019008819, 0.019016306, 0.019016778, 0.019024639, 0.019025111, 0.019033306, 0.019033778, 0.019042639, 0.019043111, 0.019050153, 0.019050625, 0.019065139, 0.019065625, 0.019069792, 0.019070264, 0.019080292, 0.019080764, 0.019094625, 0.019095097, 0.019105958, 0.019106431, 0.019118806, 0.019119278, 0.019127958, 0.019128444, 0.019135792, 0.019136278, 0.019141472, 0.019141944, 0.019155792, 0.019156278, 0.019163472, 0.019163944, 0.019174819, 0.019175292, 0.019185306, 0.019185778, 0.019195139, 0.019195611, 0.019204153, 0.019204625, 0.019216306, 0.019216778, 0.019228139, 0.019228611, 0.019236653, 0.019237125, 0.019245028, 0.0192455, 0.019254139, 0.019254625, 0.019260806, 0.019261292, 0.019275306, 0.019275792, 0.019286972, 0.019287458, 0.019300819, 0.019301292, 0.019309819, 0.019310292, 0.019317986, 0.019318458, 0.019329986, 0.019330458], 'diff': [0, 4.720000000013602e-07, 4.860999999998367e-06, 4.7300000000083386e-07, 9.722000000000203e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.7199999999789077e-07, 1.2389000000001538e-05, 4.720000000013602e-07, 8.694999999999536e-06, 4.7199999999789077e-07, 1.1181000000002467e-05, 4.7199999999789077e-07, 9.653000000001827e-06, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.860000000009301e-07, 1.4180999999998528e-05, 4.860000000009301e-07, 6.847000000000797e-06, 4.859999999974607e-07, 9.847000000000328e-06, 4.860000000009301e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 6.8619999999998404e-06, 4.720000000013602e-07, 9.208000000000133e-06, 4.720000000013602e-07, 5.680999999996966e-06, 4.720000000013602e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 7.4870000000004655e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.4513999999996724e-05, 4.860000000009301e-07, 4.166999999999366e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 1.3861000000000429e-05, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.7300000000083386e-07, 1.2374999999998498e-05, 4.720000000013602e-07, 8.680000000000493e-06, 4.860000000009301e-07, 7.347999999997301e-06, 4.860000000009301e-07, 5.194000000000032e-06, 4.720000000013602e-07, 1.3848000000000332e-05, 4.859999999974607e-07, 7.194000000002032e-06, 4.7199999999789077e-07, 1.0875000000000468e-05, 4.7300000000083386e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999789077e-07, 1.1680999999999497e-05, 4.720000000013602e-07, 1.1361000000001398e-05, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 7.903000000000077e-06, 4.7199999999789077e-07, 8.639000000001257e-06, 4.860000000009301e-07, 6.180999999997466e-06, 4.860000000009301e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 1.1179999999999524e-05, 4.860000000009301e-07, 1.3360999999999928e-05, 4.7300000000083386e-07, 8.526999999997759e-06, 4.7300000000083386e-07, 7.693999999999063e-06, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:09.347" endtime="20201112 12:26:09.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.343" endtime="20201112 12:26:09.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:09.356" level="INFO">${RESULT} = [{'time': 0.018851097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018856431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:09.353" endtime="20201112 12:26:09.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:09.370" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:09.357" endtime="20201112 12:26:09.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.375" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:09.374" endtime="20201112 12:26:09.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.377" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 12:26:09.376" endtime="20201112 12:26:09.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.371" endtime="20201112 12:26:09.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.381" endtime="20201112 12:26:09.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.384" endtime="20201112 12:26:09.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.383" endtime="20201112 12:26:09.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.379" endtime="20201112 12:26:09.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.972" endtime="20201112 12:26:09.405"></status>
</kw>
<msg timestamp="20201112 12:26:09.405" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.413" endtime="20201112 12:26:09.424"></status>
</kw>
<msg timestamp="20201112 12:26:09.424" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.411" endtime="20201112 12:26:09.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.427" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.425" endtime="20201112 12:26:09.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.428" endtime="20201112 12:26:09.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.409" endtime="20201112 12:26:09.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.407" endtime="20201112 12:26:09.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.438" endtime="20201112 12:26:09.723"></status>
</kw>
<msg timestamp="20201112 12:26:09.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018835778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01883625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:09.436" endtime="20201112 12:26:09.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018835778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01883625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:09.727" endtime="20201112 12:26:09.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.736" endtime="20201112 12:26:09.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.433" endtime="20201112 12:26:09.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.431" endtime="20201112 12:26:09.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.743" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:09.742" endtime="20201112 12:26:09.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.748" level="INFO">VALUE: [{'time': 0.018835778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01883625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018845125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.018845597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018859944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4347000000001359e-05, 'source_diff': 1.4347000000001359e-05}, {'time': 0.018860417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018869764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018870236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018879264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.018879736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018891944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.018892417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018898431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.018898917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018910264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1346999999998358e-05, 'source_diff': 1.1346999999998358e-05}, {'time': 0.01891075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018918597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018919083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018924319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018924792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018933264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.01893375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018946764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3014000000002163e-05, 'source_diff': 1.3014000000002163e-05}, {'time': 0.01894725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018958111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.018958583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018967111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527999999997232e-06, 'source_diff': 8.527999999997232e-06}, {'time': 0.018967583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018975778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.01897625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018984611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.018985083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018998944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018999417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019008278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.01900875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019023111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.019023597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019033611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.019034097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019045278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1180999999998997e-05, 'source_diff': 1.1180999999998997e-05}, {'time': 0.019045764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019059111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.019059597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019065292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.019065764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019073514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.019073986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019087625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.019088097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019095125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.028000000002671e-06, 'source_diff': 7.028000000002671e-06}, {'time': 0.019095597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019100125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.019100597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019111653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1055999999998872e-05, 'source_diff': 1.1055999999998872e-05}, {'time': 0.019112125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019123125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1000000000000593e-05, 'source_diff': 1.1000000000000593e-05}, {'time': 0.019123597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019132972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.375000000002437e-06, 'source_diff': 9.375000000002437e-06}, {'time': 0.019133444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019143972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.019144444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019151958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019152444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019164375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1930999999999747e-05, 'source_diff': 1.1930999999999747e-05}, {'time': 0.019164847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019172139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.292000000002491e-06, 'source_diff': 7.292000000002491e-06}, {'time': 0.019172611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019177333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.019177806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019188958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152000000000384e-05, 'source_diff': 1.1152000000000384e-05}, {'time': 0.019189444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019201306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1862000000001371e-05, 'source_diff': 1.1862000000001371e-05}, {'time': 0.019201778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019212972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1193999999999094e-05, 'source_diff': 1.1193999999999094e-05}, {'time': 0.019213444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019223639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000001037e-05, 'source_diff': 1.0195000000001037e-05}, {'time': 0.019224111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019232472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.019232944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019238972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.019239444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019244139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.019244611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019257014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2403000000001108e-05, 'source_diff': 1.2403000000001108e-05}, {'time': 0.019257486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019267833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.019268306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019275139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833000000001227e-06, 'source_diff': 6.833000000001227e-06}, {'time': 0.019275625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019283153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019283625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019289319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.019289792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019304042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4250000000000373e-05, 'source_diff': 1.4250000000000373e-05}, {'time': 0.019304514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019316181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1667000000003397e-05, 'source_diff': 1.1667000000003397e-05}, {'time': 0.019316653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019322486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.019322958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:09.744" endtime="20201112 12:26:09.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.740" endtime="20201112 12:26:09.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:09.775" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:09.751" endtime="20201112 12:26:09.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.780" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:09.778" endtime="20201112 12:26:09.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.784" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 1.4347000000001359e-05, 4.7300000000083386e-07, 9.346999999999828e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.2207999999999664e-05, 4.7300000000083386e-07, 6.0139999999986316e-06, 4.860000000009301e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 7.846999999998328e-06, 4.860000000009301e-07, 5.235999999998742e-06, 4.7300000000083386e-07, 8.472000000002422e-06, 4.859999999974607e-07, 1.3014000000002163e-05, 4.859999999974607e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 8.527999999997232e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.4360999999997459e-05, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 1.3347000000000359e-05, 4.860000000009301e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.720000000013602e-07, 1.3638999999999318e-05, 4.7199999999789077e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 1.1055999999998872e-05, 4.720000000013602e-07, 1.1000000000000593e-05, 4.7199999999789077e-07, 9.375000000002437e-06, 4.7199999999789077e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.1930999999999747e-05, 4.7199999999789077e-07, 7.292000000002491e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.729999999973644e-07, 1.1152000000000384e-05, 4.860000000009301e-07, 1.1862000000001371e-05, 4.7199999999789077e-07, 1.1193999999999094e-05, 4.720000000013602e-07, 1.0195000000001037e-05, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.720000000013602e-07, 4.6949999999990055e-06, 4.7199999999789077e-07, 1.2403000000001108e-05, 4.720000000013602e-07, 1.0347000000000828e-05, 4.729999999973644e-07, 6.833000000001227e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 5.694000000000532e-06, 4.7300000000083386e-07, 1.4250000000000373e-05, 4.7199999999789077e-07, 1.1667000000003397e-05, 4.7199999999789077e-07, 5.833000000000227e-06, 4.720000000013602e-07], 'eventtime': [0.018835778, 0.01883625, 0.018845125, 0.018845597, 0.018859944, 0.018860417, 0.018869764, 0.018870236, 0.018879264, 0.018879736, 0.018891944, 0.018892417, 0.018898431, 0.018898917, 0.018910264, 0.01891075, 0.018918597, 0.018919083, 0.018924319, 0.018924792, 0.018933264, 0.01893375, 0.018946764, 0.01894725, 0.018958111, 0.018958583, 0.018967111, 0.018967583, 0.018975778, 0.01897625, 0.018984611, 0.018985083, 0.018998944, 0.018999417, 0.019008278, 0.01900875, 0.019023111, 0.019023597, 0.019033611, 0.019034097, 0.019045278, 0.019045764, 0.019059111, 0.019059597, 0.019065292, 0.019065764, 0.019073514, 0.019073986, 0.019087625, 0.019088097, 0.019095125, 0.019095597, 0.019100125, 0.019100597, 0.019111653, 0.019112125, 0.019123125, 0.019123597, 0.019132972, 0.019133444, 0.019143972, 0.019144444, 0.019151958, 0.019152444, 0.019164375, 0.019164847, 0.019172139, 0.019172611, 0.019177333, 0.019177806, 0.019188958, 0.019189444, 0.019201306, 0.019201778, 0.019212972, 0.019213444, 0.019223639, 0.019224111, 0.019232472, 0.019232944, 0.019238972, 0.019239444, 0.019244139, 0.019244611, 0.019257014, 0.019257486, 0.019267833, 0.019268306, 0.019275139, 0.019275625, 0.019283153, 0.019283625, 0.019289319, 0.019289792, 0.019304042, 0.019304514, 0.019316181, 0.019316653, 0.019322486, 0.019322958], 'diff': [0, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 1.4347000000001359e-05, 4.7300000000083386e-07, 9.346999999999828e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.2207999999999664e-05, 4.7300000000083386e-07, 6.0139999999986316e-06, 4.860000000009301e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 7.846999999998328e-06, 4.860000000009301e-07, 5.235999999998742e-06, 4.7300000000083386e-07, 8.472000000002422e-06, 4.859999999974607e-07, 1.3014000000002163e-05, 4.859999999974607e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 8.527999999997232e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.4360999999997459e-05, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 1.3347000000000359e-05, 4.860000000009301e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.720000000013602e-07, 1.3638999999999318e-05, 4.7199999999789077e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 1.1055999999998872e-05, 4.720000000013602e-07, 1.1000000000000593e-05, 4.7199999999789077e-07, 9.375000000002437e-06, 4.7199999999789077e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.1930999999999747e-05, 4.7199999999789077e-07, 7.292000000002491e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.729999999973644e-07, 1.1152000000000384e-05, 4.860000000009301e-07, 1.1862000000001371e-05, 4.7199999999789077e-07, 1.1193999999999094e-05, 4.720000000013602e-07, 1.0195000000001037e-05, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.720000000013602e-07, 4.6949999999990055e-06, 4.7199999999789077e-07, 1.2403000000001108e-05, 4.720000000013602e-07, 1.0347000000000828e-05, 4.729999999973644e-07, 6.833000000001227e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 5.694000000000532e-06, 4.7300000000083386e-07, 1.4250000000000373e-05, 4.7199999999789077e-07, 1.1667000000003397e-05, 4.7199999999789077e-07, 5.833000000000227e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:09.781" endtime="20201112 12:26:09.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.776" endtime="20201112 12:26:09.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:09.790" level="INFO">${RESULT} = [{'time': 0.01883625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018845597, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:09.786" endtime="20201112 12:26:09.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:09.804" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:09.791" endtime="20201112 12:26:09.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.808" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:09.807" endtime="20201112 12:26:09.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.811" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:26:09.809" endtime="20201112 12:26:09.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.805" endtime="20201112 12:26:09.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.814" endtime="20201112 12:26:09.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.818" endtime="20201112 12:26:09.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.816" endtime="20201112 12:26:09.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.812" endtime="20201112 12:26:09.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.406" endtime="20201112 12:26:09.839"></status>
</kw>
<msg timestamp="20201112 12:26:09.839" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.847" endtime="20201112 12:26:09.857"></status>
</kw>
<msg timestamp="20201112 12:26:09.858" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.845" endtime="20201112 12:26:09.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.860" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.859" endtime="20201112 12:26:09.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.861" endtime="20201112 12:26:09.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.843" endtime="20201112 12:26:09.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.841" endtime="20201112 12:26:09.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.871" endtime="20201112 12:26:10.158"></status>
</kw>
<msg timestamp="20201112 12:26:10.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018725958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018726444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.869" endtime="20201112 12:26:10.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018725958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018726444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.162" endtime="20201112 12:26:10.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.290" endtime="20201112 12:26:10.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.866" endtime="20201112 12:26:10.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.864" endtime="20201112 12:26:10.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.296" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:10.295" endtime="20201112 12:26:10.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.302" level="INFO">VALUE: [{'time': 0.018725958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018726444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018734458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.018734944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018744806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.861999999999371e-06, 'source_diff': 9.861999999999371e-06}, {'time': 0.018745278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018758292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3013999999998693e-05, 'source_diff': 1.3013999999998693e-05}, {'time': 0.018758778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018767639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018768111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018781972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018782444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018791819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.375000000002437e-06, 'source_diff': 9.375000000002437e-06}, {'time': 0.018792292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018801806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.018802278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018808306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018808778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018817653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.018818125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018828972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0846999999997858e-05, 'source_diff': 1.0846999999997858e-05}, {'time': 0.018829444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018835986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.018836458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018845806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.018846292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018855972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.018856458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018863153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.018863625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018874139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0514000000003132e-05, 'source_diff': 1.0514000000003132e-05}, {'time': 0.018874625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018879472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.018879958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018889167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208999999999606e-06, 'source_diff': 9.208999999999606e-06}, {'time': 0.018889639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018902486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.018902958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018915319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018915792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018927333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541000000000329e-05, 'source_diff': 1.1541000000000329e-05}, {'time': 0.018927806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018937153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347000000003297e-06, 'source_diff': 9.347000000003297e-06}, {'time': 0.018937625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018950819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.018951292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018960486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.193999999997093e-06, 'source_diff': 9.193999999997093e-06}, {'time': 0.018960972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018967833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.018968306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018976153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018976639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018983153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.018983639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018995333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.018995806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019003986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.019004472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0190105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.019010972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019015333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.019015806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019027667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.019028139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019037667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.019038139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019051, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.019051472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019063347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.019063819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019073181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.36200000000234e-06, 'source_diff': 9.36200000000234e-06}, {'time': 0.019073653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019078333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.019078819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019087347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.019087819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0191025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4681000000002498e-05, 'source_diff': 1.4681000000002498e-05}, {'time': 0.019102986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019109833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.019110319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019115014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.019115486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019119667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.019120139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019128653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.513999999997662e-06, 'source_diff': 8.513999999997662e-06}, {'time': 0.019129125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019140819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.019141306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019151333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.019151806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019156153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.019156639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019161319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.019161806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019174667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.019175139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019180819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.019181306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.019193667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361000000002398e-05, 'source_diff': 1.2361000000002398e-05}, {'time': 0.019194139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:10.298" endtime="20201112 12:26:10.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.293" endtime="20201112 12:26:10.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:10.330" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.304" endtime="20201112 12:26:10.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.334" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:10.333" endtime="20201112 12:26:10.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.338" level="INFO">VALUE: {'sourcesource_diff': [0, 4.859999999974607e-07, 8.014000000000632e-06, 4.860000000009301e-07, 9.861999999999371e-06, 4.720000000013602e-07, 1.3013999999998693e-05, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.7199999999789077e-07, 9.375000000002437e-06, 4.729999999973644e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 1.0846999999997858e-05, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 9.347999999999301e-06, 4.860000000009301e-07, 9.679999999998024e-06, 4.860000000009301e-07, 6.695000000001006e-06, 4.7199999999789077e-07, 1.0514000000003132e-05, 4.859999999974607e-07, 4.847000000002266e-06, 4.859999999974607e-07, 9.208999999999606e-06, 4.720000000013602e-07, 1.2846999999999859e-05, 4.720000000013602e-07, 1.2360999999998928e-05, 4.7300000000083386e-07, 1.1541000000000329e-05, 4.729999999973644e-07, 9.347000000003297e-06, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 9.193999999997093e-06, 4.860000000009301e-07, 6.861000000000367e-06, 4.7300000000083386e-07, 7.846999999998328e-06, 4.860000000009301e-07, 6.513999999999132e-06, 4.860000000009301e-07, 1.1693999999999594e-05, 4.7300000000083386e-07, 8.179999999999993e-06, 4.860000000009301e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 4.360999999997867e-06, 4.7300000000083386e-07, 1.1861000000001898e-05, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.1875000000001468e-05, 4.7199999999789077e-07, 9.36200000000234e-06, 4.7199999999789077e-07, 4.679999999999962e-06, 4.860000000009301e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 1.4681000000002498e-05, 4.859999999974607e-07, 6.847000000000797e-06, 4.860000000009301e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 8.513999999997662e-06, 4.720000000013602e-07, 1.1693999999999594e-05, 4.870000000004038e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 4.346999999998297e-06, 4.860000000009301e-07, 4.679999999999962e-06, 4.870000000004038e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 5.680000000000962e-06, 4.869999999969343e-07, 1.2361000000002398e-05, 4.7199999999789077e-07], 'eventtime': [0.018725958, 0.018726444, 0.018734458, 0.018734944, 0.018744806, 0.018745278, 0.018758292, 0.018758778, 0.018767639, 0.018768111, 0.018781972, 0.018782444, 0.018791819, 0.018792292, 0.018801806, 0.018802278, 0.018808306, 0.018808778, 0.018817653, 0.018818125, 0.018828972, 0.018829444, 0.018835986, 0.018836458, 0.018845806, 0.018846292, 0.018855972, 0.018856458, 0.018863153, 0.018863625, 0.018874139, 0.018874625, 0.018879472, 0.018879958, 0.018889167, 0.018889639, 0.018902486, 0.018902958, 0.018915319, 0.018915792, 0.018927333, 0.018927806, 0.018937153, 0.018937625, 0.018950819, 0.018951292, 0.018960486, 0.018960972, 0.018967833, 0.018968306, 0.018976153, 0.018976639, 0.018983153, 0.018983639, 0.018995333, 0.018995806, 0.019003986, 0.019004472, 0.0190105, 0.019010972, 0.019015333, 0.019015806, 0.019027667, 0.019028139, 0.019037667, 0.019038139, 0.019051, 0.019051472, 0.019063347, 0.019063819, 0.019073181, 0.019073653, 0.019078333, 0.019078819, 0.019087347, 0.019087819, 0.0191025, 0.019102986, 0.019109833, 0.019110319, 0.019115014, 0.019115486, 0.019119667, 0.019120139, 0.019128653, 0.019129125, 0.019140819, 0.019141306, 0.019151333, 0.019151806, 0.019156153, 0.019156639, 0.019161319, 0.019161806, 0.019174667, 0.019175139, 0.019180819, 0.019181306, 0.019193667, 0.019194139], 'diff': [0, 4.859999999974607e-07, 8.014000000000632e-06, 4.860000000009301e-07, 9.861999999999371e-06, 4.720000000013602e-07, 1.3013999999998693e-05, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.7199999999789077e-07, 9.375000000002437e-06, 4.729999999973644e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 1.0846999999997858e-05, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 9.347999999999301e-06, 4.860000000009301e-07, 9.679999999998024e-06, 4.860000000009301e-07, 6.695000000001006e-06, 4.7199999999789077e-07, 1.0514000000003132e-05, 4.859999999974607e-07, 4.847000000002266e-06, 4.859999999974607e-07, 9.208999999999606e-06, 4.720000000013602e-07, 1.2846999999999859e-05, 4.720000000013602e-07, 1.2360999999998928e-05, 4.7300000000083386e-07, 1.1541000000000329e-05, 4.729999999973644e-07, 9.347000000003297e-06, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 9.193999999997093e-06, 4.860000000009301e-07, 6.861000000000367e-06, 4.7300000000083386e-07, 7.846999999998328e-06, 4.860000000009301e-07, 6.513999999999132e-06, 4.860000000009301e-07, 1.1693999999999594e-05, 4.7300000000083386e-07, 8.179999999999993e-06, 4.860000000009301e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 4.360999999997867e-06, 4.7300000000083386e-07, 1.1861000000001898e-05, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.1875000000001468e-05, 4.7199999999789077e-07, 9.36200000000234e-06, 4.7199999999789077e-07, 4.679999999999962e-06, 4.860000000009301e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 1.4681000000002498e-05, 4.859999999974607e-07, 6.847000000000797e-06, 4.860000000009301e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 8.513999999997662e-06, 4.720000000013602e-07, 1.1693999999999594e-05, 4.870000000004038e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 4.346999999998297e-06, 4.860000000009301e-07, 4.679999999999962e-06, 4.870000000004038e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 5.680000000000962e-06, 4.869999999969343e-07, 1.2361000000002398e-05, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:10.335" endtime="20201112 12:26:10.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.331" endtime="20201112 12:26:10.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.344" level="INFO">${RESULT} = [{'time': 0.018726444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018734944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:10.340" endtime="20201112 12:26:10.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:10.358" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.345" endtime="20201112 12:26:10.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.363" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:10.362" endtime="20201112 12:26:10.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.365" level="INFO">VALUE: [4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.869999999969343e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 12:26:10.364" endtime="20201112 12:26:10.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.359" endtime="20201112 12:26:10.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.368" endtime="20201112 12:26:10.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.372" endtime="20201112 12:26:10.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.370" endtime="20201112 12:26:10.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.367" endtime="20201112 12:26:10.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.840" endtime="20201112 12:26:10.393"></status>
</kw>
<msg timestamp="20201112 12:26:10.393" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.401" endtime="20201112 12:26:10.412"></status>
</kw>
<msg timestamp="20201112 12:26:10.412" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.400" endtime="20201112 12:26:10.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.415" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.413" endtime="20201112 12:26:10.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.416" endtime="20201112 12:26:10.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.397" endtime="20201112 12:26:10.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.395" endtime="20201112 12:26:10.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.425" endtime="20201112 12:26:10.709"></status>
</kw>
<msg timestamp="20201112 12:26:10.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019071764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019072236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.424" endtime="20201112 12:26:10.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019071764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019072236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.714" endtime="20201112 12:26:10.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.723" endtime="20201112 12:26:10.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.421" endtime="20201112 12:26:10.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.419" endtime="20201112 12:26:10.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.729" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:10.728" endtime="20201112 12:26:10.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.735" level="INFO">VALUE: [{'time': 0.019071764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019072236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019086611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.019087083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019098597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1513999999997193e-05, 'source_diff': 1.1513999999997193e-05}, {'time': 0.019099069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019113764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4694999999998598e-05, 'source_diff': 1.4694999999998598e-05}, {'time': 0.019114236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019124097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.019124569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019133764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.019134236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019148778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4542000000002803e-05, 'source_diff': 1.4542000000002803e-05}, {'time': 0.01914925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019159292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.019159764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019166431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.019166917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019171444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.019171917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019181097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.019181583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019191111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.019191583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019197611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.019198083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019209125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1041999999999302e-05, 'source_diff': 1.1041999999999302e-05}, {'time': 0.019209597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019222514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2917000000001178e-05, 'source_diff': 1.2917000000001178e-05}, {'time': 0.019222986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019228139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.019228611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019239611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1000000000000593e-05, 'source_diff': 1.1000000000000593e-05}, {'time': 0.019240083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019248458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.019248931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019262444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.351299999999972e-05, 'source_diff': 1.351299999999972e-05}, {'time': 0.019262931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019277458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.452700000000029e-05, 'source_diff': 1.452700000000029e-05}, {'time': 0.019277931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019292611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4679999999999555e-05, 'source_diff': 1.4679999999999555e-05}, {'time': 0.019293097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019307639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4542000000002803e-05, 'source_diff': 1.4542000000002803e-05}, {'time': 0.019308111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019320986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2874999999998998e-05, 'source_diff': 1.2874999999998998e-05}, {'time': 0.019321458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019330306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.847999999998801e-06, 'source_diff': 8.847999999998801e-06}, {'time': 0.019330778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019339639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019340111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019353306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.019353778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019366153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2375000000001968e-05, 'source_diff': 1.2375000000001968e-05}, {'time': 0.019366625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019378139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.019378611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019391792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3181000000000997e-05, 'source_diff': 1.3181000000000997e-05}, {'time': 0.019392278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019401986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.019402458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019410292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.019410778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019418167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.019418639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019429986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1346999999998358e-05, 'source_diff': 1.1346999999998358e-05}, {'time': 0.019430458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019439806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.019440278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019449972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.019450444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019454611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.019455097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019459611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.019460097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019464944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.019465431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.019471458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.027000000002197e-06, 'source_diff': 6.027000000002197e-06}, {'time': 0.019471931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019485792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3860999999996959e-05, 'source_diff': 1.3860999999996959e-05}, {'time': 0.019486264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019494125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.019494597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019498958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.019499431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019512639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3207999999997194e-05, 'source_diff': 1.3207999999997194e-05}, {'time': 0.019513111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019523292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000001467e-05, 'source_diff': 1.0181000000001467e-05}, {'time': 0.019523764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019528125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.019528597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019532764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.01953325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019546944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3694000000001594e-05, 'source_diff': 1.3694000000001594e-05}, {'time': 0.019547417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019560444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.302699999999879e-05, 'source_diff': 1.302699999999879e-05}, {'time': 0.019560917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019570278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.01957075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019578944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.019579417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:10.730" endtime="20201112 12:26:10.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.726" endtime="20201112 12:26:10.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:10.762" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.737" endtime="20201112 12:26:10.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.766" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:10.765" endtime="20201112 12:26:10.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.770" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7199999999789077e-07, 1.4375000000000498e-05, 4.720000000013602e-07, 1.1513999999997193e-05, 4.720000000013602e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 1.4542000000002803e-05, 4.7199999999789077e-07, 1.0042000000001772e-05, 4.7199999999789077e-07, 6.667000000001866e-06, 4.859999999974607e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 9.180000000000993e-06, 4.859999999974607e-07, 9.528000000001702e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 1.1041999999999302e-05, 4.7199999999789077e-07, 1.2917000000001178e-05, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.1000000000000593e-05, 4.720000000013602e-07, 8.374999999997967e-06, 4.7300000000083386e-07, 1.351299999999972e-05, 4.870000000004038e-07, 1.452700000000029e-05, 4.7300000000083386e-07, 1.4679999999999555e-05, 4.859999999974607e-07, 1.4542000000002803e-05, 4.7199999999789077e-07, 1.2874999999998998e-05, 4.720000000013602e-07, 8.847999999998801e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.3195000000000567e-05, 4.7199999999789077e-07, 1.2375000000001968e-05, 4.7199999999789077e-07, 1.1514000000000663e-05, 4.720000000013602e-07, 1.3181000000000997e-05, 4.859999999974607e-07, 9.708000000000633e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.860000000009301e-07, 7.389000000000007e-06, 4.720000000013602e-07, 1.1346999999998358e-05, 4.720000000013602e-07, 9.347999999999301e-06, 4.7199999999789077e-07, 9.694000000001063e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.859999999974607e-07, 4.847000000002266e-06, 4.869999999969343e-07, 6.027000000002197e-06, 4.7300000000083386e-07, 1.3860999999996959e-05, 4.720000000013602e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 4.361000000001336e-06, 4.7300000000083386e-07, 1.3207999999997194e-05, 4.720000000013602e-07, 1.0181000000001467e-05, 4.7199999999789077e-07, 4.361000000001336e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.859999999974607e-07, 1.3694000000001594e-05, 4.7300000000083386e-07, 1.302699999999879e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 8.193999999999563e-06, 4.729999999973644e-07], 'eventtime': [0.019071764, 0.019072236, 0.019086611, 0.019087083, 0.019098597, 0.019099069, 0.019113764, 0.019114236, 0.019124097, 0.019124569, 0.019133764, 0.019134236, 0.019148778, 0.01914925, 0.019159292, 0.019159764, 0.019166431, 0.019166917, 0.019171444, 0.019171917, 0.019181097, 0.019181583, 0.019191111, 0.019191583, 0.019197611, 0.019198083, 0.019209125, 0.019209597, 0.019222514, 0.019222986, 0.019228139, 0.019228611, 0.019239611, 0.019240083, 0.019248458, 0.019248931, 0.019262444, 0.019262931, 0.019277458, 0.019277931, 0.019292611, 0.019293097, 0.019307639, 0.019308111, 0.019320986, 0.019321458, 0.019330306, 0.019330778, 0.019339639, 0.019340111, 0.019353306, 0.019353778, 0.019366153, 0.019366625, 0.019378139, 0.019378611, 0.019391792, 0.019392278, 0.019401986, 0.019402458, 0.019410292, 0.019410778, 0.019418167, 0.019418639, 0.019429986, 0.019430458, 0.019439806, 0.019440278, 0.019449972, 0.019450444, 0.019454611, 0.019455097, 0.019459611, 0.019460097, 0.019464944, 0.019465431, 0.019471458, 0.019471931, 0.019485792, 0.019486264, 0.019494125, 0.019494597, 0.019498958, 0.019499431, 0.019512639, 0.019513111, 0.019523292, 0.019523764, 0.019528125, 0.019528597, 0.019532764, 0.01953325, 0.019546944, 0.019547417, 0.019560444, 0.019560917, 0.019570278, 0.01957075, 0.019578944, 0.019579417], 'diff': [0, 4.7199999999789077e-07, 1.4375000000000498e-05, 4.720000000013602e-07, 1.1513999999997193e-05, 4.720000000013602e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 1.4542000000002803e-05, 4.7199999999789077e-07, 1.0042000000001772e-05, 4.7199999999789077e-07, 6.667000000001866e-06, 4.859999999974607e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 9.180000000000993e-06, 4.859999999974607e-07, 9.528000000001702e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 1.1041999999999302e-05, 4.7199999999789077e-07, 1.2917000000001178e-05, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.1000000000000593e-05, 4.720000000013602e-07, 8.374999999997967e-06, 4.7300000000083386e-07, 1.351299999999972e-05, 4.870000000004038e-07, 1.452700000000029e-05, 4.7300000000083386e-07, 1.4679999999999555e-05, 4.859999999974607e-07, 1.4542000000002803e-05, 4.7199999999789077e-07, 1.2874999999998998e-05, 4.720000000013602e-07, 8.847999999998801e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.3195000000000567e-05, 4.7199999999789077e-07, 1.2375000000001968e-05, 4.7199999999789077e-07, 1.1514000000000663e-05, 4.720000000013602e-07, 1.3181000000000997e-05, 4.859999999974607e-07, 9.708000000000633e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.860000000009301e-07, 7.389000000000007e-06, 4.720000000013602e-07, 1.1346999999998358e-05, 4.720000000013602e-07, 9.347999999999301e-06, 4.7199999999789077e-07, 9.694000000001063e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.859999999974607e-07, 4.847000000002266e-06, 4.869999999969343e-07, 6.027000000002197e-06, 4.7300000000083386e-07, 1.3860999999996959e-05, 4.720000000013602e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 4.361000000001336e-06, 4.7300000000083386e-07, 1.3207999999997194e-05, 4.720000000013602e-07, 1.0181000000001467e-05, 4.7199999999789077e-07, 4.361000000001336e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.859999999974607e-07, 1.3694000000001594e-05, 4.7300000000083386e-07, 1.302699999999879e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 8.193999999999563e-06, 4.729999999973644e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:10.767" endtime="20201112 12:26:10.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.763" endtime="20201112 12:26:10.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.776" level="INFO">${RESULT} = [{'time': 0.019072236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019087083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:10.772" endtime="20201112 12:26:10.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:10.790" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.777" endtime="20201112 12:26:10.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.795" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:10.794" endtime="20201112 12:26:10.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.797" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201112 12:26:10.796" endtime="20201112 12:26:10.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.791" endtime="20201112 12:26:10.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.800" endtime="20201112 12:26:10.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.804" endtime="20201112 12:26:10.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.802" endtime="20201112 12:26:10.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.799" endtime="20201112 12:26:10.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.394" endtime="20201112 12:26:10.825"></status>
</kw>
<msg timestamp="20201112 12:26:10.825" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.834" endtime="20201112 12:26:10.844"></status>
</kw>
<msg timestamp="20201112 12:26:10.845" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.832" endtime="20201112 12:26:10.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.847" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.846" endtime="20201112 12:26:10.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.848" endtime="20201112 12:26:10.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.829" endtime="20201112 12:26:10.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.827" endtime="20201112 12:26:10.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.858" endtime="20201112 12:26:11.145"></status>
</kw>
<msg timestamp="20201112 12:26:11.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019693375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.856" endtime="20201112 12:26:11.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019693375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.149" endtime="20201112 12:26:11.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.158" endtime="20201112 12:26:11.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.853" endtime="20201112 12:26:11.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.852" endtime="20201112 12:26:11.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.165" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:11.164" endtime="20201112 12:26:11.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.170" level="INFO">VALUE: [{'time': 0.019692903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019693375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019704167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.019704639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019718167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3528000000002233e-05, 'source_diff': 1.3528000000002233e-05}, {'time': 0.019718639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019730153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.019730625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01974, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.019740472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019747319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.019747806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019761681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.019762153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019776486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.433299999999832e-05, 'source_diff': 1.433299999999832e-05}, {'time': 0.019776972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019783319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.347000000000297e-06, 'source_diff': 6.347000000000297e-06}, {'time': 0.019783806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019788333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.019788806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019794833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.027000000002197e-06, 'source_diff': 6.027000000002197e-06}, {'time': 0.019795306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019809181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.019809653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019816833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.019817306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019830014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.019830486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019839167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.019839639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019846333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.019846806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019852833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.019853306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019857667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.019858139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0198665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.019866986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019876167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.019876653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019884167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019884653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019899167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.019899653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019903819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.019904292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019915167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.019915639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019919986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.019920458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019934, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3542000000001803e-05, 'source_diff': 1.3542000000001803e-05}, {'time': 0.019934472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019939514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.019939986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019951861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.019952333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019958819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019959306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019964, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.019964472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019978333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.019978806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019983833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.019984306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0199935, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.019993972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020005028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1056000000002342e-05, 'source_diff': 1.1056000000002342e-05}, {'time': 0.0200055, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020010514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.020010986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020016, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.020016472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020029333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.020029806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020034681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.020035153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020045681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.020046153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020059833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3679999999998554e-05, 'source_diff': 1.3679999999998554e-05}, {'time': 0.020060319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020067333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.020067819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020077667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847999999999801e-06, 'source_diff': 9.847999999999801e-06}, {'time': 0.020078153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020087181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.020087653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020095347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.020095819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020103681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.86200000000084e-06, 'source_diff': 7.86200000000084e-06}, {'time': 0.020104153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020113181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.020113653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020121847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.020122319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020134681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2362000000001871e-05, 'source_diff': 1.2362000000001871e-05}, {'time': 0.020135153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020143347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.020143819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020150847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.020151319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:11.166" endtime="20201112 12:26:11.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.161" endtime="20201112 12:26:11.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:11.197" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:11.173" endtime="20201112 12:26:11.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.201" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:11.200" endtime="20201112 12:26:11.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.206" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.7199999999789077e-07, 1.0792000000002522e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 1.1514000000000663e-05, 4.720000000013602e-07, 9.374999999998967e-06, 4.7199999999789077e-07, 6.847000000000797e-06, 4.870000000004038e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 1.433299999999832e-05, 4.860000000009301e-07, 6.347000000000297e-06, 4.870000000004038e-07, 4.527000000000697e-06, 4.729999999973644e-07, 6.027000000002197e-06, 4.729999999973644e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 7.179999999998993e-06, 4.7300000000083386e-07, 1.2708000000000164e-05, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 6.694000000001532e-06, 4.7300000000083386e-07, 6.026999999998728e-06, 4.7300000000083386e-07, 4.360999999997867e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 9.181000000000467e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.859999999974607e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 4.165999999999892e-06, 4.7300000000083386e-07, 1.0875000000000468e-05, 4.7199999999789077e-07, 4.347000000001766e-06, 4.7199999999789077e-07, 1.3542000000001803e-05, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 1.1875000000001468e-05, 4.7199999999789077e-07, 6.485999999999992e-06, 4.870000000004038e-07, 4.693999999999532e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.7300000000083386e-07, 5.026999999997728e-06, 4.7300000000083386e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 1.1056000000002342e-05, 4.7199999999789077e-07, 5.014000000001101e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.7300000000083386e-07, 4.8749999999979365e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.3679999999998554e-05, 4.860000000009301e-07, 7.013999999999632e-06, 4.860000000009301e-07, 9.847999999999801e-06, 4.860000000009301e-07, 9.027999999997732e-06, 4.720000000013602e-07, 7.693999999999063e-06, 4.720000000013602e-07, 7.86200000000084e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 8.194000000003032e-06, 4.7199999999789077e-07, 1.2362000000001871e-05, 4.7199999999789077e-07, 8.193999999999563e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07], 'eventtime': [0.019692903, 0.019693375, 0.019704167, 0.019704639, 0.019718167, 0.019718639, 0.019730153, 0.019730625, 0.01974, 0.019740472, 0.019747319, 0.019747806, 0.019761681, 0.019762153, 0.019776486, 0.019776972, 0.019783319, 0.019783806, 0.019788333, 0.019788806, 0.019794833, 0.019795306, 0.019809181, 0.019809653, 0.019816833, 0.019817306, 0.019830014, 0.019830486, 0.019839167, 0.019839639, 0.019846333, 0.019846806, 0.019852833, 0.019853306, 0.019857667, 0.019858139, 0.0198665, 0.019866986, 0.019876167, 0.019876653, 0.019884167, 0.019884653, 0.019899167, 0.019899653, 0.019903819, 0.019904292, 0.019915167, 0.019915639, 0.019919986, 0.019920458, 0.019934, 0.019934472, 0.019939514, 0.019939986, 0.019951861, 0.019952333, 0.019958819, 0.019959306, 0.019964, 0.019964472, 0.019978333, 0.019978806, 0.019983833, 0.019984306, 0.0199935, 0.019993972, 0.020005028, 0.0200055, 0.020010514, 0.020010986, 0.020016, 0.020016472, 0.020029333, 0.020029806, 0.020034681, 0.020035153, 0.020045681, 0.020046153, 0.020059833, 0.020060319, 0.020067333, 0.020067819, 0.020077667, 0.020078153, 0.020087181, 0.020087653, 0.020095347, 0.020095819, 0.020103681, 0.020104153, 0.020113181, 0.020113653, 0.020121847, 0.020122319, 0.020134681, 0.020135153, 0.020143347, 0.020143819, 0.020150847, 0.020151319], 'diff': [0, 4.7199999999789077e-07, 1.0792000000002522e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 1.1514000000000663e-05, 4.720000000013602e-07, 9.374999999998967e-06, 4.7199999999789077e-07, 6.847000000000797e-06, 4.870000000004038e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 1.433299999999832e-05, 4.860000000009301e-07, 6.347000000000297e-06, 4.870000000004038e-07, 4.527000000000697e-06, 4.729999999973644e-07, 6.027000000002197e-06, 4.729999999973644e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 7.179999999998993e-06, 4.7300000000083386e-07, 1.2708000000000164e-05, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 6.694000000001532e-06, 4.7300000000083386e-07, 6.026999999998728e-06, 4.7300000000083386e-07, 4.360999999997867e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 9.181000000000467e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.859999999974607e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 4.165999999999892e-06, 4.7300000000083386e-07, 1.0875000000000468e-05, 4.7199999999789077e-07, 4.347000000001766e-06, 4.7199999999789077e-07, 1.3542000000001803e-05, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 1.1875000000001468e-05, 4.7199999999789077e-07, 6.485999999999992e-06, 4.870000000004038e-07, 4.693999999999532e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.7300000000083386e-07, 5.026999999997728e-06, 4.7300000000083386e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 1.1056000000002342e-05, 4.7199999999789077e-07, 5.014000000001101e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.7300000000083386e-07, 4.8749999999979365e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.3679999999998554e-05, 4.860000000009301e-07, 7.013999999999632e-06, 4.860000000009301e-07, 9.847999999999801e-06, 4.860000000009301e-07, 9.027999999997732e-06, 4.720000000013602e-07, 7.693999999999063e-06, 4.720000000013602e-07, 7.86200000000084e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 8.194000000003032e-06, 4.7199999999789077e-07, 1.2362000000001871e-05, 4.7199999999789077e-07, 8.193999999999563e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:11.203" endtime="20201112 12:26:11.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.198" endtime="20201112 12:26:11.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:11.211" level="INFO">${RESULT} = [{'time': 0.019693375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019704639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:11.208" endtime="20201112 12:26:11.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:11.226" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:11.212" endtime="20201112 12:26:11.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.230" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:11.229" endtime="20201112 12:26:11.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.233" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:26:11.231" endtime="20201112 12:26:11.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.227" endtime="20201112 12:26:11.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.236" endtime="20201112 12:26:11.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.240" endtime="20201112 12:26:11.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.238" endtime="20201112 12:26:11.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.234" endtime="20201112 12:26:11.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.825" endtime="20201112 12:26:11.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.438" endtime="20201112 12:26:11.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.267" endtime="20201112 12:26:11.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.265" endtime="20201112 12:26:11.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.263" endtime="20201112 12:26:11.288"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:02.368" endtime="20201112 12:26:11.288" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.296" endtime="20201112 12:26:11.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.295" endtime="20201112 12:26:11.316"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.329" endtime="20201112 12:26:11.344"></status>
</kw>
<msg timestamp="20201112 12:26:11.345" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.328" endtime="20201112 12:26:11.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.348" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.346" endtime="20201112 12:26:11.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.351" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:11.349" endtime="20201112 12:26:11.352"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:11.325" endtime="20201112 12:26:11.352"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:11.323" endtime="20201112 12:26:11.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.321" endtime="20201112 12:26:11.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:11.357" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:11.356" endtime="20201112 12:26:11.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.354" endtime="20201112 12:26:11.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.321" endtime="20201112 12:26:11.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.320" endtime="20201112 12:26:11.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.359" endtime="20201112 12:26:11.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.318" endtime="20201112 12:26:11.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.317" endtime="20201112 12:26:11.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.293" endtime="20201112 12:26:11.361"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:26:11.364" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.372" endtime="20201112 12:26:11.384"></status>
</kw>
<msg timestamp="20201112 12:26:11.385" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.370" endtime="20201112 12:26:11.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.387" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.386" endtime="20201112 12:26:11.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.389" endtime="20201112 12:26:11.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.368" endtime="20201112 12:26:11.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.366" endtime="20201112 12:26:11.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.398" endtime="20201112 12:26:11.683"></status>
</kw>
<msg timestamp="20201112 12:26:11.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067225722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067228375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.396" endtime="20201112 12:26:11.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067225722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067228375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.687" endtime="20201112 12:26:11.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.695" endtime="20201112 12:26:11.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.394" endtime="20201112 12:26:11.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.392" endtime="20201112 12:26:11.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:11.702" level="INFO">${RESULT} = [{'time': 0.067228375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6530000000052345e-06, 'source_diff': 2.6530000000052345e-06}, {'time': 0.067235917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:11.699" endtime="20201112 12:26:11.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:11.718" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:11.703" endtime="20201112 12:26:11.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.723" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:11.722" endtime="20201112 12:26:11.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.725" level="INFO">VALUE: [2.6530000000052345e-06, 2.695000000010883e-06, 2.7360000000031803e-06, 2.6529999999913567e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.597000000006955e-06, 2.6809999999904965e-06, 2.7220000000105493e-06, 2.6810000000043743e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.6800000000049007e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6530000000052345e-06, 2.6530000000052345e-06, 2.679999999991023e-06, 2.6670000000117433e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6800000000049007e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6529999999913567e-06, 2.6250000000060947e-06, 2.665999999998392e-06, 2.652000000005761e-06, 2.6669999999978655e-06, 2.6530000000052345e-06, 2.6529999999913567e-06, 2.6809999999904965e-06, 2.665999999998392e-06, 2.6529999999913567e-06, 2.679999999991023e-06, 2.665999999998392e-06, 2.6530000000052345e-06, 2.665999999998392e-06, 2.6529999999913567e-06, 2.6800000000049007e-06, 2.6939999999975317e-06, 2.6530000000052345e-06, 2.6800000000049007e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6250000000060947e-06, 2.6529999999913567e-06, 2.6529999999913567e-06]</msg>
<status status="PASS" starttime="20201112 12:26:11.724" endtime="20201112 12:26:11.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.719" endtime="20201112 12:26:11.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.729" endtime="20201112 12:26:11.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.732" endtime="20201112 12:26:11.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.731" endtime="20201112 12:26:11.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.727" endtime="20201112 12:26:11.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.364" endtime="20201112 12:26:11.753"></status>
</kw>
<msg timestamp="20201112 12:26:11.753" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.761" endtime="20201112 12:26:11.774"></status>
</kw>
<msg timestamp="20201112 12:26:11.774" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.759" endtime="20201112 12:26:11.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.777" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.775" endtime="20201112 12:26:11.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.778" endtime="20201112 12:26:11.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.757" endtime="20201112 12:26:11.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.755" endtime="20201112 12:26:11.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.787" endtime="20201112 12:26:12.071"></status>
</kw>
<msg timestamp="20201112 12:26:12.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.785" endtime="20201112 12:26:12.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.075" endtime="20201112 12:26:12.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.084" endtime="20201112 12:26:12.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.783" endtime="20201112 12:26:12.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.781" endtime="20201112 12:26:12.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:12.090" level="INFO">${RESULT} = [{'time': 0.019982542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.019997403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:12.087" endtime="20201112 12:26:12.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:12.105" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:12.092" endtime="20201112 12:26:12.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.110" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:12.109" endtime="20201112 12:26:12.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.112" level="INFO">VALUE: [2.6669999999978655e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.708000000000571e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.749999999999281e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.6939999999975317e-06, 2.6939999999975317e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.6809999999974354e-06, 2.6110000000030553e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6520000000022914e-06, 2.708000000000571e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.722000000000141e-06, 2.6800000000014312e-06, 2.610999999999586e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.7090000000000447e-06]</msg>
<status status="PASS" starttime="20201112 12:26:12.111" endtime="20201112 12:26:12.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.106" endtime="20201112 12:26:12.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.116" endtime="20201112 12:26:12.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.119" endtime="20201112 12:26:12.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.118" endtime="20201112 12:26:12.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.114" endtime="20201112 12:26:12.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.754" endtime="20201112 12:26:12.140"></status>
</kw>
<msg timestamp="20201112 12:26:12.141" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.148" endtime="20201112 12:26:12.160"></status>
</kw>
<msg timestamp="20201112 12:26:12.160" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.147" endtime="20201112 12:26:12.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.163" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.161" endtime="20201112 12:26:12.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.164" endtime="20201112 12:26:12.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.144" endtime="20201112 12:26:12.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.143" endtime="20201112 12:26:12.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.173" endtime="20201112 12:26:12.462"></status>
</kw>
<msg timestamp="20201112 12:26:12.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020390861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020393514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.172" endtime="20201112 12:26:12.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020390861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020393514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.466" endtime="20201112 12:26:12.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.475" endtime="20201112 12:26:12.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.169" endtime="20201112 12:26:12.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.167" endtime="20201112 12:26:12.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:12.482" level="INFO">${RESULT} = [{'time': 0.020393514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.020410528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:12.478" endtime="20201112 12:26:12.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:12.497" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:12.483" endtime="20201112 12:26:12.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.501" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:12.500" endtime="20201112 12:26:12.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.504" level="INFO">VALUE: [2.653000000001765e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.7500000000027502e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6529999999982956e-06]</msg>
<status status="PASS" starttime="20201112 12:26:12.502" endtime="20201112 12:26:12.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.498" endtime="20201112 12:26:12.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.507" endtime="20201112 12:26:12.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.511" endtime="20201112 12:26:12.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.509" endtime="20201112 12:26:12.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.505" endtime="20201112 12:26:12.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.141" endtime="20201112 12:26:12.531"></status>
</kw>
<msg timestamp="20201112 12:26:12.532" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.539" endtime="20201112 12:26:12.551"></status>
</kw>
<msg timestamp="20201112 12:26:12.552" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.538" endtime="20201112 12:26:12.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.554" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.553" endtime="20201112 12:26:12.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.555" endtime="20201112 12:26:12.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.535" endtime="20201112 12:26:12.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.533" endtime="20201112 12:26:12.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.565" endtime="20201112 12:26:12.849"></status>
</kw>
<msg timestamp="20201112 12:26:12.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020003458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020006139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.563" endtime="20201112 12:26:12.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020003458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020006139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.853" endtime="20201112 12:26:12.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.862" endtime="20201112 12:26:12.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.560" endtime="20201112 12:26:12.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.559" endtime="20201112 12:26:12.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:12.869" level="INFO">${RESULT} = [{'time': 0.020006139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.020013139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:12.866" endtime="20201112 12:26:12.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:12.884" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:12.870" endtime="20201112 12:26:12.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.888" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:12.887" endtime="20201112 12:26:12.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.891" level="INFO">VALUE: [2.681000000000905e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.6520000000022914e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.597000000000016e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.749999999999281e-06, 2.653000000001765e-06, 2.679999999997962e-06, 2.6800000000014312e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6520000000022914e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.7219999999966715e-06]</msg>
<status status="PASS" starttime="20201112 12:26:12.890" endtime="20201112 12:26:12.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.885" endtime="20201112 12:26:12.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.894" endtime="20201112 12:26:12.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.898" endtime="20201112 12:26:12.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.896" endtime="20201112 12:26:12.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.893" endtime="20201112 12:26:12.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.532" endtime="20201112 12:26:12.918"></status>
</kw>
<msg timestamp="20201112 12:26:12.919" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.927" endtime="20201112 12:26:12.938"></status>
</kw>
<msg timestamp="20201112 12:26:12.939" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.925" endtime="20201112 12:26:12.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.941" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.940" endtime="20201112 12:26:12.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.942" endtime="20201112 12:26:12.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.922" endtime="20201112 12:26:12.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.921" endtime="20201112 12:26:12.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.952" endtime="20201112 12:26:13.237"></status>
</kw>
<msg timestamp="20201112 12:26:13.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020009708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020012389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.950" endtime="20201112 12:26:13.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020009708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020012389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:13.241" endtime="20201112 12:26:13.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.250" endtime="20201112 12:26:13.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.947" endtime="20201112 12:26:13.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.946" endtime="20201112 12:26:13.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:13.256" level="INFO">${RESULT} = [{'time': 0.020012389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.020022903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:13.253" endtime="20201112 12:26:13.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:13.271" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:13.257" endtime="20201112 12:26:13.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.275" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:13.274" endtime="20201112 12:26:13.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.278" level="INFO">VALUE: [2.6809999999974354e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.708000000000571e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6939999999975317e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.6389999999987257e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.639000000002195e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.598000000002959e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.6529999999982956e-06]</msg>
<status status="PASS" starttime="20201112 12:26:13.276" endtime="20201112 12:26:13.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.272" endtime="20201112 12:26:13.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.281" endtime="20201112 12:26:13.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:13.284" endtime="20201112 12:26:13.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.283" endtime="20201112 12:26:13.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.279" endtime="20201112 12:26:13.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.919" endtime="20201112 12:26:13.305"></status>
</kw>
<msg timestamp="20201112 12:26:13.305" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.313" endtime="20201112 12:26:13.325"></status>
</kw>
<msg timestamp="20201112 12:26:13.325" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.311" endtime="20201112 12:26:13.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.327" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.326" endtime="20201112 12:26:13.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.329" endtime="20201112 12:26:13.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.308" endtime="20201112 12:26:13.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.307" endtime="20201112 12:26:13.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.338" endtime="20201112 12:26:13.637"></status>
</kw>
<msg timestamp="20201112 12:26:13.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019595056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019597708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:13.336" endtime="20201112 12:26:13.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019595056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019597708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:13.642" endtime="20201112 12:26:13.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.650" endtime="20201112 12:26:13.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.333" endtime="20201112 12:26:13.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.332" endtime="20201112 12:26:13.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:13.657" level="INFO">${RESULT} = [{'time': 0.019597708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.019613069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:13.653" endtime="20201112 12:26:13.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:13.671" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:13.657" endtime="20201112 12:26:13.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.675" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:13.674" endtime="20201112 12:26:13.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.677" level="INFO">VALUE: [2.651999999998822e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.694000000001001e-06, 2.610999999999586e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.651999999998822e-06, 2.6389999999987257e-06, 2.651999999998822e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.722000000000141e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.6809999999974354e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6809999999974354e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.722000000000141e-06, 2.667000000001335e-06, 2.637999999999252e-06, 2.7090000000000447e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.681000000000905e-06]</msg>
<status status="PASS" starttime="20201112 12:26:13.676" endtime="20201112 12:26:13.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.672" endtime="20201112 12:26:13.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.681" endtime="20201112 12:26:13.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:13.684" endtime="20201112 12:26:13.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.682" endtime="20201112 12:26:13.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.679" endtime="20201112 12:26:13.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.305" endtime="20201112 12:26:13.704"></status>
</kw>
<msg timestamp="20201112 12:26:13.705" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.712" endtime="20201112 12:26:13.724"></status>
</kw>
<msg timestamp="20201112 12:26:13.724" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.711" endtime="20201112 12:26:13.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.727" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.725" endtime="20201112 12:26:13.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.728" endtime="20201112 12:26:13.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.708" endtime="20201112 12:26:13.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.706" endtime="20201112 12:26:13.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.737" endtime="20201112 12:26:14.024"></status>
</kw>
<msg timestamp="20201112 12:26:14.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019253, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019255681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:13.735" endtime="20201112 12:26:14.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019253, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019255681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:14.028" endtime="20201112 12:26:14.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.036" endtime="20201112 12:26:14.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.733" endtime="20201112 12:26:14.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.731" endtime="20201112 12:26:14.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:14.043" level="INFO">${RESULT} = [{'time': 0.019255681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019262861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:14.039" endtime="20201112 12:26:14.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:14.057" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:14.044" endtime="20201112 12:26:14.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.061" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:14.060" endtime="20201112 12:26:14.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.063" level="INFO">VALUE: [2.681000000000905e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6249999999991558e-06, 2.7229999999996146e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.694000000001001e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.6249999999991558e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.612000000002529e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6389999999987257e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6529999999982956e-06]</msg>
<status status="PASS" starttime="20201112 12:26:14.062" endtime="20201112 12:26:14.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.058" endtime="20201112 12:26:14.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.066" endtime="20201112 12:26:14.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:14.070" endtime="20201112 12:26:14.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.068" endtime="20201112 12:26:14.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.065" endtime="20201112 12:26:14.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.705" endtime="20201112 12:26:14.090"></status>
</kw>
<msg timestamp="20201112 12:26:14.091" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.098" endtime="20201112 12:26:14.109"></status>
</kw>
<msg timestamp="20201112 12:26:14.110" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.096" endtime="20201112 12:26:14.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.113" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.111" endtime="20201112 12:26:14.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.114" endtime="20201112 12:26:14.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.094" endtime="20201112 12:26:14.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.092" endtime="20201112 12:26:14.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.122" endtime="20201112 12:26:14.407"></status>
</kw>
<msg timestamp="20201112 12:26:14.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019162125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019164778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.121" endtime="20201112 12:26:14.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019162125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019164778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.411" endtime="20201112 12:26:14.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.420" endtime="20201112 12:26:14.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.118" endtime="20201112 12:26:14.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.117" endtime="20201112 12:26:14.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:14.426" level="INFO">${RESULT} = [{'time': 0.019164778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.019172472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:14.423" endtime="20201112 12:26:14.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:14.441" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:14.427" endtime="20201112 12:26:14.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.445" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:14.444" endtime="20201112 12:26:14.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.447" level="INFO">VALUE: [2.653000000001765e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6249999999991558e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.6110000000030553e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.722000000000141e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.708000000000571e-06]</msg>
<status status="PASS" starttime="20201112 12:26:14.446" endtime="20201112 12:26:14.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.442" endtime="20201112 12:26:14.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.450" endtime="20201112 12:26:14.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:14.454" endtime="20201112 12:26:14.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.452" endtime="20201112 12:26:14.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.449" endtime="20201112 12:26:14.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.091" endtime="20201112 12:26:14.474"></status>
</kw>
<msg timestamp="20201112 12:26:14.474" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.482" endtime="20201112 12:26:14.494"></status>
</kw>
<msg timestamp="20201112 12:26:14.495" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.480" endtime="20201112 12:26:14.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.497" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.496" endtime="20201112 12:26:14.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.498" endtime="20201112 12:26:14.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.478" endtime="20201112 12:26:14.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.476" endtime="20201112 12:26:14.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.507" endtime="20201112 12:26:14.791"></status>
</kw>
<msg timestamp="20201112 12:26:14.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019840125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.506" endtime="20201112 12:26:14.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019840125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.795" endtime="20201112 12:26:14.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.803" endtime="20201112 12:26:14.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.503" endtime="20201112 12:26:14.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.501" endtime="20201112 12:26:14.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:14.810" level="INFO">${RESULT} = [{'time': 0.019842778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.019852667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:14.806" endtime="20201112 12:26:14.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:14.825" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:14.811" endtime="20201112 12:26:14.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.829" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:14.828" endtime="20201112 12:26:14.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.831" level="INFO">VALUE: [2.6529999999982956e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6520000000022914e-06, 2.6800000000014312e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.6520000000022914e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6249999999991558e-06, 2.679999999997962e-06, 2.7090000000000447e-06, 2.6529999999982956e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.6809999999974354e-06, 2.6660000000018613e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.597000000000016e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.6249999999991558e-06, 2.6529999999982956e-06, 2.6809999999974354e-06, 2.6529999999982956e-06]</msg>
<status status="PASS" starttime="20201112 12:26:14.830" endtime="20201112 12:26:14.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.826" endtime="20201112 12:26:14.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.834" endtime="20201112 12:26:14.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:14.838" endtime="20201112 12:26:14.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.836" endtime="20201112 12:26:14.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.833" endtime="20201112 12:26:14.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.475" endtime="20201112 12:26:14.858"></status>
</kw>
<msg timestamp="20201112 12:26:14.858" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.866" endtime="20201112 12:26:14.879"></status>
</kw>
<msg timestamp="20201112 12:26:14.879" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.865" endtime="20201112 12:26:14.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.882" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.880" endtime="20201112 12:26:14.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.883" endtime="20201112 12:26:14.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.862" endtime="20201112 12:26:14.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.861" endtime="20201112 12:26:14.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.892" endtime="20201112 12:26:15.175"></status>
</kw>
<msg timestamp="20201112 12:26:15.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019900667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.890" endtime="20201112 12:26:15.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019900667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.179" endtime="20201112 12:26:15.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.187" endtime="20201112 12:26:15.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.887" endtime="20201112 12:26:15.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.886" endtime="20201112 12:26:15.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:15.194" level="INFO">${RESULT} = [{'time': 0.019903347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.019911542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:15.191" endtime="20201112 12:26:15.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:15.208" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:15.195" endtime="20201112 12:26:15.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.213" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:15.212" endtime="20201112 12:26:15.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.215" level="INFO">VALUE: [2.679999999997962e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.597000000000016e-06, 2.7090000000000447e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6389999999987257e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.639000000002195e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.679999999997962e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6250000000026252e-06, 2.6669999999978655e-06, 2.639000000002195e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.610999999999586e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.681000000000905e-06]</msg>
<status status="PASS" starttime="20201112 12:26:15.214" endtime="20201112 12:26:15.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.209" endtime="20201112 12:26:15.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.218" endtime="20201112 12:26:15.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.229" endtime="20201112 12:26:15.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.220" endtime="20201112 12:26:15.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.217" endtime="20201112 12:26:15.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.859" endtime="20201112 12:26:15.250"></status>
</kw>
<msg timestamp="20201112 12:26:15.250" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.258" endtime="20201112 12:26:15.270"></status>
</kw>
<msg timestamp="20201112 12:26:15.270" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.256" endtime="20201112 12:26:15.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.273" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.271" endtime="20201112 12:26:15.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.274" endtime="20201112 12:26:15.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.254" endtime="20201112 12:26:15.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.252" endtime="20201112 12:26:15.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.283" endtime="20201112 12:26:15.570"></status>
</kw>
<msg timestamp="20201112 12:26:15.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019327417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019330097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.281" endtime="20201112 12:26:15.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019327417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019330097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.574" endtime="20201112 12:26:15.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.582" endtime="20201112 12:26:15.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.278" endtime="20201112 12:26:15.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.277" endtime="20201112 12:26:15.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:15.589" level="INFO">${RESULT} = [{'time': 0.019330097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.019340611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:15.585" endtime="20201112 12:26:15.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:15.603" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:15.590" endtime="20201112 12:26:15.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.607" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:15.606" endtime="20201112 12:26:15.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.610" level="INFO">VALUE: [2.6800000000014312e-06, 2.583000000000446e-06, 2.651999999998822e-06, 2.749999999999281e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.723000000003084e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.651999999998822e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.6249999999991558e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6520000000022914e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.735999999999711e-06, 2.6529999999982956e-06, 2.735999999999711e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.735999999999711e-06, 2.651999999998822e-06, 2.597000000000016e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 12:26:15.608" endtime="20201112 12:26:15.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.604" endtime="20201112 12:26:15.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.613" endtime="20201112 12:26:15.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.616" endtime="20201112 12:26:15.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.615" endtime="20201112 12:26:15.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.611" endtime="20201112 12:26:15.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.251" endtime="20201112 12:26:15.637"></status>
</kw>
<msg timestamp="20201112 12:26:15.637" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.645" endtime="20201112 12:26:15.656"></status>
</kw>
<msg timestamp="20201112 12:26:15.657" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.643" endtime="20201112 12:26:15.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.659" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.658" endtime="20201112 12:26:15.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.660" endtime="20201112 12:26:15.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.641" endtime="20201112 12:26:15.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.639" endtime="20201112 12:26:15.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.669" endtime="20201112 12:26:15.957"></status>
</kw>
<msg timestamp="20201112 12:26:15.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019494986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019497639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.668" endtime="20201112 12:26:15.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019494986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019497639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.961" endtime="20201112 12:26:15.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.969" endtime="20201112 12:26:15.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.665" endtime="20201112 12:26:15.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.663" endtime="20201112 12:26:15.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:15.976" level="INFO">${RESULT} = [{'time': 0.019497639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.019512153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:15.972" endtime="20201112 12:26:15.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:15.990" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:15.976" endtime="20201112 12:26:15.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.994" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:15.993" endtime="20201112 12:26:15.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.996" level="INFO">VALUE: [2.653000000001765e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6520000000022914e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.735999999999711e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.708000000000571e-06, 2.653000000001765e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.597000000000016e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.708000000000571e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.6939999999975317e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.651999999998822e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 12:26:15.995" endtime="20201112 12:26:15.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.991" endtime="20201112 12:26:15.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.000" endtime="20201112 12:26:16.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:16.003" endtime="20201112 12:26:16.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.002" endtime="20201112 12:26:16.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.998" endtime="20201112 12:26:16.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.638" endtime="20201112 12:26:16.024"></status>
</kw>
<msg timestamp="20201112 12:26:16.024" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.032" endtime="20201112 12:26:16.043"></status>
</kw>
<msg timestamp="20201112 12:26:16.044" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.030" endtime="20201112 12:26:16.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.046" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.045" endtime="20201112 12:26:16.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.047" endtime="20201112 12:26:16.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.028" endtime="20201112 12:26:16.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.026" endtime="20201112 12:26:16.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.056" endtime="20201112 12:26:16.344"></status>
</kw>
<msg timestamp="20201112 12:26:16.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019372792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019375458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.054" endtime="20201112 12:26:16.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019372792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019375458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.348" endtime="20201112 12:26:16.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.356" endtime="20201112 12:26:16.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.052" endtime="20201112 12:26:16.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.050" endtime="20201112 12:26:16.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:16.363" level="INFO">${RESULT} = [{'time': 0.019375458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.019383972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:16.360" endtime="20201112 12:26:16.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:16.378" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:16.364" endtime="20201112 12:26:16.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.382" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:16.381" endtime="20201112 12:26:16.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.384" level="INFO">VALUE: [2.6660000000018613e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.597000000000016e-06, 2.665999999998392e-06, 2.6249999999991558e-06, 2.6660000000018613e-06, 2.6939999999975317e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.708000000000571e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.735999999999711e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.694000000001001e-06, 2.735999999999711e-06]</msg>
<status status="PASS" starttime="20201112 12:26:16.383" endtime="20201112 12:26:16.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.379" endtime="20201112 12:26:16.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.388" endtime="20201112 12:26:16.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:16.391" endtime="20201112 12:26:16.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.390" endtime="20201112 12:26:16.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.386" endtime="20201112 12:26:16.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.025" endtime="20201112 12:26:16.412"></status>
</kw>
<msg timestamp="20201112 12:26:16.412" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.420" endtime="20201112 12:26:16.432"></status>
</kw>
<msg timestamp="20201112 12:26:16.432" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.418" endtime="20201112 12:26:16.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.435" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.433" endtime="20201112 12:26:16.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.436" endtime="20201112 12:26:16.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.416" endtime="20201112 12:26:16.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.414" endtime="20201112 12:26:16.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.445" endtime="20201112 12:26:16.731"></status>
</kw>
<msg timestamp="20201112 12:26:16.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019287625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019290292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.443" endtime="20201112 12:26:16.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019287625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019290292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.735" endtime="20201112 12:26:16.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.743" endtime="20201112 12:26:16.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.441" endtime="20201112 12:26:16.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.439" endtime="20201112 12:26:16.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:16.750" level="INFO">${RESULT} = [{'time': 0.019290292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019297319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:16.746" endtime="20201112 12:26:16.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:16.764" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:16.751" endtime="20201112 12:26:16.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.768" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:16.767" endtime="20201112 12:26:16.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.771" level="INFO">VALUE: [2.667000000001335e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.679999999997962e-06, 2.6380000000027215e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6250000000026252e-06, 2.639000000002195e-06, 2.6939999999975317e-06, 2.694000000001001e-06, 2.639000000002195e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.610999999999586e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6520000000022914e-06, 2.6939999999975317e-06, 2.6660000000018613e-06, 2.694000000001001e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.7360000000031803e-06]</msg>
<status status="PASS" starttime="20201112 12:26:16.769" endtime="20201112 12:26:16.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.765" endtime="20201112 12:26:16.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.774" endtime="20201112 12:26:16.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:16.778" endtime="20201112 12:26:16.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.776" endtime="20201112 12:26:16.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.773" endtime="20201112 12:26:16.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.413" endtime="20201112 12:26:16.798"></status>
</kw>
<msg timestamp="20201112 12:26:16.798" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.806" endtime="20201112 12:26:16.818"></status>
</kw>
<msg timestamp="20201112 12:26:16.818" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.804" endtime="20201112 12:26:16.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.821" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.820" endtime="20201112 12:26:16.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.822" endtime="20201112 12:26:16.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.802" endtime="20201112 12:26:16.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.800" endtime="20201112 12:26:16.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.831" endtime="20201112 12:26:17.122"></status>
</kw>
<msg timestamp="20201112 12:26:17.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019456875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019459486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.829" endtime="20201112 12:26:17.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019456875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019459486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.126" endtime="20201112 12:26:17.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.135" endtime="20201112 12:26:17.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.827" endtime="20201112 12:26:17.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.825" endtime="20201112 12:26:17.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.141" level="INFO">${RESULT} = [{'time': 0.019459486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6110000000030553e-06, 'source_diff': 2.6110000000030553e-06}, {'time': 0.019474153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:17.138" endtime="20201112 12:26:17.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:17.155" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:17.142" endtime="20201112 12:26:17.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.160" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:17.159" endtime="20201112 12:26:17.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.162" level="INFO">VALUE: [2.6110000000030553e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.694000000001001e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6250000000026252e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.5979999999994896e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.612000000002529e-06, 2.6809999999974354e-06, 2.679999999997962e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.694000000001001e-06, 2.6800000000014312e-06, 2.639000000002195e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.665999999998392e-06]</msg>
<status status="PASS" starttime="20201112 12:26:17.161" endtime="20201112 12:26:17.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.156" endtime="20201112 12:26:17.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.166" endtime="20201112 12:26:17.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.169" endtime="20201112 12:26:17.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.167" endtime="20201112 12:26:17.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.164" endtime="20201112 12:26:17.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.799" endtime="20201112 12:26:17.190"></status>
</kw>
<msg timestamp="20201112 12:26:17.190" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.197" endtime="20201112 12:26:17.209"></status>
</kw>
<msg timestamp="20201112 12:26:17.210" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.196" endtime="20201112 12:26:17.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.212" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.211" endtime="20201112 12:26:17.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.213" endtime="20201112 12:26:17.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.193" endtime="20201112 12:26:17.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.192" endtime="20201112 12:26:17.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.223" endtime="20201112 12:26:17.511"></status>
</kw>
<msg timestamp="20201112 12:26:17.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019511639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019514292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.221" endtime="20201112 12:26:17.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019511639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019514292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.515" endtime="20201112 12:26:17.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.523" endtime="20201112 12:26:17.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.219" endtime="20201112 12:26:17.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.217" endtime="20201112 12:26:17.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.530" level="INFO">${RESULT} = [{'time': 0.019514292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.019525514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:17.527" endtime="20201112 12:26:17.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:17.544" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:17.531" endtime="20201112 12:26:17.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.548" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:17.547" endtime="20201112 12:26:17.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.551" level="INFO">VALUE: [2.6529999999982956e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.6389999999987257e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.653000000001765e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.679999999997962e-06, 2.6809999999974354e-06, 2.597000000000016e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.583000000000446e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.695000000000475e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.637999999999252e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.653000000001765e-06]</msg>
<status status="PASS" starttime="20201112 12:26:17.549" endtime="20201112 12:26:17.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.545" endtime="20201112 12:26:17.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.554" endtime="20201112 12:26:17.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.558" endtime="20201112 12:26:17.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.556" endtime="20201112 12:26:17.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.553" endtime="20201112 12:26:17.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.190" endtime="20201112 12:26:17.578"></status>
</kw>
<msg timestamp="20201112 12:26:17.578" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.586" endtime="20201112 12:26:17.598"></status>
</kw>
<msg timestamp="20201112 12:26:17.599" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.584" endtime="20201112 12:26:17.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.601" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.600" endtime="20201112 12:26:17.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.602" endtime="20201112 12:26:17.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.582" endtime="20201112 12:26:17.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.580" endtime="20201112 12:26:17.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.611" endtime="20201112 12:26:17.898"></status>
</kw>
<msg timestamp="20201112 12:26:17.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019543361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019546028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.609" endtime="20201112 12:26:17.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019543361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019546028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.903" endtime="20201112 12:26:17.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.911" endtime="20201112 12:26:17.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.607" endtime="20201112 12:26:17.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.605" endtime="20201112 12:26:17.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.917" level="INFO">${RESULT} = [{'time': 0.019546028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019554569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:17.914" endtime="20201112 12:26:17.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:17.932" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:17.918" endtime="20201112 12:26:17.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.936" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:17.935" endtime="20201112 12:26:17.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.939" level="INFO">VALUE: [2.667000000001335e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.708000000000571e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6250000000026252e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.7229999999996146e-06, 2.667000000001335e-06, 2.5979999999994896e-06, 2.6250000000026252e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.5829999999969766e-06, 2.695000000000475e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201112 12:26:17.937" endtime="20201112 12:26:17.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.933" endtime="20201112 12:26:17.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.942" endtime="20201112 12:26:17.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.946" endtime="20201112 12:26:17.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.944" endtime="20201112 12:26:17.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.941" endtime="20201112 12:26:17.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.579" endtime="20201112 12:26:17.966"></status>
</kw>
<msg timestamp="20201112 12:26:17.966" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.974" endtime="20201112 12:26:17.985"></status>
</kw>
<msg timestamp="20201112 12:26:17.986" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.972" endtime="20201112 12:26:17.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.988" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.987" endtime="20201112 12:26:17.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.989" endtime="20201112 12:26:17.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.970" endtime="20201112 12:26:17.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.968" endtime="20201112 12:26:17.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.998" endtime="20201112 12:26:18.287"></status>
</kw>
<msg timestamp="20201112 12:26:18.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019387431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019390111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.997" endtime="20201112 12:26:18.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019387431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019390111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.291" endtime="20201112 12:26:18.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.299" endtime="20201112 12:26:18.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.994" endtime="20201112 12:26:18.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.992" endtime="20201112 12:26:18.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:18.306" level="INFO">${RESULT} = [{'time': 0.019390111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.019401111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:18.302" endtime="20201112 12:26:18.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:18.320" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:18.306" endtime="20201112 12:26:18.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.324" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:18.323" endtime="20201112 12:26:18.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.326" level="INFO">VALUE: [2.6800000000014312e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6800000000014312e-06, 2.651999999998822e-06, 2.6249999999991558e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.694000000001001e-06, 2.7500000000027502e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6249999999991558e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.708000000000571e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.651999999998822e-06, 2.6389999999987257e-06]</msg>
<status status="PASS" starttime="20201112 12:26:18.325" endtime="20201112 12:26:18.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.321" endtime="20201112 12:26:18.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.330" endtime="20201112 12:26:18.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.333" endtime="20201112 12:26:18.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.332" endtime="20201112 12:26:18.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.328" endtime="20201112 12:26:18.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.967" endtime="20201112 12:26:18.354"></status>
</kw>
<msg timestamp="20201112 12:26:18.354" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.362" endtime="20201112 12:26:18.374"></status>
</kw>
<msg timestamp="20201112 12:26:18.374" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.360" endtime="20201112 12:26:18.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.377" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.375" endtime="20201112 12:26:18.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.378" endtime="20201112 12:26:18.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.358" endtime="20201112 12:26:18.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.356" endtime="20201112 12:26:18.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.386" endtime="20201112 12:26:18.672"></status>
</kw>
<msg timestamp="20201112 12:26:18.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019294639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019297306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.385" endtime="20201112 12:26:18.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019294639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019297306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.676" endtime="20201112 12:26:18.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.684" endtime="20201112 12:26:18.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.383" endtime="20201112 12:26:18.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.381" endtime="20201112 12:26:18.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:18.691" level="INFO">${RESULT} = [{'time': 0.019297306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019309, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:18.687" endtime="20201112 12:26:18.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:18.705" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:18.692" endtime="20201112 12:26:18.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.709" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:18.708" endtime="20201112 12:26:18.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.711" level="INFO">VALUE: [2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.639000000002195e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.694000000001001e-06, 2.708000000000571e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.695000000000475e-06, 2.6529999999982956e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.749999999999281e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.722000000000141e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 12:26:18.710" endtime="20201112 12:26:18.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.706" endtime="20201112 12:26:18.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.715" endtime="20201112 12:26:18.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.718" endtime="20201112 12:26:18.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.717" endtime="20201112 12:26:18.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.713" endtime="20201112 12:26:18.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.355" endtime="20201112 12:26:18.739"></status>
</kw>
<msg timestamp="20201112 12:26:18.739" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.746" endtime="20201112 12:26:18.758"></status>
</kw>
<msg timestamp="20201112 12:26:18.759" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.745" endtime="20201112 12:26:18.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.761" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.760" endtime="20201112 12:26:18.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.762" endtime="20201112 12:26:18.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.742" endtime="20201112 12:26:18.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.741" endtime="20201112 12:26:18.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.771" endtime="20201112 12:26:19.057"></status>
</kw>
<msg timestamp="20201112 12:26:19.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019210194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019212861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.770" endtime="20201112 12:26:19.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019210194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019212861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.061" endtime="20201112 12:26:19.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.069" endtime="20201112 12:26:19.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.767" endtime="20201112 12:26:19.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.765" endtime="20201112 12:26:19.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.076" level="INFO">${RESULT} = [{'time': 0.019212861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019225903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:19.073" endtime="20201112 12:26:19.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:19.090" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:19.077" endtime="20201112 12:26:19.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.094" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:19.093" endtime="20201112 12:26:19.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.097" level="INFO">VALUE: [2.667000000001335e-06, 2.695000000000475e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.6250000000026252e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6809999999974354e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.6809999999974354e-06, 2.7500000000027502e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6939999999975317e-06, 2.6660000000018613e-06, 2.679999999997962e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.695000000000475e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 12:26:19.095" endtime="20201112 12:26:19.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.091" endtime="20201112 12:26:19.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.100" endtime="20201112 12:26:19.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.104" endtime="20201112 12:26:19.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.102" endtime="20201112 12:26:19.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.099" endtime="20201112 12:26:19.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.740" endtime="20201112 12:26:19.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.363" endtime="20201112 12:26:19.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.132" endtime="20201112 12:26:19.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.131" endtime="20201112 12:26:19.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.129" endtime="20201112 12:26:19.153"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:11.290" endtime="20201112 12:26:19.153" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.162" endtime="20201112 12:26:19.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.160" endtime="20201112 12:26:19.181"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.194" endtime="20201112 12:26:19.209"></status>
</kw>
<msg timestamp="20201112 12:26:19.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.193" endtime="20201112 12:26:19.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.212" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.210" endtime="20201112 12:26:19.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.215" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:19.213" endtime="20201112 12:26:19.215"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:19.190" endtime="20201112 12:26:19.216"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:19.188" endtime="20201112 12:26:19.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.186" endtime="20201112 12:26:19.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:19.220" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:19.220" endtime="20201112 12:26:19.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.217" endtime="20201112 12:26:19.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.186" endtime="20201112 12:26:19.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.185" endtime="20201112 12:26:19.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.222" endtime="20201112 12:26:19.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.184" endtime="20201112 12:26:19.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.182" endtime="20201112 12:26:19.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.159" endtime="20201112 12:26:19.225"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.234" endtime="20201112 12:26:19.253"></status>
</kw>
<msg timestamp="20201112 12:26:19.254" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.232" endtime="20201112 12:26:19.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.256" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.255" endtime="20201112 12:26:19.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.257" endtime="20201112 12:26:19.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.230" endtime="20201112 12:26:19.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.227" endtime="20201112 12:26:19.260"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.262" endtime="20201112 12:26:19.264"></status>
</kw>
<msg timestamp="20201112 12:26:19.264" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:19.261" endtime="20201112 12:26:19.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.268" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:19.267" endtime="20201112 12:26:19.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.270" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:19.269" endtime="20201112 12:26:19.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.265" endtime="20201112 12:26:19.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.275" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:19.274" endtime="20201112 12:26:19.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.277" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:19.276" endtime="20201112 12:26:19.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.272" endtime="20201112 12:26:19.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.284" endtime="20201112 12:26:19.571"></status>
</kw>
<msg timestamp="20201112 12:26:19.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06534875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065356292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:19.283" endtime="20201112 12:26:19.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06534875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065356292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:19.575" endtime="20201112 12:26:19.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.583" endtime="20201112 12:26:19.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.280" endtime="20201112 12:26:19.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.278" endtime="20201112 12:26:19.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.590" level="INFO">${RESULT} = [{'time': 0.065356292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.065377292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:19.586" endtime="20201112 12:26:19.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:19.603" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:19.591" endtime="20201112 12:26:19.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.608" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:19.607" endtime="20201112 12:26:19.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.611" level="INFO">VALUE: [7.5419999999992715e-06, 7.597999999997551e-06, 7.624999999997217e-06, 7.624999999997217e-06, 7.680999999995497e-06, 7.638999999989848e-06, 7.638999999989848e-06, 7.624999999997217e-06, 7.624999999997217e-06, 7.611000000004586e-06, 7.679999999996023e-06, 7.554999999992429e-06, 7.624999999997217e-06, 7.638999999989848e-06, 7.639000000003726e-06, 7.624999999997217e-06, 7.624999999997217e-06, 7.638000000004252e-06, 7.639000000003726e-06, 7.6109999999907085e-06, 7.624999999997217e-06, 7.652999999996357e-06, 7.624999999997217e-06, 7.624999999997217e-06, 7.639000000003726e-06, 7.555000000006307e-06, 7.624999999997217e-06, 7.624999999997217e-06, 7.625000000011095e-06, 7.624999999997217e-06, 7.639000000003726e-06, 7.624999999997217e-06, 7.611000000004586e-06, 7.708999999994637e-06, 7.6109999999907085e-06, 7.624999999997217e-06, 7.611000000004586e-06, 7.639000000003726e-06, 7.625000000011095e-06, 7.625000000011095e-06, 7.611000000004586e-06, 7.639000000003726e-06, 7.611000000004586e-06, 7.639000000003726e-06, 7.624999999997217e-06, 7.624999999997217e-06, 7.624999999997217e-06, 7.611000000004586e-06, 7.651999999996884e-06, 7.624999999997217e-06]</msg>
<status status="PASS" starttime="20201112 12:26:19.609" endtime="20201112 12:26:19.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.604" endtime="20201112 12:26:19.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.614" endtime="20201112 12:26:19.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.617" endtime="20201112 12:26:19.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.616" endtime="20201112 12:26:19.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.612" endtime="20201112 12:26:19.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.226" endtime="20201112 12:26:19.638"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:19.156" endtime="20201112 12:26:19.639" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.647" endtime="20201112 12:26:19.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.646" endtime="20201112 12:26:19.667"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.680" endtime="20201112 12:26:19.695"></status>
</kw>
<msg timestamp="20201112 12:26:19.695" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.678" endtime="20201112 12:26:19.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.698" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.696" endtime="20201112 12:26:19.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.700" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:19.699" endtime="20201112 12:26:19.701"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:19.676" endtime="20201112 12:26:19.701"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:19.673" endtime="20201112 12:26:19.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.672" endtime="20201112 12:26:19.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:19.706" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:19.705" endtime="20201112 12:26:19.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.703" endtime="20201112 12:26:19.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.671" endtime="20201112 12:26:19.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.671" endtime="20201112 12:26:19.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.708" endtime="20201112 12:26:19.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.669" endtime="20201112 12:26:19.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.668" endtime="20201112 12:26:19.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.644" endtime="20201112 12:26:19.710"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.720" endtime="20201112 12:26:19.820"></status>
</kw>
<msg timestamp="20201112 12:26:19.821" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.719" endtime="20201112 12:26:19.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.823" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.822" endtime="20201112 12:26:19.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.824" endtime="20201112 12:26:19.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.716" endtime="20201112 12:26:19.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.713" endtime="20201112 12:26:19.827"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.829" endtime="20201112 12:26:19.830"></status>
</kw>
<msg timestamp="20201112 12:26:19.831" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:19.828" endtime="20201112 12:26:19.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.835" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:19.834" endtime="20201112 12:26:19.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.837" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:19.836" endtime="20201112 12:26:19.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.832" endtime="20201112 12:26:19.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.842" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:19.841" endtime="20201112 12:26:19.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.844" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:19.843" endtime="20201112 12:26:19.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.838" endtime="20201112 12:26:19.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.851" endtime="20201112 12:26:20.144"></status>
</kw>
<msg timestamp="20201112 12:26:20.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067370514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067427, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:19.849" endtime="20201112 12:26:20.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067370514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067427, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:20.148" endtime="20201112 12:26:20.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.157" endtime="20201112 12:26:20.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.847" endtime="20201112 12:26:20.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.845" endtime="20201112 12:26:20.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:20.163" level="INFO">${RESULT} = [{'time': 0.067427, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6485999999994485e-05, 'source_diff': 5.6485999999994485e-05}, {'time': 0.069053333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:20.160" endtime="20201112 12:26:20.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:20.177" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:20.164" endtime="20201112 12:26:20.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.182" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:20.181" endtime="20201112 12:26:20.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.184" level="INFO">VALUE: [5.6485999999994485e-05, 5.627699999999347e-05, 5.630499999999261e-05, 5.631899999999912e-05, 5.6291999999999454e-05, 5.627800000000682e-05, 5.627699999999347e-05, 5.634699999999826e-05, 5.630600000000596e-05, 5.630600000000596e-05, 5.6291999999999454e-05, 5.6249999999993805e-05, 5.6264000000000314e-05, 5.630600000000596e-05, 5.629099999999998e-05, 5.630500000000649e-05, 5.6291999999999454e-05, 5.631899999999912e-05, 5.6291999999999454e-05, 5.630500000000649e-05, 5.630600000000596e-05, 5.6305999999992085e-05, 5.630500000000649e-05, 5.630500000000649e-05, 5.630499999999261e-05, 5.6249999999993805e-05, 5.630600000000596e-05, 5.631899999999912e-05, 5.629099999999998e-05, 5.6249999999993805e-05, 5.630600000000596e-05, 5.6305999999992085e-05, 5.6291999999999454e-05, 5.6291999999999454e-05, 5.629099999999998e-05, 5.634799999999773e-05, 5.6319999999998593e-05, 5.629200000001333e-05, 5.6319999999998593e-05, 5.6235999999987296e-05, 5.630600000000596e-05, 5.6319999999998593e-05, 5.630500000000649e-05, 5.62780000000207e-05, 5.6291999999985576e-05, 5.630599999997821e-05, 5.6235999999987296e-05, 5.6319999999998593e-05, 5.630500000000649e-05, 5.6347999999983855e-05]</msg>
<status status="PASS" starttime="20201112 12:26:20.183" endtime="20201112 12:26:20.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.178" endtime="20201112 12:26:20.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.187" endtime="20201112 12:26:20.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.191" endtime="20201112 12:26:20.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.189" endtime="20201112 12:26:20.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.186" endtime="20201112 12:26:20.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.711" endtime="20201112 12:26:20.211"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:19.641" endtime="20201112 12:26:20.212" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.219" endtime="20201112 12:26:20.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.218" endtime="20201112 12:26:20.239"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.253" endtime="20201112 12:26:20.268"></status>
</kw>
<msg timestamp="20201112 12:26:20.268" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.251" endtime="20201112 12:26:20.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.271" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.269" endtime="20201112 12:26:20.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.274" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:20.272" endtime="20201112 12:26:20.274"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:20.248" endtime="20201112 12:26:20.275"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:20.245" endtime="20201112 12:26:20.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.244" endtime="20201112 12:26:20.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:20.279" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:20.279" endtime="20201112 12:26:20.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.276" endtime="20201112 12:26:20.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.243" endtime="20201112 12:26:20.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.243" endtime="20201112 12:26:20.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.281" endtime="20201112 12:26:20.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.242" endtime="20201112 12:26:20.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.240" endtime="20201112 12:26:20.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.216" endtime="20201112 12:26:20.294"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.303" endtime="20201112 12:26:20.621"></status>
</kw>
<msg timestamp="20201112 12:26:20.622" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.301" endtime="20201112 12:26:20.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.628" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.625" endtime="20201112 12:26:20.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.630" endtime="20201112 12:26:20.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.299" endtime="20201112 12:26:20.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.296" endtime="20201112 12:26:20.635"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.639" endtime="20201112 12:26:20.643"></status>
</kw>
<msg timestamp="20201112 12:26:20.643" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:20.637" endtime="20201112 12:26:20.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.652" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:20.650" endtime="20201112 12:26:20.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.656" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:20.654" endtime="20201112 12:26:20.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.645" endtime="20201112 12:26:20.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.665" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:20.663" endtime="20201112 12:26:20.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.670" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:20.668" endtime="20201112 12:26:20.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.659" endtime="20201112 12:26:20.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.687" endtime="20201112 12:26:20.984"></status>
</kw>
<msg timestamp="20201112 12:26:20.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081111458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081219028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.682" endtime="20201112 12:26:20.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081111458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081219028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.987" endtime="20201112 12:26:20.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.995" endtime="20201112 12:26:20.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.676" endtime="20201112 12:26:20.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.673" endtime="20201112 12:26:20.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.002" level="INFO">${RESULT} = [{'time': 0.081219028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010757000000000128, 'source_diff': 0.00010757000000000128}, {'time': 0.087171361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:20.998" endtime="20201112 12:26:21.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:21.015" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:21.003" endtime="20201112 12:26:21.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.020" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:21.019" endtime="20201112 12:26:21.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.022" level="INFO">VALUE: [0.00010757000000000128, 0.00010617999999999739, 0.00010612499999999858, 0.00010616600000000476, 0.0001061940000000039, 0.00010618099999999686, 0.00010616700000000423, 0.00010619500000000337, 0.00010615299999999772, 0.00010616699999999035, 0.00010617999999998351, 0.00010617999999998351, 0.0001061940000000039, 0.00010618100000001074, 0.00010616699999999035, 0.00010618100000001074, 0.00010618000000001127, 0.00010616700000001811, 0.00010625000000000218, 0.00010616699999999035, 0.00010611099999999207, 0.00010618100000001074, 0.00010620799999999653, 0.00010618099999998298, 0.00010619500000000337, 0.00010620800000002428, 0.000106208999999996, 0.00010609699999999944, 0.00010615299999999772, 0.0001061810000000385, 0.00010619500000003113, 0.00010619500000003113, 0.0001061810000000385, 0.00010618000000001127, 0.0001061940000000039, 0.00010618099999998298, 0.00010612500000001246, 0.0001061810000000385, 0.00010620799999999653, 0.00010616699999999035, 0.00010620799999999653, 0.00010620799999999653, 0.00010616600000001863, 0.00010618000000001127, 0.00010618000000001127, 0.00010617999999995575, 0.00010617999999995575, 0.00010616699999999035, 0.00010618099999998298, 0.00010618000000001127]</msg>
<status status="PASS" starttime="20201112 12:26:21.021" endtime="20201112 12:26:21.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.016" endtime="20201112 12:26:21.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.025" endtime="20201112 12:26:21.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.028" endtime="20201112 12:26:21.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.027" endtime="20201112 12:26:21.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.024" endtime="20201112 12:26:21.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.295" endtime="20201112 12:26:21.049"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:20.214" endtime="20201112 12:26:21.050" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.058" endtime="20201112 12:26:21.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.057" endtime="20201112 12:26:21.078"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.092" endtime="20201112 12:26:21.106"></status>
</kw>
<msg timestamp="20201112 12:26:21.107" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.091" endtime="20201112 12:26:21.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.109" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.108" endtime="20201112 12:26:21.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.112" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:21.110" endtime="20201112 12:26:21.113"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:21.087" endtime="20201112 12:26:21.113"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:21.085" endtime="20201112 12:26:21.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.084" endtime="20201112 12:26:21.114"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:21.118" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:21.117" endtime="20201112 12:26:21.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.115" endtime="20201112 12:26:21.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.083" endtime="20201112 12:26:21.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.082" endtime="20201112 12:26:21.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.120" endtime="20201112 12:26:21.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.081" endtime="20201112 12:26:21.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.079" endtime="20201112 12:26:21.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.055" endtime="20201112 12:26:21.122"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.132" endtime="20201112 12:26:21.152"></status>
</kw>
<msg timestamp="20201112 12:26:21.152" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.130" endtime="20201112 12:26:21.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.155" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.153" endtime="20201112 12:26:21.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.156" endtime="20201112 12:26:21.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.127" endtime="20201112 12:26:21.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.125" endtime="20201112 12:26:21.158"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.161" endtime="20201112 12:26:21.162"></status>
</kw>
<msg timestamp="20201112 12:26:21.163" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:21.159" endtime="20201112 12:26:21.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.167" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:21.166" endtime="20201112 12:26:21.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.168" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:21.168" endtime="20201112 12:26:21.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.163" endtime="20201112 12:26:21.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.173" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:21.172" endtime="20201112 12:26:21.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.175" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:21.174" endtime="20201112 12:26:21.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.170" endtime="20201112 12:26:21.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.185" endtime="20201112 12:26:21.472"></status>
</kw>
<msg timestamp="20201112 12:26:21.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066024028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066026347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.184" endtime="20201112 12:26:21.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066024028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066026347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.476" endtime="20201112 12:26:21.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.484" endtime="20201112 12:26:21.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.178" endtime="20201112 12:26:21.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.177" endtime="20201112 12:26:21.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.491" level="INFO">${RESULT} = [{'time': 0.066026347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.066042819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:21.488" endtime="20201112 12:26:21.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:21.504" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:21.492" endtime="20201112 12:26:21.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.509" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:21.508" endtime="20201112 12:26:21.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.511" level="INFO">VALUE: [2.319000000000626e-06, 2.2910000000014863e-06, 2.346999999999766e-06, 2.2910000000014863e-06, 2.2630000000023465e-06, 2.2219999999961715e-06, 2.3049999999941173e-06, 2.360999999992397e-06, 2.29200000000096e-06, 2.2499999999953113e-06, 2.3060000000074687e-06, 2.26400000000182e-06, 2.2910000000014863e-06, 2.3200000000000998e-06, 2.3610000000062747e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.278000000008329e-06, 2.319000000000626e-06, 2.277999999994451e-06, 2.2770000000088553e-06, 2.2910000000014863e-06, 2.319000000000626e-06, 2.332999999993257e-06, 2.3479999999992396e-06, 2.305999999993591e-06, 2.277999999994451e-06, 2.277999999994451e-06, 2.278000000008329e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.305000000007995e-06, 2.2910000000014863e-06, 2.2910000000014863e-06, 2.3049999999941173e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.277999999994451e-06, 2.2769999999949775e-06, 2.277999999994451e-06, 2.305999999993591e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.305999999993591e-06, 2.29200000000096e-06]</msg>
<status status="PASS" starttime="20201112 12:26:21.510" endtime="20201112 12:26:21.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.505" endtime="20201112 12:26:21.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.515" endtime="20201112 12:26:21.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.518" endtime="20201112 12:26:21.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.516" endtime="20201112 12:26:21.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.513" endtime="20201112 12:26:21.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.123" endtime="20201112 12:26:21.538"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:21.052" endtime="20201112 12:26:21.539" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.548" endtime="20201112 12:26:21.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.546" endtime="20201112 12:26:21.567"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.581" endtime="20201112 12:26:21.595"></status>
</kw>
<msg timestamp="20201112 12:26:21.596" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.580" endtime="20201112 12:26:21.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.598" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.597" endtime="20201112 12:26:21.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.601" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:21.599" endtime="20201112 12:26:21.602"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:21.576" endtime="20201112 12:26:21.602"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:21.574" endtime="20201112 12:26:21.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.573" endtime="20201112 12:26:21.603"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:21.607" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:21.606" endtime="20201112 12:26:21.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.604" endtime="20201112 12:26:21.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.572" endtime="20201112 12:26:21.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.571" endtime="20201112 12:26:21.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.609" endtime="20201112 12:26:21.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.570" endtime="20201112 12:26:21.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.568" endtime="20201112 12:26:21.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.545" endtime="20201112 12:26:21.611"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.621" endtime="20201112 12:26:21.722"></status>
</kw>
<msg timestamp="20201112 12:26:21.722" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.619" endtime="20201112 12:26:21.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.725" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.723" endtime="20201112 12:26:21.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.726" endtime="20201112 12:26:21.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.616" endtime="20201112 12:26:21.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.614" endtime="20201112 12:26:21.728"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.730" endtime="20201112 12:26:21.732"></status>
</kw>
<msg timestamp="20201112 12:26:21.732" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:21.729" endtime="20201112 12:26:21.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.736" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:21.735" endtime="20201112 12:26:21.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.738" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:21.737" endtime="20201112 12:26:21.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.733" endtime="20201112 12:26:21.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.743" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:21.742" endtime="20201112 12:26:21.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.745" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:21.744" endtime="20201112 12:26:21.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.740" endtime="20201112 12:26:21.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.753" endtime="20201112 12:26:22.045"></status>
</kw>
<msg timestamp="20201112 12:26:22.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067493972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067510569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.751" endtime="20201112 12:26:22.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067493972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067510569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.049" endtime="20201112 12:26:22.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.057" endtime="20201112 12:26:22.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.748" endtime="20201112 12:26:22.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.746" endtime="20201112 12:26:22.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:22.064" level="INFO">${RESULT} = [{'time': 0.067510569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.659700000000708e-05, 'source_diff': 1.659700000000708e-05}, {'time': 0.069145, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:22.061" endtime="20201112 12:26:22.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:22.077" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:22.065" endtime="20201112 12:26:22.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.082" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:22.081" endtime="20201112 12:26:22.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.084" level="INFO">VALUE: [1.659700000000708e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.6584000000000043e-05, 1.6542000000008272e-05, 1.6597999999992674e-05, 1.658300000000057e-05, 1.659700000000708e-05, 1.65969999999932e-05, 1.659700000000708e-05, 1.6584000000000043e-05, 1.6528000000001764e-05, 1.658300000000057e-05, 1.6582999999986692e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.656900000000794e-05, 1.662499999999234e-05, 1.656900000000794e-05, 1.658300000000057e-05, 1.661099999999971e-05, 1.6528000000001764e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.6528000000001764e-05, 1.658300000000057e-05, 1.6637999999999376e-05, 1.656899999999406e-05, 1.658300000000057e-05, 1.6584000000000043e-05, 1.658300000000057e-05, 1.6528000000001764e-05, 1.6637999999999376e-05, 1.65969999999932e-05, 1.6598000000006552e-05, 1.659700000000708e-05, 1.6582999999986692e-05, 1.656899999999406e-05, 1.6583000000014447e-05, 1.659700000000708e-05, 1.657000000002129e-05, 1.659700000000708e-05, 1.658400000001392e-05, 1.6582999999986692e-05, 1.6583999999986165e-05, 1.6598000000006552e-05, 1.6583000000014447e-05, 1.6596999999979323e-05, 1.6583000000014447e-05, 1.6597999999978796e-05]</msg>
<status status="PASS" starttime="20201112 12:26:22.083" endtime="20201112 12:26:22.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.078" endtime="20201112 12:26:22.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.087" endtime="20201112 12:26:22.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:22.091" endtime="20201112 12:26:22.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.089" endtime="20201112 12:26:22.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.086" endtime="20201112 12:26:22.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.612" endtime="20201112 12:26:22.111"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:21.542" endtime="20201112 12:26:22.112" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:22.121" endtime="20201112 12:26:22.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.119" endtime="20201112 12:26:22.141"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.154" endtime="20201112 12:26:22.168"></status>
</kw>
<msg timestamp="20201112 12:26:22.169" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.152" endtime="20201112 12:26:22.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.171" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.170" endtime="20201112 12:26:22.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.174" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:22.172" endtime="20201112 12:26:22.175"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:22.149" endtime="20201112 12:26:22.175"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:22.147" endtime="20201112 12:26:22.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.146" endtime="20201112 12:26:22.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:22.180" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:22.179" endtime="20201112 12:26:22.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.177" endtime="20201112 12:26:22.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.145" endtime="20201112 12:26:22.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.144" endtime="20201112 12:26:22.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.182" endtime="20201112 12:26:22.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.143" endtime="20201112 12:26:22.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.141" endtime="20201112 12:26:22.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.118" endtime="20201112 12:26:22.184"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.193" endtime="20201112 12:26:22.513"></status>
</kw>
<msg timestamp="20201112 12:26:22.513" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.192" endtime="20201112 12:26:22.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.516" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.514" endtime="20201112 12:26:22.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.517" endtime="20201112 12:26:22.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.189" endtime="20201112 12:26:22.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.187" endtime="20201112 12:26:22.519"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.521" endtime="20201112 12:26:22.523"></status>
</kw>
<msg timestamp="20201112 12:26:22.523" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:22.520" endtime="20201112 12:26:22.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.527" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:22.526" endtime="20201112 12:26:22.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.529" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:22.528" endtime="20201112 12:26:22.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.524" endtime="20201112 12:26:22.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.534" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:22.533" endtime="20201112 12:26:22.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.536" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:22.535" endtime="20201112 12:26:22.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.531" endtime="20201112 12:26:22.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.543" endtime="20201112 12:26:22.834"></status>
</kw>
<msg timestamp="20201112 12:26:22.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071429264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0714605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:22.541" endtime="20201112 12:26:22.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071429264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0714605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:22.838" endtime="20201112 12:26:22.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.846" endtime="20201112 12:26:22.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.539" endtime="20201112 12:26:22.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.537" endtime="20201112 12:26:22.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:22.859" level="INFO">${RESULT} = [{'time': 0.0714605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.123599999999005e-05, 'source_diff': 3.123599999999005e-05}, {'time': 0.077536611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:22.852" endtime="20201112 12:26:22.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:22.889" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:22.861" endtime="20201112 12:26:22.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.899" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:22.897" endtime="20201112 12:26:22.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.904" level="INFO">VALUE: [3.123599999999005e-05, 3.116699999999861e-05, 3.115199999999263e-05, 3.116699999999861e-05, 3.116699999999861e-05, 3.115300000000598e-05, 3.1124999999992964e-05, 3.116700000001249e-05, 3.115200000000651e-05, 3.113900000001335e-05, 3.117999999999177e-05, 3.123599999999005e-05, 3.113900000001335e-05, 3.116699999999861e-05, 3.117999999999177e-05, 3.1152999999978226e-05, 3.116699999999861e-05, 3.116599999999914e-05, 3.116699999999861e-05, 3.117999999999177e-05, 3.1180000000019525e-05, 3.117999999999177e-05, 3.116599999999914e-05, 3.1152999999978226e-05, 3.116699999999861e-05, 3.116599999999914e-05, 3.117999999999177e-05, 3.116699999999861e-05, 3.11939999999844e-05, 3.116599999999914e-05, 3.1207999999949276e-05, 3.1194000000012156e-05, 3.115300000000598e-05, 3.1208999999976506e-05, 3.1166000000026894e-05, 3.1194000000012156e-05, 3.115300000000598e-05, 3.1179999999964014e-05, 3.116599999997138e-05, 3.116599999997138e-05, 3.1166000000026894e-05, 3.115300000000598e-05, 3.1181000000046755e-05, 3.1166000000026894e-05, 3.124999999998268e-05, 3.1166000000026894e-05, 3.1166000000026894e-05, 3.1180000000019525e-05, 3.115300000000598e-05, 3.1180999999991243e-05]</msg>
<status status="PASS" starttime="20201112 12:26:22.901" endtime="20201112 12:26:22.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.891" endtime="20201112 12:26:22.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.910" endtime="20201112 12:26:22.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:22.917" endtime="20201112 12:26:22.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.914" endtime="20201112 12:26:22.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.907" endtime="20201112 12:26:22.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.185" endtime="20201112 12:26:22.941"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:22.114" endtime="20201112 12:26:22.943" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:26:00.932" endtime="20201112 12:26:22.955"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.019" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:26:23.027" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:24.136" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:26:23.018" endtime="20201112 12:26:24.137"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.139" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:24.138" endtime="20201112 12:26:24.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.017" endtime="20201112 12:26:24.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:24.142" endtime="20201112 12:26:24.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.141" endtime="20201112 12:26:24.328"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.341" endtime="20201112 12:26:24.355"></status>
</kw>
<msg timestamp="20201112 12:26:24.356" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.339" endtime="20201112 12:26:24.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.358" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.357" endtime="20201112 12:26:24.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.361" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:24.359" endtime="20201112 12:26:24.361"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:24.337" endtime="20201112 12:26:24.362"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:24.335" endtime="20201112 12:26:24.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.333" endtime="20201112 12:26:24.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:24.368" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:24.366" endtime="20201112 12:26:24.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.364" endtime="20201112 12:26:24.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.332" endtime="20201112 12:26:24.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.332" endtime="20201112 12:26:24.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.370" endtime="20201112 12:26:24.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.330" endtime="20201112 12:26:24.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.375" endtime="20201112 12:26:24.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.329" endtime="20201112 12:26:24.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.015" endtime="20201112 12:26:24.380"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:24.392" endtime="20201112 12:26:24.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.389" endtime="20201112 12:26:24.415"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.441" endtime="20201112 12:26:24.459"></status>
</kw>
<msg timestamp="20201112 12:26:24.460" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.438" endtime="20201112 12:26:24.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.465" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.462" endtime="20201112 12:26:24.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.471" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:24.467" endtime="20201112 12:26:24.472"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:24.433" endtime="20201112 12:26:24.472"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:24.428" endtime="20201112 12:26:24.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.425" endtime="20201112 12:26:24.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:24.477" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:24.476" endtime="20201112 12:26:24.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.474" endtime="20201112 12:26:24.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.423" endtime="20201112 12:26:24.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.422" endtime="20201112 12:26:24.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.479" endtime="20201112 12:26:24.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.419" endtime="20201112 12:26:24.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.416" endtime="20201112 12:26:24.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.386" endtime="20201112 12:26:24.482"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.493" endtime="20201112 12:26:24.507"></status>
</kw>
<msg timestamp="20201112 12:26:24.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.491" endtime="20201112 12:26:24.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.508" endtime="20201112 12:26:24.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.511" endtime="20201112 12:26:24.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.487" endtime="20201112 12:26:24.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.485" endtime="20201112 12:26:24.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.520" endtime="20201112 12:26:24.818"></status>
</kw>
<msg timestamp="20201112 12:26:24.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.09273, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.09273475, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201112 12:26:24.518" endtime="20201112 12:26:24.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.09273, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.09273475, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201112 12:26:24.822" endtime="20201112 12:26:24.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.830" endtime="20201112 12:26:24.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.516" endtime="20201112 12:26:24.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.514" endtime="20201112 12:26:24.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:24.837" level="INFO">${RESULT} = [{'time': 0.09273475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.092752653, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:24.833" endtime="20201112 12:26:24.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:24.850" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:24.838" endtime="20201112 12:26:24.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.855" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:26:24.854" endtime="20201112 12:26:24.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.857" level="INFO">VALUE: [4.7499999999978115e-06, 4.721999999998672e-06, 4.76400000000432e-06, 4.791999999989582e-06, 4.7639999999904425e-06, 4.7499999999978115e-06, 4.138999999986348e-06, 4.8200000000026e-06, 4.76400000000432e-06, 4.7499999999978115e-06, 4.165999999999892e-06, 4.125000000007595e-06, 4.7639999999904425e-06, 4.7499999999978115e-06, 4.777999999996951e-06, 4.152999999992857e-06, 4.166999999999366e-06, 4.138999999986348e-06, 4.750000000011689e-06, 4.152999999992857e-06, 4.152999999992857e-06, 4.7639999999904425e-06, 4.6949999999990055e-06, 4.735999999991303e-06, 4.7499999999978115e-06, 4.805999999996091e-06, 4.152999999992857e-06, 4.153000000006735e-06, 4.139000000000226e-06, 4.7499999999978115e-06, 4.124999999993717e-06, 4.7639999999904425e-06, 4.7499999999978115e-06, 4.76400000000432e-06, 4.125000000007595e-06, 4.166999999999366e-06, 4.166999999999366e-06, 4.776999999997478e-06, 4.111000000001086e-06, 4.165999999999892e-06, 4.7499999999978115e-06, 4.139000000000226e-06, 4.777999999996951e-06, 4.111000000001086e-06, 4.153000000006735e-06, 4.097999999994051e-06, 4.7499999999978115e-06, 4.735999999991303e-06, 4.7360000000051805e-06, 4.737000000004654e-06]</msg>
<status status="PASS" starttime="20201112 12:26:24.856" endtime="20201112 12:26:24.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.851" endtime="20201112 12:26:24.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.861" endtime="20201112 12:26:24.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:24.864" endtime="20201112 12:26:24.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.863" endtime="20201112 12:26:24.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.859" endtime="20201112 12:26:24.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.484" endtime="20201112 12:26:24.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.483" endtime="20201112 12:26:24.886"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.894" endtime="20201112 12:26:24.909"></status>
</kw>
<msg timestamp="20201112 12:26:24.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.893" endtime="20201112 12:26:24.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.911" endtime="20201112 12:26:24.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.914" endtime="20201112 12:26:24.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.890" endtime="20201112 12:26:24.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.888" endtime="20201112 12:26:24.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.923" endtime="20201112 12:26:25.207"></status>
</kw>
<msg timestamp="20201112 12:26:25.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023362153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.921" endtime="20201112 12:26:25.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023362153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.212" endtime="20201112 12:26:25.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.220" endtime="20201112 12:26:25.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.918" endtime="20201112 12:26:25.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.917" endtime="20201112 12:26:25.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:25.226" level="INFO">${RESULT} = [{'time': 0.023362153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.023380181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:25.223" endtime="20201112 12:26:25.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.240" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:25.227" endtime="20201112 12:26:25.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.245" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.244" endtime="20201112 12:26:25.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.247" level="INFO">VALUE: [5.360999999998867e-06, 5.36199999999834e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.34799999999877e-06, 5.9589999999998255e-06, 5.944999999996786e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.306000000000061e-06, 5.901999999998603e-06, 5.944000000000782e-06, 5.930000000001212e-06, 5.361000000002336e-06, 5.389000000001476e-06, 5.9439999999973125e-06, 5.958000000000352e-06, 5.332999999999727e-06, 5.375000000001906e-06, 5.34799999999877e-06, 5.360999999998867e-06, 5.290999999997548e-06, 5.361000000002336e-06, 5.417000000000616e-06, 5.3339999999992005e-06, 5.3339999999992005e-06, 5.290999999997548e-06, 5.930999999997216e-06, 5.958000000000352e-06, 5.360999999998867e-06, 5.34799999999877e-06, 5.971999999999922e-06, 5.346999999999297e-06, 5.9589999999998255e-06, 5.999999999999062e-06, 5.931000000000686e-06, 5.346999999999297e-06, 5.945000000000256e-06, 5.290999999997548e-06, 5.403000000001046e-06, 4.7499999999978115e-06, 5.360999999998867e-06, 5.9729999999993955e-06, 5.9729999999993955e-06, 5.319000000000157e-06, 5.958000000000352e-06, 4.8200000000026e-06, 5.3339999999992005e-06, 5.971999999999922e-06, 5.333000000003196e-06]</msg>
<status status="PASS" starttime="20201112 12:26:25.246" endtime="20201112 12:26:25.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.241" endtime="20201112 12:26:25.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.251" endtime="20201112 12:26:25.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.254" endtime="20201112 12:26:25.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.252" endtime="20201112 12:26:25.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.249" endtime="20201112 12:26:25.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.887" endtime="20201112 12:26:25.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.886" endtime="20201112 12:26:25.275"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.283" endtime="20201112 12:26:25.298"></status>
</kw>
<msg timestamp="20201112 12:26:25.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.282" endtime="20201112 12:26:25.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.299" endtime="20201112 12:26:25.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.302" endtime="20201112 12:26:25.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.279" endtime="20201112 12:26:25.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.277" endtime="20201112 12:26:25.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.312" endtime="20201112 12:26:25.597"></status>
</kw>
<msg timestamp="20201112 12:26:25.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.310" endtime="20201112 12:26:25.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.601" endtime="20201112 12:26:25.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.610" endtime="20201112 12:26:25.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.308" endtime="20201112 12:26:25.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.306" endtime="20201112 12:26:25.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:25.616" level="INFO">${RESULT} = [{'time': 0.022015028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.569999999997411e-06, 'source_diff': 6.569999999997411e-06}, {'time': 0.022033778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:25.613" endtime="20201112 12:26:25.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.630" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:25.617" endtime="20201112 12:26:25.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.634" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.633" endtime="20201112 12:26:25.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.637" level="INFO">VALUE: [6.569999999997411e-06, 6.570000000000881e-06, 6.6529999999988265e-06, 6.624999999999687e-06, 7.1669999999988965e-06, 6.555000000001837e-06, 7.209000000001076e-06, 6.541000000002267e-06, 5.9589999999998255e-06, 6.569000000001407e-06, 5.9589999999998255e-06, 6.569000000001407e-06, 7.181000000001936e-06, 7.180000000002462e-06, 6.555000000001837e-06, 6.583000000000977e-06, 5.9589999999998255e-06, 7.180999999998466e-06, 6.624999999999687e-06, 6.555999999997841e-06, 6.624999999999687e-06, 5.931000000000686e-06, 6.583000000000977e-06, 6.569999999997411e-06, 5.930000000001212e-06, 6.5980000000000205e-06, 5.958000000000352e-06, 6.555000000001837e-06, 5.903000000001546e-06, 6.570000000000881e-06, 6.499999999999562e-06, 6.540999999998798e-06, 7.1669999999988965e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 6.555000000001837e-06, 5.917000000001116e-06, 6.569999999997411e-06, 6.569000000001407e-06, 6.541999999998271e-06, 6.569000000001407e-06, 6.569000000001407e-06, 6.555000000001837e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 6.554999999998368e-06, 6.556000000001311e-06, 6.569000000001407e-06]</msg>
<status status="PASS" starttime="20201112 12:26:25.635" endtime="20201112 12:26:25.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.631" endtime="20201112 12:26:25.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.659" endtime="20201112 12:26:25.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.663" endtime="20201112 12:26:25.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.661" endtime="20201112 12:26:25.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.658" endtime="20201112 12:26:25.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.276" endtime="20201112 12:26:25.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.275" endtime="20201112 12:26:25.684"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.692" endtime="20201112 12:26:25.707"></status>
</kw>
<msg timestamp="20201112 12:26:25.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.691" endtime="20201112 12:26:25.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.708" endtime="20201112 12:26:25.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.711" endtime="20201112 12:26:25.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.688" endtime="20201112 12:26:25.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.686" endtime="20201112 12:26:25.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.721" endtime="20201112 12:26:26.006"></status>
</kw>
<msg timestamp="20201112 12:26:26.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021613153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.719" endtime="20201112 12:26:26.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021613153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.010" endtime="20201112 12:26:26.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.018" endtime="20201112 12:26:26.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.717" endtime="20201112 12:26:26.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.715" endtime="20201112 12:26:26.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:26.025" level="INFO">${RESULT} = [{'time': 0.021613153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.02163125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:26.022" endtime="20201112 12:26:26.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:26.040" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:26.026" endtime="20201112 12:26:26.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.044" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:26:26.043" endtime="20201112 12:26:26.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.047" level="INFO">VALUE: [7.777999999999952e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.791000000000048e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.2079999999981326e-06, 7.805999999999091e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.1669999999988965e-06, 7.179999999998993e-06, 7.1669999999988965e-06, 7.679999999999493e-06, 7.791999999999522e-06, 7.722000000001672e-06, 7.764000000000382e-06, 7.777000000000478e-06, 7.763999999996912e-06, 7.181000000001936e-06, 7.181000000001936e-06, 7.1529999999993266e-06, 7.180999999998466e-06, 7.777000000000478e-06, 7.804999999999618e-06, 7.165999999999423e-06, 7.181000000001936e-06, 7.764000000000382e-06, 7.1529999999993266e-06, 7.764000000000382e-06, 7.777000000000478e-06, 7.180999999998466e-06, 7.167000000002366e-06, 7.764000000000382e-06, 7.167000000002366e-06, 7.776999999997009e-06, 7.0969999999975775e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.762999999997439e-06, 7.111000000000617e-06, 7.777999999999952e-06, 7.1669999999988965e-06, 7.138999999999757e-06, 7.722000000001672e-06, 7.819999999998661e-06, 7.791999999999522e-06, 7.1669999999988965e-06]</msg>
<status status="PASS" starttime="20201112 12:26:26.045" endtime="20201112 12:26:26.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.041" endtime="20201112 12:26:26.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.050" endtime="20201112 12:26:26.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:26.054" endtime="20201112 12:26:26.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.052" endtime="20201112 12:26:26.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.049" endtime="20201112 12:26:26.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.685" endtime="20201112 12:26:26.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.684" endtime="20201112 12:26:26.074"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.083" endtime="20201112 12:26:26.097"></status>
</kw>
<msg timestamp="20201112 12:26:26.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.081" endtime="20201112 12:26:26.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.099" endtime="20201112 12:26:26.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.101" endtime="20201112 12:26:26.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.079" endtime="20201112 12:26:26.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.077" endtime="20201112 12:26:26.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.111" endtime="20201112 12:26:26.397"></status>
</kw>
<msg timestamp="20201112 12:26:26.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021584792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021592569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.110" endtime="20201112 12:26:26.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021584792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021592569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.401" endtime="20201112 12:26:26.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.409" endtime="20201112 12:26:26.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.107" endtime="20201112 12:26:26.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.105" endtime="20201112 12:26:26.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:26.416" level="INFO">${RESULT} = [{'time': 0.021592569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777000000000478e-06, 'source_diff': 7.777000000000478e-06}, {'time': 0.021608611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:26.413" endtime="20201112 12:26:26.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:26.430" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:26.417" endtime="20201112 12:26:26.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.434" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:26:26.433" endtime="20201112 12:26:26.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.437" level="INFO">VALUE: [7.777000000000478e-06, 8.389000000001007e-06, 8.957999999999883e-06, 9.014000000001632e-06, 7.791999999999522e-06, 8.375000000001437e-06, 8.374999999997967e-06, 8.387999999998064e-06, 8.971999999999453e-06, 8.375000000001437e-06, 8.375000000001437e-06, 8.361000000001867e-06, 7.777999999999952e-06, 8.375000000001437e-06, 8.388999999997537e-06, 7.777999999999952e-06, 8.375000000001437e-06, 8.36200000000134e-06, 8.389000000001007e-06, 8.444999999999286e-06, 8.957999999999883e-06, 8.374999999997967e-06, 8.985999999999023e-06, 8.375000000001437e-06, 7.764000000000382e-06, 8.347000000002297e-06, 8.999999999998592e-06, 8.375000000001437e-06, 8.360999999998397e-06, 8.971999999999453e-06, 8.374999999997967e-06, 7.735999999997772e-06, 9.026999999998259e-06, 8.374999999997967e-06, 8.389000000001007e-06, 8.985999999999023e-06, 8.375000000001437e-06, 8.971999999999453e-06, 8.388999999997537e-06, 8.346999999998828e-06, 8.375000000001437e-06, 8.999999999998592e-06, 8.318999999999688e-06, 7.764000000000382e-06, 9.000000000002062e-06, 8.389000000001007e-06, 8.374999999997967e-06, 8.361000000001867e-06, 8.332999999999258e-06, 8.985999999999023e-06]</msg>
<status status="PASS" starttime="20201112 12:26:26.435" endtime="20201112 12:26:26.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.431" endtime="20201112 12:26:26.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.440" endtime="20201112 12:26:26.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:26.443" endtime="20201112 12:26:26.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.442" endtime="20201112 12:26:26.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.438" endtime="20201112 12:26:26.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.075" endtime="20201112 12:26:26.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.075" endtime="20201112 12:26:26.464"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.473" endtime="20201112 12:26:26.488"></status>
</kw>
<msg timestamp="20201112 12:26:26.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.471" endtime="20201112 12:26:26.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.489" endtime="20201112 12:26:26.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.492" endtime="20201112 12:26:26.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.469" endtime="20201112 12:26:26.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.467" endtime="20201112 12:26:26.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.502" endtime="20201112 12:26:26.787"></status>
</kw>
<msg timestamp="20201112 12:26:26.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.500" endtime="20201112 12:26:26.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.791" endtime="20201112 12:26:26.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.800" endtime="20201112 12:26:26.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.498" endtime="20201112 12:26:26.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.496" endtime="20201112 12:26:26.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:26.806" level="INFO">${RESULT} = [{'time': 0.021877667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.021893597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:26.803" endtime="20201112 12:26:26.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:26.820" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:26.807" endtime="20201112 12:26:26.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.824" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:26:26.823" endtime="20201112 12:26:26.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.826" level="INFO">VALUE: [9.583999999999981e-06, 9.583000000000508e-06, 9.639000000002257e-06, 8.972000000002922e-06, 1.0181000000001467e-05, 8.972999999998926e-06, 9.570000000000412e-06, 9.583000000000508e-06, 9.582999999997038e-06, 9.597000000000078e-06, 8.971999999999453e-06, 9.597999999999551e-06, 8.999999999998592e-06, 1.0236000000000273e-05, 9.556000000000842e-06, 9.597999999999551e-06, 9.541000000001798e-06, 1.0194000000001563e-05, 9.596999999996608e-06, 9.597000000000078e-06, 8.999999999998592e-06, 9.583000000000508e-06, 8.971999999999453e-06, 9.583999999999981e-06, 9.568999999997468e-06, 9.597000000000078e-06, 9.597000000000078e-06, 1.0195000000001037e-05, 9.611000000003117e-06, 9.597999999999551e-06, 9.597000000000078e-06, 8.971999999999453e-06, 9.583000000000508e-06, 9.596999999996608e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.583999999999981e-06, 9.542000000001272e-06, 8.957999999999883e-06, 9.000000000002062e-06, 9.597000000000078e-06, 1.0181000000001467e-05, 9.624999999999218e-06, 9.667000000001397e-06, 9.583999999999981e-06, 9.583999999999981e-06, 9.583999999999981e-06, 9.610999999999648e-06, 8.999999999998592e-06, 9.570000000000412e-06]</msg>
<status status="PASS" starttime="20201112 12:26:26.825" endtime="20201112 12:26:26.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.821" endtime="20201112 12:26:26.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.830" endtime="20201112 12:26:26.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:26.833" endtime="20201112 12:26:26.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.832" endtime="20201112 12:26:26.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.828" endtime="20201112 12:26:26.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.465" endtime="20201112 12:26:26.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.465" endtime="20201112 12:26:26.854"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.863" endtime="20201112 12:26:26.878"></status>
</kw>
<msg timestamp="20201112 12:26:26.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.861" endtime="20201112 12:26:26.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.879" endtime="20201112 12:26:26.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.882" endtime="20201112 12:26:26.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.859" endtime="20201112 12:26:26.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.857" endtime="20201112 12:26:26.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.892" endtime="20201112 12:26:27.176"></status>
</kw>
<msg timestamp="20201112 12:26:27.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02183225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:26.890" endtime="20201112 12:26:27.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02183225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:27.181" endtime="20201112 12:26:27.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.189" endtime="20201112 12:26:27.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.888" endtime="20201112 12:26:27.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.886" endtime="20201112 12:26:27.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.195" level="INFO">${RESULT} = [{'time': 0.02183225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0181000000001467e-05, 'source_diff': 1.0181000000001467e-05}, {'time': 0.021857944, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:27.192" endtime="20201112 12:26:27.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.209" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:27.196" endtime="20201112 12:26:27.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.214" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.213" endtime="20201112 12:26:27.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.216" level="INFO">VALUE: [1.0181000000001467e-05, 1.0194000000001563e-05, 1.0791999999999052e-05, 1.0790999999999579e-05, 1.0777999999999482e-05, 1.0181000000001467e-05, 1.0790999999999579e-05, 1.0778000000002952e-05, 1.0791999999999052e-05, 1.0166999999998427e-05, 1.0806000000002092e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0750000000000343e-05, 1.0194000000001563e-05, 1.0791999999999052e-05, 1.0194000000001563e-05, 1.0179999999998524e-05, 1.0791999999999052e-05, 1.0763999999999913e-05, 1.0180000000001993e-05, 1.0792000000002522e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0167000000001897e-05, 1.0194000000001563e-05, 1.0193999999998093e-05, 1.0209000000000606e-05, 1.0180999999997997e-05, 1.0180000000001993e-05, 1.0181000000001467e-05, 1.0790999999999579e-05, 1.0791999999999052e-05, 1.0792000000002522e-05, 1.0777999999999482e-05, 1.0111000000000148e-05, 1.0137999999999814e-05, 1.0791999999999052e-05, 1.0804999999999149e-05, 1.0166999999998427e-05, 1.0207999999997663e-05, 1.0777000000000009e-05, 1.0805999999998622e-05, 1.0179999999998524e-05, 1.0167000000001897e-05, 1.0750000000000343e-05, 1.0791999999999052e-05, 1.0777999999999482e-05, 1.0181000000001467e-05, 1.0166999999998427e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.215" endtime="20201112 12:26:27.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.210" endtime="20201112 12:26:27.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.220" endtime="20201112 12:26:27.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.223" endtime="20201112 12:26:27.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.222" endtime="20201112 12:26:27.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.218" endtime="20201112 12:26:27.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.855" endtime="20201112 12:26:27.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.855" endtime="20201112 12:26:27.244"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.252" endtime="20201112 12:26:27.268"></status>
</kw>
<msg timestamp="20201112 12:26:27.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.251" endtime="20201112 12:26:27.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.269" endtime="20201112 12:26:27.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.272" endtime="20201112 12:26:27.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.248" endtime="20201112 12:26:27.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.246" endtime="20201112 12:26:27.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.281" endtime="20201112 12:26:27.567"></status>
</kw>
<msg timestamp="20201112 12:26:27.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.280" endtime="20201112 12:26:27.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.571" endtime="20201112 12:26:27.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.579" endtime="20201112 12:26:27.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.277" endtime="20201112 12:26:27.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.276" endtime="20201112 12:26:27.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.586" level="INFO">${RESULT} = [{'time': 0.021840611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1999999999998123e-05, 'source_diff': 1.1999999999998123e-05}, {'time': 0.021861625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:27.583" endtime="20201112 12:26:27.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.601" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:27.587" endtime="20201112 12:26:27.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.605" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.604" endtime="20201112 12:26:27.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.607" level="INFO">VALUE: [1.1999999999998123e-05, 1.1999999999998123e-05, 1.2000000000001593e-05, 1.1403000000000107e-05, 1.1374999999997498e-05, 1.2068999999999969e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.2000000000001593e-05, 1.1361000000001398e-05, 1.0791999999999052e-05, 1.1334000000001732e-05, 1.2000000000001593e-05, 1.1416999999999677e-05, 1.1457999999998913e-05, 1.2000000000001593e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1388999999997068e-05, 1.1361000000001398e-05, 1.1999999999998123e-05, 1.1374999999997498e-05, 1.1388999999997068e-05, 1.1374999999997498e-05, 1.1999999999998123e-05, 1.1388999999997068e-05, 1.0777999999999482e-05, 1.2000000000001593e-05, 1.1416999999999677e-05, 1.0791999999999052e-05, 1.1403000000000107e-05, 1.0790999999999579e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.2013000000001689e-05, 1.1389000000000538e-05, 1.1986000000002023e-05, 1.1402000000000634e-05, 1.1444999999998817e-05, 1.1375000000000968e-05, 1.2000000000001593e-05, 1.1403000000000107e-05, 1.1999999999998123e-05, 1.1416000000000204e-05, 1.1999999999998123e-05, 1.1999999999998123e-05, 1.1999999999998123e-05, 1.1389000000000538e-05, 1.0778000000002952e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.606" endtime="20201112 12:26:27.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.601" endtime="20201112 12:26:27.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.611" endtime="20201112 12:26:27.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.614" endtime="20201112 12:26:27.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.613" endtime="20201112 12:26:27.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.609" endtime="20201112 12:26:27.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.245" endtime="20201112 12:26:27.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.244" endtime="20201112 12:26:27.635"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.644" endtime="20201112 12:26:27.658"></status>
</kw>
<msg timestamp="20201112 12:26:27.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.642" endtime="20201112 12:26:27.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.660" endtime="20201112 12:26:27.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.662" endtime="20201112 12:26:27.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.640" endtime="20201112 12:26:27.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.637" endtime="20201112 12:26:27.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.672" endtime="20201112 12:26:27.957"></status>
</kw>
<msg timestamp="20201112 12:26:27.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.671" endtime="20201112 12:26:27.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.962" endtime="20201112 12:26:27.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.970" endtime="20201112 12:26:27.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.668" endtime="20201112 12:26:27.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.666" endtime="20201112 12:26:27.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.977" level="INFO">${RESULT} = [{'time': 0.021762653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2624999999998748e-05, 'source_diff': 1.2624999999998748e-05}, {'time': 0.021780833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:27.973" endtime="20201112 12:26:27.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.990" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:27.978" endtime="20201112 12:26:27.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.995" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.994" endtime="20201112 12:26:27.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.997" level="INFO">VALUE: [1.2624999999998748e-05, 1.3208000000000664e-05, 1.1930000000000274e-05, 1.2624999999998748e-05, 1.2000000000001593e-05, 1.2597000000003078e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.1999999999998123e-05, 1.2068999999999969e-05, 1.3209000000000137e-05, 1.2612000000002122e-05, 1.2625000000002218e-05, 1.2596999999999609e-05, 1.2069999999999442e-05, 1.3235999999999803e-05, 1.2610999999999178e-05, 1.2000000000001593e-05, 1.3166000000001954e-05, 1.3208000000000664e-05, 1.2610999999999178e-05, 1.2000000000001593e-05, 1.3207999999997194e-05, 1.2027000000001259e-05, 1.2612000000002122e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2597999999999082e-05, 1.2612000000002122e-05, 1.2027000000001259e-05, 1.2583000000000039e-05, 1.2068999999999969e-05, 1.2667000000000928e-05, 1.2013000000001689e-05, 1.1999999999998123e-05, 1.2596999999999609e-05, 1.1957999999999414e-05, 1.1986000000002023e-05, 1.1987000000001496e-05, 1.1999999999998123e-05, 1.2013000000001689e-05, 1.3181000000000997e-05, 1.2611000000002648e-05, 1.3222999999999707e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.1972000000002453e-05, 1.2000000000001593e-05, 1.2583000000000039e-05, 1.3194000000001094e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.996" endtime="20201112 12:26:27.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.991" endtime="20201112 12:26:27.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.001" endtime="20201112 12:26:28.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:28.004" endtime="20201112 12:26:28.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.003" endtime="20201112 12:26:28.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.999" endtime="20201112 12:26:28.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.636" endtime="20201112 12:26:28.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.635" endtime="20201112 12:26:28.025"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.034" endtime="20201112 12:26:28.049"></status>
</kw>
<msg timestamp="20201112 12:26:28.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.032" endtime="20201112 12:26:28.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.050" endtime="20201112 12:26:28.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.053" endtime="20201112 12:26:28.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.030" endtime="20201112 12:26:28.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.028" endtime="20201112 12:26:28.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.063" endtime="20201112 12:26:28.346"></status>
</kw>
<msg timestamp="20201112 12:26:28.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02179975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:28.061" endtime="20201112 12:26:28.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02179975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:28.350" endtime="20201112 12:26:28.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.358" endtime="20201112 12:26:28.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.058" endtime="20201112 12:26:28.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.057" endtime="20201112 12:26:28.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:28.365" level="INFO">${RESULT} = [{'time': 0.02179975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.021820056, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:28.362" endtime="20201112 12:26:28.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:28.379" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:28.366" endtime="20201112 12:26:28.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.384" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:26:28.383" endtime="20201112 12:26:28.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.386" level="INFO">VALUE: [1.3194000000001094e-05, 1.3820000000001192e-05, 1.3207999999997194e-05, 1.3805000000002149e-05, 1.3222000000000234e-05, 1.3805999999998153e-05, 1.3819000000001719e-05, 1.3833000000001289e-05, 1.3222000000000234e-05, 1.3152000000002384e-05, 1.3806000000001623e-05, 1.377699999999954e-05, 1.3805999999998153e-05, 1.381899999999825e-05, 1.376299999999997e-05, 1.3833000000001289e-05, 1.380499999999868e-05, 1.381899999999825e-05, 1.3833000000001289e-05, 1.379099999999911e-05, 1.3208000000000664e-05, 1.3805999999998153e-05, 1.3209000000000137e-05, 1.3209000000000137e-05, 1.381899999999825e-05, 1.3209000000000137e-05, 1.3791000000002579e-05, 1.3195000000000567e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.381899999999825e-05, 1.3208999999996668e-05, 1.3222000000000234e-05, 1.3806000000001623e-05, 1.379099999999911e-05, 1.381899999999825e-05, 1.3792000000002053e-05, 1.3181000000000997e-05, 1.3249999999999373e-05, 1.3819000000001719e-05, 1.3194000000001094e-05, 1.3874999999999998e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.3834000000000762e-05, 1.3806000000001623e-05, 1.3208000000000664e-05, 1.3208000000000664e-05, 1.3820000000001192e-05, 1.3208000000000664e-05]</msg>
<status status="PASS" starttime="20201112 12:26:28.385" endtime="20201112 12:26:28.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.380" endtime="20201112 12:26:28.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.390" endtime="20201112 12:26:28.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:28.393" endtime="20201112 12:26:28.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.392" endtime="20201112 12:26:28.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.388" endtime="20201112 12:26:28.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.026" endtime="20201112 12:26:28.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.025" endtime="20201112 12:26:28.414"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.423" endtime="20201112 12:26:28.438"></status>
</kw>
<msg timestamp="20201112 12:26:28.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.421" endtime="20201112 12:26:28.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.440" endtime="20201112 12:26:28.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.442" endtime="20201112 12:26:28.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.419" endtime="20201112 12:26:28.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.417" endtime="20201112 12:26:28.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.452" endtime="20201112 12:26:28.736"></status>
</kw>
<msg timestamp="20201112 12:26:28.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.450" endtime="20201112 12:26:28.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.740" endtime="20201112 12:26:28.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.748" endtime="20201112 12:26:28.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.448" endtime="20201112 12:26:28.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.446" endtime="20201112 12:26:28.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:28.755" level="INFO">${RESULT} = [{'time': 0.021917639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5028000000000263e-05, 'source_diff': 1.5028000000000263e-05}, {'time': 0.021946653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:28.752" endtime="20201112 12:26:28.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:28.769" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:28.756" endtime="20201112 12:26:28.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.773" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:26:28.772" endtime="20201112 12:26:28.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.776" level="INFO">VALUE: [1.5028000000000263e-05, 1.4944999999998848e-05, 1.4430999999998778e-05, 1.4416999999999208e-05, 1.4416999999999208e-05, 1.4416999999999208e-05, 1.4416999999999208e-05, 1.4957999999998944e-05, 1.4402999999999638e-05, 1.5028000000000263e-05, 1.4415999999999735e-05, 1.4389000000000068e-05, 1.3819000000001719e-05, 1.5014000000000693e-05, 1.4445000000001817e-05, 1.4431000000002248e-05, 1.379099999999911e-05, 1.4389000000000068e-05, 1.4402999999999638e-05, 1.4486000000001054e-05, 1.4415999999999735e-05, 1.4500000000000624e-05, 1.4415999999999735e-05, 1.4416000000003204e-05, 1.4416999999999208e-05, 1.4375000000000498e-05, 1.4417000000002678e-05, 1.3888999999999568e-05, 1.5028000000000263e-05, 1.4430000000002774e-05, 1.4415999999999735e-05, 1.5028000000000263e-05, 1.4444999999998348e-05, 1.3777999999999013e-05, 1.5055999999999403e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.4430999999998778e-05, 1.5028000000000263e-05, 1.4429999999999304e-05, 1.5013999999997224e-05, 1.4457999999998444e-05, 1.4416999999999208e-05, 1.4389000000000068e-05, 1.4416999999999208e-05, 1.502700000000079e-05, 1.5028000000000263e-05, 1.3805000000002149e-05, 1.4415999999999735e-05, 1.4415999999999735e-05]</msg>
<status status="PASS" starttime="20201112 12:26:28.774" endtime="20201112 12:26:28.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.770" endtime="20201112 12:26:28.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.779" endtime="20201112 12:26:28.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:28.782" endtime="20201112 12:26:28.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.781" endtime="20201112 12:26:28.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.777" endtime="20201112 12:26:28.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.415" endtime="20201112 12:26:28.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.415" endtime="20201112 12:26:28.803"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.812" endtime="20201112 12:26:28.827"></status>
</kw>
<msg timestamp="20201112 12:26:28.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.810" endtime="20201112 12:26:28.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.829" endtime="20201112 12:26:28.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.831" endtime="20201112 12:26:28.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.808" endtime="20201112 12:26:28.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.806" endtime="20201112 12:26:28.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.841" endtime="20201112 12:26:29.126"></status>
</kw>
<msg timestamp="20201112 12:26:29.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.840" endtime="20201112 12:26:29.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.130" endtime="20201112 12:26:29.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.138" endtime="20201112 12:26:29.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.837" endtime="20201112 12:26:29.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.835" endtime="20201112 12:26:29.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.145" level="INFO">${RESULT} = [{'time': 0.021872194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.501300000000122e-05, 'source_diff': 1.501300000000122e-05}, {'time': 0.021899222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:29.142" endtime="20201112 12:26:29.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.160" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:29.146" endtime="20201112 12:26:29.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.164" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.163" endtime="20201112 12:26:29.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.166" level="INFO">VALUE: [1.501300000000122e-05, 1.5014000000000693e-05, 1.616699999999749e-05, 1.559700000000261e-05, 1.566700000000046e-05, 1.6235999999999334e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.4930999999999278e-05, 1.5041999999999833e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.562500000000175e-05, 1.563899999999785e-05, 1.562499999999828e-05, 1.5665999999997515e-05, 1.5041999999999833e-05, 1.561100000000218e-05, 1.562500000000175e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5069999999998973e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.562499999999828e-05, 1.562500000000175e-05, 1.5611999999998183e-05, 1.502699999999732e-05, 1.5000000000001124e-05, 1.563899999999785e-05, 1.5014000000000693e-05, 1.6235999999999334e-05, 1.563899999999785e-05, 1.5055999999999403e-05, 1.559699999999914e-05, 1.562499999999828e-05, 1.562500000000175e-05, 1.5000000000001124e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.5637999999998375e-05, 1.5070000000002443e-05, 1.561099999999871e-05, 1.562500000000175e-05, 1.5694999999999598e-05, 1.562500000000175e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.165" endtime="20201112 12:26:29.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.161" endtime="20201112 12:26:29.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.170" endtime="20201112 12:26:29.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.173" endtime="20201112 12:26:29.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.172" endtime="20201112 12:26:29.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.168" endtime="20201112 12:26:29.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.804" endtime="20201112 12:26:29.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.804" endtime="20201112 12:26:29.194"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.203" endtime="20201112 12:26:29.218"></status>
</kw>
<msg timestamp="20201112 12:26:29.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.201" endtime="20201112 12:26:29.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.220" endtime="20201112 12:26:29.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.222" endtime="20201112 12:26:29.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.199" endtime="20201112 12:26:29.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.197" endtime="20201112 12:26:29.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.232" endtime="20201112 12:26:29.519"></status>
</kw>
<msg timestamp="20201112 12:26:29.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022388458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.231" endtime="20201112 12:26:29.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022388458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.523" endtime="20201112 12:26:29.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.531" endtime="20201112 12:26:29.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.228" endtime="20201112 12:26:29.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.226" endtime="20201112 12:26:29.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.538" level="INFO">${RESULT} = [{'time': 0.022388458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6235999999999334e-05, 'source_diff': 1.6235999999999334e-05}, {'time': 0.022411444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:29.535" endtime="20201112 12:26:29.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.552" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:29.539" endtime="20201112 12:26:29.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.556" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.555" endtime="20201112 12:26:29.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.559" level="INFO">VALUE: [1.6235999999999334e-05, 1.681899999999778e-05, 1.6236000000002804e-05, 1.683299999999735e-05, 1.6236000000002804e-05, 1.6221999999999764e-05, 1.6263999999998474e-05, 1.6235999999999334e-05, 1.6236999999998808e-05, 1.68889999999991e-05, 1.6223000000002707e-05, 1.6194000000000625e-05, 1.683300000000082e-05, 1.681899999999778e-05, 1.6847999999999863e-05, 1.6235999999999334e-05, 1.683300000000082e-05, 1.6264000000001944e-05, 1.6834000000000293e-05, 1.683299999999735e-05, 1.6847999999999863e-05, 1.6834000000000293e-05, 1.6221999999999764e-05, 1.6208000000000194e-05, 1.6249999999998904e-05, 1.684700000000039e-05, 1.681899999999778e-05, 1.6278000000001513e-05, 1.6195000000000098e-05, 1.6221999999999764e-05, 1.6235999999999334e-05, 1.6249999999998904e-05, 1.6221999999999764e-05, 1.687499999999953e-05, 1.684700000000039e-05, 1.688900000000257e-05, 1.6278000000001513e-05, 1.6235999999999334e-05, 1.6221999999999764e-05, 1.6235999999999334e-05, 1.6235999999999334e-05, 1.6249999999998904e-05, 1.6834000000000293e-05, 1.6249999999998904e-05, 1.6847999999999863e-05, 1.6820000000000723e-05, 1.6235999999999334e-05, 1.683300000000082e-05, 1.6222999999999238e-05, 1.6235999999999334e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.557" endtime="20201112 12:26:29.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.553" endtime="20201112 12:26:29.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.562" endtime="20201112 12:26:29.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.565" endtime="20201112 12:26:29.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.564" endtime="20201112 12:26:29.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.561" endtime="20201112 12:26:29.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.195" endtime="20201112 12:26:29.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.195" endtime="20201112 12:26:29.586"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.595" endtime="20201112 12:26:29.610"></status>
</kw>
<msg timestamp="20201112 12:26:29.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.593" endtime="20201112 12:26:29.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.612" endtime="20201112 12:26:29.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.614" endtime="20201112 12:26:29.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.591" endtime="20201112 12:26:29.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.589" endtime="20201112 12:26:29.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.624" endtime="20201112 12:26:29.909"></status>
</kw>
<msg timestamp="20201112 12:26:29.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.623" endtime="20201112 12:26:29.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.914" endtime="20201112 12:26:29.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.922" endtime="20201112 12:26:29.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.620" endtime="20201112 12:26:29.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.618" endtime="20201112 12:26:29.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.929" level="INFO">${RESULT} = [{'time': 0.021949764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7458000000001445e-05, 'source_diff': 1.7458000000001445e-05}, {'time': 0.021980181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:29.925" endtime="20201112 12:26:29.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.942" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:29.930" endtime="20201112 12:26:29.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.947" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.946" endtime="20201112 12:26:29.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.949" level="INFO">VALUE: [1.7458000000001445e-05, 1.743100000000178e-05, 1.744500000000135e-05, 1.6847999999999863e-05, 1.744499999999788e-05, 1.8056000000002403e-05, 1.8041999999999364e-05, 1.7486000000000584e-05, 1.683300000000082e-05, 1.743100000000178e-05, 1.8041999999999364e-05, 1.8041999999999364e-05, 1.743099999999831e-05, 1.7443999999998405e-05, 1.7457999999997975e-05, 1.743099999999831e-05, 1.7458000000001445e-05, 1.8041999999999364e-05, 1.7472000000001014e-05, 1.7415999999999265e-05, 1.8041999999999364e-05, 1.806899999999903e-05, 1.7471999999997545e-05, 1.8041999999999364e-05, 1.802700000000032e-05, 1.8042000000002834e-05, 1.740299999999917e-05, 1.7416000000002735e-05, 1.8027999999999794e-05, 1.811100000000121e-05, 1.743100000000178e-05, 1.744500000000135e-05, 1.8041999999999364e-05, 1.743099999999831e-05, 1.8041999999999364e-05, 1.6819999999997254e-05, 1.7472000000001014e-05, 1.8000000000000654e-05, 1.7472000000001014e-05, 1.7444000000001875e-05, 1.7443999999998405e-05, 1.743099999999831e-05, 1.7443999999998405e-05, 1.683299999999735e-05, 1.743100000000178e-05, 1.745899999999745e-05, 1.7430000000002305e-05, 1.7458000000001445e-05, 1.7458000000001445e-05, 1.7444000000001875e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.948" endtime="20201112 12:26:29.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.943" endtime="20201112 12:26:29.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.953" endtime="20201112 12:26:29.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.956" endtime="20201112 12:26:29.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.955" endtime="20201112 12:26:29.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.951" endtime="20201112 12:26:29.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.587" endtime="20201112 12:26:29.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.587" endtime="20201112 12:26:29.977"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.985" endtime="20201112 12:26:30.001"></status>
</kw>
<msg timestamp="20201112 12:26:30.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.984" endtime="20201112 12:26:30.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.002" endtime="20201112 12:26:30.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.005" endtime="20201112 12:26:30.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.981" endtime="20201112 12:26:30.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.979" endtime="20201112 12:26:30.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.015" endtime="20201112 12:26:30.298"></status>
</kw>
<msg timestamp="20201112 12:26:30.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021865875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.013" endtime="20201112 12:26:30.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021865875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.303" endtime="20201112 12:26:30.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.311" endtime="20201112 12:26:30.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.011" endtime="20201112 12:26:30.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.009" endtime="20201112 12:26:30.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.318" level="INFO">${RESULT} = [{'time': 0.021883903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8027999999999794e-05, 'source_diff': 1.8027999999999794e-05}, {'time': 0.021909806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:30.314" endtime="20201112 12:26:30.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:30.331" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:30.319" endtime="20201112 12:26:30.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.336" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:26:30.335" endtime="20201112 12:26:30.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.338" level="INFO">VALUE: [1.8027999999999794e-05, 1.8055999999998934e-05, 1.8597999999998144e-05, 1.863900000000085e-05, 1.804099999999989e-05, 1.863900000000085e-05, 1.8042000000002834e-05, 1.863899999999738e-05, 1.865299999999695e-05, 1.865300000000042e-05, 1.809700000000164e-05, 1.861100000000171e-05, 1.865300000000042e-05, 1.863899999999738e-05, 1.8638000000001376e-05, 1.865300000000042e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.8652000000000946e-05, 1.8693999999999655e-05, 1.8056000000002403e-05, 1.866699999999999e-05, 1.805500000000293e-05, 1.863900000000085e-05, 1.865300000000042e-05, 1.804099999999989e-05, 1.865300000000042e-05, 1.8000000000000654e-05, 1.8041999999999364e-05, 1.8041999999999364e-05, 1.865300000000042e-05, 1.9263999999998005e-05, 1.859699999999867e-05, 1.865300000000042e-05, 1.865300000000042e-05, 2.8056000000001996e-05, 1.865300000000042e-05, 1.804099999999989e-05, 1.8652000000000946e-05, 1.863899999999738e-05, 1.863899999999738e-05, 1.866699999999999e-05, 1.862499999999781e-05, 1.8652000000000946e-05, 1.862499999999781e-05, 1.862500000000128e-05, 1.865299999999695e-05, 1.8651999999997476e-05, 1.8638000000001376e-05, 1.859699999999867e-05]</msg>
<status status="PASS" starttime="20201112 12:26:30.337" endtime="20201112 12:26:30.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.332" endtime="20201112 12:26:30.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.342" endtime="20201112 12:26:30.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.345" endtime="20201112 12:26:30.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.344" endtime="20201112 12:26:30.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.340" endtime="20201112 12:26:30.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.978" endtime="20201112 12:26:30.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.977" endtime="20201112 12:26:30.366"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.374" endtime="20201112 12:26:30.390"></status>
</kw>
<msg timestamp="20201112 12:26:30.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.373" endtime="20201112 12:26:30.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.391" endtime="20201112 12:26:30.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.393" endtime="20201112 12:26:30.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.370" endtime="20201112 12:26:30.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.368" endtime="20201112 12:26:30.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.404" endtime="20201112 12:26:30.688"></status>
</kw>
<msg timestamp="20201112 12:26:30.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.402" endtime="20201112 12:26:30.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.692" endtime="20201112 12:26:30.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.700" endtime="20201112 12:26:30.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.399" endtime="20201112 12:26:30.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.398" endtime="20201112 12:26:30.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.707" level="INFO">${RESULT} = [{'time': 0.021879764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.984699999999992e-05, 'source_diff': 1.984699999999992e-05}, {'time': 0.021904722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:30.704" endtime="20201112 12:26:30.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:30.722" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:30.708" endtime="20201112 12:26:30.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.726" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:26:30.725" endtime="20201112 12:26:30.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.728" level="INFO">VALUE: [1.984699999999992e-05, 1.9278000000001044e-05, 1.9250000000001904e-05, 1.9250000000001904e-05, 1.9264000000001474e-05, 1.91950000000031e-05, 1.9250000000001904e-05, 1.9250000000001904e-05, 1.9249999999998435e-05, 1.9264000000001474e-05, 1.9249999999998435e-05, 1.922299999999877e-05, 1.986099999999949e-05, 1.9264000000001474e-05, 1.986099999999949e-05, 1.983300000000035e-05, 1.987499999999906e-05, 1.9249999999998435e-05, 1.9249999999998435e-05, 1.9847999999999394e-05, 1.986099999999949e-05, 1.9250000000001904e-05, 1.930500000000071e-05, 1.9249999999998435e-05, 1.9277999999997575e-05, 1.9263999999998005e-05, 1.9235999999998865e-05, 1.9249999999998435e-05, 1.984699999999992e-05, 1.987500000000253e-05, 1.986099999999949e-05, 1.986099999999949e-05, 1.9292000000000614e-05, 1.984699999999992e-05, 1.9264000000001474e-05, 1.9264000000001474e-05, 1.984699999999992e-05, 1.9847999999999394e-05, 1.926299999999853e-05, 1.984699999999992e-05, 1.9249999999998435e-05, 1.9263999999998005e-05, 1.986100000000296e-05, 1.984699999999992e-05, 1.9264000000001474e-05, 1.984699999999992e-05, 1.9915999999998296e-05, 1.984699999999992e-05, 1.9264000000001474e-05, 1.987499999999906e-05]</msg>
<status status="PASS" starttime="20201112 12:26:30.727" endtime="20201112 12:26:30.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.723" endtime="20201112 12:26:30.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.738" endtime="20201112 12:26:30.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.741" endtime="20201112 12:26:30.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.740" endtime="20201112 12:26:30.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.736" endtime="20201112 12:26:30.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.367" endtime="20201112 12:26:30.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.366" endtime="20201112 12:26:30.762"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.771" endtime="20201112 12:26:30.786"></status>
</kw>
<msg timestamp="20201112 12:26:30.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.769" endtime="20201112 12:26:30.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.788" endtime="20201112 12:26:30.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.790" endtime="20201112 12:26:30.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.766" endtime="20201112 12:26:30.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.764" endtime="20201112 12:26:30.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.800" endtime="20201112 12:26:31.085"></status>
</kw>
<msg timestamp="20201112 12:26:31.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.798" endtime="20201112 12:26:31.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.089" endtime="20201112 12:26:31.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.098" endtime="20201112 12:26:31.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.796" endtime="20201112 12:26:31.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.794" endtime="20201112 12:26:31.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.104" level="INFO">${RESULT} = [{'time': 0.021914097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.104099999999942e-05, 'source_diff': 2.104099999999942e-05}, {'time': 0.021943639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:31.101" endtime="20201112 12:26:31.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:31.118" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:31.105" endtime="20201112 12:26:31.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.123" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:26:31.122" endtime="20201112 12:26:31.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.125" level="INFO">VALUE: [2.104099999999942e-05, 1.987500000000253e-05, 1.986099999999949e-05, 1.9861999999998964e-05, 2.0472000000000545e-05, 2.1070000000001504e-05, 1.984699999999992e-05, 1.987500000000253e-05, 2.0458000000000975e-05, 1.986099999999949e-05, 2.1056000000001934e-05, 2.1069999999998035e-05, 2.044500000000088e-05, 2.0457999999997506e-05, 2.1041999999998895e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.047300000000002e-05, 2.1042000000002364e-05, 2.109700000000117e-05, 2.106900000000203e-05, 2.0458000000000975e-05, 2.0457999999997506e-05, 2.044500000000088e-05, 2.105499999999899e-05, 2.1055999999998465e-05, 2.045900000000045e-05, 2.0444000000001405e-05, 2.1042000000002364e-05, 2.0458000000000975e-05, 2.1070000000001504e-05, 2.0444000000001405e-05, 2.0471999999997076e-05, 2.0458000000000975e-05, 2.1083999999997605e-05, 2.0457999999997506e-05, 2.0458000000000975e-05, 1.991700000000124e-05, 2.0514000000002724e-05, 2.045900000000045e-05, 2.0458000000000975e-05, 2.0472000000000545e-05, 2.1069999999998035e-05, 2.045900000000045e-05, 2.043100000000131e-05, 2.0443999999997936e-05, 2.044500000000088e-05, 2.0458000000000975e-05, 2.0472000000000545e-05, 1.984699999999992e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.124" endtime="20201112 12:26:31.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.119" endtime="20201112 12:26:31.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.128" endtime="20201112 12:26:31.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.132" endtime="20201112 12:26:31.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.130" endtime="20201112 12:26:31.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.127" endtime="20201112 12:26:31.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.763" endtime="20201112 12:26:31.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.762" endtime="20201112 12:26:31.153"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.161" endtime="20201112 12:26:31.176"></status>
</kw>
<msg timestamp="20201112 12:26:31.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.160" endtime="20201112 12:26:31.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.178" endtime="20201112 12:26:31.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.180" endtime="20201112 12:26:31.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.157" endtime="20201112 12:26:31.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.155" endtime="20201112 12:26:31.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.190" endtime="20201112 12:26:31.477"></status>
</kw>
<msg timestamp="20201112 12:26:31.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.189" endtime="20201112 12:26:31.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.482" endtime="20201112 12:26:31.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.490" endtime="20201112 12:26:31.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.186" endtime="20201112 12:26:31.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.184" endtime="20201112 12:26:31.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.497" level="INFO">${RESULT} = [{'time': 0.022098222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.165299999999995e-05, 'source_diff': 2.165299999999995e-05}, {'time': 0.022128111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:31.494" endtime="20201112 12:26:31.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:31.511" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:31.498" endtime="20201112 12:26:31.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.516" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:26:31.515" endtime="20201112 12:26:31.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.518" level="INFO">VALUE: [2.165299999999995e-05, 2.1041999999998895e-05, 2.105499999999899e-05, 2.165299999999995e-05, 2.108299999999813e-05, 2.10830000000016e-05, 2.1055999999998465e-05, 2.1736000000001365e-05, 2.108299999999813e-05, 2.166699999999952e-05, 2.1070000000001504e-05, 2.1666000000000046e-05, 2.162499999999734e-05, 2.165299999999995e-05, 2.1666000000000046e-05, 2.1666000000000046e-05, 2.106899999999856e-05, 2.1041999999998895e-05, 2.1679999999999616e-05, 2.1693999999999186e-05, 2.165299999999995e-05, 2.166699999999952e-05, 2.105499999999899e-05, 2.1056000000001934e-05, 2.1055999999998465e-05, 2.1666000000000046e-05, 2.159700000000167e-05, 2.1722000000001795e-05, 2.1679999999999616e-05, 2.106899999999856e-05, 2.105499999999899e-05, 2.105500000000246e-05, 2.1666000000000046e-05, 2.165299999999995e-05, 2.1069999999998035e-05, 2.106899999999856e-05, 2.168100000000256e-05, 2.166700000000299e-05, 2.106900000000203e-05, 2.1679999999999616e-05, 2.165299999999995e-05, 2.165299999999995e-05, 2.168099999999909e-05, 2.165299999999995e-05, 2.0986000000000615e-05, 2.168099999999909e-05, 2.1679999999999616e-05, 2.10830000000016e-05, 2.166699999999952e-05, 2.1652000000000476e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.517" endtime="20201112 12:26:31.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.512" endtime="20201112 12:26:31.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.522" endtime="20201112 12:26:31.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.526" endtime="20201112 12:26:31.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.524" endtime="20201112 12:26:31.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.520" endtime="20201112 12:26:31.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.154" endtime="20201112 12:26:31.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.153" endtime="20201112 12:26:31.551"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.570" endtime="20201112 12:26:31.589"></status>
</kw>
<msg timestamp="20201112 12:26:31.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.566" endtime="20201112 12:26:31.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.593" endtime="20201112 12:26:31.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.598" endtime="20201112 12:26:31.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.561" endtime="20201112 12:26:31.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.556" endtime="20201112 12:26:31.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.620" endtime="20201112 12:26:31.908"></status>
</kw>
<msg timestamp="20201112 12:26:31.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038293014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038315264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.617" endtime="20201112 12:26:31.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038293014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038315264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.913" endtime="20201112 12:26:31.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.921" endtime="20201112 12:26:31.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.611" endtime="20201112 12:26:31.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.607" endtime="20201112 12:26:31.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.928" level="INFO">${RESULT} = [{'time': 0.038315264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2250000000001435e-05, 'source_diff': 2.2250000000001435e-05}, {'time': 0.038353319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:31.925" endtime="20201112 12:26:31.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:31.942" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:31.929" endtime="20201112 12:26:31.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.947" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:26:31.946" endtime="20201112 12:26:31.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.949" level="INFO">VALUE: [2.2250000000001435e-05, 2.2887999999998687e-05, 2.2278000000000575e-05, 2.286099999999902e-05, 2.2292000000000145e-05, 2.293099999999687e-05, 2.288899999999816e-05, 2.2264000000001005e-05, 2.2263999999994066e-05, 2.286099999999902e-05, 2.2887999999998687e-05, 2.22090000000022e-05, 2.2264000000001005e-05, 2.2292000000000145e-05, 2.22770000000011e-05, 2.2236000000001865e-05, 2.226300000000153e-05, 2.290299999999773e-05, 2.2207999999995787e-05, 2.287500000000553e-05, 2.2278000000000575e-05, 2.287499999999859e-05, 2.2320000000006224e-05, 2.2262999999994593e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.288899999999816e-05, 2.2278000000000575e-05, 2.229100000000067e-05, 2.2264000000001005e-05, 2.2263999999994066e-05, 2.2292000000000145e-05, 2.2943999999996967e-05, 2.287499999999859e-05, 2.2264000000001005e-05, 2.281900000000031e-05, 2.288899999999816e-05, 2.2292000000000145e-05, 2.2361999999997995e-05, 2.2291999999993206e-05, 2.2264000000001005e-05, 2.2847999999998925e-05, 2.287499999999859e-05, 2.2263999999994066e-05, 2.287499999999859e-05, 2.290299999999773e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.288899999999816e-05, 2.286099999999902e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.948" endtime="20201112 12:26:31.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.943" endtime="20201112 12:26:31.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.953" endtime="20201112 12:26:31.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.957" endtime="20201112 12:26:31.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.955" endtime="20201112 12:26:31.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.951" endtime="20201112 12:26:31.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.553" endtime="20201112 12:26:31.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.551" endtime="20201112 12:26:31.978"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.987" endtime="20201112 12:26:32.004"></status>
</kw>
<msg timestamp="20201112 12:26:32.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.985" endtime="20201112 12:26:32.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.005" endtime="20201112 12:26:32.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.008" endtime="20201112 12:26:32.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.983" endtime="20201112 12:26:32.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.980" endtime="20201112 12:26:32.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.018" endtime="20201112 12:26:32.304"></status>
</kw>
<msg timestamp="20201112 12:26:32.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022822236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022845722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.017" endtime="20201112 12:26:32.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022822236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022845722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.308" endtime="20201112 12:26:32.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.317" endtime="20201112 12:26:32.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.014" endtime="20201112 12:26:32.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.012" endtime="20201112 12:26:32.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.324" level="INFO">${RESULT} = [{'time': 0.022845722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3485999999999646e-05, 'source_diff': 2.3485999999999646e-05}, {'time': 0.022880875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:32.320" endtime="20201112 12:26:32.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:32.339" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:32.325" endtime="20201112 12:26:32.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.344" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:26:32.343" endtime="20201112 12:26:32.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.346" level="INFO">VALUE: [2.3485999999999646e-05, 2.3485999999999646e-05, 2.3499999999999216e-05, 2.406900000000156e-05, 2.354100000000192e-05, 2.345899999999998e-05, 2.345899999999998e-05, 2.3485999999999646e-05, 2.287499999999859e-05, 2.4098000000000175e-05, 2.40970000000007e-05, 2.3472000000000076e-05, 2.34030000000017e-05, 2.3485999999999646e-05, 2.3486000000003115e-05, 2.348700000000259e-05, 2.34169999999978e-05, 2.408300000000113e-05, 2.3472000000000076e-05, 2.287499999999859e-05, 2.40970000000007e-05, 2.3486000000003115e-05, 2.288899999999816e-05, 2.3486000000003115e-05, 2.4084000000000605e-05, 2.3472000000000076e-05, 2.2887999999998687e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.4084000000000605e-05, 2.40970000000007e-05, 2.40970000000007e-05, 2.288900000000163e-05, 2.3458000000000506e-05, 2.3486000000003115e-05, 2.3485999999999646e-05, 2.3541999999997926e-05, 2.3486000000003115e-05, 2.287499999999859e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.4069999999997566e-05, 2.413899999999941e-05, 2.345899999999998e-05, 2.287499999999859e-05, 2.3485999999999646e-05]</msg>
<status status="PASS" starttime="20201112 12:26:32.345" endtime="20201112 12:26:32.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.340" endtime="20201112 12:26:32.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.350" endtime="20201112 12:26:32.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.353" endtime="20201112 12:26:32.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.352" endtime="20201112 12:26:32.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.348" endtime="20201112 12:26:32.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.979" endtime="20201112 12:26:32.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.978" endtime="20201112 12:26:32.374"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.383" endtime="20201112 12:26:32.399"></status>
</kw>
<msg timestamp="20201112 12:26:32.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.382" endtime="20201112 12:26:32.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.400" endtime="20201112 12:26:32.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.403" endtime="20201112 12:26:32.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.379" endtime="20201112 12:26:32.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.377" endtime="20201112 12:26:32.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.413" endtime="20201112 12:26:32.700"></status>
</kw>
<msg timestamp="20201112 12:26:32.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.412" endtime="20201112 12:26:32.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.704" endtime="20201112 12:26:32.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.712" endtime="20201112 12:26:32.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.409" endtime="20201112 12:26:32.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.407" endtime="20201112 12:26:32.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.719" level="INFO">${RESULT} = [{'time': 0.022542375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.408300000000113e-05, 'source_diff': 2.408300000000113e-05}, {'time': 0.022572722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:32.716" endtime="20201112 12:26:32.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:32.733" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:32.720" endtime="20201112 12:26:32.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.738" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:26:32.737" endtime="20201112 12:26:32.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.741" level="INFO">VALUE: [2.408300000000113e-05, 2.4665999999999577e-05, 2.468100000000209e-05, 2.468100000000209e-05, 2.469499999999819e-05, 2.4084000000000605e-05, 2.469499999999819e-05, 2.406900000000156e-05, 2.469499999999819e-05, 2.469500000000166e-05, 2.468099999999862e-05, 2.468099999999862e-05, 2.4070000000001035e-05, 2.47230000000008e-05, 2.411100000000027e-05, 2.4082999999997662e-05, 2.4735999999997427e-05, 2.4068999999998092e-05, 2.40970000000007e-05, 2.4708000000001756e-05, 2.4070000000001035e-05, 2.4750000000000466e-05, 2.4735999999997427e-05, 2.4693999999998717e-05, 2.4736000000000896e-05, 2.4679999999999147e-05, 2.470900000000123e-05, 2.408300000000113e-05, 2.411100000000027e-05, 2.408300000000113e-05, 2.468100000000209e-05, 2.4680000000002617e-05, 2.468099999999862e-05, 2.470900000000123e-05, 2.4068999999998092e-05, 2.411100000000027e-05, 2.415300000000245e-05, 2.413899999999941e-05, 2.4084000000000605e-05, 2.4082999999997662e-05, 2.465299999999948e-05, 2.45970000000012e-05, 2.4098000000000175e-05, 2.469499999999819e-05, 2.4735999999997427e-05, 2.4084000000000605e-05, 2.413900000000288e-05, 2.4137999999999937e-05, 2.4708000000001756e-05, 2.4680000000002617e-05]</msg>
<status status="PASS" starttime="20201112 12:26:32.739" endtime="20201112 12:26:32.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.734" endtime="20201112 12:26:32.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.744" endtime="20201112 12:26:32.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.748" endtime="20201112 12:26:32.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.746" endtime="20201112 12:26:32.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.743" endtime="20201112 12:26:32.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.375" endtime="20201112 12:26:32.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.375" endtime="20201112 12:26:32.769"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.778" endtime="20201112 12:26:32.794"></status>
</kw>
<msg timestamp="20201112 12:26:32.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.776" endtime="20201112 12:26:32.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.795" endtime="20201112 12:26:32.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.798" endtime="20201112 12:26:32.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.774" endtime="20201112 12:26:32.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.771" endtime="20201112 12:26:32.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.808" endtime="20201112 12:26:33.094"></status>
</kw>
<msg timestamp="20201112 12:26:33.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022384458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.806" endtime="20201112 12:26:33.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022384458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.098" endtime="20201112 12:26:33.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.107" endtime="20201112 12:26:33.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.804" endtime="20201112 12:26:33.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.802" endtime="20201112 12:26:33.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.114" level="INFO">${RESULT} = [{'time': 0.022384458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5291000000000202e-05, 'source_diff': 2.5291000000000202e-05}, {'time': 0.022423389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:33.110" endtime="20201112 12:26:33.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:33.128" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:33.115" endtime="20201112 12:26:33.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.133" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:26:33.132" endtime="20201112 12:26:33.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.135" level="INFO">VALUE: [2.5291000000000202e-05, 2.588899999999769e-05, 2.590300000000073e-05, 2.5902000000001257e-05, 2.5291000000000202e-05, 2.591699999999683e-05, 2.588900000000116e-05, 2.5291999999999676e-05, 2.59170000000003e-05, 2.5291000000000202e-05, 2.590300000000073e-05, 2.5291999999999676e-05, 2.588900000000116e-05, 2.5277000000000632e-05, 2.523700000000087e-05, 2.588900000000116e-05, 2.5277000000000632e-05, 2.5291999999999676e-05, 2.590300000000073e-05, 2.5305999999999246e-05, 2.5290999999996733e-05, 2.587500000000159e-05, 2.5305999999999246e-05, 2.5264000000000536e-05, 2.5221999999998357e-05, 2.5304999999999772e-05, 2.5360999999998052e-05, 2.5902000000001257e-05, 2.5887999999998218e-05, 2.5305999999999246e-05, 2.5291999999999676e-05, 2.59170000000003e-05, 2.5304999999999772e-05, 2.588900000000116e-05, 2.5318999999999342e-05, 2.5292000000003145e-05, 2.5291999999999676e-05, 2.5291999999999676e-05, 2.5874999999998122e-05, 2.5291999999999676e-05, 2.5291999999999676e-05, 2.590300000000073e-05, 2.5291999999999676e-05, 2.5291999999999676e-05, 2.5304999999999772e-05, 2.531900000000281e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.5291999999999676e-05]</msg>
<status status="PASS" starttime="20201112 12:26:33.134" endtime="20201112 12:26:33.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.129" endtime="20201112 12:26:33.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.139" endtime="20201112 12:26:33.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.143" endtime="20201112 12:26:33.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.141" endtime="20201112 12:26:33.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.137" endtime="20201112 12:26:33.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.770" endtime="20201112 12:26:33.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.769" endtime="20201112 12:26:33.163"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.172" endtime="20201112 12:26:33.188"></status>
</kw>
<msg timestamp="20201112 12:26:33.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.171" endtime="20201112 12:26:33.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.190" endtime="20201112 12:26:33.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.193" endtime="20201112 12:26:33.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.168" endtime="20201112 12:26:33.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.166" endtime="20201112 12:26:33.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.203" endtime="20201112 12:26:33.489"></status>
</kw>
<msg timestamp="20201112 12:26:33.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.201" endtime="20201112 12:26:33.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.493" endtime="20201112 12:26:33.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.502" endtime="20201112 12:26:33.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.199" endtime="20201112 12:26:33.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.197" endtime="20201112 12:26:33.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.509" level="INFO">${RESULT} = [{'time': 0.022390361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.584700000000245e-05, 'source_diff': 2.584700000000245e-05}, {'time': 0.022431431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:33.505" endtime="20201112 12:26:33.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:33.523" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:33.510" endtime="20201112 12:26:33.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.528" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:26:33.527" endtime="20201112 12:26:33.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.530" level="INFO">VALUE: [2.584700000000245e-05, 2.590300000000073e-05, 2.6500000000002216e-05, 2.6512999999998843e-05, 2.7124999999999372e-05, 2.5832999999999412e-05, 2.6485999999999177e-05, 2.7097000000000232e-05, 2.5874999999998122e-05, 2.6499999999998747e-05, 2.6513999999998317e-05, 2.6499999999998747e-05, 2.6514000000001786e-05, 2.7151999999999038e-05, 2.6499999999998747e-05, 2.6526999999998413e-05, 2.6500000000002216e-05, 2.7110999999999802e-05, 2.7042000000001426e-05, 2.5929999999996928e-05, 2.5943999999999967e-05, 2.6499999999998747e-05, 2.6513000000002312e-05, 2.6541000000001452e-05, 2.590300000000073e-05, 2.6485999999999177e-05, 2.6569000000000592e-05, 2.647299999999908e-05, 2.5902000000001257e-05, 2.6513999999998317e-05, 2.7124999999999372e-05, 2.590300000000073e-05, 2.648699999999865e-05, 2.588899999999769e-05, 2.6514000000001786e-05, 2.5888000000001687e-05, 2.7110999999999802e-05, 2.648699999999865e-05, 2.6444000000000467e-05, 2.59170000000003e-05, 2.6514000000001786e-05, 2.7097000000000232e-05, 2.6486000000002646e-05, 2.7110999999999802e-05, 2.6527999999997887e-05, 2.7110999999999802e-05, 2.6514000000001786e-05, 2.59170000000003e-05, 2.6486000000002646e-05, 2.593099999999987e-05]</msg>
<status status="PASS" starttime="20201112 12:26:33.529" endtime="20201112 12:26:33.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.524" endtime="20201112 12:26:33.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.534" endtime="20201112 12:26:33.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.538" endtime="20201112 12:26:33.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.536" endtime="20201112 12:26:33.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.532" endtime="20201112 12:26:33.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.164" endtime="20201112 12:26:33.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.164" endtime="20201112 12:26:33.558"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.568" endtime="20201112 12:26:33.584"></status>
</kw>
<msg timestamp="20201112 12:26:33.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.566" endtime="20201112 12:26:33.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.585" endtime="20201112 12:26:33.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.588" endtime="20201112 12:26:33.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.563" endtime="20201112 12:26:33.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.561" endtime="20201112 12:26:33.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.598" endtime="20201112 12:26:33.884"></status>
</kw>
<msg timestamp="20201112 12:26:33.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02271875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:33.597" endtime="20201112 12:26:33.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02271875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:33.888" endtime="20201112 12:26:33.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.897" endtime="20201112 12:26:33.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.594" endtime="20201112 12:26:33.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.592" endtime="20201112 12:26:33.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.904" level="INFO">${RESULT} = [{'time': 0.02271875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7707999999997818e-05, 'source_diff': 2.7707999999997818e-05}, {'time': 0.022751611, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:33.900" endtime="20201112 12:26:33.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:33.919" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:33.905" endtime="20201112 12:26:33.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.924" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:26:33.923" endtime="20201112 12:26:33.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.926" level="INFO">VALUE: [2.7707999999997818e-05, 2.7708000000001287e-05, 2.766699999999858e-05, 2.715300000000198e-05, 2.7708000000001287e-05, 2.770900000000076e-05, 2.7679999999998678e-05, 2.7124999999999372e-05, 2.7110999999999802e-05, 2.766700000000205e-05, 2.7707999999997818e-05, 2.7708000000001287e-05, 2.770900000000076e-05, 2.768100000000162e-05, 2.7097000000000232e-05, 2.7179999999998178e-05, 2.772300000000033e-05, 2.7735999999996958e-05, 2.7624999999999872e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7097000000000232e-05, 2.7097999999999706e-05, 2.7110999999999802e-05, 2.712500000000284e-05, 2.769499999999772e-05, 2.7097999999999706e-05, 2.7097000000000232e-05, 2.768100000000162e-05, 2.7693999999998248e-05, 2.7707999999997818e-05, 2.7084000000000136e-05, 2.716700000000155e-05, 2.772300000000033e-05, 2.7707999999997818e-05, 2.7722000000000857e-05, 2.769500000000119e-05, 2.772300000000033e-05, 2.7110999999999802e-05, 2.7124999999999372e-05, 2.7708000000001287e-05, 2.7763999999999567e-05, 2.7110999999999802e-05, 2.769500000000119e-05, 2.712500000000284e-05, 2.7722000000000857e-05, 2.7110999999999802e-05, 2.7097999999999706e-05, 2.770899999999729e-05, 2.769499999999772e-05]</msg>
<status status="PASS" starttime="20201112 12:26:33.925" endtime="20201112 12:26:33.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.920" endtime="20201112 12:26:33.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.930" endtime="20201112 12:26:33.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.933" endtime="20201112 12:26:33.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.932" endtime="20201112 12:26:33.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.928" endtime="20201112 12:26:33.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.559" endtime="20201112 12:26:33.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.559" endtime="20201112 12:26:33.954"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.963" endtime="20201112 12:26:33.979"></status>
</kw>
<msg timestamp="20201112 12:26:33.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.962" endtime="20201112 12:26:33.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.981" endtime="20201112 12:26:33.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.984" endtime="20201112 12:26:33.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.959" endtime="20201112 12:26:33.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.957" endtime="20201112 12:26:33.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.994" endtime="20201112 12:26:34.279"></status>
</kw>
<msg timestamp="20201112 12:26:34.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.993" endtime="20201112 12:26:34.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.283" endtime="20201112 12:26:34.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.292" endtime="20201112 12:26:34.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.990" endtime="20201112 12:26:34.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.988" endtime="20201112 12:26:34.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.299" level="INFO">${RESULT} = [{'time': 0.022621986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7708000000001287e-05, 'source_diff': 2.7708000000001287e-05}, {'time': 0.022659569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:34.295" endtime="20201112 12:26:34.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:34.313" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:34.300" endtime="20201112 12:26:34.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.318" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:26:34.317" endtime="20201112 12:26:34.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.321" level="INFO">VALUE: [2.7708000000001287e-05, 2.8861000000001552e-05, 2.8916999999999832e-05, 2.8875000000001122e-05, 2.823699999999693e-05, 2.8332999999998443e-05, 2.8319999999998346e-05, 2.8319999999998346e-05, 2.8832999999998943e-05, 2.8264000000000067e-05, 2.8929999999999928e-05, 2.8334000000001386e-05, 2.8333000000001912e-05, 2.8333000000001912e-05, 2.8332999999998443e-05, 2.8304999999999303e-05, 2.8318999999998873e-05, 2.8916999999999832e-05, 2.8290999999999733e-05, 2.8320000000001816e-05, 2.8916999999999832e-05, 2.8277999999999637e-05, 2.8916999999999832e-05, 2.8305999999998777e-05, 2.8916999999999832e-05, 2.8916000000000358e-05, 2.8916999999999832e-05, 2.8889000000000692e-05, 2.8318999999998873e-05, 2.8929999999999928e-05, 2.8320000000001816e-05, 2.8957999999999068e-05, 2.8916999999999832e-05, 2.8319000000002342e-05, 2.8304999999999303e-05, 2.8263000000000593e-05, 2.8318999999998873e-05, 2.8320000000001816e-05, 2.8903000000000262e-05, 2.8319999999998346e-05, 2.8375000000000622e-05, 2.8318999999998873e-05, 2.8929999999999928e-05, 2.8304999999999303e-05, 2.8277999999999637e-05, 2.8318999999998873e-05, 2.8916000000000358e-05, 2.8320000000001816e-05, 2.8319000000002342e-05, 2.8319000000002342e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.319" endtime="20201112 12:26:34.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.314" endtime="20201112 12:26:34.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.324" endtime="20201112 12:26:34.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.328" endtime="20201112 12:26:34.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.326" endtime="20201112 12:26:34.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.323" endtime="20201112 12:26:34.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.955" endtime="20201112 12:26:34.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.955" endtime="20201112 12:26:34.349"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.358" endtime="20201112 12:26:34.373"></status>
</kw>
<msg timestamp="20201112 12:26:34.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.356" endtime="20201112 12:26:34.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.375" endtime="20201112 12:26:34.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.378" endtime="20201112 12:26:34.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.353" endtime="20201112 12:26:34.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.351" endtime="20201112 12:26:34.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.388" endtime="20201112 12:26:34.678"></status>
</kw>
<msg timestamp="20201112 12:26:34.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022456861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.386" endtime="20201112 12:26:34.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022456861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.682" endtime="20201112 12:26:34.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.691" endtime="20201112 12:26:34.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.384" endtime="20201112 12:26:34.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.382" endtime="20201112 12:26:34.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.698" level="INFO">${RESULT} = [{'time': 0.022486986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0124999999998903e-05, 'source_diff': 3.0124999999998903e-05}, {'time': 0.022529403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:34.694" endtime="20201112 12:26:34.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:34.712" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:34.699" endtime="20201112 12:26:34.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.717" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:26:34.716" endtime="20201112 12:26:34.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.719" level="INFO">VALUE: [3.0124999999998903e-05, 2.8889000000000692e-05, 2.8903000000000262e-05, 2.9528000000000887e-05, 2.8957999999999068e-05, 2.9514000000001317e-05, 2.8944000000002967e-05, 2.8902999999996792e-05, 2.9541000000000983e-05, 2.9528000000000887e-05, 2.891599999999689e-05, 3.0124999999998903e-05, 2.9514000000001317e-05, 2.9514000000001317e-05, 3.0124999999998903e-05, 2.9500000000001747e-05, 2.9527000000001413e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.8903000000000262e-05, 2.9528000000000887e-05, 3.0138999999998473e-05, 2.9514000000001317e-05, 2.9527999999997417e-05, 2.9554999999997084e-05, 2.9513999999997848e-05, 3.0124999999998903e-05, 2.890199999999732e-05, 2.9513999999997848e-05, 2.8929999999999928e-05, 3.0194000000000748e-05, 3.0124999999998903e-05, 3.0139000000001942e-05, 2.9514000000001317e-05, 2.9514000000001317e-05, 2.8888000000001218e-05, 2.9540999999997514e-05, 2.9499999999998278e-05, 2.8916000000000358e-05, 2.9513999999997848e-05, 2.9513999999997848e-05, 2.9584000000002636e-05, 2.8916000000000358e-05, 2.8903000000000262e-05, 2.9528000000000887e-05, 2.89309999999994e-05, 2.89309999999994e-05, 2.9528000000000887e-05, 2.9541999999996987e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.718" endtime="20201112 12:26:34.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.713" endtime="20201112 12:26:34.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.723" endtime="20201112 12:26:34.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.727" endtime="20201112 12:26:34.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.725" endtime="20201112 12:26:34.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.721" endtime="20201112 12:26:34.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.350" endtime="20201112 12:26:34.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.349" endtime="20201112 12:26:34.748"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.756" endtime="20201112 12:26:34.772"></status>
</kw>
<msg timestamp="20201112 12:26:34.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.755" endtime="20201112 12:26:34.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.773" endtime="20201112 12:26:34.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.776" endtime="20201112 12:26:34.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.752" endtime="20201112 12:26:34.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.750" endtime="20201112 12:26:34.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.786" endtime="20201112 12:26:35.073"></status>
</kw>
<msg timestamp="20201112 12:26:35.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.785" endtime="20201112 12:26:35.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.077" endtime="20201112 12:26:35.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.086" endtime="20201112 12:26:35.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.782" endtime="20201112 12:26:35.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.780" endtime="20201112 12:26:35.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.093" level="INFO">${RESULT} = [{'time': 0.022445306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.07370000000029e-05, 'source_diff': 3.07370000000029e-05}, {'time': 0.022481403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:35.089" endtime="20201112 12:26:35.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:35.107" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:35.094" endtime="20201112 12:26:35.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.112" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:26:35.110" endtime="20201112 12:26:35.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.114" level="INFO">VALUE: [3.07370000000029e-05, 3.07639999999991e-05, 3.073599999999996e-05, 3.0152999999998042e-05, 3.0125000000002372e-05, 3.073699999999943e-05, 3.073599999999996e-05, 3.074999999999953e-05, 3.0138999999998473e-05, 3.0125000000002372e-05, 3.069500000000072e-05, 3.0124999999998903e-05, 3.0124999999998903e-05, 3.0138999999998473e-05, 3.0124999999998903e-05, 3.073599999999996e-05, 3.074999999999953e-05, 3.0139000000001942e-05, 3.072199999999692e-05, 3.0124999999998903e-05, 3.072200000000039e-05, 3.074999999999953e-05, 3.0138999999998473e-05, 3.0139000000001942e-05, 3.0137999999999e-05, 3.0139000000001942e-05, 3.0138999999998473e-05, 3.0124999999998903e-05, 3.072200000000039e-05, 3.072200000000039e-05, 3.072200000000039e-05, 3.0042000000000957e-05, 3.072299999999986e-05, 3.017999999999771e-05, 3.073599999999996e-05, 3.0110999999999333e-05, 3.07639999999991e-05, 3.074999999999953e-05, 3.0124999999998903e-05, 3.072299999999986e-05, 3.0125000000002372e-05, 3.0137999999999e-05, 3.072200000000039e-05, 3.073599999999996e-05, 3.082000000000085e-05, 3.0124999999998903e-05, 3.0125000000002372e-05, 3.070800000000082e-05, 3.070800000000082e-05, 3.076400000000257e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.113" endtime="20201112 12:26:35.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.108" endtime="20201112 12:26:35.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.118" endtime="20201112 12:26:35.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.121" endtime="20201112 12:26:35.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.120" endtime="20201112 12:26:35.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.116" endtime="20201112 12:26:35.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.748" endtime="20201112 12:26:35.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.748" endtime="20201112 12:26:35.142"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.151" endtime="20201112 12:26:35.167"></status>
</kw>
<msg timestamp="20201112 12:26:35.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.150" endtime="20201112 12:26:35.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.168" endtime="20201112 12:26:35.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.171" endtime="20201112 12:26:35.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.147" endtime="20201112 12:26:35.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.145" endtime="20201112 12:26:35.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.181" endtime="20201112 12:26:35.469"></status>
</kw>
<msg timestamp="20201112 12:26:35.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.180" endtime="20201112 12:26:35.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.473" endtime="20201112 12:26:35.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.482" endtime="20201112 12:26:35.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.177" endtime="20201112 12:26:35.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.175" endtime="20201112 12:26:35.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.490" level="INFO">${RESULT} = [{'time': 0.022448153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.073599999999996e-05, 'source_diff': 3.073599999999996e-05}, {'time': 0.022485319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:35.486" endtime="20201112 12:26:35.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:35.505" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:35.491" endtime="20201112 12:26:35.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.510" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:26:35.508" endtime="20201112 12:26:35.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.512" level="INFO">VALUE: [3.073599999999996e-05, 3.133300000000144e-05, 3.1348000000000487e-05, 3.138900000000319e-05, 3.198600000000121e-05, 3.19449999999985e-05, 3.134700000000101e-05, 3.194500000000197e-05, 3.186100000000108e-05, 3.201400000000035e-05, 3.1332999999997974e-05, 3.194500000000197e-05, 3.133300000000144e-05, 3.194399999999903e-05, 3.1332999999997974e-05, 3.134700000000101e-05, 3.133400000000092e-05, 3.133400000000092e-05, 3.1332999999997974e-05, 3.134700000000101e-05, 3.19579999999986e-05, 3.133400000000092e-05, 3.194399999999903e-05, 3.190200000000032e-05, 3.132000000000135e-05, 3.194399999999903e-05, 3.133300000000144e-05, 3.1346999999997543e-05, 3.191699999999936e-05, 3.188900000000022e-05, 3.1332999999997974e-05, 3.193000000000293e-05, 3.193000000000293e-05, 3.131900000000187e-05, 3.134700000000101e-05, 3.133300000000144e-05, 3.134700000000101e-05, 3.19579999999986e-05, 3.1318999999998404e-05, 3.12639999999996e-05, 3.200000000000078e-05, 3.1360999999997113e-05, 3.1360999999997113e-05, 3.134700000000101e-05, 3.134700000000101e-05, 3.133399999999745e-05, 3.133300000000144e-05, 3.19310000000024e-05, 3.134700000000101e-05, 3.133300000000144e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.511" endtime="20201112 12:26:35.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.506" endtime="20201112 12:26:35.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.516" endtime="20201112 12:26:35.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.520" endtime="20201112 12:26:35.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.518" endtime="20201112 12:26:35.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.514" endtime="20201112 12:26:35.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.143" endtime="20201112 12:26:35.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.143" endtime="20201112 12:26:35.541"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.549" endtime="20201112 12:26:35.566"></status>
</kw>
<msg timestamp="20201112 12:26:35.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.548" endtime="20201112 12:26:35.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.568" endtime="20201112 12:26:35.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.570" endtime="20201112 12:26:35.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.545" endtime="20201112 12:26:35.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.543" endtime="20201112 12:26:35.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.581" endtime="20201112 12:26:35.866"></status>
</kw>
<msg timestamp="20201112 12:26:35.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022741153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.579" endtime="20201112 12:26:35.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022741153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.871" endtime="20201112 12:26:35.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.879" endtime="20201112 12:26:35.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.576" endtime="20201112 12:26:35.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.575" endtime="20201112 12:26:35.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.887" level="INFO">${RESULT} = [{'time': 0.022773722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2568999999999654e-05, 'source_diff': 3.2568999999999654e-05}, {'time': 0.022814889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:35.883" endtime="20201112 12:26:35.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:35.901" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:35.888" endtime="20201112 12:26:35.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.905" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:26:35.904" endtime="20201112 12:26:35.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.908" level="INFO">VALUE: [3.2568999999999654e-05, 3.318100000000018e-05, 3.254199999999999e-05, 3.2541000000000514e-05, 3.19449999999985e-05, 3.252800000000042e-05, 3.250000000000128e-05, 3.251400000000085e-05, 3.254199999999999e-05, 3.256999999999913e-05, 3.251400000000085e-05, 3.19440000000025e-05, 3.252800000000042e-05, 3.2555000000000084e-05, 3.198600000000121e-05, 3.313900000000147e-05, 3.2555000000000084e-05, 3.198599999999774e-05, 3.252800000000042e-05, 3.254199999999999e-05, 3.255599999999956e-05, 3.191699999999936e-05, 3.193099999999893e-05, 3.194399999999903e-05, 3.254199999999999e-05, 3.254199999999999e-05, 3.191699999999936e-05, 3.195800000000207e-05, 3.254199999999999e-05, 3.315299999999757e-05, 3.313799999999853e-05, 3.247299999999814e-05, 3.200000000000078e-05, 3.254199999999999e-05, 3.248600000000171e-05, 3.252799999999695e-05, 3.250000000000128e-05, 3.261100000000183e-05, 3.194399999999903e-05, 3.19579999999986e-05, 3.198599999999774e-05, 3.2527000000000944e-05, 3.195800000000207e-05, 3.19440000000025e-05, 3.316700000000061e-05, 3.2541000000000514e-05, 3.255600000000303e-05, 3.25700000000026e-05, 3.2555000000000084e-05, 3.316599999999767e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.906" endtime="20201112 12:26:35.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.902" endtime="20201112 12:26:35.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.917" endtime="20201112 12:26:35.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.921" endtime="20201112 12:26:35.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.919" endtime="20201112 12:26:35.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.915" endtime="20201112 12:26:35.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.541" endtime="20201112 12:26:35.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.541" endtime="20201112 12:26:35.942"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.951" endtime="20201112 12:26:35.967"></status>
</kw>
<msg timestamp="20201112 12:26:35.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.949" endtime="20201112 12:26:35.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.969" endtime="20201112 12:26:35.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.971" endtime="20201112 12:26:35.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.946" endtime="20201112 12:26:35.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.944" endtime="20201112 12:26:35.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.982" endtime="20201112 12:26:36.267"></status>
</kw>
<msg timestamp="20201112 12:26:36.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.980" endtime="20201112 12:26:36.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.272" endtime="20201112 12:26:36.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.280" endtime="20201112 12:26:36.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.978" endtime="20201112 12:26:36.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.976" endtime="20201112 12:26:36.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:36.287" level="INFO">${RESULT} = [{'time': 0.022441847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.870800000000188e-05, 'source_diff': 3.870800000000188e-05}, {'time': 0.022493806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:36.283" endtime="20201112 12:26:36.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:36.301" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:36.288" endtime="20201112 12:26:36.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.306" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:26:36.305" endtime="20201112 12:26:36.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.308" level="INFO">VALUE: [3.870800000000188e-05, 3.8875000000000715e-05, 3.8790999999999826e-05, 3.819399999999834e-05, 3.8667000000002644e-05, 3.8290999999999326e-05, 3.823600000000052e-05, 3.8124999999999964e-05, 3.8304999999998895e-05, 3.804199999999855e-05, 3.804199999999855e-05, 3.850000000000034e-05, 3.8361000000000645e-05, 3.8597000000001325e-05, 3.84720000000012e-05, 3.87919999999993e-05, 3.854200000000252e-05, 3.87919999999993e-05, 3.865200000000013e-05, 3.8459000000001103e-05, 3.8124999999999964e-05, 3.8625000000000465e-05, 3.850000000000034e-05, 3.8290999999999326e-05, 3.876400000000016e-05, 3.8790999999999826e-05, 3.822200000000095e-05, 3.8790999999999826e-05, 3.8874999999997245e-05, 3.8111000000000395e-05, 3.8639000000000034e-05, 3.89720000000017e-05, 3.895799999999866e-05, 3.87919999999993e-05, 3.832000000000141e-05, 3.8818999999998965e-05, 3.8875000000000715e-05, 3.8111000000000395e-05, 3.8611000000000895e-05, 3.89859999999978e-05, 3.8959000000001603e-05, 3.851399999999991e-05, 3.89720000000017e-05, 3.8138999999999534e-05, 3.84720000000012e-05, 3.825000000000009e-05, 3.869400000000231e-05, 3.8625000000000465e-05, 3.8804999999999396e-05, 3.8388999999999784e-05]</msg>
<status status="PASS" starttime="20201112 12:26:36.307" endtime="20201112 12:26:36.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.302" endtime="20201112 12:26:36.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.312" endtime="20201112 12:26:36.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.316" endtime="20201112 12:26:36.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.314" endtime="20201112 12:26:36.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.310" endtime="20201112 12:26:36.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.942" endtime="20201112 12:26:36.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.942" endtime="20201112 12:26:36.337"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.346" endtime="20201112 12:26:36.362"></status>
</kw>
<msg timestamp="20201112 12:26:36.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.344" endtime="20201112 12:26:36.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.364" endtime="20201112 12:26:36.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.367" endtime="20201112 12:26:36.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.341" endtime="20201112 12:26:36.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.339" endtime="20201112 12:26:36.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.377" endtime="20201112 12:26:36.662"></status>
</kw>
<msg timestamp="20201112 12:26:36.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022499944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.375" endtime="20201112 12:26:36.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022499944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.667" endtime="20201112 12:26:36.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.675" endtime="20201112 12:26:36.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.373" endtime="20201112 12:26:36.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.371" endtime="20201112 12:26:36.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:36.682" level="INFO">${RESULT} = [{'time': 0.022539458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.951399999999744e-05, 'source_diff': 3.951399999999744e-05}, {'time': 0.022594444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:36.679" endtime="20201112 12:26:36.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:36.696" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:36.683" endtime="20201112 12:26:36.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.701" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:26:36.700" endtime="20201112 12:26:36.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.704" level="INFO">VALUE: [3.951399999999744e-05, 3.9611000000001895e-05, 3.9777000000001256e-05, 3.923600000000152e-05, 3.977799999999726e-05, 3.9041000000000076e-05, 3.958399999999876e-05, 3.919399999999934e-05, 3.999999999999837e-05, 3.976400000000116e-05, 3.902799999999998e-05, 3.9375000000001215e-05, 3.9639000000001035e-05, 3.9333000000002505e-05, 3.905599999999912e-05, 3.954200000000005e-05, 3.9223000000001423e-05, 3.9776999999997786e-05, 3.9082999999998785e-05, 3.9054999999999646e-05, 3.9041000000000076e-05, 3.9041000000000076e-05, 3.948600000000177e-05, 3.9568999999999716e-05, 3.9041000000000076e-05, 3.972199999999898e-05, 3.9360999999998175e-05, 3.9389000000000784e-05, 3.9611000000001895e-05, 3.9903000000000854e-05, 3.92919999999998e-05, 3.923599999999805e-05, 3.9958999999999134e-05, 3.9875000000001715e-05, 3.9860999999998675e-05, 3.9458999999998634e-05, 3.9459000000002104e-05, 3.9917000000000424e-05, 3.945799999999916e-05, 3.9791000000000826e-05, 3.969399999999984e-05, 3.9291000000000326e-05, 3.9541000000000576e-05, 3.970800000000288e-05, 3.9653000000000604e-05, 3.977800000000073e-05, 3.9903000000000854e-05, 3.9625000000001465e-05, 3.94720000000022e-05, 3.929200000000327e-05]</msg>
<status status="PASS" starttime="20201112 12:26:36.702" endtime="20201112 12:26:36.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.697" endtime="20201112 12:26:36.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.707" endtime="20201112 12:26:36.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.711" endtime="20201112 12:26:36.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.709" endtime="20201112 12:26:36.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.706" endtime="20201112 12:26:36.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.337" endtime="20201112 12:26:36.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.337" endtime="20201112 12:26:36.732"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.741" endtime="20201112 12:26:36.758"></status>
</kw>
<msg timestamp="20201112 12:26:36.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.739" endtime="20201112 12:26:36.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.759" endtime="20201112 12:26:36.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.762" endtime="20201112 12:26:36.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.736" endtime="20201112 12:26:36.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.734" endtime="20201112 12:26:36.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.772" endtime="20201112 12:26:37.058"></status>
</kw>
<msg timestamp="20201112 12:26:37.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022496986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.771" endtime="20201112 12:26:37.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022496986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.063" endtime="20201112 12:26:37.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.071" endtime="20201112 12:26:37.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.768" endtime="20201112 12:26:37.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.766" endtime="20201112 12:26:37.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.078" level="INFO">${RESULT} = [{'time': 0.022537833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0847000000000105e-05, 'source_diff': 4.0847000000000105e-05}, {'time': 0.022597847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:37.075" endtime="20201112 12:26:37.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:37.093" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:37.079" endtime="20201112 12:26:37.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.098" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:26:37.097" endtime="20201112 12:26:37.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.101" level="INFO">VALUE: [4.0847000000000105e-05, 4.0639000000002035e-05, 4.0305000000000896e-05, 4.0874999999999245e-05, 4.099999999999937e-05, 4.079199999999783e-05, 4.004200000000055e-05, 4.054199999999758e-05, 4.005600000000012e-05, 4.002800000000098e-05, 4.004200000000055e-05, 4.0153000000001104e-05, 4.0138999999998065e-05, 4.0472999999999204e-05, 4.0624999999998995e-05, 4.095800000000066e-05, 4.06119999999989e-05, 4.101400000000241e-05, 4.094400000000109e-05, 4.0277000000001756e-05, 4.020799999999991e-05, 4.0805000000001396e-05, 4.004199999999708e-05, 4.0097000000002825e-05, 4.020799999999991e-05, 4.049999999999887e-05, 4.080600000000087e-05, 4.070800000000041e-05, 4.07920000000013e-05, 4.054199999999758e-05, 4.004200000000055e-05, 4.0194999999999814e-05, 4.079199999999783e-05, 4.0722999999999454e-05, 4.099999999999937e-05, 4.01119999999984e-05, 4.104200000000155e-05, 4.045800000000016e-05, 4.045800000000016e-05, 4.0625000000002465e-05, 4.102800000000198e-05, 4.0653000000001605e-05, 4.097200000000023e-05, 4.0375000000002215e-05, 4.006999999999969e-05, 4.002800000000098e-05, 4.058399999999976e-05, 4.0860999999999675e-05, 4.095800000000066e-05, 4.0110999999998925e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.099" endtime="20201112 12:26:37.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.094" endtime="20201112 12:26:37.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.104" endtime="20201112 12:26:37.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.108" endtime="20201112 12:26:37.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.106" endtime="20201112 12:26:37.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.103" endtime="20201112 12:26:37.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.733" endtime="20201112 12:26:37.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.732" endtime="20201112 12:26:37.129"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.138" endtime="20201112 12:26:37.154"></status>
</kw>
<msg timestamp="20201112 12:26:37.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.136" endtime="20201112 12:26:37.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.156" endtime="20201112 12:26:37.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.158" endtime="20201112 12:26:37.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.134" endtime="20201112 12:26:37.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.131" endtime="20201112 12:26:37.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.169" endtime="20201112 12:26:37.454"></status>
</kw>
<msg timestamp="20201112 12:26:37.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.167" endtime="20201112 12:26:37.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.459" endtime="20201112 12:26:37.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.467" endtime="20201112 12:26:37.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.165" endtime="20201112 12:26:37.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.163" endtime="20201112 12:26:37.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.474" level="INFO">${RESULT} = [{'time': 0.022399653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.172199999999751e-05, 'source_diff': 4.172199999999751e-05}, {'time': 0.022454597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:37.471" endtime="20201112 12:26:37.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:37.488" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:37.475" endtime="20201112 12:26:37.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.493" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:26:37.492" endtime="20201112 12:26:37.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.495" level="INFO">VALUE: [4.172199999999751e-05, 4.152799999999901e-05, 4.1931000000001994e-05, 4.179199999999883e-05, 4.127800000000223e-05, 4.194399999999862e-05, 4.130600000000137e-05, 4.1361000000000175e-05, 4.1624999999999995e-05, 4.1945000000001564e-05, 4.180600000000187e-05, 4.154199999999858e-05, 4.105599999999765e-05, 4.1875000000000245e-05, 4.197200000000123e-05, 4.1790999999999356e-05, 4.1055000000001646e-05, 4.120800000000091e-05, 4.1611000000000425e-05, 4.1209000000000384e-05, 4.1110999999999925e-05, 4.1888999999999815e-05, 4.1667000000002175e-05, 4.177799999999926e-05, 4.152799999999901e-05, 4.154199999999858e-05, 4.155600000000162e-05, 4.1124999999999495e-05, 4.1139000000002535e-05, 4.1125000000002965e-05, 4.1459000000000634e-05, 4.1624999999999995e-05, 4.1125000000002965e-05, 4.1083000000000786e-05, 4.1790999999999356e-05, 4.1054999999998176e-05, 4.120799999999744e-05, 4.1652999999999135e-05, 4.120800000000091e-05, 4.1833000000001536e-05, 4.127800000000223e-05, 4.172199999999751e-05, 4.1138999999999065e-05, 4.1667000000002175e-05, 4.1110999999999925e-05, 4.18059999999984e-05, 4.1195000000000814e-05, 4.18059999999984e-05, 4.1666999999998705e-05, 4.1431000000001494e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.494" endtime="20201112 12:26:37.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.489" endtime="20201112 12:26:37.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.499" endtime="20201112 12:26:37.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.503" endtime="20201112 12:26:37.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.501" endtime="20201112 12:26:37.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.497" endtime="20201112 12:26:37.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.130" endtime="20201112 12:26:37.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.129" endtime="20201112 12:26:37.524"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.533" endtime="20201112 12:26:37.550"></status>
</kw>
<msg timestamp="20201112 12:26:37.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.531" endtime="20201112 12:26:37.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.552" endtime="20201112 12:26:37.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.554" endtime="20201112 12:26:37.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.529" endtime="20201112 12:26:37.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.526" endtime="20201112 12:26:37.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.565" endtime="20201112 12:26:37.851"></status>
</kw>
<msg timestamp="20201112 12:26:37.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.563" endtime="20201112 12:26:37.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.855" endtime="20201112 12:26:37.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.864" endtime="20201112 12:26:37.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.561" endtime="20201112 12:26:37.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.559" endtime="20201112 12:26:37.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.871" level="INFO">${RESULT} = [{'time': 0.022663694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.215200000000016e-05, 'source_diff': 4.215200000000016e-05}, {'time': 0.022717694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:37.867" endtime="20201112 12:26:37.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:37.885" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:37.872" endtime="20201112 12:26:37.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.890" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:26:37.889" endtime="20201112 12:26:37.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.892" level="INFO">VALUE: [4.215200000000016e-05, 4.201300000000047e-05, 4.279199999999983e-05, 4.2361000000001175e-05, 4.2874999999997776e-05, 4.2318999999998996e-05, 4.2374999999997276e-05, 4.277799999999679e-05, 4.202799999999951e-05, 4.2375000000000745e-05, 4.2653000000000135e-05, 4.2125000000000495e-05, 4.2958999999998665e-05, 4.301399999999747e-05, 4.279199999999983e-05, 4.2527000000000537e-05, 4.273600000000155e-05, 4.2625000000000995e-05, 4.2290999999999856e-05, 4.2875000000001245e-05, 4.2319000000002466e-05, 4.2361000000001175e-05, 4.2139000000000065e-05, 4.2625000000000995e-05, 4.2611000000001426e-05, 4.2111000000000925e-05, 4.2361000000001175e-05, 4.204199999999908e-05, 4.270799999999894e-05, 4.295799999999919e-05, 4.2527000000000537e-05, 4.279199999999983e-05, 4.277800000000026e-05, 4.279199999999983e-05, 4.238800000000084e-05, 4.2944999999999095e-05, 4.263800000000109e-05, 4.2791000000000357e-05, 4.2889000000000815e-05, 4.2804999999999926e-05, 4.2541000000000107e-05, 4.269399999999937e-05, 4.245799999999869e-05, 4.279199999999983e-05, 4.254199999999958e-05, 4.272199999999851e-05, 4.244400000000259e-05, 4.227799999999976e-05, 4.254199999999958e-05, 4.2875000000001245e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.891" endtime="20201112 12:26:37.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.886" endtime="20201112 12:26:37.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.896" endtime="20201112 12:26:37.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.900" endtime="20201112 12:26:37.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.898" endtime="20201112 12:26:37.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.894" endtime="20201112 12:26:37.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.525" endtime="20201112 12:26:37.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.524" endtime="20201112 12:26:37.921"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.930" endtime="20201112 12:26:37.947"></status>
</kw>
<msg timestamp="20201112 12:26:37.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.928" endtime="20201112 12:26:37.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.949" endtime="20201112 12:26:37.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.951" endtime="20201112 12:26:37.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.925" endtime="20201112 12:26:37.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.923" endtime="20201112 12:26:37.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.962" endtime="20201112 12:26:38.247"></status>
</kw>
<msg timestamp="20201112 12:26:38.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022926333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022969806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.960" endtime="20201112 12:26:38.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022926333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022969806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.251" endtime="20201112 12:26:38.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.260" endtime="20201112 12:26:38.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.957" endtime="20201112 12:26:38.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.956" endtime="20201112 12:26:38.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.267" level="INFO">${RESULT} = [{'time': 0.022969806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3472999999998735e-05, 'source_diff': 4.3472999999998735e-05}, {'time': 0.023032819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:38.263" endtime="20201112 12:26:38.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:38.281" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:38.268" endtime="20201112 12:26:38.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.286" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:26:38.284" endtime="20201112 12:26:38.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.288" level="INFO">VALUE: [4.3472999999998735e-05, 4.345799999999969e-05, 4.377699999999832e-05, 4.369400000000037e-05, 4.344400000000012e-05, 4.326400000000119e-05, 4.354200000000058e-05, 4.369400000000037e-05, 4.3125000000001495e-05, 4.344400000000012e-05, 4.3653000000001135e-05, 4.397199999999976e-05, 4.329200000000033e-05, 4.305599999999965e-05, 4.3874999999998776e-05, 4.379200000000083e-05, 4.331999999999947e-05, 4.326300000000172e-05, 4.3055000000000176e-05, 4.320799999999944e-05, 4.3139000000001065e-05, 4.379099999999789e-05, 4.370799999999994e-05, 4.3624999999998526e-05, 4.377800000000126e-05, 4.3374999999998276e-05, 4.329200000000033e-05, 4.3360999999998706e-05, 4.329200000000033e-05, 4.354200000000058e-05, 4.352800000000101e-05, 4.3874999999998776e-05, 4.38060000000004e-05, 4.304200000000008e-05, 4.3068999999999746e-05, 4.3833000000000066e-05, 4.327800000000076e-05, 4.3096999999998886e-05, 4.322200000000248e-05, 4.327700000000129e-05, 4.373599999999908e-05, 4.3138999999997596e-05, 4.393000000000105e-05, 4.329200000000033e-05, 4.354200000000058e-05, 4.322199999999901e-05, 4.327800000000076e-05, 4.3374999999998276e-05, 4.3639000000001565e-05, 4.33059999999999e-05]</msg>
<status status="PASS" starttime="20201112 12:26:38.287" endtime="20201112 12:26:38.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.282" endtime="20201112 12:26:38.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.292" endtime="20201112 12:26:38.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.295" endtime="20201112 12:26:38.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.294" endtime="20201112 12:26:38.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.290" endtime="20201112 12:26:38.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.922" endtime="20201112 12:26:38.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.921" endtime="20201112 12:26:38.316"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.325" endtime="20201112 12:26:38.343"></status>
</kw>
<msg timestamp="20201112 12:26:38.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.324" endtime="20201112 12:26:38.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.344" endtime="20201112 12:26:38.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.347" endtime="20201112 12:26:38.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.321" endtime="20201112 12:26:38.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.319" endtime="20201112 12:26:38.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.357" endtime="20201112 12:26:38.643"></status>
</kw>
<msg timestamp="20201112 12:26:38.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022648944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.356" endtime="20201112 12:26:38.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022648944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.647" endtime="20201112 12:26:38.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.656" endtime="20201112 12:26:38.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.353" endtime="20201112 12:26:38.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.351" endtime="20201112 12:26:38.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.663" level="INFO">${RESULT} = [{'time': 0.022648944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.49999999999999e-05, 'source_diff': 4.49999999999999e-05}, {'time': 0.022709958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:38.659" endtime="20201112 12:26:38.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:38.678" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:38.664" endtime="20201112 12:26:38.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.683" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:26:38.682" endtime="20201112 12:26:38.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.685" level="INFO">VALUE: [4.49999999999999e-05, 4.497199999999729e-05, 4.480499999999846e-05, 4.420800000000044e-05, 4.494399999999815e-05, 4.443000000000155e-05, 4.479199999999836e-05, 4.4374999999999276e-05, 4.479199999999836e-05, 4.4874999999999776e-05, 4.4847000000000636e-05, 4.4874999999999776e-05, 4.43060000000009e-05, 4.4874999999999776e-05, 4.429200000000133e-05, 4.452799999999854e-05, 4.4569000000001247e-05, 4.4917000000001955e-05, 4.495800000000119e-05, 4.444399999999765e-05, 4.445800000000069e-05, 4.429100000000186e-05, 4.4110999999999456e-05, 4.422200000000001e-05, 4.447200000000026e-05, 4.48060000000014e-05, 4.4888999999999346e-05, 4.483400000000054e-05, 4.420800000000044e-05, 4.4639000000002566e-05, 4.4459000000000165e-05, 4.4610999999999956e-05, 4.429200000000133e-05, 4.451399999999897e-05, 4.422200000000001e-05, 4.465200000000266e-05, 4.441599999999851e-05, 4.447200000000026e-05, 4.4624999999999526e-05, 4.479100000000236e-05, 4.4861000000000206e-05, 4.447200000000026e-05, 4.4125000000002496e-05, 4.447200000000026e-05, 4.423599999999958e-05, 4.4888999999999346e-05, 4.4959000000000665e-05, 4.480599999999793e-05, 4.402800000000151e-05, 4.457000000000072e-05]</msg>
<status status="PASS" starttime="20201112 12:26:38.684" endtime="20201112 12:26:38.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.679" endtime="20201112 12:26:38.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.689" endtime="20201112 12:26:38.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.693" endtime="20201112 12:26:38.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.691" endtime="20201112 12:26:38.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.687" endtime="20201112 12:26:38.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.317" endtime="20201112 12:26:38.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.317" endtime="20201112 12:26:38.713"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.722" endtime="20201112 12:26:38.740"></status>
</kw>
<msg timestamp="20201112 12:26:38.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.721" endtime="20201112 12:26:38.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.741" endtime="20201112 12:26:38.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.744" endtime="20201112 12:26:38.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.718" endtime="20201112 12:26:38.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.716" endtime="20201112 12:26:38.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.754" endtime="20201112 12:26:39.041"></status>
</kw>
<msg timestamp="20201112 12:26:39.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.753" endtime="20201112 12:26:39.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.045" endtime="20201112 12:26:39.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.053" endtime="20201112 12:26:39.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.750" endtime="20201112 12:26:39.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.748" endtime="20201112 12:26:39.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.061" level="INFO">${RESULT} = [{'time': 0.022525708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.566599999999976e-05, 'source_diff': 4.566599999999976e-05}, {'time': 0.022584722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:39.057" endtime="20201112 12:26:39.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:39.075" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:39.062" endtime="20201112 12:26:39.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.079" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:26:39.078" endtime="20201112 12:26:39.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.082" level="INFO">VALUE: [4.566599999999976e-05, 4.555500000000268e-05, 4.522200000000101e-05, 4.530499999999896e-05, 4.522199999999754e-05, 4.595799999999872e-05, 4.5639000000000096e-05, 4.545800000000169e-05, 4.579199999999936e-05, 4.5388999999999846e-05, 4.508400000000079e-05, 4.511099999999699e-05, 4.5459000000001165e-05, 4.598599999999786e-05, 4.58329999999986e-05, 4.5889000000000346e-05, 4.5111000000000456e-05, 4.579099999999989e-05, 4.5069000000001747e-05, 4.522200000000101e-05, 4.545800000000169e-05, 4.5138999999999596e-05, 4.5152999999999166e-05, 4.580599999999893e-05, 4.504199999999861e-05, 4.584699999999817e-05, 4.5958999999998196e-05, 4.5153000000002635e-05, 4.5138999999999596e-05, 4.558400000000129e-05, 4.58060000000024e-05, 4.506899999999828e-05, 4.555499999999921e-05, 4.520799999999797e-05, 4.595800000000219e-05, 4.5611000000000956e-05, 4.547200000000126e-05, 4.563899999999663e-05, 4.5097000000000886e-05, 4.579199999999936e-05, 4.505600000000165e-05, 4.588899999999688e-05, 4.529199999999886e-05, 4.587499999999731e-05, 4.598600000000133e-05, 4.53329999999981e-05, 4.586099999999774e-05, 4.53060000000019e-05, 4.551399999999997e-05, 4.574999999999718e-05]</msg>
<status status="PASS" starttime="20201112 12:26:39.081" endtime="20201112 12:26:39.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.076" endtime="20201112 12:26:39.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.086" endtime="20201112 12:26:39.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.089" endtime="20201112 12:26:39.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.088" endtime="20201112 12:26:39.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.084" endtime="20201112 12:26:39.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.714" endtime="20201112 12:26:39.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.714" endtime="20201112 12:26:39.110"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.119" endtime="20201112 12:26:39.137"></status>
</kw>
<msg timestamp="20201112 12:26:39.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.118" endtime="20201112 12:26:39.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.138" endtime="20201112 12:26:39.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.141" endtime="20201112 12:26:39.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.115" endtime="20201112 12:26:39.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.113" endtime="20201112 12:26:39.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.151" endtime="20201112 12:26:39.437"></status>
</kw>
<msg timestamp="20201112 12:26:39.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.150" endtime="20201112 12:26:39.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.442" endtime="20201112 12:26:39.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.450" endtime="20201112 12:26:39.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.147" endtime="20201112 12:26:39.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.145" endtime="20201112 12:26:39.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.457" level="INFO">${RESULT} = [{'time': 0.022768653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6667000000000236e-05, 'source_diff': 4.6667000000000236e-05}, {'time': 0.022830667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:39.453" endtime="20201112 12:26:39.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:39.471" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:39.458" endtime="20201112 12:26:39.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.476" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:26:39.475" endtime="20201112 12:26:39.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.478" level="INFO">VALUE: [4.6667000000000236e-05, 4.604199999999961e-05, 4.6709000000002415e-05, 4.626399999999725e-05, 4.604100000000014e-05, 4.636099999999824e-05, 4.6667000000000236e-05, 4.6639000000001096e-05, 4.680500000000046e-05, 4.672199999999904e-05, 4.681900000000003e-05, 4.622199999999854e-05, 4.647199999999879e-05, 4.645800000000269e-05, 4.629199999999986e-05, 4.686099999999874e-05, 4.680599999999993e-05, 4.654200000000011e-05, 4.690200000000144e-05, 4.631899999999953e-05, 4.6487000000001305e-05, 4.672199999999904e-05, 4.677700000000132e-05, 4.688899999999788e-05, 4.6333000000002567e-05, 4.6403000000000416e-05, 4.6125000000001026e-05, 4.677800000000079e-05, 4.6667000000000236e-05, 4.697200000000276e-05, 4.677799999999732e-05, 4.6389000000000846e-05, 4.6430999999999556e-05, 4.629199999999986e-05, 4.654200000000011e-05, 4.652800000000054e-05, 4.6195000000002345e-05, 4.611200000000093e-05, 4.629100000000039e-05, 4.625000000000115e-05, 4.645800000000269e-05, 4.679100000000089e-05, 4.655499999999674e-05, 4.654100000000064e-05, 4.655500000000021e-05, 4.6861000000002206e-05, 4.6319999999999e-05, 4.654200000000011e-05, 4.6389000000000846e-05, 4.682000000000297e-05]</msg>
<status status="PASS" starttime="20201112 12:26:39.477" endtime="20201112 12:26:39.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.472" endtime="20201112 12:26:39.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.482" endtime="20201112 12:26:39.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.485" endtime="20201112 12:26:39.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.484" endtime="20201112 12:26:39.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.480" endtime="20201112 12:26:39.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.111" endtime="20201112 12:26:39.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.111" endtime="20201112 12:26:39.506"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.515" endtime="20201112 12:26:39.533"></status>
</kw>
<msg timestamp="20201112 12:26:39.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.514" endtime="20201112 12:26:39.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.534" endtime="20201112 12:26:39.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.537" endtime="20201112 12:26:39.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.511" endtime="20201112 12:26:39.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.509" endtime="20201112 12:26:39.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.549" endtime="20201112 12:26:39.834"></status>
</kw>
<msg timestamp="20201112 12:26:39.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.547" endtime="20201112 12:26:39.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.838" endtime="20201112 12:26:39.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.847" endtime="20201112 12:26:39.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.544" endtime="20201112 12:26:39.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.542" endtime="20201112 12:26:39.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.854" level="INFO">${RESULT} = [{'time': 0.022626014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.777799999999832e-05, 'source_diff': 4.777799999999832e-05}, {'time': 0.02269, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201112 12:26:39.850" endtime="20201112 12:26:39.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:39.868" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:39.855" endtime="20201112 12:26:39.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.873" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:26:39.872" endtime="20201112 12:26:39.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.875" level="INFO">VALUE: [4.777799999999832e-05, 4.744399999999718e-05, 4.762499999999906e-05, 4.7625000000002526e-05, 4.7458999999999696e-05, 4.729200000000086e-05, 4.7708999999999946e-05, 4.765200000000219e-05, 4.711199999999846e-05, 4.779100000000189e-05, 4.756900000000078e-05, 4.755500000000121e-05, 4.720799999999997e-05, 4.7139000000001596e-05, 4.708299999999985e-05, 4.711099999999899e-05, 4.763899999999863e-05, 4.781999999999703e-05, 4.7403000000001416e-05, 4.712499999999856e-05, 4.708399999999932e-05, 4.762499999999906e-05, 4.7472999999999266e-05, 4.762499999999906e-05, 4.716600000000126e-05, 4.7959000000000196e-05, 4.729099999999792e-05, 4.777800000000179e-05, 4.797200000000029e-05, 4.729099999999792e-05, 4.71529999999977e-05, 4.748599999999936e-05, 4.730599999999696e-05, 4.706999999999975e-05, 4.769399999999743e-05, 4.774999999999918e-05, 4.738899999999838e-05, 4.730600000000043e-05, 4.723599999999911e-05, 4.763899999999863e-05, 4.779199999999789e-05, 4.7223000000002485e-05, 4.7458999999999696e-05, 4.731900000000053e-05, 4.704099999999767e-05, 4.734699999999967e-05, 4.730500000000096e-05, 4.7889000000002346e-05, 4.779199999999789e-05, 4.752799999999807e-05]</msg>
<status status="PASS" starttime="20201112 12:26:39.874" endtime="20201112 12:26:39.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.869" endtime="20201112 12:26:39.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.879" endtime="20201112 12:26:39.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.883" endtime="20201112 12:26:39.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.881" endtime="20201112 12:26:39.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.877" endtime="20201112 12:26:39.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.507" endtime="20201112 12:26:39.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.507" endtime="20201112 12:26:39.904"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.913" endtime="20201112 12:26:39.930"></status>
</kw>
<msg timestamp="20201112 12:26:39.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.911" endtime="20201112 12:26:39.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.932" endtime="20201112 12:26:39.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.934" endtime="20201112 12:26:39.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.908" endtime="20201112 12:26:39.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.906" endtime="20201112 12:26:39.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.945" endtime="20201112 12:26:40.230"></status>
</kw>
<msg timestamp="20201112 12:26:40.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.943" endtime="20201112 12:26:40.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.234" endtime="20201112 12:26:40.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.242" endtime="20201112 12:26:40.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.940" endtime="20201112 12:26:40.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.938" endtime="20201112 12:26:40.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.249" level="INFO">${RESULT} = [{'time': 0.022496625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.830599999999796e-05, 'source_diff': 4.830599999999796e-05}, {'time': 0.022562653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:40.246" endtime="20201112 12:26:40.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:40.264" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:40.250" endtime="20201112 12:26:40.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.269" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:26:40.268" endtime="20201112 12:26:40.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.272" level="INFO">VALUE: [4.830599999999796e-05, 4.813899999999913e-05, 4.841699999999852e-05, 4.879199999999889e-05, 4.804200000000161e-05, 4.804200000000161e-05, 4.8695000000001376e-05, 4.862500000000006e-05, 4.865199999999972e-05, 4.861100000000049e-05, 4.844400000000165e-05, 4.829099999999892e-05, 4.8958999999997727e-05, 4.8194999999997407e-05, 4.879200000000236e-05, 4.82079999999975e-05, 4.812499999999956e-05, 4.863899999999963e-05, 4.863899999999963e-05, 4.880599999999846e-05, 4.841600000000251e-05, 4.8153000000002166e-05, 4.865199999999972e-05, 4.862500000000006e-05, 4.879100000000289e-05, 4.863800000000015e-05, 4.9014e-05, 4.863899999999963e-05, 4.883299999999813e-05, 4.836100000000024e-05, 4.8209000000000446e-05, 4.829199999999839e-05, 4.820800000000097e-05, 4.812499999999956e-05, 4.897200000000129e-05, 4.829199999999839e-05, 4.8723000000000516e-05, 4.8459000000000696e-05, 4.829200000000186e-05, 4.804200000000161e-05, 4.8209000000000446e-05, 4.897200000000129e-05, 4.845800000000122e-05, 4.847199999999732e-05, 4.883299999999813e-05, 4.888899999999988e-05, 4.844399999999818e-05, 4.881900000000203e-05, 4.804199999999814e-05, 4.855599999999821e-05]</msg>
<status status="PASS" starttime="20201112 12:26:40.270" endtime="20201112 12:26:40.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.265" endtime="20201112 12:26:40.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.276" endtime="20201112 12:26:40.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.279" endtime="20201112 12:26:40.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.277" endtime="20201112 12:26:40.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.274" endtime="20201112 12:26:40.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.905" endtime="20201112 12:26:40.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.904" endtime="20201112 12:26:40.300"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.309" endtime="20201112 12:26:40.326"></status>
</kw>
<msg timestamp="20201112 12:26:40.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.307" endtime="20201112 12:26:40.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.328" endtime="20201112 12:26:40.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.331" endtime="20201112 12:26:40.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.305" endtime="20201112 12:26:40.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.303" endtime="20201112 12:26:40.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.341" endtime="20201112 12:26:40.628"></status>
</kw>
<msg timestamp="20201112 12:26:40.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.339" endtime="20201112 12:26:40.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.632" endtime="20201112 12:26:40.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.641" endtime="20201112 12:26:40.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.337" endtime="20201112 12:26:40.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.335" endtime="20201112 12:26:40.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.648" level="INFO">${RESULT} = [{'time': 0.022792042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.999999999999796e-05, 'source_diff': 4.999999999999796e-05}, {'time': 0.022862042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:40.644" endtime="20201112 12:26:40.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:40.662" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:40.649" endtime="20201112 12:26:40.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.666" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:26:40.665" endtime="20201112 12:26:40.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.669" level="INFO">VALUE: [4.999999999999796e-05, 4.929199999999939e-05, 4.9222999999997546e-05, 4.947199999999832e-05, 4.954199999999964e-05, 4.96530000000002e-05, 4.929099999999992e-05, 4.905499999999924e-05, 4.920800000000197e-05, 4.998599999999839e-05, 4.93339999999981e-05, 4.937500000000081e-05, 4.9320000000002e-05, 4.954199999999964e-05, 4.922200000000154e-05, 4.911100000000099e-05, 4.950000000000093e-05, 4.961099999999802e-05, 4.963899999999716e-05, 4.909700000000142e-05, 4.959700000000192e-05, 4.949999999999746e-05, 4.96530000000002e-05, 4.912500000000056e-05, 4.979100000000042e-05, 4.98469999999987e-05, 4.927799999999982e-05, 4.937500000000081e-05, 4.912500000000056e-05, 4.954100000000017e-05, 4.963900000000063e-05, 4.979199999999989e-05, 4.905599999999871e-05, 4.938900000000038e-05, 4.929199999999939e-05, 4.925000000000068e-05, 4.930499999999949e-05, 4.969399999999943e-05, 4.994399999999968e-05, 4.959699999999845e-05, 4.916699999999927e-05, 4.929200000000286e-05, 4.975000000000118e-05, 4.96530000000002e-05, 4.930600000000243e-05, 4.95140000000005e-05, 4.970899999999848e-05, 4.962499999999759e-05, 4.91529999999997e-05, 4.9473000000001266e-05]</msg>
<status status="PASS" starttime="20201112 12:26:40.667" endtime="20201112 12:26:40.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.663" endtime="20201112 12:26:40.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.673" endtime="20201112 12:26:40.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.676" endtime="20201112 12:26:40.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.675" endtime="20201112 12:26:40.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.671" endtime="20201112 12:26:40.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.301" endtime="20201112 12:26:40.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.300" endtime="20201112 12:26:40.697"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.706" endtime="20201112 12:26:40.723"></status>
</kw>
<msg timestamp="20201112 12:26:40.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.705" endtime="20201112 12:26:40.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.724" endtime="20201112 12:26:40.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.727" endtime="20201112 12:26:40.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.702" endtime="20201112 12:26:40.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.700" endtime="20201112 12:26:40.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.737" endtime="20201112 12:26:41.024"></status>
</kw>
<msg timestamp="20201112 12:26:41.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.736" endtime="20201112 12:26:41.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.028" endtime="20201112 12:26:41.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.036" endtime="20201112 12:26:41.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.733" endtime="20201112 12:26:41.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.731" endtime="20201112 12:26:41.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.043" level="INFO">${RESULT} = [{'time': 0.022509167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.052800000000107e-05, 'source_diff': 5.052800000000107e-05}, {'time': 0.022580181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:41.040" endtime="20201112 12:26:41.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:41.057" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:41.044" endtime="20201112 12:26:41.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.062" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:26:41.061" endtime="20201112 12:26:41.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.065" level="INFO">VALUE: [5.052800000000107e-05, 5.038900000000138e-05, 5.027800000000082e-05, 5.0888000000002404e-05, 5.094400000000068e-05, 5.054200000000064e-05, 5.077699999999838e-05, 5.088899999999841e-05, 5.097199999999982e-05, 5.012500000000156e-05, 5.048599999999889e-05, 5.009699999999895e-05, 5.063899999999816e-05, 5.045799999999975e-05, 5.086100000000274e-05, 5.020899999999898e-05, 5.0459000000002696e-05, 5.079200000000089e-05, 5.0888000000002404e-05, 5.048600000000236e-05, 5.044400000000018e-05, 5.045799999999975e-05, 5.094400000000068e-05, 5.081900000000056e-05, 5.072199999999957e-05, 5.063900000000163e-05, 5.030599999999996e-05, 5.008399999999885e-05, 5.004200000000014e-05, 5.02079999999995e-05, 5.095899999999973e-05, 5.029200000000039e-05, 5.068100000000034e-05, 5.074999999999871e-05, 5.072199999999957e-05, 5.062499999999859e-05, 5.011099999999852e-05, 5.030499999999702e-05, 5.019399999999993e-05, 5.012499999999809e-05, 5.095800000000025e-05, 5.027800000000082e-05, 5.008400000000232e-05, 5.044400000000018e-05, 5.095800000000025e-05, 5.025000000000168e-05, 5.038899999999791e-05, 5.094500000000016e-05, 5.068000000000086e-05, 5.015200000000122e-05]</msg>
<status status="PASS" starttime="20201112 12:26:41.063" endtime="20201112 12:26:41.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.058" endtime="20201112 12:26:41.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.072" endtime="20201112 12:26:41.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.076" endtime="20201112 12:26:41.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.074" endtime="20201112 12:26:41.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.071" endtime="20201112 12:26:41.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.698" endtime="20201112 12:26:41.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.697" endtime="20201112 12:26:41.097"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.106" endtime="20201112 12:26:41.123"></status>
</kw>
<msg timestamp="20201112 12:26:41.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.104" endtime="20201112 12:26:41.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.125" endtime="20201112 12:26:41.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.127" endtime="20201112 12:26:41.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.102" endtime="20201112 12:26:41.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.099" endtime="20201112 12:26:41.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.137" endtime="20201112 12:26:41.423"></status>
</kw>
<msg timestamp="20201112 12:26:41.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.136" endtime="20201112 12:26:41.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.428" endtime="20201112 12:26:41.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.436" endtime="20201112 12:26:41.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.133" endtime="20201112 12:26:41.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.131" endtime="20201112 12:26:41.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.443" level="INFO">${RESULT} = [{'time': 0.022569556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.118100000000084e-05, 'source_diff': 5.118100000000084e-05}, {'time': 0.022633542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:41.439" endtime="20201112 12:26:41.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:41.457" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:41.444" endtime="20201112 12:26:41.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.462" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:26:41.461" endtime="20201112 12:26:41.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.464" level="INFO">VALUE: [5.118100000000084e-05, 5.120899999999998e-05, 5.162499999999959e-05, 5.195900000000073e-05, 5.108399999999985e-05, 5.179200000000189e-05, 5.104100000000167e-05, 5.097199999999982e-05, 5.106900000000081e-05, 5.119400000000093e-05, 5.112499999999909e-05, 5.158300000000088e-05, 5.111099999999952e-05, 5.163899999999916e-05, 5.163899999999916e-05, 5.132000000000053e-05, 5.186100000000027e-05, 5.145900000000023e-05, 5.162499999999959e-05, 5.180600000000146e-05, 5.104199999999767e-05, 5.120899999999998e-05, 5.1985999999996924e-05, 5.197200000000082e-05, 5.130500000000149e-05, 5.186100000000027e-05, 5.197200000000082e-05, 5.113899999999866e-05, 5.1943999999998214e-05, 5.115299999999823e-05, 5.130600000000096e-05, 5.122200000000007e-05, 5.180600000000146e-05, 5.140299999999848e-05, 5.129200000000139e-05, 5.120899999999998e-05, 5.144500000000066e-05, 5.159799999999992e-05, 5.162499999999959e-05, 5.129100000000192e-05, 5.188899999999941e-05, 5.180500000000199e-05, 5.155500000000174e-05, 5.1165999999998324e-05, 5.12080000000005e-05, 5.130600000000096e-05, 5.1707999999997534e-05, 5.130600000000096e-05, 5.10279999999981e-05, 5.105600000000071e-05]</msg>
<status status="PASS" starttime="20201112 12:26:41.463" endtime="20201112 12:26:41.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.458" endtime="20201112 12:26:41.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.468" endtime="20201112 12:26:41.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.472" endtime="20201112 12:26:41.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.470" endtime="20201112 12:26:41.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.466" endtime="20201112 12:26:41.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.098" endtime="20201112 12:26:41.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.097" endtime="20201112 12:26:41.493"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.502" endtime="20201112 12:26:41.519"></status>
</kw>
<msg timestamp="20201112 12:26:41.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.500" endtime="20201112 12:26:41.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.520" endtime="20201112 12:26:41.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.523" endtime="20201112 12:26:41.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.497" endtime="20201112 12:26:41.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.495" endtime="20201112 12:26:41.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.533" endtime="20201112 12:26:41.820"></status>
</kw>
<msg timestamp="20201112 12:26:41.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022608042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.532" endtime="20201112 12:26:41.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022608042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.824" endtime="20201112 12:26:41.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.833" endtime="20201112 12:26:41.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.529" endtime="20201112 12:26:41.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.527" endtime="20201112 12:26:41.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.840" level="INFO">${RESULT} = [{'time': 0.022661042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.300000000000096e-05, 'source_diff': 5.300000000000096e-05}, {'time': 0.022728042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:41.836" endtime="20201112 12:26:41.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:41.855" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:41.841" endtime="20201112 12:26:41.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.860" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:26:41.858" endtime="20201112 12:26:41.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.862" level="INFO">VALUE: [5.300000000000096e-05, 5.262500000000059e-05, 5.231899999999859e-05, 5.284800000000117e-05, 5.2138000000000184e-05, 5.2457999999998284e-05, 5.229099999999945e-05, 5.288900000000041e-05, 5.211100000000052e-05, 5.225000000000021e-05, 5.284699999999823e-05, 5.240299999999948e-05, 5.208300000000138e-05, 5.2735999999997674e-05, 5.205600000000171e-05, 5.204200000000214e-05, 5.288900000000041e-05, 5.279099999999995e-05, 5.2680000000002863e-05, 5.279200000000289e-05, 5.234699999999773e-05, 5.230499999999902e-05, 5.258400000000135e-05, 5.2707999999998534e-05, 5.262500000000059e-05, 5.230599999999849e-05, 5.205599999999824e-05, 5.205599999999824e-05, 5.286200000000074e-05, 5.295900000000173e-05, 5.275000000000071e-05, 5.272300000000105e-05, 5.297299999999783e-05, 5.2971999999998354e-05, 5.262499999999712e-05, 5.2138000000000184e-05, 5.261099999999755e-05, 5.212499999999662e-05, 5.230499999999902e-05, 5.283299999999866e-05, 5.229199999999892e-05, 5.2708000000002e-05, 5.211100000000052e-05, 5.215299999999923e-05, 5.248600000000089e-05, 5.279199999999942e-05, 5.219499999999794e-05, 5.2499999999996994e-05, 5.211100000000052e-05, 5.263900000000016e-05]</msg>
<status status="PASS" starttime="20201112 12:26:41.861" endtime="20201112 12:26:41.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.856" endtime="20201112 12:26:41.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.866" endtime="20201112 12:26:41.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.869" endtime="20201112 12:26:41.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.868" endtime="20201112 12:26:41.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.864" endtime="20201112 12:26:41.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.493" endtime="20201112 12:26:41.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.493" endtime="20201112 12:26:41.890"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.899" endtime="20201112 12:26:41.919"></status>
</kw>
<msg timestamp="20201112 12:26:41.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.898" endtime="20201112 12:26:41.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.921" endtime="20201112 12:26:41.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.924" endtime="20201112 12:26:41.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.895" endtime="20201112 12:26:41.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.893" endtime="20201112 12:26:41.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.935" endtime="20201112 12:26:42.221"></status>
</kw>
<msg timestamp="20201112 12:26:42.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022774944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.933" endtime="20201112 12:26:42.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022774944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.225" endtime="20201112 12:26:42.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.234" endtime="20201112 12:26:42.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.931" endtime="20201112 12:26:42.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.929" endtime="20201112 12:26:42.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.241" level="INFO">${RESULT} = [{'time': 0.022828139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319500000000241e-05, 'source_diff': 5.319500000000241e-05}, {'time': 0.022895153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:42.237" endtime="20201112 12:26:42.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:42.255" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:42.242" endtime="20201112 12:26:42.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.259" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:26:42.258" endtime="20201112 12:26:42.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.262" level="INFO">VALUE: [5.319500000000241e-05, 5.355599999999974e-05, 5.386100000000227e-05, 5.308400000000185e-05, 5.39730000000023e-05, 5.380599999999999e-05, 5.319499999999894e-05, 5.3777999999997383e-05, 5.3221999999998604e-05, 5.3916000000001074e-05, 5.363899999999769e-05, 5.379100000000095e-05, 5.3693999999999964e-05, 5.330500000000002e-05, 5.3693999999999964e-05, 5.381999999999956e-05, 5.337500000000134e-05, 5.363899999999769e-05, 5.365300000000073e-05, 5.329199999999992e-05, 5.337499999999787e-05, 5.362499999999812e-05, 5.343099999999962e-05, 5.330500000000002e-05, 5.38609999999988e-05, 5.313900000000066e-05, 5.313900000000066e-05, 5.312500000000109e-05, 5.365299999999726e-05, 5.327800000000035e-05, 5.338900000000091e-05, 5.379200000000042e-05, 5.388900000000141e-05, 5.312500000000109e-05, 5.380599999999999e-05, 5.304199999999967e-05, 5.337500000000134e-05, 5.381900000000009e-05, 5.369499999999944e-05, 5.308299999999891e-05, 5.395800000000325e-05, 5.384699999999923e-05, 5.388900000000141e-05, 5.379099999999748e-05, 5.309700000000195e-05, 5.3193999999999464e-05, 5.361099999999855e-05, 5.351400000000103e-05, 5.331999999999906e-05, 5.305600000000271e-05]</msg>
<status status="PASS" starttime="20201112 12:26:42.261" endtime="20201112 12:26:42.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.256" endtime="20201112 12:26:42.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.266" endtime="20201112 12:26:42.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.269" endtime="20201112 12:26:42.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.268" endtime="20201112 12:26:42.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.264" endtime="20201112 12:26:42.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.891" endtime="20201112 12:26:42.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.891" endtime="20201112 12:26:42.290"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.299" endtime="20201112 12:26:42.316"></status>
</kw>
<msg timestamp="20201112 12:26:42.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.298" endtime="20201112 12:26:42.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.318" endtime="20201112 12:26:42.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.321" endtime="20201112 12:26:42.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.295" endtime="20201112 12:26:42.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.293" endtime="20201112 12:26:42.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.331" endtime="20201112 12:26:42.617"></status>
</kw>
<msg timestamp="20201112 12:26:42.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022624708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.329" endtime="20201112 12:26:42.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022624708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.622" endtime="20201112 12:26:42.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.630" endtime="20201112 12:26:42.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.327" endtime="20201112 12:26:42.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.325" endtime="20201112 12:26:42.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.637" level="INFO">${RESULT} = [{'time': 0.022624708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.43609999999993e-05, 'source_diff': 5.43609999999993e-05}, {'time': 0.022693694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:42.634" endtime="20201112 12:26:42.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:42.651" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:42.638" endtime="20201112 12:26:42.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.656" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:26:42.655" endtime="20201112 12:26:42.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.659" level="INFO">VALUE: [5.43609999999993e-05, 5.412500000000209e-05, 5.415300000000123e-05, 5.461099999999955e-05, 5.4513999999998564e-05, 5.4985999999999924e-05, 5.4499999999998994e-05, 5.4972000000000354e-05, 5.4957999999997315e-05, 5.445899999999976e-05, 5.480600000000099e-05, 5.4027999999997633e-05, 5.422299999999908e-05, 5.409800000000242e-05, 5.427700000000188e-05, 5.488899999999894e-05, 5.406900000000034e-05, 5.463899999999869e-05, 5.4958000000000784e-05, 5.429100000000145e-05, 5.451400000000203e-05, 5.3999999999998494e-05, 5.405600000000024e-05, 5.4527999999998134e-05, 5.40280000000011e-05, 5.4208000000000034e-05, 5.4291999999997453e-05, 5.423700000000212e-05, 5.445899999999976e-05, 5.497299999999983e-05, 5.4137999999998715e-05, 5.463899999999869e-05, 5.427700000000188e-05, 5.4708000000000534e-05, 5.4999999999999494e-05, 5.429100000000145e-05, 5.4722000000000104e-05, 5.4944000000001214e-05, 5.495900000000026e-05, 5.430600000000049e-05, 5.4027999999997633e-05, 5.45280000000016e-05, 5.437500000000234e-05, 5.4985999999999924e-05, 5.481899999999762e-05, 5.40549999999973e-05, 5.4722000000000104e-05, 5.480500000000152e-05, 5.487499999999937e-05, 5.4485999999999424e-05]</msg>
<status status="PASS" starttime="20201112 12:26:42.657" endtime="20201112 12:26:42.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.652" endtime="20201112 12:26:42.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.662" endtime="20201112 12:26:42.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.666" endtime="20201112 12:26:42.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.664" endtime="20201112 12:26:42.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.661" endtime="20201112 12:26:42.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.291" endtime="20201112 12:26:42.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.291" endtime="20201112 12:26:42.687"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.696" endtime="20201112 12:26:42.713"></status>
</kw>
<msg timestamp="20201112 12:26:42.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.694" endtime="20201112 12:26:42.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.714" endtime="20201112 12:26:42.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.717" endtime="20201112 12:26:42.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.692" endtime="20201112 12:26:42.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.689" endtime="20201112 12:26:42.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.727" endtime="20201112 12:26:43.013"></status>
</kw>
<msg timestamp="20201112 12:26:43.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.726" endtime="20201112 12:26:43.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.017" endtime="20201112 12:26:43.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.026" endtime="20201112 12:26:43.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.723" endtime="20201112 12:26:43.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.721" endtime="20201112 12:26:43.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.033" level="INFO">${RESULT} = [{'time': 0.022545861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6014000000000064e-05, 'source_diff': 5.6014000000000064e-05}, {'time': 0.022618861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:43.030" endtime="20201112 12:26:43.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:43.047" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:43.034" endtime="20201112 12:26:43.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.052" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:26:43.051" endtime="20201112 12:26:43.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.055" level="INFO">VALUE: [5.6014000000000064e-05, 5.5972000000001354e-05, 5.531900000000159e-05, 5.537499999999987e-05, 5.582000000000156e-05, 5.554200000000217e-05, 5.53610000000003e-05, 5.512499999999962e-05, 5.563899999999969e-05, 5.554200000000217e-05, 5.545900000000076e-05, 5.5249999999999744e-05, 5.55410000000027e-05, 5.505500000000177e-05, 5.538899999999944e-05, 5.5943999999998745e-05, 5.5986000000000924e-05, 5.5444000000001714e-05, 5.513900000000266e-05, 5.511100000000005e-05, 5.531999999999759e-05, 5.540299999999901e-05, 5.512499999999962e-05, 5.5805999999998523e-05, 5.504200000000167e-05, 5.537499999999987e-05, 5.5471999999997385e-05, 5.512499999999962e-05, 5.5471999999997385e-05, 5.5457999999997815e-05, 5.5972000000001354e-05, 5.5957999999998315e-05, 5.5305999999998023e-05, 5.556999999999784e-05, 5.5708000000001534e-05, 5.5305999999998023e-05, 5.555600000000174e-05, 5.520900000000051e-05, 5.533400000000063e-05, 5.5915999999999605e-05, 5.58610000000008e-05, 5.5888000000000465e-05, 5.5957999999998315e-05, 5.513899999999919e-05, 5.530500000000202e-05, 5.5680000000002394e-05, 5.5971999999997885e-05, 5.512499999999962e-05, 5.5791999999998954e-05, 5.5722000000001104e-05]</msg>
<status status="PASS" starttime="20201112 12:26:43.053" endtime="20201112 12:26:43.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.048" endtime="20201112 12:26:43.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.058" endtime="20201112 12:26:43.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.062" endtime="20201112 12:26:43.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.060" endtime="20201112 12:26:43.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.057" endtime="20201112 12:26:43.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.688" endtime="20201112 12:26:43.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.687" endtime="20201112 12:26:43.083"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.092" endtime="20201112 12:26:43.109"></status>
</kw>
<msg timestamp="20201112 12:26:43.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.090" endtime="20201112 12:26:43.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.111" endtime="20201112 12:26:43.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.113" endtime="20201112 12:26:43.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.087" endtime="20201112 12:26:43.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.085" endtime="20201112 12:26:43.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.124" endtime="20201112 12:26:43.410"></status>
</kw>
<msg timestamp="20201112 12:26:43.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022739653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.122" endtime="20201112 12:26:43.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022739653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.414" endtime="20201112 12:26:43.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.423" endtime="20201112 12:26:43.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.120" endtime="20201112 12:26:43.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.118" endtime="20201112 12:26:43.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.430" level="INFO">${RESULT} = [{'time': 0.022796111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6458000000002284e-05, 'source_diff': 5.6458000000002284e-05}, {'time': 0.022873125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:43.427" endtime="20201112 12:26:43.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:43.445" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:43.431" endtime="20201112 12:26:43.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.450" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:26:43.449" endtime="20201112 12:26:43.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.453" level="INFO">VALUE: [5.6458000000002284e-05, 5.6805999999999524e-05, 5.6708000000002534e-05, 5.6791999999999954e-05, 5.620900000000151e-05, 5.6791999999999954e-05, 5.6569999999998843e-05, 5.669500000000244e-05, 5.661200000000102e-05, 5.66809999999994e-05, 5.662499999999765e-05, 5.6443999999999245e-05, 5.6916000000000605e-05, 5.613900000000019e-05, 5.631899999999912e-05, 5.687500000000137e-05, 5.613900000000019e-05, 5.663900000000069e-05, 5.6957999999999315e-05, 5.658399999999841e-05, 5.661100000000155e-05, 5.662500000000112e-05, 5.7014000000001064e-05, 5.630499999999955e-05, 5.6402000000000535e-05, 5.662499999999765e-05, 5.631899999999912e-05, 5.656899999999937e-05, 5.636099999999783e-05, 5.663899999999722e-05, 5.6791999999999954e-05, 5.6541999999999704e-05, 5.6528000000000134e-05, 5.6055999999998773e-05, 5.6041999999999204e-05, 5.688900000000094e-05, 5.647299999999786e-05, 5.663900000000069e-05, 5.693099999999965e-05, 5.6471999999998385e-05, 5.6485999999997955e-05, 5.688900000000094e-05, 5.631899999999912e-05, 5.6264000000000314e-05, 5.612500000000062e-05, 5.6957999999999315e-05, 5.613900000000019e-05, 5.6471999999998385e-05, 5.6471999999998385e-05, 5.611100000000105e-05]</msg>
<status status="PASS" starttime="20201112 12:26:43.451" endtime="20201112 12:26:43.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.446" endtime="20201112 12:26:43.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.456" endtime="20201112 12:26:43.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.460" endtime="20201112 12:26:43.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.458" endtime="20201112 12:26:43.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.455" endtime="20201112 12:26:43.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.084" endtime="20201112 12:26:43.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.083" endtime="20201112 12:26:43.481"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.490" endtime="20201112 12:26:43.507"></status>
</kw>
<msg timestamp="20201112 12:26:43.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.488" endtime="20201112 12:26:43.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.509" endtime="20201112 12:26:43.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.512" endtime="20201112 12:26:43.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.485" endtime="20201112 12:26:43.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.483" endtime="20201112 12:26:43.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.522" endtime="20201112 12:26:43.808"></status>
</kw>
<msg timestamp="20201112 12:26:43.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.520" endtime="20201112 12:26:43.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.813" endtime="20201112 12:26:43.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.821" endtime="20201112 12:26:43.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.518" endtime="20201112 12:26:43.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.516" endtime="20201112 12:26:43.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.828" level="INFO">${RESULT} = [{'time': 0.022557764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.766700000000083e-05, 'source_diff': 5.766700000000083e-05}, {'time': 0.022633792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:43.825" endtime="20201112 12:26:43.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:43.842" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:43.829" endtime="20201112 12:26:43.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.847" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:26:43.846" endtime="20201112 12:26:43.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.850" level="INFO">VALUE: [5.766700000000083e-05, 5.7569999999999844e-05, 5.772299999999911e-05, 5.7278000000000884e-05, 5.720900000000251e-05, 5.7971999999999885e-05, 5.712499999999815e-05, 5.729100000000098e-05, 5.704100000000073e-05, 5.7221999999999135e-05, 5.7485999999998955e-05, 5.781900000000062e-05, 5.7083999999998913e-05, 5.7014000000001064e-05, 5.738900000000144e-05, 5.744499999999972e-05, 5.7806000000000524e-05, 5.6986000000001924e-05, 5.769499999999997e-05, 5.744499999999972e-05, 5.779100000000148e-05, 5.752700000000166e-05, 5.788899999999847e-05, 5.7958000000000315e-05, 5.762499999999865e-05, 5.712499999999815e-05, 5.8028000000001634e-05, 5.7457999999999815e-05, 5.7805999999997054e-05, 5.788900000000194e-05, 5.7791999999997484e-05, 5.708299999999944e-05, 5.7527999999997664e-05, 5.788899999999847e-05, 5.795900000000326e-05, 5.7958000000000315e-05, 5.780500000000105e-05, 5.6986000000001924e-05, 5.78749999999989e-05, 5.71809999999999e-05, 5.7444000000000245e-05, 5.7306000000000024e-05, 5.7694000000000495e-05, 5.763900000000169e-05, 5.797299999999936e-05, 5.761099999999908e-05, 5.798699999999893e-05, 5.7777999999997914e-05, 5.73749999999984e-05, 5.776299999999887e-05]</msg>
<status status="PASS" starttime="20201112 12:26:43.848" endtime="20201112 12:26:43.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.843" endtime="20201112 12:26:43.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.853" endtime="20201112 12:26:43.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.857" endtime="20201112 12:26:43.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.855" endtime="20201112 12:26:43.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.852" endtime="20201112 12:26:43.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.482" endtime="20201112 12:26:43.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.481" endtime="20201112 12:26:43.878"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.887" endtime="20201112 12:26:43.905"></status>
</kw>
<msg timestamp="20201112 12:26:43.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.885" endtime="20201112 12:26:43.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.906" endtime="20201112 12:26:43.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.909" endtime="20201112 12:26:43.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.883" endtime="20201112 12:26:43.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.880" endtime="20201112 12:26:43.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.919" endtime="20201112 12:26:44.206"></status>
</kw>
<msg timestamp="20201112 12:26:44.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023065111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023123194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.917" endtime="20201112 12:26:44.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023065111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023123194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.210" endtime="20201112 12:26:44.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.219" endtime="20201112 12:26:44.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.915" endtime="20201112 12:26:44.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.913" endtime="20201112 12:26:44.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.225" level="INFO">${RESULT} = [{'time': 0.023123194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.808300000000044e-05, 'source_diff': 5.808300000000044e-05}, {'time': 0.023203194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:44.222" endtime="20201112 12:26:44.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:44.240" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:44.227" endtime="20201112 12:26:44.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.244" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:26:44.243" endtime="20201112 12:26:44.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.247" level="INFO">VALUE: [5.808300000000044e-05, 5.8722000000000635e-05, 5.8499999999999525e-05, 5.8957999999997845e-05, 5.8444000000001245e-05, 5.880499999999858e-05, 5.8485999999999955e-05, 5.8707999999997595e-05, 5.8320000000000594e-05, 5.8222000000000135e-05, 5.818099999999743e-05, 5.845900000000029e-05, 5.8278000000001884e-05, 5.820900000000004e-05, 5.8791999999998484e-05, 5.83619999999993e-05, 5.8430000000001675e-05, 5.816699999999786e-05, 5.863899999999922e-05, 5.8485999999999955e-05, 5.8472000000000385e-05, 5.8444000000001245e-05, 5.8834000000000664e-05, 5.8042000000001204e-05, 5.838899999999897e-05, 5.812500000000262e-05, 5.841700000000158e-05, 5.862499999999965e-05, 5.811099999999958e-05, 5.895900000000079e-05, 5.830500000000155e-05, 5.852699999999919e-05, 5.804099999999826e-05, 5.838899999999897e-05, 5.829099999999851e-05, 5.888899999999947e-05, 5.86810000000014e-05, 5.8306000000001024e-05, 5.8721999999997165e-05, 5.861100000000008e-05, 5.8291999999997984e-05, 5.88749999999999e-05, 5.8292000000001454e-05, 5.8887999999999996e-05, 5.8792000000001954e-05, 5.8485999999999955e-05, 5.843099999999768e-05, 5.9027999999999164e-05, 5.8458000000000815e-05, 5.9000000000000025e-05]</msg>
<status status="PASS" starttime="20201112 12:26:44.245" endtime="20201112 12:26:44.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.241" endtime="20201112 12:26:44.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.251" endtime="20201112 12:26:44.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.254" endtime="20201112 12:26:44.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.253" endtime="20201112 12:26:44.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.249" endtime="20201112 12:26:44.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.879" endtime="20201112 12:26:44.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.878" endtime="20201112 12:26:44.275"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.284" endtime="20201112 12:26:44.302"></status>
</kw>
<msg timestamp="20201112 12:26:44.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.283" endtime="20201112 12:26:44.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.304" endtime="20201112 12:26:44.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.306" endtime="20201112 12:26:44.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.280" endtime="20201112 12:26:44.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.278" endtime="20201112 12:26:44.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.317" endtime="20201112 12:26:44.603"></status>
</kw>
<msg timestamp="20201112 12:26:44.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.315" endtime="20201112 12:26:44.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.607" endtime="20201112 12:26:44.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.616" endtime="20201112 12:26:44.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.312" endtime="20201112 12:26:44.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.311" endtime="20201112 12:26:44.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.624" level="INFO">${RESULT} = [{'time': 0.022720472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9179999999998956e-05, 'source_diff': 5.9179999999998956e-05}, {'time': 0.022801486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:44.620" endtime="20201112 12:26:44.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:44.638" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:44.625" endtime="20201112 12:26:44.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.643" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:26:44.642" endtime="20201112 12:26:44.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.645" level="INFO">VALUE: [5.9179999999998956e-05, 5.940299999999954e-05, 5.913899999999972e-05, 5.962500000000065e-05, 5.9306000000002024e-05, 5.9486000000000955e-05, 5.9527999999999665e-05, 5.90689999999984e-05, 5.972300000000111e-05, 5.9555999999998804e-05, 5.9652000000000316e-05, 5.994499999999875e-05, 5.9500000000000525e-05, 5.981899999999915e-05, 5.9193999999998526e-05, 5.966699999999936e-05, 5.963900000000022e-05, 5.912500000000015e-05, 5.9320000000001594e-05, 5.9527999999999665e-05, 5.936100000000083e-05, 5.944499999999825e-05, 5.9291999999998984e-05, 5.988900000000047e-05, 5.947300000000086e-05, 5.981900000000262e-05, 5.988900000000047e-05, 5.912500000000015e-05, 5.9957999999998846e-05, 5.909700000000101e-05, 5.911100000000058e-05, 5.959700000000151e-05, 5.9263999999999845e-05, 5.9750000000000775e-05, 5.9792000000002954e-05, 5.970900000000154e-05, 5.997299999999789e-05, 5.962499999999718e-05, 5.987499999999743e-05, 5.902699999999969e-05, 5.986100000000133e-05, 5.913899999999972e-05, 5.912500000000015e-05, 5.9735999999997735e-05, 5.905499999999883e-05, 5.988900000000047e-05, 5.912500000000015e-05, 5.9999999999997555e-05, 5.9306000000002024e-05, 5.938899999999997e-05]</msg>
<status status="PASS" starttime="20201112 12:26:44.644" endtime="20201112 12:26:44.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.639" endtime="20201112 12:26:44.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.649" endtime="20201112 12:26:44.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.653" endtime="20201112 12:26:44.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.651" endtime="20201112 12:26:44.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.647" endtime="20201112 12:26:44.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.276" endtime="20201112 12:26:44.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.275" endtime="20201112 12:26:44.674"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.683" endtime="20201112 12:26:44.701"></status>
</kw>
<msg timestamp="20201112 12:26:44.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.681" endtime="20201112 12:26:44.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.703" endtime="20201112 12:26:44.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.706" endtime="20201112 12:26:44.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.678" endtime="20201112 12:26:44.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.676" endtime="20201112 12:26:44.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.716" endtime="20201112 12:26:45.002"></status>
</kw>
<msg timestamp="20201112 12:26:45.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023073986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023134986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.714" endtime="20201112 12:26:45.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023073986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023134986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.006" endtime="20201112 12:26:45.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.015" endtime="20201112 12:26:45.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.712" endtime="20201112 12:26:45.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.710" endtime="20201112 12:26:45.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.022" level="INFO">${RESULT} = [{'time': 0.023134986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0999999999998555e-05, 'source_diff': 6.0999999999998555e-05}, {'time': 0.023217, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:45.018" endtime="20201112 12:26:45.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:45.037" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:45.023" endtime="20201112 12:26:45.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.042" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:26:45.040" endtime="20201112 12:26:45.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.044" level="INFO">VALUE: [6.0999999999998555e-05, 6.013900000000072e-05, 6.0471999999998916e-05, 6.0792000000000485e-05, 6.0207999999999096e-05, 6.0792000000000485e-05, 6.066700000000036e-05, 6.030500000000008e-05, 6.005499999999983e-05, 6.068099999999993e-05, 6.0972000000002885e-05, 6.030500000000008e-05, 6.087499999999843e-05, 6.079099999999754e-05, 6.0722000000002635e-05, 6.0957999999999846e-05, 6.0472000000002385e-05, 6.012500000000115e-05, 6.012500000000115e-05, 6.0792000000000485e-05, 6.086099999999886e-05, 6.045899999999882e-05, 6.0485999999998485e-05, 6.0665999999997416e-05, 6.013900000000072e-05, 6.081900000000015e-05, 6.004100000000026e-05, 6.0500000000001525e-05, 6.005499999999983e-05, 6.0694000000000026e-05, 6.0985999999998985e-05, 6.061100000000208e-05, 6.101299999999865e-05, 6.0055999999999304e-05, 6.045899999999882e-05, 6.097299999999889e-05, 6.0971999999999416e-05, 6.0112000000001053e-05, 6.027700000000094e-05, 6.005499999999983e-05, 6.008300000000244e-05, 6.040300000000054e-05, 6.065299999999732e-05, 6.011099999999811e-05, 6.0971999999999416e-05, 6.0972000000002885e-05, 6.0957999999999846e-05, 6.0971999999999416e-05, 6.061099999999861e-05, 6.094499999999975e-05]</msg>
<status status="PASS" starttime="20201112 12:26:45.043" endtime="20201112 12:26:45.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.038" endtime="20201112 12:26:45.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.048" endtime="20201112 12:26:45.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.051" endtime="20201112 12:26:45.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.050" endtime="20201112 12:26:45.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.046" endtime="20201112 12:26:45.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.675" endtime="20201112 12:26:45.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.674" endtime="20201112 12:26:45.072"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.081" endtime="20201112 12:26:45.099"></status>
</kw>
<msg timestamp="20201112 12:26:45.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.080" endtime="20201112 12:26:45.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.101" endtime="20201112 12:26:45.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.103" endtime="20201112 12:26:45.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.077" endtime="20201112 12:26:45.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.075" endtime="20201112 12:26:45.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.114" endtime="20201112 12:26:45.399"></status>
</kw>
<msg timestamp="20201112 12:26:45.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022543181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.112" endtime="20201112 12:26:45.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022543181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.403" endtime="20201112 12:26:45.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.412" endtime="20201112 12:26:45.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.109" endtime="20201112 12:26:45.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.108" endtime="20201112 12:26:45.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.418" level="INFO">${RESULT} = [{'time': 0.022543181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.13889999999985e-05, 'source_diff': 6.13889999999985e-05}, {'time': 0.022618125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:45.415" endtime="20201112 12:26:45.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:45.432" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:45.419" endtime="20201112 12:26:45.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.437" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:26:45.436" endtime="20201112 12:26:45.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.440" level="INFO">VALUE: [6.13889999999985e-05, 6.197200000000042e-05, 6.113899999999825e-05, 6.163899999999875e-05, 6.147199999999992e-05, 6.179199999999802e-05, 6.187499999999943e-05, 6.145800000000035e-05, 6.130600000000055e-05, 6.109699999999954e-05, 6.17360000000032e-05, 6.163900000000222e-05, 6.162500000000265e-05, 6.134699999999979e-05, 6.186099999999986e-05, 6.129200000000098e-05, 6.119400000000053e-05, 6.145899999999982e-05, 6.115300000000129e-05, 6.197299999999989e-05, 6.113899999999825e-05, 6.145899999999982e-05, 6.112499999999868e-05, 6.159700000000004e-05, 6.197200000000042e-05, 6.147199999999992e-05, 6.130500000000108e-05, 6.170799999999713e-05, 6.150000000000252e-05, 6.113899999999825e-05, 6.179199999999802e-05, 6.12080000000001e-05, 6.165299999999832e-05, 6.129200000000098e-05, 6.187499999999943e-05, 6.162499999999918e-05, 6.162500000000265e-05, 6.131900000000065e-05, 6.104100000000126e-05, 6.136100000000283e-05, 6.195800000000085e-05, 6.177799999999845e-05, 6.17499999999993e-05, 6.198599999999999e-05, 6.113900000000172e-05, 6.143099999999721e-05, 6.148599999999949e-05, 6.145899999999982e-05, 6.195900000000032e-05, 6.197299999999989e-05]</msg>
<status status="PASS" starttime="20201112 12:26:45.438" endtime="20201112 12:26:45.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.434" endtime="20201112 12:26:45.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.443" endtime="20201112 12:26:45.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.447" endtime="20201112 12:26:45.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.445" endtime="20201112 12:26:45.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.442" endtime="20201112 12:26:45.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.073" endtime="20201112 12:26:45.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.073" endtime="20201112 12:26:45.468"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.477" endtime="20201112 12:26:45.496"></status>
</kw>
<msg timestamp="20201112 12:26:45.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.475" endtime="20201112 12:26:45.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.497" endtime="20201112 12:26:45.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.500" endtime="20201112 12:26:45.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.473" endtime="20201112 12:26:45.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.471" endtime="20201112 12:26:45.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.510" endtime="20201112 12:26:45.797"></status>
</kw>
<msg timestamp="20201112 12:26:45.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022788347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.509" endtime="20201112 12:26:45.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022788347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.801" endtime="20201112 12:26:45.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.810" endtime="20201112 12:26:45.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.506" endtime="20201112 12:26:45.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.504" endtime="20201112 12:26:45.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.817" level="INFO">${RESULT} = [{'time': 0.022850542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2195000000001e-05, 'source_diff': 6.2195000000001e-05}, {'time': 0.022931569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201112 12:26:45.813" endtime="20201112 12:26:45.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:45.831" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:45.818" endtime="20201112 12:26:45.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.835" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:26:45.834" endtime="20201112 12:26:45.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.838" level="INFO">VALUE: [6.2195000000001e-05, 6.2582999999998e-05, 6.2889e-05, 6.280600000000205e-05, 6.272300000000064e-05, 6.277799999999945e-05, 6.241599999999917e-05, 6.295799999999838e-05, 6.261100000000061e-05, 6.247200000000092e-05, 6.230599999999809e-05, 6.220799999999763e-05, 6.263899999999975e-05, 6.262499999999671e-05, 6.280600000000205e-05, 6.222200000000067e-05, 6.230599999999809e-05, 6.272299999999717e-05, 6.300000000000056e-05, 6.23889999999995e-05, 6.23889999999995e-05, 6.237499999999993e-05, 6.204099999999879e-05, 6.204099999999879e-05, 6.20690000000014e-05, 6.237499999999993e-05, 6.261100000000061e-05, 6.263899999999975e-05, 6.230599999999809e-05, 6.220900000000057e-05, 6.282000000000162e-05, 6.250000000000006e-05, 6.254199999999877e-05, 6.23889999999995e-05, 6.284699999999782e-05, 6.286100000000086e-05, 6.212499999999968e-05, 6.212499999999968e-05, 6.245799999999788e-05, 6.295900000000132e-05, 6.295800000000185e-05, 6.295800000000185e-05, 6.295900000000132e-05, 6.251399999999963e-05, 6.245900000000082e-05, 6.230600000000155e-05, 6.204100000000226e-05, 6.219400000000153e-05, 6.297200000000142e-05, 6.247199999999745e-05]</msg>
<status status="PASS" starttime="20201112 12:26:45.836" endtime="20201112 12:26:45.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.832" endtime="20201112 12:26:45.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.842" endtime="20201112 12:26:45.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.845" endtime="20201112 12:26:45.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.844" endtime="20201112 12:26:45.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.840" endtime="20201112 12:26:45.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.469" endtime="20201112 12:26:45.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.468" endtime="20201112 12:26:45.866"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.875" endtime="20201112 12:26:45.893"></status>
</kw>
<msg timestamp="20201112 12:26:45.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.873" endtime="20201112 12:26:45.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.895" endtime="20201112 12:26:45.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.897" endtime="20201112 12:26:45.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.871" endtime="20201112 12:26:45.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.869" endtime="20201112 12:26:45.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.908" endtime="20201112 12:26:46.194"></status>
</kw>
<msg timestamp="20201112 12:26:46.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.906" endtime="20201112 12:26:46.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.198" endtime="20201112 12:26:46.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.206" endtime="20201112 12:26:46.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.903" endtime="20201112 12:26:46.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.902" endtime="20201112 12:26:46.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.213" level="INFO">${RESULT} = [{'time': 0.022587569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.366599999999695e-05, 'source_diff': 6.366599999999695e-05}, {'time': 0.022670583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:46.210" endtime="20201112 12:26:46.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:46.227" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:46.214" endtime="20201112 12:26:46.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.232" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:26:46.231" endtime="20201112 12:26:46.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.235" level="INFO">VALUE: [6.366599999999695e-05, 6.369399999999956e-05, 6.330499999999961e-05, 6.372200000000217e-05, 6.379099999999707e-05, 6.322200000000167e-05, 6.347199999999845e-05, 6.363900000000075e-05, 6.379200000000002e-05, 6.3889000000001e-05, 6.344500000000225e-05, 6.397300000000189e-05, 6.363900000000075e-05, 6.331999999999866e-05, 6.366600000000042e-05, 6.347200000000192e-05, 6.365299999999685e-05, 6.316699999999939e-05, 6.38479999999983e-05, 6.336099999999789e-05, 6.331999999999866e-05, 6.390300000000057e-05, 6.362500000000118e-05, 6.331999999999866e-05, 6.395800000000285e-05, 6.349999999999759e-05, 6.397300000000189e-05, 6.313800000000078e-05, 6.362500000000118e-05, 6.398600000000199e-05, 6.329199999999952e-05, 6.337500000000093e-05, 6.35280000000002e-05, 6.318100000000243e-05, 6.363900000000075e-05, 6.329199999999952e-05, 6.387500000000143e-05, 6.383299999999925e-05, 6.358300000000247e-05, 6.322300000000114e-05, 6.395900000000232e-05, 6.363900000000075e-05, 6.381899999999968e-05, 6.386100000000186e-05, 6.361099999999814e-05, 6.348599999999802e-05, 6.313900000000025e-05, 6.330599999999909e-05, 6.304199999999927e-05, 6.370900000000207e-05]</msg>
<status status="PASS" starttime="20201112 12:26:46.233" endtime="20201112 12:26:46.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.228" endtime="20201112 12:26:46.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.243" endtime="20201112 12:26:46.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.246" endtime="20201112 12:26:46.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.245" endtime="20201112 12:26:46.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.241" endtime="20201112 12:26:46.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.867" endtime="20201112 12:26:46.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.866" endtime="20201112 12:26:46.267"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.276" endtime="20201112 12:26:46.295"></status>
</kw>
<msg timestamp="20201112 12:26:46.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.274" endtime="20201112 12:26:46.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.296" endtime="20201112 12:26:46.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.299" endtime="20201112 12:26:46.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.272" endtime="20201112 12:26:46.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.270" endtime="20201112 12:26:46.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.309" endtime="20201112 12:26:46.594"></status>
</kw>
<msg timestamp="20201112 12:26:46.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:46.308" endtime="20201112 12:26:46.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:46.598" endtime="20201112 12:26:46.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.606" endtime="20201112 12:26:46.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.305" endtime="20201112 12:26:46.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.303" endtime="20201112 12:26:46.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.613" level="INFO">${RESULT} = [{'time': 0.022774986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.448599999999902e-05, 'source_diff': 6.448599999999902e-05}, {'time': 0.022857, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:46.610" endtime="20201112 12:26:46.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:46.629" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:46.614" endtime="20201112 12:26:46.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.633" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:26:46.632" endtime="20201112 12:26:46.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.636" level="INFO">VALUE: [6.448599999999902e-05, 6.429200000000052e-05, 6.488899999999853e-05, 6.461099999999914e-05, 6.462499999999871e-05, 6.429200000000052e-05, 6.47089999999996e-05, 6.494500000000028e-05, 6.501400000000213e-05, 6.479099999999807e-05, 6.402700000000122e-05, 6.406899999999993e-05, 6.494500000000028e-05, 6.412500000000168e-05, 6.422200000000267e-05, 6.452699999999825e-05, 6.411099999999864e-05, 6.462500000000218e-05, 6.480599999999712e-05, 6.487499999999896e-05, 6.447199999999945e-05, 6.481900000000068e-05, 6.404100000000079e-05, 6.470800000000013e-05, 6.463899999999828e-05, 6.412500000000168e-05, 6.49440000000008e-05, 6.495800000000038e-05, 6.412499999999821e-05, 6.413900000000125e-05, 6.427800000000095e-05, 6.422299999999867e-05, 6.445899999999935e-05, 6.479200000000102e-05, 6.437499999999846e-05, 6.412500000000168e-05, 6.497199999999995e-05, 6.448599999999902e-05, 6.411100000000211e-05, 6.497199999999995e-05, 6.465299999999785e-05, 6.461100000000261e-05, 6.433399999999923e-05, 6.474999999999884e-05, 6.445899999999935e-05, 6.480600000000059e-05, 6.405599999999984e-05, 6.437500000000193e-05, 6.466700000000089e-05, 6.445799999999988e-05]</msg>
<status status="PASS" starttime="20201112 12:26:46.634" endtime="20201112 12:26:46.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.630" endtime="20201112 12:26:46.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.640" endtime="20201112 12:26:46.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.644" endtime="20201112 12:26:46.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.642" endtime="20201112 12:26:46.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.638" endtime="20201112 12:26:46.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.268" endtime="20201112 12:26:46.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.267" endtime="20201112 12:26:46.665"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.674" endtime="20201112 12:26:46.693"></status>
</kw>
<msg timestamp="20201112 12:26:46.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.672" endtime="20201112 12:26:46.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.694" endtime="20201112 12:26:46.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.697" endtime="20201112 12:26:46.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.670" endtime="20201112 12:26:46.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.667" endtime="20201112 12:26:46.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.707" endtime="20201112 12:26:46.993"></status>
</kw>
<msg timestamp="20201112 12:26:46.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022704236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.705" endtime="20201112 12:26:46.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022704236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.998" endtime="20201112 12:26:47.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.006" endtime="20201112 12:26:47.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.703" endtime="20201112 12:26:47.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.701" endtime="20201112 12:26:47.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.013" level="INFO">${RESULT} = [{'time': 0.022704236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.519399999999759e-05, 'source_diff': 6.519399999999759e-05}, {'time': 0.02279225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:47.010" endtime="20201112 12:26:47.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:47.027" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:47.014" endtime="20201112 12:26:47.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.032" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:26:47.031" endtime="20201112 12:26:47.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.035" level="INFO">VALUE: [6.519399999999759e-05, 6.594399999999834e-05, 6.529200000000152e-05, 6.565299999999885e-05, 6.591699999999867e-05, 6.580599999999812e-05, 6.588899999999953e-05, 6.580500000000211e-05, 6.5889000000003e-05, 6.547200000000045e-05, 6.595800000000138e-05, 6.579099999999907e-05, 6.54029999999986e-05, 6.547199999999698e-05, 6.512500000000268e-05, 6.595900000000085e-05, 6.512499999999921e-05, 6.579199999999855e-05, 6.50700000000004e-05, 6.538899999999903e-05, 6.5889000000003e-05, 6.562499999999971e-05, 6.594399999999834e-05, 6.511099999999964e-05, 6.595799999999791e-05, 6.594399999999834e-05, 6.547200000000045e-05, 6.511099999999964e-05, 6.555499999999839e-05, 6.513900000000225e-05, 6.597300000000042e-05, 6.527800000000195e-05, 6.558299999999753e-05, 6.538800000000303e-05, 6.595799999999791e-05, 6.516699999999792e-05, 6.529100000000204e-05, 6.519399999999759e-05, 6.513899999999878e-05, 6.545800000000088e-05, 6.545800000000088e-05, 6.533400000000023e-05, 6.548600000000002e-05, 6.52090000000001e-05, 6.597300000000042e-05, 6.518100000000096e-05, 6.579200000000202e-05, 6.50830000000005e-05, 6.519400000000106e-05, 6.563899999999928e-05]</msg>
<status status="PASS" starttime="20201112 12:26:47.033" endtime="20201112 12:26:47.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.028" endtime="20201112 12:26:47.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.038" endtime="20201112 12:26:47.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.042" endtime="20201112 12:26:47.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.040" endtime="20201112 12:26:47.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.037" endtime="20201112 12:26:47.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.666" endtime="20201112 12:26:47.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.665" endtime="20201112 12:26:47.063"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.072" endtime="20201112 12:26:47.089"></status>
</kw>
<msg timestamp="20201112 12:26:47.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.070" endtime="20201112 12:26:47.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.091" endtime="20201112 12:26:47.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.093" endtime="20201112 12:26:47.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.067" endtime="20201112 12:26:47.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.065" endtime="20201112 12:26:47.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.104" endtime="20201112 12:26:47.390"></status>
</kw>
<msg timestamp="20201112 12:26:47.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022338694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.102" endtime="20201112 12:26:47.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022338694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.394" endtime="20201112 12:26:47.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.403" endtime="20201112 12:26:47.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.100" endtime="20201112 12:26:47.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.098" endtime="20201112 12:26:47.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.410" level="INFO">${RESULT} = [{'time': 0.022404917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.622300000000067e-05, 'source_diff': 6.622300000000067e-05}, {'time': 0.022490931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:47.406" endtime="20201112 12:26:47.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:47.424" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:47.411" endtime="20201112 12:26:47.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.429" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:26:47.428" endtime="20201112 12:26:47.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.431" level="INFO">VALUE: [6.622300000000067e-05, 6.630599999999862e-05, 6.64159999999997e-05, 6.633300000000175e-05, 6.637500000000046e-05, 6.697199999999848e-05, 6.612500000000021e-05, 6.615299999999935e-05, 6.629200000000252e-05, 6.670799999999866e-05, 6.630600000000209e-05, 6.65419999999993e-05, 6.616699999999892e-05, 6.680600000000259e-05, 6.668099999999899e-05, 6.662500000000071e-05, 6.615199999999988e-05, 6.612500000000021e-05, 6.661100000000114e-05, 6.630499999999914e-05, 6.683299999999878e-05, 6.695799999999891e-05, 6.693099999999924e-05, 6.69030000000001e-05, 6.662500000000071e-05, 6.629200000000252e-05, 6.65419999999993e-05, 6.623600000000077e-05, 6.629199999999905e-05, 6.604099999999932e-05, 6.64029999999996e-05, 6.648600000000102e-05, 6.681900000000268e-05, 6.679199999999955e-05, 6.694399999999934e-05, 6.611100000000064e-05, 6.613899999999978e-05, 6.677799999999998e-05, 6.62090000000011e-05, 6.698700000000099e-05, 6.6583999999998e-05, 6.612500000000021e-05, 6.642999999999927e-05, 6.695800000000238e-05, 6.695800000000238e-05, 6.612500000000021e-05, 6.695799999999891e-05, 6.612500000000021e-05, 6.697199999999848e-05, 6.67359999999978e-05]</msg>
<status status="PASS" starttime="20201112 12:26:47.430" endtime="20201112 12:26:47.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.425" endtime="20201112 12:26:47.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.435" endtime="20201112 12:26:47.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.439" endtime="20201112 12:26:47.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.437" endtime="20201112 12:26:47.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.433" endtime="20201112 12:26:47.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.064" endtime="20201112 12:26:47.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.063" endtime="20201112 12:26:47.460"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.468" endtime="20201112 12:26:47.488"></status>
</kw>
<msg timestamp="20201112 12:26:47.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.467" endtime="20201112 12:26:47.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.490" endtime="20201112 12:26:47.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.492" endtime="20201112 12:26:47.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.464" endtime="20201112 12:26:47.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.462" endtime="20201112 12:26:47.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.503" endtime="20201112 12:26:47.788"></status>
</kw>
<msg timestamp="20201112 12:26:47.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022649167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:47.501" endtime="20201112 12:26:47.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022649167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:47.793" endtime="20201112 12:26:47.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.801" endtime="20201112 12:26:47.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.498" endtime="20201112 12:26:47.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.497" endtime="20201112 12:26:47.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.808" level="INFO">${RESULT} = [{'time': 0.022649167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.716699999999992e-05, 'source_diff': 6.716699999999992e-05}, {'time': 0.022732167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:47.805" endtime="20201112 12:26:47.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:47.822" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:47.809" endtime="20201112 12:26:47.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.827" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:26:47.826" endtime="20201112 12:26:47.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.830" level="INFO">VALUE: [6.716699999999992e-05, 6.787500000000196e-05, 6.780600000000012e-05, 6.755500000000039e-05, 6.725000000000134e-05, 6.780500000000064e-05, 6.72359999999983e-05, 6.761099999999867e-05, 6.794400000000034e-05, 6.725000000000134e-05, 6.772199999999923e-05, 6.798600000000252e-05, 6.780600000000012e-05, 6.786099999999892e-05, 6.730599999999962e-05, 6.70419999999998e-05, 6.77090000000026e-05, 6.763900000000128e-05, 6.713900000000078e-05, 6.797199999999948e-05, 6.713900000000078e-05, 6.730599999999962e-05, 6.705599999999937e-05, 6.738900000000103e-05, 6.795799999999991e-05, 6.730599999999962e-05, 6.737500000000146e-05, 6.745900000000235e-05, 6.763900000000128e-05, 6.713899999999731e-05, 6.780500000000064e-05, 6.722199999999873e-05, 6.705499999999989e-05, 6.761099999999867e-05, 6.713899999999731e-05, 6.799999999999862e-05, 6.713900000000078e-05, 6.762499999999824e-05, 6.779200000000055e-05, 6.77229999999987e-05, 6.762500000000171e-05, 6.779200000000055e-05, 6.722199999999873e-05, 6.711100000000164e-05, 6.795799999999991e-05, 6.762499999999824e-05, 6.725000000000134e-05, 6.751400000000116e-05, 6.781900000000021e-05, 6.763900000000128e-05]</msg>
<status status="PASS" starttime="20201112 12:26:47.828" endtime="20201112 12:26:47.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.823" endtime="20201112 12:26:47.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.833" endtime="20201112 12:26:47.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.837" endtime="20201112 12:26:47.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.835" endtime="20201112 12:26:47.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.832" endtime="20201112 12:26:47.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.461" endtime="20201112 12:26:47.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.460" endtime="20201112 12:26:47.858"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.867" endtime="20201112 12:26:47.885"></status>
</kw>
<msg timestamp="20201112 12:26:47.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.865" endtime="20201112 12:26:47.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.886" endtime="20201112 12:26:47.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.889" endtime="20201112 12:26:47.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.862" endtime="20201112 12:26:47.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.860" endtime="20201112 12:26:47.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.899" endtime="20201112 12:26:48.186"></status>
</kw>
<msg timestamp="20201112 12:26:48.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022513042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.898" endtime="20201112 12:26:48.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022513042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.190" endtime="20201112 12:26:48.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.198" endtime="20201112 12:26:48.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.895" endtime="20201112 12:26:48.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.893" endtime="20201112 12:26:48.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.206" level="INFO">${RESULT} = [{'time': 0.022513042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.82640000000019e-05, 'source_diff': 6.82640000000019e-05}, {'time': 0.022595042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:48.202" endtime="20201112 12:26:48.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:48.221" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:48.207" endtime="20201112 12:26:48.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.225" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:26:48.224" endtime="20201112 12:26:48.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.228" level="INFO">VALUE: [6.82640000000019e-05, 6.80839999999995e-05, 6.847299999999945e-05, 6.880599999999765e-05, 6.837499999999899e-05, 6.845800000000041e-05, 6.813900000000178e-05, 6.897200000000048e-05, 6.830500000000114e-05, 6.808300000000003e-05, 6.805600000000037e-05, 6.825000000000234e-05, 6.819399999999712e-05, 6.812499999999874e-05, 6.847299999999945e-05, 6.895900000000038e-05, 6.898600000000005e-05, 6.879200000000155e-05, 6.875000000000284e-05, 6.847199999999998e-05, 6.815300000000135e-05, 6.82359999999993e-05, 6.838899999999856e-05, 6.832000000000019e-05, 6.887499999999949e-05, 6.830600000000062e-05, 6.888900000000253e-05, 6.862499999999924e-05, 6.897299999999995e-05, 6.822199999999973e-05, 6.897200000000048e-05, 6.87909999999986e-05, 6.820800000000016e-05, 6.87909999999986e-05, 6.804100000000132e-05, 6.887500000000296e-05, 6.847300000000292e-05, 6.879199999999808e-05, 6.85420000000013e-05, 6.872200000000023e-05, 6.830600000000062e-05, 6.820899999999963e-05, 6.829200000000105e-05, 6.806900000000046e-05, 6.854099999999835e-05, 6.870800000000066e-05, 6.87359999999998e-05, 6.84030000000016e-05, 6.879200000000155e-05, 6.819400000000059e-05]</msg>
<status status="PASS" starttime="20201112 12:26:48.226" endtime="20201112 12:26:48.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.222" endtime="20201112 12:26:48.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.232" endtime="20201112 12:26:48.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.235" endtime="20201112 12:26:48.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.234" endtime="20201112 12:26:48.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.230" endtime="20201112 12:26:48.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.859" endtime="20201112 12:26:48.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.858" endtime="20201112 12:26:48.256"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.265" endtime="20201112 12:26:48.284"></status>
</kw>
<msg timestamp="20201112 12:26:48.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.264" endtime="20201112 12:26:48.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.285" endtime="20201112 12:26:48.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.288" endtime="20201112 12:26:48.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.261" endtime="20201112 12:26:48.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.259" endtime="20201112 12:26:48.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.298" endtime="20201112 12:26:48.584"></status>
</kw>
<msg timestamp="20201112 12:26:48.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022483333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.297" endtime="20201112 12:26:48.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022483333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.589" endtime="20201112 12:26:48.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.597" endtime="20201112 12:26:48.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.294" endtime="20201112 12:26:48.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.292" endtime="20201112 12:26:48.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.604" level="INFO">${RESULT} = [{'time': 0.022483333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.918000000000202e-05, 'source_diff': 6.918000000000202e-05}, {'time': 0.022565333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:48.601" endtime="20201112 12:26:48.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:48.618" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:48.605" endtime="20201112 12:26:48.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.623" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:26:48.622" endtime="20201112 12:26:48.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.626" level="INFO">VALUE: [6.918000000000202e-05, 6.906900000000146e-05, 6.972199999999776e-05, 6.994399999999887e-05, 6.968100000000199e-05, 6.947200000000098e-05, 6.980600000000212e-05, 6.904199999999833e-05, 6.970800000000166e-05, 6.995900000000138e-05, 6.997300000000095e-05, 6.945900000000088e-05, 6.961100000000067e-05, 6.915200000000288e-05, 6.980499999999917e-05, 6.97360000000008e-05, 6.947200000000098e-05, 6.995800000000191e-05, 6.929200000000205e-05, 6.99169999999992e-05, 6.911100000000017e-05, 6.977799999999951e-05, 6.970799999999819e-05, 6.980600000000212e-05, 6.99299999999993e-05, 6.957000000000144e-05, 6.92909999999991e-05, 6.920799999999769e-05, 6.997199999999801e-05, 6.945800000000141e-05, 6.915299999999888e-05, 6.962500000000024e-05, 6.944399999999837e-05, 7.004099999999985e-05, 6.966699999999895e-05, 6.912499999999974e-05, 6.944499999999784e-05, 6.981899999999874e-05, 6.906899999999799e-05, 6.969400000000209e-05, 6.995799999999844e-05, 6.912499999999974e-05, 6.963899999999981e-05, 6.962500000000024e-05, 6.997199999999801e-05, 6.948600000000055e-05, 6.990299999999963e-05, 6.936099999999695e-05, 6.94299999999988e-05, 6.92360000000003e-05]</msg>
<status status="PASS" starttime="20201112 12:26:48.624" endtime="20201112 12:26:48.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.619" endtime="20201112 12:26:48.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.629" endtime="20201112 12:26:48.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.633" endtime="20201112 12:26:48.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.631" endtime="20201112 12:26:48.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.628" endtime="20201112 12:26:48.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.257" endtime="20201112 12:26:48.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.257" endtime="20201112 12:26:48.654"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.663" endtime="20201112 12:26:48.681"></status>
</kw>
<msg timestamp="20201112 12:26:48.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.661" endtime="20201112 12:26:48.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.683" endtime="20201112 12:26:48.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.685" endtime="20201112 12:26:48.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.659" endtime="20201112 12:26:48.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.656" endtime="20201112 12:26:48.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.696" endtime="20201112 12:26:48.983"></status>
</kw>
<msg timestamp="20201112 12:26:48.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.694" endtime="20201112 12:26:48.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.987" endtime="20201112 12:26:48.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.996" endtime="20201112 12:26:48.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.692" endtime="20201112 12:26:48.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.690" endtime="20201112 12:26:48.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.003" level="INFO">${RESULT} = [{'time': 0.022771736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.038900000000056e-05, 'source_diff': 7.038900000000056e-05}, {'time': 0.022855736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:48.999" endtime="20201112 12:26:49.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:49.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:49.004" endtime="20201112 12:26:49.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.022" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:26:49.021" endtime="20201112 12:26:49.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.024" level="INFO">VALUE: [7.038900000000056e-05, 7.079200000000008e-05, 7.058399999999854e-05, 7.037500000000099e-05, 7.027800000000001e-05, 7.056999999999897e-05, 7.02360000000013e-05, 7.015200000000041e-05, 7.062499999999777e-05, 7.011100000000117e-05, 7.013900000000031e-05, 7.033299999999881e-05, 7.037500000000099e-05, 7.079200000000008e-05, 7.040300000000013e-05, 7.095800000000291e-05, 7.098600000000205e-05, 7.079200000000008e-05, 7.00559999999989e-05, 7.070900000000213e-05, 7.030600000000262e-05, 7.05689999999995e-05, 7.087500000000149e-05, 7.047200000000198e-05, 7.080500000000017e-05, 7.020800000000216e-05, 7.045799999999894e-05, 7.077799999999704e-05, 7.037499999999752e-05, 7.097199999999901e-05, 7.029199999999958e-05, 7.022299999999773e-05, 7.079200000000008e-05, 7.034800000000133e-05, 7.013900000000031e-05, 7.052800000000026e-05, 7.080500000000017e-05, 7.054100000000035e-05, 7.002799999999976e-05, 7.020799999999869e-05, 7.098599999999858e-05, 7.076400000000094e-05, 7.05559999999994e-05, 7.006900000000246e-05, 7.05559999999994e-05, 7.036199999999743e-05, 7.080500000000017e-05, 7.072200000000223e-05, 7.094399999999987e-05, 7.077800000000051e-05]</msg>
<status status="PASS" starttime="20201112 12:26:49.023" endtime="20201112 12:26:49.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.018" endtime="20201112 12:26:49.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.028" endtime="20201112 12:26:49.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.032" endtime="20201112 12:26:49.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.030" endtime="20201112 12:26:49.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.026" endtime="20201112 12:26:49.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.655" endtime="20201112 12:26:49.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.654" endtime="20201112 12:26:49.053"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.062" endtime="20201112 12:26:49.079"></status>
</kw>
<msg timestamp="20201112 12:26:49.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.060" endtime="20201112 12:26:49.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.081" endtime="20201112 12:26:49.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.084" endtime="20201112 12:26:49.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.057" endtime="20201112 12:26:49.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.055" endtime="20201112 12:26:49.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.094" endtime="20201112 12:26:49.380"></status>
</kw>
<msg timestamp="20201112 12:26:49.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02254975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:49.093" endtime="20201112 12:26:49.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02254975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:49.384" endtime="20201112 12:26:49.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.393" endtime="20201112 12:26:49.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.090" endtime="20201112 12:26:49.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.088" endtime="20201112 12:26:49.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.400" level="INFO">${RESULT} = [{'time': 0.022620944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.119400000000012e-05, 'source_diff': 7.119400000000012e-05}, {'time': 0.022704958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:49.396" endtime="20201112 12:26:49.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:49.414" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:49.401" endtime="20201112 12:26:49.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.419" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:26:49.418" endtime="20201112 12:26:49.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.421" level="INFO">VALUE: [7.119400000000012e-05, 7.158300000000006e-05, 7.186199999999893e-05, 7.197200000000001e-05, 7.145799999999994e-05, 7.11109999999987e-05, 7.147200000000298e-05, 7.150000000000212e-05, 7.147199999999951e-05, 7.179199999999761e-05, 7.187499999999902e-05, 7.112499999999827e-05, 7.182000000000022e-05, 7.17230000000027e-05, 7.115300000000088e-05, 7.141600000000123e-05, 7.197200000000001e-05, 7.112500000000174e-05, 7.150000000000212e-05, 7.166700000000095e-05, 7.148599999999908e-05, 7.112500000000174e-05, 7.113900000000131e-05, 7.179199999999761e-05, 7.170899999999966e-05, 7.195899999999991e-05, 7.112499999999827e-05, 7.147199999999951e-05, 7.112500000000174e-05, 7.130500000000067e-05, 7.170800000000019e-05, 7.127799999999754e-05, 7.115299999999741e-05, 7.129199999999711e-05, 7.137499999999852e-05, 7.147199999999951e-05, 7.158399999999954e-05, 7.195899999999991e-05, 7.130600000000015e-05, 7.15690000000005e-05, 7.134699999999938e-05, 7.148600000000255e-05, 7.18049999999977e-05, 7.159799999999911e-05, 7.170800000000019e-05, 7.182000000000022e-05, 7.138899999999809e-05, 7.112499999999827e-05, 7.163899999999834e-05, 7.180600000000065e-05]</msg>
<status status="PASS" starttime="20201112 12:26:49.420" endtime="20201112 12:26:49.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.415" endtime="20201112 12:26:49.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.425" endtime="20201112 12:26:49.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.428" endtime="20201112 12:26:49.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.427" endtime="20201112 12:26:49.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.423" endtime="20201112 12:26:49.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.053" endtime="20201112 12:26:49.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.053" endtime="20201112 12:26:49.449"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.458" endtime="20201112 12:26:49.477"></status>
</kw>
<msg timestamp="20201112 12:26:49.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.457" endtime="20201112 12:26:49.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.479" endtime="20201112 12:26:49.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.481" endtime="20201112 12:26:49.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.454" endtime="20201112 12:26:49.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.452" endtime="20201112 12:26:49.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.492" endtime="20201112 12:26:49.778"></status>
</kw>
<msg timestamp="20201112 12:26:49.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022990111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.490" endtime="20201112 12:26:49.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022990111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.783" endtime="20201112 12:26:49.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.792" endtime="20201112 12:26:49.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.488" endtime="20201112 12:26:49.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.486" endtime="20201112 12:26:49.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.798" level="INFO">${RESULT} = [{'time': 0.022990111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.218000000000155e-05, 'source_diff': 7.218000000000155e-05}, {'time': 0.023076111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:49.795" endtime="20201112 12:26:49.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:49.814" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:49.799" endtime="20201112 12:26:49.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.818" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:26:49.817" endtime="20201112 12:26:49.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.821" level="INFO">VALUE: [7.218000000000155e-05, 7.237499999999952e-05, 7.213899999999884e-05, 7.245799999999747e-05, 7.263899999999934e-05, 7.295900000000091e-05, 7.280599999999818e-05, 7.288899999999959e-05, 7.262499999999977e-05, 7.29439999999984e-05, 7.238899999999909e-05, 7.287500000000002e-05, 7.263899999999934e-05, 7.247200000000051e-05, 7.277799999999904e-05, 7.205599999999743e-05, 7.204199999999786e-05, 7.270900000000066e-05, 7.231899999999777e-05, 7.268099999999805e-05, 7.215299999999841e-05, 7.212499999999927e-05, 7.21109999999997e-05, 7.226399999999897e-05, 7.204100000000185e-05, 7.218000000000155e-05, 7.227799999999854e-05, 7.204199999999786e-05, 7.254199999999836e-05, 7.25560000000014e-05, 7.25560000000014e-05, 7.202799999999829e-05, 7.287500000000002e-05, 7.21109999999997e-05, 7.263899999999934e-05, 7.297199999999754e-05, 7.212499999999927e-05, 7.229200000000158e-05, 7.222200000000026e-05, 7.291699999999873e-05, 7.21109999999997e-05, 7.295900000000091e-05, 7.247299999999998e-05, 7.248600000000008e-05, 7.262499999999977e-05, 7.29439999999984e-05, 7.245800000000094e-05, 7.248600000000008e-05, 7.215299999999841e-05, 7.282000000000122e-05]</msg>
<status status="PASS" starttime="20201112 12:26:49.819" endtime="20201112 12:26:49.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.815" endtime="20201112 12:26:49.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.825" endtime="20201112 12:26:49.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.828" endtime="20201112 12:26:49.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.827" endtime="20201112 12:26:49.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.823" endtime="20201112 12:26:49.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.450" endtime="20201112 12:26:49.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.450" endtime="20201112 12:26:49.849"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.858" endtime="20201112 12:26:49.877"></status>
</kw>
<msg timestamp="20201112 12:26:49.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.856" endtime="20201112 12:26:49.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.878" endtime="20201112 12:26:49.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.881" endtime="20201112 12:26:49.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.854" endtime="20201112 12:26:49.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.851" endtime="20201112 12:26:49.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.892" endtime="20201112 12:26:50.178"></status>
</kw>
<msg timestamp="20201112 12:26:50.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.890" endtime="20201112 12:26:50.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.182" endtime="20201112 12:26:50.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.191" endtime="20201112 12:26:50.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.887" endtime="20201112 12:26:50.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.886" endtime="20201112 12:26:50.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.198" level="INFO">${RESULT} = [{'time': 0.022764306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.352799999999979e-05, 'source_diff': 7.352799999999979e-05}, {'time': 0.022855292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:50.194" endtime="20201112 12:26:50.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:50.212" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:50.199" endtime="20201112 12:26:50.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.216" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:26:50.215" endtime="20201112 12:26:50.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.219" level="INFO">VALUE: [7.352799999999979e-05, 7.362500000000077e-05, 7.329200000000258e-05, 7.305499999999895e-05, 7.355499999999945e-05, 7.391699999999973e-05, 7.312500000000027e-05, 7.365299999999991e-05, 7.313899999999984e-05, 7.312500000000027e-05, 7.380599999999918e-05, 7.355599999999893e-05, 7.386099999999798e-05, 7.329199999999911e-05, 7.309700000000113e-05, 7.340200000000019e-05, 7.384699999999841e-05, 7.370799999999872e-05, 7.36249999999973e-05, 7.36249999999973e-05, 7.366700000000295e-05, 7.36249999999973e-05, 7.397300000000148e-05, 7.397200000000201e-05, 7.384699999999841e-05, 7.35560000000024e-05, 7.372299999999776e-05, 7.36249999999973e-05, 7.362500000000077e-05, 7.36110000000012e-05, 7.398599999999811e-05, 7.379199999999961e-05, 7.307000000000147e-05, 7.387500000000102e-05, 7.380599999999918e-05, 7.387499999999755e-05, 7.376400000000047e-05, 7.304200000000233e-05, 7.370799999999872e-05, 7.395799999999897e-05, 7.330599999999868e-05, 7.386100000000145e-05, 7.395800000000244e-05, 7.347200000000151e-05, 7.356899999999902e-05, 7.377800000000004e-05, 7.304199999999886e-05, 7.355599999999893e-05, 7.358300000000206e-05, 7.320899999999769e-05]</msg>
<status status="PASS" starttime="20201112 12:26:50.218" endtime="20201112 12:26:50.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.213" endtime="20201112 12:26:50.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.223" endtime="20201112 12:26:50.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.226" endtime="20201112 12:26:50.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.225" endtime="20201112 12:26:50.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.221" endtime="20201112 12:26:50.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.850" endtime="20201112 12:26:50.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.849" endtime="20201112 12:26:50.247"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.256" endtime="20201112 12:26:50.274"></status>
</kw>
<msg timestamp="20201112 12:26:50.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.255" endtime="20201112 12:26:50.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.276" endtime="20201112 12:26:50.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.279" endtime="20201112 12:26:50.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.252" endtime="20201112 12:26:50.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.250" endtime="20201112 12:26:50.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.289" endtime="20201112 12:26:50.575"></status>
</kw>
<msg timestamp="20201112 12:26:50.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02244125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022516139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:50.287" endtime="20201112 12:26:50.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02244125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022516139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:50.579" endtime="20201112 12:26:50.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.587" endtime="20201112 12:26:50.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.285" endtime="20201112 12:26:50.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.283" endtime="20201112 12:26:50.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.595" level="INFO">${RESULT} = [{'time': 0.022516139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.488900000000159e-05, 'source_diff': 7.488900000000159e-05}, {'time': 0.022604167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:50.591" endtime="20201112 12:26:50.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:50.609" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:50.596" endtime="20201112 12:26:50.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.613" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:26:50.612" endtime="20201112 12:26:50.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.616" level="INFO">VALUE: [7.488900000000159e-05, 7.430599999999968e-05, 7.419499999999912e-05, 7.427800000000054e-05, 7.406899999999952e-05, 7.406899999999952e-05, 7.487499999999855e-05, 7.479100000000113e-05, 7.487499999999855e-05, 7.41249999999978e-05, 7.413900000000084e-05, 7.491699999999726e-05, 7.480600000000018e-05, 7.472199999999929e-05, 7.445899999999894e-05, 7.430600000000315e-05, 7.423599999999836e-05, 7.426299999999803e-05, 7.488899999999812e-05, 7.429100000000063e-05, 7.473600000000233e-05, 7.431899999999977e-05, 7.487500000000202e-05, 7.46249999999983e-05, 7.480600000000018e-05, 7.488899999999812e-05, 7.433400000000229e-05, 7.451400000000122e-05, 7.487499999999855e-05, 7.415200000000094e-05, 7.413899999999737e-05, 7.477800000000104e-05, 7.419399999999965e-05, 7.416699999999998e-05, 7.481999999999975e-05, 7.422200000000226e-05, 7.445799999999947e-05, 7.495899999999944e-05, 7.483299999999984e-05, 7.422299999999826e-05, 7.409700000000213e-05, 7.43050000000002e-05, 7.449999999999818e-05, 7.470799999999972e-05, 7.46110000000022e-05, 7.46110000000022e-05, 7.46110000000022e-05, 7.430599999999968e-05, 7.413899999999737e-05, 7.465300000000091e-05]</msg>
<status status="PASS" starttime="20201112 12:26:50.614" endtime="20201112 12:26:50.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.610" endtime="20201112 12:26:50.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.620" endtime="20201112 12:26:50.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.623" endtime="20201112 12:26:50.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.622" endtime="20201112 12:26:50.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.618" endtime="20201112 12:26:50.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.248" endtime="20201112 12:26:50.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.248" endtime="20201112 12:26:50.644"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.653" endtime="20201112 12:26:50.672"></status>
</kw>
<msg timestamp="20201112 12:26:50.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.651" endtime="20201112 12:26:50.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.674" endtime="20201112 12:26:50.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.676" endtime="20201112 12:26:50.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.649" endtime="20201112 12:26:50.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.647" endtime="20201112 12:26:50.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.687" endtime="20201112 12:26:50.973"></status>
</kw>
<msg timestamp="20201112 12:26:50.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.685" endtime="20201112 12:26:50.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.977" endtime="20201112 12:26:50.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.985" endtime="20201112 12:26:50.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.682" endtime="20201112 12:26:50.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.681" endtime="20201112 12:26:50.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.993" level="INFO">${RESULT} = [{'time': 0.022510375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.566699999999801e-05, 'source_diff': 7.566699999999801e-05}, {'time': 0.022607389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:50.989" endtime="20201112 12:26:50.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:51.007" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:50.994" endtime="20201112 12:26:51.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.012" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:26:51.011" endtime="20201112 12:26:51.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.014" level="INFO">VALUE: [7.566699999999801e-05, 7.537499999999905e-05, 7.552799999999832e-05, 7.563899999999887e-05, 7.562500000000277e-05, 7.594500000000087e-05, 7.598600000000011e-05, 7.548600000000308e-05, 7.580499999999823e-05, 7.520800000000022e-05, 7.51249999999988e-05, 7.563899999999887e-05, 7.543099999999733e-05, 7.529200000000111e-05, 7.538899999999862e-05, 7.545899999999994e-05, 7.534699999999991e-05, 7.591599999999879e-05, 7.56379999999994e-05, 7.529100000000163e-05, 7.538899999999862e-05, 7.561099999999973e-05, 7.529200000000111e-05, 7.563900000000234e-05, 7.520800000000022e-05, 7.579200000000161e-05, 7.587499999999955e-05, 7.545899999999994e-05, 7.527800000000154e-05, 7.519500000000012e-05, 7.58050000000017e-05, 7.504099999999791e-05, 7.531900000000077e-05, 7.598600000000011e-05, 7.56249999999993e-05, 7.56249999999993e-05, 7.536099999999948e-05, 7.579099999999866e-05, 7.563899999999887e-05, 7.595900000000044e-05, 7.580600000000118e-05, 7.587499999999955e-05, 7.579099999999866e-05, 7.588899999999912e-05, 7.562500000000277e-05, 7.583299999999737e-05, 7.505600000000043e-05, 7.504200000000086e-05, 7.586099999999998e-05, 7.547200000000004e-05]</msg>
<status status="PASS" starttime="20201112 12:26:51.013" endtime="20201112 12:26:51.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.008" endtime="20201112 12:26:51.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.018" endtime="20201112 12:26:51.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.021" endtime="20201112 12:26:51.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.020" endtime="20201112 12:26:51.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.016" endtime="20201112 12:26:51.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.645" endtime="20201112 12:26:51.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.644" endtime="20201112 12:26:51.042"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.051" endtime="20201112 12:26:51.069"></status>
</kw>
<msg timestamp="20201112 12:26:51.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.050" endtime="20201112 12:26:51.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.071" endtime="20201112 12:26:51.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.073" endtime="20201112 12:26:51.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.047" endtime="20201112 12:26:51.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.045" endtime="20201112 12:26:51.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.084" endtime="20201112 12:26:51.369"></status>
</kw>
<msg timestamp="20201112 12:26:51.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022410847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.082" endtime="20201112 12:26:51.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022410847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.374" endtime="20201112 12:26:51.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.382" endtime="20201112 12:26:51.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.079" endtime="20201112 12:26:51.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.077" endtime="20201112 12:26:51.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:51.389" level="INFO">${RESULT} = [{'time': 0.022410847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.638899999999962e-05, 'source_diff': 7.638899999999962e-05}, {'time': 0.022507861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:51.385" endtime="20201112 12:26:51.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:51.404" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:51.390" endtime="20201112 12:26:51.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.409" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:26:51.408" endtime="20201112 12:26:51.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.412" level="INFO">VALUE: [7.638899999999962e-05, 7.61249999999998e-05, 7.665299999999944e-05, 7.691699999999926e-05, 7.66250000000003e-05, 7.6457999999998e-05, 7.663899999999987e-05, 7.63189999999983e-05, 7.608299999999762e-05, 7.688800000000065e-05, 7.616699999999851e-05, 7.665299999999944e-05, 7.697199999999807e-05, 7.61249999999998e-05, 7.659700000000116e-05, 7.606900000000152e-05, 7.680600000000218e-05, 7.622300000000026e-05, 7.66250000000003e-05, 7.680600000000218e-05, 7.605600000000143e-05, 7.605500000000195e-05, 7.66250000000003e-05, 7.687500000000055e-05, 7.629099999999917e-05, 7.672200000000129e-05, 7.697200000000154e-05, 7.702700000000035e-05, 7.66250000000003e-05, 7.615299999999894e-05, 7.62639999999995e-05, 7.670900000000119e-05, 7.661200000000021e-05, 7.69579999999985e-05, 7.615300000000241e-05, 7.63050000000022e-05, 7.620800000000122e-05, 7.697200000000154e-05, 7.680600000000218e-05, 7.655599999999846e-05, 7.638899999999962e-05, 7.61249999999998e-05, 7.61249999999998e-05, 7.615199999999947e-05, 7.6457999999998e-05, 7.680499999999923e-05, 7.673599999999739e-05, 7.663900000000334e-05, 7.686099999999751e-05, 7.69579999999985e-05]</msg>
<status status="PASS" starttime="20201112 12:26:51.410" endtime="20201112 12:26:51.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.405" endtime="20201112 12:26:51.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.419" endtime="20201112 12:26:51.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.423" endtime="20201112 12:26:51.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.421" endtime="20201112 12:26:51.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.418" endtime="20201112 12:26:51.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.043" endtime="20201112 12:26:51.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.043" endtime="20201112 12:26:51.444"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.453" endtime="20201112 12:26:51.471"></status>
</kw>
<msg timestamp="20201112 12:26:51.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.451" endtime="20201112 12:26:51.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.473" endtime="20201112 12:26:51.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.475" endtime="20201112 12:26:51.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.448" endtime="20201112 12:26:51.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.446" endtime="20201112 12:26:51.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.486" endtime="20201112 12:26:51.772"></status>
</kw>
<msg timestamp="20201112 12:26:51.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.484" endtime="20201112 12:26:51.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.776" endtime="20201112 12:26:51.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.784" endtime="20201112 12:26:51.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.481" endtime="20201112 12:26:51.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.480" endtime="20201112 12:26:51.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:51.792" level="INFO">${RESULT} = [{'time': 0.022552861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.802800000000082e-05, 'source_diff': 7.802800000000082e-05}, {'time': 0.022648847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:51.788" endtime="20201112 12:26:51.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:51.806" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:51.793" endtime="20201112 12:26:51.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.810" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:26:51.809" endtime="20201112 12:26:51.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.813" level="INFO">VALUE: [7.802800000000082e-05, 7.71250000000008e-05, 7.711100000000123e-05, 7.79579999999995e-05, 7.715299999999994e-05, 7.747200000000204e-05, 7.744399999999943e-05, 7.74449999999989e-05, 7.711100000000123e-05, 7.762499999999783e-05, 7.78189999999998e-05, 7.755499999999999e-05, 7.704199999999939e-05, 7.755499999999999e-05, 7.7070000000002e-05, 7.722199999999832e-05, 7.727800000000007e-05, 7.769499999999915e-05, 7.713900000000037e-05, 7.731999999999878e-05, 7.763900000000087e-05, 7.795899999999897e-05, 7.730499999999974e-05, 7.706900000000252e-05, 7.775000000000143e-05, 7.777800000000057e-05, 7.770799999999925e-05, 7.7457999999999e-05, 7.798599999999864e-05, 7.729199999999964e-05, 7.720900000000169e-05, 7.759799999999817e-05, 7.779200000000014e-05, 7.755499999999999e-05, 7.788900000000112e-05, 7.773599999999839e-05, 7.705499999999949e-05, 7.773599999999839e-05, 7.780599999999971e-05, 7.731999999999878e-05, 7.729199999999964e-05, 7.700000000000068e-05, 7.752800000000032e-05, 7.740200000000072e-05, 7.780500000000024e-05, 7.7764000000001e-05, 7.795800000000297e-05, 7.737500000000105e-05, 7.756899999999955e-05, 7.738900000000062e-05]</msg>
<status status="PASS" starttime="20201112 12:26:51.812" endtime="20201112 12:26:51.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.807" endtime="20201112 12:26:51.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.817" endtime="20201112 12:26:51.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.820" endtime="20201112 12:26:51.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.819" endtime="20201112 12:26:51.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.815" endtime="20201112 12:26:51.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.445" endtime="20201112 12:26:51.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.444" endtime="20201112 12:26:51.841"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.850" endtime="20201112 12:26:51.869"></status>
</kw>
<msg timestamp="20201112 12:26:51.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.848" endtime="20201112 12:26:51.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.871" endtime="20201112 12:26:51.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.873" endtime="20201112 12:26:51.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.846" endtime="20201112 12:26:51.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.844" endtime="20201112 12:26:51.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.884" endtime="20201112 12:26:52.168"></status>
</kw>
<msg timestamp="20201112 12:26:52.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022813111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.882" endtime="20201112 12:26:52.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022813111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.172" endtime="20201112 12:26:52.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.181" endtime="20201112 12:26:52.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.880" endtime="20201112 12:26:52.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.878" endtime="20201112 12:26:52.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.188" level="INFO">${RESULT} = [{'time': 0.022891292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.818100000000008e-05, 'source_diff': 7.818100000000008e-05}, {'time': 0.022986347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:52.184" endtime="20201112 12:26:52.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.202" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:52.189" endtime="20201112 12:26:52.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.207" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.205" endtime="20201112 12:26:52.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.209" level="INFO">VALUE: [7.818100000000008e-05, 7.808299999999962e-05, 7.890199999999875e-05, 7.895799999999703e-05, 7.879100000000167e-05, 7.897300000000301e-05, 7.847199999999957e-05, 7.81250000000018e-05, 7.812499999999833e-05, 7.880600000000071e-05, 7.823599999999889e-05, 7.829200000000064e-05, 7.875000000000243e-05, 7.89580000000005e-05, 7.847200000000304e-05, 7.812499999999833e-05, 7.811099999999876e-05, 7.863900000000187e-05, 7.844399999999696e-05, 7.83190000000003e-05, 7.838899999999815e-05, 7.868000000000111e-05, 7.86250000000023e-05, 7.897299999999954e-05, 7.830499999999727e-05, 7.838800000000215e-05, 7.811100000000223e-05, 7.877699999999863e-05, 7.804200000000039e-05, 7.855499999999752e-05, 7.822199999999932e-05, 7.850000000000218e-05, 7.86250000000023e-05, 7.813900000000137e-05, 7.829200000000064e-05, 7.855600000000046e-05, 7.887500000000255e-05, 7.89580000000005e-05, 7.813900000000137e-05, 7.883300000000037e-05, 7.805500000000049e-05, 7.869400000000068e-05, 7.827800000000107e-05, 7.806999999999953e-05, 7.823599999999889e-05, 7.863900000000187e-05, 7.86519999999985e-05, 7.830500000000074e-05, 7.876399999999853e-05, 7.830499999999727e-05]</msg>
<status status="PASS" starttime="20201112 12:26:52.208" endtime="20201112 12:26:52.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.203" endtime="20201112 12:26:52.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.213" endtime="20201112 12:26:52.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.216" endtime="20201112 12:26:52.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.215" endtime="20201112 12:26:52.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.211" endtime="20201112 12:26:52.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.842" endtime="20201112 12:26:52.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.842" endtime="20201112 12:26:52.237"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.246" endtime="20201112 12:26:52.265"></status>
</kw>
<msg timestamp="20201112 12:26:52.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.245" endtime="20201112 12:26:52.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.267" endtime="20201112 12:26:52.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.269" endtime="20201112 12:26:52.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.242" endtime="20201112 12:26:52.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.240" endtime="20201112 12:26:52.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.280" endtime="20201112 12:26:52.566"></status>
</kw>
<msg timestamp="20201112 12:26:52.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226455, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:52.278" endtime="20201112 12:26:52.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226455, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:52.570" endtime="20201112 12:26:52.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.579" endtime="20201112 12:26:52.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.276" endtime="20201112 12:26:52.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.274" endtime="20201112 12:26:52.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.586" level="INFO">${RESULT} = [{'time': 0.0226455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916699999999804e-05, 'source_diff': 7.916699999999804e-05}, {'time': 0.022740514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:52.582" endtime="20201112 12:26:52.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.600" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:52.587" endtime="20201112 12:26:52.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.605" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.604" endtime="20201112 12:26:52.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.607" level="INFO">VALUE: [7.916699999999804e-05, 7.972200000000082e-05, 7.929199999999817e-05, 7.920900000000022e-05, 7.947300000000004e-05, 7.997300000000054e-05, 7.997200000000107e-05, 7.99719999999976e-05, 7.91250000000028e-05, 7.912499999999933e-05, 7.924999999999946e-05, 7.969399999999821e-05, 7.980599999999824e-05, 7.937499999999958e-05, 7.96389999999994e-05, 7.980600000000171e-05, 7.990200000000322e-05, 7.930500000000174e-05, 7.922200000000032e-05, 7.933300000000088e-05, 7.970800000000125e-05, 7.930500000000174e-05, 7.937500000000305e-05, 7.947200000000057e-05, 7.96389999999994e-05, 7.911099999999976e-05, 7.998600000000064e-05, 7.9458999999997e-05, 7.979199999999867e-05, 7.972199999999735e-05, 7.936100000000001e-05, 7.970800000000125e-05, 7.912499999999933e-05, 7.9458000000001e-05, 7.913900000000237e-05, 7.958300000000113e-05, 7.95129999999998e-05, 7.94450000000009e-05, 7.927800000000207e-05, 7.933400000000035e-05, 7.98190000000018e-05, 7.937499999999958e-05, 7.92909999999987e-05, 7.919400000000118e-05, 7.91250000000028e-05, 8.001399999999978e-05, 7.915299999999847e-05, 7.96389999999994e-05, 7.980599999999824e-05, 7.940299999999872e-05]</msg>
<status status="PASS" starttime="20201112 12:26:52.606" endtime="20201112 12:26:52.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.601" endtime="20201112 12:26:52.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.611" endtime="20201112 12:26:52.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.614" endtime="20201112 12:26:52.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.613" endtime="20201112 12:26:52.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.609" endtime="20201112 12:26:52.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.238" endtime="20201112 12:26:52.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.238" endtime="20201112 12:26:52.635"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.644" endtime="20201112 12:26:52.664"></status>
</kw>
<msg timestamp="20201112 12:26:52.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.643" endtime="20201112 12:26:52.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.665" endtime="20201112 12:26:52.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.668" endtime="20201112 12:26:52.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.640" endtime="20201112 12:26:52.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.638" endtime="20201112 12:26:52.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.678" endtime="20201112 12:26:52.965"></status>
</kw>
<msg timestamp="20201112 12:26:52.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022999361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023079583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.677" endtime="20201112 12:26:52.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022999361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023079583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.970" endtime="20201112 12:26:52.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.978" endtime="20201112 12:26:52.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.674" endtime="20201112 12:26:52.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.672" endtime="20201112 12:26:52.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.985" level="INFO">${RESULT} = [{'time': 0.023079583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.022200000000132e-05, 'source_diff': 8.022200000000132e-05}, {'time': 0.023180542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:52.982" endtime="20201112 12:26:52.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:53.001" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:52.986" endtime="20201112 12:26:53.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.005" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:26:53.004" endtime="20201112 12:26:53.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.008" level="INFO">VALUE: [8.022200000000132e-05, 8.070899999999825e-05, 8.03329999999984e-05, 8.022200000000132e-05, 8.045799999999853e-05, 8.095799999999903e-05, 8.102800000000035e-05, 8.062500000000083e-05, 8.063899999999694e-05, 8.011100000000076e-05, 8.094499999999893e-05, 8.012500000000033e-05, 8.036099999999755e-05, 8.090200000000075e-05, 8.080499999999977e-05, 8.019399999999871e-05, 8.02909999999997e-05, 8.022200000000132e-05, 8.051400000000028e-05, 8.029199999999917e-05, 8.086100000000151e-05, 8.029199999999917e-05, 8.073600000000139e-05, 8.047299999999757e-05, 8.036100000000101e-05, 8.036200000000049e-05, 8.07910000000002e-05, 8.026400000000003e-05, 8.015299999999947e-05, 8.07780000000001e-05, 8.002799999999935e-05, 8.004200000000239e-05, 8.037499999999712e-05, 8.065299999999997e-05, 8.081999999999881e-05, 8.033400000000135e-05, 8.029199999999917e-05, 8.088800000000118e-05, 8.102800000000035e-05, 8.045799999999853e-05, 8.015299999999947e-05, 8.029200000000264e-05, 8.037500000000058e-05, 8.04719999999981e-05, 8.066699999999954e-05, 8.098700000000111e-05, 8.079199999999967e-05, 8.088800000000118e-05, 8.083300000000238e-05, 8.088900000000065e-05]</msg>
<status status="PASS" starttime="20201112 12:26:53.007" endtime="20201112 12:26:53.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.002" endtime="20201112 12:26:53.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.012" endtime="20201112 12:26:53.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.015" endtime="20201112 12:26:53.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.014" endtime="20201112 12:26:53.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.010" endtime="20201112 12:26:53.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.636" endtime="20201112 12:26:53.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.636" endtime="20201112 12:26:53.036"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.045" endtime="20201112 12:26:53.064"></status>
</kw>
<msg timestamp="20201112 12:26:53.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.044" endtime="20201112 12:26:53.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.066" endtime="20201112 12:26:53.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.068" endtime="20201112 12:26:53.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.041" endtime="20201112 12:26:53.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.039" endtime="20201112 12:26:53.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.079" endtime="20201112 12:26:53.366"></status>
</kw>
<msg timestamp="20201112 12:26:53.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022942708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023024042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.077" endtime="20201112 12:26:53.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022942708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023024042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.370" endtime="20201112 12:26:53.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.379" endtime="20201112 12:26:53.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.074" endtime="20201112 12:26:53.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.073" endtime="20201112 12:26:53.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:53.386" level="INFO">${RESULT} = [{'time': 0.023024042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.133400000000235e-05, 'source_diff': 8.133400000000235e-05}, {'time': 0.023121056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:53.383" endtime="20201112 12:26:53.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:53.400" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:53.387" endtime="20201112 12:26:53.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.405" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:26:53.404" endtime="20201112 12:26:53.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.408" level="INFO">VALUE: [8.133400000000235e-05, 8.19589999999995e-05, 8.116600000000057e-05, 8.131899999999984e-05, 8.155500000000052e-05, 8.156900000000009e-05, 8.187499999999862e-05, 8.17780000000011e-05, 8.105599999999949e-05, 8.127700000000113e-05, 8.130599999999974e-05, 8.186099999999905e-05, 8.129200000000017e-05, 8.122199999999885e-05, 8.18049999999973e-05, 8.190300000000122e-05, 8.1458000000003e-05, 8.159699999999923e-05, 8.194400000000046e-05, 8.199999999999874e-05, 8.130599999999974e-05, 8.137500000000158e-05, 8.11109999999983e-05, 8.133300000000288e-05, 8.188799999999871e-05, 8.180500000000077e-05, 8.155500000000052e-05, 8.105500000000002e-05, 8.108399999999863e-05, 8.137500000000158e-05, 8.179200000000067e-05, 8.190300000000122e-05, 8.11390000000009e-05, 8.18329999999999e-05, 8.106899999999959e-05, 8.155500000000052e-05, 8.188900000000165e-05, 8.16390000000014e-05, 8.195800000000003e-05, 8.148599999999867e-05, 8.180600000000024e-05, 8.187500000000208e-05, 8.16659999999976e-05, 8.133400000000235e-05, 8.122299999999832e-05, 8.107000000000253e-05, 8.13049999999968e-05, 8.188899999999819e-05, 8.19719999999996e-05, 8.151399999999781e-05]</msg>
<status status="PASS" starttime="20201112 12:26:53.406" endtime="20201112 12:26:53.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.401" endtime="20201112 12:26:53.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.411" endtime="20201112 12:26:53.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.415" endtime="20201112 12:26:53.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.413" endtime="20201112 12:26:53.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.410" endtime="20201112 12:26:53.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.037" endtime="20201112 12:26:53.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.036" endtime="20201112 12:26:53.436"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.445" endtime="20201112 12:26:53.464"></status>
</kw>
<msg timestamp="20201112 12:26:53.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.443" endtime="20201112 12:26:53.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.466" endtime="20201112 12:26:53.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.469" endtime="20201112 12:26:53.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.441" endtime="20201112 12:26:53.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.438" endtime="20201112 12:26:53.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.481" endtime="20201112 12:26:53.768"></status>
</kw>
<msg timestamp="20201112 12:26:53.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.479" endtime="20201112 12:26:53.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.772" endtime="20201112 12:26:53.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.781" endtime="20201112 12:26:53.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.476" endtime="20201112 12:26:53.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.474" endtime="20201112 12:26:53.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:53.787" level="INFO">${RESULT} = [{'time': 0.022634542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.219500000000018e-05, 'source_diff': 8.219500000000018e-05}, {'time': 0.022739542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:53.784" endtime="20201112 12:26:53.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:53.802" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:53.788" endtime="20201112 12:26:53.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.806" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:26:53.805" endtime="20201112 12:26:53.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.809" level="INFO">VALUE: [8.219500000000018e-05, 8.287500000000309e-05, 8.261199999999927e-05, 8.25979999999997e-05, 8.294400000000146e-05, 8.291599999999885e-05, 8.212500000000234e-05, 8.29170000000018e-05, 8.29720000000006e-05, 8.225000000000246e-05, 8.207000000000006e-05, 8.257000000000056e-05, 8.272299999999982e-05, 8.213899999999844e-05, 8.2459e-05, 8.223599999999942e-05, 8.272200000000035e-05, 8.29720000000006e-05, 8.24720000000001e-05, 8.22919999999977e-05, 8.269400000000121e-05, 8.274999999999949e-05, 8.219500000000018e-05, 8.230600000000074e-05, 8.238799999999921e-05, 8.2459e-05, 8.295799999999756e-05, 8.231900000000084e-05, 8.24170000000013e-05, 8.263899999999894e-05, 8.22780000000016e-05, 8.27369999999994e-05, 8.27919999999982e-05, 8.257000000000056e-05, 8.205600000000049e-05, 8.240199999999878e-05, 8.262499999999937e-05, 8.245800000000053e-05, 8.230500000000127e-05, 8.241699999999783e-05, 8.24720000000001e-05, 8.245800000000053e-05, 8.244400000000096e-05, 8.2459e-05, 8.280600000000124e-05, 8.207000000000006e-05, 8.269500000000068e-05, 8.27919999999982e-05, 8.287499999999962e-05, 8.24720000000001e-05]</msg>
<status status="PASS" starttime="20201112 12:26:53.807" endtime="20201112 12:26:53.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.803" endtime="20201112 12:26:53.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.813" endtime="20201112 12:26:53.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.816" endtime="20201112 12:26:53.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.814" endtime="20201112 12:26:53.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.811" endtime="20201112 12:26:53.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.437" endtime="20201112 12:26:53.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.436" endtime="20201112 12:26:53.837"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.846" endtime="20201112 12:26:53.866"></status>
</kw>
<msg timestamp="20201112 12:26:53.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.844" endtime="20201112 12:26:53.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.867" endtime="20201112 12:26:53.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.870" endtime="20201112 12:26:53.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.842" endtime="20201112 12:26:53.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.840" endtime="20201112 12:26:53.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.880" endtime="20201112 12:26:54.166"></status>
</kw>
<msg timestamp="20201112 12:26:54.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022763903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.879" endtime="20201112 12:26:54.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022763903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.171" endtime="20201112 12:26:54.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.179" endtime="20201112 12:26:54.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.876" endtime="20201112 12:26:54.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.874" endtime="20201112 12:26:54.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.186" level="INFO">${RESULT} = [{'time': 0.022763903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.333399999999741e-05, 'source_diff': 8.333399999999741e-05}, {'time': 0.022861917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:54.183" endtime="20201112 12:26:54.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.200" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:54.187" endtime="20201112 12:26:54.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.205" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.204" endtime="20201112 12:26:54.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.208" level="INFO">VALUE: [8.333399999999741e-05, 8.347300000000057e-05, 8.394499999999847e-05, 8.362500000000037e-05, 8.395799999999856e-05, 8.345800000000153e-05, 8.326399999999956e-05, 8.373599999999745e-05, 8.397199999999813e-05, 8.313899999999944e-05, 8.34720000000011e-05, 8.365300000000297e-05, 8.363899999999994e-05, 8.381899999999887e-05, 8.323600000000042e-05, 8.345799999999806e-05, 8.379099999999973e-05, 8.340299999999926e-05, 8.347199999999763e-05, 8.34720000000011e-05, 8.315300000000247e-05, 8.363899999999994e-05, 8.331999999999784e-05, 8.305600000000149e-05, 8.306900000000159e-05, 8.322200000000085e-05, 8.34720000000011e-05, 8.362500000000037e-05, 8.3152999999999e-05, 8.380500000000277e-05, 8.372200000000135e-05, 8.34720000000011e-05, 8.366700000000254e-05, 8.39590000000015e-05, 8.387500000000062e-05, 8.32369999999999e-05, 8.36110000000008e-05, 8.381900000000234e-05, 8.388900000000019e-05, 8.38049999999993e-05, 8.337500000000012e-05, 8.313899999999944e-05, 8.404099999999998e-05, 8.362500000000037e-05, 8.381900000000234e-05, 8.322300000000032e-05, 8.315199999999953e-05, 8.347199999999763e-05, 8.36529999999995e-05, 8.375000000000049e-05]</msg>
<status status="PASS" starttime="20201112 12:26:54.206" endtime="20201112 12:26:54.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.201" endtime="20201112 12:26:54.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.212" endtime="20201112 12:26:54.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.215" endtime="20201112 12:26:54.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.213" endtime="20201112 12:26:54.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.210" endtime="20201112 12:26:54.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.838" endtime="20201112 12:26:54.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.837" endtime="20201112 12:26:54.236"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.245" endtime="20201112 12:26:54.264"></status>
</kw>
<msg timestamp="20201112 12:26:54.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.243" endtime="20201112 12:26:54.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.266" endtime="20201112 12:26:54.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.269" endtime="20201112 12:26:54.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.241" endtime="20201112 12:26:54.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.238" endtime="20201112 12:26:54.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.279" endtime="20201112 12:26:54.565"></status>
</kw>
<msg timestamp="20201112 12:26:54.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022942889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023027403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.277" endtime="20201112 12:26:54.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022942889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023027403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.569" endtime="20201112 12:26:54.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.578" endtime="20201112 12:26:54.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.275" endtime="20201112 12:26:54.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.273" endtime="20201112 12:26:54.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.585" level="INFO">${RESULT} = [{'time': 0.023027403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.451399999999734e-05, 'source_diff': 8.451399999999734e-05}, {'time': 0.023126403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:54.581" endtime="20201112 12:26:54.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.600" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:54.586" endtime="20201112 12:26:54.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.605" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.604" endtime="20201112 12:26:54.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.607" level="INFO">VALUE: [8.451399999999734e-05, 8.463900000000094e-05, 8.432000000000231e-05, 8.401400000000031e-05, 8.405599999999902e-05, 8.488899999999772e-05, 8.42919999999997e-05, 8.420799999999881e-05, 8.409699999999826e-05, 8.440300000000026e-05, 8.477800000000063e-05, 8.406999999999859e-05, 8.423600000000142e-05, 8.426400000000056e-05, 8.454199999999995e-05, 8.404199999999945e-05, 8.487500000000162e-05, 8.431899999999937e-05, 8.490300000000076e-05, 8.497199999999913e-05, 8.462500000000137e-05, 8.495799999999956e-05, 8.411099999999783e-05, 8.412500000000087e-05, 8.44729999999981e-05, 8.461099999999833e-05, 8.429099999999676e-05, 8.455500000000005e-05, 8.458299999999919e-05, 8.44859999999982e-05, 8.488900000000119e-05, 8.430599999999927e-05, 8.44720000000021e-05, 8.408399999999816e-05, 8.463900000000094e-05, 8.412500000000087e-05, 8.494499999999947e-05, 8.463799999999799e-05, 8.413900000000044e-05, 8.491700000000033e-05, 8.462500000000137e-05, 8.412500000000087e-05, 8.46249999999979e-05, 8.463900000000094e-05, 8.430599999999927e-05, 8.472299999999836e-05, 8.413900000000044e-05, 8.426299999999762e-05, 8.454100000000048e-05, 8.436099999999808e-05]</msg>
<status status="PASS" starttime="20201112 12:26:54.606" endtime="20201112 12:26:54.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.601" endtime="20201112 12:26:54.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.611" endtime="20201112 12:26:54.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.615" endtime="20201112 12:26:54.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.613" endtime="20201112 12:26:54.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.609" endtime="20201112 12:26:54.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.237" endtime="20201112 12:26:54.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.236" endtime="20201112 12:26:54.636"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.645" endtime="20201112 12:26:54.664"></status>
</kw>
<msg timestamp="20201112 12:26:54.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.643" endtime="20201112 12:26:54.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.665" endtime="20201112 12:26:54.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.668" endtime="20201112 12:26:54.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.640" endtime="20201112 12:26:54.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.638" endtime="20201112 12:26:54.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.678" endtime="20201112 12:26:54.963"></status>
</kw>
<msg timestamp="20201112 12:26:54.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.677" endtime="20201112 12:26:54.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.967" endtime="20201112 12:26:54.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.976" endtime="20201112 12:26:54.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.674" endtime="20201112 12:26:54.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.672" endtime="20201112 12:26:54.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.983" level="INFO">${RESULT} = [{'time': 0.022612417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.534799999999898e-05, 'source_diff': 8.534799999999898e-05}, {'time': 0.022714417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:54.979" endtime="20201112 12:26:54.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.997" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:54.984" endtime="20201112 12:26:54.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.002" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.001" endtime="20201112 12:26:55.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.004" level="INFO">VALUE: [8.534799999999898e-05, 8.525000000000199e-05, 8.562500000000237e-05, 8.552799999999791e-05, 8.594399999999752e-05, 8.59859999999997e-05, 8.595800000000056e-05, 8.597200000000013e-05, 8.57920000000012e-05, 8.54310000000004e-05, 8.579199999999773e-05, 8.586099999999958e-05, 8.524999999999852e-05, 8.538899999999822e-05, 8.513799999999849e-05, 8.563899999999847e-05, 8.591600000000185e-05, 8.513899999999797e-05, 8.56249999999989e-05, 8.52920000000007e-05, 8.505600000000002e-05, 8.572199999999988e-05, 8.51799999999972e-05, 8.530600000000027e-05, 8.587499999999915e-05, 8.513799999999849e-05, 8.570899999999979e-05, 8.597200000000013e-05, 8.579199999999773e-05, 8.587499999999915e-05, 8.595800000000056e-05, 8.527800000000113e-05, 8.523600000000242e-05, 8.530600000000027e-05, 8.573599999999945e-05, 8.563799999999899e-05, 8.579100000000173e-05, 8.53469999999995e-05, 8.554199999999748e-05, 8.58059999999973e-05, 8.545800000000006e-05, 8.580600000000077e-05, 8.540300000000126e-05, 8.579199999999773e-05, 8.572299999999936e-05, 8.59859999999997e-05, 8.595800000000056e-05, 8.531900000000037e-05, 8.587499999999915e-05, 8.563900000000194e-05]</msg>
<status status="PASS" starttime="20201112 12:26:55.003" endtime="20201112 12:26:55.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.998" endtime="20201112 12:26:55.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.008" endtime="20201112 12:26:55.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.012" endtime="20201112 12:26:55.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.010" endtime="20201112 12:26:55.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.006" endtime="20201112 12:26:55.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.636" endtime="20201112 12:26:55.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.636" endtime="20201112 12:26:55.032"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.041" endtime="20201112 12:26:55.061"></status>
</kw>
<msg timestamp="20201112 12:26:55.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.040" endtime="20201112 12:26:55.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.062" endtime="20201112 12:26:55.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.065" endtime="20201112 12:26:55.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.037" endtime="20201112 12:26:55.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.035" endtime="20201112 12:26:55.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.075" endtime="20201112 12:26:55.361"></status>
</kw>
<msg timestamp="20201112 12:26:55.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.074" endtime="20201112 12:26:55.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.365" endtime="20201112 12:26:55.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.374" endtime="20201112 12:26:55.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.071" endtime="20201112 12:26:55.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.069" endtime="20201112 12:26:55.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.381" level="INFO">${RESULT} = [{'time': 0.022514083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.701399999999984e-05, 'source_diff': 8.701399999999984e-05}, {'time': 0.022619125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:55.377" endtime="20201112 12:26:55.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:55.395" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:55.382" endtime="20201112 12:26:55.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.400" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.399" endtime="20201112 12:26:55.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.402" level="INFO">VALUE: [8.701399999999984e-05, 8.633300000000094e-05, 8.623599999999995e-05, 8.659700000000076e-05, 8.661100000000033e-05, 8.631999999999737e-05, 8.623599999999995e-05, 8.686100000000058e-05, 8.605499999999808e-05, 8.622200000000038e-05, 8.63189999999979e-05, 8.6944999999998e-05, 8.641699999999836e-05, 8.66249999999999e-05, 8.613900000000244e-05, 8.63059999999978e-05, 8.679100000000273e-05, 8.632000000000084e-05, 8.636100000000008e-05, 8.64449999999975e-05, 8.695800000000156e-05, 8.679099999999926e-05, 8.672200000000088e-05, 8.663900000000294e-05, 8.649999999999977e-05, 8.630600000000127e-05, 8.670800000000131e-05, 8.645900000000054e-05, 8.63059999999978e-05, 8.604199999999798e-05, 8.672200000000088e-05, 8.645800000000106e-05, 8.627800000000213e-05, 8.66119999999998e-05, 8.683299999999797e-05, 8.679199999999873e-05, 8.690299999999929e-05, 8.630600000000127e-05, 8.637499999999965e-05, 8.68059999999983e-05, 8.606900000000112e-05, 8.637499999999965e-05, 8.647200000000063e-05, 8.63050000000018e-05, 8.675000000000002e-05, 8.645800000000106e-05, 8.681999999999787e-05, 8.688899999999972e-05, 8.679199999999873e-05, 8.654199999999848e-05]</msg>
<status status="PASS" starttime="20201112 12:26:55.401" endtime="20201112 12:26:55.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.396" endtime="20201112 12:26:55.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.406" endtime="20201112 12:26:55.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.409" endtime="20201112 12:26:55.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.408" endtime="20201112 12:26:55.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.404" endtime="20201112 12:26:55.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.033" endtime="20201112 12:26:55.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.033" endtime="20201112 12:26:55.430"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.439" endtime="20201112 12:26:55.458"></status>
</kw>
<msg timestamp="20201112 12:26:55.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.438" endtime="20201112 12:26:55.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.460" endtime="20201112 12:26:55.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.463" endtime="20201112 12:26:55.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.435" endtime="20201112 12:26:55.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.433" endtime="20201112 12:26:55.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.473" endtime="20201112 12:26:55.759"></status>
</kw>
<msg timestamp="20201112 12:26:55.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022593597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.471" endtime="20201112 12:26:55.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022593597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.763" endtime="20201112 12:26:55.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.772" endtime="20201112 12:26:55.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.469" endtime="20201112 12:26:55.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.467" endtime="20201112 12:26:55.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.779" level="INFO">${RESULT} = [{'time': 0.022593597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.800000000000127e-05, 'source_diff': 8.800000000000127e-05}, {'time': 0.022695625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:55.775" endtime="20201112 12:26:55.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:55.794" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:55.780" endtime="20201112 12:26:55.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.799" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.798" endtime="20201112 12:26:55.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.801" level="INFO">VALUE: [8.800000000000127e-05, 8.73189999999989e-05, 8.772199999999841e-05, 8.729199999999923e-05, 8.752799999999991e-05, 8.704199999999898e-05, 8.773700000000093e-05, 8.78059999999993e-05, 8.737499999999718e-05, 8.729099999999976e-05, 8.704099999999951e-05, 8.769399999999927e-05, 8.727799999999966e-05, 8.788900000000072e-05, 8.797199999999866e-05, 8.726400000000009e-05, 8.751400000000034e-05, 8.738900000000022e-05, 8.72920000000027e-05, 8.754100000000001e-05, 8.704099999999951e-05, 8.722200000000138e-05, 8.7153000000003e-05, 8.747200000000163e-05, 8.729199999999923e-05, 8.786099999999811e-05, 8.729199999999923e-05, 8.738899999999675e-05, 8.795900000000204e-05, 8.784700000000201e-05, 8.750000000000077e-05, 8.752700000000044e-05, 8.752799999999991e-05, 8.740299999999979e-05, 8.731999999999837e-05, 8.755599999999905e-05, 8.755599999999905e-05, 8.788900000000072e-05, 8.794500000000247e-05, 8.795899999999857e-05, 8.763799999999752e-05, 8.715299999999954e-05, 8.747200000000163e-05, 8.744399999999902e-05, 8.795799999999909e-05, 8.732000000000184e-05, 8.791699999999986e-05, 8.78189999999994e-05, 8.704199999999898e-05, 8.773600000000145e-05]</msg>
<status status="PASS" starttime="20201112 12:26:55.800" endtime="20201112 12:26:55.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.795" endtime="20201112 12:26:55.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.805" endtime="20201112 12:26:55.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.808" endtime="20201112 12:26:55.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.807" endtime="20201112 12:26:55.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.803" endtime="20201112 12:26:55.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.431" endtime="20201112 12:26:55.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.431" endtime="20201112 12:26:55.829"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.838" endtime="20201112 12:26:55.857"></status>
</kw>
<msg timestamp="20201112 12:26:55.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.837" endtime="20201112 12:26:55.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.859" endtime="20201112 12:26:55.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.862" endtime="20201112 12:26:55.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.834" endtime="20201112 12:26:55.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.832" endtime="20201112 12:26:55.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.872" endtime="20201112 12:26:56.157"></status>
</kw>
<msg timestamp="20201112 12:26:56.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.871" endtime="20201112 12:26:56.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.162" endtime="20201112 12:26:56.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.170" endtime="20201112 12:26:56.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.868" endtime="20201112 12:26:56.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.866" endtime="20201112 12:26:56.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.177" level="INFO">${RESULT} = [{'time': 0.022582542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.873599999999898e-05, 'source_diff': 8.873599999999898e-05}, {'time': 0.0226905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:56.174" endtime="20201112 12:26:56.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.192" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:56.178" endtime="20201112 12:26:56.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.197" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.196" endtime="20201112 12:26:56.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.200" level="INFO">VALUE: [8.873599999999898e-05, 8.888899999999825e-05, 8.847199999999916e-05, 8.811100000000183e-05, 8.897299999999914e-05, 8.858399999999919e-05, 8.863900000000147e-05, 8.901399999999837e-05, 8.897199999999966e-05, 8.872199999999941e-05, 8.823599999999848e-05, 8.813900000000097e-05, 8.897199999999966e-05, 8.895800000000009e-05, 8.901400000000184e-05, 8.898700000000218e-05, 8.895899999999957e-05, 8.880499999999736e-05, 8.84449999999995e-05, 8.880500000000083e-05, 8.822200000000238e-05, 8.86250000000019e-05, 8.894400000000052e-05, 8.83059999999998e-05, 8.843000000000045e-05, 8.823600000000195e-05, 8.805599999999955e-05, 8.804100000000051e-05, 8.872200000000288e-05, 8.845800000000306e-05, 8.893000000000095e-05, 8.88190000000004e-05, 8.879099999999779e-05, 8.898599999999923e-05, 8.829200000000023e-05, 8.822300000000186e-05, 8.879199999999726e-05, 8.822199999999891e-05, 8.811099999999836e-05, 8.880500000000083e-05, 8.890299999999782e-05, 8.897199999999966e-05, 8.88060000000003e-05, 8.822199999999891e-05, 8.827799999999719e-05, 8.888900000000172e-05, 8.877800000000116e-05, 8.887499999999868e-05, 8.859699999999929e-05, 8.811099999999836e-05]</msg>
<status status="PASS" starttime="20201112 12:26:56.198" endtime="20201112 12:26:56.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.193" endtime="20201112 12:26:56.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.203" endtime="20201112 12:26:56.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.207" endtime="20201112 12:26:56.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.205" endtime="20201112 12:26:56.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.202" endtime="20201112 12:26:56.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.830" endtime="20201112 12:26:56.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.830" endtime="20201112 12:26:56.228"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.237" endtime="20201112 12:26:56.257"></status>
</kw>
<msg timestamp="20201112 12:26:56.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.235" endtime="20201112 12:26:56.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.258" endtime="20201112 12:26:56.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.261" endtime="20201112 12:26:56.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.232" endtime="20201112 12:26:56.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.230" endtime="20201112 12:26:56.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.271" endtime="20201112 12:26:56.556"></status>
</kw>
<msg timestamp="20201112 12:26:56.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.270" endtime="20201112 12:26:56.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.561" endtime="20201112 12:26:56.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.569" endtime="20201112 12:26:56.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.267" endtime="20201112 12:26:56.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.265" endtime="20201112 12:26:56.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.576" level="INFO">${RESULT} = [{'time': 0.022871861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.976399999999912e-05, 'source_diff': 8.976399999999912e-05}, {'time': 0.022977861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:56.573" endtime="20201112 12:26:56.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.590" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:56.577" endtime="20201112 12:26:56.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.595" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.594" endtime="20201112 12:26:56.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.598" level="INFO">VALUE: [8.976399999999912e-05, 8.930499999999786e-05, 8.955600000000105e-05, 8.972200000000041e-05, 8.997200000000066e-05, 8.929200000000123e-05, 8.902800000000141e-05, 8.904199999999751e-05, 8.937499999999918e-05, 8.927699999999872e-05, 8.906900000000065e-05, 8.988899999999925e-05, 8.962499999999943e-05, 8.995800000000109e-05, 8.998600000000023e-05, 8.929200000000123e-05, 8.954200000000148e-05, 8.984800000000001e-05, 8.995799999999762e-05, 8.906900000000065e-05, 8.995800000000109e-05, 8.997200000000066e-05, 8.93060000000008e-05, 8.937499999999918e-05, 8.961099999999986e-05, 8.958400000000019e-05, 8.997300000000014e-05, 8.91250000000024e-05, 8.947200000000016e-05, 8.913900000000197e-05, 8.942999999999798e-05, 8.965299999999857e-05, 8.927800000000166e-05, 8.938899999999875e-05, 8.912499999999893e-05, 8.96250000000029e-05, 8.965299999999857e-05, 8.941699999999789e-05, 8.99999999999998e-05, 8.994399999999805e-05, 8.980499999999836e-05, 8.988899999999925e-05, 8.962499999999943e-05, 8.945799999999712e-05, 8.979200000000173e-05, 8.938899999999875e-05, 8.961099999999986e-05, 8.932000000000037e-05, 8.938799999999927e-05, 9.004200000000198e-05]</msg>
<status status="PASS" starttime="20201112 12:26:56.596" endtime="20201112 12:26:56.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.591" endtime="20201112 12:26:56.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.606" endtime="20201112 12:26:56.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.610" endtime="20201112 12:26:56.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.608" endtime="20201112 12:26:56.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.604" endtime="20201112 12:26:56.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.229" endtime="20201112 12:26:56.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.228" endtime="20201112 12:26:56.631"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.639" endtime="20201112 12:26:56.658"></status>
</kw>
<msg timestamp="20201112 12:26:56.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.638" endtime="20201112 12:26:56.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.660" endtime="20201112 12:26:56.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.663" endtime="20201112 12:26:56.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.635" endtime="20201112 12:26:56.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.633" endtime="20201112 12:26:56.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.673" endtime="20201112 12:26:56.959"></status>
</kw>
<msg timestamp="20201112 12:26:56.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022371653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022462153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.672" endtime="20201112 12:26:56.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022371653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022462153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.963" endtime="20201112 12:26:56.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.972" endtime="20201112 12:26:56.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.669" endtime="20201112 12:26:56.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.667" endtime="20201112 12:26:56.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.978" level="INFO">${RESULT} = [{'time': 0.022462153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.05000000000003e-05, 'source_diff': 9.05000000000003e-05}, {'time': 0.022572167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:56.975" endtime="20201112 12:26:56.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.993" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:56.979" endtime="20201112 12:26:56.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.997" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.996" endtime="20201112 12:26:56.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.000" level="INFO">VALUE: [9.05000000000003e-05, 9.03060000000018e-05, 9.055599999999858e-05, 9.091599999999991e-05, 9.029099999999929e-05, 9.088900000000025e-05, 9.062499999999696e-05, 9.015299999999907e-05, 9.062500000000043e-05, 9.070799999999837e-05, 9.080599999999883e-05, 9.073699999999699e-05, 9.077799999999969e-05, 9.090200000000034e-05, 9.045800000000159e-05, 9.052799999999944e-05, 9.0332999999998e-05, 9.088900000000025e-05, 9.080599999999883e-05, 9.040300000000279e-05, 9.038899999999975e-05, 9.079199999999926e-05, 9.088900000000025e-05, 9.016599999999916e-05, 9.080499999999936e-05, 9.055499999999911e-05, 9.022200000000091e-05, 9.047200000000116e-05, 9.032000000000137e-05, 9.005600000000155e-05, 9.036100000000061e-05, 9.03060000000018e-05, 9.037500000000018e-05, 9.090299999999982e-05, 9.048600000000073e-05, 9.047200000000116e-05, 9.048600000000073e-05, 9.080500000000283e-05, 9.090299999999982e-05, 9.079200000000273e-05, 9.055600000000205e-05, 9.054199999999901e-05, 9.052799999999944e-05, 9.031899999999843e-05, 9.048600000000073e-05, 9.080499999999936e-05, 9.070800000000184e-05, 9.030499999999886e-05, 9.005599999999808e-05, 9.023599999999701e-05]</msg>
<status status="PASS" starttime="20201112 12:26:56.999" endtime="20201112 12:26:57.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.994" endtime="20201112 12:26:57.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.004" endtime="20201112 12:26:57.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.007" endtime="20201112 12:26:57.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.006" endtime="20201112 12:26:57.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.002" endtime="20201112 12:26:57.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.631" endtime="20201112 12:26:57.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.631" endtime="20201112 12:26:57.028"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.037" endtime="20201112 12:26:57.056"></status>
</kw>
<msg timestamp="20201112 12:26:57.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.036" endtime="20201112 12:26:57.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.058" endtime="20201112 12:26:57.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.061" endtime="20201112 12:26:57.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.033" endtime="20201112 12:26:57.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.031" endtime="20201112 12:26:57.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.071" endtime="20201112 12:26:57.357"></status>
</kw>
<msg timestamp="20201112 12:26:57.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02243725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:57.070" endtime="20201112 12:26:57.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02243725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:57.361" endtime="20201112 12:26:57.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.370" endtime="20201112 12:26:57.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.067" endtime="20201112 12:26:57.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.065" endtime="20201112 12:26:57.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.377" level="INFO">${RESULT} = [{'time': 0.022528764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.151400000000087e-05, 'source_diff': 9.151400000000087e-05}, {'time': 0.022637792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:57.373" endtime="20201112 12:26:57.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.391" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:57.378" endtime="20201112 12:26:57.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.396" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.395" endtime="20201112 12:26:57.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.398" level="INFO">VALUE: [9.151400000000087e-05, 9.1639000000001e-05, 9.13199999999989e-05, 9.134800000000151e-05, 9.163799999999805e-05, 9.201400000000137e-05, 9.1639000000001e-05, 9.11390000000005e-05, 9.112500000000093e-05, 9.15000000000013e-05, 9.179200000000026e-05, 9.122199999999844e-05, 9.180599999999983e-05, 9.104199999999951e-05, 9.122199999999844e-05, 9.14719999999987e-05, 9.179100000000079e-05, 9.187499999999821e-05, 9.112500000000093e-05, 9.18199999999994e-05, 9.105599999999908e-05, 9.172200000000241e-05, 9.197299999999867e-05, 9.179199999999679e-05, 9.188899999999778e-05, 9.11390000000005e-05, 9.144399999999955e-05, 9.179099999999732e-05, 9.137499999999771e-05, 9.198599999999876e-05, 9.180599999999983e-05, 9.119499999999878e-05, 9.130599999999933e-05, 9.105599999999908e-05, 9.154100000000054e-05, 9.102700000000047e-05, 9.155500000000011e-05, 9.104100000000004e-05, 9.191699999999692e-05, 9.115300000000007e-05, 9.179200000000026e-05, 9.155599999999958e-05, 9.155599999999958e-05, 9.120900000000182e-05, 9.130499999999986e-05, 9.104100000000004e-05, 9.155500000000011e-05, 9.126400000000062e-05, 9.11390000000005e-05, 9.179200000000026e-05]</msg>
<status status="PASS" starttime="20201112 12:26:57.397" endtime="20201112 12:26:57.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.392" endtime="20201112 12:26:57.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.402" endtime="20201112 12:26:57.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.406" endtime="20201112 12:26:57.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.404" endtime="20201112 12:26:57.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.400" endtime="20201112 12:26:57.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.029" endtime="20201112 12:26:57.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.029" endtime="20201112 12:26:57.427"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.435" endtime="20201112 12:26:57.455"></status>
</kw>
<msg timestamp="20201112 12:26:57.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.434" endtime="20201112 12:26:57.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.457" endtime="20201112 12:26:57.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.460" endtime="20201112 12:26:57.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.431" endtime="20201112 12:26:57.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.429" endtime="20201112 12:26:57.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.470" endtime="20201112 12:26:57.757"></status>
</kw>
<msg timestamp="20201112 12:26:57.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022345236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022438097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.468" endtime="20201112 12:26:57.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022345236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022438097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.761" endtime="20201112 12:26:57.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.769" endtime="20201112 12:26:57.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.466" endtime="20201112 12:26:57.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.464" endtime="20201112 12:26:57.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.776" level="INFO">${RESULT} = [{'time': 0.022438097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.286099999999964e-05, 'source_diff': 9.286099999999964e-05}, {'time': 0.022552069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:57.773" endtime="20201112 12:26:57.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.838" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:57.777" endtime="20201112 12:26:57.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.843" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.842" endtime="20201112 12:26:57.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.846" level="INFO">VALUE: [9.286099999999964e-05, 9.280500000000136e-05, 9.205500000000061e-05, 9.205500000000061e-05, 9.237499999999871e-05, 9.269500000000028e-05, 9.227800000000119e-05, 9.220899999999935e-05, 9.236099999999914e-05, 9.198600000000223e-05, 9.272299999999942e-05, 9.216600000000116e-05, 9.298599999999976e-05, 9.248600000000273e-05, 9.281900000000093e-05, 9.236099999999914e-05, 9.245800000000012e-05, 9.211099999999889e-05, 9.29720000000002e-05, 9.302799999999847e-05, 9.280600000000083e-05, 9.222200000000291e-05, 9.230499999999739e-05, 9.273600000000298e-05, 9.231899999999696e-05, 9.27079999999969e-05, 9.245800000000012e-05, 9.243100000000046e-05, 9.298599999999976e-05, 9.302800000000194e-05, 9.212500000000193e-05, 9.280500000000136e-05, 9.204099999999757e-05, 9.255500000000111e-05, 9.26940000000008e-05, 9.23199999999999e-05, 9.287500000000268e-05, 9.230600000000033e-05, 9.276399999999865e-05, 9.23199999999999e-05, 9.258300000000025e-05, 9.241700000000089e-05, 9.245799999999665e-05, 9.294400000000105e-05, 9.298599999999976e-05, 9.212500000000193e-05, 9.230600000000033e-05, 9.205600000000008e-05, 9.270899999999985e-05, 9.280600000000083e-05]</msg>
<status status="PASS" starttime="20201112 12:26:57.844" endtime="20201112 12:26:57.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.839" endtime="20201112 12:26:57.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.849" endtime="20201112 12:26:57.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.854" endtime="20201112 12:26:57.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.852" endtime="20201112 12:26:57.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.848" endtime="20201112 12:26:57.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.427" endtime="20201112 12:26:57.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.427" endtime="20201112 12:26:57.875"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.884" endtime="20201112 12:26:57.904"></status>
</kw>
<msg timestamp="20201112 12:26:57.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.882" endtime="20201112 12:26:57.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.905" endtime="20201112 12:26:57.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.908" endtime="20201112 12:26:57.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.879" endtime="20201112 12:26:57.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.877" endtime="20201112 12:26:57.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.917" endtime="20201112 12:26:58.203"></status>
</kw>
<msg timestamp="20201112 12:26:58.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022842972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.916" endtime="20201112 12:26:58.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022842972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.207" endtime="20201112 12:26:58.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.216" endtime="20201112 12:26:58.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.913" endtime="20201112 12:26:58.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.911" endtime="20201112 12:26:58.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.222" level="INFO">${RESULT} = [{'time': 0.022842972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.404099999999957e-05, 'source_diff': 9.404099999999957e-05}, {'time': 0.022956986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:58.219" endtime="20201112 12:26:58.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.237" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:58.223" endtime="20201112 12:26:58.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.242" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.241" endtime="20201112 12:26:58.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.244" level="INFO">VALUE: [9.404099999999957e-05, 9.331899999999796e-05, 9.322200000000044e-05, 9.31529999999986e-05, 9.400000000000033e-05, 9.34720000000007e-05, 9.345800000000112e-05, 9.312499999999946e-05, 9.377800000000269e-05, 9.386200000000011e-05, 9.363899999999953e-05, 9.330499999999839e-05, 9.387500000000021e-05, 9.375000000000008e-05, 9.387500000000021e-05, 9.363899999999953e-05, 9.381999999999793e-05, 9.369499999999781e-05, 9.377800000000269e-05, 9.370900000000085e-05, 9.316700000000164e-05, 9.362499999999996e-05, 9.363899999999953e-05, 9.348600000000026e-05, 9.33200000000009e-05, 9.320800000000087e-05, 9.363899999999953e-05, 9.33200000000009e-05, 9.305599999999761e-05, 9.391600000000291e-05, 9.397199999999772e-05, 9.380499999999889e-05, 9.320800000000087e-05, 9.376399999999965e-05, 9.338900000000275e-05, 9.313899999999903e-05, 9.313899999999903e-05, 9.309799999999979e-05, 9.380600000000183e-05, 9.376399999999965e-05, 9.312499999999946e-05, 9.379099999999932e-05, 9.372199999999747e-05, 9.377800000000269e-05, 9.343100000000146e-05, 9.313899999999903e-05, 9.355500000000211e-05, 9.363899999999953e-05, 9.347300000000017e-05, 9.39720000000012e-05]</msg>
<status status="PASS" starttime="20201112 12:26:58.243" endtime="20201112 12:26:58.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.238" endtime="20201112 12:26:58.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.248" endtime="20201112 12:26:58.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.251" endtime="20201112 12:26:58.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.250" endtime="20201112 12:26:58.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.246" endtime="20201112 12:26:58.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.875" endtime="20201112 12:26:58.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.875" endtime="20201112 12:26:58.272"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.282" endtime="20201112 12:26:58.302"></status>
</kw>
<msg timestamp="20201112 12:26:58.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.280" endtime="20201112 12:26:58.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.303" endtime="20201112 12:26:58.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.306" endtime="20201112 12:26:58.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.277" endtime="20201112 12:26:58.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.275" endtime="20201112 12:26:58.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.315" endtime="20201112 12:26:58.601"></status>
</kw>
<msg timestamp="20201112 12:26:58.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.313" endtime="20201112 12:26:58.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.606" endtime="20201112 12:26:58.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.614" endtime="20201112 12:26:58.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.311" endtime="20201112 12:26:58.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.309" endtime="20201112 12:26:58.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.622" level="INFO">${RESULT} = [{'time': 0.022831875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.498600000000176e-05, 'source_diff': 9.498600000000176e-05}, {'time': 0.022944889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:58.619" endtime="20201112 12:26:58.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.636" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:58.623" endtime="20201112 12:26:58.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.641" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.640" endtime="20201112 12:26:58.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.643" level="INFO">VALUE: [9.498600000000176e-05, 9.497199999999872e-05, 9.480600000000283e-05, 9.438900000000028e-05, 9.463800000000105e-05, 9.412500000000046e-05, 9.494399999999958e-05, 9.445799999999865e-05, 9.431899999999896e-05, 9.488899999999731e-05, 9.479199999999979e-05, 9.456999999999868e-05, 9.473700000000099e-05, 9.412500000000046e-05, 9.479199999999979e-05, 9.48880000000013e-05, 9.49859999999983e-05, 9.480499999999989e-05, 9.48469999999986e-05, 9.479200000000326e-05, 9.415300000000307e-05, 9.412500000000046e-05, 9.462500000000096e-05, 9.447300000000117e-05, 9.459700000000182e-05, 9.463900000000053e-05, 9.497199999999872e-05, 9.4333000000002e-05, 9.420800000000187e-05, 9.447199999999822e-05, 9.462500000000096e-05, 9.429199999999929e-05, 9.404199999999904e-05, 9.422300000000092e-05, 9.498600000000176e-05, 9.429099999999982e-05, 9.472200000000194e-05, 9.445800000000212e-05, 9.49720000000022e-05, 9.463900000000053e-05, 9.462500000000096e-05, 9.430600000000233e-05, 9.455599999999911e-05, 9.437500000000071e-05, 9.447199999999822e-05, 9.495799999999915e-05, 9.442999999999951e-05, 9.49859999999983e-05, 9.429199999999929e-05, 9.425000000000058e-05]</msg>
<status status="PASS" starttime="20201112 12:26:58.642" endtime="20201112 12:26:58.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.637" endtime="20201112 12:26:58.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.647" endtime="20201112 12:26:58.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.650" endtime="20201112 12:26:58.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.649" endtime="20201112 12:26:58.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.645" endtime="20201112 12:26:58.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.273" endtime="20201112 12:26:58.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.273" endtime="20201112 12:26:58.671"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.680" endtime="20201112 12:26:58.700"></status>
</kw>
<msg timestamp="20201112 12:26:58.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.679" endtime="20201112 12:26:58.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.702" endtime="20201112 12:26:58.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.705" endtime="20201112 12:26:58.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.676" endtime="20201112 12:26:58.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.674" endtime="20201112 12:26:58.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.714" endtime="20201112 12:26:59.001"></status>
</kw>
<msg timestamp="20201112 12:26:59.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.712" endtime="20201112 12:26:59.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.006" endtime="20201112 12:26:59.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.014" endtime="20201112 12:26:59.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.710" endtime="20201112 12:26:59.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.708" endtime="20201112 12:26:59.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.021" level="INFO">${RESULT} = [{'time': 0.022589347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.555500000000064e-05, 'source_diff': 9.555500000000064e-05}, {'time': 0.022699333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:59.017" endtime="20201112 12:26:59.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.035" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:59.022" endtime="20201112 12:26:59.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.040" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.039" endtime="20201112 12:26:59.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.042" level="INFO">VALUE: [9.555500000000064e-05, 9.59859999999993e-05, 9.597199999999972e-05, 9.545799999999965e-05, 9.54859999999988e-05, 9.580600000000036e-05, 9.552800000000097e-05, 9.590300000000135e-05, 9.547300000000217e-05, 9.595899999999963e-05, 9.597199999999972e-05, 9.545799999999965e-05, 9.579100000000132e-05, 9.540300000000085e-05, 9.568100000000024e-05, 9.579199999999732e-05, 9.57079999999999e-05, 9.580600000000036e-05, 9.555600000000011e-05, 9.505599999999961e-05, 9.544400000000008e-05, 9.595800000000015e-05, 9.561099999999892e-05, 9.527800000000072e-05, 9.554200000000054e-05, 9.556999999999968e-05, 9.572199999999947e-05, 9.54720000000027e-05, 9.597300000000267e-05, 9.547199999999922e-05, 9.563800000000205e-05, 9.547199999999922e-05, 9.595800000000015e-05, 9.513900000000103e-05, 9.579200000000079e-05, 9.593100000000049e-05, 9.579200000000079e-05, 9.587499999999874e-05, 9.594500000000006e-05, 9.519399999999983e-05, 9.529099999999735e-05, 9.562499999999849e-05, 9.555500000000064e-05, 9.556900000000021e-05, 9.57079999999999e-05, 9.547199999999922e-05, 9.594500000000006e-05, 9.547300000000217e-05, 9.600000000000233e-05, 9.520899999999888e-05]</msg>
<status status="PASS" starttime="20201112 12:26:59.041" endtime="20201112 12:26:59.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.036" endtime="20201112 12:26:59.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.046" endtime="20201112 12:26:59.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.049" endtime="20201112 12:26:59.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.048" endtime="20201112 12:26:59.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.044" endtime="20201112 12:26:59.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.672" endtime="20201112 12:26:59.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.672" endtime="20201112 12:26:59.070"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.079" endtime="20201112 12:26:59.099"></status>
</kw>
<msg timestamp="20201112 12:26:59.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.078" endtime="20201112 12:26:59.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.100" endtime="20201112 12:26:59.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.103" endtime="20201112 12:26:59.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.075" endtime="20201112 12:26:59.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.073" endtime="20201112 12:26:59.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.112" endtime="20201112 12:26:59.399"></status>
</kw>
<msg timestamp="20201112 12:26:59.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.111" endtime="20201112 12:26:59.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.404" endtime="20201112 12:26:59.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.412" endtime="20201112 12:26:59.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.108" endtime="20201112 12:26:59.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.106" endtime="20201112 12:26:59.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.419" level="INFO">${RESULT} = [{'time': 0.022557597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.641599999999848e-05, 'source_diff': 9.641599999999848e-05}, {'time': 0.022666625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:59.416" endtime="20201112 12:26:59.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.434" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:59.420" endtime="20201112 12:26:59.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.439" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.438" endtime="20201112 12:26:59.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.442" level="INFO">VALUE: [9.641599999999848e-05, 9.638899999999881e-05, 9.615299999999813e-05, 9.691700000000192e-05, 9.68059999999979e-05, 9.670900000000038e-05, 9.680600000000136e-05, 9.622199999999997e-05, 9.665299999999863e-05, 9.64859999999998e-05, 9.613899999999856e-05, 9.686199999999964e-05, 9.655600000000111e-05, 9.655600000000111e-05, 9.669500000000081e-05, 9.665199999999916e-05, 9.630499999999792e-05, 9.637499999999924e-05, 9.64859999999998e-05, 9.61530000000016e-05, 9.69860000000003e-05, 9.647200000000022e-05, 9.630600000000086e-05, 9.687499999999974e-05, 9.630600000000086e-05, 9.619399999999736e-05, 9.618100000000074e-05, 9.661099999999992e-05, 9.613900000000203e-05, 9.686100000000017e-05, 9.623600000000301e-05, 9.631900000000096e-05, 9.690299999999888e-05, 9.661099999999992e-05, 9.62920000000013e-05, 9.606900000000071e-05, 9.687499999999974e-05, 9.612499999999899e-05, 9.630500000000139e-05, 9.605500000000114e-05, 9.688899999999931e-05, 9.647200000000022e-05, 9.668000000000176e-05, 9.64729999999997e-05, 9.649999999999936e-05, 9.691600000000244e-05, 9.697199999999725e-05, 9.661099999999992e-05, 9.616700000000117e-05, 9.694400000000158e-05]</msg>
<status status="PASS" starttime="20201112 12:26:59.440" endtime="20201112 12:26:59.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.435" endtime="20201112 12:26:59.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.445" endtime="20201112 12:26:59.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.449" endtime="20201112 12:26:59.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.447" endtime="20201112 12:26:59.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.444" endtime="20201112 12:26:59.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.071" endtime="20201112 12:26:59.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.071" endtime="20201112 12:26:59.470"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.479" endtime="20201112 12:26:59.499"></status>
</kw>
<msg timestamp="20201112 12:26:59.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.477" endtime="20201112 12:26:59.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.501" endtime="20201112 12:26:59.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.503" endtime="20201112 12:26:59.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.474" endtime="20201112 12:26:59.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.472" endtime="20201112 12:26:59.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.513" endtime="20201112 12:26:59.800"></status>
</kw>
<msg timestamp="20201112 12:26:59.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022818264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.511" endtime="20201112 12:26:59.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022818264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.804" endtime="20201112 12:26:59.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.813" endtime="20201112 12:26:59.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.508" endtime="20201112 12:26:59.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.506" endtime="20201112 12:26:59.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.820" level="INFO">${RESULT} = [{'time': 0.022916264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.79999999999974e-05, 'source_diff': 9.79999999999974e-05}, {'time': 0.023029278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:59.816" endtime="20201112 12:26:59.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.834" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:59.821" endtime="20201112 12:26:59.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.839" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.838" endtime="20201112 12:26:59.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.842" level="INFO">VALUE: [9.79999999999974e-05, 9.738899999999981e-05, 9.78059999999989e-05, 9.770900000000138e-05, 9.761100000000092e-05, 9.74860000000008e-05, 9.797199999999825e-05, 9.762500000000049e-05, 9.793099999999902e-05, 9.763900000000006e-05, 9.747199999999775e-05, 9.748700000000027e-05, 9.763900000000006e-05, 9.79860000000013e-05, 9.798599999999782e-05, 9.715299999999913e-05, 9.713899999999956e-05, 9.780600000000236e-05, 9.722200000000097e-05, 9.7334000000001e-05, 9.704199999999857e-05, 9.708299999999781e-05, 9.787500000000074e-05, 9.759700000000135e-05, 9.730499999999892e-05, 9.738899999999981e-05, 9.768100000000224e-05, 9.713899999999956e-05, 9.73059999999984e-05, 9.762500000000049e-05, 9.722300000000045e-05, 9.76799999999993e-05, 9.763800000000059e-05, 9.744400000000208e-05, 9.797199999999825e-05, 9.762500000000049e-05, 9.798599999999782e-05, 9.713900000000303e-05, 9.79860000000013e-05, 9.725000000000011e-05, 9.706899999999824e-05, 9.738800000000034e-05, 9.763900000000006e-05, 9.759700000000135e-05, 9.751399999999993e-05, 9.797199999999825e-05, 9.747199999999775e-05, 9.78059999999989e-05, 9.738899999999981e-05, 9.712499999999999e-05]</msg>
<status status="PASS" starttime="20201112 12:26:59.840" endtime="20201112 12:26:59.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.835" endtime="20201112 12:26:59.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.846" endtime="20201112 12:26:59.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.850" endtime="20201112 12:26:59.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.848" endtime="20201112 12:26:59.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.844" endtime="20201112 12:26:59.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.471" endtime="20201112 12:26:59.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.470" endtime="20201112 12:26:59.871"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.880" endtime="20201112 12:26:59.899"></status>
</kw>
<msg timestamp="20201112 12:26:59.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.878" endtime="20201112 12:26:59.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.901" endtime="20201112 12:26:59.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.904" endtime="20201112 12:26:59.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.876" endtime="20201112 12:26:59.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.873" endtime="20201112 12:26:59.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.913" endtime="20201112 12:27:00.201"></status>
</kw>
<msg timestamp="20201112 12:27:00.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022344931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.911" endtime="20201112 12:27:00.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022344931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.205" endtime="20201112 12:27:00.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.213" endtime="20201112 12:27:00.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.909" endtime="20201112 12:27:00.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.907" endtime="20201112 12:27:00.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.220" level="INFO">${RESULT} = [{'time': 0.022443944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.901300000000196e-05, 'source_diff': 9.901300000000196e-05}, {'time': 0.022558958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:00.217" endtime="20201112 12:27:00.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.234" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:00.221" endtime="20201112 12:27:00.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.239" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.238" endtime="20201112 12:27:00.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.242" level="INFO">VALUE: [9.901300000000196e-05, 9.831899999999949e-05, 9.881899999999999e-05, 9.812500000000099e-05, 9.850000000000136e-05, 9.84860000000018e-05, 9.847199999999875e-05, 9.881999999999946e-05, 9.813899999999709e-05, 9.861099999999845e-05, 9.84860000000018e-05, 9.898599999999882e-05, 9.880499999999695e-05, 9.869399999999987e-05, 9.811100000000142e-05, 9.877800000000075e-05, 9.804199999999957e-05, 9.888900000000131e-05, 9.89869999999983e-05, 9.84730000000017e-05, 9.847200000000222e-05, 9.862500000000149e-05, 9.865300000000063e-05, 9.897199999999926e-05, 9.84860000000018e-05, 9.815300000000013e-05, 9.897299999999873e-05, 9.83059999999994e-05, 9.89020000000014e-05, 9.813800000000109e-05, 9.863900000000106e-05, 9.827700000000078e-05, 9.82080000000024e-05, 9.829199999999982e-05, 9.83609999999982e-05, 9.862499999999802e-05, 9.879200000000032e-05, 9.883399999999903e-05, 9.880500000000042e-05, 9.858299999999931e-05, 9.806900000000271e-05, 9.855500000000017e-05, 9.855500000000017e-05, 9.893100000000002e-05, 9.898599999999882e-05, 9.86800000000003e-05, 9.84730000000017e-05, 9.876399999999771e-05, 9.823599999999807e-05, 9.862499999999802e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.240" endtime="20201112 12:27:00.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.235" endtime="20201112 12:27:00.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.245" endtime="20201112 12:27:00.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.249" endtime="20201112 12:27:00.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.247" endtime="20201112 12:27:00.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.244" endtime="20201112 12:27:00.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.872" endtime="20201112 12:27:00.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.871" endtime="20201112 12:27:00.270"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.279" endtime="20201112 12:27:00.298"></status>
</kw>
<msg timestamp="20201112 12:27:00.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.277" endtime="20201112 12:27:00.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.300" endtime="20201112 12:27:00.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.302" endtime="20201112 12:27:00.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.274" endtime="20201112 12:27:00.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.272" endtime="20201112 12:27:00.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.312" endtime="20201112 12:27:00.599"></status>
</kw>
<msg timestamp="20201112 12:27:00.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.310" endtime="20201112 12:27:00.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.604" endtime="20201112 12:27:00.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.612" endtime="20201112 12:27:00.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.308" endtime="20201112 12:27:00.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.306" endtime="20201112 12:27:00.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.619" level="INFO">${RESULT} = [{'time': 0.022523347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.96939999999974e-05, 'source_diff': 9.96939999999974e-05}, {'time': 0.022639347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:00.616" endtime="20201112 12:27:00.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.633" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:00.620" endtime="20201112 12:27:00.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.638" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.637" endtime="20201112 12:27:00.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.641" level="INFO">VALUE: [9.96939999999974e-05, 9.988900000000231e-05, 0.00010001399999999896, 9.979200000000132e-05, 9.920799999999994e-05, 9.979200000000132e-05, 9.955600000000064e-05, 9.984800000000307e-05, 9.997200000000026e-05, 9.945800000000019e-05, 9.981900000000099e-05, 9.990300000000188e-05, 9.994400000000112e-05, 9.944400000000062e-05, 9.913900000000156e-05, 9.93060000000004e-05, 9.955600000000064e-05, 9.959699999999988e-05, 9.970800000000044e-05, 9.977699999999881e-05, 9.970800000000044e-05, 9.913899999999809e-05, 9.98060000000009e-05, 9.988900000000231e-05, 9.98060000000009e-05, 9.922299999999898e-05, 9.931900000000049e-05, 9.92219999999995e-05, 9.959699999999988e-05, 9.915300000000113e-05, 9.95419999999976e-05, 9.962500000000249e-05, 9.997200000000026e-05, 9.913900000000156e-05, 9.94999999999989e-05, 9.913900000000156e-05, 9.997200000000026e-05, 9.908299999999981e-05, 9.963899999999859e-05, 9.979099999999838e-05, 9.937499999999877e-05, 9.995800000000069e-05, 9.908399999999928e-05, 9.979200000000132e-05, 9.920899999999941e-05, 9.929100000000135e-05, 9.909699999999938e-05, 9.938899999999834e-05, 9.947199999999976e-05, 9.963899999999859e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.639" endtime="20201112 12:27:00.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.634" endtime="20201112 12:27:00.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.644" endtime="20201112 12:27:00.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.648" endtime="20201112 12:27:00.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.646" endtime="20201112 12:27:00.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.643" endtime="20201112 12:27:00.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.271" endtime="20201112 12:27:00.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.270" endtime="20201112 12:27:00.669"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.678" endtime="20201112 12:27:00.697"></status>
</kw>
<msg timestamp="20201112 12:27:00.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.676" endtime="20201112 12:27:00.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.699" endtime="20201112 12:27:00.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.702" endtime="20201112 12:27:00.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.673" endtime="20201112 12:27:00.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.671" endtime="20201112 12:27:00.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.711" endtime="20201112 12:27:00.998"></status>
</kw>
<msg timestamp="20201112 12:27:01.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.709" endtime="20201112 12:27:01.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.003" endtime="20201112 12:27:01.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.011" endtime="20201112 12:27:01.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.707" endtime="20201112 12:27:01.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.705" endtime="20201112 12:27:01.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.018" level="INFO">${RESULT} = [{'time': 0.022525833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010104099999999963, 'source_diff': 0.00010104099999999963}, {'time': 0.022643819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:01.014" endtime="20201112 12:27:01.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.033" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:01.019" endtime="20201112 12:27:01.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.038" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.037" endtime="20201112 12:27:01.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.040" level="INFO">VALUE: [0.00010104099999999963, 0.00010009700000000038, 0.00010043000000000205, 0.00010083299999999809, 0.0001002220000000005, 0.000100722000000001, 0.00010023600000000008, 0.00010033400000000053, 0.00010070899999999744, 0.00010013899999999909, 0.00010081899999999852, 0.00010005500000000167, 0.00010037499999999977, 0.00010094399999999865, 0.00010015299999999866, 0.00010097200000000126, 0.00010011099999999995, 0.00010062500000000002, 0.00010030599999999792, 0.00010069500000000134, 0.00010079099999999938, 0.00010037499999999977, 0.00010081900000000199, 0.00010055500000000217, 0.00010038899999999934, 0.00010097199999999779, 0.00010009700000000038, 0.00010034700000000063, 0.00010075000000000014, 0.00010029099999999888, 0.00010088899999999984, 0.0001006670000000022, 0.00010080499999999895, 0.00010055599999999817, 0.00010004200000000157, 0.00010073600000000058, 0.00010098600000000083, 0.00010084700000000113, 0.00010088899999999984, 0.00010012499999999952, 0.00010031899999999802, 0.00010005500000000167, 0.00010073600000000058, 0.00010033400000000053, 0.0001002220000000005, 0.0001004869999999998, 0.00010081899999999852, 0.000100722000000001, 0.00010097200000000126, 0.00010029100000000235]</msg>
<status status="PASS" starttime="20201112 12:27:01.039" endtime="20201112 12:27:01.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.034" endtime="20201112 12:27:01.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.044" endtime="20201112 12:27:01.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.047" endtime="20201112 12:27:01.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.046" endtime="20201112 12:27:01.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.042" endtime="20201112 12:27:01.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.670" endtime="20201112 12:27:01.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.669" endtime="20201112 12:27:01.069"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.081" endtime="20201112 12:27:01.102"></status>
</kw>
<msg timestamp="20201112 12:27:01.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.079" endtime="20201112 12:27:01.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.104" endtime="20201112 12:27:01.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.107" endtime="20201112 12:27:01.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.076" endtime="20201112 12:27:01.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.072" endtime="20201112 12:27:01.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.120" endtime="20201112 12:27:01.408"></status>
</kw>
<msg timestamp="20201112 12:27:01.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027111972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027213986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.118" endtime="20201112 12:27:01.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027111972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027213986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.412" endtime="20201112 12:27:01.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.420" endtime="20201112 12:27:01.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.114" endtime="20201112 12:27:01.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.112" endtime="20201112 12:27:01.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.427" level="INFO">${RESULT} = [{'time': 0.027213986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001020139999999975, 'source_diff': 0.0001020139999999975}, {'time': 0.027336014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:01.424" endtime="20201112 12:27:01.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.441" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:01.428" endtime="20201112 12:27:01.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.446" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.445" endtime="20201112 12:27:01.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.448" level="INFO">VALUE: [0.0001020139999999975, 0.0001013199999999985, 0.0001015419999999996, 0.00010156999999999874, 0.00010169500000000234, 0.00010113800000000062, 0.00010130499999999945, 0.00010112500000000052, 0.00010181899999999952, 0.00010113900000000009, 0.00010195800000000269, 0.00010165300000000016, 0.00010115299999999966, 0.00010115299999999966, 0.00010149999999999743, 0.00010198599999999836, 0.00010140200000000044, 0.00010147200000000176, 0.00010181899999999952, 0.00010107000000000171, 0.00010170799999999897, 0.00010179199999999985, 0.00010122300000000098, 0.00010131900000000249, 0.00010195799999999922, 0.00010130499999999945, 0.00010101399999999996, 0.00010125000000000065, 0.00010129199999999935, 0.00010188900000000084, 0.00010163899999999712, 0.00010112500000000052, 0.00010165200000000069, 0.00010129199999999935, 0.00010104099999999963, 0.00010170799999999897, 0.00010129200000000282, 0.00010133299999999512, 0.00010163900000000059, 0.00010134699999999469, 0.00010174999999999768, 0.00010112500000000052, 0.00010131900000000249, 0.00010155499999999623, 0.00010190300000000041, 0.00010163900000000059, 0.00010137499999999383, 0.00010105600000000214, 0.00010138900000000034, 0.00010163899999999365]</msg>
<status status="PASS" starttime="20201112 12:27:01.447" endtime="20201112 12:27:01.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.442" endtime="20201112 12:27:01.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.452" endtime="20201112 12:27:01.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.455" endtime="20201112 12:27:01.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.454" endtime="20201112 12:27:01.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.450" endtime="20201112 12:27:01.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.070" endtime="20201112 12:27:01.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.070" endtime="20201112 12:27:01.476"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.485" endtime="20201112 12:27:01.505"></status>
</kw>
<msg timestamp="20201112 12:27:01.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.484" endtime="20201112 12:27:01.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.507" endtime="20201112 12:27:01.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.509" endtime="20201112 12:27:01.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.481" endtime="20201112 12:27:01.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.479" endtime="20201112 12:27:01.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.519" endtime="20201112 12:27:01.805"></status>
</kw>
<msg timestamp="20201112 12:27:01.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022731167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.517" endtime="20201112 12:27:01.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022731167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.809" endtime="20201112 12:27:01.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.818" endtime="20201112 12:27:01.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.514" endtime="20201112 12:27:01.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.513" endtime="20201112 12:27:01.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.825" level="INFO">${RESULT} = [{'time': 0.022731167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010234799999999863, 'source_diff': 0.00010234799999999863}, {'time': 0.022849181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:01.821" endtime="20201112 12:27:01.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.838" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:01.826" endtime="20201112 12:27:01.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.843" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.842" endtime="20201112 12:27:01.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.845" level="INFO">VALUE: [0.00010234799999999863, 0.00010208399999999881, 0.00010298599999999936, 0.00010254199999999714, 0.00010263899999999812, 0.00010248600000000233, 0.00010213900000000109, 0.00010229200000000035, 0.00010252800000000103, 0.0001029299999999976, 0.00010211199999999795, 0.00010230599999999992, 0.00010218000000000033, 0.00010213899999999762, 0.00010230500000000045, 0.00010222199999999904, 0.00010213900000000109, 0.00010211099999999848, 0.00010263900000000159, 0.00010215200000000119, 0.00010281900000000052, 0.00010205499999999673, 0.00010288900000000184, 0.00010247199999999929, 0.00010233399999999906, 0.00010274999999999868, 0.00010240300000000091, 0.00010263899999999812, 0.00010240300000000091, 0.00010213799999999815, 0.00010279099999999791, 0.00010286099999999923, 0.00010245799999999972, 0.00010297199999999979, 0.00010295800000000022, 0.00010280600000000042, 0.00010256999999999974, 0.00010205599999999967, 0.00010273600000000258, 0.00010298599999999936, 0.00010265299999999769, 0.00010263899999999812, 0.00010297199999999979, 0.00010299999999999893, 0.00010247199999999929, 0.00010282, 0.00010248699999999833, 0.00010237500000000177, 0.00010276400000000172, 0.00010222199999999904]</msg>
<status status="PASS" starttime="20201112 12:27:01.844" endtime="20201112 12:27:01.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.839" endtime="20201112 12:27:01.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.856" endtime="20201112 12:27:01.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.860" endtime="20201112 12:27:01.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.858" endtime="20201112 12:27:01.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.854" endtime="20201112 12:27:01.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.477" endtime="20201112 12:27:01.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.477" endtime="20201112 12:27:01.881"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.890" endtime="20201112 12:27:01.911"></status>
</kw>
<msg timestamp="20201112 12:27:01.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.889" endtime="20201112 12:27:01.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.913" endtime="20201112 12:27:01.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.915" endtime="20201112 12:27:01.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.886" endtime="20201112 12:27:01.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.884" endtime="20201112 12:27:01.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.925" endtime="20201112 12:27:02.210"></status>
</kw>
<msg timestamp="20201112 12:27:02.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023025931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.923" endtime="20201112 12:27:02.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023025931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.214" endtime="20201112 12:27:02.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.223" endtime="20201112 12:27:02.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.920" endtime="20201112 12:27:02.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.918" endtime="20201112 12:27:02.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.230" level="INFO">${RESULT} = [{'time': 0.023025931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000103513999999999, 'source_diff': 0.000103513999999999}, {'time': 0.023148944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:02.226" endtime="20201112 12:27:02.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.243" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:02.231" endtime="20201112 12:27:02.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.248" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.247" endtime="20201112 12:27:02.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.251" level="INFO">VALUE: [0.000103513999999999, 0.00010381900000000152, 0.0001033879999999994, 0.00010331899999999755, 0.00010320800000000047, 0.00010380499999999848, 0.00010320800000000047, 0.00010365299999999869, 0.00010380599999999796, 0.00010388899999999937, 0.00010313900000000209, 0.00010334700000000016, 0.0001030550000000012, 0.00010388900000000284, 0.00010319500000000037, 0.00010394399999999818, 0.00010329199999999789, 0.00010333400000000006, 0.00010376399999999925, 0.00010305600000000067, 0.00010340199999999897, 0.00010316700000000123, 0.00010348599999999986, 0.00010345800000000072, 0.00010380600000000142, 0.00010340300000000191, 0.00010347200000000029, 0.00010397300000000026, 0.00010333300000000059, 0.00010358299999999737, 0.00010354100000000213, 0.00010349999999999943, 0.00010388899999999937, 0.00010384800000000013, 0.00010372200000000054, 0.00010395900000000069, 0.00010379199999999839, 0.00010380600000000142, 0.00010365200000000269, 0.00010397199999999732, 0.00010395799999999775, 0.0001033749999999993, 0.00010322200000000004, 0.00010312500000000252, 0.00010379199999999839, 0.00010312500000000252, 0.00010302800000000154, 0.00010372200000000054, 0.00010394400000000165, 0.00010311099999999948]</msg>
<status status="PASS" starttime="20201112 12:27:02.249" endtime="20201112 12:27:02.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.244" endtime="20201112 12:27:02.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.254" endtime="20201112 12:27:02.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.258" endtime="20201112 12:27:02.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.256" endtime="20201112 12:27:02.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.253" endtime="20201112 12:27:02.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.882" endtime="20201112 12:27:02.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.881" endtime="20201112 12:27:02.279"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.288" endtime="20201112 12:27:02.308"></status>
</kw>
<msg timestamp="20201112 12:27:02.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.286" endtime="20201112 12:27:02.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.310" endtime="20201112 12:27:02.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.313" endtime="20201112 12:27:02.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.284" endtime="20201112 12:27:02.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.281" endtime="20201112 12:27:02.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.322" endtime="20201112 12:27:02.609"></status>
</kw>
<msg timestamp="20201112 12:27:02.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023008833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.320" endtime="20201112 12:27:02.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023008833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.613" endtime="20201112 12:27:02.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.621" endtime="20201112 12:27:02.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.318" endtime="20201112 12:27:02.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.316" endtime="20201112 12:27:02.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.628" level="INFO">${RESULT} = [{'time': 0.023008833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010419399999999843, 'source_diff': 0.00010419399999999843}, {'time': 0.023124889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:02.625" endtime="20201112 12:27:02.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.643" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:02.629" endtime="20201112 12:27:02.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.648" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.647" endtime="20201112 12:27:02.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.650" level="INFO">VALUE: [0.00010419399999999843, 0.00010429199999999889, 0.00010443099999999858, 0.00010476400000000025, 0.00010455600000000217, 0.00010487499999999733, 0.00010443100000000205, 0.00010412500000000005, 0.00010433300000000159, 0.00010455499999999923, 0.00010405499999999873, 0.00010411100000000048, 0.00010420800000000147, 0.00010495800000000222, 0.00010463900000000012, 0.00010447200000000129, 0.00010445899999999772, 0.00010447199999999782, 0.000104416000000003, 0.00010447200000000129, 0.00010493099999999908, 0.00010447199999999782, 0.000104514, 0.00010495800000000222, 0.00010491700000000298, 0.00010447300000000076, 0.00010495900000000169, 0.00010462500000000055, 0.00010447199999999782, 0.00010480499999999948, 0.00010405499999999873, 0.00010491699999999951, 0.00010431999999999803, 0.0001042360000000006, 0.00010481999999999853, 0.00010422299999999704, 0.00010431900000000202, 0.00010425000000000018, 0.00010412500000000005, 0.00010447200000000129, 0.00010448600000000086, 0.00010430599999999846, 0.00010430600000000192, 0.00010447299999999729, 0.00010413899999999962, 0.00010430500000000245, 0.00010475000000000068, 0.00010497200000000179, 0.00010448599999999739, 0.00010481999999999853]</msg>
<status status="PASS" starttime="20201112 12:27:02.649" endtime="20201112 12:27:02.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.644" endtime="20201112 12:27:02.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.654" endtime="20201112 12:27:02.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.657" endtime="20201112 12:27:02.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.656" endtime="20201112 12:27:02.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.652" endtime="20201112 12:27:02.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.280" endtime="20201112 12:27:02.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.279" endtime="20201112 12:27:02.678"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.687" endtime="20201112 12:27:02.707"></status>
</kw>
<msg timestamp="20201112 12:27:02.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.686" endtime="20201112 12:27:02.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.709" endtime="20201112 12:27:02.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.712" endtime="20201112 12:27:02.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.683" endtime="20201112 12:27:02.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.681" endtime="20201112 12:27:02.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.721" endtime="20201112 12:27:03.009"></status>
</kw>
<msg timestamp="20201112 12:27:03.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022470208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022575375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.719" endtime="20201112 12:27:03.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022470208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022575375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.013" endtime="20201112 12:27:03.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.022" endtime="20201112 12:27:03.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.717" endtime="20201112 12:27:03.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.715" endtime="20201112 12:27:03.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.028" level="INFO">${RESULT} = [{'time': 0.022575375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010516700000000323, 'source_diff': 0.00010516700000000323}, {'time': 0.022700389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:03.025" endtime="20201112 12:27:03.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.042" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:03.030" endtime="20201112 12:27:03.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.047" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.046" endtime="20201112 12:27:03.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.049" level="INFO">VALUE: [0.00010516700000000323, 0.00010522200000000204, 0.00010584699999999919, 0.00010588900000000137, 0.00010550000000000143, 0.00010597199999999932, 0.0001053750000000013, 0.00010534699999999869, 0.00010563899999999765, 0.00010513900000000062, 0.00010561099999999851, 0.00010515300000000019, 0.00010526400000000075, 0.0001053620000000012, 0.00010548600000000186, 0.00010513900000000062, 0.00010529100000000041, 0.00010538900000000087, 0.00010515300000000019, 0.00010579200000000039, 0.00010538900000000087, 0.00010580599999999996, 0.00010588900000000137, 0.00010527700000000084, 0.0001050689999999993, 0.00010555500000000023, 0.00010538900000000087, 0.00010584800000000213, 0.00010506999999999878, 0.00010590300000000094, 0.00010547300000000176, 0.00010531900000000302, 0.00010541599999999707, 0.00010562500000000155, 0.00010563899999999765, 0.00010581900000000005, 0.0001055559999999997, 0.00010593100000000008, 0.00010530599999999946, 0.00010590299999999747, 0.00010516600000000029, 0.00010512500000000105, 0.00010580499999999701, 0.00010504100000000016, 0.00010505600000000268, 0.00010587499999999833, 0.00010563900000000112, 0.00010595899999999922, 0.00010595899999999922, 0.00010545899999999872]</msg>
<status status="PASS" starttime="20201112 12:27:03.048" endtime="20201112 12:27:03.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.043" endtime="20201112 12:27:03.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.053" endtime="20201112 12:27:03.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.057" endtime="20201112 12:27:03.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.055" endtime="20201112 12:27:03.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.051" endtime="20201112 12:27:03.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.679" endtime="20201112 12:27:03.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.679" endtime="20201112 12:27:03.077"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.086" endtime="20201112 12:27:03.107"></status>
</kw>
<msg timestamp="20201112 12:27:03.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.085" endtime="20201112 12:27:03.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.108" endtime="20201112 12:27:03.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.111" endtime="20201112 12:27:03.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.082" endtime="20201112 12:27:03.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.080" endtime="20201112 12:27:03.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.120" endtime="20201112 12:27:03.407"></status>
</kw>
<msg timestamp="20201112 12:27:03.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022326111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.119" endtime="20201112 12:27:03.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022326111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.412" endtime="20201112 12:27:03.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.420" endtime="20201112 12:27:03.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.116" endtime="20201112 12:27:03.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.114" endtime="20201112 12:27:03.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.427" level="INFO">${RESULT} = [{'time': 0.022432958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010684700000000019, 'source_diff': 0.00010684700000000019}, {'time': 0.022559972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:03.424" endtime="20201112 12:27:03.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.441" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:03.428" endtime="20201112 12:27:03.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.445" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.444" endtime="20201112 12:27:03.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.448" level="INFO">VALUE: [0.00010684700000000019, 0.00010613900000000162, 0.00010630500000000098, 0.0001063889999999984, 0.00010680600000000096, 0.00010625000000000218, 0.00010632000000000003, 0.0001068750000000028, 0.00010680500000000148, 0.00010618000000000086, 0.00010647200000000329, 0.00010698599999999989, 0.00010647199999999982, 0.00010661099999999951, 0.00010694500000000065, 0.00010680599999999749, 0.00010626400000000175, 0.00010680499999999801, 0.00010605500000000073, 0.0001060690000000003, 0.0001063889999999984, 0.00010629200000000089, 0.00010598599999999889, 0.00010623699999999861, 0.00010623699999999861, 0.0001063880000000024, 0.000106901999999999, 0.00010612500000000205, 0.00010663899999999865, 0.00010677799999999835, 0.00010672200000000007, 0.0001063339999999996, 0.00010638900000000187, 0.00010663899999999865, 0.00010651399999999853, 0.00010613899999999815, 0.00010697200000000032, 0.00010693000000000161, 0.00010630600000000046, 0.00010690299999999847, 0.00010647199999999982, 0.00010647299999999929, 0.00010662499999999908, 0.00010648599999999939, 0.00010665299999999822, 0.00010629200000000089, 0.0001068889999999989, 0.00010613900000000162, 0.00010613900000000162, 0.00010613900000000162]</msg>
<status status="PASS" starttime="20201112 12:27:03.446" endtime="20201112 12:27:03.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.442" endtime="20201112 12:27:03.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.452" endtime="20201112 12:27:03.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.455" endtime="20201112 12:27:03.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.454" endtime="20201112 12:27:03.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.450" endtime="20201112 12:27:03.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.078" endtime="20201112 12:27:03.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.078" endtime="20201112 12:27:03.476"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.485" endtime="20201112 12:27:03.505"></status>
</kw>
<msg timestamp="20201112 12:27:03.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.484" endtime="20201112 12:27:03.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.507" endtime="20201112 12:27:03.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.510" endtime="20201112 12:27:03.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.481" endtime="20201112 12:27:03.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.479" endtime="20201112 12:27:03.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.519" endtime="20201112 12:27:03.806"></status>
</kw>
<msg timestamp="20201112 12:27:03.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022751458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.517" endtime="20201112 12:27:03.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022751458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.810" endtime="20201112 12:27:03.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.819" endtime="20201112 12:27:03.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.515" endtime="20201112 12:27:03.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.513" endtime="20201112 12:27:03.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.826" level="INFO">${RESULT} = [{'time': 0.022751458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010751399999999953, 'source_diff': 0.00010751399999999953}, {'time': 0.022878542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:03.822" endtime="20201112 12:27:03.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.839" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:03.827" endtime="20201112 12:27:03.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.844" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.843" endtime="20201112 12:27:03.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.846" level="INFO">VALUE: [0.00010751399999999953, 0.0001071950000000009, 0.00010765299999999922, 0.00010795799999999828, 0.00010734700000000069, 0.00010790299999999947, 0.00010797300000000079, 0.0001072499999999997, 0.00010738799999999993, 0.00010734700000000069, 0.00010779200000000239, 0.00010712499999999958, 0.00010737499999999983, 0.00010740299999999897, 0.00010797200000000132, 0.00010797300000000079, 0.00010715199999999925, 0.00010715200000000272, 0.000107902, 0.00010713900000000262, 0.00010747200000000082, 0.00010795799999999828, 0.00010747200000000082, 0.00010727799999999885, 0.00010752800000000257, 0.00010701399999999903, 0.000107208000000001, 0.00010777699999999987, 0.00010766700000000226, 0.00010800000000000046, 0.00010780600000000196, 0.0001073889999999994, 0.00010733299999999765, 0.0001078889999999999, 0.00010748600000000039, 0.0001078889999999999, 0.00010781900000000205, 0.00010705499999999826, 0.00010790300000000294, 0.00010732000000000103, 0.00010704199999999817, 0.00010754199999999867, 0.00010737499999999983, 0.00010744399999999821, 0.00010713899999999915, 0.00010780499999999901, 0.00010722200000000057, 0.00010730600000000146, 0.0001077500000000002, 0.00010797299999999732]</msg>
<status status="PASS" starttime="20201112 12:27:03.845" endtime="20201112 12:27:03.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.840" endtime="20201112 12:27:03.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.850" endtime="20201112 12:27:03.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.854" endtime="20201112 12:27:03.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.852" endtime="20201112 12:27:03.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.848" endtime="20201112 12:27:03.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.477" endtime="20201112 12:27:03.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.477" endtime="20201112 12:27:03.875"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.884" endtime="20201112 12:27:03.905"></status>
</kw>
<msg timestamp="20201112 12:27:03.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.882" endtime="20201112 12:27:03.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.906" endtime="20201112 12:27:03.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.909" endtime="20201112 12:27:03.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.879" endtime="20201112 12:27:03.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.877" endtime="20201112 12:27:03.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.919" endtime="20201112 12:27:04.205"></status>
</kw>
<msg timestamp="20201112 12:27:04.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023122083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023230181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.917" endtime="20201112 12:27:04.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023122083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023230181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.210" endtime="20201112 12:27:04.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.218" endtime="20201112 12:27:04.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.915" endtime="20201112 12:27:04.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.913" endtime="20201112 12:27:04.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.225" level="INFO">${RESULT} = [{'time': 0.023230181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010809799999999745, 'source_diff': 0.00010809799999999745}, {'time': 0.023361194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:04.222" endtime="20201112 12:27:04.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.240" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:04.226" endtime="20201112 12:27:04.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.245" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.244" endtime="20201112 12:27:04.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.247" level="INFO">VALUE: [0.00010809799999999745, 0.00010897199999999885, 0.00010884700000000219, 0.00010876399999999731, 0.00010848600000000139, 0.00010829199999999942, 0.00010844399999999921, 0.00010893099999999961, 0.00010898699999999789, 0.00010884700000000219, 0.00010888899999999743, 0.00010830499999999951, 0.0001083890000000004, 0.00010847199999999835, 0.00010813900000000015, 0.00010897200000000232, 0.00010813900000000015, 0.00010894499999999918, 0.00010813900000000015, 0.00010876299999999783, 0.000108208000000002, 0.00010812500000000058, 0.00010895799999999928, 0.00010895800000000275, 0.00010863900000000065, 0.00010815299999999972, 0.00010863900000000065, 0.00010847200000000182, 0.00010879100000000044, 0.00010838899999999693, 0.00010830499999999951, 0.00010869399999999946, 0.00010880599999999949, 0.00010887499999999786, 0.00010845900000000172, 0.00010827799999999985, 0.00010875000000000121, 0.00010865300000000022, 0.00010812500000000058, 0.00010830599999999899, 0.00010822200000000157, 0.00010830600000000246, 0.00010854199999999967, 0.00010804200000000264, 0.0001085560000000027, 0.00010823600000000114, 0.00010813900000000015, 0.00010901400000000103, 0.00010829200000000289, 0.00010837499999999736]</msg>
<status status="PASS" starttime="20201112 12:27:04.246" endtime="20201112 12:27:04.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.241" endtime="20201112 12:27:04.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.251" endtime="20201112 12:27:04.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.254" endtime="20201112 12:27:04.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.253" endtime="20201112 12:27:04.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.249" endtime="20201112 12:27:04.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.876" endtime="20201112 12:27:04.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.875" endtime="20201112 12:27:04.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.482" endtime="20201112 12:27:04.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.280" endtime="20201112 12:27:04.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.279" endtime="20201112 12:27:04.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.277" endtime="20201112 12:27:04.301"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:24.381" endtime="20201112 12:27:04.301" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.309" endtime="20201112 12:27:04.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.308" endtime="20201112 12:27:04.330"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.344" endtime="20201112 12:27:04.358"></status>
</kw>
<msg timestamp="20201112 12:27:04.359" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.342" endtime="20201112 12:27:04.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.361" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.360" endtime="20201112 12:27:04.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.365" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:04.363" endtime="20201112 12:27:04.365"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:04.339" endtime="20201112 12:27:04.365"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:04.336" endtime="20201112 12:27:04.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.335" endtime="20201112 12:27:04.366"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:04.370" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:04.370" endtime="20201112 12:27:04.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.367" endtime="20201112 12:27:04.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.334" endtime="20201112 12:27:04.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.334" endtime="20201112 12:27:04.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.372" endtime="20201112 12:27:04.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.332" endtime="20201112 12:27:04.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.330" endtime="20201112 12:27:04.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.306" endtime="20201112 12:27:04.375"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.386" endtime="20201112 12:27:04.400"></status>
</kw>
<msg timestamp="20201112 12:27:04.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.384" endtime="20201112 12:27:04.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.402" endtime="20201112 12:27:04.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.405" endtime="20201112 12:27:04.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.381" endtime="20201112 12:27:04.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.379" endtime="20201112 12:27:04.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.414" endtime="20201112 12:27:04.700"></status>
</kw>
<msg timestamp="20201112 12:27:04.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069249528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069259181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.413" endtime="20201112 12:27:04.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069249528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069259181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.704" endtime="20201112 12:27:04.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.713" endtime="20201112 12:27:04.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.410" endtime="20201112 12:27:04.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.408" endtime="20201112 12:27:04.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.720" level="INFO">${RESULT} = [{'time': 0.069259181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.069278764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:04.716" endtime="20201112 12:27:04.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.735" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:04.721" endtime="20201112 12:27:04.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.739" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.738" endtime="20201112 12:27:04.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.742" level="INFO">VALUE: [9.652999999998357e-06, 9.000000000009e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.610999999992709e-06, 9.055999999993403e-06, 9.069999999999911e-06, 9.667000000004866e-06, 9.042000000000772e-06, 9.667000000004866e-06, 9.666999999990988e-06, 9.666000000005393e-06, 9.082999999993069e-06, 9.611999999992182e-06, 9.05600000000728e-06, 9.069999999999911e-06, 9.111000000006086e-06, 9.055000000007807e-06, 9.054999999993929e-06, 9.597000000000078e-06, 9.069000000000438e-06, 9.082999999993069e-06, 9.693999999990655e-06, 9.680999999997497e-06, 9.667000000004866e-06, 9.05600000000728e-06, 9.666999999990988e-06, 9.05600000000728e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.652999999998357e-06, 9.666000000005393e-06, 9.042000000000772e-06, 9.582999999993569e-06, 9.069999999999911e-06, 9.042000000000772e-06, 9.667000000004866e-06, 9.055999999993403e-06, 9.667000000004866e-06, 9.652999999998357e-06, 9.667000000004866e-06, 9.667000000004866e-06, 9.597000000000078e-06, 9.05600000000728e-06, 9.667000000004866e-06, 9.042000000000772e-06, 9.042000000000772e-06, 9.666999999990988e-06, 9.666000000005393e-06, 9.082999999993069e-06]</msg>
<status status="PASS" starttime="20201112 12:27:04.741" endtime="20201112 12:27:04.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.736" endtime="20201112 12:27:04.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.745" endtime="20201112 12:27:04.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.749" endtime="20201112 12:27:04.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.747" endtime="20201112 12:27:04.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.743" endtime="20201112 12:27:04.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.377" endtime="20201112 12:27:04.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.376" endtime="20201112 12:27:04.770"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.779" endtime="20201112 12:27:04.794"></status>
</kw>
<msg timestamp="20201112 12:27:04.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.777" endtime="20201112 12:27:04.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.795" endtime="20201112 12:27:04.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.798" endtime="20201112 12:27:04.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.775" endtime="20201112 12:27:04.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.773" endtime="20201112 12:27:04.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.807" endtime="20201112 12:27:05.095"></status>
</kw>
<msg timestamp="20201112 12:27:05.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023101667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023111417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.806" endtime="20201112 12:27:05.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023101667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023111417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.099" endtime="20201112 12:27:05.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.108" endtime="20201112 12:27:05.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.803" endtime="20201112 12:27:05.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.801" endtime="20201112 12:27:05.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.115" level="INFO">${RESULT} = [{'time': 0.023111417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.749999999999343e-06, 'source_diff': 9.749999999999343e-06}, {'time': 0.023131306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:05.111" endtime="20201112 12:27:05.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.129" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:05.116" endtime="20201112 12:27:05.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.134" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.133" endtime="20201112 12:27:05.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.137" level="INFO">VALUE: [9.749999999999343e-06, 1.0278000000002452e-05, 9.610999999999648e-06, 1.0262999999999939e-05, 1.0276999999999509e-05, 1.0292000000002022e-05, 1.0277999999998982e-05, 1.0278000000002452e-05, 1.0276999999999509e-05, 1.0276999999999509e-05, 1.0278000000002452e-05, 1.0277999999998982e-05, 9.666999999997927e-06, 1.0290999999999079e-05, 1.0860999999997428e-05, 1.0847000000001328e-05, 1.0875000000000468e-05, 1.0875000000000468e-05, 1.0262999999999939e-05, 1.0277999999998982e-05, 1.0875000000000468e-05, 1.0263999999999412e-05, 9.679999999998024e-06, 1.0874999999996998e-05, 1.0249999999999843e-05, 1.0263999999999412e-05, 1.0875000000000468e-05, 1.0278000000002452e-05, 1.0291999999998552e-05, 1.0276999999999509e-05, 1.0264000000002882e-05, 1.0249999999999843e-05, 1.0277999999998982e-05, 1.0263999999999412e-05, 1.0278000000002452e-05, 1.0889000000000038e-05, 1.0276999999999509e-05, 1.0236000000000273e-05, 1.0263999999999412e-05, 1.0276999999999509e-05, 1.0278000000002452e-05, 1.0861000000000898e-05, 1.0847000000001328e-05, 1.0875000000000468e-05, 1.0291999999998552e-05, 1.0889000000000038e-05, 1.0278000000002452e-05, 1.0361000000000398e-05, 1.0889000000000038e-05, 1.0264000000002882e-05]</msg>
<status status="PASS" starttime="20201112 12:27:05.135" endtime="20201112 12:27:05.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.130" endtime="20201112 12:27:05.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.140" endtime="20201112 12:27:05.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.144" endtime="20201112 12:27:05.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.142" endtime="20201112 12:27:05.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.138" endtime="20201112 12:27:05.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.771" endtime="20201112 12:27:05.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.770" endtime="20201112 12:27:05.165"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.174" endtime="20201112 12:27:05.189"></status>
</kw>
<msg timestamp="20201112 12:27:05.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.172" endtime="20201112 12:27:05.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.191" endtime="20201112 12:27:05.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.193" endtime="20201112 12:27:05.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.170" endtime="20201112 12:27:05.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.167" endtime="20201112 12:27:05.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.202" endtime="20201112 12:27:05.489"></status>
</kw>
<msg timestamp="20201112 12:27:05.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.201" endtime="20201112 12:27:05.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.494" endtime="20201112 12:27:05.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.502" endtime="20201112 12:27:05.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.198" endtime="20201112 12:27:05.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.196" endtime="20201112 12:27:05.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.510" level="INFO">${RESULT} = [{'time': 0.022594764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.022614097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:05.507" endtime="20201112 12:27:05.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.524" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:05.511" endtime="20201112 12:27:05.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.529" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.528" endtime="20201112 12:27:05.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.531" level="INFO">VALUE: [1.0875000000000468e-05, 1.1443999999999344e-05, 1.2083999999999012e-05, 1.1472000000001953e-05, 1.1459000000001857e-05, 1.0875000000000468e-05, 1.1471999999998483e-05, 1.1443999999999344e-05, 1.2096999999999108e-05, 1.0875000000000468e-05, 1.1458999999998387e-05, 1.2082999999999539e-05, 1.0860999999997428e-05, 1.0861999999996902e-05, 1.1485999999998053e-05, 1.0902999999999607e-05, 1.1486000000001523e-05, 1.0889000000000038e-05, 1.1500000000001093e-05, 1.1471999999998483e-05, 1.1471999999998483e-05, 1.1472000000001953e-05, 1.1486000000001523e-05, 1.1471999999998483e-05, 1.1500000000001093e-05, 1.2082999999999539e-05, 1.1486000000001523e-05, 1.1486000000001523e-05, 1.1555999999999372e-05, 1.1471999999998483e-05, 1.1457999999998913e-05, 1.0860999999997428e-05, 1.1445000000002287e-05, 1.1485999999998053e-05, 1.0818999999998719e-05, 1.0861000000000898e-05, 1.1443999999999344e-05, 1.1486000000001523e-05, 1.1472000000001953e-05, 1.0902999999999607e-05, 1.0861000000000898e-05, 1.1485999999998053e-05, 1.1499999999997623e-05, 1.0875000000000468e-05, 1.1486000000001523e-05, 1.0889000000000038e-05, 1.1485999999998053e-05, 1.1471999999998483e-05, 1.1472000000001953e-05, 1.0875000000000468e-05]</msg>
<status status="PASS" starttime="20201112 12:27:05.530" endtime="20201112 12:27:05.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.525" endtime="20201112 12:27:05.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.535" endtime="20201112 12:27:05.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.539" endtime="20201112 12:27:05.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.537" endtime="20201112 12:27:05.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.533" endtime="20201112 12:27:05.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.166" endtime="20201112 12:27:05.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.165" endtime="20201112 12:27:05.560"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.569" endtime="20201112 12:27:05.583"></status>
</kw>
<msg timestamp="20201112 12:27:05.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.567" endtime="20201112 12:27:05.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.585" endtime="20201112 12:27:05.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.587" endtime="20201112 12:27:05.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.564" endtime="20201112 12:27:05.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.562" endtime="20201112 12:27:05.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.597" endtime="20201112 12:27:05.885"></status>
</kw>
<msg timestamp="20201112 12:27:05.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022688444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.595" endtime="20201112 12:27:05.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022688444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.889" endtime="20201112 12:27:05.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.898" endtime="20201112 12:27:05.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.593" endtime="20201112 12:27:05.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.591" endtime="20201112 12:27:05.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.905" level="INFO">${RESULT} = [{'time': 0.022688444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2082999999999539e-05, 'source_diff': 1.2082999999999539e-05}, {'time': 0.022707333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:05.901" endtime="20201112 12:27:05.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.919" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:05.906" endtime="20201112 12:27:05.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.924" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.923" endtime="20201112 12:27:05.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.926" level="INFO">VALUE: [1.2082999999999539e-05, 1.2665999999997984e-05, 1.2695000000000067e-05, 1.2680000000001024e-05, 1.2083999999999012e-05, 1.2083999999999012e-05, 1.2055999999999872e-05, 1.2138999999997818e-05, 1.2694000000000594e-05, 1.2082999999999539e-05, 1.2693999999997124e-05, 1.2096999999999108e-05, 1.2097000000002578e-05, 1.2681000000000497e-05, 1.2694000000000594e-05, 1.2681000000000497e-05, 1.2096999999999108e-05, 1.2680000000001024e-05, 1.2679999999997554e-05, 1.2695000000000067e-05, 1.2082999999999539e-05, 1.2681000000000497e-05, 1.2082999999999539e-05, 1.2695000000000067e-05, 1.2083000000003008e-05, 1.2082999999999539e-05, 1.2721999999999734e-05, 1.2695000000000067e-05, 1.2082999999999539e-05, 1.2139000000001288e-05, 1.2694000000000594e-05, 1.2680000000001024e-05, 1.2736000000002773e-05, 1.2681000000000497e-05, 1.2653000000001358e-05, 1.2694000000000594e-05, 1.2708000000000164e-05, 1.2680000000001024e-05, 1.2667000000000928e-05, 1.2667000000000928e-05, 1.2694000000000594e-05, 1.2694000000000594e-05, 1.2680000000001024e-05, 1.2068999999999969e-05, 1.2125000000001718e-05, 1.2695000000000067e-05, 1.2681000000000497e-05, 1.2652999999997888e-05, 1.2069999999999442e-05, 1.2679999999997554e-05]</msg>
<status status="PASS" starttime="20201112 12:27:05.925" endtime="20201112 12:27:05.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.920" endtime="20201112 12:27:05.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.931" endtime="20201112 12:27:05.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.935" endtime="20201112 12:27:05.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.933" endtime="20201112 12:27:05.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.929" endtime="20201112 12:27:05.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.561" endtime="20201112 12:27:05.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.560" endtime="20201112 12:27:05.956"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.965" endtime="20201112 12:27:05.981"></status>
</kw>
<msg timestamp="20201112 12:27:05.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.963" endtime="20201112 12:27:05.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.983" endtime="20201112 12:27:05.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.985" endtime="20201112 12:27:05.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.961" endtime="20201112 12:27:05.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.958" endtime="20201112 12:27:05.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.995" endtime="20201112 12:27:06.282"></status>
</kw>
<msg timestamp="20201112 12:27:06.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023152528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023165819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.993" endtime="20201112 12:27:06.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023152528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023165819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.286" endtime="20201112 12:27:06.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.295" endtime="20201112 12:27:06.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.990" endtime="20201112 12:27:06.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.988" endtime="20201112 12:27:06.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.302" level="INFO">${RESULT} = [{'time': 0.023165819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3291000000002079e-05, 'source_diff': 1.3291000000002079e-05}, {'time': 0.023186125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:06.298" endtime="20201112 12:27:06.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.316" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:06.303" endtime="20201112 12:27:06.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.321" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.320" endtime="20201112 12:27:06.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.323" level="INFO">VALUE: [1.3291000000002079e-05, 1.3943999999998374e-05, 1.3305000000001649e-05, 1.3263999999998943e-05, 1.3902999999999138e-05, 1.3292000000001553e-05, 1.3305999999997653e-05, 1.3291000000002079e-05, 1.3916999999998708e-05, 1.3888999999999568e-05, 1.3291000000002079e-05, 1.3902999999999138e-05, 1.3278000000001983e-05, 1.3901999999999665e-05, 1.3902999999999138e-05, 1.3291000000002079e-05, 1.3278000000001983e-05, 1.327699999999904e-05, 1.3291999999998083e-05, 1.3292000000001553e-05, 1.3917000000002178e-05, 1.3306000000001122e-05, 1.3902999999999138e-05, 1.3292000000001553e-05, 1.3889000000003038e-05, 1.3306000000001122e-05, 1.3305000000001649e-05, 1.2695000000000067e-05, 1.3291000000002079e-05, 1.2639000000001788e-05, 1.3291999999998083e-05, 1.3292000000001553e-05, 1.3277999999998513e-05, 1.3278000000001983e-05, 1.3916999999998708e-05, 1.3292000000001553e-05, 1.3278000000001983e-05, 1.3277999999998513e-05, 1.3291999999998083e-05, 1.2695000000000067e-05, 1.3277999999998513e-05, 1.3902999999999138e-05, 1.3903000000002608e-05, 1.3305999999997653e-05, 1.384699999999739e-05, 1.3292000000001553e-05, 1.3888999999999568e-05, 1.2667000000000928e-05, 1.331899999999775e-05, 1.3319000000001219e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.322" endtime="20201112 12:27:06.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.317" endtime="20201112 12:27:06.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.327" endtime="20201112 12:27:06.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.330" endtime="20201112 12:27:06.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.329" endtime="20201112 12:27:06.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.325" endtime="20201112 12:27:06.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.957" endtime="20201112 12:27:06.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.956" endtime="20201112 12:27:06.351"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.360" endtime="20201112 12:27:06.377"></status>
</kw>
<msg timestamp="20201112 12:27:06.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.359" endtime="20201112 12:27:06.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.378" endtime="20201112 12:27:06.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.381" endtime="20201112 12:27:06.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.356" endtime="20201112 12:27:06.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.354" endtime="20201112 12:27:06.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.390" endtime="20201112 12:27:06.676"></status>
</kw>
<msg timestamp="20201112 12:27:06.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022957736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022972236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.388" endtime="20201112 12:27:06.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022957736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022972236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.680" endtime="20201112 12:27:06.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.689" endtime="20201112 12:27:06.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.386" endtime="20201112 12:27:06.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.384" endtime="20201112 12:27:06.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.696" level="INFO">${RESULT} = [{'time': 0.022972236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4500000000000624e-05, 'source_diff': 1.4500000000000624e-05}, {'time': 0.022994139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:06.692" endtime="20201112 12:27:06.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.710" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:06.697" endtime="20201112 12:27:06.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.715" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.713" endtime="20201112 12:27:06.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.717" level="INFO">VALUE: [1.4500000000000624e-05, 1.4541999999999333e-05, 1.4500000000000624e-05, 1.4500000000000624e-05, 1.4514000000000193e-05, 1.4500000000000624e-05, 1.3874999999999998e-05, 1.4500000000000624e-05, 1.3819000000001719e-05, 1.3888999999999568e-05, 1.4514000000000193e-05, 1.3888999999999568e-05, 1.4500000000000624e-05, 1.4527999999999763e-05, 1.4486000000001054e-05, 1.5084000000002012e-05, 1.4514000000000193e-05, 1.509699999999864e-05, 1.3902999999999138e-05, 1.3957999999997944e-05, 1.3889000000003038e-05, 1.3931000000001748e-05, 1.3888999999999568e-05, 1.3917000000002178e-05, 1.4514000000000193e-05, 1.511099999999821e-05, 1.4500000000000624e-05, 1.4514000000000193e-05, 1.5070000000002443e-05, 1.4486000000001054e-05, 1.4514000000000193e-05, 1.4500000000000624e-05, 1.4514000000000193e-05, 1.5083000000002539e-05, 1.4500000000000624e-05, 1.3888999999999568e-05, 1.3888999999999568e-05, 1.4499999999997154e-05, 1.511099999999821e-05, 1.3903000000002608e-05, 1.4473000000000957e-05, 1.4486000000001054e-05, 1.3861000000000429e-05, 1.3902000000003134e-05, 1.4486000000001054e-05, 1.4485999999997584e-05, 1.4485999999997584e-05, 1.511099999999821e-05, 1.3888999999999568e-05, 1.5153000000000388e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.716" endtime="20201112 12:27:06.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.711" endtime="20201112 12:27:06.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.721" endtime="20201112 12:27:06.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.724" endtime="20201112 12:27:06.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.723" endtime="20201112 12:27:06.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.719" endtime="20201112 12:27:06.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.352" endtime="20201112 12:27:06.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.352" endtime="20201112 12:27:06.745"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.754" endtime="20201112 12:27:06.769"></status>
</kw>
<msg timestamp="20201112 12:27:06.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.753" endtime="20201112 12:27:06.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.771" endtime="20201112 12:27:06.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.774" endtime="20201112 12:27:06.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.750" endtime="20201112 12:27:06.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.748" endtime="20201112 12:27:06.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.783" endtime="20201112 12:27:07.071"></status>
</kw>
<msg timestamp="20201112 12:27:07.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022549181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.781" endtime="20201112 12:27:07.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022549181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.075" endtime="20201112 12:27:07.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.083" endtime="20201112 12:27:07.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.779" endtime="20201112 12:27:07.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.777" endtime="20201112 12:27:07.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.090" level="INFO">${RESULT} = [{'time': 0.022549181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5125000000001249e-05, 'source_diff': 1.5125000000001249e-05}, {'time': 0.022575125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:07.087" endtime="20201112 12:27:07.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.104" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:07.091" endtime="20201112 12:27:07.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.109" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.108" endtime="20201112 12:27:07.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.112" level="INFO">VALUE: [1.5125000000001249e-05, 1.5111000000001679e-05, 1.5708999999999168e-05, 1.509699999999864e-05, 1.5694000000000125e-05, 1.5737000000001777e-05, 1.509699999999864e-05, 1.5055999999999403e-05, 1.5693999999996655e-05, 1.5097000000002109e-05, 1.505499999999993e-05, 1.5707999999999694e-05, 1.5694999999999598e-05, 1.5138999999997349e-05, 1.5153000000000388e-05, 1.5749999999998404e-05, 1.509699999999864e-05, 1.511099999999821e-05, 1.5680000000000555e-05, 1.5097000000002109e-05, 1.5125000000001249e-05, 1.5749999999998404e-05, 1.566700000000046e-05, 1.5098000000001582e-05, 1.563900000000132e-05, 1.511099999999821e-05, 1.5097999999998113e-05, 1.5708000000003164e-05, 1.508299999999907e-05, 1.5694999999999598e-05, 1.509699999999864e-05, 1.5722999999998738e-05, 1.5097000000002109e-05, 1.5707999999999694e-05, 1.5736000000002304e-05, 1.5750000000001874e-05, 1.509699999999864e-05, 1.5707999999999694e-05, 1.5055999999999403e-05, 1.5708999999999168e-05, 1.5722000000002734e-05, 1.509699999999864e-05, 1.5721999999999264e-05, 1.5124999999997779e-05, 1.5097999999998113e-05, 1.508299999999907e-05, 1.5083999999998543e-05, 1.5707999999999694e-05, 1.565300000000089e-05, 1.5707999999999694e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.110" endtime="20201112 12:27:07.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.105" endtime="20201112 12:27:07.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.116" endtime="20201112 12:27:07.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.119" endtime="20201112 12:27:07.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.117" endtime="20201112 12:27:07.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.114" endtime="20201112 12:27:07.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.746" endtime="20201112 12:27:07.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.746" endtime="20201112 12:27:07.140"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.149" endtime="20201112 12:27:07.164"></status>
</kw>
<msg timestamp="20201112 12:27:07.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.147" endtime="20201112 12:27:07.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.165" endtime="20201112 12:27:07.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.168" endtime="20201112 12:27:07.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.145" endtime="20201112 12:27:07.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.143" endtime="20201112 12:27:07.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.177" endtime="20201112 12:27:07.466"></status>
</kw>
<msg timestamp="20201112 12:27:07.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022558764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.176" endtime="20201112 12:27:07.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022558764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.470" endtime="20201112 12:27:07.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.478" endtime="20201112 12:27:07.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.173" endtime="20201112 12:27:07.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.171" endtime="20201112 12:27:07.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.485" level="INFO">${RESULT} = [{'time': 0.022558764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5694999999999598e-05, 'source_diff': 1.5694999999999598e-05}, {'time': 0.022586917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:07.482" endtime="20201112 12:27:07.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.499" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:07.486" endtime="20201112 12:27:07.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.504" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.503" endtime="20201112 12:27:07.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.507" level="INFO">VALUE: [1.5694999999999598e-05, 1.6306000000000653e-05, 1.6902000000002665e-05, 1.691700000000171e-05, 1.6320000000000223e-05, 1.6320000000000223e-05, 1.6278000000001513e-05, 1.627700000000204e-05, 1.6292000000001083e-05, 1.631900000000075e-05, 1.629099999999814e-05, 1.633300000000032e-05, 1.5707999999999694e-05, 1.630499999999771e-05, 1.6320000000000223e-05, 1.690300000000214e-05, 1.633300000000032e-05, 1.633300000000032e-05, 1.6944000000001375e-05, 1.6929999999998335e-05, 1.633300000000032e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.6292000000001083e-05, 1.6306000000000653e-05, 1.631900000000075e-05, 1.6306000000000653e-05, 1.6916000000002235e-05, 1.691699999999824e-05, 1.6999999999999654e-05, 1.630499999999771e-05, 1.6929999999998335e-05, 1.631900000000075e-05, 1.6278000000001513e-05, 1.631899999999728e-05, 1.631900000000075e-05, 1.636099999999946e-05, 1.637499999999903e-05, 1.691699999999824e-05, 1.631900000000075e-05, 1.5694000000000125e-05, 1.630500000000118e-05, 1.6306000000000653e-05, 1.691699999999824e-05, 1.5707999999999694e-05, 1.634699999999989e-05, 1.6916000000002235e-05, 1.693099999999781e-05, 1.6320000000000223e-05, 1.5763999999997974e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.505" endtime="20201112 12:27:07.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.500" endtime="20201112 12:27:07.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.510" endtime="20201112 12:27:07.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.514" endtime="20201112 12:27:07.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.512" endtime="20201112 12:27:07.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.509" endtime="20201112 12:27:07.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.141" endtime="20201112 12:27:07.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.140" endtime="20201112 12:27:07.535"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.544" endtime="20201112 12:27:07.559"></status>
</kw>
<msg timestamp="20201112 12:27:07.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.542" endtime="20201112 12:27:07.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.561" endtime="20201112 12:27:07.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.563" endtime="20201112 12:27:07.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.540" endtime="20201112 12:27:07.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.537" endtime="20201112 12:27:07.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.573" endtime="20201112 12:27:07.859"></status>
</kw>
<msg timestamp="20201112 12:27:07.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022918292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022935208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.571" endtime="20201112 12:27:07.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022918292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022935208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.864" endtime="20201112 12:27:07.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.872" endtime="20201112 12:27:07.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.568" endtime="20201112 12:27:07.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.567" endtime="20201112 12:27:07.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.879" level="INFO">${RESULT} = [{'time': 0.022935208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6915999999998765e-05, 'source_diff': 1.6915999999998765e-05}, {'time': 0.022957917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:07.876" endtime="20201112 12:27:07.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.893" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:07.880" endtime="20201112 12:27:07.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.898" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.897" endtime="20201112 12:27:07.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.900" level="INFO">VALUE: [1.6915999999998765e-05, 1.7528000000002764e-05, 1.7500000000000154e-05, 1.812500000000078e-05, 1.751300000000025e-05, 1.7500000000000154e-05, 1.752699999999982e-05, 1.690299999999867e-05, 1.6930000000001805e-05, 1.744499999999788e-05, 1.690300000000214e-05, 1.7527999999999294e-05, 1.7459000000000918e-05, 1.7513999999999724e-05, 1.6959000000000418e-05, 1.812500000000078e-05, 1.7527999999999294e-05, 1.6945000000000848e-05, 1.7500000000000154e-05, 1.7528000000002764e-05, 1.7513999999999724e-05, 1.7541999999998864e-05, 1.7513999999999724e-05, 1.7500000000000154e-05, 1.816699999999949e-05, 1.691699999999824e-05, 1.7527999999999294e-05, 1.6959000000000418e-05, 1.7528000000002764e-05, 1.758300000000157e-05, 1.6915999999998765e-05, 1.754099999999939e-05, 1.691700000000171e-05, 1.7527999999999294e-05, 1.7514000000003194e-05, 1.7472000000001014e-05, 1.7528000000002764e-05, 1.751300000000025e-05, 1.752699999999982e-05, 1.751300000000025e-05, 1.7527999999999294e-05, 1.691700000000171e-05, 1.6945000000000848e-05, 1.7528000000002764e-05, 1.812500000000078e-05, 1.6929999999998335e-05, 1.690300000000214e-05, 1.813900000000035e-05, 1.6959000000000418e-05, 1.6916000000002235e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.899" endtime="20201112 12:27:07.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.894" endtime="20201112 12:27:07.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.904" endtime="20201112 12:27:07.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.908" endtime="20201112 12:27:07.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.906" endtime="20201112 12:27:07.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.902" endtime="20201112 12:27:07.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.536" endtime="20201112 12:27:07.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.535" endtime="20201112 12:27:07.929"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.938" endtime="20201112 12:27:07.952"></status>
</kw>
<msg timestamp="20201112 12:27:07.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.936" endtime="20201112 12:27:07.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.954" endtime="20201112 12:27:07.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.957" endtime="20201112 12:27:07.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.933" endtime="20201112 12:27:07.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.931" endtime="20201112 12:27:07.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.968" endtime="20201112 12:27:08.254"></status>
</kw>
<msg timestamp="20201112 12:27:08.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.966" endtime="20201112 12:27:08.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.258" endtime="20201112 12:27:08.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.267" endtime="20201112 12:27:08.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.963" endtime="20201112 12:27:08.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.961" endtime="20201112 12:27:08.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.274" level="INFO">${RESULT} = [{'time': 0.022589042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8736000000001835e-05, 'source_diff': 1.8736000000001835e-05}, {'time': 0.022617847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:08.270" endtime="20201112 12:27:08.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.288" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:08.275" endtime="20201112 12:27:08.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.293" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.292" endtime="20201112 12:27:08.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.295" level="INFO">VALUE: [1.8736000000001835e-05, 1.879100000000064e-05, 1.812500000000078e-05, 1.812500000000078e-05, 1.8137999999997406e-05, 1.8735999999998365e-05, 1.8735999999998365e-05, 1.87089999999987e-05, 1.819499999999863e-05, 1.8723000000001738e-05, 1.806899999999903e-05, 1.8083999999998074e-05, 1.8763999999997505e-05, 1.812499999999731e-05, 1.811099999999774e-05, 1.812500000000078e-05, 1.812500000000078e-05, 1.8750000000001404e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.8721999999998795e-05, 1.8750000000001404e-05, 1.812499999999731e-05, 1.811100000000121e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.812499999999731e-05, 1.8083999999998074e-05, 1.8749999999997935e-05, 1.8749999999997935e-05, 1.8764000000000974e-05, 1.812500000000078e-05, 1.811100000000121e-05, 1.812500000000078e-05, 1.8735999999998365e-05, 1.8749999999997935e-05, 1.812500000000078e-05, 1.8721999999998795e-05, 1.806899999999903e-05, 1.8737000000001308e-05, 1.8737000000001308e-05, 1.8723000000001738e-05, 1.813900000000035e-05, 1.8750000000001404e-05, 1.8735999999998365e-05, 1.8723000000001738e-05, 1.812500000000078e-05, 1.8736000000001835e-05, 1.808300000000207e-05, 1.8721999999998795e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.294" endtime="20201112 12:27:08.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.289" endtime="20201112 12:27:08.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.299" endtime="20201112 12:27:08.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.303" endtime="20201112 12:27:08.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.301" endtime="20201112 12:27:08.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.297" endtime="20201112 12:27:08.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.930" endtime="20201112 12:27:08.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.929" endtime="20201112 12:27:08.323"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.332" endtime="20201112 12:27:08.348"></status>
</kw>
<msg timestamp="20201112 12:27:08.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.331" endtime="20201112 12:27:08.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.350" endtime="20201112 12:27:08.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.352" endtime="20201112 12:27:08.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.328" endtime="20201112 12:27:08.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.326" endtime="20201112 12:27:08.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.362" endtime="20201112 12:27:08.648"></status>
</kw>
<msg timestamp="20201112 12:27:08.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.360" endtime="20201112 12:27:08.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.653" endtime="20201112 12:27:08.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.661" endtime="20201112 12:27:08.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.358" endtime="20201112 12:27:08.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.356" endtime="20201112 12:27:08.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.668" level="INFO">${RESULT} = [{'time': 0.022628944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8722000000002265e-05, 'source_diff': 1.8722000000002265e-05}, {'time': 0.022654375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:08.665" endtime="20201112 12:27:08.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.682" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:08.669" endtime="20201112 12:27:08.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.687" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.686" endtime="20201112 12:27:08.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.690" level="INFO">VALUE: [1.8722000000002265e-05, 1.9944000000000905e-05, 1.9347999999998894e-05, 1.936100000000246e-05, 1.933299999999985e-05, 1.9930000000001336e-05, 1.9333999999999324e-05, 1.9944000000000905e-05, 1.9347999999998894e-05, 1.933299999999985e-05, 1.9930000000001336e-05, 1.931900000000028e-05, 1.934699999999942e-05, 1.934700000000289e-05, 1.936099999999899e-05, 1.931900000000028e-05, 1.936099999999899e-05, 1.9277999999997575e-05, 1.93890000000016e-05, 1.9347999999998894e-05, 1.9347999999998894e-05, 1.9333999999999324e-05, 1.9930000000001336e-05, 1.933299999999985e-05, 1.9930000000001336e-05, 1.8750000000001404e-05, 1.993100000000081e-05, 1.9306000000000184e-05, 1.933299999999985e-05, 1.933299999999985e-05, 1.993099999999734e-05, 1.934699999999942e-05, 1.9930000000001336e-05, 1.9319999999999754e-05, 1.933299999999985e-05, 1.9347999999998894e-05, 1.994500000000038e-05, 1.936100000000246e-05, 1.933299999999985e-05, 1.9930000000001336e-05, 1.9929999999997866e-05, 1.9944000000000905e-05, 1.994500000000038e-05, 1.868099999999956e-05, 1.933299999999985e-05, 1.9333999999999324e-05, 1.9333999999999324e-05, 1.930500000000071e-05, 1.9277999999997575e-05, 1.933299999999985e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.688" endtime="20201112 12:27:08.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.683" endtime="20201112 12:27:08.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.693" endtime="20201112 12:27:08.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.697" endtime="20201112 12:27:08.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.695" endtime="20201112 12:27:08.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.692" endtime="20201112 12:27:08.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.324" endtime="20201112 12:27:08.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.324" endtime="20201112 12:27:08.718"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.727" endtime="20201112 12:27:08.742"></status>
</kw>
<msg timestamp="20201112 12:27:08.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.725" endtime="20201112 12:27:08.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.744" endtime="20201112 12:27:08.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.746" endtime="20201112 12:27:08.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.722" endtime="20201112 12:27:08.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.720" endtime="20201112 12:27:08.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.756" endtime="20201112 12:27:09.044"></status>
</kw>
<msg timestamp="20201112 12:27:09.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.754" endtime="20201112 12:27:09.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.048" endtime="20201112 12:27:09.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.057" endtime="20201112 12:27:09.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.751" endtime="20201112 12:27:09.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.750" endtime="20201112 12:27:09.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.064" level="INFO">${RESULT} = [{'time': 0.022651389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0528000000002294e-05, 'source_diff': 2.0528000000002294e-05}, {'time': 0.022682125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:09.060" endtime="20201112 12:27:09.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.078" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:09.065" endtime="20201112 12:27:09.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.083" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.082" endtime="20201112 12:27:09.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.085" level="INFO">VALUE: [2.0528000000002294e-05, 2.0542000000001864e-05, 1.9958000000000475e-05, 2.0555999999997965e-05, 2.0527999999998825e-05, 1.993100000000081e-05, 2.0542000000001864e-05, 1.995899999999995e-05, 2.059700000000067e-05, 2.0555999999997965e-05, 1.991700000000124e-05, 2.113899999999988e-05, 2.113899999999988e-05, 2.115299999999945e-05, 1.9929999999997866e-05, 2.0499999999999685e-05, 2.061100000000024e-05, 1.9929999999997866e-05, 1.9930000000001336e-05, 1.9972000000000045e-05, 2.0556000000001434e-05, 1.9943999999997436e-05, 1.9930000000001336e-05, 2.0527999999998825e-05, 1.9958000000000475e-05, 2.0472000000000545e-05, 2.0570000000001004e-05, 2.0555999999997965e-05, 2.052700000000282e-05, 1.993100000000081e-05, 2.054099999999892e-05, 2.0555999999997965e-05, 2.058299999999763e-05, 2.0541999999998395e-05, 2.0570000000001004e-05, 1.9985999999999615e-05, 2.0486000000000115e-05, 2.1111999999996744e-05, 1.9999999999999185e-05, 2.054099999999892e-05, 1.9929999999997866e-05, 2.0541999999998395e-05, 2.0527999999998825e-05, 1.993100000000081e-05, 1.993100000000081e-05, 2.0527999999998825e-05, 2.0541999999998395e-05, 2.0013999999998755e-05, 2.0542000000001864e-05, 1.987500000000253e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.084" endtime="20201112 12:27:09.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.079" endtime="20201112 12:27:09.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.089" endtime="20201112 12:27:09.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.093" endtime="20201112 12:27:09.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.091" endtime="20201112 12:27:09.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.087" endtime="20201112 12:27:09.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.719" endtime="20201112 12:27:09.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.718" endtime="20201112 12:27:09.114"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.123" endtime="20201112 12:27:09.138"></status>
</kw>
<msg timestamp="20201112 12:27:09.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.121" endtime="20201112 12:27:09.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.140" endtime="20201112 12:27:09.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.142" endtime="20201112 12:27:09.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.118" endtime="20201112 12:27:09.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.116" endtime="20201112 12:27:09.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.152" endtime="20201112 12:27:09.439"></status>
</kw>
<msg timestamp="20201112 12:27:09.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022654458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.150" endtime="20201112 12:27:09.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022654458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.443" endtime="20201112 12:27:09.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.452" endtime="20201112 12:27:09.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.147" endtime="20201112 12:27:09.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.146" endtime="20201112 12:27:09.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.459" level="INFO">${RESULT} = [{'time': 0.022675583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.112500000000031e-05, 'source_diff': 2.112500000000031e-05}, {'time': 0.022711417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:09.455" endtime="20201112 12:27:09.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.473" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:09.460" endtime="20201112 12:27:09.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.478" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.476" endtime="20201112 12:27:09.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.480" level="INFO">VALUE: [2.112500000000031e-05, 2.116700000000249e-05, 2.1735999999997896e-05, 2.113899999999988e-05, 2.1764000000000505e-05, 2.1222000000001295e-05, 2.116700000000249e-05, 2.113899999999988e-05, 2.1151999999999976e-05, 2.115299999999945e-05, 2.1764000000000505e-05, 2.1750000000000935e-05, 2.116700000000249e-05, 2.1750000000000935e-05, 2.1750000000000935e-05, 2.1764000000000505e-05, 2.113899999999988e-05, 2.1138000000000406e-05, 2.113900000000335e-05, 2.109700000000117e-05, 2.112500000000031e-05, 2.113899999999988e-05, 2.115299999999945e-05, 2.111100000000074e-05, 2.113899999999988e-05, 2.10830000000016e-05, 2.113899999999988e-05, 2.1764000000000505e-05, 2.1098000000000644e-05, 2.17770000000006e-05, 2.1750000000000935e-05, 2.1750000000000935e-05, 2.1764000000000505e-05, 2.118099999999859e-05, 2.1764000000000505e-05, 2.176300000000103e-05, 2.116699999999902e-05, 2.1194000000002156e-05, 2.166699999999952e-05, 2.1112000000000214e-05, 2.113899999999988e-05, 2.112499999999684e-05, 2.115299999999945e-05, 2.1764000000000505e-05, 2.1749999999997466e-05, 2.115300000000292e-05, 2.115299999999945e-05, 2.112500000000031e-05, 2.1750000000000935e-05, 2.1763999999997036e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.479" endtime="20201112 12:27:09.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.474" endtime="20201112 12:27:09.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.484" endtime="20201112 12:27:09.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.487" endtime="20201112 12:27:09.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.486" endtime="20201112 12:27:09.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.482" endtime="20201112 12:27:09.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.114" endtime="20201112 12:27:09.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.114" endtime="20201112 12:27:09.508"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.517" endtime="20201112 12:27:09.533"></status>
</kw>
<msg timestamp="20201112 12:27:09.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.516" endtime="20201112 12:27:09.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.534" endtime="20201112 12:27:09.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.537" endtime="20201112 12:27:09.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.513" endtime="20201112 12:27:09.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.511" endtime="20201112 12:27:09.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.546" endtime="20201112 12:27:09.833"></status>
</kw>
<msg timestamp="20201112 12:27:09.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02285125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:09.544" endtime="20201112 12:27:09.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02285125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:09.838" endtime="20201112 12:27:09.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.846" endtime="20201112 12:27:09.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.542" endtime="20201112 12:27:09.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.540" endtime="20201112 12:27:09.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.853" level="INFO">${RESULT} = [{'time': 0.022873611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.236099999999852e-05, 'source_diff': 2.236099999999852e-05}, {'time': 0.022905806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:09.850" endtime="20201112 12:27:09.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.867" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:09.854" endtime="20201112 12:27:09.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.872" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.871" endtime="20201112 12:27:09.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.875" level="INFO">VALUE: [2.236099999999852e-05, 2.2348000000001894e-05, 2.236100000000199e-05, 2.236099999999852e-05, 2.233300000000285e-05, 2.234699999999895e-05, 2.236099999999852e-05, 2.1763999999997036e-05, 2.2944000000000436e-05, 2.238899999999766e-05, 2.2958000000000006e-05, 2.2430000000000366e-05, 2.236099999999852e-05, 2.2986000000002615e-05, 2.2333999999998855e-05, 2.2362000000001464e-05, 2.2958000000000006e-05, 2.294499999999991e-05, 2.1749999999997466e-05, 2.233299999999938e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.234700000000242e-05, 2.234700000000242e-05, 2.1735999999997896e-05, 2.233299999999938e-05, 2.237499999999809e-05, 2.2347999999998425e-05, 2.2985999999999146e-05, 2.1693999999999186e-05, 2.1750000000000935e-05, 2.229100000000067e-05, 2.2291999999996676e-05, 2.2943999999996967e-05, 2.290299999999773e-05, 2.2986000000002615e-05, 2.234699999999895e-05, 2.233300000000285e-05, 2.236099999999852e-05, 2.1750000000000935e-05, 2.237499999999809e-05, 2.294499999999991e-05, 2.2958000000000006e-05, 2.233299999999938e-05, 2.237499999999809e-05, 2.2999999999998716e-05, 2.2319999999999285e-05, 2.1764000000000505e-05, 2.234699999999895e-05, 2.237500000000156e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.873" endtime="20201112 12:27:09.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.868" endtime="20201112 12:27:09.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.878" endtime="20201112 12:27:09.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.882" endtime="20201112 12:27:09.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.880" endtime="20201112 12:27:09.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.877" endtime="20201112 12:27:09.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.509" endtime="20201112 12:27:09.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.509" endtime="20201112 12:27:09.903"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.912" endtime="20201112 12:27:09.928"></status>
</kw>
<msg timestamp="20201112 12:27:09.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.910" endtime="20201112 12:27:09.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.930" endtime="20201112 12:27:09.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.933" endtime="20201112 12:27:09.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.908" endtime="20201112 12:27:09.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.906" endtime="20201112 12:27:09.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.942" endtime="20201112 12:27:10.229"></status>
</kw>
<msg timestamp="20201112 12:27:10.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.940" endtime="20201112 12:27:10.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.234" endtime="20201112 12:27:10.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.242" endtime="20201112 12:27:10.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.938" endtime="20201112 12:27:10.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.936" endtime="20201112 12:27:10.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.249" level="INFO">${RESULT} = [{'time': 0.022595333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2958000000000006e-05, 'source_diff': 2.2958000000000006e-05}, {'time': 0.022624097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:10.246" endtime="20201112 12:27:10.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.263" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:10.250" endtime="20201112 12:27:10.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.268" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.267" endtime="20201112 12:27:10.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.271" level="INFO">VALUE: [2.2958000000000006e-05, 2.3568999999997592e-05, 2.2944000000000436e-05, 2.3555999999997496e-05, 2.3514000000002255e-05, 2.294499999999991e-05, 2.358300000000063e-05, 2.355500000000149e-05, 2.3570000000000535e-05, 2.295899999999948e-05, 2.2958000000000006e-05, 2.3541999999997926e-05, 2.3568999999997592e-05, 2.358300000000063e-05, 2.3570000000000535e-05, 2.356900000000106e-05, 2.362499999999934e-05, 2.356900000000106e-05, 2.2985999999999146e-05, 2.356900000000106e-05, 2.3582999999997162e-05, 2.3556000000000965e-05, 2.362499999999934e-05, 2.418100000000159e-05, 2.3526999999998882e-05, 2.293099999999687e-05, 2.295899999999948e-05, 2.2971999999999576e-05, 2.363899999999891e-05, 2.2971999999999576e-05, 2.2971999999999576e-05, 2.362499999999934e-05, 2.356900000000106e-05, 2.3555999999997496e-05, 2.297299999999905e-05, 2.3584000000000105e-05, 2.2985999999999146e-05, 2.3027999999997856e-05, 2.356900000000106e-05, 2.288899999999816e-05, 2.2971999999999576e-05, 2.35970000000002e-05, 2.415299999999898e-05, 2.356900000000106e-05, 2.3570000000000535e-05, 2.3542000000001395e-05, 2.3568999999997592e-05, 2.3556000000000965e-05, 2.355500000000149e-05, 2.294499999999991e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.269" endtime="20201112 12:27:10.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.264" endtime="20201112 12:27:10.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.274" endtime="20201112 12:27:10.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.278" endtime="20201112 12:27:10.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.276" endtime="20201112 12:27:10.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.273" endtime="20201112 12:27:10.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.904" endtime="20201112 12:27:10.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.903" endtime="20201112 12:27:10.299"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.308" endtime="20201112 12:27:10.324"></status>
</kw>
<msg timestamp="20201112 12:27:10.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.306" endtime="20201112 12:27:10.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.326" endtime="20201112 12:27:10.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.328" endtime="20201112 12:27:10.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.304" endtime="20201112 12:27:10.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.301" endtime="20201112 12:27:10.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.338" endtime="20201112 12:27:10.625"></status>
</kw>
<msg timestamp="20201112 12:27:10.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022980431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023004556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.336" endtime="20201112 12:27:10.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022980431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023004556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.629" endtime="20201112 12:27:10.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.638" endtime="20201112 12:27:10.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.333" endtime="20201112 12:27:10.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.332" endtime="20201112 12:27:10.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.645" level="INFO">${RESULT} = [{'time': 0.023004556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.412499999999984e-05, 'source_diff': 2.412499999999984e-05}, {'time': 0.023041472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:10.641" endtime="20201112 12:27:10.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.659" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:10.646" endtime="20201112 12:27:10.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.663" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.662" endtime="20201112 12:27:10.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.666" level="INFO">VALUE: [2.412499999999984e-05, 2.4236000000000396e-05, 2.4180000000002116e-05, 2.416699999999855e-05, 2.4179999999998647e-05, 2.416699999999855e-05, 2.4179999999998647e-05, 2.4819999999998316e-05, 2.4166000000002547e-05, 2.4777999999999606e-05, 2.481900000000231e-05, 2.4249999999999966e-05, 2.415299999999898e-05, 2.418099999999812e-05, 2.4180000000002116e-05, 2.419500000000116e-05, 2.418100000000159e-05, 2.413899999999941e-05, 2.4165999999999077e-05, 2.416700000000202e-05, 2.4236000000000396e-05, 2.4777999999999606e-05, 2.4777999999999606e-05, 2.4764000000000036e-05, 2.415300000000245e-05, 2.4165999999999077e-05, 2.4777000000000132e-05, 2.4764000000000036e-05, 2.481900000000231e-05, 2.4166000000002547e-05, 2.4848000000000925e-05, 2.4777000000000132e-05, 2.4764000000000036e-05, 2.416699999999855e-05, 2.4764000000000036e-05, 2.415300000000245e-05, 2.416699999999855e-05, 2.422299999999683e-05, 2.4179999999998647e-05, 2.4777000000000132e-05, 2.4777999999999606e-05, 2.4764000000000036e-05, 2.416699999999855e-05, 2.413899999999941e-05, 2.416699999999855e-05, 2.4179999999998647e-05, 2.4777999999999606e-05, 2.4777999999999606e-05, 2.4722000000001326e-05, 2.4790999999999702e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.665" endtime="20201112 12:27:10.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.660" endtime="20201112 12:27:10.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.670" endtime="20201112 12:27:10.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.673" endtime="20201112 12:27:10.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.672" endtime="20201112 12:27:10.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.668" endtime="20201112 12:27:10.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.300" endtime="20201112 12:27:10.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.299" endtime="20201112 12:27:10.694"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.703" endtime="20201112 12:27:10.720"></status>
</kw>
<msg timestamp="20201112 12:27:10.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.702" endtime="20201112 12:27:10.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.721" endtime="20201112 12:27:10.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.724" endtime="20201112 12:27:10.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.699" endtime="20201112 12:27:10.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.697" endtime="20201112 12:27:10.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.733" endtime="20201112 12:27:11.021"></status>
</kw>
<msg timestamp="20201112 12:27:11.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022816472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022841208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.732" endtime="20201112 12:27:11.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022816472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022841208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.025" endtime="20201112 12:27:11.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.034" endtime="20201112 12:27:11.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.729" endtime="20201112 12:27:11.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.727" endtime="20201112 12:27:11.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.041" level="INFO">${RESULT} = [{'time': 0.022841208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4736000000000896e-05, 'source_diff': 2.4736000000000896e-05}, {'time': 0.022875611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:11.037" endtime="20201112 12:27:11.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.055" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:11.042" endtime="20201112 12:27:11.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.060" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.059" endtime="20201112 12:27:11.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.062" level="INFO">VALUE: [2.4736000000000896e-05, 2.537500000000109e-05, 2.4791999999999176e-05, 2.537499999999762e-05, 2.4832999999998412e-05, 2.6027999999997387e-05, 2.5985999999998677e-05, 2.4778000000003075e-05, 2.538899999999719e-05, 2.537500000000109e-05, 2.5986000000002146e-05, 2.538899999999719e-05, 2.537500000000109e-05, 2.537499999999762e-05, 2.5943999999999967e-05, 2.6000000000001716e-05, 2.537499999999762e-05, 2.4777999999999606e-05, 2.538900000000066e-05, 2.598699999999815e-05, 2.538900000000066e-05, 2.537500000000109e-05, 2.536100000000152e-05, 2.4750000000000466e-05, 2.537499999999762e-05, 2.537500000000109e-05, 2.4736000000000896e-05, 2.5360999999998052e-05, 2.597300000000205e-05, 2.5360999999998052e-05, 2.537500000000109e-05, 2.4777999999999606e-05, 2.5318999999999342e-05, 2.5304999999999772e-05, 2.537500000000109e-05, 2.536100000000152e-05, 2.6042000000000426e-05, 2.5319999999998816e-05, 2.5985999999998677e-05, 2.538900000000066e-05, 2.4818999999998842e-05, 2.5333999999998386e-05, 2.537500000000109e-05, 2.537499999999762e-05, 2.538899999999719e-05, 2.538900000000066e-05, 2.536100000000152e-05, 2.537500000000109e-05, 2.540300000000023e-05, 2.5985999999998677e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.061" endtime="20201112 12:27:11.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.056" endtime="20201112 12:27:11.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.066" endtime="20201112 12:27:11.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.069" endtime="20201112 12:27:11.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.068" endtime="20201112 12:27:11.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.064" endtime="20201112 12:27:11.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.695" endtime="20201112 12:27:11.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.695" endtime="20201112 12:27:11.090"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.100" endtime="20201112 12:27:11.115"></status>
</kw>
<msg timestamp="20201112 12:27:11.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.098" endtime="20201112 12:27:11.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.117" endtime="20201112 12:27:11.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.119" endtime="20201112 12:27:11.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.095" endtime="20201112 12:27:11.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.093" endtime="20201112 12:27:11.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.129" endtime="20201112 12:27:11.417"></status>
</kw>
<msg timestamp="20201112 12:27:11.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022787986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.127" endtime="20201112 12:27:11.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022787986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.421" endtime="20201112 12:27:11.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.430" endtime="20201112 12:27:11.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.125" endtime="20201112 12:27:11.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.123" endtime="20201112 12:27:11.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.437" level="INFO">${RESULT} = [{'time': 0.022813986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6000000000001716e-05, 'source_diff': 2.6000000000001716e-05}, {'time': 0.022849417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:11.433" endtime="20201112 12:27:11.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.451" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:11.438" endtime="20201112 12:27:11.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.455" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.454" endtime="20201112 12:27:11.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.458" level="INFO">VALUE: [2.6000000000001716e-05, 2.6597999999999206e-05, 2.594499999999944e-05, 2.65970000000032e-05, 2.6570000000000066e-05, 2.6610999999999302e-05, 2.6596999999999732e-05, 2.6583000000000162e-05, 2.6610999999999302e-05, 2.6583000000000162e-05, 2.6012999999998343e-05, 2.6583000000000162e-05, 2.5957999999999537e-05, 2.6597999999999206e-05, 2.5972000000002576e-05, 2.5999999999998247e-05, 2.598700000000162e-05, 2.5943999999999967e-05, 2.661100000000277e-05, 2.5972000000002576e-05, 2.6569000000000592e-05, 2.5972000000002576e-05, 2.6583000000000162e-05, 2.5957999999999537e-05, 3.6027000000000975e-05, 2.5986000000002146e-05, 2.6583000000000162e-05, 2.6583000000000162e-05, 2.6596999999999732e-05, 2.6583999999999636e-05, 2.6000000000001716e-05, 2.597299999999858e-05, 2.6596999999999732e-05, 2.5971999999999107e-05, 2.6569000000000592e-05, 2.6570000000000066e-05, 2.6596999999999732e-05, 2.6596999999999732e-05, 2.6570000000000066e-05, 2.6624999999998872e-05, 2.6596999999999732e-05, 2.5986000000002146e-05, 2.6569000000000592e-05, 2.5986000000002146e-05, 2.5986000000002146e-05, 2.6583000000000162e-05, 2.6583999999999636e-05, 2.6583000000000162e-05, 2.6569000000000592e-05, 2.597300000000205e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.456" endtime="20201112 12:27:11.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.452" endtime="20201112 12:27:11.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.462" endtime="20201112 12:27:11.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.465" endtime="20201112 12:27:11.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.464" endtime="20201112 12:27:11.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.460" endtime="20201112 12:27:11.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.091" endtime="20201112 12:27:11.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.091" endtime="20201112 12:27:11.486"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.495" endtime="20201112 12:27:11.512"></status>
</kw>
<msg timestamp="20201112 12:27:11.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.494" endtime="20201112 12:27:11.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.513" endtime="20201112 12:27:11.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.516" endtime="20201112 12:27:11.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.491" endtime="20201112 12:27:11.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.489" endtime="20201112 12:27:11.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.525" endtime="20201112 12:27:11.813"></status>
</kw>
<msg timestamp="20201112 12:27:11.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023040486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023067667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.524" endtime="20201112 12:27:11.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023040486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023067667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.817" endtime="20201112 12:27:11.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.826" endtime="20201112 12:27:11.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.521" endtime="20201112 12:27:11.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.519" endtime="20201112 12:27:11.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.833" level="INFO">${RESULT} = [{'time': 0.023067667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.718100000000112e-05, 'source_diff': 2.718100000000112e-05}, {'time': 0.023108708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:11.829" endtime="20201112 12:27:11.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.847" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:11.834" endtime="20201112 12:27:11.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.852" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.851" endtime="20201112 12:27:11.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.854" level="INFO">VALUE: [2.718100000000112e-05, 2.7179999999998178e-05, 2.7790999999999233e-05, 2.7791999999998707e-05, 2.7791999999998707e-05, 2.7194000000001217e-05, 2.7777999999999137e-05, 2.7805999999998277e-05, 2.718100000000112e-05, 2.7708000000001287e-05, 2.7235999999999927e-05, 2.7791999999998707e-05, 2.718099999999765e-05, 2.7806000000001746e-05, 2.7806000000001746e-05, 2.7151999999999038e-05, 2.7124999999999372e-05, 2.7792000000002176e-05, 2.7806000000001746e-05, 2.7861000000000552e-05, 2.720900000000026e-05, 2.7194000000001217e-05, 2.7193999999997748e-05, 2.7820000000001316e-05, 2.718099999999765e-05, 2.7806000000001746e-05, 2.7222000000000357e-05, 2.718100000000112e-05, 2.719499999999722e-05, 2.718100000000112e-05, 2.720900000000026e-05, 2.7193999999997748e-05, 2.7791999999998707e-05, 2.7763999999999567e-05, 2.7207999999997318e-05, 2.7805999999998277e-05, 2.7790999999999233e-05, 2.7790999999999233e-05, 2.7208000000000787e-05, 2.718100000000112e-05, 2.716699999999808e-05, 2.7847000000000982e-05, 2.7193999999997748e-05, 2.719500000000069e-05, 2.7222000000000357e-05, 2.7792000000002176e-05, 2.7805999999998277e-05, 2.7194000000001217e-05, 2.7777999999999137e-05, 2.7235999999999927e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.853" endtime="20201112 12:27:11.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.848" endtime="20201112 12:27:11.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.858" endtime="20201112 12:27:11.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.861" endtime="20201112 12:27:11.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.860" endtime="20201112 12:27:11.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.856" endtime="20201112 12:27:11.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.487" endtime="20201112 12:27:11.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.486" endtime="20201112 12:27:11.883"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.892" endtime="20201112 12:27:11.907"></status>
</kw>
<msg timestamp="20201112 12:27:11.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.890" endtime="20201112 12:27:11.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.909" endtime="20201112 12:27:11.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.912" endtime="20201112 12:27:11.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.887" endtime="20201112 12:27:11.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.885" endtime="20201112 12:27:11.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.921" endtime="20201112 12:27:12.208"></status>
</kw>
<msg timestamp="20201112 12:27:12.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022887986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.919" endtime="20201112 12:27:12.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022887986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.213" endtime="20201112 12:27:12.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.221" endtime="20201112 12:27:12.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.917" endtime="20201112 12:27:12.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.915" endtime="20201112 12:27:12.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.228" level="INFO">${RESULT} = [{'time': 0.022916319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8333000000001912e-05, 'source_diff': 2.8333000000001912e-05}, {'time': 0.022948819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:12.225" endtime="20201112 12:27:12.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.242" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:12.229" endtime="20201112 12:27:12.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.247" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.246" endtime="20201112 12:27:12.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.250" level="INFO">VALUE: [2.8333000000001912e-05, 2.7736000000000427e-05, 2.8415999999999858e-05, 2.8402999999999762e-05, 2.8402000000000288e-05, 2.8429999999999428e-05, 2.7790999999999233e-05, 2.8999999999997778e-05, 2.8429999999999428e-05, 2.8361000000001052e-05, 2.9000000000001247e-05, 2.7804999999998803e-05, 2.7791999999998707e-05, 2.8389000000000192e-05, 2.8318999999998873e-05, 2.7777999999999137e-05, 2.8375000000000622e-05, 2.9000000000001247e-05, 2.9014000000000817e-05, 2.9055999999999527e-05, 2.7763999999999567e-05, 2.9028000000000387e-05, 2.8402999999999762e-05, 2.84309999999989e-05, 2.9000000000001247e-05, 2.838799999999725e-05, 2.9026999999997444e-05, 2.845900000000151e-05, 2.8402999999999762e-05, 2.7805000000002272e-05, 2.841699999999933e-05, 2.8375000000000622e-05, 2.8971999999998638e-05, 2.8375000000000622e-05, 2.8375000000000622e-05, 2.8985999999998208e-05, 2.7777999999999137e-05, 2.8999999999997778e-05, 2.8986000000001677e-05, 2.9055000000000053e-05, 2.8375000000000622e-05, 2.8999999999997778e-05, 2.8999999999997778e-05, 2.8360999999997583e-05, 2.8346999999998013e-05, 2.8999999999997778e-05, 2.841699999999933e-05, 2.8999999999997778e-05, 2.9000000000001247e-05, 2.8999999999997778e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.248" endtime="20201112 12:27:12.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.243" endtime="20201112 12:27:12.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.258" endtime="20201112 12:27:12.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.261" endtime="20201112 12:27:12.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.260" endtime="20201112 12:27:12.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.256" endtime="20201112 12:27:12.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.884" endtime="20201112 12:27:12.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.883" endtime="20201112 12:27:12.282"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.291" endtime="20201112 12:27:12.307"></status>
</kw>
<msg timestamp="20201112 12:27:12.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.289" endtime="20201112 12:27:12.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.309" endtime="20201112 12:27:12.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.311" endtime="20201112 12:27:12.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.287" endtime="20201112 12:27:12.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.285" endtime="20201112 12:27:12.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.321" endtime="20201112 12:27:12.608"></status>
</kw>
<msg timestamp="20201112 12:27:12.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.319" endtime="20201112 12:27:12.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.613" endtime="20201112 12:27:12.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.621" endtime="20201112 12:27:12.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.316" endtime="20201112 12:27:12.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.314" endtime="20201112 12:27:12.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.628" level="INFO">${RESULT} = [{'time': 0.022736486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9610999999998833e-05, 'source_diff': 2.9610999999998833e-05}, {'time': 0.022777944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:12.625" endtime="20201112 12:27:12.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.643" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:12.630" endtime="20201112 12:27:12.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.647" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.646" endtime="20201112 12:27:12.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.650" level="INFO">VALUE: [2.9610999999998833e-05, 2.9597000000002732e-05, 2.9597999999998736e-05, 2.9624999999998403e-05, 2.9610999999998833e-05, 2.9598000000002206e-05, 2.9625000000001872e-05, 2.9597000000002732e-05, 2.9583999999999167e-05, 2.9667000000000582e-05, 2.8971999999998638e-05, 2.9014000000000817e-05, 2.9624999999998403e-05, 2.9598000000002206e-05, 2.9041000000000483e-05, 2.9000000000001247e-05, 2.9597000000002732e-05, 2.9610999999998833e-05, 2.9624999999998403e-05, 2.9000000000001247e-05, 2.9000000000001247e-05, 2.8972000000002107e-05, 2.9610999999998833e-05, 2.8986000000001677e-05, 2.9569000000000123e-05, 2.9597000000002732e-05, 2.9653000000001012e-05, 2.9056000000002996e-05, 2.9625000000001872e-05, 2.9000000000001247e-05, 2.9582999999999693e-05, 2.9542000000000457e-05, 2.9596999999999263e-05, 2.9625000000001872e-05, 2.9000000000001247e-05, 2.9000000000001247e-05, 2.9611000000002302e-05, 2.9000000000001247e-05, 2.9610999999998833e-05, 2.9610999999998833e-05, 2.9582999999999693e-05, 2.9597000000002732e-05, 2.9624999999998403e-05, 2.8999999999997778e-05, 2.8971999999998638e-05, 2.9624999999998403e-05, 2.9000000000001247e-05, 2.9041999999999957e-05, 2.9582999999999693e-05, 2.9624999999998403e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.648" endtime="20201112 12:27:12.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.643" endtime="20201112 12:27:12.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.654" endtime="20201112 12:27:12.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.657" endtime="20201112 12:27:12.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.656" endtime="20201112 12:27:12.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.652" endtime="20201112 12:27:12.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.283" endtime="20201112 12:27:12.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.283" endtime="20201112 12:27:12.678"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.687" endtime="20201112 12:27:12.703"></status>
</kw>
<msg timestamp="20201112 12:27:12.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.685" endtime="20201112 12:27:12.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.705" endtime="20201112 12:27:12.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.707" endtime="20201112 12:27:12.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.683" endtime="20201112 12:27:12.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.681" endtime="20201112 12:27:12.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.717" endtime="20201112 12:27:13.008"></status>
</kw>
<msg timestamp="20201112 12:27:13.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226345, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022665347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:12.715" endtime="20201112 12:27:13.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226345, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022665347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:13.012" endtime="20201112 12:27:13.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.021" endtime="20201112 12:27:13.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.712" endtime="20201112 12:27:13.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.711" endtime="20201112 12:27:13.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.028" level="INFO">${RESULT} = [{'time': 0.022665347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.084700000000051e-05, 'source_diff': 3.084700000000051e-05}, {'time': 0.022702861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:13.024" endtime="20201112 12:27:13.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.042" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:13.029" endtime="20201112 12:27:13.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.047" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.046" endtime="20201112 12:27:13.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.050" level="INFO">VALUE: [3.084700000000051e-05, 3.0208000000000318e-05, 3.0208000000000318e-05, 3.081900000000137e-05, 3.086100000000008e-05, 3.082000000000085e-05, 3.0208000000000318e-05, 3.0249999999999028e-05, 3.020899999999979e-05, 3.0221999999999888e-05, 3.0818999999997904e-05, 3.073599999999996e-05, 3.020899999999979e-05, 3.020899999999979e-05, 3.0221999999999888e-05, 3.0208000000000318e-05, 3.080600000000128e-05, 3.081900000000137e-05, 3.082000000000085e-05, 3.0166999999997612e-05, 3.0208000000000318e-05, 3.0804999999998334e-05, 3.0208000000000318e-05, 3.0208000000000318e-05, 3.079100000000223e-05, 3.0208000000000318e-05, 3.08050000000018e-05, 3.081900000000137e-05, 3.083300000000094e-05, 3.081999999999738e-05, 3.0221999999999888e-05, 3.0180000000001178e-05, 3.0181000000000652e-05, 3.0278000000001637e-05, 3.019500000000022e-05, 3.082000000000085e-05, 3.0208000000000318e-05, 3.0235999999999458e-05, 3.0208000000000318e-05, 3.0291999999997737e-05, 3.020899999999979e-05, 3.0221999999999888e-05, 3.022299999999936e-05, 3.080600000000128e-05, 3.0818999999997904e-05, 3.0804999999998334e-05, 3.0208000000000318e-05, 3.020799999999685e-05, 3.08050000000018e-05, 3.0208000000000318e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.048" endtime="20201112 12:27:13.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.043" endtime="20201112 12:27:13.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.054" endtime="20201112 12:27:13.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.057" endtime="20201112 12:27:13.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.056" endtime="20201112 12:27:13.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.052" endtime="20201112 12:27:13.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.679" endtime="20201112 12:27:13.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.678" endtime="20201112 12:27:13.078"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.087" endtime="20201112 12:27:13.104"></status>
</kw>
<msg timestamp="20201112 12:27:13.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.086" endtime="20201112 12:27:13.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.106" endtime="20201112 12:27:13.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.108" endtime="20201112 12:27:13.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.083" endtime="20201112 12:27:13.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.081" endtime="20201112 12:27:13.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.117" endtime="20201112 12:27:13.405"></status>
</kw>
<msg timestamp="20201112 12:27:13.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023149847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023181931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.116" endtime="20201112 12:27:13.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023149847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023181931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.410" endtime="20201112 12:27:13.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.418" endtime="20201112 12:27:13.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.113" endtime="20201112 12:27:13.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.111" endtime="20201112 12:27:13.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.426" level="INFO">${RESULT} = [{'time': 0.023181931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.20839999999982e-05, 'source_diff': 3.20839999999982e-05}, {'time': 0.023218819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:13.422" endtime="20201112 12:27:13.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.442" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:13.428" endtime="20201112 12:27:13.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.447" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.445" endtime="20201112 12:27:13.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.450" level="INFO">VALUE: [3.20839999999982e-05, 3.141600000000286e-05, 3.195800000000207e-05, 3.141599999999939e-05, 3.140299999999929e-05, 3.201400000000035e-05, 3.133300000000144e-05, 3.0750000000003e-05, 3.141599999999939e-05, 3.141700000000233e-05, 3.202799999999992e-05, 3.201400000000035e-05, 3.137500000000015e-05, 3.202799999999992e-05, 3.141699999999886e-05, 3.140300000000276e-05, 3.081900000000137e-05, 3.202799999999992e-05, 3.0804999999998334e-05, 3.083300000000094e-05, 3.202799999999992e-05, 3.202799999999992e-05, 3.084700000000051e-05, 3.140199999999982e-05, 3.141699999999886e-05, 3.202799999999992e-05, 3.202799999999992e-05, 3.195899999999807e-05, 3.081900000000137e-05, 3.141700000000233e-05, 3.082000000000085e-05, 3.073599999999996e-05, 3.141699999999886e-05, 3.079200000000171e-05, 3.202799999999992e-05, 3.081900000000137e-05, 3.141699999999886e-05, 3.200000000000078e-05, 3.0818999999997904e-05, 3.14310000000019e-05, 3.140199999999982e-05, 3.140199999999982e-05, 3.087499999999965e-05, 3.147300000000061e-05, 3.140199999999982e-05, 3.138899999999972e-05, 3.141600000000286e-05, 3.201399999999688e-05, 3.141699999999886e-05, 3.074999999999953e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.449" endtime="20201112 12:27:13.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.443" endtime="20201112 12:27:13.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.454" endtime="20201112 12:27:13.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.457" endtime="20201112 12:27:13.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.456" endtime="20201112 12:27:13.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.452" endtime="20201112 12:27:13.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.079" endtime="20201112 12:27:13.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.078" endtime="20201112 12:27:13.478"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.488" endtime="20201112 12:27:13.504"></status>
</kw>
<msg timestamp="20201112 12:27:13.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.486" endtime="20201112 12:27:13.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.505" endtime="20201112 12:27:13.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.508" endtime="20201112 12:27:13.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.483" endtime="20201112 12:27:13.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.481" endtime="20201112 12:27:13.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.517" endtime="20201112 12:27:13.805"></status>
</kw>
<msg timestamp="20201112 12:27:13.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022874417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.516" endtime="20201112 12:27:13.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022874417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.809" endtime="20201112 12:27:13.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.817" endtime="20201112 12:27:13.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.513" endtime="20201112 12:27:13.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.511" endtime="20201112 12:27:13.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.824" level="INFO">${RESULT} = [{'time': 0.022906444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2027000000000444e-05, 'source_diff': 3.2027000000000444e-05}, {'time': 0.022944597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:13.821" endtime="20201112 12:27:13.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.838" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:13.825" endtime="20201112 12:27:13.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.843" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.842" endtime="20201112 12:27:13.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.846" level="INFO">VALUE: [3.2027000000000444e-05, 3.263900000000097e-05, 3.20700000000021e-05, 3.195800000000207e-05, 3.2068999999999154e-05, 3.265200000000107e-05, 3.204199999999949e-05, 3.201400000000035e-05, 3.2624999999997933e-05, 3.204199999999949e-05, 3.265200000000107e-05, 3.201400000000035e-05, 3.269499999999925e-05, 3.261100000000183e-05, 3.26250000000014e-05, 3.201400000000035e-05, 3.202799999999992e-05, 3.265300000000054e-05, 3.268099999999968e-05, 3.272199999999892e-05, 3.206999999999863e-05, 3.269499999999925e-05, 3.263900000000097e-05, 3.198700000000068e-05, 3.204199999999949e-05, 3.26380000000015e-05, 3.261100000000183e-05, 3.202799999999992e-05, 3.259800000000174e-05, 3.204199999999949e-05, 3.263900000000097e-05, 3.263900000000097e-05, 3.26389999999975e-05, 3.263900000000097e-05, 3.265200000000107e-05, 3.26250000000014e-05, 3.2068999999999154e-05, 3.26250000000014e-05, 3.26250000000014e-05, 3.263900000000097e-05, 3.202799999999992e-05, 3.204199999999949e-05, 3.26250000000014e-05, 3.263900000000097e-05, 3.2027000000000444e-05, 3.2612000000001307e-05, 3.26250000000014e-05, 3.265300000000054e-05, 3.266700000000011e-05, 3.26250000000014e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.844" endtime="20201112 12:27:13.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.839" endtime="20201112 12:27:13.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.849" endtime="20201112 12:27:13.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.853" endtime="20201112 12:27:13.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.851" endtime="20201112 12:27:13.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.848" endtime="20201112 12:27:13.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.480" endtime="20201112 12:27:13.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.479" endtime="20201112 12:27:13.874"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.883" endtime="20201112 12:27:13.899"></status>
</kw>
<msg timestamp="20201112 12:27:13.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.881" endtime="20201112 12:27:13.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.901" endtime="20201112 12:27:13.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.903" endtime="20201112 12:27:13.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.879" endtime="20201112 12:27:13.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.876" endtime="20201112 12:27:13.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.913" endtime="20201112 12:27:14.201"></status>
</kw>
<msg timestamp="20201112 12:27:14.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023144972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.911" endtime="20201112 12:27:14.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023144972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.205" endtime="20201112 12:27:14.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.214" endtime="20201112 12:27:14.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.908" endtime="20201112 12:27:14.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.907" endtime="20201112 12:27:14.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.221" level="INFO">${RESULT} = [{'time': 0.023178819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3847000000000044e-05, 'source_diff': 3.3847000000000044e-05}, {'time': 0.023226736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:14.217" endtime="20201112 12:27:14.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.235" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:14.222" endtime="20201112 12:27:14.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.240" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.238" endtime="20201112 12:27:14.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.242" level="INFO">VALUE: [3.3847000000000044e-05, 3.322200000000289e-05, 3.323599999999899e-05, 3.3833000000000474e-05, 3.315300000000104e-05, 3.322199999999942e-05, 3.3833000000000474e-05, 3.3847000000000044e-05, 3.383399999999995e-05, 3.325000000000203e-05, 3.3833000000000474e-05, 3.323599999999899e-05, 3.320899999999932e-05, 3.323599999999899e-05, 3.3805000000001334e-05, 3.325000000000203e-05, 3.3833000000000474e-05, 3.265300000000054e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.384799999999952e-05, 3.2624999999997933e-05, 3.320800000000332e-05, 3.324999999999856e-05, 3.325000000000203e-05, 3.320899999999932e-05, 3.323599999999899e-05, 3.3847000000000044e-05, 3.323599999999899e-05, 3.320799999999985e-05, 3.377800000000167e-05, 3.323599999999899e-05, 3.316600000000114e-05, 3.320899999999932e-05, 3.323699999999846e-05, 3.3847000000000044e-05, 3.323599999999899e-05, 3.3305000000000834e-05, 3.329200000000074e-05, 3.382000000000038e-05, 3.383399999999995e-05, 3.379200000000124e-05, 3.3847000000000044e-05, 3.383399999999995e-05, 3.3833000000000474e-05, 3.326399999999813e-05, 3.3847000000000044e-05, 3.326399999999813e-05, 3.323600000000246e-05, 3.381999999999691e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.241" endtime="20201112 12:27:14.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.236" endtime="20201112 12:27:14.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.246" endtime="20201112 12:27:14.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.249" endtime="20201112 12:27:14.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.248" endtime="20201112 12:27:14.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.244" endtime="20201112 12:27:14.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.875" endtime="20201112 12:27:14.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.874" endtime="20201112 12:27:14.270"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.279" endtime="20201112 12:27:14.296"></status>
</kw>
<msg timestamp="20201112 12:27:14.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.278" endtime="20201112 12:27:14.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.297" endtime="20201112 12:27:14.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.300" endtime="20201112 12:27:14.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.275" endtime="20201112 12:27:14.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.273" endtime="20201112 12:27:14.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.309" endtime="20201112 12:27:14.596"></status>
</kw>
<msg timestamp="20201112 12:27:14.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.308" endtime="20201112 12:27:14.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.600" endtime="20201112 12:27:14.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.609" endtime="20201112 12:27:14.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.305" endtime="20201112 12:27:14.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.303" endtime="20201112 12:27:14.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.616" level="INFO">${RESULT} = [{'time': 0.022880222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.445799999999763e-05, 'source_diff': 3.445799999999763e-05}, {'time': 0.022928681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:14.612" endtime="20201112 12:27:14.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.630" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:14.617" endtime="20201112 12:27:14.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.634" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.633" endtime="20201112 12:27:14.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.637" level="INFO">VALUE: [3.445799999999763e-05, 3.445900000000057e-05, 3.501400000000335e-05, 3.504200000000249e-05, 3.442999999999849e-05, 3.445900000000057e-05, 3.444399999999806e-05, 3.441700000000186e-05, 3.441699999999839e-05, 3.442999999999849e-05, 3.379200000000124e-05, 3.383400000000342e-05, 3.448600000000024e-05, 3.443000000000196e-05, 3.442999999999849e-05, 3.44719999999972e-05, 3.5040999999999545e-05, 3.4374999999999684e-05, 3.4402999999998823e-05, 3.3833000000000474e-05, 3.388900000000222e-05, 3.444400000000153e-05, 3.444400000000153e-05, 3.443100000000143e-05, 3.443099999999796e-05, 3.3847000000000044e-05, 3.444400000000153e-05, 3.443099999999796e-05, 3.44719999999972e-05, 3.445900000000057e-05, 3.443099999999796e-05, 3.443000000000196e-05, 3.3833000000000474e-05, 3.3833000000000474e-05, 3.504199999999902e-05, 3.44719999999972e-05, 3.444400000000153e-05, 3.3847000000000044e-05, 3.442999999999849e-05, 3.444399999999806e-05, 3.445799999999763e-05, 3.443100000000143e-05, 3.444399999999806e-05, 3.384799999999952e-05, 3.444400000000153e-05, 3.443099999999796e-05, 3.447200000000067e-05, 3.505600000000206e-05, 3.444399999999806e-05, 3.504199999999902e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.636" endtime="20201112 12:27:14.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.631" endtime="20201112 12:27:14.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.641" endtime="20201112 12:27:14.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.644" endtime="20201112 12:27:14.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.643" endtime="20201112 12:27:14.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.639" endtime="20201112 12:27:14.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.271" endtime="20201112 12:27:14.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.271" endtime="20201112 12:27:14.665"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.674" endtime="20201112 12:27:14.690"></status>
</kw>
<msg timestamp="20201112 12:27:14.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.673" endtime="20201112 12:27:14.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.692" endtime="20201112 12:27:14.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.694" endtime="20201112 12:27:14.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.670" endtime="20201112 12:27:14.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.668" endtime="20201112 12:27:14.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.704" endtime="20201112 12:27:14.992"></status>
</kw>
<msg timestamp="20201112 12:27:14.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022601236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.702" endtime="20201112 12:27:14.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022601236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.996" endtime="20201112 12:27:15.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.005" endtime="20201112 12:27:15.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.700" endtime="20201112 12:27:15.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.698" endtime="20201112 12:27:15.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.012" level="INFO">${RESULT} = [{'time': 0.022601236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.502799999999945e-05, 'source_diff': 3.502799999999945e-05}, {'time': 0.02264825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:15.008" endtime="20201112 12:27:15.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.026" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:15.013" endtime="20201112 12:27:15.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.031" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.030" endtime="20201112 12:27:15.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.033" level="INFO">VALUE: [3.502799999999945e-05, 3.5653000000000074e-05, 3.5040999999999545e-05, 3.5624999999997464e-05, 3.505600000000206e-05, 3.5653000000000074e-05, 3.5639000000000504e-05, 3.5068999999998685e-05, 3.5026999999999975e-05, 3.5639000000000504e-05, 3.5054999999999115e-05, 3.5040999999999545e-05, 3.5653000000000074e-05, 3.5639000000000504e-05, 3.501399999999988e-05, 3.5625000000000934e-05, 3.504199999999902e-05, 3.504199999999902e-05, 3.5666999999999643e-05, 3.5653000000000074e-05, 3.5624999999997464e-05, 3.5653000000000074e-05, 3.5653000000000074e-05, 3.500000000000031e-05, 3.5666999999999643e-05, 3.502799999999945e-05, 3.5653000000000074e-05, 3.5582999999998755e-05, 3.570799999999888e-05, 3.5582999999998755e-05, 3.5625000000000934e-05, 3.5639000000000504e-05, 3.5653000000000074e-05, 3.5666999999999643e-05, 3.502800000000292e-05, 3.566600000000017e-05, 3.5653000000000074e-05, 3.5041000000003014e-05, 3.5666999999999643e-05, 3.5568999999999185e-05, 3.501399999999988e-05, 3.5653000000000074e-05, 3.507000000000163e-05, 3.5653000000000074e-05, 3.5054999999999115e-05, 3.5013000000000405e-05, 3.5639000000000504e-05, 3.5653000000000074e-05, 3.5610999999997894e-05, 3.5639000000000504e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.032" endtime="20201112 12:27:15.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.027" endtime="20201112 12:27:15.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.037" endtime="20201112 12:27:15.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.040" endtime="20201112 12:27:15.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.039" endtime="20201112 12:27:15.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.035" endtime="20201112 12:27:15.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.666" endtime="20201112 12:27:15.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.666" endtime="20201112 12:27:15.062"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.072" endtime="20201112 12:27:15.088"></status>
</kw>
<msg timestamp="20201112 12:27:15.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.070" endtime="20201112 12:27:15.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.089" endtime="20201112 12:27:15.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.092" endtime="20201112 12:27:15.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.067" endtime="20201112 12:27:15.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.065" endtime="20201112 12:27:15.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.101" endtime="20201112 12:27:15.389"></status>
</kw>
<msg timestamp="20201112 12:27:15.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024272528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024308806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.100" endtime="20201112 12:27:15.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024272528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024308806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.393" endtime="20201112 12:27:15.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.402" endtime="20201112 12:27:15.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.097" endtime="20201112 12:27:15.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.095" endtime="20201112 12:27:15.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.409" level="INFO">${RESULT} = [{'time': 0.024308806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.627799999999723e-05, 'source_diff': 3.627799999999723e-05}, {'time': 0.024355847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:15.405" endtime="20201112 12:27:15.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.423" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:15.410" endtime="20201112 12:27:15.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.427" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.426" endtime="20201112 12:27:15.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.430" level="INFO">VALUE: [3.627799999999723e-05, 3.6874999999998714e-05, 3.619399999999981e-05, 3.629200000000027e-05, 3.626400000000113e-05, 3.625000000000156e-05, 3.5666999999999643e-05, 3.6846999999999575e-05, 3.626400000000113e-05, 3.6805000000000865e-05, 3.623599999999852e-05, 3.626400000000113e-05, 3.623599999999852e-05, 3.6291000000000795e-05, 3.6917000000000894e-05, 3.5653000000000074e-05, 3.6861000000002614e-05, 3.6889000000001754e-05, 3.625000000000156e-05, 3.686199999999862e-05, 3.684799999999905e-05, 3.626399999999766e-05, 3.681999999999991e-05, 3.625000000000156e-05, 3.5653000000000074e-05, 3.626399999999766e-05, 3.626400000000113e-05, 3.619499999999928e-05, 3.6860999999999144e-05, 3.62780000000007e-05, 3.629200000000027e-05, 3.625000000000156e-05, 3.6874999999998714e-05, 3.625000000000156e-05, 3.6860999999999144e-05, 3.625000000000156e-05, 3.626400000000113e-05, 3.618000000000024e-05, 3.625000000000156e-05, 3.626399999999766e-05, 3.625000000000156e-05, 3.6860999999999144e-05, 3.626400000000113e-05, 3.62780000000007e-05, 3.6875000000002184e-05, 3.623599999999852e-05, 3.629200000000027e-05, 3.62780000000007e-05, 3.622299999999842e-05, 3.6846999999999575e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.429" endtime="20201112 12:27:15.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.424" endtime="20201112 12:27:15.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.434" endtime="20201112 12:27:15.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.437" endtime="20201112 12:27:15.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.436" endtime="20201112 12:27:15.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.432" endtime="20201112 12:27:15.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.063" endtime="20201112 12:27:15.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.062" endtime="20201112 12:27:15.458"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.467" endtime="20201112 12:27:15.483"></status>
</kw>
<msg timestamp="20201112 12:27:15.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.466" endtime="20201112 12:27:15.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.485" endtime="20201112 12:27:15.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.487" endtime="20201112 12:27:15.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.463" endtime="20201112 12:27:15.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.461" endtime="20201112 12:27:15.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.497" endtime="20201112 12:27:15.783"></status>
</kw>
<msg timestamp="20201112 12:27:15.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.495" endtime="20201112 12:27:15.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.787" endtime="20201112 12:27:15.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.796" endtime="20201112 12:27:15.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.492" endtime="20201112 12:27:15.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.491" endtime="20201112 12:27:15.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.803" level="INFO">${RESULT} = [{'time': 0.022732972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.745800000000063e-05, 'source_diff': 3.745800000000063e-05}, {'time': 0.022777069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:15.799" endtime="20201112 12:27:15.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.817" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:15.804" endtime="20201112 12:27:15.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.822" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.821" endtime="20201112 12:27:15.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.824" level="INFO">VALUE: [3.745800000000063e-05, 3.8069000000001685e-05, 3.744400000000106e-05, 3.74590000000001e-05, 3.74720000000002e-05, 3.6903000000001324e-05, 3.8111000000000395e-05, 3.747199999999673e-05, 3.745800000000063e-05, 3.808400000000073e-05, 3.680600000000034e-05, 3.684799999999905e-05, 3.74720000000002e-05, 3.752799999999848e-05, 3.8068999999998215e-05, 3.74590000000001e-05, 3.74720000000002e-05, 3.8082999999997785e-05, 3.6846999999999575e-05, 3.8068999999998215e-05, 3.745800000000063e-05, 3.741600000000192e-05, 3.6846999999999575e-05, 3.745800000000063e-05, 3.745799999999716e-05, 3.7445000000000533e-05, 3.6860999999999144e-05, 3.74720000000002e-05, 3.6874999999998714e-05, 3.745800000000063e-05, 3.7541000000002045e-05, 3.747299999999967e-05, 3.6846999999999575e-05, 3.683399999999948e-05, 3.745799999999716e-05, 3.745800000000063e-05, 3.747299999999967e-05, 3.681999999999991e-05, 3.6874999999998714e-05, 3.74720000000002e-05, 3.8068999999998215e-05, 3.684799999999905e-05, 3.74590000000001e-05, 3.7416999999997924e-05, 3.749999999999934e-05, 3.8054999999998645e-05, 3.745800000000063e-05, 3.745800000000063e-05, 3.744400000000106e-05, 3.6846999999999575e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.823" endtime="20201112 12:27:15.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.818" endtime="20201112 12:27:15.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.828" endtime="20201112 12:27:15.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.832" endtime="20201112 12:27:15.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.830" endtime="20201112 12:27:15.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.826" endtime="20201112 12:27:15.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.459" endtime="20201112 12:27:15.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.458" endtime="20201112 12:27:15.852"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.861" endtime="20201112 12:27:15.878"></status>
</kw>
<msg timestamp="20201112 12:27:15.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.860" endtime="20201112 12:27:15.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.880" endtime="20201112 12:27:15.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.883" endtime="20201112 12:27:15.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.857" endtime="20201112 12:27:15.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.855" endtime="20201112 12:27:15.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.892" endtime="20201112 12:27:16.179"></status>
</kw>
<msg timestamp="20201112 12:27:16.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.891" endtime="20201112 12:27:16.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.184" endtime="20201112 12:27:16.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.192" endtime="20201112 12:27:16.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.888" endtime="20201112 12:27:16.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.886" endtime="20201112 12:27:16.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.199" level="INFO">${RESULT} = [{'time': 0.022646403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.43609999999993e-05, 'source_diff': 5.43609999999993e-05}, {'time': 0.022712417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:16.196" endtime="20201112 12:27:16.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.213" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:16.200" endtime="20201112 12:27:16.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.218" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.217" endtime="20201112 12:27:16.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.220" level="INFO">VALUE: [5.43609999999993e-05, 5.432000000000006e-05, 5.432000000000006e-05, 5.4221999999999604e-05, 5.445899999999976e-05, 5.4458000000000284e-05, 5.465300000000173e-05, 5.4652000000002254e-05, 5.4458000000000284e-05, 5.465300000000173e-05, 5.387500000000184e-05, 5.438900000000191e-05, 5.431899999999712e-05, 5.3999999999998494e-05, 5.415300000000123e-05, 5.3999999999998494e-05, 5.41670000000008e-05, 5.4263999999998314e-05, 5.412499999999862e-05, 5.3985999999998924e-05, 5.443100000000062e-05, 5.462500000000259e-05, 5.429099999999798e-05, 5.409699999999948e-05, 5.431900000000059e-05, 5.380499999999705e-05, 5.398600000000239e-05, 5.381900000000009e-05, 5.3999999999998494e-05, 5.381900000000009e-05, 5.3971999999999354e-05, 5.4499999999998994e-05, 5.430600000000049e-05, 5.381999999999956e-05, 5.413899999999819e-05, 5.404200000000067e-05, 5.430600000000049e-05, 5.409800000000242e-05, 5.4194000000000464e-05, 5.430500000000102e-05, 5.431900000000059e-05, 5.4471999999999854e-05, 5.41670000000008e-05, 5.381900000000009e-05, 5.455600000000074e-05, 5.3999999999998494e-05, 5.3888000000001934e-05, 5.462499999999912e-05, 5.376400000000128e-05, 5.45549999999978e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.219" endtime="20201112 12:27:16.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.214" endtime="20201112 12:27:16.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.224" endtime="20201112 12:27:16.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.228" endtime="20201112 12:27:16.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.226" endtime="20201112 12:27:16.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.222" endtime="20201112 12:27:16.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.853" endtime="20201112 12:27:16.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.853" endtime="20201112 12:27:16.249"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.257" endtime="20201112 12:27:16.275"></status>
</kw>
<msg timestamp="20201112 12:27:16.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.256" endtime="20201112 12:27:16.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.277" endtime="20201112 12:27:16.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.279" endtime="20201112 12:27:16.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.253" endtime="20201112 12:27:16.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.251" endtime="20201112 12:27:16.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.289" endtime="20201112 12:27:16.576"></status>
</kw>
<msg timestamp="20201112 12:27:16.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022950292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023006097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.287" endtime="20201112 12:27:16.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022950292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023006097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.580" endtime="20201112 12:27:16.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.588" endtime="20201112 12:27:16.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.284" endtime="20201112 12:27:16.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.283" endtime="20201112 12:27:16.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.596" level="INFO">${RESULT} = [{'time': 0.023006097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.580499999999905e-05, 'source_diff': 5.580499999999905e-05}, {'time': 0.023072097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:16.592" endtime="20201112 12:27:16.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.610" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:16.597" endtime="20201112 12:27:16.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.614" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.613" endtime="20201112 12:27:16.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.617" level="INFO">VALUE: [5.580499999999905e-05, 5.481900000000109e-05, 5.483300000000066e-05, 5.4972000000000354e-05, 5.5471999999997385e-05, 5.566699999999883e-05, 5.5486000000000424e-05, 5.554099999999923e-05, 5.515299999999876e-05, 5.4985999999999924e-05, 5.513899999999919e-05, 5.498700000000287e-05, 5.54869999999999e-05, 5.50280000000021e-05, 5.5486000000000424e-05, 5.5651999999999785e-05, 5.5486000000000424e-05, 5.5486000000000424e-05, 5.531900000000159e-05, 5.481900000000109e-05, 5.519500000000094e-05, 5.5693999999998495e-05, 5.518100000000137e-05, 5.532000000000106e-05, 5.480599999999752e-05, 5.565300000000273e-05, 5.563899999999969e-05, 5.5179999999998425e-05, 5.483300000000066e-05, 5.531999999999759e-05, 5.481900000000109e-05, 5.4972000000000354e-05, 5.480500000000152e-05, 5.563899999999969e-05, 5.480500000000152e-05, 5.529100000000245e-05, 5.481900000000109e-05, 5.4999999999999494e-05, 5.533299999999769e-05, 5.532000000000106e-05, 5.4985999999999924e-05, 5.566699999999883e-05, 5.515299999999876e-05, 5.482000000000056e-05, 5.566699999999883e-05, 5.54869999999999e-05, 5.565300000000273e-05, 5.484700000000023e-05, 5.5165999999998855e-05, 5.5152000000002754e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.615" endtime="20201112 12:27:16.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.611" endtime="20201112 12:27:16.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.621" endtime="20201112 12:27:16.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.624" endtime="20201112 12:27:16.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.623" endtime="20201112 12:27:16.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.619" endtime="20201112 12:27:16.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.250" endtime="20201112 12:27:16.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.249" endtime="20201112 12:27:16.645"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.654" endtime="20201112 12:27:16.672"></status>
</kw>
<msg timestamp="20201112 12:27:16.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.653" endtime="20201112 12:27:16.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.674" endtime="20201112 12:27:16.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.676" endtime="20201112 12:27:16.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.650" endtime="20201112 12:27:16.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.648" endtime="20201112 12:27:16.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.686" endtime="20201112 12:27:16.974"></status>
</kw>
<msg timestamp="20201112 12:27:16.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023116319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023172417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.684" endtime="20201112 12:27:16.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023116319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023172417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.978" endtime="20201112 12:27:16.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.987" endtime="20201112 12:27:16.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.681" endtime="20201112 12:27:16.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.680" endtime="20201112 12:27:16.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.994" level="INFO">${RESULT} = [{'time': 0.023172417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.609800000000095e-05, 'source_diff': 5.609800000000095e-05}, {'time': 0.023236417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:16.990" endtime="20201112 12:27:16.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.008" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:16.995" endtime="20201112 12:27:17.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.013" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.011" endtime="20201112 12:27:17.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.015" level="INFO">VALUE: [5.609800000000095e-05, 5.6319999999998593e-05, 5.659799999999798e-05, 5.6429999999999675e-05, 5.633299999999869e-05, 5.6471999999998385e-05, 5.633299999999869e-05, 5.6165999999999855e-05, 5.61670000000028e-05, 5.6250000000000744e-05, 5.615299999999976e-05, 5.613900000000019e-05, 5.5957999999998315e-05, 5.66809999999994e-05, 5.5986000000000924e-05, 5.613900000000019e-05, 5.616699999999933e-05, 5.665300000000026e-05, 5.647300000000133e-05, 5.615299999999976e-05, 5.59870000000004e-05, 5.5986000000000924e-05, 5.5986000000000924e-05, 5.6152000000000285e-05, 5.580499999999905e-05, 5.6471999999998385e-05, 5.615299999999976e-05, 5.581899999999862e-05, 5.665300000000026e-05, 5.581899999999862e-05, 5.61670000000028e-05, 5.644499999999872e-05, 5.6319999999998593e-05, 5.663900000000069e-05, 5.61670000000028e-05, 5.580600000000199e-05, 5.657000000000231e-05, 5.633299999999869e-05, 5.583300000000166e-05, 5.6152000000000285e-05, 5.5763999999999814e-05, 5.615299999999976e-05, 5.583300000000166e-05, 5.669499999999897e-05, 5.665300000000026e-05, 5.633300000000216e-05, 5.6500000000000994e-05, 5.6014000000000064e-05, 5.632000000000206e-05, 5.6721999999998635e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.014" endtime="20201112 12:27:17.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.009" endtime="20201112 12:27:17.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.019" endtime="20201112 12:27:17.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.022" endtime="20201112 12:27:17.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.021" endtime="20201112 12:27:17.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.017" endtime="20201112 12:27:17.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.646" endtime="20201112 12:27:17.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.645" endtime="20201112 12:27:17.043"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.052" endtime="20201112 12:27:17.070"></status>
</kw>
<msg timestamp="20201112 12:27:17.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.051" endtime="20201112 12:27:17.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.072" endtime="20201112 12:27:17.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.074" endtime="20201112 12:27:17.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.048" endtime="20201112 12:27:17.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.046" endtime="20201112 12:27:17.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.084" endtime="20201112 12:27:17.372"></status>
</kw>
<msg timestamp="20201112 12:27:17.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023143986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023201014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.082" endtime="20201112 12:27:17.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023143986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023201014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.376" endtime="20201112 12:27:17.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.385" endtime="20201112 12:27:17.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.079" endtime="20201112 12:27:17.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.077" endtime="20201112 12:27:17.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.392" level="INFO">${RESULT} = [{'time': 0.023201014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7028000000000634e-05, 'source_diff': 5.7028000000000634e-05}, {'time': 0.023263014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:17.388" endtime="20201112 12:27:17.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.406" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:17.393" endtime="20201112 12:27:17.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.411" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.410" endtime="20201112 12:27:17.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.413" level="INFO">VALUE: [5.7028000000000634e-05, 5.759699999999951e-05, 5.683400000000213e-05, 5.716700000000033e-05, 5.765300000000126e-05, 5.691700000000008e-05, 5.6778000000000384e-05, 5.715300000000076e-05, 5.731900000000012e-05, 5.7651999999998316e-05, 5.7652000000001785e-05, 5.6971999999998885e-05, 5.7485999999998955e-05, 5.765300000000126e-05, 5.7485999999998955e-05, 5.681899999999962e-05, 5.7485999999998955e-05, 5.763899999999822e-05, 5.7499999999998525e-05, 5.6985999999998455e-05, 5.713899999999772e-05, 5.734699999999926e-05, 5.715300000000076e-05, 5.762499999999865e-05, 5.681899999999962e-05, 5.7152000000001285e-05, 5.7151999999997816e-05, 5.7651999999998316e-05, 5.733299999999969e-05, 5.680500000000005e-05, 5.765299999999779e-05, 5.7042000000000204e-05, 5.7319999999999593e-05, 5.755499999999733e-05, 5.716700000000033e-05, 5.716700000000033e-05, 5.6819999999999093e-05, 5.6819999999999093e-05, 5.695899999999879e-05, 5.730500000000055e-05, 5.7651999999998316e-05, 5.731900000000012e-05, 5.731900000000012e-05, 5.681899999999962e-05, 5.715300000000076e-05, 5.7485999999998955e-05, 5.765300000000126e-05, 5.691700000000008e-05, 5.7485999999998955e-05, 5.763899999999822e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.412" endtime="20201112 12:27:17.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.407" endtime="20201112 12:27:17.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.442" endtime="20201112 12:27:17.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.446" endtime="20201112 12:27:17.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.444" endtime="20201112 12:27:17.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.441" endtime="20201112 12:27:17.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.044" endtime="20201112 12:27:17.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.044" endtime="20201112 12:27:17.467"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.476" endtime="20201112 12:27:17.493"></status>
</kw>
<msg timestamp="20201112 12:27:17.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.474" endtime="20201112 12:27:17.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.495" endtime="20201112 12:27:17.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.497" endtime="20201112 12:27:17.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.472" endtime="20201112 12:27:17.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.469" endtime="20201112 12:27:17.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.507" endtime="20201112 12:27:17.793"></status>
</kw>
<msg timestamp="20201112 12:27:17.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022769347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.505" endtime="20201112 12:27:17.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022769347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.797" endtime="20201112 12:27:17.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.806" endtime="20201112 12:27:17.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.503" endtime="20201112 12:27:17.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.501" endtime="20201112 12:27:17.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.813" level="INFO">${RESULT} = [{'time': 0.022769347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.78749999999989e-05, 'source_diff': 5.78749999999989e-05}, {'time': 0.022834333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:17.810" endtime="20201112 12:27:17.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.827" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:17.814" endtime="20201112 12:27:17.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.832" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.831" endtime="20201112 12:27:17.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.835" level="INFO">VALUE: [5.78749999999989e-05, 5.830499999999808e-05, 5.784699999999976e-05, 5.813899999999872e-05, 5.781900000000062e-05, 5.8264000000002314e-05, 5.831900000000112e-05, 5.854100000000223e-05, 5.8500000000002994e-05, 5.7985999999999455e-05, 5.8014000000002064e-05, 5.844500000000072e-05, 5.847300000000333e-05, 5.7820000000000094e-05, 5.780499999999758e-05, 5.784699999999976e-05, 5.783300000000019e-05, 5.780499999999758e-05, 5.781900000000062e-05, 5.8472000000000385e-05, 5.783300000000019e-05, 5.780500000000105e-05, 5.815300000000176e-05, 5.784699999999976e-05, 5.7971999999999885e-05, 5.865299999999879e-05, 5.8485999999999955e-05, 5.834700000000026e-05, 5.7820000000000094e-05, 5.8306000000001024e-05, 5.8485999999999955e-05, 5.8665999999998886e-05, 5.831900000000112e-05, 5.815299999999829e-05, 5.8499999999999525e-05, 5.8513999999999095e-05, 5.8000000000002494e-05, 5.811100000000305e-05, 5.8042000000001204e-05, 5.7806000000000524e-05, 5.816700000000133e-05, 5.8306000000001024e-05, 5.7985999999999455e-05, 5.8320000000000594e-05, 5.784699999999976e-05, 5.783300000000019e-05, 5.7971999999999885e-05, 5.8180000000001425e-05, 5.7944000000000745e-05, 5.8485999999999955e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.833" endtime="20201112 12:27:17.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.828" endtime="20201112 12:27:17.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.838" endtime="20201112 12:27:17.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.842" endtime="20201112 12:27:17.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.840" endtime="20201112 12:27:17.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.837" endtime="20201112 12:27:17.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.468" endtime="20201112 12:27:17.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.467" endtime="20201112 12:27:17.863"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.872" endtime="20201112 12:27:17.889"></status>
</kw>
<msg timestamp="20201112 12:27:17.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.870" endtime="20201112 12:27:17.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.891" endtime="20201112 12:27:17.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.893" endtime="20201112 12:27:17.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.867" endtime="20201112 12:27:17.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.865" endtime="20201112 12:27:17.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.903" endtime="20201112 12:27:18.191"></status>
</kw>
<msg timestamp="20201112 12:27:18.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022799833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022859028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.901" endtime="20201112 12:27:18.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022799833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022859028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.195" endtime="20201112 12:27:18.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.204" endtime="20201112 12:27:18.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.898" endtime="20201112 12:27:18.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.897" endtime="20201112 12:27:18.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.211" level="INFO">${RESULT} = [{'time': 0.022859028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.919500000000147e-05, 'source_diff': 5.919500000000147e-05}, {'time': 0.022924028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:18.207" endtime="20201112 12:27:18.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.225" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:18.212" endtime="20201112 12:27:18.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.229" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.228" endtime="20201112 12:27:18.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.232" level="INFO">VALUE: [5.919500000000147e-05, 5.913899999999972e-05, 5.947300000000086e-05, 5.9151999999999816e-05, 5.9679999999999456e-05, 5.931900000000212e-05, 5.9165999999999386e-05, 5.9151999999999816e-05, 5.8958000000001315e-05, 5.8986000000000455e-05, 5.930500000000255e-05, 5.966699999999936e-05, 5.956900000000237e-05, 5.881900000000162e-05, 5.9305999999998554e-05, 5.8820000000001094e-05, 5.8985999999996985e-05, 5.934700000000126e-05, 5.8791999999998484e-05, 5.933300000000169e-05, 5.913899999999972e-05, 5.9527999999999665e-05, 5.913899999999972e-05, 5.8986000000000455e-05, 5.9486000000000955e-05, 5.880500000000205e-05, 5.966699999999936e-05, 5.881899999999815e-05, 5.905499999999883e-05, 5.955499999999933e-05, 5.9305999999998554e-05, 5.916699999999886e-05, 5.8972000000000885e-05, 5.884700000000076e-05, 5.9333999999997694e-05, 5.9306000000002024e-05, 5.8820000000001094e-05, 5.9665999999999886e-05, 5.963900000000022e-05, 5.9151999999999816e-05, 5.881900000000162e-05, 5.931900000000212e-05, 5.933299999999822e-05, 5.8806000000001524e-05, 5.9263999999999845e-05, 5.9334000000001164e-05, 5.965299999999979e-05, 5.886100000000033e-05, 5.913899999999972e-05, 5.8986000000000455e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.231" endtime="20201112 12:27:18.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.226" endtime="20201112 12:27:18.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.236" endtime="20201112 12:27:18.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.239" endtime="20201112 12:27:18.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.238" endtime="20201112 12:27:18.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.234" endtime="20201112 12:27:18.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.864" endtime="20201112 12:27:18.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.863" endtime="20201112 12:27:18.260"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.269" endtime="20201112 12:27:18.287"></status>
</kw>
<msg timestamp="20201112 12:27:18.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.268" endtime="20201112 12:27:18.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.289" endtime="20201112 12:27:18.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.291" endtime="20201112 12:27:18.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.265" endtime="20201112 12:27:18.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.263" endtime="20201112 12:27:18.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.301" endtime="20201112 12:27:18.589"></status>
</kw>
<msg timestamp="20201112 12:27:18.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022884056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.299" endtime="20201112 12:27:18.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022884056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.593" endtime="20201112 12:27:18.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.602" endtime="20201112 12:27:18.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.296" endtime="20201112 12:27:18.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.294" endtime="20201112 12:27:18.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.609" level="INFO">${RESULT} = [{'time': 0.022943958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9902000000000566e-05, 'source_diff': 5.9902000000000566e-05}, {'time': 0.023017931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:18.605" endtime="20201112 12:27:18.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.623" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:18.610" endtime="20201112 12:27:18.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.628" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.627" endtime="20201112 12:27:18.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.630" level="INFO">VALUE: [5.9902000000000566e-05, 6.0333999999998694e-05, 6.0000000000001025e-05, 6.065300000000079e-05, 6.0193999999999526e-05, 6.030500000000008e-05, 6.0472000000002385e-05, 5.983299999999872e-05, 6.030500000000008e-05, 6.016699999999986e-05, 6.066700000000036e-05, 5.9764000000000345e-05, 6.015300000000029e-05, 6.0305999999999554e-05, 6.0221999999998665e-05, 6.043100000000315e-05, 5.990300000000004e-05, 6.0485999999998485e-05, 6.065300000000079e-05, 6.047300000000186e-05, 5.9999999999997555e-05, 6.030500000000008e-05, 6.0152000000000816e-05, 5.981899999999915e-05, 5.979100000000001e-05, 6.031899999999965e-05, 6.0471999999998916e-05, 5.991699999999961e-05, 6.0000000000001025e-05, 6.065300000000079e-05, 6.063899999999775e-05, 6.045900000000229e-05, 5.9999999999997555e-05, 5.998700000000093e-05, 5.9820000000002094e-05, 6.0152000000000816e-05, 6.0694000000000026e-05, 5.981899999999915e-05, 6.063900000000122e-05, 6.065300000000079e-05, 6.033299999999922e-05, 5.9971999999998415e-05, 6.0000000000001025e-05, 6.036099999999836e-05, 6.0471999999998916e-05, 6.0305999999999554e-05, 6.015300000000029e-05, 6.0485999999998485e-05, 5.997299999999789e-05, 5.997300000000136e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.629" endtime="20201112 12:27:18.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.624" endtime="20201112 12:27:18.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.634" endtime="20201112 12:27:18.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.638" endtime="20201112 12:27:18.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.636" endtime="20201112 12:27:18.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.632" endtime="20201112 12:27:18.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.261" endtime="20201112 12:27:18.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.261" endtime="20201112 12:27:18.659"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.667" endtime="20201112 12:27:18.685"></status>
</kw>
<msg timestamp="20201112 12:27:18.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.666" endtime="20201112 12:27:18.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.687" endtime="20201112 12:27:18.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.689" endtime="20201112 12:27:18.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.663" endtime="20201112 12:27:18.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.661" endtime="20201112 12:27:18.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.699" endtime="20201112 12:27:18.986"></status>
</kw>
<msg timestamp="20201112 12:27:18.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023055958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.697" endtime="20201112 12:27:18.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023055958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.991" endtime="20201112 12:27:18.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.999" endtime="20201112 12:27:19.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.694" endtime="20201112 12:27:19.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.693" endtime="20201112 12:27:19.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.006" level="INFO">${RESULT} = [{'time': 0.023055958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.152700000000219e-05, 'source_diff': 6.152700000000219e-05}, {'time': 0.023123944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:19.003" endtime="20201112 12:27:19.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.021" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:19.007" endtime="20201112 12:27:19.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.025" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.024" endtime="20201112 12:27:19.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.028" level="INFO">VALUE: [6.152700000000219e-05, 6.0985999999998985e-05, 6.113899999999825e-05, 6.147199999999992e-05, 6.131899999999718e-05, 6.080500000000058e-05, 6.130500000000108e-05, 6.1013999999998125e-05, 6.115300000000129e-05, 6.163900000000222e-05, 6.1014000000001595e-05, 6.116700000000086e-05, 6.148599999999949e-05, 6.0806000000000054e-05, 6.0806000000000054e-05, 6.163799999999928e-05, 6.148599999999949e-05, 6.115200000000182e-05, 6.081900000000015e-05, 6.080500000000058e-05, 6.113899999999825e-05, 6.111100000000258e-05, 6.084699999999929e-05, 6.131900000000065e-05, 6.115300000000129e-05, 6.148599999999949e-05, 6.13339999999997e-05, 6.113899999999825e-05, 6.113900000000172e-05, 6.108399999999944e-05, 6.1000000000002025e-05, 6.1000000000002025e-05, 6.165200000000232e-05, 6.148599999999949e-05, 6.131900000000065e-05, 6.148599999999949e-05, 6.0778000000000915e-05, 6.091700000000061e-05, 6.118100000000043e-05, 6.163899999999875e-05, 6.148599999999949e-05, 6.118099999999696e-05, 6.148599999999949e-05, 6.166699999999789e-05, 6.162499999999918e-05, 6.148699999999896e-05, 6.131900000000065e-05, 6.148600000000295e-05, 6.166600000000189e-05, 6.081900000000015e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.026" endtime="20201112 12:27:19.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.021" endtime="20201112 12:27:19.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.031" endtime="20201112 12:27:19.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.035" endtime="20201112 12:27:19.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.033" endtime="20201112 12:27:19.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.030" endtime="20201112 12:27:19.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.660" endtime="20201112 12:27:19.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.659" endtime="20201112 12:27:19.056"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.065" endtime="20201112 12:27:19.083"></status>
</kw>
<msg timestamp="20201112 12:27:19.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.063" endtime="20201112 12:27:19.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.084" endtime="20201112 12:27:19.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.087" endtime="20201112 12:27:19.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.061" endtime="20201112 12:27:19.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.058" endtime="20201112 12:27:19.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.096" endtime="20201112 12:27:19.383"></status>
</kw>
<msg timestamp="20201112 12:27:19.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.095" endtime="20201112 12:27:19.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.387" endtime="20201112 12:27:19.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.396" endtime="20201112 12:27:19.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.092" endtime="20201112 12:27:19.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.090" endtime="20201112 12:27:19.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.403" level="INFO">${RESULT} = [{'time': 0.022651306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194500000000075e-05, 'source_diff': 6.194500000000075e-05}, {'time': 0.022718306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:19.399" endtime="20201112 12:27:19.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.418" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:19.405" endtime="20201112 12:27:19.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.422" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.421" endtime="20201112 12:27:19.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.425" level="INFO">VALUE: [6.194500000000075e-05, 6.266699999999889e-05, 6.213899999999925e-05, 6.180499999999811e-05, 6.269400000000203e-05, 6.265199999999985e-05, 6.215199999999935e-05, 6.266700000000236e-05, 6.181899999999768e-05, 6.215299999999882e-05, 6.198599999999999e-05, 6.247199999999745e-05, 6.268100000000193e-05, 6.250000000000006e-05, 6.250000000000006e-05, 6.250000000000006e-05, 6.23340000000007e-05, 6.180600000000105e-05, 6.266599999999942e-05, 6.209700000000054e-05, 6.17499999999993e-05, 6.181899999999768e-05, 6.197200000000042e-05, 6.265299999999932e-05, 6.230499999999861e-05, 6.248600000000049e-05, 6.215299999999882e-05, 6.266700000000236e-05, 6.263899999999975e-05, 6.22499999999998e-05, 6.230600000000155e-05, 6.187499999999943e-05, 6.263899999999975e-05, 6.265300000000279e-05, 6.215199999999935e-05, 6.233300000000122e-05, 6.198599999999999e-05, 6.198599999999999e-05, 6.215299999999882e-05, 6.233300000000122e-05, 6.263899999999975e-05, 6.233300000000122e-05, 6.18340000000002e-05, 6.197199999999695e-05, 6.180599999999759e-05, 6.201399999999913e-05, 6.231999999999766e-05, 6.265299999999932e-05, 6.177799999999845e-05, 6.215199999999935e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.424" endtime="20201112 12:27:19.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.419" endtime="20201112 12:27:19.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.429" endtime="20201112 12:27:19.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.432" endtime="20201112 12:27:19.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.431" endtime="20201112 12:27:19.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.427" endtime="20201112 12:27:19.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.057" endtime="20201112 12:27:19.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.056" endtime="20201112 12:27:19.453"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.462" endtime="20201112 12:27:19.480"></status>
</kw>
<msg timestamp="20201112 12:27:19.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.461" endtime="20201112 12:27:19.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.481" endtime="20201112 12:27:19.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.484" endtime="20201112 12:27:19.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.458" endtime="20201112 12:27:19.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.456" endtime="20201112 12:27:19.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.494" endtime="20201112 12:27:19.780"></status>
</kw>
<msg timestamp="20201112 12:27:19.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022664486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.492" endtime="20201112 12:27:19.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022664486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.784" endtime="20201112 12:27:19.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.793" endtime="20201112 12:27:19.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.489" endtime="20201112 12:27:19.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.487" endtime="20201112 12:27:19.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.800" level="INFO">${RESULT} = [{'time': 0.022727333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.284699999999782e-05, 'source_diff': 6.284699999999782e-05}, {'time': 0.022804333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:19.796" endtime="20201112 12:27:19.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.814" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:19.801" endtime="20201112 12:27:19.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.819" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.818" endtime="20201112 12:27:19.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.821" level="INFO">VALUE: [6.284699999999782e-05, 6.365200000000085e-05, 6.295799999999838e-05, 6.281899999999868e-05, 6.315299999999982e-05, 6.349999999999759e-05, 6.348600000000149e-05, 6.363900000000075e-05, 6.366699999999989e-05, 6.298599999999752e-05, 6.313900000000025e-05, 6.365300000000032e-05, 6.313900000000025e-05, 6.298700000000046e-05, 6.316599999999992e-05, 6.279100000000301e-05, 6.350000000000106e-05, 6.316699999999939e-05, 6.298600000000099e-05, 6.281900000000215e-05, 6.32089999999981e-05, 6.281900000000215e-05, 6.318099999999896e-05, 6.363899999999728e-05, 6.358400000000194e-05, 6.331999999999866e-05, 6.333399999999823e-05, 6.315299999999982e-05, 6.365300000000032e-05, 6.316599999999992e-05, 6.283299999999825e-05, 6.283299999999825e-05, 6.312500000000068e-05, 6.283300000000172e-05, 6.330499999999961e-05, 6.363900000000075e-05, 6.348599999999802e-05, 6.277799999999945e-05, 6.33340000000017e-05, 6.312500000000068e-05, 6.365299999999685e-05, 6.313900000000025e-05, 6.331899999999918e-05, 6.316599999999992e-05, 6.330499999999961e-05, 6.362500000000118e-05, 6.330499999999961e-05, 6.283300000000172e-05, 6.313900000000025e-05, 6.281899999999868e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.820" endtime="20201112 12:27:19.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.815" endtime="20201112 12:27:19.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.825" endtime="20201112 12:27:19.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.829" endtime="20201112 12:27:19.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.827" endtime="20201112 12:27:19.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.823" endtime="20201112 12:27:19.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.454" endtime="20201112 12:27:19.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.454" endtime="20201112 12:27:19.850"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.858" endtime="20201112 12:27:19.876"></status>
</kw>
<msg timestamp="20201112 12:27:19.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.857" endtime="20201112 12:27:19.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.877" endtime="20201112 12:27:19.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.880" endtime="20201112 12:27:19.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.854" endtime="20201112 12:27:19.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.852" endtime="20201112 12:27:19.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.890" endtime="20201112 12:27:20.176"></status>
</kw>
<msg timestamp="20201112 12:27:20.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.888" endtime="20201112 12:27:20.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.180" endtime="20201112 12:27:20.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.189" endtime="20201112 12:27:20.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.885" endtime="20201112 12:27:20.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.883" endtime="20201112 12:27:20.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.196" level="INFO">${RESULT} = [{'time': 0.022697667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.436100000000236e-05, 'source_diff': 6.436100000000236e-05}, {'time': 0.022775667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:20.193" endtime="20201112 12:27:20.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.210" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:20.197" endtime="20201112 12:27:20.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.215" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.214" endtime="20201112 12:27:20.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.217" level="INFO">VALUE: [6.436100000000236e-05, 6.415300000000082e-05, 6.431999999999966e-05, 6.447200000000292e-05, 6.448599999999902e-05, 6.431900000000018e-05, 6.416600000000092e-05, 6.415300000000082e-05, 6.463900000000175e-05, 6.448600000000249e-05, 6.380599999999959e-05, 6.415300000000082e-05, 6.398600000000199e-05, 6.380600000000305e-05, 6.465299999999785e-05, 6.430600000000009e-05, 6.383399999999873e-05, 6.450000000000206e-05, 6.380599999999959e-05, 6.431900000000018e-05, 6.381899999999968e-05, 6.430500000000061e-05, 6.398599999999852e-05, 6.436099999999889e-05, 6.431900000000018e-05, 6.466700000000089e-05, 6.413900000000125e-05, 6.415299999999735e-05, 6.430600000000009e-05, 6.413900000000125e-05, 6.465300000000132e-05, 6.431999999999966e-05, 6.40280000000007e-05, 6.413800000000178e-05, 6.415200000000135e-05, 6.404200000000027e-05, 6.387500000000143e-05, 6.380500000000011e-05, 6.383299999999925e-05, 6.431900000000018e-05, 6.437500000000193e-05, 6.465300000000132e-05, 6.418099999999996e-05, 6.415300000000082e-05, 6.431999999999966e-05, 6.415300000000082e-05, 6.431999999999966e-05, 6.380599999999959e-05, 6.461099999999914e-05, 6.397200000000242e-05]</msg>
<status status="PASS" starttime="20201112 12:27:20.216" endtime="20201112 12:27:20.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.211" endtime="20201112 12:27:20.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.221" endtime="20201112 12:27:20.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.225" endtime="20201112 12:27:20.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.223" endtime="20201112 12:27:20.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.219" endtime="20201112 12:27:20.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.850" endtime="20201112 12:27:20.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.850" endtime="20201112 12:27:20.245"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.254" endtime="20201112 12:27:20.272"></status>
</kw>
<msg timestamp="20201112 12:27:20.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.253" endtime="20201112 12:27:20.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.274" endtime="20201112 12:27:20.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.276" endtime="20201112 12:27:20.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.250" endtime="20201112 12:27:20.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.248" endtime="20201112 12:27:20.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.286" endtime="20201112 12:27:20.572"></status>
</kw>
<msg timestamp="20201112 12:27:20.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022974736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023040444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.284" endtime="20201112 12:27:20.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022974736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023040444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.576" endtime="20201112 12:27:20.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.585" endtime="20201112 12:27:20.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.281" endtime="20201112 12:27:20.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.280" endtime="20201112 12:27:20.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.592" level="INFO">${RESULT} = [{'time': 0.023040444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.570800000000113e-05, 'source_diff': 6.570800000000113e-05}, {'time': 0.023119444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:20.588" endtime="20201112 12:27:20.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.606" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:20.593" endtime="20201112 12:27:20.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.610" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.609" endtime="20201112 12:27:20.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.613" level="INFO">VALUE: [6.570800000000113e-05, 6.531899999999771e-05, 6.515300000000182e-05, 6.474999999999884e-05, 6.498599999999952e-05, 6.516700000000139e-05, 6.548600000000002e-05, 6.480600000000059e-05, 6.559700000000057e-05, 6.482000000000016e-05, 6.565299999999885e-05, 6.531999999999719e-05, 6.547299999999992e-05, 6.563899999999928e-05, 6.504200000000127e-05, 6.481899999999721e-05, 6.513799999999931e-05, 6.545800000000088e-05, 6.530499999999814e-05, 6.493000000000124e-05, 6.498599999999952e-05, 6.563900000000275e-05, 6.566699999999842e-05, 6.482000000000016e-05, 6.482000000000016e-05, 6.513899999999878e-05, 6.515299999999835e-05, 6.515299999999835e-05, 6.484699999999982e-05, 6.497199999999995e-05, 6.500000000000256e-05, 6.529100000000204e-05, 6.563899999999928e-05, 6.481900000000068e-05, 6.563899999999928e-05, 6.563899999999928e-05, 6.565299999999885e-05, 6.497199999999995e-05, 6.569500000000103e-05, 6.566699999999842e-05, 6.498599999999952e-05, 6.532000000000066e-05, 6.563900000000275e-05, 6.547299999999992e-05, 6.483300000000025e-05, 6.527700000000247e-05, 6.47769999999985e-05, 6.531900000000118e-05, 6.563900000000275e-05, 6.548600000000002e-05]</msg>
<status status="PASS" starttime="20201112 12:27:20.611" endtime="20201112 12:27:20.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.607" endtime="20201112 12:27:20.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.617" endtime="20201112 12:27:20.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.620" endtime="20201112 12:27:20.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.619" endtime="20201112 12:27:20.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.615" endtime="20201112 12:27:20.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.246" endtime="20201112 12:27:20.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.246" endtime="20201112 12:27:20.641"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.650" endtime="20201112 12:27:20.668"></status>
</kw>
<msg timestamp="20201112 12:27:20.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.648" endtime="20201112 12:27:20.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.670" endtime="20201112 12:27:20.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.673" endtime="20201112 12:27:20.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.646" endtime="20201112 12:27:20.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.644" endtime="20201112 12:27:20.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.682" endtime="20201112 12:27:20.969"></status>
</kw>
<msg timestamp="20201112 12:27:20.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023155931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023221819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.680" endtime="20201112 12:27:20.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023155931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023221819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.973" endtime="20201112 12:27:20.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.982" endtime="20201112 12:27:20.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.678" endtime="20201112 12:27:20.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.676" endtime="20201112 12:27:20.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.988" level="INFO">${RESULT} = [{'time': 0.023221819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.588800000000006e-05, 'source_diff': 6.588800000000006e-05}, {'time': 0.023294806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:20.985" endtime="20201112 12:27:20.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.003" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:20.990" endtime="20201112 12:27:21.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.007" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.006" endtime="20201112 12:27:21.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.010" level="INFO">VALUE: [6.588800000000006e-05, 6.598699999999999e-05, 6.647200000000145e-05, 6.631900000000218e-05, 6.648600000000102e-05, 6.615299999999935e-05, 6.593000000000224e-05, 6.662499999999724e-05, 6.598600000000052e-05, 6.580599999999812e-05, 6.615299999999935e-05, 6.580599999999812e-05, 6.662500000000071e-05, 6.597300000000042e-05, 6.650000000000059e-05, 6.649999999999712e-05, 6.658400000000148e-05, 6.645800000000188e-05, 6.652799999999973e-05, 6.650000000000059e-05, 6.598600000000052e-05, 6.648600000000102e-05, 6.601399999999966e-05, 6.633299999999828e-05, 6.665299999999985e-05, 6.615299999999935e-05, 6.632000000000166e-05, 6.647200000000145e-05, 6.659799999999758e-05, 6.613899999999978e-05, 6.597300000000042e-05, 6.597200000000095e-05, 6.613800000000031e-05, 6.631899999999871e-05, 6.631900000000218e-05, 6.600000000000009e-05, 6.583299999999778e-05, 6.582000000000116e-05, 6.627799999999948e-05, 6.644499999999831e-05, 6.648600000000102e-05, 6.663900000000028e-05, 6.631999999999819e-05, 6.665299999999985e-05, 6.659800000000105e-05, 6.592999999999877e-05, 6.650000000000059e-05, 6.613900000000325e-05, 6.636099999999742e-05, 6.586100000000039e-05]</msg>
<status status="PASS" starttime="20201112 12:27:21.008" endtime="20201112 12:27:21.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.004" endtime="20201112 12:27:21.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.014" endtime="20201112 12:27:21.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.017" endtime="20201112 12:27:21.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.016" endtime="20201112 12:27:21.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.012" endtime="20201112 12:27:21.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.642" endtime="20201112 12:27:21.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.641" endtime="20201112 12:27:21.038"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.047" endtime="20201112 12:27:21.065"></status>
</kw>
<msg timestamp="20201112 12:27:21.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.045" endtime="20201112 12:27:21.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.066" endtime="20201112 12:27:21.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.069" endtime="20201112 12:27:21.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.043" endtime="20201112 12:27:21.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.041" endtime="20201112 12:27:21.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.078" endtime="20201112 12:27:21.365"></status>
</kw>
<msg timestamp="20201112 12:27:21.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023001681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.077" endtime="20201112 12:27:21.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023001681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.370" endtime="20201112 12:27:21.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.378" endtime="20201112 12:27:21.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.074" endtime="20201112 12:27:21.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.072" endtime="20201112 12:27:21.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.385" level="INFO">${RESULT} = [{'time': 0.023068528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.684700000000182e-05, 'source_diff': 6.684700000000182e-05}, {'time': 0.023140542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:21.382" endtime="20201112 12:27:21.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.399" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:21.386" endtime="20201112 12:27:21.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.404" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.403" endtime="20201112 12:27:21.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.407" level="INFO">VALUE: [6.684700000000182e-05, 6.763900000000128e-05, 6.731999999999919e-05, 6.730500000000014e-05, 6.683299999999878e-05, 6.765199999999791e-05, 6.713900000000078e-05, 6.763899999999781e-05, 6.695799999999891e-05, 6.748600000000202e-05, 6.713899999999731e-05, 6.745799999999941e-05, 6.718099999999949e-05, 6.745800000000288e-05, 6.762499999999824e-05, 6.765300000000085e-05, 6.680600000000259e-05, 6.700000000000109e-05, 6.766600000000095e-05, 6.698599999999805e-05, 6.730500000000014e-05, 6.687500000000096e-05, 6.731899999999971e-05, 6.683299999999878e-05, 6.765300000000085e-05, 6.748599999999855e-05, 6.763900000000128e-05, 6.679199999999955e-05, 6.765299999999738e-05, 6.698599999999805e-05, 6.731999999999919e-05, 6.748699999999802e-05, 6.747199999999898e-05, 6.748600000000202e-05, 6.731899999999971e-05, 6.748599999999855e-05, 6.730500000000014e-05, 6.729200000000005e-05, 6.691700000000314e-05, 6.733299999999928e-05, 6.765299999999738e-05, 6.713900000000078e-05, 6.765299999999738e-05, 6.743099999999974e-05, 6.744499999999931e-05, 6.733299999999928e-05, 6.731899999999971e-05, 6.683300000000225e-05, 6.683299999999878e-05, 6.766600000000095e-05]</msg>
<status status="PASS" starttime="20201112 12:27:21.405" endtime="20201112 12:27:21.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.400" endtime="20201112 12:27:21.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.410" endtime="20201112 12:27:21.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.414" endtime="20201112 12:27:21.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.412" endtime="20201112 12:27:21.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.409" endtime="20201112 12:27:21.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.039" endtime="20201112 12:27:21.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.038" endtime="20201112 12:27:21.435"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.444" endtime="20201112 12:27:21.462"></status>
</kw>
<msg timestamp="20201112 12:27:21.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.442" endtime="20201112 12:27:21.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.463" endtime="20201112 12:27:21.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.466" endtime="20201112 12:27:21.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.440" endtime="20201112 12:27:21.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.437" endtime="20201112 12:27:21.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.475" endtime="20201112 12:27:21.763"></status>
</kw>
<msg timestamp="20201112 12:27:21.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022771361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.474" endtime="20201112 12:27:21.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022771361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.767" endtime="20201112 12:27:21.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.776" endtime="20201112 12:27:21.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.471" endtime="20201112 12:27:21.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.469" endtime="20201112 12:27:21.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.783" level="INFO">${RESULT} = [{'time': 0.022840042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.868100000000099e-05, 'source_diff': 6.868100000000099e-05}, {'time': 0.022916069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:21.780" endtime="20201112 12:27:21.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.797" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:21.784" endtime="20201112 12:27:21.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.802" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.801" endtime="20201112 12:27:21.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.804" level="INFO">VALUE: [6.868100000000099e-05, 6.844400000000084e-05, 6.865299999999838e-05, 6.798600000000252e-05, 6.851399999999869e-05, 6.815200000000188e-05, 6.847199999999998e-05, 6.784699999999935e-05, 6.847199999999998e-05, 6.797199999999948e-05, 6.819500000000006e-05, 6.780600000000012e-05, 6.832000000000019e-05, 6.780600000000012e-05, 6.815300000000135e-05, 6.847300000000292e-05, 6.863799999999934e-05, 6.829100000000157e-05, 6.848599999999955e-05, 6.848599999999955e-05, 6.797200000000295e-05, 6.816700000000092e-05, 6.815299999999788e-05, 6.865300000000185e-05, 6.863899999999881e-05, 6.798599999999905e-05, 6.832000000000019e-05, 6.832000000000019e-05, 6.832000000000019e-05, 6.783299999999978e-05, 6.831900000000071e-05, 6.815199999999841e-05, 6.786100000000239e-05, 6.781900000000021e-05, 6.798599999999905e-05, 6.797199999999948e-05, 6.791700000000067e-05, 6.848599999999955e-05, 6.819500000000006e-05, 6.815300000000135e-05, 6.830600000000062e-05, 6.848599999999955e-05, 6.850000000000259e-05, 6.786099999999892e-05, 6.848599999999955e-05, 6.865199999999891e-05, 6.849999999999912e-05, 6.831900000000071e-05, 6.847199999999998e-05, 6.797200000000295e-05]</msg>
<status status="PASS" starttime="20201112 12:27:21.803" endtime="20201112 12:27:21.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.798" endtime="20201112 12:27:21.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.808" endtime="20201112 12:27:21.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.812" endtime="20201112 12:27:21.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.810" endtime="20201112 12:27:21.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.806" endtime="20201112 12:27:21.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.436" endtime="20201112 12:27:21.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.435" endtime="20201112 12:27:21.832"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.842" endtime="20201112 12:27:21.859"></status>
</kw>
<msg timestamp="20201112 12:27:21.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.840" endtime="20201112 12:27:21.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.860" endtime="20201112 12:27:21.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.863" endtime="20201112 12:27:21.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.837" endtime="20201112 12:27:21.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.835" endtime="20201112 12:27:21.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.872" endtime="20201112 12:27:22.160"></status>
</kw>
<msg timestamp="20201112 12:27:22.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022722208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022791778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.871" endtime="20201112 12:27:22.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022722208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022791778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.164" endtime="20201112 12:27:22.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.173" endtime="20201112 12:27:22.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.868" endtime="20201112 12:27:22.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.866" endtime="20201112 12:27:22.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.181" level="INFO">${RESULT} = [{'time': 0.022791778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.956999999999797e-05, 'source_diff': 6.956999999999797e-05}, {'time': 0.022873792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:22.177" endtime="20201112 12:27:22.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.195" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:22.182" endtime="20201112 12:27:22.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.199" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.198" endtime="20201112 12:27:22.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.202" level="INFO">VALUE: [6.956999999999797e-05, 6.927799999999901e-05, 6.932000000000119e-05, 6.932000000000119e-05, 6.881899999999774e-05, 6.950000000000012e-05, 6.952799999999926e-05, 6.947200000000098e-05, 6.881900000000121e-05, 6.913899999999931e-05, 6.931899999999824e-05, 6.965300000000285e-05, 6.882000000000069e-05, 6.932000000000119e-05, 6.884700000000035e-05, 6.948600000000055e-05, 6.948700000000002e-05, 6.898600000000005e-05, 6.915200000000288e-05, 6.883300000000078e-05, 6.937499999999999e-05, 6.880500000000164e-05, 6.956899999999849e-05, 6.947200000000098e-05, 6.969500000000156e-05, 6.950000000000012e-05, 6.898600000000005e-05, 6.950000000000012e-05, 6.897299999999995e-05, 6.947300000000045e-05, 6.965299999999938e-05, 6.934700000000085e-05, 6.945800000000141e-05, 6.898600000000005e-05, 6.963899999999981e-05, 6.930500000000214e-05, 6.883299999999731e-05, 6.933299999999781e-05, 6.965299999999938e-05, 6.882000000000069e-05, 6.902799999999876e-05, 6.947200000000098e-05, 6.898600000000005e-05, 6.948599999999708e-05, 6.966599999999948e-05, 6.963800000000034e-05, 6.880500000000164e-05, 6.968000000000252e-05, 6.970899999999766e-05, 6.952799999999926e-05]</msg>
<status status="PASS" starttime="20201112 12:27:22.201" endtime="20201112 12:27:22.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.196" endtime="20201112 12:27:22.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.206" endtime="20201112 12:27:22.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.209" endtime="20201112 12:27:22.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.208" endtime="20201112 12:27:22.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.204" endtime="20201112 12:27:22.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.833" endtime="20201112 12:27:22.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.833" endtime="20201112 12:27:22.230"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.239" endtime="20201112 12:27:22.259"></status>
</kw>
<msg timestamp="20201112 12:27:22.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.238" endtime="20201112 12:27:22.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.261" endtime="20201112 12:27:22.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.263" endtime="20201112 12:27:22.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.235" endtime="20201112 12:27:22.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.233" endtime="20201112 12:27:22.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.272" endtime="20201112 12:27:22.560"></status>
</kw>
<msg timestamp="20201112 12:27:22.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.271" endtime="20201112 12:27:22.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.564" endtime="20201112 12:27:22.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.573" endtime="20201112 12:27:22.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.268" endtime="20201112 12:27:22.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.266" endtime="20201112 12:27:22.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.580" level="INFO">${RESULT} = [{'time': 0.022819458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.054100000000035e-05, 'source_diff': 7.054100000000035e-05}, {'time': 0.022900472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:22.576" endtime="20201112 12:27:22.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.594" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:22.581" endtime="20201112 12:27:22.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.598" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.597" endtime="20201112 12:27:22.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.601" level="INFO">VALUE: [7.054100000000035e-05, 6.980500000000264e-05, 7.030499999999967e-05, 7.033300000000228e-05, 7.065300000000038e-05, 7.036100000000142e-05, 7.065300000000038e-05, 7.065300000000038e-05, 7.015299999999988e-05, 6.981999999999822e-05, 6.99169999999992e-05, 6.988900000000006e-05, 7.029099999999663e-05, 7.018000000000302e-05, 7.034700000000185e-05, 6.998600000000105e-05, 7.065300000000038e-05, 7.033299999999881e-05, 7.031899999999924e-05, 7.048599999999808e-05, 7.066699999999995e-05, 7.013900000000031e-05, 7.048600000000155e-05, 6.979199999999908e-05, 7.065300000000038e-05, 7.013900000000031e-05, 6.998600000000105e-05, 7.000000000000062e-05, 7.048600000000155e-05, 6.997200000000148e-05, 7.048599999999808e-05, 7.027800000000001e-05, 7.044399999999937e-05, 6.980599999999865e-05, 7.050000000000112e-05, 7.063900000000081e-05, 7.065300000000038e-05, 6.980600000000212e-05, 6.997299999999748e-05, 7.030599999999915e-05, 7.012499999999727e-05, 6.988900000000006e-05, 6.97909999999996e-05, 6.984700000000135e-05, 7.049999999999765e-05, 6.998600000000105e-05, 7.063900000000081e-05, 7.066699999999995e-05, 7.070799999999919e-05, 6.998600000000105e-05]</msg>
<status status="PASS" starttime="20201112 12:27:22.600" endtime="20201112 12:27:22.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.595" endtime="20201112 12:27:22.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.610" endtime="20201112 12:27:22.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.613" endtime="20201112 12:27:22.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.612" endtime="20201112 12:27:22.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.608" endtime="20201112 12:27:22.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.231" endtime="20201112 12:27:22.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.231" endtime="20201112 12:27:22.634"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.643" endtime="20201112 12:27:22.662"></status>
</kw>
<msg timestamp="20201112 12:27:22.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.642" endtime="20201112 12:27:22.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.663" endtime="20201112 12:27:22.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.666" endtime="20201112 12:27:22.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.639" endtime="20201112 12:27:22.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.637" endtime="20201112 12:27:22.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.675" endtime="20201112 12:27:22.962"></status>
</kw>
<msg timestamp="20201112 12:27:22.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022990347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.674" endtime="20201112 12:27:22.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022990347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.967" endtime="20201112 12:27:22.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.975" endtime="20201112 12:27:22.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.671" endtime="20201112 12:27:22.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.669" endtime="20201112 12:27:22.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.982" level="INFO">${RESULT} = [{'time': 0.023061403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.10559999999999e-05, 'source_diff': 7.10559999999999e-05}, {'time': 0.023147375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:22.979" endtime="20201112 12:27:22.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.996" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:22.983" endtime="20201112 12:27:22.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.001" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.000" endtime="20201112 12:27:23.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.004" level="INFO">VALUE: [7.10559999999999e-05, 7.14170000000007e-05, 7.081999999999922e-05, 7.098599999999858e-05, 7.119400000000012e-05, 7.081999999999922e-05, 7.094500000000281e-05, 7.120799999999969e-05, 7.166599999999801e-05, 7.149999999999865e-05, 7.081899999999974e-05, 7.131900000000024e-05, 7.154199999999736e-05, 7.113899999999784e-05, 7.086100000000192e-05, 7.166700000000095e-05, 7.134799999999886e-05, 7.132000000000319e-05, 7.148599999999908e-05, 7.102800000000076e-05, 7.138899999999809e-05, 7.115300000000088e-05, 7.080500000000017e-05, 7.131900000000024e-05, 7.16109999999992e-05, 7.125000000000187e-05, 7.165299999999791e-05, 7.115299999999741e-05, 7.081899999999974e-05, 7.116700000000045e-05, 7.134799999999886e-05, 7.131999999999972e-05, 7.079199999999661e-05, 7.133400000000276e-05, 7.168000000000105e-05, 7.080500000000017e-05, 7.097199999999901e-05, 7.163900000000181e-05, 7.134699999999938e-05, 7.080500000000017e-05, 7.083299999999931e-05, 7.081899999999974e-05, 7.112499999999827e-05, 7.080599999999965e-05, 7.148600000000255e-05, 7.163900000000181e-05, 7.080599999999965e-05, 7.148699999999855e-05, 7.07360000000018e-05, 7.113799999999837e-05]</msg>
<status status="PASS" starttime="20201112 12:27:23.002" endtime="20201112 12:27:23.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.997" endtime="20201112 12:27:23.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.007" endtime="20201112 12:27:23.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.011" endtime="20201112 12:27:23.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.009" endtime="20201112 12:27:23.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.006" endtime="20201112 12:27:23.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.635" endtime="20201112 12:27:23.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.634" endtime="20201112 12:27:23.032"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.041" endtime="20201112 12:27:23.059"></status>
</kw>
<msg timestamp="20201112 12:27:23.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.039" endtime="20201112 12:27:23.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.061" endtime="20201112 12:27:23.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.063" endtime="20201112 12:27:23.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.037" endtime="20201112 12:27:23.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.034" endtime="20201112 12:27:23.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.073" endtime="20201112 12:27:23.361"></status>
</kw>
<msg timestamp="20201112 12:27:23.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.071" endtime="20201112 12:27:23.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.365" endtime="20201112 12:27:23.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.374" endtime="20201112 12:27:23.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.068" endtime="20201112 12:27:23.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.066" endtime="20201112 12:27:23.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.380" level="INFO">${RESULT} = [{'time': 0.022794431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.269500000000109e-05, 'source_diff': 7.269500000000109e-05}, {'time': 0.022881444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:23.377" endtime="20201112 12:27:23.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.394" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:23.381" endtime="20201112 12:27:23.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.399" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.398" endtime="20201112 12:27:23.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.402" level="INFO">VALUE: [7.269500000000109e-05, 7.265199999999944e-05, 7.265199999999944e-05, 7.248600000000008e-05, 7.249999999999965e-05, 7.199999999999915e-05, 7.233300000000081e-05, 7.231900000000124e-05, 7.198599999999958e-05, 7.265299999999891e-05, 7.26110000000002e-05, 7.24439999999979e-05, 7.201299999999924e-05, 7.236099999999995e-05, 7.198599999999958e-05, 7.19439999999974e-05, 7.248600000000008e-05, 7.233299999999734e-05, 7.198599999999958e-05, 7.263899999999934e-05, 7.215300000000188e-05, 7.183300000000031e-05, 7.183399999999979e-05, 7.249999999999965e-05, 7.215299999999841e-05, 7.263899999999934e-05, 7.198699999999905e-05, 7.262499999999977e-05, 7.205599999999743e-05, 7.248600000000008e-05, 7.181900000000074e-05, 7.181900000000074e-05, 7.22499999999994e-05, 7.252800000000226e-05, 7.231900000000124e-05, 7.183300000000031e-05, 7.198599999999958e-05, 7.198599999999958e-05, 7.186099999999945e-05, 7.199999999999915e-05, 7.215200000000241e-05, 7.213799999999937e-05, 7.248600000000008e-05, 7.198599999999958e-05, 7.216699999999798e-05, 7.231900000000124e-05, 7.206899999999752e-05, 7.215300000000188e-05, 7.215299999999841e-05, 7.266700000000195e-05]</msg>
<status status="PASS" starttime="20201112 12:27:23.400" endtime="20201112 12:27:23.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.395" endtime="20201112 12:27:23.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.405" endtime="20201112 12:27:23.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.409" endtime="20201112 12:27:23.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.407" endtime="20201112 12:27:23.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.404" endtime="20201112 12:27:23.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.033" endtime="20201112 12:27:23.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.032" endtime="20201112 12:27:23.430"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.439" endtime="20201112 12:27:23.457"></status>
</kw>
<msg timestamp="20201112 12:27:23.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.437" endtime="20201112 12:27:23.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.459" endtime="20201112 12:27:23.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.461" endtime="20201112 12:27:23.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.434" endtime="20201112 12:27:23.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.432" endtime="20201112 12:27:23.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.471" endtime="20201112 12:27:23.757"></status>
</kw>
<msg timestamp="20201112 12:27:23.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.469" endtime="20201112 12:27:23.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.761" endtime="20201112 12:27:23.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.770" endtime="20201112 12:27:23.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.466" endtime="20201112 12:27:23.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.465" endtime="20201112 12:27:23.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.777" level="INFO">${RESULT} = [{'time': 0.022808917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.365299999999991e-05, 'source_diff': 7.365299999999991e-05}, {'time': 0.022893931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:23.773" endtime="20201112 12:27:23.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.791" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:23.778" endtime="20201112 12:27:23.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.795" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.794" endtime="20201112 12:27:23.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.798" level="INFO">VALUE: [7.365299999999991e-05, 7.366699999999948e-05, 7.297300000000048e-05, 7.299999999999668e-05, 7.333300000000181e-05, 7.298600000000058e-05, 7.281899999999827e-05, 7.349999999999718e-05, 7.366699999999948e-05, 7.298600000000058e-05, 7.366699999999948e-05, 7.330599999999868e-05, 7.281999999999775e-05, 7.297200000000101e-05, 7.282000000000122e-05, 7.284700000000088e-05, 7.283300000000131e-05, 7.333300000000181e-05, 7.331899999999877e-05, 7.333299999999834e-05, 7.331900000000224e-05, 7.316699999999898e-05, 7.350000000000065e-05, 7.306899999999852e-05, 7.365299999999991e-05, 7.365299999999991e-05, 7.331999999999825e-05, 7.316700000000245e-05, 7.369399999999915e-05, 7.331900000000224e-05, 7.283299999999784e-05, 7.283300000000131e-05, 7.316699999999898e-05, 7.370900000000166e-05, 7.281899999999827e-05, 7.365299999999991e-05, 7.298600000000058e-05, 7.315299999999941e-05, 7.365299999999991e-05, 7.354099999999988e-05, 7.367999999999958e-05, 7.365299999999991e-05, 7.315199999999994e-05, 7.365200000000044e-05, 7.315199999999994e-05, 7.313899999999984e-05, 7.350000000000065e-05, 7.365299999999991e-05, 7.348599999999761e-05, 7.298600000000058e-05]</msg>
<status status="PASS" starttime="20201112 12:27:23.797" endtime="20201112 12:27:23.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.792" endtime="20201112 12:27:23.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.802" endtime="20201112 12:27:23.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.805" endtime="20201112 12:27:23.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.804" endtime="20201112 12:27:23.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.800" endtime="20201112 12:27:23.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.431" endtime="20201112 12:27:23.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.430" endtime="20201112 12:27:23.826"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.835" endtime="20201112 12:27:23.853"></status>
</kw>
<msg timestamp="20201112 12:27:23.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.833" endtime="20201112 12:27:23.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.855" endtime="20201112 12:27:23.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.857" endtime="20201112 12:27:23.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.831" endtime="20201112 12:27:23.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.829" endtime="20201112 12:27:23.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.867" endtime="20201112 12:27:24.153"></status>
</kw>
<msg timestamp="20201112 12:27:24.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02259075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022665292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:23.865" endtime="20201112 12:27:24.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02259075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022665292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:24.157" endtime="20201112 12:27:24.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.166" endtime="20201112 12:27:24.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.862" endtime="20201112 12:27:24.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.861" endtime="20201112 12:27:24.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.173" level="INFO">${RESULT} = [{'time': 0.022665292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.454200000000036e-05, 'source_diff': 7.454200000000036e-05}, {'time': 0.022752292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:24.169" endtime="20201112 12:27:24.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.187" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:24.174" endtime="20201112 12:27:24.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.192" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.190" endtime="20201112 12:27:24.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.194" level="INFO">VALUE: [7.454200000000036e-05, 7.465300000000091e-05, 7.463900000000134e-05, 7.398699999999758e-05, 7.392999999999983e-05, 7.437500000000152e-05, 7.384700000000188e-05, 7.386099999999798e-05, 7.448599999999861e-05, 7.420900000000216e-05, 7.447299999999851e-05, 7.449999999999818e-05, 7.398599999999811e-05, 7.399999999999768e-05, 7.427800000000054e-05, 7.44309999999998e-05, 7.433299999999934e-05, 7.400000000000115e-05, 7.409700000000213e-05, 7.398600000000158e-05, 7.463900000000134e-05, 7.465300000000091e-05, 7.450000000000165e-05, 7.465300000000091e-05, 7.413900000000084e-05, 7.383400000000179e-05, 7.397200000000201e-05, 7.448700000000155e-05, 7.381999999999875e-05, 7.381999999999875e-05, 7.41379999999979e-05, 7.381899999999927e-05, 7.465300000000091e-05, 7.376400000000047e-05, 7.388900000000059e-05, 7.437499999999805e-05, 7.383299999999884e-05, 7.462500000000177e-05, 7.433399999999882e-05, 7.422199999999879e-05, 7.384700000000188e-05, 7.466600000000101e-05, 7.418000000000008e-05, 7.402800000000029e-05, 7.415200000000094e-05, 7.398599999999811e-05, 7.381900000000274e-05, 7.381899999999927e-05, 7.465300000000091e-05, 7.431899999999977e-05]</msg>
<status status="PASS" starttime="20201112 12:27:24.193" endtime="20201112 12:27:24.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.188" endtime="20201112 12:27:24.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.198" endtime="20201112 12:27:24.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.202" endtime="20201112 12:27:24.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.201" endtime="20201112 12:27:24.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.196" endtime="20201112 12:27:24.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.827" endtime="20201112 12:27:24.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.826" endtime="20201112 12:27:24.223"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.232" endtime="20201112 12:27:24.251"></status>
</kw>
<msg timestamp="20201112 12:27:24.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.231" endtime="20201112 12:27:24.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.252" endtime="20201112 12:27:24.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.255" endtime="20201112 12:27:24.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.228" endtime="20201112 12:27:24.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.226" endtime="20201112 12:27:24.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.264" endtime="20201112 12:27:24.551"></status>
</kw>
<msg timestamp="20201112 12:27:24.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.263" endtime="20201112 12:27:24.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.555" endtime="20201112 12:27:24.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.563" endtime="20201112 12:27:24.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.260" endtime="20201112 12:27:24.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.258" endtime="20201112 12:27:24.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.570" level="INFO">${RESULT} = [{'time': 0.022847333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.519400000000065e-05, 'source_diff': 7.519400000000065e-05}, {'time': 0.022931347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:24.567" endtime="20201112 12:27:24.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.584" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:24.571" endtime="20201112 12:27:24.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.589" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.588" endtime="20201112 12:27:24.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.592" level="INFO">VALUE: [7.519400000000065e-05, 7.516600000000151e-05, 7.498600000000258e-05, 7.568100000000105e-05, 7.515300000000141e-05, 7.513900000000184e-05, 7.498599999999911e-05, 7.500000000000215e-05, 7.567999999999811e-05, 7.482000000000322e-05, 7.548700000000255e-05, 7.488900000000159e-05, 7.531900000000077e-05, 7.565199999999897e-05, 7.481900000000027e-05, 7.565300000000191e-05, 7.561099999999973e-05, 7.565300000000191e-05, 7.549999999999918e-05, 7.518100000000055e-05, 7.536100000000295e-05, 7.536099999999948e-05, 7.548599999999961e-05, 7.480600000000018e-05, 7.498699999999858e-05, 7.569399999999768e-05, 7.513900000000184e-05, 7.554199999999789e-05, 7.548599999999961e-05, 7.498599999999911e-05, 7.531900000000077e-05, 7.532000000000025e-05, 7.533399999999982e-05, 7.500000000000215e-05, 7.504100000000138e-05, 7.563900000000234e-05, 7.533300000000034e-05, 7.481900000000027e-05, 7.498599999999911e-05, 7.548599999999961e-05, 7.536100000000295e-05, 7.531900000000077e-05, 7.551400000000222e-05, 7.497199999999954e-05, 7.515300000000141e-05, 7.545800000000047e-05, 7.518100000000055e-05, 7.551399999999875e-05, 7.548599999999961e-05, 7.532000000000025e-05]</msg>
<status status="PASS" starttime="20201112 12:27:24.590" endtime="20201112 12:27:24.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.585" endtime="20201112 12:27:24.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.595" endtime="20201112 12:27:24.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.599" endtime="20201112 12:27:24.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.597" endtime="20201112 12:27:24.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.594" endtime="20201112 12:27:24.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.224" endtime="20201112 12:27:24.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.224" endtime="20201112 12:27:24.620"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.629" endtime="20201112 12:27:24.647"></status>
</kw>
<msg timestamp="20201112 12:27:24.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.627" endtime="20201112 12:27:24.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.649" endtime="20201112 12:27:24.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.651" endtime="20201112 12:27:24.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.625" endtime="20201112 12:27:24.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.622" endtime="20201112 12:27:24.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.661" endtime="20201112 12:27:24.949"></status>
</kw>
<msg timestamp="20201112 12:27:24.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.659" endtime="20201112 12:27:24.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.954" endtime="20201112 12:27:24.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.962" endtime="20201112 12:27:24.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.656" endtime="20201112 12:27:24.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.654" endtime="20201112 12:27:24.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.969" level="INFO">${RESULT} = [{'time': 0.022781514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.627799999999907e-05, 'source_diff': 7.627799999999907e-05}, {'time': 0.022868444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:24.965" endtime="20201112 12:27:24.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.983" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:24.970" endtime="20201112 12:27:24.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.987" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.986" endtime="20201112 12:27:24.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.990" level="INFO">VALUE: [7.627799999999907e-05, 7.631900000000177e-05, 7.61379999999999e-05, 7.615199999999947e-05, 7.648600000000061e-05, 7.63189999999983e-05, 7.665299999999944e-05, 7.665299999999944e-05, 7.666700000000248e-05, 7.648600000000061e-05, 7.630599999999821e-05, 7.648600000000061e-05, 7.666700000000248e-05, 7.650000000000018e-05, 7.616599999999904e-05, 7.597200000000054e-05, 7.624999999999993e-05, 7.648600000000061e-05, 7.583300000000084e-05, 7.630600000000168e-05, 7.581900000000127e-05, 7.647199999999757e-05, 7.615299999999894e-05, 7.598600000000011e-05, 7.649999999999671e-05, 7.598700000000305e-05, 7.583300000000084e-05, 7.58189999999978e-05, 7.624999999999993e-05, 7.65700000000015e-05, 7.633300000000134e-05, 7.615299999999894e-05, 7.580600000000118e-05, 7.648600000000061e-05, 7.632000000000125e-05, 7.615299999999894e-05, 7.587499999999955e-05, 7.582000000000075e-05, 7.643099999999833e-05, 7.665199999999997e-05, 7.647200000000104e-05, 7.583300000000084e-05, 7.615299999999894e-05, 7.630499999999873e-05, 7.615300000000241e-05, 7.651399999999975e-05, 7.648600000000061e-05, 7.615299999999894e-05, 7.580599999999771e-05, 7.648700000000008e-05]</msg>
<status status="PASS" starttime="20201112 12:27:24.989" endtime="20201112 12:27:24.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.984" endtime="20201112 12:27:24.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.994" endtime="20201112 12:27:24.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.997" endtime="20201112 12:27:25.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.996" endtime="20201112 12:27:25.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.992" endtime="20201112 12:27:25.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.621" endtime="20201112 12:27:25.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.620" endtime="20201112 12:27:25.018"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.027" endtime="20201112 12:27:25.046"></status>
</kw>
<msg timestamp="20201112 12:27:25.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.026" endtime="20201112 12:27:25.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.048" endtime="20201112 12:27:25.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.050" endtime="20201112 12:27:25.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.023" endtime="20201112 12:27:25.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.021" endtime="20201112 12:27:25.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.060" endtime="20201112 12:27:25.347"></status>
</kw>
<msg timestamp="20201112 12:27:25.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.058" endtime="20201112 12:27:25.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.351" endtime="20201112 12:27:25.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.360" endtime="20201112 12:27:25.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.055" endtime="20201112 12:27:25.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.054" endtime="20201112 12:27:25.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.367" level="INFO">${RESULT} = [{'time': 0.022903194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.770800000000272e-05, 'source_diff': 7.770800000000272e-05}, {'time': 0.02298825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:25.363" endtime="20201112 12:27:25.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.381" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:25.368" endtime="20201112 12:27:25.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.385" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.384" endtime="20201112 12:27:25.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.388" level="INFO">VALUE: [7.770800000000272e-05, 7.754199999999989e-05, 7.76519999999975e-05, 7.725000000000093e-05, 7.766700000000001e-05, 7.769499999999915e-05, 7.700000000000068e-05, 7.715299999999994e-05, 7.765300000000044e-05, 7.733400000000182e-05, 7.680600000000218e-05, 7.766700000000001e-05, 7.716600000000004e-05, 7.765200000000097e-05, 7.736099999999801e-05, 7.6764e-05, 7.733299999999887e-05, 7.749999999999771e-05, 7.68189999999988e-05, 7.697199999999807e-05, 7.680599999999871e-05, 7.765300000000044e-05, 7.731999999999878e-05, 7.768000000000011e-05, 7.766700000000001e-05, 7.68189999999988e-05, 7.68050000000027e-05, 7.744399999999943e-05, 7.730499999999974e-05, 7.748600000000161e-05, 7.702799999999982e-05, 7.71250000000008e-05, 7.765300000000044e-05, 7.748599999999814e-05, 7.730599999999921e-05, 7.765300000000044e-05, 7.698600000000111e-05, 7.731999999999878e-05, 7.768000000000011e-05, 7.698600000000111e-05, 7.720799999999875e-05, 7.731900000000277e-05, 7.748599999999814e-05, 7.697200000000154e-05, 7.730599999999921e-05, 7.737499999999758e-05, 7.750000000000118e-05, 7.748600000000161e-05, 7.691699999999926e-05, 7.73189999999993e-05]</msg>
<status status="PASS" starttime="20201112 12:27:25.386" endtime="20201112 12:27:25.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.382" endtime="20201112 12:27:25.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.392" endtime="20201112 12:27:25.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.395" endtime="20201112 12:27:25.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.394" endtime="20201112 12:27:25.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.390" endtime="20201112 12:27:25.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.019" endtime="20201112 12:27:25.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.019" endtime="20201112 12:27:25.416"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.425" endtime="20201112 12:27:25.443"></status>
</kw>
<msg timestamp="20201112 12:27:25.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.424" endtime="20201112 12:27:25.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.445" endtime="20201112 12:27:25.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.447" endtime="20201112 12:27:25.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.421" endtime="20201112 12:27:25.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.419" endtime="20201112 12:27:25.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.457" endtime="20201112 12:27:25.745"></status>
</kw>
<msg timestamp="20201112 12:27:25.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.455" endtime="20201112 12:27:25.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.749" endtime="20201112 12:27:25.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.757" endtime="20201112 12:27:25.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.453" endtime="20201112 12:27:25.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.451" endtime="20201112 12:27:25.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.764" level="INFO">${RESULT} = [{'time': 0.022837347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.877800000000157e-05, 'source_diff': 7.877800000000157e-05}, {'time': 0.022927306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:25.761" endtime="20201112 12:27:25.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.778" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:25.765" endtime="20201112 12:27:25.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.783" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.782" endtime="20201112 12:27:25.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.786" level="INFO">VALUE: [7.877800000000157e-05, 7.831999999999978e-05, 7.849999999999871e-05, 7.7764000000001e-05, 7.843000000000086e-05, 7.81389999999979e-05, 7.815300000000094e-05, 7.865300000000144e-05, 7.815300000000094e-05, 7.815300000000094e-05, 7.848600000000261e-05, 7.833399999999935e-05, 7.830600000000021e-05, 7.851300000000228e-05, 7.798700000000158e-05, 7.77909999999972e-05, 7.81389999999979e-05, 7.829100000000117e-05, 7.865299999999797e-05, 7.865299999999797e-05, 7.83190000000003e-05, 7.833299999999987e-05, 7.780599999999971e-05, 7.797299999999854e-05, 7.799999999999821e-05, 7.86389999999984e-05, 7.800000000000168e-05, 7.81380000000019e-05, 7.850000000000218e-05, 7.78189999999998e-05, 7.784699999999894e-05, 7.78189999999998e-05, 7.83190000000003e-05, 7.784699999999894e-05, 7.833399999999935e-05, 7.861099999999926e-05, 7.773599999999839e-05, 7.816600000000104e-05, 7.855599999999699e-05, 7.815300000000094e-05, 7.780499999999677e-05, 7.836099999999901e-05, 7.816600000000104e-05, 7.866699999999754e-05, 7.847199999999957e-05, 7.78189999999998e-05, 7.8458e-05, 7.851399999999828e-05, 7.834799999999892e-05, 7.833400000000282e-05]</msg>
<status status="PASS" starttime="20201112 12:27:25.784" endtime="20201112 12:27:25.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.779" endtime="20201112 12:27:25.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.789" endtime="20201112 12:27:25.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.793" endtime="20201112 12:27:25.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.791" endtime="20201112 12:27:25.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.788" endtime="20201112 12:27:25.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.417" endtime="20201112 12:27:25.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.417" endtime="20201112 12:27:25.814"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.823" endtime="20201112 12:27:25.842"></status>
</kw>
<msg timestamp="20201112 12:27:25.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.822" endtime="20201112 12:27:25.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.844" endtime="20201112 12:27:25.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.846" endtime="20201112 12:27:25.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.819" endtime="20201112 12:27:25.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.817" endtime="20201112 12:27:25.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.856" endtime="20201112 12:27:26.142"></status>
</kw>
<msg timestamp="20201112 12:27:26.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022771875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.854" endtime="20201112 12:27:26.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022771875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.147" endtime="20201112 12:27:26.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.155" endtime="20201112 12:27:26.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.852" endtime="20201112 12:27:26.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.850" endtime="20201112 12:27:26.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.162" level="INFO">${RESULT} = [{'time': 0.022850778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.890299999999822e-05, 'source_diff': 7.890299999999822e-05}, {'time': 0.022943792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:26.159" endtime="20201112 12:27:26.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.176" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:26.163" endtime="20201112 12:27:26.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.181" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.180" endtime="20201112 12:27:26.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.183" level="INFO">VALUE: [7.890299999999822e-05, 7.89030000000017e-05, 7.930599999999774e-05, 7.881899999999734e-05, 7.917999999999814e-05, 7.881899999999734e-05, 7.898599999999964e-05, 7.88190000000008e-05, 7.947200000000057e-05, 7.93190000000013e-05, 7.932000000000078e-05, 7.965299999999897e-05, 7.965299999999897e-05, 7.948699999999961e-05, 7.965300000000244e-05, 7.880500000000124e-05, 7.954200000000189e-05, 7.966599999999907e-05, 7.913900000000237e-05, 7.916699999999804e-05, 7.948600000000014e-05, 7.966699999999854e-05, 7.915299999999847e-05, 7.882000000000028e-05, 7.949999999999971e-05, 7.94169999999983e-05, 7.91389999999989e-05, 7.965300000000244e-05, 7.965200000000297e-05, 7.883300000000037e-05, 7.93190000000013e-05, 7.900000000000268e-05, 7.965299999999897e-05, 7.948600000000014e-05, 7.933399999999688e-05, 7.924999999999946e-05, 7.916699999999804e-05, 7.949999999999971e-05, 7.902699999999888e-05, 7.932000000000078e-05, 7.930500000000174e-05, 7.948600000000014e-05, 7.96389999999994e-05, 7.949999999999971e-05, 7.951399999999928e-05, 7.948600000000014e-05, 7.949999999999971e-05, 7.972200000000082e-05, 7.930599999999774e-05, 7.947300000000004e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.182" endtime="20201112 12:27:26.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.177" endtime="20201112 12:27:26.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.187" endtime="20201112 12:27:26.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.191" endtime="20201112 12:27:26.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.189" endtime="20201112 12:27:26.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.185" endtime="20201112 12:27:26.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.815" endtime="20201112 12:27:26.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.814" endtime="20201112 12:27:26.212"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.221" endtime="20201112 12:27:26.240"></status>
</kw>
<msg timestamp="20201112 12:27:26.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.219" endtime="20201112 12:27:26.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.241" endtime="20201112 12:27:26.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.244" endtime="20201112 12:27:26.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.216" endtime="20201112 12:27:26.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.214" endtime="20201112 12:27:26.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.253" endtime="20201112 12:27:26.542"></status>
</kw>
<msg timestamp="20201112 12:27:26.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022853458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.252" endtime="20201112 12:27:26.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022853458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.546" endtime="20201112 12:27:26.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.554" endtime="20201112 12:27:26.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.249" endtime="20201112 12:27:26.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.247" endtime="20201112 12:27:26.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.561" level="INFO">${RESULT} = [{'time': 0.022933417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.995900000000097e-05, 'source_diff': 7.995900000000097e-05}, {'time': 0.023028417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:26.558" endtime="20201112 12:27:26.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.575" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:26.562" endtime="20201112 12:27:26.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.580" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.579" endtime="20201112 12:27:26.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.583" level="INFO">VALUE: [7.995900000000097e-05, 8.030599999999874e-05, 7.980600000000171e-05, 7.999999999999674e-05, 8.031899999999884e-05, 7.980499999999877e-05, 8.031899999999884e-05, 8.065299999999997e-05, 7.98190000000018e-05, 8.015300000000294e-05, 8.065299999999997e-05, 7.983400000000085e-05, 8.048600000000114e-05, 8.032000000000178e-05, 7.984700000000094e-05, 8.033300000000188e-05, 8.048600000000114e-05, 8.000000000000021e-05, 7.998599999999717e-05, 7.981899999999834e-05, 8.04169999999993e-05, 7.998600000000064e-05, 8.06390000000004e-05, 8.030600000000221e-05, 8.06390000000004e-05, 7.999999999999674e-05, 8.063899999999694e-05, 7.998600000000064e-05, 8.048600000000114e-05, 8.050000000000071e-05, 7.980500000000224e-05, 8.066700000000301e-05, 7.998600000000064e-05, 8.065299999999997e-05, 8.015299999999947e-05, 7.998600000000064e-05, 8.065299999999997e-05, 8.047300000000104e-05, 8.06390000000004e-05, 7.98190000000018e-05, 8.016599999999957e-05, 8.030499999999927e-05, 8.03190000000023e-05, 7.998600000000064e-05, 8.065299999999997e-05, 8.066699999999954e-05, 7.995900000000097e-05, 8.048600000000114e-05, 7.974999999999996e-05, 8.01389999999999e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.581" endtime="20201112 12:27:26.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.576" endtime="20201112 12:27:26.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.586" endtime="20201112 12:27:26.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.590" endtime="20201112 12:27:26.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.588" endtime="20201112 12:27:26.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.585" endtime="20201112 12:27:26.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.213" endtime="20201112 12:27:26.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.212" endtime="20201112 12:27:26.611"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.620" endtime="20201112 12:27:26.640"></status>
</kw>
<msg timestamp="20201112 12:27:26.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.618" endtime="20201112 12:27:26.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.641" endtime="20201112 12:27:26.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.644" endtime="20201112 12:27:26.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.615" endtime="20201112 12:27:26.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.613" endtime="20201112 12:27:26.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.653" endtime="20201112 12:27:26.940"></status>
</kw>
<msg timestamp="20201112 12:27:26.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.652" endtime="20201112 12:27:26.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.944" endtime="20201112 12:27:26.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.953" endtime="20201112 12:27:26.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.649" endtime="20201112 12:27:26.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.647" endtime="20201112 12:27:26.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.960" level="INFO">${RESULT} = [{'time': 0.022716181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.101399999999731e-05, 'source_diff': 8.101399999999731e-05}, {'time': 0.022809194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:26.956" endtime="20201112 12:27:26.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.974" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:26.961" endtime="20201112 12:27:26.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.978" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.977" endtime="20201112 12:27:26.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.981" level="INFO">VALUE: [8.101399999999731e-05, 8.131899999999984e-05, 8.152800000000085e-05, 8.154200000000042e-05, 8.143000000000039e-05, 8.099999999999774e-05, 8.115300000000047e-05, 8.081999999999881e-05, 8.115300000000047e-05, 8.123600000000189e-05, 8.166700000000054e-05, 8.094499999999893e-05, 8.131999999999931e-05, 8.151400000000128e-05, 8.11390000000009e-05, 8.098600000000164e-05, 8.098599999999817e-05, 8.108299999999916e-05, 8.148599999999867e-05, 8.170899999999925e-05, 8.165300000000097e-05, 8.165300000000097e-05, 8.084699999999848e-05, 8.166699999999708e-05, 8.143099999999986e-05, 8.116600000000057e-05, 8.150000000000171e-05, 8.166600000000107e-05, 8.088900000000065e-05, 8.133300000000288e-05, 8.166700000000054e-05, 8.112499999999787e-05, 8.165300000000097e-05, 8.115300000000047e-05, 8.166700000000054e-05, 8.116700000000004e-05, 8.08329999999989e-05, 8.131899999999984e-05, 8.115300000000047e-05, 8.116600000000057e-05, 8.081899999999934e-05, 8.097200000000207e-05, 8.16529999999975e-05, 8.136100000000202e-05, 8.079199999999967e-05, 8.130600000000321e-05, 8.084799999999795e-05, 8.133400000000235e-05, 8.11390000000009e-05, 8.109699999999873e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.980" endtime="20201112 12:27:26.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.975" endtime="20201112 12:27:26.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.985" endtime="20201112 12:27:26.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.988" endtime="20201112 12:27:27.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.987" endtime="20201112 12:27:27.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.983" endtime="20201112 12:27:27.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.612" endtime="20201112 12:27:27.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.611" endtime="20201112 12:27:27.009"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.018" endtime="20201112 12:27:27.037"></status>
</kw>
<msg timestamp="20201112 12:27:27.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.017" endtime="20201112 12:27:27.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.039" endtime="20201112 12:27:27.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.041" endtime="20201112 12:27:27.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.014" endtime="20201112 12:27:27.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.012" endtime="20201112 12:27:27.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.051" endtime="20201112 12:27:27.339"></status>
</kw>
<msg timestamp="20201112 12:27:27.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023188736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023271042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.049" endtime="20201112 12:27:27.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023188736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023271042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.343" endtime="20201112 12:27:27.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.352" endtime="20201112 12:27:27.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.047" endtime="20201112 12:27:27.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.045" endtime="20201112 12:27:27.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.359" level="INFO">${RESULT} = [{'time': 0.023271042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.230599999999727e-05, 'source_diff': 8.230599999999727e-05}, {'time': 0.023358042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:27.355" endtime="20201112 12:27:27.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.373" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:27.360" endtime="20201112 12:27:27.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.377" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.376" endtime="20201112 12:27:27.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.380" level="INFO">VALUE: [8.230599999999727e-05, 8.212499999999887e-05, 8.19589999999995e-05, 8.18329999999999e-05, 8.180500000000077e-05, 8.237499999999912e-05, 8.18329999999999e-05, 8.198599999999917e-05, 8.216700000000104e-05, 8.26529999999985e-05, 8.229200000000117e-05, 8.248599999999967e-05, 8.248599999999967e-05, 8.198599999999917e-05, 8.232000000000031e-05, 8.180500000000077e-05, 8.227700000000213e-05, 8.220800000000028e-05, 8.186099999999905e-05, 8.18329999999999e-05, 8.231900000000084e-05, 8.181900000000034e-05, 8.181999999999981e-05, 8.249999999999924e-05, 8.215300000000147e-05, 8.262499999999937e-05, 8.249999999999924e-05, 8.261199999999927e-05, 8.248599999999967e-05, 8.186099999999905e-05, 8.26529999999985e-05, 8.231900000000084e-05, 8.215300000000147e-05, 8.186099999999905e-05, 8.26529999999985e-05, 8.23330000000004e-05, 8.233399999999988e-05, 8.248599999999967e-05, 8.247299999999957e-05, 8.234699999999998e-05, 8.198599999999917e-05, 8.251399999999881e-05, 8.248599999999967e-05, 8.184699999999948e-05, 8.215300000000147e-05, 8.23330000000004e-05, 8.215300000000147e-05, 8.19719999999996e-05, 8.215300000000147e-05, 8.244500000000043e-05]</msg>
<status status="PASS" starttime="20201112 12:27:27.379" endtime="20201112 12:27:27.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.374" endtime="20201112 12:27:27.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.384" endtime="20201112 12:27:27.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.387" endtime="20201112 12:27:27.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.386" endtime="20201112 12:27:27.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.382" endtime="20201112 12:27:27.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.010" endtime="20201112 12:27:27.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.010" endtime="20201112 12:27:27.408"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.417" endtime="20201112 12:27:27.436"></status>
</kw>
<msg timestamp="20201112 12:27:27.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.416" endtime="20201112 12:27:27.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.438" endtime="20201112 12:27:27.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.440" endtime="20201112 12:27:27.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.413" endtime="20201112 12:27:27.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.411" endtime="20201112 12:27:27.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.450" endtime="20201112 12:27:27.736"></status>
</kw>
<msg timestamp="20201112 12:27:27.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.448" endtime="20201112 12:27:27.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.740" endtime="20201112 12:27:27.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.749" endtime="20201112 12:27:27.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.445" endtime="20201112 12:27:27.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.444" endtime="20201112 12:27:27.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.756" level="INFO">${RESULT} = [{'time': 0.022685917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.298600000000017e-05, 'source_diff': 8.298600000000017e-05}, {'time': 0.022775958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:27.752" endtime="20201112 12:27:27.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.770" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:27.757" endtime="20201112 12:27:27.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.775" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.774" endtime="20201112 12:27:27.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.777" level="INFO">VALUE: [8.298600000000017e-05, 8.286100000000005e-05, 8.332000000000131e-05, 8.33049999999988e-05, 8.281899999999787e-05, 8.301400000000278e-05, 8.344399999999849e-05, 8.27780000000021e-05, 8.363899999999994e-05, 8.348600000000067e-05, 8.348600000000067e-05, 8.316699999999858e-05, 8.281999999999734e-05, 8.31659999999991e-05, 8.31659999999991e-05, 8.333299999999794e-05, 8.333299999999794e-05, 8.350000000000024e-05, 8.316700000000204e-05, 8.369499999999822e-05, 8.298600000000017e-05, 8.315300000000247e-05, 8.369500000000168e-05, 8.36529999999995e-05, 8.363899999999994e-05, 8.282000000000081e-05, 8.313799999999996e-05, 8.315199999999953e-05, 8.363899999999994e-05, 8.29720000000006e-05, 8.3152999999999e-05, 8.316700000000204e-05, 8.330600000000174e-05, 8.315300000000247e-05, 8.283400000000038e-05, 8.276400000000253e-05, 8.363899999999994e-05, 8.369399999999874e-05, 8.348600000000067e-05, 8.363899999999994e-05, 8.31659999999991e-05, 8.302799999999888e-05, 8.34859999999972e-05, 8.3152999999999e-05, 8.350000000000024e-05, 8.284799999999995e-05, 8.330599999999827e-05, 8.370800000000178e-05, 8.351399999999981e-05, 8.299999999999974e-05]</msg>
<status status="PASS" starttime="20201112 12:27:27.776" endtime="20201112 12:27:27.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.771" endtime="20201112 12:27:27.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.785" endtime="20201112 12:27:27.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.788" endtime="20201112 12:27:27.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.787" endtime="20201112 12:27:27.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.783" endtime="20201112 12:27:27.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.409" endtime="20201112 12:27:27.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.408" endtime="20201112 12:27:27.809"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.818" endtime="20201112 12:27:27.837"></status>
</kw>
<msg timestamp="20201112 12:27:27.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.816" endtime="20201112 12:27:27.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.838" endtime="20201112 12:27:27.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.841" endtime="20201112 12:27:27.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.814" endtime="20201112 12:27:27.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.812" endtime="20201112 12:27:27.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.850" endtime="20201112 12:27:28.139"></status>
</kw>
<msg timestamp="20201112 12:27:28.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.849" endtime="20201112 12:27:28.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.143" endtime="20201112 12:27:28.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.152" endtime="20201112 12:27:28.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.846" endtime="20201112 12:27:28.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.844" endtime="20201112 12:27:28.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.159" level="INFO">${RESULT} = [{'time': 0.022727597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.465299999999704e-05, 'source_diff': 8.465299999999704e-05}, {'time': 0.022823653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:28.155" endtime="20201112 12:27:28.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.173" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:28.160" endtime="20201112 12:27:28.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.177" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.176" endtime="20201112 12:27:28.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.180" level="INFO">VALUE: [8.465299999999704e-05, 8.43469999999985e-05, 8.450000000000124e-05, 8.466700000000008e-05, 8.448600000000167e-05, 8.431999999999884e-05, 8.448600000000167e-05, 8.46660000000006e-05, 8.38330000000019e-05, 8.41110000000013e-05, 8.398600000000117e-05, 8.379099999999973e-05, 8.416700000000304e-05, 8.397199999999813e-05, 8.468099999999965e-05, 8.413900000000044e-05, 8.466700000000008e-05, 8.430599999999927e-05, 8.432000000000231e-05, 8.380599999999877e-05, 8.465200000000103e-05, 8.459699999999876e-05, 8.445799999999906e-05, 8.431899999999937e-05, 8.448600000000167e-05, 8.402799999999988e-05, 8.431999999999884e-05, 8.39720000000016e-05, 8.465299999999704e-05, 8.434700000000198e-05, 8.431999999999884e-05, 8.398700000000064e-05, 8.465200000000103e-05, 8.41660000000001e-05, 8.43469999999985e-05, 8.451399999999734e-05, 8.398600000000117e-05, 8.463899999999747e-05, 8.390300000000323e-05, 8.380599999999877e-05, 8.383400000000138e-05, 8.416700000000304e-05, 8.448700000000114e-05, 8.41660000000001e-05, 8.383299999999844e-05, 8.459700000000223e-05, 8.38049999999993e-05, 8.431899999999937e-05, 8.46530000000005e-05, 8.39859999999977e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.178" endtime="20201112 12:27:28.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.174" endtime="20201112 12:27:28.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.184" endtime="20201112 12:27:28.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.187" endtime="20201112 12:27:28.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.185" endtime="20201112 12:27:28.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.182" endtime="20201112 12:27:28.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.810" endtime="20201112 12:27:28.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.810" endtime="20201112 12:27:28.208"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.217" endtime="20201112 12:27:28.236"></status>
</kw>
<msg timestamp="20201112 12:27:28.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.215" endtime="20201112 12:27:28.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.238" endtime="20201112 12:27:28.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.240" endtime="20201112 12:27:28.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.213" endtime="20201112 12:27:28.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.211" endtime="20201112 12:27:28.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.250" endtime="20201112 12:27:28.537"></status>
</kw>
<msg timestamp="20201112 12:27:28.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022958639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023044167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.248" endtime="20201112 12:27:28.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022958639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023044167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.541" endtime="20201112 12:27:28.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.550" endtime="20201112 12:27:28.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.246" endtime="20201112 12:27:28.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.244" endtime="20201112 12:27:28.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.557" level="INFO">${RESULT} = [{'time': 0.023044167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.552800000000138e-05, 'source_diff': 8.552800000000138e-05}, {'time': 0.023136236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:28.553" endtime="20201112 12:27:28.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.571" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:28.558" endtime="20201112 12:27:28.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.575" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.574" endtime="20201112 12:27:28.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.578" level="INFO">VALUE: [8.552800000000138e-05, 8.550000000000224e-05, 8.515200000000153e-05, 8.498600000000217e-05, 8.569500000000022e-05, 8.540299999999779e-05, 8.573599999999945e-05, 8.5153000000001e-05, 8.531999999999984e-05, 8.531999999999984e-05, 8.565299999999804e-05, 8.482000000000281e-05, 8.532000000000331e-05, 8.51660000000011e-05, 8.568000000000117e-05, 8.519400000000024e-05, 8.51249999999984e-05, 8.515299999999754e-05, 8.547199999999963e-05, 8.49720000000026e-05, 8.533399999999941e-05, 8.534799999999898e-05, 8.49859999999987e-05, 8.568000000000117e-05, 8.531999999999984e-05, 8.565200000000203e-05, 8.481899999999987e-05, 8.499999999999827e-05, 8.531900000000037e-05, 8.547199999999963e-05, 8.512500000000187e-05, 8.518100000000015e-05, 8.563900000000194e-05, 8.49859999999987e-05, 8.497300000000207e-05, 8.513900000000144e-05, 8.549999999999877e-05, 8.56660000000016e-05, 8.515200000000153e-05, 8.566700000000108e-05, 8.51669999999971e-05, 8.531900000000037e-05, 8.518100000000015e-05, 8.487499999999815e-05, 8.565299999999804e-05, 8.487499999999815e-05, 8.54859999999992e-05, 8.56530000000015e-05, 8.481899999999987e-05, 8.548600000000267e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.576" endtime="20201112 12:27:28.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.572" endtime="20201112 12:27:28.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.582" endtime="20201112 12:27:28.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.585" endtime="20201112 12:27:28.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.584" endtime="20201112 12:27:28.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.580" endtime="20201112 12:27:28.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.209" endtime="20201112 12:27:28.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.208" endtime="20201112 12:27:28.606"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.615" endtime="20201112 12:27:28.635"></status>
</kw>
<msg timestamp="20201112 12:27:28.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.613" endtime="20201112 12:27:28.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.636" endtime="20201112 12:27:28.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.639" endtime="20201112 12:27:28.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.611" endtime="20201112 12:27:28.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.609" endtime="20201112 12:27:28.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.648" endtime="20201112 12:27:28.935"></status>
</kw>
<msg timestamp="20201112 12:27:28.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.647" endtime="20201112 12:27:28.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.939" endtime="20201112 12:27:28.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.948" endtime="20201112 12:27:28.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.644" endtime="20201112 12:27:28.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.642" endtime="20201112 12:27:28.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.955" level="INFO">${RESULT} = [{'time': 0.022908028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.618100000000115e-05, 'source_diff': 8.618100000000115e-05}, {'time': 0.022999056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:28.951" endtime="20201112 12:27:28.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.968" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:28.956" endtime="20201112 12:27:28.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.973" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.972" endtime="20201112 12:27:28.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.976" level="INFO">VALUE: [8.618100000000115e-05, 8.632000000000084e-05, 8.582000000000034e-05, 8.649999999999977e-05, 8.581900000000087e-05, 8.666599999999913e-05, 8.615299999999854e-05, 8.66669999999986e-05, 8.613899999999897e-05, 8.58189999999974e-05, 8.582000000000034e-05, 8.582000000000034e-05, 8.632000000000084e-05, 8.59859999999997e-05, 8.665299999999904e-05, 8.619399999999777e-05, 8.608299999999722e-05, 8.666599999999913e-05, 8.59859999999997e-05, 8.663899999999947e-05, 8.666700000000208e-05, 8.649999999999977e-05, 8.66530000000025e-05, 8.649999999999977e-05, 8.582000000000034e-05, 8.63189999999979e-05, 8.616599999999863e-05, 8.616599999999863e-05, 8.645800000000106e-05, 8.583300000000044e-05, 8.598600000000317e-05, 8.613899999999897e-05, 8.597200000000013e-05, 8.658400000000066e-05, 8.669400000000174e-05, 8.655500000000205e-05, 8.633400000000041e-05, 8.626299999999962e-05, 8.631900000000137e-05, 8.597200000000013e-05, 8.597200000000013e-05, 8.599999999999927e-05, 8.66530000000025e-05, 8.629199999999823e-05, 8.580600000000077e-05, 8.584799999999948e-05, 8.59859999999997e-05, 8.580600000000077e-05, 8.591699999999786e-05, 8.665199999999956e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.974" endtime="20201112 12:27:28.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.969" endtime="20201112 12:27:28.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.980" endtime="20201112 12:27:28.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.983" endtime="20201112 12:27:29.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.982" endtime="20201112 12:27:29.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.978" endtime="20201112 12:27:29.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.607" endtime="20201112 12:27:29.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.606" endtime="20201112 12:27:29.004"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.013" endtime="20201112 12:27:29.032"></status>
</kw>
<msg timestamp="20201112 12:27:29.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.012" endtime="20201112 12:27:29.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.034" endtime="20201112 12:27:29.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.036" endtime="20201112 12:27:29.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.009" endtime="20201112 12:27:29.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.007" endtime="20201112 12:27:29.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.046" endtime="20201112 12:27:29.332"></status>
</kw>
<msg timestamp="20201112 12:27:29.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022883292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.044" endtime="20201112 12:27:29.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022883292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.337" endtime="20201112 12:27:29.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.345" endtime="20201112 12:27:29.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.041" endtime="20201112 12:27:29.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.040" endtime="20201112 12:27:29.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.352" level="INFO">${RESULT} = [{'time': 0.022883292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.731999999999837e-05, 'source_diff': 8.731999999999837e-05}, {'time': 0.022976306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:29.348" endtime="20201112 12:27:29.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.366" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:29.353" endtime="20201112 12:27:29.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.371" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.370" endtime="20201112 12:27:29.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.373" level="INFO">VALUE: [8.731999999999837e-05, 8.715299999999954e-05, 8.715200000000006e-05, 8.715200000000006e-05, 8.716599999999963e-05, 8.68189999999984e-05, 8.6847000000001e-05, 8.713899999999997e-05, 8.73059999999988e-05, 8.750000000000077e-05, 8.715299999999954e-05, 8.7638999999997e-05, 8.698700000000018e-05, 8.716599999999963e-05, 8.766600000000013e-05, 8.750000000000077e-05, 8.715299999999954e-05, 8.723600000000095e-05, 8.765300000000004e-05, 8.697199999999766e-05, 8.683400000000091e-05, 8.684699999999754e-05, 8.700000000000027e-05, 8.766600000000013e-05, 8.747299999999764e-05, 8.697200000000113e-05, 8.73189999999989e-05, 8.723700000000043e-05, 8.73470000000015e-05, 8.770899999999832e-05, 8.69860000000007e-05, 8.730600000000227e-05, 8.682000000000134e-05, 8.680600000000177e-05, 8.73059999999988e-05, 8.697200000000113e-05, 8.765200000000056e-05, 8.7153000000003e-05, 8.733300000000194e-05, 8.683300000000144e-05, 8.68189999999984e-05, 8.765300000000004e-05, 8.74860000000012e-05, 8.718099999999868e-05, 8.71669999999991e-05, 8.74730000000011e-05, 8.715299999999954e-05, 8.69860000000007e-05, 8.733300000000194e-05, 8.731900000000237e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.372" endtime="20201112 12:27:29.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.367" endtime="20201112 12:27:29.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.377" endtime="20201112 12:27:29.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.381" endtime="20201112 12:27:29.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.379" endtime="20201112 12:27:29.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.375" endtime="20201112 12:27:29.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.005" endtime="20201112 12:27:29.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.005" endtime="20201112 12:27:29.402"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.411" endtime="20201112 12:27:29.430"></status>
</kw>
<msg timestamp="20201112 12:27:29.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.409" endtime="20201112 12:27:29.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.431" endtime="20201112 12:27:29.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.434" endtime="20201112 12:27:29.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.406" endtime="20201112 12:27:29.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.404" endtime="20201112 12:27:29.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.443" endtime="20201112 12:27:29.731"></status>
</kw>
<msg timestamp="20201112 12:27:29.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:29.441" endtime="20201112 12:27:29.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:29.736" endtime="20201112 12:27:29.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.744" endtime="20201112 12:27:29.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.439" endtime="20201112 12:27:29.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.437" endtime="20201112 12:27:29.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.751" level="INFO">${RESULT} = [{'time': 0.022943, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.801400000000084e-05, 'source_diff': 8.801400000000084e-05}, {'time': 0.023039014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:27:29.748" endtime="20201112 12:27:29.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.765" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:29.752" endtime="20201112 12:27:29.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.770" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.769" endtime="20201112 12:27:29.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.772" level="INFO">VALUE: [8.801400000000084e-05, 8.783299999999897e-05, 8.848599999999873e-05, 8.843099999999993e-05, 8.831999999999937e-05, 8.794500000000247e-05, 8.86800000000007e-05, 8.847199999999916e-05, 8.851400000000134e-05, 8.78189999999994e-05, 8.845799999999959e-05, 8.83189999999999e-05, 8.832000000000284e-05, 8.777800000000016e-05, 8.831999999999937e-05, 8.78059999999993e-05, 8.781999999999887e-05, 8.865200000000156e-05, 8.813800000000149e-05, 8.820799999999934e-05, 8.800000000000127e-05, 8.81670000000001e-05, 8.848599999999873e-05, 8.783299999999897e-05, 8.845899999999907e-05, 8.783399999999844e-05, 8.865299999999757e-05, 8.798599999999823e-05, 8.84730000000021e-05, 8.834699999999904e-05, 8.815299999999707e-05, 8.84999999999983e-05, 8.862499999999843e-05, 8.802800000000041e-05, 8.83059999999998e-05, 8.848599999999873e-05, 8.84999999999983e-05, 8.84999999999983e-05, 8.86800000000007e-05, 8.815300000000054e-05, 8.815200000000106e-05, 8.798599999999823e-05, 8.815200000000106e-05, 8.830500000000033e-05, 8.783299999999897e-05, 8.83189999999999e-05, 8.833299999999947e-05, 8.813900000000097e-05, 8.833399999999894e-05, 8.800000000000127e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.771" endtime="20201112 12:27:29.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.766" endtime="20201112 12:27:29.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.776" endtime="20201112 12:27:29.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.780" endtime="20201112 12:27:29.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.778" endtime="20201112 12:27:29.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.774" endtime="20201112 12:27:29.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.403" endtime="20201112 12:27:29.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.402" endtime="20201112 12:27:29.801"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.810" endtime="20201112 12:27:29.830"></status>
</kw>
<msg timestamp="20201112 12:27:29.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.808" endtime="20201112 12:27:29.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.831" endtime="20201112 12:27:29.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.834" endtime="20201112 12:27:29.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.806" endtime="20201112 12:27:29.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.803" endtime="20201112 12:27:29.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.843" endtime="20201112 12:27:30.130"></status>
</kw>
<msg timestamp="20201112 12:27:30.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.841" endtime="20201112 12:27:30.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.134" endtime="20201112 12:27:30.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.143" endtime="20201112 12:27:30.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.839" endtime="20201112 12:27:30.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.837" endtime="20201112 12:27:30.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.149" level="INFO">${RESULT} = [{'time': 0.022959292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.902799999999794e-05, 'source_diff': 8.902799999999794e-05}, {'time': 0.023057306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:30.146" endtime="20201112 12:27:30.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.163" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:30.150" endtime="20201112 12:27:30.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.168" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.167" endtime="20201112 12:27:30.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.171" level="INFO">VALUE: [8.902799999999794e-05, 8.915299999999807e-05, 8.966599999999866e-05, 8.901400000000184e-05, 8.931899999999743e-05, 8.9638999999999e-05, 8.915300000000154e-05, 8.965300000000204e-05, 8.951400000000234e-05, 8.93060000000008e-05, 8.948599999999973e-05, 8.91389999999985e-05, 8.932000000000037e-05, 8.883299999999997e-05, 8.916599999999816e-05, 8.93190000000009e-05, 8.933300000000047e-05, 8.965300000000204e-05, 8.965299999999857e-05, 8.884699999999954e-05, 8.958300000000072e-05, 8.932000000000037e-05, 8.90129999999989e-05, 8.904200000000098e-05, 8.884700000000301e-05, 8.890300000000129e-05, 8.93190000000009e-05, 8.920899999999982e-05, 8.879200000000073e-05, 8.93190000000009e-05, 8.932000000000037e-05, 8.9638999999999e-05, 8.963900000000247e-05, 8.94860000000032e-05, 8.916600000000163e-05, 8.94999999999993e-05, 8.934700000000004e-05, 8.895800000000009e-05, 8.89999999999988e-05, 8.943000000000145e-05, 8.91389999999985e-05, 8.915300000000154e-05, 8.918100000000068e-05, 8.915300000000154e-05, 8.9638999999999e-05, 8.909799999999926e-05, 8.930499999999786e-05, 8.96800000000017e-05, 8.915200000000206e-05, 8.948599999999973e-05]</msg>
<status status="PASS" starttime="20201112 12:27:30.169" endtime="20201112 12:27:30.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.164" endtime="20201112 12:27:30.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.174" endtime="20201112 12:27:30.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.178" endtime="20201112 12:27:30.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.176" endtime="20201112 12:27:30.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.173" endtime="20201112 12:27:30.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.802" endtime="20201112 12:27:30.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.801" endtime="20201112 12:27:30.199"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.208" endtime="20201112 12:27:30.228"></status>
</kw>
<msg timestamp="20201112 12:27:30.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.206" endtime="20201112 12:27:30.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.229" endtime="20201112 12:27:30.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.232" endtime="20201112 12:27:30.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.204" endtime="20201112 12:27:30.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.201" endtime="20201112 12:27:30.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.241" endtime="20201112 12:27:30.528"></status>
</kw>
<msg timestamp="20201112 12:27:30.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022931833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023022194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.239" endtime="20201112 12:27:30.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022931833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023022194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.533" endtime="20201112 12:27:30.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.541" endtime="20201112 12:27:30.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.237" endtime="20201112 12:27:30.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.235" endtime="20201112 12:27:30.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.548" level="INFO">${RESULT} = [{'time': 0.023022194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.036100000000061e-05, 'source_diff': 9.036100000000061e-05}, {'time': 0.023126194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:30.544" endtime="20201112 12:27:30.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.562" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:30.549" endtime="20201112 12:27:30.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.567" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.566" endtime="20201112 12:27:30.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.569" level="INFO">VALUE: [9.036100000000061e-05, 8.981899999999793e-05, 9.011100000000036e-05, 8.991599999999891e-05, 9.031899999999843e-05, 9.03190000000019e-05, 9.066699999999914e-05, 9.048600000000073e-05, 9.05000000000003e-05, 9.048600000000073e-05, 9.025000000000005e-05, 9.013800000000002e-05, 9.048600000000073e-05, 9.036100000000061e-05, 8.998600000000023e-05, 9.047200000000116e-05, 8.998599999999676e-05, 9.015299999999907e-05, 9.065299999999957e-05, 9.065300000000304e-05, 9.016699999999864e-05, 9.03060000000018e-05, 8.979099999999879e-05, 9.03190000000019e-05, 9.0639e-05, 9.067999999999923e-05, 9.048599999999726e-05, 9.03190000000019e-05, 9.065299999999957e-05, 9.018099999999821e-05, 9.041699999999889e-05, 9.065299999999957e-05, 9.06670000000026e-05, 8.98060000000013e-05, 8.984700000000054e-05, 8.979100000000226e-05, 8.981899999999793e-05, 9.065299999999957e-05, 9.031899999999843e-05, 8.983300000000097e-05, 9.065299999999957e-05, 9.05000000000003e-05, 8.983400000000044e-05, 9.038899999999975e-05, 8.984700000000054e-05, 8.983300000000097e-05, 8.998600000000023e-05, 8.984700000000054e-05, 9.0639e-05, 9.0639e-05]</msg>
<status status="PASS" starttime="20201112 12:27:30.568" endtime="20201112 12:27:30.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.563" endtime="20201112 12:27:30.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.573" endtime="20201112 12:27:30.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.576" endtime="20201112 12:27:30.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.575" endtime="20201112 12:27:30.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.571" endtime="20201112 12:27:30.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.200" endtime="20201112 12:27:30.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.199" endtime="20201112 12:27:30.597"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.606" endtime="20201112 12:27:30.626"></status>
</kw>
<msg timestamp="20201112 12:27:30.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.605" endtime="20201112 12:27:30.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.628" endtime="20201112 12:27:30.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.631" endtime="20201112 12:27:30.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.602" endtime="20201112 12:27:30.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.600" endtime="20201112 12:27:30.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.640" endtime="20201112 12:27:30.926"></status>
</kw>
<msg timestamp="20201112 12:27:30.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022894056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022985153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.638" endtime="20201112 12:27:30.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022894056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022985153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.930" endtime="20201112 12:27:30.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.939" endtime="20201112 12:27:30.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.636" endtime="20201112 12:27:30.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.634" endtime="20201112 12:27:30.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.946" level="INFO">${RESULT} = [{'time': 0.022985153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.109700000000179e-05, 'source_diff': 9.109700000000179e-05}, {'time': 0.023087167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:30.942" endtime="20201112 12:27:30.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.960" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:30.947" endtime="20201112 12:27:30.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.964" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.963" endtime="20201112 12:27:30.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.967" level="INFO">VALUE: [9.109700000000179e-05, 9.083399999999797e-05, 9.145900000000207e-05, 9.091699999999939e-05, 9.131899999999943e-05, 9.16520000000011e-05, 9.098599999999776e-05, 9.149999999999783e-05, 9.098600000000123e-05, 9.131899999999943e-05, 9.13199999999989e-05, 9.120799999999887e-05, 9.147300000000164e-05, 9.084699999999807e-05, 9.116600000000016e-05, 9.131899999999943e-05, 9.115300000000007e-05, 9.166700000000014e-05, 9.105599999999908e-05, 9.1332999999999e-05, 9.131899999999943e-05, 9.145799999999912e-05, 9.132000000000237e-05, 9.148599999999826e-05, 9.1639000000001e-05, 9.098599999999776e-05, 9.08329999999985e-05, 9.16520000000011e-05, 9.080500000000283e-05, 9.091699999999939e-05, 9.115300000000007e-05, 9.08199999999984e-05, 9.10000000000008e-05, 9.147200000000216e-05, 9.14870000000012e-05, 9.147299999999817e-05, 9.14719999999987e-05, 9.165199999999762e-05, 9.15000000000013e-05, 9.131899999999943e-05, 9.148600000000173e-05, 9.115300000000007e-05, 9.123600000000148e-05, 9.133399999999847e-05, 9.133399999999847e-05, 9.115300000000007e-05, 9.16520000000011e-05, 9.097200000000166e-05, 9.116600000000016e-05, 9.165300000000057e-05]</msg>
<status status="PASS" starttime="20201112 12:27:30.966" endtime="20201112 12:27:30.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.961" endtime="20201112 12:27:30.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.971" endtime="20201112 12:27:30.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.974" endtime="20201112 12:27:30.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.973" endtime="20201112 12:27:30.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.969" endtime="20201112 12:27:30.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.598" endtime="20201112 12:27:30.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.598" endtime="20201112 12:27:30.995"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.004" endtime="20201112 12:27:31.024"></status>
</kw>
<msg timestamp="20201112 12:27:31.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.003" endtime="20201112 12:27:31.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.026" endtime="20201112 12:27:31.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.028" endtime="20201112 12:27:31.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.000" endtime="20201112 12:27:31.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.998" endtime="20201112 12:27:31.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.038" endtime="20201112 12:27:31.325"></status>
</kw>
<msg timestamp="20201112 12:27:31.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022850861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.036" endtime="20201112 12:27:31.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022850861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.329" endtime="20201112 12:27:31.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.338" endtime="20201112 12:27:31.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.034" endtime="20201112 12:27:31.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.032" endtime="20201112 12:27:31.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.345" level="INFO">${RESULT} = [{'time': 0.022943514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.265300000000157e-05, 'source_diff': 9.265300000000157e-05}, {'time': 0.023047514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:31.341" endtime="20201112 12:27:31.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.359" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:31.346" endtime="20201112 12:27:31.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.363" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.362" endtime="20201112 12:27:31.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.366" level="INFO">VALUE: [9.265300000000157e-05, 9.197200000000266e-05, 9.21529999999976e-05, 9.252700000000197e-05, 9.21390000000015e-05, 9.2333e-05, 9.198599999999876e-05, 9.254199999999754e-05, 9.216699999999717e-05, 9.2333e-05, 9.219499999999978e-05, 9.215300000000107e-05, 9.248599999999926e-05, 9.266699999999767e-05, 9.21529999999976e-05, 9.248699999999874e-05, 9.248600000000273e-05, 9.184700000000254e-05, 9.21520000000016e-05, 9.220899999999935e-05, 9.18329999999995e-05, 9.231900000000043e-05, 9.20000000000018e-05, 9.183400000000244e-05, 9.26529999999981e-05, 9.261099999999939e-05, 9.266600000000166e-05, 9.234700000000304e-05, 9.20000000000018e-05, 9.198600000000223e-05, 9.20000000000018e-05, 9.24719999999997e-05, 9.198600000000223e-05, 9.226400000000162e-05, 9.219499999999978e-05, 9.233399999999947e-05, 9.249999999999883e-05, 9.26529999999981e-05, 9.198600000000223e-05, 9.266600000000166e-05, 9.212499999999846e-05, 9.212499999999846e-05, 9.188899999999778e-05, 9.215300000000107e-05, 9.183400000000244e-05, 9.226400000000162e-05, 9.268100000000071e-05, 9.216700000000064e-05, 9.265300000000157e-05, 9.248599999999926e-05]</msg>
<status status="PASS" starttime="20201112 12:27:31.365" endtime="20201112 12:27:31.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.360" endtime="20201112 12:27:31.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.370" endtime="20201112 12:27:31.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.373" endtime="20201112 12:27:31.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.372" endtime="20201112 12:27:31.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.368" endtime="20201112 12:27:31.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.996" endtime="20201112 12:27:31.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.996" endtime="20201112 12:27:31.394"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.403" endtime="20201112 12:27:31.422"></status>
</kw>
<msg timestamp="20201112 12:27:31.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.402" endtime="20201112 12:27:31.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.424" endtime="20201112 12:27:31.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.426" endtime="20201112 12:27:31.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.399" endtime="20201112 12:27:31.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.397" endtime="20201112 12:27:31.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.436" endtime="20201112 12:27:31.722"></status>
</kw>
<msg timestamp="20201112 12:27:31.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022671903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022765014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.434" endtime="20201112 12:27:31.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022671903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022765014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.726" endtime="20201112 12:27:31.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.734" endtime="20201112 12:27:31.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.432" endtime="20201112 12:27:31.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.430" endtime="20201112 12:27:31.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.741" level="INFO">${RESULT} = [{'time': 0.022765014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.311099999999989e-05, 'source_diff': 9.311099999999989e-05}, {'time': 0.022872014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:31.738" endtime="20201112 12:27:31.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.755" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:31.742" endtime="20201112 12:27:31.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.760" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.759" endtime="20201112 12:27:31.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.763" level="INFO">VALUE: [9.311099999999989e-05, 9.3333000000001e-05, 9.28200000000004e-05, 9.298599999999976e-05, 9.28200000000004e-05, 9.313899999999903e-05, 9.312499999999946e-05, 9.35139999999994e-05, 9.35139999999994e-05, 9.313899999999903e-05, 9.31529999999986e-05, 9.318100000000121e-05, 9.31529999999986e-05, 9.279200000000126e-05, 9.305499999999814e-05, 9.363899999999953e-05, 9.28200000000004e-05, 9.323600000000001e-05, 9.298599999999976e-05, 9.34859999999968e-05, 9.352799999999897e-05, 9.327799999999872e-05, 9.365199999999962e-05, 9.349999999999983e-05, 9.363899999999953e-05, 9.29590000000001e-05, 9.30139999999989e-05, 9.318000000000173e-05, 9.36659999999992e-05, 9.299999999999933e-05, 9.320900000000035e-05, 9.315300000000207e-05, 9.281900000000093e-05, 9.349999999999983e-05, 9.365300000000257e-05, 9.330600000000133e-05, 9.33200000000009e-05, 9.31529999999986e-05, 9.298599999999976e-05, 9.298599999999976e-05, 9.352799999999897e-05, 9.3639000000003e-05, 9.348600000000026e-05, 9.36529999999991e-05, 9.368099999999824e-05, 9.333400000000047e-05, 9.297299999999967e-05, 9.366699999999867e-05, 9.281900000000093e-05, 9.348600000000026e-05]</msg>
<status status="PASS" starttime="20201112 12:27:31.761" endtime="20201112 12:27:31.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.756" endtime="20201112 12:27:31.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.766" endtime="20201112 12:27:31.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.770" endtime="20201112 12:27:31.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.768" endtime="20201112 12:27:31.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.765" endtime="20201112 12:27:31.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.395" endtime="20201112 12:27:31.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.395" endtime="20201112 12:27:31.791"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.800" endtime="20201112 12:27:31.819"></status>
</kw>
<msg timestamp="20201112 12:27:31.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.798" endtime="20201112 12:27:31.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.821" endtime="20201112 12:27:31.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.823" endtime="20201112 12:27:31.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.796" endtime="20201112 12:27:31.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.793" endtime="20201112 12:27:31.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.833" endtime="20201112 12:27:32.120"></status>
</kw>
<msg timestamp="20201112 12:27:32.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.831" endtime="20201112 12:27:32.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.124" endtime="20201112 12:27:32.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.133" endtime="20201112 12:27:32.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.828" endtime="20201112 12:27:32.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.827" endtime="20201112 12:27:32.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.140" level="INFO">${RESULT} = [{'time': 0.022816083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.423600000000101e-05, 'source_diff': 9.423600000000101e-05}, {'time': 0.022925056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:32.136" endtime="20201112 12:27:32.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.154" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:32.141" endtime="20201112 12:27:32.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.158" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.157" endtime="20201112 12:27:32.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.161" level="INFO">VALUE: [9.423600000000101e-05, 9.431999999999843e-05, 9.431900000000243e-05, 9.422199999999797e-05, 9.433299999999853e-05, 9.431900000000243e-05, 9.383299999999803e-05, 9.43469999999981e-05, 9.46530000000001e-05, 9.398600000000076e-05, 9.380599999999836e-05, 9.398700000000024e-05, 9.454199999999954e-05, 9.38330000000015e-05, 9.418000000000273e-05, 9.448600000000126e-05, 9.381899999999846e-05, 9.44859999999978e-05, 9.41529999999996e-05, 9.426400000000015e-05, 9.411099999999742e-05, 9.398700000000024e-05, 9.469399999999933e-05, 9.423600000000101e-05, 9.415200000000012e-05, 9.38330000000015e-05, 9.400000000000033e-05, 9.450000000000083e-05, 9.466699999999967e-05, 9.431999999999843e-05, 9.44859999999978e-05, 9.416699999999917e-05, 9.41529999999996e-05, 9.41659999999997e-05, 9.465200000000062e-05, 9.41659999999997e-05, 9.436100000000114e-05, 9.431900000000243e-05, 9.430599999999886e-05, 9.402799999999947e-05, 9.466699999999967e-05, 9.398600000000076e-05, 9.447300000000117e-05, 9.450000000000083e-05, 9.377699999999975e-05, 9.445799999999865e-05, 9.468099999999924e-05, 9.41529999999996e-05, 9.448600000000126e-05, 9.400000000000033e-05]</msg>
<status status="PASS" starttime="20201112 12:27:32.159" endtime="20201112 12:27:32.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.154" endtime="20201112 12:27:32.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.165" endtime="20201112 12:27:32.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.168" endtime="20201112 12:27:32.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.167" endtime="20201112 12:27:32.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.163" endtime="20201112 12:27:32.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.792" endtime="20201112 12:27:32.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.791" endtime="20201112 12:27:32.189"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.198" endtime="20201112 12:27:32.218"></status>
</kw>
<msg timestamp="20201112 12:27:32.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.197" endtime="20201112 12:27:32.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.219" endtime="20201112 12:27:32.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.222" endtime="20201112 12:27:32.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.194" endtime="20201112 12:27:32.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.192" endtime="20201112 12:27:32.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.231" endtime="20201112 12:27:32.519"></status>
</kw>
<msg timestamp="20201112 12:27:32.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02290625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:32.229" endtime="20201112 12:27:32.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02290625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:32.523" endtime="20201112 12:27:32.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.531" endtime="20201112 12:27:32.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.227" endtime="20201112 12:27:32.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.225" endtime="20201112 12:27:32.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.538" level="INFO">${RESULT} = [{'time': 0.02290625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.536099999999867e-05, 'source_diff': 9.536099999999867e-05}, {'time': 0.023009264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:32.535" endtime="20201112 12:27:32.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.552" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:32.539" endtime="20201112 12:27:32.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.557" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.556" endtime="20201112 12:27:32.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.559" level="INFO">VALUE: [9.536099999999867e-05, 9.48200000000024e-05, 9.562500000000196e-05, 9.498600000000176e-05, 9.547199999999922e-05, 9.533299999999953e-05, 9.565199999999816e-05, 9.49720000000022e-05, 9.481899999999946e-05, 9.533299999999953e-05, 9.486099999999817e-05, 9.533299999999953e-05, 9.48339999999985e-05, 9.54590000000026e-05, 9.509799999999832e-05, 9.561099999999892e-05, 9.530500000000039e-05, 9.515199999999766e-05, 9.500000000000133e-05, 9.543000000000051e-05, 9.497199999999872e-05, 9.563900000000153e-05, 9.518099999999974e-05, 9.51530000000006e-05, 9.548699999999827e-05, 9.483400000000197e-05, 9.51530000000006e-05, 9.49720000000022e-05, 9.515200000000112e-05, 9.520899999999888e-05, 9.500000000000133e-05, 9.548600000000226e-05, 9.554200000000054e-05, 9.531999999999943e-05, 9.56530000000011e-05, 9.565299999999763e-05, 9.504200000000004e-05, 9.547199999999922e-05, 9.54859999999988e-05, 9.56669999999972e-05, 9.483299999999903e-05, 9.499999999999786e-05, 9.566700000000067e-05, 9.549999999999836e-05, 9.54859999999988e-05, 9.53469999999991e-05, 9.531899999999996e-05, 9.54859999999988e-05, 9.565200000000162e-05, 9.549999999999836e-05]</msg>
<status status="PASS" starttime="20201112 12:27:32.558" endtime="20201112 12:27:32.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.553" endtime="20201112 12:27:32.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.563" endtime="20201112 12:27:32.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.567" endtime="20201112 12:27:32.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.565" endtime="20201112 12:27:32.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.561" endtime="20201112 12:27:32.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.190" endtime="20201112 12:27:32.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.190" endtime="20201112 12:27:32.588"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.597" endtime="20201112 12:27:32.617"></status>
</kw>
<msg timestamp="20201112 12:27:32.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.595" endtime="20201112 12:27:32.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.618" endtime="20201112 12:27:32.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.621" endtime="20201112 12:27:32.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.593" endtime="20201112 12:27:32.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.590" endtime="20201112 12:27:32.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.630" endtime="20201112 12:27:32.918"></status>
</kw>
<msg timestamp="20201112 12:27:32.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.628" endtime="20201112 12:27:32.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.924" endtime="20201112 12:27:32.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.932" endtime="20201112 12:27:32.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.626" endtime="20201112 12:27:32.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.624" endtime="20201112 12:27:32.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.939" level="INFO">${RESULT} = [{'time': 0.022903806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.623699999999902e-05, 'source_diff': 9.623699999999902e-05}, {'time': 0.023014778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:32.936" endtime="20201112 12:27:32.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.953" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:32.940" endtime="20201112 12:27:32.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.958" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.957" endtime="20201112 12:27:32.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.960" level="INFO">VALUE: [9.623699999999902e-05, 9.632000000000043e-05, 9.58339999999995e-05, 9.58469999999996e-05, 9.640299999999838e-05, 9.631900000000096e-05, 9.631900000000096e-05, 9.602800000000147e-05, 9.615299999999813e-05, 9.630600000000086e-05, 9.577800000000122e-05, 9.58339999999995e-05, 9.581999999999993e-05, 9.6334e-05, 9.581999999999993e-05, 9.64859999999998e-05, 9.666700000000167e-05, 9.663899999999906e-05, 9.633300000000053e-05, 9.64859999999998e-05, 9.604200000000104e-05, 9.627800000000172e-05, 9.647200000000022e-05, 9.64729999999997e-05, 9.649999999999936e-05, 9.613799999999909e-05, 9.67080000000009e-05, 9.654200000000154e-05, 9.626399999999868e-05, 9.598600000000276e-05, 9.64859999999998e-05, 9.665299999999863e-05, 9.631999999999696e-05, 9.632000000000043e-05, 9.665299999999863e-05, 9.665299999999863e-05, 9.580500000000089e-05, 9.631900000000096e-05, 9.604199999999757e-05, 9.663899999999906e-05, 9.613899999999856e-05, 9.67080000000009e-05, 9.581999999999993e-05, 9.599999999999886e-05, 9.597199999999972e-05, 9.586099999999917e-05, 9.59859999999993e-05, 9.615199999999866e-05, 9.618100000000074e-05, 9.633300000000053e-05]</msg>
<status status="PASS" starttime="20201112 12:27:32.959" endtime="20201112 12:27:32.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.954" endtime="20201112 12:27:32.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.964" endtime="20201112 12:27:32.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.968" endtime="20201112 12:27:32.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.966" endtime="20201112 12:27:32.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.962" endtime="20201112 12:27:32.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.589" endtime="20201112 12:27:32.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.588" endtime="20201112 12:27:32.989"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.998" endtime="20201112 12:27:33.017"></status>
</kw>
<msg timestamp="20201112 12:27:33.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.996" endtime="20201112 12:27:33.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.019" endtime="20201112 12:27:33.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.021" endtime="20201112 12:27:33.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.993" endtime="20201112 12:27:33.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.991" endtime="20201112 12:27:33.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.033" endtime="20201112 12:27:33.321"></status>
</kw>
<msg timestamp="20201112 12:27:33.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022836611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.032" endtime="20201112 12:27:33.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022836611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.325" endtime="20201112 12:27:33.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.334" endtime="20201112 12:27:33.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.029" endtime="20201112 12:27:33.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.025" endtime="20201112 12:27:33.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.342" level="INFO">${RESULT} = [{'time': 0.022933611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.699999999999986e-05, 'source_diff': 9.699999999999986e-05}, {'time': 0.023040625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:33.338" endtime="20201112 12:27:33.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.356" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:33.343" endtime="20201112 12:27:33.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.361" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:27:33.360" endtime="20201112 12:27:33.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.364" level="INFO">VALUE: [9.699999999999986e-05, 9.731899999999849e-05, 9.71669999999987e-05, 9.74860000000008e-05, 9.765299999999963e-05, 9.699999999999986e-05, 9.69730000000002e-05, 9.69860000000003e-05, 9.747200000000122e-05, 9.765299999999963e-05, 9.731899999999849e-05, 9.676400000000265e-05, 9.727799999999925e-05, 9.747199999999775e-05, 9.698599999999682e-05, 9.713899999999956e-05, 9.683300000000103e-05, 9.681899999999799e-05, 9.730499999999892e-05, 9.681899999999799e-05, 9.701399999999943e-05, 9.699999999999986e-05, 9.751399999999993e-05, 9.766700000000267e-05, 9.745899999999766e-05, 9.69730000000002e-05, 9.716599999999923e-05, 9.681900000000146e-05, 9.733300000000153e-05, 9.69860000000003e-05, 9.772300000000095e-05, 9.74860000000008e-05, 9.74860000000008e-05, 9.762500000000049e-05, 9.682000000000093e-05, 9.74730000000007e-05, 9.750000000000036e-05, 9.730499999999892e-05, 9.76799999999993e-05, 9.765200000000016e-05, 9.750000000000036e-05, 9.74860000000008e-05, 9.715299999999913e-05, 9.747199999999775e-05, 9.737500000000024e-05, 9.768099999999877e-05, 9.682000000000093e-05, 9.731899999999849e-05, 9.765200000000016e-05, 9.681900000000146e-05]</msg>
<status status="PASS" starttime="20201112 12:27:33.362" endtime="20201112 12:27:33.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.357" endtime="20201112 12:27:33.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.367" endtime="20201112 12:27:33.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.371" endtime="20201112 12:27:33.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.369" endtime="20201112 12:27:33.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.366" endtime="20201112 12:27:33.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.990" endtime="20201112 12:27:33.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.989" endtime="20201112 12:27:33.392"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.402" endtime="20201112 12:27:33.421"></status>
</kw>
<msg timestamp="20201112 12:27:33.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.400" endtime="20201112 12:27:33.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.423" endtime="20201112 12:27:33.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.425" endtime="20201112 12:27:33.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.397" endtime="20201112 12:27:33.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.395" endtime="20201112 12:27:33.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.435" endtime="20201112 12:27:33.722"></status>
</kw>
<msg timestamp="20201112 12:27:33.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023388, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023486528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:33.433" endtime="20201112 12:27:33.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023388, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023486528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:33.726" endtime="20201112 12:27:33.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.735" endtime="20201112 12:27:33.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.431" endtime="20201112 12:27:33.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.429" endtime="20201112 12:27:33.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.742" level="INFO">${RESULT} = [{'time': 0.023486528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.85280000000005e-05, 'source_diff': 9.85280000000005e-05}, {'time': 0.023594542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:33.738" endtime="20201112 12:27:33.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.756" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:33.743" endtime="20201112 12:27:33.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.761" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:27:33.760" endtime="20201112 12:27:33.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.763" level="INFO">VALUE: [9.85280000000005e-05, 9.848599999999832e-05, 9.865300000000063e-05, 9.866600000000073e-05, 9.783300000000203e-05, 9.863900000000106e-05, 9.781900000000246e-05, 9.815300000000013e-05, 9.781899999999899e-05, 9.829199999999982e-05, 9.84999999999979e-05, 9.81669999999997e-05, 9.845799999999919e-05, 9.833299999999906e-05, 9.815200000000066e-05, 9.797199999999825e-05, 9.781899999999899e-05, 9.865300000000063e-05, 9.848599999999832e-05, 9.81669999999997e-05, 9.831999999999896e-05, 9.800000000000086e-05, 9.851299999999799e-05, 9.79999999999974e-05, 9.863800000000159e-05, 9.781899999999899e-05, 9.831899999999949e-05, 9.816700000000317e-05, 9.831899999999949e-05, 9.806899999999924e-05, 9.788900000000031e-05, 9.86670000000002e-05, 9.79730000000012e-05, 9.800000000000086e-05, 9.777799999999975e-05, 9.847200000000222e-05, 9.830499999999992e-05, 9.865300000000063e-05, 9.847200000000222e-05, 9.788800000000084e-05, 9.831999999999896e-05, 9.782000000000193e-05, 9.813900000000056e-05, 9.84730000000017e-05, 9.815200000000066e-05, 9.815200000000066e-05, 9.872299999999848e-05, 9.834699999999863e-05, 9.84999999999979e-05, 9.815300000000013e-05]</msg>
<status status="PASS" starttime="20201112 12:27:33.762" endtime="20201112 12:27:33.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.757" endtime="20201112 12:27:33.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.767" endtime="20201112 12:27:33.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.771" endtime="20201112 12:27:33.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.769" endtime="20201112 12:27:33.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.765" endtime="20201112 12:27:33.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.393" endtime="20201112 12:27:33.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.393" endtime="20201112 12:27:33.792"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.802" endtime="20201112 12:27:33.821"></status>
</kw>
<msg timestamp="20201112 12:27:33.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.800" endtime="20201112 12:27:33.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.823" endtime="20201112 12:27:33.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.825" endtime="20201112 12:27:33.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.797" endtime="20201112 12:27:33.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.795" endtime="20201112 12:27:33.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.835" endtime="20201112 12:27:34.122"></status>
</kw>
<msg timestamp="20201112 12:27:34.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023549417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023648292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.833" endtime="20201112 12:27:34.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023549417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023648292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.127" endtime="20201112 12:27:34.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.135" endtime="20201112 12:27:34.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.830" endtime="20201112 12:27:34.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.829" endtime="20201112 12:27:34.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:34.142" level="INFO">${RESULT} = [{'time': 0.023648292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.887500000000174e-05, 'source_diff': 9.887500000000174e-05}, {'time': 0.023753319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:34.139" endtime="20201112 12:27:34.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:34.156" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:34.143" endtime="20201112 12:27:34.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.161" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:27:34.160" endtime="20201112 12:27:34.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.163" level="INFO">VALUE: [9.887500000000174e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.966600000000173e-05, 9.963899999999859e-05, 9.926399999999821e-05, 9.89999999999984e-05, 9.963899999999859e-05, 9.94999999999989e-05, 9.879200000000032e-05, 9.881999999999946e-05, 9.88059999999999e-05, 9.883399999999903e-05, 9.89999999999984e-05, 9.877700000000128e-05, 9.881899999999999e-05, 9.881899999999999e-05, 9.931900000000049e-05, 9.9334000000003e-05, 9.966699999999773e-05, 9.89860000000023e-05, 9.898599999999882e-05, 9.965300000000163e-05, 9.944400000000062e-05, 9.905600000000014e-05, 9.892999999999708e-05, 9.915300000000113e-05, 9.934699999999963e-05, 9.881999999999946e-05, 9.94999999999989e-05, 9.931999999999996e-05, 9.915300000000113e-05, 9.945899999999966e-05, 9.967999999999783e-05, 9.89860000000023e-05, 9.945800000000019e-05, 9.881899999999999e-05, 9.9028000000001e-05, 9.938799999999887e-05, 9.965299999999816e-05, 9.918100000000027e-05, 9.933399999999953e-05, 9.900000000000186e-05, 9.883299999999956e-05, 9.881899999999999e-05, 9.947199999999976e-05, 9.898599999999882e-05, 9.947199999999976e-05, 9.933300000000006e-05, 9.933300000000006e-05]</msg>
<status status="PASS" starttime="20201112 12:27:34.162" endtime="20201112 12:27:34.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.157" endtime="20201112 12:27:34.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.167" endtime="20201112 12:27:34.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:34.171" endtime="20201112 12:27:34.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.169" endtime="20201112 12:27:34.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.165" endtime="20201112 12:27:34.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.793" endtime="20201112 12:27:34.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.793" endtime="20201112 12:27:34.192"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.201" endtime="20201112 12:27:34.221"></status>
</kw>
<msg timestamp="20201112 12:27:34.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.200" endtime="20201112 12:27:34.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.223" endtime="20201112 12:27:34.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.226" endtime="20201112 12:27:34.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.197" endtime="20201112 12:27:34.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.195" endtime="20201112 12:27:34.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.235" endtime="20201112 12:27:34.524"></status>
</kw>
<msg timestamp="20201112 12:27:34.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023429208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023529611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.233" endtime="20201112 12:27:34.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023429208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023529611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.528" endtime="20201112 12:27:34.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.536" endtime="20201112 12:27:34.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.231" endtime="20201112 12:27:34.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.229" endtime="20201112 12:27:34.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:34.543" level="INFO">${RESULT} = [{'time': 0.023529611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010040299999999891, 'source_diff': 0.00010040299999999891}, {'time': 0.023636583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:34.540" endtime="20201112 12:27:34.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:34.557" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:34.544" endtime="20201112 12:27:34.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.562" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:27:34.561" endtime="20201112 12:27:34.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.564" level="INFO">VALUE: [0.00010040299999999891, 0.00010012499999999952, 9.998599999999983e-05, 0.00010015299999999866, 0.00010031899999999802, 0.00010048600000000033, 9.998599999999983e-05, 0.0001004999999999999, 0.00010015299999999866, 0.00010042999999999858, 0.00010015199999999919, 0.00010031900000000149, 0.00010030500000000192, 0.00010033299999999759, 0.00010013899999999909, 0.0001004999999999999, 0.0001006670000000022, 0.00010065299999999916, 0.00010017999999999833, 9.99869999999993e-05, 9.983300000000056e-05, 0.00010066599999999926, 0.0001001809999999978, 9.997200000000026e-05, 0.00010001399999999896, 9.984700000000013e-05, 0.00010000000000000286, 0.00010032000000000096, 9.998700000000277e-05, 0.00010032000000000096, 0.00010066599999999926, 0.00010065199999999969, 0.00010065300000000263, 9.981900000000099e-05, 0.00010019499999999737, 0.0001006809999999983, 0.00010073600000000058, 0.0001004869999999998, 0.00010066699999999873, 0.00010032000000000096, 0.00010051399999999946, 0.00010031900000000149, 0.00010048599999999686, 9.979200000000132e-05, 0.00010033299999999759, 0.00010013899999999909, 0.00010048600000000033, 9.998599999999983e-05, 0.0001003610000000002, 0.00010066600000000273]</msg>
<status status="PASS" starttime="20201112 12:27:34.563" endtime="20201112 12:27:34.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.558" endtime="20201112 12:27:34.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.568" endtime="20201112 12:27:34.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:34.572" endtime="20201112 12:27:34.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.570" endtime="20201112 12:27:34.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.566" endtime="20201112 12:27:34.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.193" endtime="20201112 12:27:34.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.193" endtime="20201112 12:27:34.593"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.602" endtime="20201112 12:27:34.621"></status>
</kw>
<msg timestamp="20201112 12:27:34.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.600" endtime="20201112 12:27:34.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.623" endtime="20201112 12:27:34.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.626" endtime="20201112 12:27:34.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.597" endtime="20201112 12:27:34.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.595" endtime="20201112 12:27:34.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.635" endtime="20201112 12:27:34.923"></status>
</kw>
<msg timestamp="20201112 12:27:34.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02296375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:34.633" endtime="20201112 12:27:34.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02296375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:34.927" endtime="20201112 12:27:34.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.935" endtime="20201112 12:27:34.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.631" endtime="20201112 12:27:34.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.629" endtime="20201112 12:27:34.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:34.942" level="INFO">${RESULT} = [{'time': 0.02296375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010084700000000113, 'source_diff': 0.00010084700000000113}, {'time': 0.023074764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:27:34.939" endtime="20201112 12:27:34.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:34.956" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:34.943" endtime="20201112 12:27:34.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.960" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:27:34.959" endtime="20201112 12:27:34.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.963" level="INFO">VALUE: [0.00010084700000000113, 0.00010113900000000009, 0.00010113900000000009, 0.0001015000000000009, 0.0001009870000000003, 0.00010098600000000083, 0.00010131899999999902, 0.00010166699999999973, 0.0001015000000000009, 0.0001010000000000004, 0.00010115299999999966, 0.00010148600000000133, 0.0001015000000000009, 0.00010098600000000083, 0.00010143100000000252, 0.00010115200000000019, 0.00010081900000000199, 0.00010170900000000191, 0.00010148600000000133, 0.00010130599999999892, 0.0001015000000000009, 0.00010102799999999953, 0.00010148600000000133, 0.00010147300000000123, 0.0001014870000000008, 0.00010080500000000242, 0.00010130499999999945, 0.00010126400000000021, 0.00010147199999999829, 0.00010084700000000113, 0.00010115299999999966, 0.0001015000000000009, 0.0001011809999999988, 0.000101722000000002, 0.00010132000000000196, 0.00010079100000000285, 0.00010094400000000212, 0.00010113900000000009, 0.00010098599999999736, 0.00010106900000000224, 0.00010147199999999829, 0.0001016670000000032, 0.00010097300000000073, 0.0001014870000000008, 0.00010167999999999983, 0.00010098600000000083, 0.00010097200000000126, 0.00010148600000000133, 0.00010163899999999712, 0.00010113900000000009]</msg>
<status status="PASS" starttime="20201112 12:27:34.961" endtime="20201112 12:27:34.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.957" endtime="20201112 12:27:34.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.967" endtime="20201112 12:27:34.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:34.970" endtime="20201112 12:27:34.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.969" endtime="20201112 12:27:34.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.965" endtime="20201112 12:27:34.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.594" endtime="20201112 12:27:34.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.593" endtime="20201112 12:27:34.992"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.001" endtime="20201112 12:27:35.021"></status>
</kw>
<msg timestamp="20201112 12:27:35.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.999" endtime="20201112 12:27:35.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.023" endtime="20201112 12:27:35.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.025" endtime="20201112 12:27:35.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.997" endtime="20201112 12:27:35.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.994" endtime="20201112 12:27:35.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.035" endtime="20201112 12:27:35.321"></status>
</kw>
<msg timestamp="20201112 12:27:35.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023685556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023787361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.033" endtime="20201112 12:27:35.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023685556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023787361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.326" endtime="20201112 12:27:35.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.334" endtime="20201112 12:27:35.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.031" endtime="20201112 12:27:35.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.029" endtime="20201112 12:27:35.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:35.341" level="INFO">${RESULT} = [{'time': 0.023787361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010180499999999995, 'source_diff': 0.00010180499999999995}, {'time': 0.023896389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:35.337" endtime="20201112 12:27:35.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:35.355" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:35.342" endtime="20201112 12:27:35.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.359" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:27:35.358" endtime="20201112 12:27:35.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.362" level="INFO">VALUE: [0.00010180499999999995, 0.00010266700000000073, 0.00010230599999999992, 0.0001020139999999975, 0.00010212500000000152, 0.00010198599999999836, 0.00010266600000000126, 0.00010215200000000119, 0.00010218000000000033, 0.00010198599999999836, 0.00010248600000000233, 0.00010216700000000023, 0.00010208299999999934, 0.00010180499999999995, 0.000101819999999999, 0.0001023199999999995, 0.00010199999999999793, 0.00010265200000000169, 0.00010266600000000126, 0.0001025000000000019, 0.00010241700000000048, 0.0001020420000000001, 0.00010215300000000066, 0.00010245900000000266, 0.00010213900000000109, 0.0001023199999999995, 0.00010198599999999836, 0.00010252800000000103, 0.00010255600000000017, 0.00010216700000000023, 0.00010249999999999843, 0.00010183300000000256, 0.00010199999999999793, 0.00010233399999999906, 0.00010263900000000159, 0.00010248599999999886, 0.00010215200000000119, 0.00010215300000000066, 0.0001020420000000001, 0.00010248599999999886, 0.00010213900000000109, 0.00010247200000000276, 0.000101819999999999, 0.00010249999999999843, 0.00010251299999999852, 0.0001025000000000019, 0.00010212500000000152, 0.00010215199999999772, 0.00010234700000000263, 0.00010213900000000109]</msg>
<status status="PASS" starttime="20201112 12:27:35.361" endtime="20201112 12:27:35.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.356" endtime="20201112 12:27:35.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.366" endtime="20201112 12:27:35.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:35.370" endtime="20201112 12:27:35.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.369" endtime="20201112 12:27:35.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.364" endtime="20201112 12:27:35.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.993" endtime="20201112 12:27:35.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.992" endtime="20201112 12:27:35.392"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.401" endtime="20201112 12:27:35.421"></status>
</kw>
<msg timestamp="20201112 12:27:35.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.399" endtime="20201112 12:27:35.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.423" endtime="20201112 12:27:35.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.425" endtime="20201112 12:27:35.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.397" endtime="20201112 12:27:35.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.394" endtime="20201112 12:27:35.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.435" endtime="20201112 12:27:35.722"></status>
</kw>
<msg timestamp="20201112 12:27:35.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023153486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.433" endtime="20201112 12:27:35.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023153486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.726" endtime="20201112 12:27:35.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.734" endtime="20201112 12:27:35.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.431" endtime="20201112 12:27:35.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.429" endtime="20201112 12:27:35.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:35.741" level="INFO">${RESULT} = [{'time': 0.023256847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010336099999999973, 'source_diff': 0.00010336099999999973}, {'time': 0.023374861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:35.737" endtime="20201112 12:27:35.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:35.755" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:35.742" endtime="20201112 12:27:35.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.759" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:27:35.758" endtime="20201112 12:27:35.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.762" level="INFO">VALUE: [0.00010336099999999973, 0.00010362499999999955, 0.00010281900000000052, 0.00010315299999999819, 0.00010297199999999979, 0.00010282, 0.00010283399999999956, 0.00010283300000000009, 0.00010293000000000108, 0.00010311099999999948, 0.00010280500000000095, 0.00010315299999999819, 0.00010283399999999956, 0.00010277800000000128, 0.00010349999999999943, 0.00010313900000000209, 0.00010299999999999893, 0.0001029160000000015, 0.0001030000000000024, 0.00010315300000000166, 0.00010293100000000055, 0.00010366699999999826, 0.0001036810000000013, 0.00010368099999999783, 0.00010329199999999789, 0.00010283399999999956, 0.00010333300000000059, 0.00010349999999999943, 0.00010297199999999979, 0.00010313899999999862, 0.000103513999999999, 0.00010298600000000283, 0.00010298599999999936, 0.00010365299999999869, 0.00010298599999999936, 0.00010280600000000042, 0.00010331900000000102, 0.00010280500000000095, 0.00010281900000000052, 0.00010349999999999943, 0.00010330500000000145, 0.00010366699999999826, 0.00010282, 0.0001033200000000005, 0.00010331999999999703, 0.00010274999999999868, 0.00010329100000000188, 0.00010330500000000145, 0.00010277800000000128, 0.00010347200000000029]</msg>
<status status="PASS" starttime="20201112 12:27:35.760" endtime="20201112 12:27:35.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.756" endtime="20201112 12:27:35.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.765" endtime="20201112 12:27:35.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:35.769" endtime="20201112 12:27:35.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.768" endtime="20201112 12:27:35.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.764" endtime="20201112 12:27:35.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.393" endtime="20201112 12:27:35.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.392" endtime="20201112 12:27:35.790"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.799" endtime="20201112 12:27:35.820"></status>
</kw>
<msg timestamp="20201112 12:27:35.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.798" endtime="20201112 12:27:35.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.821" endtime="20201112 12:27:35.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.824" endtime="20201112 12:27:35.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.795" endtime="20201112 12:27:35.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.793" endtime="20201112 12:27:35.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.833" endtime="20201112 12:27:36.120"></status>
</kw>
<msg timestamp="20201112 12:27:36.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023003444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023107639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.831" endtime="20201112 12:27:36.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023003444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023107639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.125" endtime="20201112 12:27:36.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.133" endtime="20201112 12:27:36.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.829" endtime="20201112 12:27:36.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.827" endtime="20201112 12:27:36.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.140" level="INFO">${RESULT} = [{'time': 0.023107639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001041949999999979, 'source_diff': 0.0001041949999999979}, {'time': 0.023226681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:36.136" endtime="20201112 12:27:36.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.154" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:36.141" endtime="20201112 12:27:36.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.158" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.157" endtime="20201112 12:27:36.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.161" level="INFO">VALUE: [0.0001041949999999979, 0.00010454199999999914, 0.0001040139999999995, 0.00010430499999999898, 0.00010384700000000066, 0.00010383300000000109, 0.00010430499999999898, 0.00010399999999999993, 0.00010465299999999969, 0.00010381899999999805, 0.00010431899999999855, 0.00010448599999999739, 0.00010383400000000056, 0.00010380600000000142, 0.00010399999999999993, 0.00010383300000000109, 0.00010467999999999936, 0.00010450000000000043, 0.00010466699999999926, 0.00010448600000000086, 0.00010398600000000036, 0.00010415300000000266, 0.00010397299999999679, 0.00010399999999999993, 0.0001043200000000015, 0.00010445799999999825, 0.000104514, 0.00010383300000000109, 0.00010466699999999926, 0.00010381900000000152, 0.00010465299999999969, 0.00010448600000000086, 0.00010399999999999993, 0.00010416699999999876, 0.00010381900000000152, 0.00010452799999999957, 0.00010415199999999972, 0.00010412500000000005, 0.00010413899999999962, 0.00010465299999999969, 0.00010463900000000012, 0.00010463900000000012, 0.00010447300000000076, 0.000103820000000001, 0.00010448600000000086, 0.00010448600000000086, 0.00010383300000000109, 0.00010431899999999855, 0.00010466699999999926, 0.00010427799999999932]</msg>
<status status="PASS" starttime="20201112 12:27:36.159" endtime="20201112 12:27:36.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.154" endtime="20201112 12:27:36.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.164" endtime="20201112 12:27:36.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.168" endtime="20201112 12:27:36.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.166" endtime="20201112 12:27:36.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.163" endtime="20201112 12:27:36.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.791" endtime="20201112 12:27:36.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.791" endtime="20201112 12:27:36.189"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.198" endtime="20201112 12:27:36.218"></status>
</kw>
<msg timestamp="20201112 12:27:36.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.196" endtime="20201112 12:27:36.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.220" endtime="20201112 12:27:36.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.222" endtime="20201112 12:27:36.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.194" endtime="20201112 12:27:36.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.192" endtime="20201112 12:27:36.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.232" endtime="20201112 12:27:36.518"></status>
</kw>
<msg timestamp="20201112 12:27:36.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022761333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022866972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.230" endtime="20201112 12:27:36.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022761333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022866972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.522" endtime="20201112 12:27:36.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.530" endtime="20201112 12:27:36.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.227" endtime="20201112 12:27:36.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.226" endtime="20201112 12:27:36.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.537" level="INFO">${RESULT} = [{'time': 0.022866972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010563899999999765, 'source_diff': 0.00010563899999999765}, {'time': 0.022980986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:36.534" endtime="20201112 12:27:36.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.551" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:36.538" endtime="20201112 12:27:36.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.556" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.555" endtime="20201112 12:27:36.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.558" level="INFO">VALUE: [0.00010563899999999765, 0.00010548599999999839, 0.00010486099999999776, 0.00010515300000000019, 0.00010531999999999903, 0.00010566700000000026, 0.00010530599999999946, 0.00010565300000000069, 0.00010513899999999715, 0.00010565300000000069, 0.00010490299999999994, 0.00010483400000000156, 0.00010530599999999946, 0.0001051949999999989, 0.00010565300000000069, 0.00010500000000000093, 0.00010480599999999896, 0.00010565300000000069, 0.00010481899999999905, 0.00010498599999999789, 0.00010497200000000179, 0.00010531899999999955, 0.00010550000000000143, 0.00010481999999999853, 0.00010552700000000109, 0.00010477799999999982, 0.00010475000000000068, 0.00010517999999999986, 0.00010536099999999826, 0.00010549999999999796, 0.00010483299999999862, 0.00010566700000000026, 0.00010513900000000062, 0.00010563900000000112, 0.00010515300000000019, 0.00010531999999999903, 0.00010548600000000186, 0.00010498599999999789, 0.00010498600000000136, 0.00010480499999999948, 0.00010481900000000252, 0.00010499999999999746, 0.00010491699999999951, 0.0001053200000000025, 0.00010518099999999933, 0.00010566700000000026, 0.00010550000000000143, 0.00010500000000000093, 0.00010533299999999912, 0.00010565300000000069]</msg>
<status status="PASS" starttime="20201112 12:27:36.557" endtime="20201112 12:27:36.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.552" endtime="20201112 12:27:36.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.562" endtime="20201112 12:27:36.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.565" endtime="20201112 12:27:36.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.564" endtime="20201112 12:27:36.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.560" endtime="20201112 12:27:36.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.190" endtime="20201112 12:27:36.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.189" endtime="20201112 12:27:36.586"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.595" endtime="20201112 12:27:36.615"></status>
</kw>
<msg timestamp="20201112 12:27:36.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.594" endtime="20201112 12:27:36.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.617" endtime="20201112 12:27:36.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.620" endtime="20201112 12:27:36.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.591" endtime="20201112 12:27:36.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.589" endtime="20201112 12:27:36.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.629" endtime="20201112 12:27:36.916"></status>
</kw>
<msg timestamp="20201112 12:27:36.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022775778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022881667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.627" endtime="20201112 12:27:36.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022775778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022881667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.921" endtime="20201112 12:27:36.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.929" endtime="20201112 12:27:36.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.625" endtime="20201112 12:27:36.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.623" endtime="20201112 12:27:36.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.936" level="INFO">${RESULT} = [{'time': 0.022881667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010588900000000137, 'source_diff': 0.00010588900000000137}, {'time': 0.022998681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:36.933" endtime="20201112 12:27:36.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.950" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:36.937" endtime="20201112 12:27:36.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.954" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.953" endtime="20201112 12:27:36.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.957" level="INFO">VALUE: [0.00010588900000000137, 0.00010634799999999917, 0.0001061949999999999, 0.00010584699999999919, 0.00010649999999999896, 0.00010592999999999714, 0.00010647199999999982, 0.00010665300000000169, 0.00010580599999999996, 0.00010630600000000046, 0.00010665299999999822, 0.00010598599999999889, 0.00010648700000000233, 0.00010615200000000172, 0.00010615299999999772, 0.00010611100000000248, 0.00010615300000000119, 0.00010631900000000055, 0.00010598600000000236, 0.00010647199999999982, 0.00010644500000000015, 0.00010581900000000005, 0.00010634699999999969, 0.00010616600000000129, 0.00010598600000000236, 0.00010584699999999919, 0.00010643100000000058, 0.00010652800000000157, 0.00010581999999999953, 0.00010605500000000073, 0.00010598700000000183, 0.00010615300000000119, 0.00010648599999999939, 0.00010608299999999987, 0.00010615300000000119, 0.00010661099999999951, 0.0001060279999999976, 0.00010584699999999919, 0.00010665300000000169, 0.00010616700000000076, 0.0001060140000000015, 0.00010583299999999962, 0.00010648599999999939, 0.0001060279999999976, 0.00010581900000000005, 0.00010583299999999962, 0.00010648599999999939, 0.0001058339999999991, 0.00010618100000000033, 0.00010666700000000126]</msg>
<status status="PASS" starttime="20201112 12:27:36.956" endtime="20201112 12:27:36.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.951" endtime="20201112 12:27:36.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.961" endtime="20201112 12:27:36.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.964" endtime="20201112 12:27:36.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.963" endtime="20201112 12:27:36.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.959" endtime="20201112 12:27:36.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.587" endtime="20201112 12:27:36.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.587" endtime="20201112 12:27:36.985"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.994" endtime="20201112 12:27:37.014"></status>
</kw>
<msg timestamp="20201112 12:27:37.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.993" endtime="20201112 12:27:37.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.016" endtime="20201112 12:27:37.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.018" endtime="20201112 12:27:37.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.990" endtime="20201112 12:27:37.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.988" endtime="20201112 12:27:37.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.028" endtime="20201112 12:27:37.314"></status>
</kw>
<msg timestamp="20201112 12:27:37.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022939833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023047542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.026" endtime="20201112 12:27:37.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022939833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023047542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.319" endtime="20201112 12:27:37.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.327" endtime="20201112 12:27:37.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.024" endtime="20201112 12:27:37.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.022" endtime="20201112 12:27:37.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.334" level="INFO">${RESULT} = [{'time': 0.023047542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010770900000000097, 'source_diff': 0.00010770900000000097}, {'time': 0.023161569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:37.331" endtime="20201112 12:27:37.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.348" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:37.335" endtime="20201112 12:27:37.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.352" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.351" endtime="20201112 12:27:37.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.355" level="INFO">VALUE: [0.00010770900000000097, 0.00010734700000000069, 0.00010695800000000075, 0.00010742999999999864, 0.00010765199999999975, 0.00010768100000000183, 0.00010716700000000176, 0.00010699999999999946, 0.00010680600000000096, 0.0001068340000000001, 0.00010759800000000042, 0.00010716600000000229, 0.00010749999999999996, 0.00010716599999999882, 0.00010684700000000019, 0.00010748599999999692, 0.00010754100000000266, 0.00010730599999999799, 0.00010683300000000062, 0.00010704200000000164, 0.0001070829999999974, 0.00010715200000000272, 0.00010715200000000272, 0.00010768000000000236, 0.00010699999999999946, 0.00010766699999999879, 0.00010677800000000182, 0.0001068340000000001, 0.00010751300000000005, 0.00010766699999999879, 0.00010766599999999932, 0.00010697200000000032, 0.00010680499999999801, 0.00010730500000000198, 0.00010697200000000032, 0.00010684700000000019, 0.00010699999999999946, 0.00010715299999999872, 0.00010749999999999996, 0.00010744500000000115, 0.00010765199999999975, 0.00010683300000000062, 0.00010715299999999872, 0.00010765299999999922, 0.00010716699999999829, 0.00010697200000000032, 0.00010682000000000053, 0.00010683399999999663, 0.00010684700000000019, 0.00010734700000000069]</msg>
<status status="PASS" starttime="20201112 12:27:37.354" endtime="20201112 12:27:37.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.349" endtime="20201112 12:27:37.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.359" endtime="20201112 12:27:37.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.362" endtime="20201112 12:27:37.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.361" endtime="20201112 12:27:37.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.357" endtime="20201112 12:27:37.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.986" endtime="20201112 12:27:37.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.986" endtime="20201112 12:27:37.383"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.392" endtime="20201112 12:27:37.413"></status>
</kw>
<msg timestamp="20201112 12:27:37.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.390" endtime="20201112 12:27:37.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.414" endtime="20201112 12:27:37.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.417" endtime="20201112 12:27:37.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.388" endtime="20201112 12:27:37.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.386" endtime="20201112 12:27:37.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.426" endtime="20201112 12:27:37.715"></status>
</kw>
<msg timestamp="20201112 12:27:37.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023075889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02318375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:37.425" endtime="20201112 12:27:37.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023075889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02318375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:37.719" endtime="20201112 12:27:37.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.727" endtime="20201112 12:27:37.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.422" endtime="20201112 12:27:37.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.420" endtime="20201112 12:27:37.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.734" level="INFO">${RESULT} = [{'time': 0.02318375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010786100000000076, 'source_diff': 0.00010786100000000076}, {'time': 0.023300764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:27:37.731" endtime="20201112 12:27:37.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.748" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:37.735" endtime="20201112 12:27:37.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.752" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.751" endtime="20201112 12:27:37.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.755" level="INFO">VALUE: [0.00010786100000000076, 0.00010783300000000162, 0.00010831999999999856, 0.00010850000000000096, 0.00010851299999999758, 0.00010865200000000075, 0.00010840299999999997, 0.0001085699999999988, 0.00010833299999999865, 0.00010813900000000015, 0.00010849999999999749, 0.0001081950000000019, 0.00010781999999999806, 0.00010851300000000105, 0.00010833300000000212, 0.00010861099999999804, 0.0001085829999999989, 0.00010794400000000218, 0.00010798600000000089, 0.00010865300000000022, 0.00010851400000000053, 0.00010811100000000101, 0.00010848699999999739, 0.00010829199999999942, 0.00010863800000000118, 0.00010865200000000075, 0.00010780600000000196, 0.00010783300000000162, 0.00010787500000000033, 0.00010798600000000089, 0.00010798600000000089, 0.00010847300000000129, 0.00010831999999999856, 0.00010865200000000075, 0.00010783299999999815, 0.00010830499999999951, 0.00010868099999999936, 0.00010784700000000119, 0.00010795800000000175, 0.00010848600000000139, 0.00010831999999999856, 0.00010800000000000046, 0.00010800000000000046, 0.00010849999999999749, 0.00010784700000000119, 0.00010833299999999865, 0.00010851400000000053, 0.00010818099999999886, 0.00010851400000000053, 0.00010780599999999849]</msg>
<status status="PASS" starttime="20201112 12:27:37.753" endtime="20201112 12:27:37.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.749" endtime="20201112 12:27:37.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.758" endtime="20201112 12:27:37.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.762" endtime="20201112 12:27:37.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.761" endtime="20201112 12:27:37.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.757" endtime="20201112 12:27:37.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.384" endtime="20201112 12:27:37.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.383" endtime="20201112 12:27:37.783"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.792" endtime="20201112 12:27:37.813"></status>
</kw>
<msg timestamp="20201112 12:27:37.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.790" endtime="20201112 12:27:37.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.814" endtime="20201112 12:27:37.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.817" endtime="20201112 12:27:37.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.788" endtime="20201112 12:27:37.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.786" endtime="20201112 12:27:37.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.826" endtime="20201112 12:27:38.113"></status>
</kw>
<msg timestamp="20201112 12:27:38.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.825" endtime="20201112 12:27:38.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.117" endtime="20201112 12:27:38.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.126" endtime="20201112 12:27:38.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.822" endtime="20201112 12:27:38.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.820" endtime="20201112 12:27:38.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.132" level="INFO">${RESULT} = [{'time': 0.022748917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010976400000000178, 'source_diff': 0.00010976400000000178}, {'time': 0.022866958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:38.129" endtime="20201112 12:27:38.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:38.146" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:38.133" endtime="20201112 12:27:38.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.151" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:27:38.150" endtime="20201112 12:27:38.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.153" level="INFO">VALUE: [0.00010976400000000178, 0.00010966600000000132, 0.00010881899999999958, 0.00010898599999999842, 0.00010883300000000262, 0.00010949999999999849, 0.00010883299999999915, 0.00010933299999999965, 0.00010916700000000029, 0.00010916700000000029, 0.00010915300000000072, 0.00010933299999999965, 0.00010898600000000189, 0.00010877700000000087, 0.00010900000000000146, 0.00010968100000000036, 0.00010947199999999935, 0.00010965300000000122, 0.00010947199999999935, 0.00010963900000000165, 0.00010932000000000303, 0.00010931900000000008, 0.00010963899999999818, 0.00010931900000000008, 0.00010881899999999958, 0.00010898599999999842, 0.00010916700000000029, 0.00010948599999999892, 0.00010916700000000029, 0.00010883300000000262, 0.00010963799999999871, 0.00010881899999999958, 0.00010948600000000239, 0.00010963900000000165, 0.00010947199999999935, 0.00010950000000000196, 0.00010934700000000269, 0.00010881999999999906, 0.00010947299999999882, 0.00010902799999999713, 0.00010916600000000082, 0.00010931900000000008, 0.00010899999999999799, 0.00010948599999999892, 0.00010915299999999725, 0.00010913900000000115, 0.00010880599999999949, 0.00010966700000000079, 0.00010901399999999756, 0.00010899999999999799]</msg>
<status status="PASS" starttime="20201112 12:27:38.152" endtime="20201112 12:27:38.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.147" endtime="20201112 12:27:38.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.216" endtime="20201112 12:27:38.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.220" endtime="20201112 12:27:38.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.218" endtime="20201112 12:27:38.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.214" endtime="20201112 12:27:38.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.784" endtime="20201112 12:27:38.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.783" endtime="20201112 12:27:38.241"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.250" endtime="20201112 12:27:38.270"></status>
</kw>
<msg timestamp="20201112 12:27:38.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.248" endtime="20201112 12:27:38.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.272" endtime="20201112 12:27:38.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.274" endtime="20201112 12:27:38.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.245" endtime="20201112 12:27:38.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.243" endtime="20201112 12:27:38.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.284" endtime="20201112 12:27:38.570"></status>
</kw>
<msg timestamp="20201112 12:27:38.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022889194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.282" endtime="20201112 12:27:38.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022889194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.574" endtime="20201112 12:27:38.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.583" endtime="20201112 12:27:38.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.279" endtime="20201112 12:27:38.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.277" endtime="20201112 12:27:38.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.589" level="INFO">${RESULT} = [{'time': 0.022889194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011002700000000212, 'source_diff': 0.00011002700000000212}, {'time': 0.023012208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:38.586" endtime="20201112 12:27:38.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:38.603" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:38.590" endtime="20201112 12:27:38.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.608" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:27:38.607" endtime="20201112 12:27:38.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.611" level="INFO">VALUE: [0.00011002700000000212, 0.00011033300000000065, 0.00011065299999999875, 0.00011049999999999949, 0.00011066700000000179, 0.00010982000000000006, 0.0001098479999999992, 0.00010983399999999963, 0.00010999999999999899, 0.00011001399999999856, 0.00010999999999999899, 0.00011001399999999856, 0.00010977799999999788, 0.0001100280000000016, 0.00010984699999999972, 0.0001103479999999997, 0.00011051399999999906, 0.00010995899999999975, 0.00011065199999999928, 0.00010983300000000015, 0.00010998599999999942, 0.00011033300000000065, 0.00011016700000000129, 0.00011049999999999949, 0.00011068100000000136, 0.00011066699999999832, 0.00011001299999999908, 0.00011051399999999906, 0.00010980500000000101, 0.00011033300000000065, 0.00010999999999999899, 0.00011069500000000093, 0.00011048599999999992, 0.00011030600000000099, 0.00011033400000000013, 0.00011048700000000286, 0.00011001400000000203, 0.00010984699999999972, 0.00010998599999999942, 0.00011047200000000035, 0.00011009699999999997, 0.00011048599999999992, 0.00011013899999999868, 0.00010980600000000049, 0.00010999999999999899, 0.00011033300000000065, 0.00011031899999999761, 0.00010981900000000058, 0.00011048599999999992, 0.00011031900000000108]</msg>
<status status="PASS" starttime="20201112 12:27:38.609" endtime="20201112 12:27:38.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.604" endtime="20201112 12:27:38.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.614" endtime="20201112 12:27:38.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.618" endtime="20201112 12:27:38.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.616" endtime="20201112 12:27:38.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.613" endtime="20201112 12:27:38.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.242" endtime="20201112 12:27:38.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.241" endtime="20201112 12:27:38.639"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.648" endtime="20201112 12:27:38.669"></status>
</kw>
<msg timestamp="20201112 12:27:38.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.646" endtime="20201112 12:27:38.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.670" endtime="20201112 12:27:38.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.673" endtime="20201112 12:27:38.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.643" endtime="20201112 12:27:38.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.641" endtime="20201112 12:27:38.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.682" endtime="20201112 12:27:38.969"></status>
</kw>
<msg timestamp="20201112 12:27:38.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.681" endtime="20201112 12:27:38.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.974" endtime="20201112 12:27:38.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.982" endtime="20201112 12:27:38.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.678" endtime="20201112 12:27:38.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.676" endtime="20201112 12:27:38.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.989" level="INFO">${RESULT} = [{'time': 0.022686028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011138899999999993, 'source_diff': 0.00011138899999999993}, {'time': 0.022806028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:38.985" endtime="20201112 12:27:38.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:39.003" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:38.990" endtime="20201112 12:27:39.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.007" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:27:39.006" endtime="20201112 12:27:39.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.010" level="INFO">VALUE: [0.00011138899999999993, 0.00011116699999999882, 0.00011166699999999932, 0.00011169400000000246, 0.00011133299999999818, 0.00011115199999999978, 0.00011113899999999968, 0.00011101400000000303, 0.00011098600000000042, 0.00011088799999999996, 0.00011166700000000279, 0.00011163900000000018, 0.00011098600000000042, 0.00011165300000000322, 0.00011115199999999978, 0.00011148600000000092, 0.00011147199999999788, 0.00011148600000000092, 0.00011115299999999925, 0.00011131999999999809, 0.00011165200000000028, 0.00011129199999999895, 0.00011082000000000106, 0.00011131899999999861, 0.00011165200000000028, 0.00011165299999999975, 0.00011131900000000208, 0.00011098600000000042, 0.00011098600000000042, 0.00011099999999999999, 0.00011131999999999809, 0.00011131899999999861, 0.00011083300000000115, 0.00011131900000000208, 0.00011133300000000165, 0.00011130499999999904, 0.00011131900000000208, 0.00011115300000000272, 0.00011083400000000063, 0.00011115299999999925, 0.00011148700000000039, 0.00011079099999999897, 0.00011165200000000028, 0.00011113899999999968, 0.00011147200000000135, 0.00011131899999999861, 0.00011113899999999968, 0.00011099999999999999, 0.00011163900000000018, 0.00011115299999999925]</msg>
<status status="PASS" starttime="20201112 12:27:39.009" endtime="20201112 12:27:39.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.004" endtime="20201112 12:27:39.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.014" endtime="20201112 12:27:39.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.017" endtime="20201112 12:27:39.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.016" endtime="20201112 12:27:39.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.012" endtime="20201112 12:27:39.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.640" endtime="20201112 12:27:39.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.639" endtime="20201112 12:27:39.038"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.047" endtime="20201112 12:27:39.067"></status>
</kw>
<msg timestamp="20201112 12:27:39.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.045" endtime="20201112 12:27:39.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.069" endtime="20201112 12:27:39.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.072" endtime="20201112 12:27:39.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.043" endtime="20201112 12:27:39.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.041" endtime="20201112 12:27:39.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.081" endtime="20201112 12:27:39.368"></status>
</kw>
<msg timestamp="20201112 12:27:39.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022844417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.079" endtime="20201112 12:27:39.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022844417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.373" endtime="20201112 12:27:39.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.381" endtime="20201112 12:27:39.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.077" endtime="20201112 12:27:39.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.075" endtime="20201112 12:27:39.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.388" level="INFO">${RESULT} = [{'time': 0.022956361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011194400000000271, 'source_diff': 0.00011194400000000271}, {'time': 0.023074361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:39.384" endtime="20201112 12:27:39.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:39.401" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:39.389" endtime="20201112 12:27:39.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.406" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:27:39.405" endtime="20201112 12:27:39.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.409" level="INFO">VALUE: [0.00011194400000000271, 0.00011263900000000118, 0.00011183299999999868, 0.00011177799999999988, 0.00011227800000000038, 0.00011234799999999823, 0.00011181900000000258, 0.0001125420000000002, 0.00011250000000000149, 0.00011265299999999728, 0.00011248599999999845, 0.00011200000000000099, 0.00011268099999999989, 0.00011231999999999909, 0.00011183399999999816, 0.00011198700000000089, 0.00011251399999999759, 0.0001119160000000001, 0.00011248600000000192, 0.00011226400000000081, 0.00011188800000000096, 0.00011263900000000118, 0.00011180600000000249, 0.00011265300000000075, 0.00011250000000000149, 0.00011231899999999961, 0.00011198600000000142, 0.00011265300000000075, 0.00011248600000000192, 0.00011218099999999939, 0.00011198600000000142, 0.00011215300000000025, 0.00011193099999999914, 0.00011265300000000075, 0.00011230500000000004, 0.00011266600000000085, 0.00011263899999999771, 0.00011263900000000118, 0.00011197200000000185, 0.00011248600000000192, 0.00011180600000000249, 0.00011217999999999992, 0.00011211200000000102, 0.00011248599999999845, 0.00011258299999999943, 0.00011215300000000025, 0.00011243000000000017, 0.00011198599999999795, 0.00011213900000000068, 0.00011198599999999795]</msg>
<status status="PASS" starttime="20201112 12:27:39.407" endtime="20201112 12:27:39.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.402" endtime="20201112 12:27:39.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.412" endtime="20201112 12:27:39.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.416" endtime="20201112 12:27:39.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.414" endtime="20201112 12:27:39.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.411" endtime="20201112 12:27:39.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.039" endtime="20201112 12:27:39.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.038" endtime="20201112 12:27:39.437"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.446" endtime="20201112 12:27:39.466"></status>
</kw>
<msg timestamp="20201112 12:27:39.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.445" endtime="20201112 12:27:39.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.468" endtime="20201112 12:27:39.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.470" endtime="20201112 12:27:39.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.442" endtime="20201112 12:27:39.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.440" endtime="20201112 12:27:39.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.480" endtime="20201112 12:27:39.767"></status>
</kw>
<msg timestamp="20201112 12:27:39.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023031097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.478" endtime="20201112 12:27:39.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023031097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.772" endtime="20201112 12:27:39.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.780" endtime="20201112 12:27:39.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.476" endtime="20201112 12:27:39.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.474" endtime="20201112 12:27:39.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.787" level="INFO">${RESULT} = [{'time': 0.023031097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011320800000000006, 'source_diff': 0.00011320800000000006}, {'time': 0.023154111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:39.783" endtime="20201112 12:27:39.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:39.801" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:39.788" endtime="20201112 12:27:39.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.805" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:27:39.804" endtime="20201112 12:27:39.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.808" level="INFO">VALUE: [0.00011320800000000006, 0.00011298600000000242, 0.00011298599999999895, 0.00011318100000000039, 0.00011302699999999818, 0.00011300000000000199, 0.00011347199999999988, 0.00011316600000000135, 0.00011299999999999852, 0.00011349999999999902, 0.00011316699999999735, 0.00011350000000000249, 0.00011349999999999902, 0.00011277800000000088, 0.00011316700000000082, 0.00011301399999999809, 0.00011331900000000061, 0.00011284700000000272, 0.00011366599999999838, 0.00011366699999999785, 0.00011331900000000061, 0.00011365299999999828, 0.00011315300000000125, 0.00011349999999999902, 0.000113597, 0.00011348600000000292, 0.00011330500000000104, 0.00011281900000000011, 0.00011283299999999968, 0.00011365300000000175, 0.00011298599999999895, 0.00011365299999999828, 0.00011366600000000185, 0.00011286099999999882, 0.00011316599999999788, 0.00011331900000000061, 0.00011281900000000011, 0.00011306900000000036, 0.00011343100000000064, 0.00011315300000000125, 0.00011363899999999871, 0.00011332000000000009, 0.00011325000000000224, 0.000112903000000001, 0.00011365299999999828, 0.00011316700000000082, 0.00011313900000000168, 0.00011281900000000011, 0.00011316700000000082, 0.00011368100000000089]</msg>
<status status="PASS" starttime="20201112 12:27:39.806" endtime="20201112 12:27:39.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.801" endtime="20201112 12:27:39.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.812" endtime="20201112 12:27:39.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.815" endtime="20201112 12:27:39.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.813" endtime="20201112 12:27:39.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.810" endtime="20201112 12:27:39.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.438" endtime="20201112 12:27:39.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.437" endtime="20201112 12:27:39.836"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.845" endtime="20201112 12:27:39.865"></status>
</kw>
<msg timestamp="20201112 12:27:39.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.843" endtime="20201112 12:27:39.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.867" endtime="20201112 12:27:39.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.869" endtime="20201112 12:27:39.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.841" endtime="20201112 12:27:39.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.838" endtime="20201112 12:27:39.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.879" endtime="20201112 12:27:40.165"></status>
</kw>
<msg timestamp="20201112 12:27:40.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.877" endtime="20201112 12:27:40.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.169" endtime="20201112 12:27:40.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.178" endtime="20201112 12:27:40.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.874" endtime="20201112 12:27:40.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.873" endtime="20201112 12:27:40.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:40.184" level="INFO">${RESULT} = [{'time': 0.022828236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011434699999999728, 'source_diff': 0.00011434699999999728}, {'time': 0.022950264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:40.181" endtime="20201112 12:27:40.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:40.198" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:40.185" endtime="20201112 12:27:40.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.203" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:27:40.202" endtime="20201112 12:27:40.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.205" level="INFO">VALUE: [0.00011434699999999728, 0.00011415300000000225, 0.00011450000000000002, 0.00011466700000000232, 0.00011397299999999985, 0.00011448699999999992, 0.00011419400000000149, 0.00011466599999999938, 0.00011398599999999995, 0.00011381900000000111, 0.00011436100000000032, 0.00011415299999999878, 0.0001138749999999994, 0.00011434699999999728, 0.00011424999999999977, 0.00011448599999999698, 0.00011401399999999909, 0.00011380500000000154, 0.00011415300000000225, 0.00011433299999999771, 0.00011447199999999741, 0.00011448600000000045, 0.00011445800000000131, 0.00011415299999999878, 0.00011465199999999981, 0.00011381900000000111, 0.00011386200000000277, 0.00011436100000000032, 0.00011434699999999728, 0.00011433400000000066, 0.00011451399999999959, 0.00011383400000000016, 0.00011404199999999823, 0.00011465199999999981, 0.00011450000000000002, 0.00011463899999999971, 0.00011413899999999921, 0.00011432000000000109, 0.00011377800000000188, 0.00011382000000000059, 0.00011374999999999927, 0.00011431899999999814, 0.00011431899999999814, 0.00011465300000000275, 0.00011465299999999928, 0.00011448599999999698, 0.00011398599999999995, 0.00011415300000000225, 0.00011450000000000002, 0.00011447300000000035]</msg>
<status status="PASS" starttime="20201112 12:27:40.204" endtime="20201112 12:27:40.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.199" endtime="20201112 12:27:40.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.209" endtime="20201112 12:27:40.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:40.213" endtime="20201112 12:27:40.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.211" endtime="20201112 12:27:40.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.208" endtime="20201112 12:27:40.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.837" endtime="20201112 12:27:40.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.836" endtime="20201112 12:27:40.234"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.243" endtime="20201112 12:27:40.263"></status>
</kw>
<msg timestamp="20201112 12:27:40.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.241" endtime="20201112 12:27:40.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.265" endtime="20201112 12:27:40.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.267" endtime="20201112 12:27:40.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.238" endtime="20201112 12:27:40.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.236" endtime="20201112 12:27:40.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.277" endtime="20201112 12:27:40.565"></status>
</kw>
<msg timestamp="20201112 12:27:40.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022920931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023035986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.275" endtime="20201112 12:27:40.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022920931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023035986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.569" endtime="20201112 12:27:40.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.577" endtime="20201112 12:27:40.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.273" endtime="20201112 12:27:40.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.271" endtime="20201112 12:27:40.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:40.584" level="INFO">${RESULT} = [{'time': 0.023035986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001150550000000028, 'source_diff': 0.0001150550000000028}, {'time': 0.023157028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:40.581" endtime="20201112 12:27:40.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:40.598" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:40.585" endtime="20201112 12:27:40.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.603" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:27:40.601" endtime="20201112 12:27:40.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.605" level="INFO">VALUE: [0.0001150550000000028, 0.00011570899999999856, 0.00011520899999999806, 0.00011516699999999935, 0.00011563900000000071, 0.00011534699999999828, 0.00011501300000000061, 0.00011531900000000261, 0.00011531900000000261, 0.00011480500000000254, 0.0001150559999999988, 0.00011513900000000021, 0.00011500000000000052, 0.00011565300000000028, 0.00011497300000000085, 0.00011548599999999798, 0.00011497200000000138, 0.00011566600000000038, 0.00011500000000000052, 0.00011500000000000052, 0.00011500000000000052, 0.00011563899999999724, 0.00011569399999999952, 0.00011500000000000052, 0.00011498600000000095, 0.00011552800000000016, 0.00011500000000000052, 0.00011549999999999755, 0.00011565300000000028, 0.00011530599999999905, 0.00011480599999999855, 0.00011480599999999855, 0.00011517999999999945, 0.00011481899999999864, 0.00011502799999999966, 0.00011531899999999914, 0.00011547200000000188, 0.00011566699999999985, 0.00011565300000000028, 0.00011530599999999905, 0.00011550000000000102, 0.00011481900000000211, 0.00011498600000000095, 0.00011502799999999966, 0.00011481899999999864, 0.00011483300000000168, 0.00011550000000000102, 0.00011531999999999862, 0.00011516699999999935, 0.00011533399999999819]</msg>
<status status="PASS" starttime="20201112 12:27:40.604" endtime="20201112 12:27:40.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.599" endtime="20201112 12:27:40.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.609" endtime="20201112 12:27:40.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:40.612" endtime="20201112 12:27:40.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.611" endtime="20201112 12:27:40.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.607" endtime="20201112 12:27:40.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.235" endtime="20201112 12:27:40.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.234" endtime="20201112 12:27:40.633"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.642" endtime="20201112 12:27:40.663"></status>
</kw>
<msg timestamp="20201112 12:27:40.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.641" endtime="20201112 12:27:40.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.664" endtime="20201112 12:27:40.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.667" endtime="20201112 12:27:40.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.638" endtime="20201112 12:27:40.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.636" endtime="20201112 12:27:40.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.676" endtime="20201112 12:27:40.964"></status>
</kw>
<msg timestamp="20201112 12:27:40.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022848722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.675" endtime="20201112 12:27:40.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022848722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.969" endtime="20201112 12:27:40.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.977" endtime="20201112 12:27:40.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.672" endtime="20201112 12:27:40.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.670" endtime="20201112 12:27:40.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:40.984" level="INFO">${RESULT} = [{'time': 0.022964764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011604200000000023, 'source_diff': 0.00011604200000000023}, {'time': 0.023088764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:40.980" endtime="20201112 12:27:40.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:40.998" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:40.985" endtime="20201112 12:27:40.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.002" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:27:41.001" endtime="20201112 12:27:41.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.005" level="INFO">VALUE: [0.00011604200000000023, 0.00011665300000000128, 0.00011601299999999815, 0.00011599999999999805, 0.00011581999999999912, 0.000116291000000001, 0.00011666600000000138, 0.00011630500000000057, 0.00011631900000000014, 0.00011598600000000195, 0.00011665300000000128, 0.00011631999999999962, 0.00011650000000000202, 0.00011598699999999795, 0.00011650000000000202, 0.00011600000000000152, 0.00011650000000000202, 0.00011668100000000042, 0.00011666700000000085, 0.00011665300000000128, 0.00011631999999999962, 0.00011665299999999781, 0.00011648599999999898, 0.00011630500000000057, 0.00011665300000000128, 0.00011631900000000014, 0.00011616700000000035, 0.00011666699999999738, 0.00011581999999999912, 0.00011616700000000035, 0.00011630600000000005, 0.0001160559999999998, 0.00011592999999999673, 0.00011648599999999898, 0.00011648599999999898, 0.00011579199999999998, 0.00011648599999999898, 0.00011665299999999781, 0.00011598599999999848, 0.00011647199999999941, 0.00011651400000000159, 0.00011650000000000202, 0.00011600000000000152, 0.00011669499999999999, 0.00011583299999999921, 0.00011631999999999962, 0.00011599999999999805, 0.00011636099999999885, 0.00011631900000000014, 0.00011580500000000007]</msg>
<status status="PASS" starttime="20201112 12:27:41.003" endtime="20201112 12:27:41.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.998" endtime="20201112 12:27:41.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.009" endtime="20201112 12:27:41.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:41.012" endtime="20201112 12:27:41.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.011" endtime="20201112 12:27:41.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.007" endtime="20201112 12:27:41.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.634" endtime="20201112 12:27:41.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.634" endtime="20201112 12:27:41.033"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.042" endtime="20201112 12:27:41.063"></status>
</kw>
<msg timestamp="20201112 12:27:41.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.041" endtime="20201112 12:27:41.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.064" endtime="20201112 12:27:41.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.067" endtime="20201112 12:27:41.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.038" endtime="20201112 12:27:41.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.036" endtime="20201112 12:27:41.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.076" endtime="20201112 12:27:41.362"></status>
</kw>
<msg timestamp="20201112 12:27:41.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022911333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.075" endtime="20201112 12:27:41.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022911333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.366" endtime="20201112 12:27:41.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.375" endtime="20201112 12:27:41.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.072" endtime="20201112 12:27:41.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.070" endtime="20201112 12:27:41.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:41.382" level="INFO">${RESULT} = [{'time': 0.022911333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011709700000000003, 'source_diff': 0.00011709700000000003}, {'time': 0.023037361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:41.378" endtime="20201112 12:27:41.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:41.395" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:41.383" endtime="20201112 12:27:41.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.400" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:27:41.399" endtime="20201112 12:27:41.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.403" level="INFO">VALUE: [0.00011709700000000003, 0.00011681900000000064, 0.00011720900000000006, 0.00011698599999999948, 0.00011731999999999715, 0.00011713899999999874, 0.00011751299999999965, 0.00011752800000000216, 0.00011767999999999848, 0.00011683300000000021, 0.00011751399999999912, 0.00011731900000000114, 0.00011716699999999788, 0.00011716699999999788, 0.00011722200000000016, 0.00011715300000000178, 0.00011748599999999998, 0.00011763899999999924, 0.00011683300000000021, 0.00011763900000000271, 0.00011715299999999831, 0.00011765300000000228, 0.00011770800000000109, 0.00011765299999999881, 0.00011752799999999869, 0.00011713899999999874, 0.00011684700000000325, 0.00011734700000000028, 0.00011715299999999831, 0.00011763899999999924, 0.00011766699999999838, 0.00011680600000000055, 0.00011713899999999874, 0.00011698599999999948, 0.00011686099999999935, 0.00011745799999999737, 0.00011698599999999948, 0.00011697199999999991, 0.00011697199999999991, 0.00011748599999999998, 0.00011682000000000012, 0.00011715299999999831, 0.00011748599999999998, 0.00011716600000000188, 0.00011766699999999838, 0.00011716700000000135, 0.00011748599999999998, 0.00011766699999999838, 0.00011768100000000142, 0.00011748599999999998]</msg>
<status status="PASS" starttime="20201112 12:27:41.401" endtime="20201112 12:27:41.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.396" endtime="20201112 12:27:41.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.406" endtime="20201112 12:27:41.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:41.410" endtime="20201112 12:27:41.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.408" endtime="20201112 12:27:41.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.405" endtime="20201112 12:27:41.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.034" endtime="20201112 12:27:41.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.034" endtime="20201112 12:27:41.431"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.440" endtime="20201112 12:27:41.460"></status>
</kw>
<msg timestamp="20201112 12:27:41.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.438" endtime="20201112 12:27:41.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.462" endtime="20201112 12:27:41.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.465" endtime="20201112 12:27:41.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.435" endtime="20201112 12:27:41.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.433" endtime="20201112 12:27:41.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.475" endtime="20201112 12:27:41.763"></status>
</kw>
<msg timestamp="20201112 12:27:41.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023010583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.473" endtime="20201112 12:27:41.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023010583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.767" endtime="20201112 12:27:41.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.776" endtime="20201112 12:27:41.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.470" endtime="20201112 12:27:41.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.468" endtime="20201112 12:27:41.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:41.783" level="INFO">${RESULT} = [{'time': 0.023010583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011851400000000012, 'source_diff': 0.00011851400000000012}, {'time': 0.023138597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:41.779" endtime="20201112 12:27:41.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:41.796" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:41.784" endtime="20201112 12:27:41.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.801" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:27:41.800" endtime="20201112 12:27:41.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.804" level="INFO">VALUE: [0.00011851400000000012, 0.00011815299999999931, 0.00011866699999999938, 0.00011833299999999825, 0.00011784800000000026, 0.00011779199999999851, 0.00011850000000000055, 0.00011815199999999984, 0.00011848600000000098, 0.00011781900000000164, 0.00011815299999999931, 0.00011829199999999901, 0.00011798600000000048, 0.000118389, 0.00011798600000000048, 0.00011782000000000112, 0.00011798600000000048, 0.00011834700000000128, 0.00011831899999999868, 0.00011834700000000128, 0.00011782000000000112, 0.00011848600000000098, 0.00011831999999999815, 0.00011833400000000119, 0.00011797200000000091, 0.00011818000000000245, 0.00011797200000000091, 0.00011847199999999794, 0.00011781900000000164, 0.00011848600000000098, 0.00011866700000000285, 0.00011780599999999808, 0.00011781900000000164, 0.00011866599999999991, 0.00011781900000000164, 0.00011868100000000242, 0.00011798600000000048, 0.00011805499999999886, 0.00011866699999999938, 0.00011820799999999812, 0.00011815300000000278, 0.00011783300000000121, 0.00011850000000000055, 0.00011798600000000048, 0.00011816700000000235, 0.00011813899999999974, 0.00011834800000000076, 0.00011833400000000119, 0.00011865299999999981, 0.00011784700000000078]</msg>
<status status="PASS" starttime="20201112 12:27:41.802" endtime="20201112 12:27:41.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.797" endtime="20201112 12:27:41.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.807" endtime="20201112 12:27:41.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:41.811" endtime="20201112 12:27:41.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.809" endtime="20201112 12:27:41.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.806" endtime="20201112 12:27:41.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.432" endtime="20201112 12:27:41.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.431" endtime="20201112 12:27:41.832"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.841" endtime="20201112 12:27:41.861"></status>
</kw>
<msg timestamp="20201112 12:27:41.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.839" endtime="20201112 12:27:41.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.863" endtime="20201112 12:27:41.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.865" endtime="20201112 12:27:41.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.836" endtime="20201112 12:27:41.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.834" endtime="20201112 12:27:41.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.875" endtime="20201112 12:27:42.161"></status>
</kw>
<msg timestamp="20201112 12:27:42.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022817042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.873" endtime="20201112 12:27:42.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022817042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.166" endtime="20201112 12:27:42.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.174" endtime="20201112 12:27:42.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.870" endtime="20201112 12:27:42.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.869" endtime="20201112 12:27:42.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.181" level="INFO">${RESULT} = [{'time': 0.022817042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011937499999999795, 'source_diff': 0.00011937499999999795}, {'time': 0.022943056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:42.178" endtime="20201112 12:27:42.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:42.195" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:42.182" endtime="20201112 12:27:42.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.200" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:27:42.198" endtime="20201112 12:27:42.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.202" level="INFO">VALUE: [0.00011937499999999795, 0.00011950000000000155, 0.00011948700000000145, 0.00011965200000000134, 0.00011913900000000074, 0.00011883300000000221, 0.00011968099999999995, 0.00011966700000000038, 0.00011966700000000038, 0.00011965300000000081, 0.00011966599999999744, 0.00011900000000000105, 0.00011931899999999968, 0.00011966700000000038, 0.00011918099999999945, 0.00011883400000000169, 0.00011883399999999822, 0.00011913899999999727, 0.00011965300000000081, 0.00011883299999999875, 0.00011948599999999851, 0.00011916699999999988, 0.00011933299999999925, 0.00011927800000000044, 0.00011883300000000221, 0.0001188890000000005, 0.00011931999999999915, 0.00011915200000000084, 0.00011948599999999851, 0.00011950000000000155, 0.00011898600000000148, 0.00011897200000000191, 0.00011930599999999958, 0.00011947200000000241, 0.00011963900000000124, 0.00011933400000000219, 0.00011883300000000221, 0.00011951400000000112, 0.00011899999999999758, 0.00011948600000000198, 0.00011899999999999758, 0.00011947199999999894, 0.00011972199999999919, 0.00011880599999999908, 0.00011965300000000081, 0.0001188049999999996, 0.00011966600000000091, 0.00011916699999999988, 0.00011968099999999995, 0.00011900000000000105]</msg>
<status status="PASS" starttime="20201112 12:27:42.201" endtime="20201112 12:27:42.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.196" endtime="20201112 12:27:42.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.206" endtime="20201112 12:27:42.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.209" endtime="20201112 12:27:42.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.208" endtime="20201112 12:27:42.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.204" endtime="20201112 12:27:42.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.833" endtime="20201112 12:27:42.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.832" endtime="20201112 12:27:42.230"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.239" endtime="20201112 12:27:42.260"></status>
</kw>
<msg timestamp="20201112 12:27:42.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.238" endtime="20201112 12:27:42.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.261" endtime="20201112 12:27:42.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.264" endtime="20201112 12:27:42.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.235" endtime="20201112 12:27:42.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.233" endtime="20201112 12:27:42.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.273" endtime="20201112 12:27:42.562"></status>
</kw>
<msg timestamp="20201112 12:27:42.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.272" endtime="20201112 12:27:42.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.566" endtime="20201112 12:27:42.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.574" endtime="20201112 12:27:42.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.269" endtime="20201112 12:27:42.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.267" endtime="20201112 12:27:42.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.581" level="INFO">${RESULT} = [{'time': 0.022723306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012069499999999705, 'source_diff': 0.00012069499999999705}, {'time': 0.022848347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:42.578" endtime="20201112 12:27:42.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:42.641" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:42.582" endtime="20201112 12:27:42.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.646" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:27:42.645" endtime="20201112 12:27:42.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.648" level="INFO">VALUE: [0.00012069499999999705, 0.00012016600000000141, 0.00012048599999999951, 0.00011998600000000248, 0.00011997199999999944, 0.00012016700000000088, 0.00012027800000000144, 0.00012070800000000062, 0.00012045899999999984, 0.00012000000000000205, 0.00012061099999999964, 0.00012050000000000255, 0.00011997199999999944, 0.00012023599999999926, 0.00012015299999999784, 0.00012066699999999791, 0.00012065300000000181, 0.00012033300000000025, 0.00012015200000000184, 0.00012065299999999834, 0.00012065299999999834, 0.00012019500000000002, 0.00012049999999999908, 0.00012036100000000285, 0.00011981999999999965, 0.0001199310000000002, 0.00011997199999999944, 0.00012059700000000007, 0.00011983299999999975, 0.00012026400000000187, 0.00012018100000000045, 0.00011984800000000226, 0.00011981999999999965, 0.00011999999999999858, 0.00011984699999999932, 0.00011983299999999975, 0.00012065299999999834, 0.00011981900000000018, 0.00012024999999999883, 0.00012049999999999908, 0.00012036100000000285, 0.00012059799999999954, 0.00012066599999999844, 0.00012029100000000154, 0.00012067999999999801, 0.00012066700000000138, 0.00012000000000000205, 0.00012016700000000088, 0.00011980600000000008, 0.00011983400000000269]</msg>
<status status="PASS" starttime="20201112 12:27:42.647" endtime="20201112 12:27:42.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.642" endtime="20201112 12:27:42.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.652" endtime="20201112 12:27:42.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.655" endtime="20201112 12:27:42.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.654" endtime="20201112 12:27:42.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.650" endtime="20201112 12:27:42.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.231" endtime="20201112 12:27:42.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.231" endtime="20201112 12:27:42.676"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.686" endtime="20201112 12:27:42.706"></status>
</kw>
<msg timestamp="20201112 12:27:42.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.684" endtime="20201112 12:27:42.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.708" endtime="20201112 12:27:42.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.711" endtime="20201112 12:27:42.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.681" endtime="20201112 12:27:42.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.679" endtime="20201112 12:27:42.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.720" endtime="20201112 12:27:43.005"></status>
</kw>
<msg timestamp="20201112 12:27:43.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023281889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023403611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.718" endtime="20201112 12:27:43.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023281889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023403611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.009" endtime="20201112 12:27:43.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.018" endtime="20201112 12:27:43.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.716" endtime="20201112 12:27:43.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.714" endtime="20201112 12:27:43.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:43.025" level="INFO">${RESULT} = [{'time': 0.023403611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012172200000000119, 'source_diff': 0.00012172200000000119}, {'time': 0.023531639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:43.021" endtime="20201112 12:27:43.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:43.038" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:43.026" endtime="20201112 12:27:43.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.043" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:27:43.042" endtime="20201112 12:27:43.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.046" level="INFO">VALUE: [0.00012172200000000119, 0.00012168099999999848, 0.00012119500000000102, 0.00012168099999999848, 0.00012148599999999704, 0.00012165299999999934, 0.00012165199999999987, 0.00012084700000000032, 0.00012138899999999953, 0.00012104199999999829, 0.00012084700000000032, 0.00012083300000000075, 0.00012116700000000188, 0.00012133400000000072, 0.00012099999999999958, 0.00012083300000000075, 0.00012117999999999851, 0.00012150000000000008, 0.00012099999999999958, 0.00012081900000000118, 0.00012141699999999866, 0.00012151399999999965, 0.00012165299999999934, 0.00012115200000000284, 0.00012116599999999894, 0.00012095800000000087, 0.00012168100000000195, 0.00012101399999999915, 0.00012147199999999747, 0.00012083400000000022, 0.00012161099999999717, 0.00012148699999999998, 0.00012166599999999944, 0.00012116599999999894, 0.00012166700000000238, 0.00012133299999999778, 0.00012084700000000032, 0.00012099999999999958, 0.00012133399999999725, 0.00012168000000000248, 0.00012165199999999987, 0.00012119400000000155, 0.00012148600000000051, 0.00012151399999999965, 0.00012083400000000022, 0.00012132000000000115, 0.00012116699999999841, 0.00012084799999999979, 0.00012150000000000008, 0.00012167999999999901]</msg>
<status status="PASS" starttime="20201112 12:27:43.044" endtime="20201112 12:27:43.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.039" endtime="20201112 12:27:43.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.049" endtime="20201112 12:27:43.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:43.053" endtime="20201112 12:27:43.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.051" endtime="20201112 12:27:43.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.048" endtime="20201112 12:27:43.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.677" endtime="20201112 12:27:43.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.677" endtime="20201112 12:27:43.074"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.084" endtime="20201112 12:27:43.104"></status>
</kw>
<msg timestamp="20201112 12:27:43.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.082" endtime="20201112 12:27:43.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.106" endtime="20201112 12:27:43.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.108" endtime="20201112 12:27:43.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.078" endtime="20201112 12:27:43.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.076" endtime="20201112 12:27:43.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.118" endtime="20201112 12:27:43.404"></status>
</kw>
<msg timestamp="20201112 12:27:43.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023600667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023723361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.116" endtime="20201112 12:27:43.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023600667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023723361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.408" endtime="20201112 12:27:43.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.416" endtime="20201112 12:27:43.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.113" endtime="20201112 12:27:43.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.112" endtime="20201112 12:27:43.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:43.423" level="INFO">${RESULT} = [{'time': 0.023723361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012269399999999958, 'source_diff': 0.00012269399999999958}, {'time': 0.023852375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:43.420" endtime="20201112 12:27:43.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:43.437" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:43.424" endtime="20201112 12:27:43.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.442" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:27:43.441" endtime="20201112 12:27:43.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.444" level="INFO">VALUE: [0.00012269399999999958, 0.0001218189999999987, 0.00012231999999999868, 0.0001224860000000015, 0.00012200000000000058, 0.00012250000000000108, 0.00012247199999999847, 0.00012199999999999711, 0.00012181900000000218, 0.00012213900000000028, 0.00012181999999999818, 0.00012198600000000101, 0.00012179199999999904, 0.00012231999999999868, 0.00012265200000000087, 0.00012250000000000108, 0.00012216699999999941, 0.00012233300000000225, 0.00012200000000000058, 0.00012195899999999787, 0.00012215299999999985, 0.00012213900000000028, 0.0001218189999999987, 0.00012215200000000037, 0.00012200000000000058, 0.00012250000000000108, 0.00012233299999999878, 0.00012265300000000035, 0.00012266599999999697, 0.00012198700000000048, 0.0001223189999999992, 0.00012215299999999985, 0.00012184700000000132, 0.00012215299999999985, 0.00012247199999999847, 0.00012195900000000134, 0.00012216700000000288, 0.00012219399999999908, 0.00012250000000000108, 0.0001226389999999973, 0.00012197200000000144, 0.0001223189999999992, 0.00012215299999999985, 0.00012180599999999861, 0.00012227799999999997, 0.00012247300000000141, 0.00012263900000000078, 0.00012268, 0.00012266600000000044, 0.0001224030000000001]</msg>
<status status="PASS" starttime="20201112 12:27:43.443" endtime="20201112 12:27:43.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.438" endtime="20201112 12:27:43.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.476" endtime="20201112 12:27:43.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:43.480" endtime="20201112 12:27:43.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.478" endtime="20201112 12:27:43.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.475" endtime="20201112 12:27:43.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.075" endtime="20201112 12:27:43.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.074" endtime="20201112 12:27:43.501"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.510" endtime="20201112 12:27:43.532"></status>
</kw>
<msg timestamp="20201112 12:27:43.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.508" endtime="20201112 12:27:43.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.534" endtime="20201112 12:27:43.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.536" endtime="20201112 12:27:43.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.506" endtime="20201112 12:27:43.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.503" endtime="20201112 12:27:43.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.546" endtime="20201112 12:27:43.830"></status>
</kw>
<msg timestamp="20201112 12:27:43.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023905417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024028444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.544" endtime="20201112 12:27:43.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023905417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024028444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.834" endtime="20201112 12:27:43.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.842" endtime="20201112 12:27:43.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.541" endtime="20201112 12:27:43.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.539" endtime="20201112 12:27:43.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:43.849" level="INFO">${RESULT} = [{'time': 0.024028444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012302699999999778, 'source_diff': 0.00012302699999999778}, {'time': 0.024166472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:43.846" endtime="20201112 12:27:43.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:43.863" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:43.850" endtime="20201112 12:27:43.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.868" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:27:43.867" endtime="20201112 12:27:43.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.870" level="INFO">VALUE: [0.00012302699999999778, 0.00012333299999999978, 0.00012334700000000282, 0.00012298599999999854, 0.00012284699999999885, 0.00012354100000000132, 0.00012298599999999854, 0.00012315300000000085, 0.00012366599999999797, 0.00012370800000000015, 0.00012315300000000085, 0.00012320899999999912, 0.00012365299999999788, 0.00012369500000000005, 0.00012315300000000085, 0.00012331999999999968, 0.00012366600000000144, 0.00012333299999999978, 0.00012351400000000165, 0.00012362499999999874, 0.00012318099999999998, 0.00012355500000000089, 0.00012331999999999968, 0.00012315300000000085, 0.00012297299999999844, 0.00012283299999999928, 0.00012281900000000318, 0.0001233190000000002, 0.00012284699999999885, 0.00012316700000000042, 0.00012351400000000165, 0.00012337499999999849, 0.0001234999999999986, 0.00012298599999999854, 0.00012362499999999874, 0.000122986000000002, 0.00012300000000000158, 0.00012283299999999928, 0.00012315300000000085, 0.00012343100000000023, 0.00012297300000000191, 0.000122777000000001, 0.00012315200000000137, 0.00012316700000000042, 0.00012318099999999998, 0.00012281999999999918, 0.00012318099999999998, 0.00012316699999999695, 0.00012283299999999928, 0.00012348599999999904]</msg>
<status status="PASS" starttime="20201112 12:27:43.869" endtime="20201112 12:27:43.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.864" endtime="20201112 12:27:43.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.874" endtime="20201112 12:27:43.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:43.878" endtime="20201112 12:27:43.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.876" endtime="20201112 12:27:43.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.872" endtime="20201112 12:27:43.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.502" endtime="20201112 12:27:43.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.501" endtime="20201112 12:27:43.899"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.908" endtime="20201112 12:27:43.929"></status>
</kw>
<msg timestamp="20201112 12:27:43.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.906" endtime="20201112 12:27:43.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.931" endtime="20201112 12:27:43.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.933" endtime="20201112 12:27:43.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.903" endtime="20201112 12:27:43.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.901" endtime="20201112 12:27:43.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.943" endtime="20201112 12:27:44.228"></status>
</kw>
<msg timestamp="20201112 12:27:44.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023279931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023404236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.941" endtime="20201112 12:27:44.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023279931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023404236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.232" endtime="20201112 12:27:44.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.241" endtime="20201112 12:27:44.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.938" endtime="20201112 12:27:44.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.936" endtime="20201112 12:27:44.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:44.247" level="INFO">${RESULT} = [{'time': 0.023404236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012430499999999817, 'source_diff': 0.00012430499999999817}, {'time': 0.023539167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:44.244" endtime="20201112 12:27:44.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:44.262" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:44.248" endtime="20201112 12:27:44.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.267" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:27:44.266" endtime="20201112 12:27:44.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.270" level="INFO">VALUE: [0.00012430499999999817, 0.0001242779999999985, 0.0001241519999999989, 0.0001243190000000012, 0.00012401400000000215, 0.00012398599999999954, 0.00012400000000000258, 0.00012468099999999802, 0.00012415300000000185, 0.0001244999999999996, 0.00012448600000000004, 0.0001244999999999996, 0.00012465299999999888, 0.00012434700000000035, 0.0001239580000000004, 0.00012415299999999838, 0.00012415299999999838, 0.00012455500000000189, 0.00012379200000000104, 0.00012383300000000028, 0.00012466599999999897, 0.00012447200000000047, 0.00012466699999999845, 0.00012433400000000025, 0.00012382000000000018, 0.00012401300000000268, 0.00012432000000000068, 0.00012430500000000164, 0.00012470800000000115, 0.00012416699999999795, 0.00012382000000000018, 0.00012466699999999845, 0.000123986000000003, 0.00012415299999999838, 0.00012383400000000322, 0.0001238190000000007, 0.000124680000000002, 0.00012433300000000078, 0.00012400000000000258, 0.00012382000000000018, 0.00012418099999999752, 0.00012466699999999845, 0.0001243060000000011, 0.0001243190000000012, 0.00012447200000000047, 0.00012398599999999954, 0.00012383300000000028, 0.0001239999999999991, 0.00012437499999999949, 0.00012416699999999795]</msg>
<status status="PASS" starttime="20201112 12:27:44.268" endtime="20201112 12:27:44.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.263" endtime="20201112 12:27:44.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.273" endtime="20201112 12:27:44.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:44.277" endtime="20201112 12:27:44.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.275" endtime="20201112 12:27:44.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.272" endtime="20201112 12:27:44.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.900" endtime="20201112 12:27:44.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.899" endtime="20201112 12:27:44.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.376" endtime="20201112 12:27:44.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:44.306" endtime="20201112 12:27:44.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.305" endtime="20201112 12:27:44.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.303" endtime="20201112 12:27:44.327"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:04.303" endtime="20201112 12:27:44.327" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:26:22.973" endtime="20201112 12:27:44.332"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.388" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:27:44.396" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:27:45.501" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:27:44.387" endtime="20201112 12:27:45.502"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.504" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:27:45.503" endtime="20201112 12:27:45.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.385" endtime="20201112 12:27:45.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:45.507" endtime="20201112 12:27:45.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.506" endtime="20201112 12:27:45.694"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.706" endtime="20201112 12:27:45.720"></status>
</kw>
<msg timestamp="20201112 12:27:45.720" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201112 12:27:45.704" endtime="20201112 12:27:45.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.723" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201112 12:27:45.722" endtime="20201112 12:27:45.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.727" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:45.724" endtime="20201112 12:27:45.727"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:45.702" endtime="20201112 12:27:45.728"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:45.700" endtime="20201112 12:27:45.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.698" endtime="20201112 12:27:45.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:45.733" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:45.732" endtime="20201112 12:27:45.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.730" endtime="20201112 12:27:45.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.698" endtime="20201112 12:27:45.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.697" endtime="20201112 12:27:45.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.735" endtime="20201112 12:27:45.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.696" endtime="20201112 12:27:45.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.738" endtime="20201112 12:27:45.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.694" endtime="20201112 12:27:45.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.384" endtime="20201112 12:27:45.741"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:45.747" endtime="20201112 12:27:45.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.746" endtime="20201112 12:27:45.767"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.781" endtime="20201112 12:27:45.795"></status>
</kw>
<msg timestamp="20201112 12:27:45.796" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:45.779" endtime="20201112 12:27:45.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.798" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:45.797" endtime="20201112 12:27:45.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.802" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:45.800" endtime="20201112 12:27:45.802"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:45.777" endtime="20201112 12:27:45.802"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:45.774" endtime="20201112 12:27:45.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.773" endtime="20201112 12:27:45.803"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:45.807" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:45.806" endtime="20201112 12:27:45.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.804" endtime="20201112 12:27:45.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.772" endtime="20201112 12:27:45.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.771" endtime="20201112 12:27:45.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.812" endtime="20201112 12:27:45.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.770" endtime="20201112 12:27:45.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.768" endtime="20201112 12:27:45.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.744" endtime="20201112 12:27:45.818"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:45.826" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.844" endtime="20201112 12:27:47.947"></status>
</kw>
<msg timestamp="20201112 12:27:47.948" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 391439, 'wakeups': [401452, 411452, 421452, 431452, 441452, 451452, 46...</msg>
<status status="PASS" starttime="20201112 12:27:45.841" endtime="20201112 12:27:47.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.951" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 391439, 'wakeups': [401452, 411452, 421452, 431452, 441452, 451452, 46...</msg>
<status status="PASS" starttime="20201112 12:27:47.949" endtime="20201112 12:27:47.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.952" endtime="20201112 12:27:47.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.835" endtime="20201112 12:27:47.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.831" endtime="20201112 12:27:47.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:47.958" level="INFO">${RESULT} = {'timer-count': 1, 'start-time': 391439, 'timer-interval': 10000, 'wakeups': [401452, 411452, 421452, 431452, 441452, 451452, 461452, 471452, 481452, 491452, 501452, 511452, 521452, 531452, 541452, 55...</msg>
<status status="PASS" starttime="20201112 12:27:47.956" endtime="20201112 12:27:47.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.962" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:47.961" endtime="20201112 12:27:47.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.965" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:47.964" endtime="20201112 12:27:47.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.959" endtime="20201112 12:27:47.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.970" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:47.969" endtime="20201112 12:27:47.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.972" level="INFO">VALUE: 391439</msg>
<status status="PASS" starttime="20201112 12:27:47.971" endtime="20201112 12:27:47.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.966" endtime="20201112 12:27:47.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.977" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:47.976" endtime="20201112 12:27:47.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.979" level="INFO">VALUE: [401452, 411452, 421452, 431452, 441452, 451452, 461452, 471452, 481452, 491452, 501452, 511452, 521452, 531452, 541452, 551452, 561452, 571452, 581452, 591452, 601452, 611452, 621452, 631452, 641452, 651452, 661452, 671452, 681452, 691452, 701452, 711452, 721452, 731452, 741452, 751452, 761452, 771452, 781452, 791452, 801452, 811452, 821452, 831452, 841452, 851452, 861452, 871452, 881452, 891452, 901452, 911452, 921452, 931452, 941452, 951452, 961452, 971452, 981452, 991452, 1001452, 1011452, 1021452, 1031452, 1041452, 1051452, 1061452, 1071452, 1081452, 1091452, 1101452, 1111452, 1121452, 1131452, 1141452, 1151452, 1161452, 1171452, 1181452, 1191452, 1201452, 1211452, 1221452, 1231452, 1241452, 1251452, 1261452, 1271452, 1281452, 1291452, 1301452, 1311452, 1321452, 1331452, 1341452, 1351452, 1361452, 1371452, 1381452, 1391452]</msg>
<status status="PASS" starttime="20201112 12:27:47.978" endtime="20201112 12:27:47.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.973" endtime="20201112 12:27:47.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.987" endtime="20201112 12:27:48.285"></status>
</kw>
<msg timestamp="20201112 12:27:48.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.088829333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.098843653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.985" endtime="20201112 12:27:48.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.088829333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.098843653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.289" endtime="20201112 12:27:48.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.297" endtime="20201112 12:27:48.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.983" endtime="20201112 12:27:48.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.981" endtime="20201112 12:27:48.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:48.325" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:48.301" endtime="20201112 12:27:48.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.329" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:48.328" endtime="20201112 12:27:48.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.332" level="INFO">VALUE: 0.088829333</msg>
<status status="PASS" starttime="20201112 12:27:48.331" endtime="20201112 12:27:48.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.326" endtime="20201112 12:27:48.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.337" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:48.336" endtime="20201112 12:27:48.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.340" level="INFO">VALUE: [0.098843653, 0.108844917, 0.118845958, 0.128847167, 0.138848264, 0.1488495, 0.158850569, 0.168851792, 0.178852875, 0.188854125, 0.198855194, 0.208856403, 0.2188575, 0.228858722, 0.238859847, 0.248861028, 0.258862111, 0.268863347, 0.278864431, 0.288865653, 0.298866736, 0.308867958, 0.318869056, 0.328870264, 0.338871375, 0.348872583, 0.358873667, 0.368874889, 0.378875986, 0.388877194, 0.398878361, 0.408879569, 0.418880611, 0.428881819, 0.438882917, 0.448884139, 0.458885222, 0.468886444, 0.478887528, 0.488888764, 0.498889847, 0.508891083, 0.518892153, 0.528893389, 0.538894472, 0.548895681, 0.558896778, 0.568898, 0.578899083, 0.588900319, 0.598901403, 0.608902611, 0.618903722, 0.628904931, 0.638906069, 0.648907236, 0.658908347, 0.668909556, 0.678910667, 0.688911861, 0.698912944, 0.708914181, 0.718915264, 0.7289165, 0.738917569, 0.748918792, 0.758919917, 0.768921111, 0.778922194, 0.788923417, 0.7989245, 0.808925736, 0.818926833, 0.828928069, 0.838929208, 0.848930347, 0.858931431, 0.868932653, 0.878933792, 0.888934972, 0.898936056, 0.908937292, 0.918938361, 0.928939597, 0.938940681, 0.948941903, 0.958942986, 0.968944208, 0.978945306, 0.988946528, 0.998947611, 1.008948889, 1.018949931, 1.028951139, 1.03895225, 1.048953458, 1.058954542, 1.068955778, 1.078956847, 1.088958083] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:48.339" endtime="20201112 12:27:48.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.333" endtime="20201112 12:27:48.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.343" endtime="20201112 12:27:48.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:48.346" endtime="20201112 12:27:48.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.345" endtime="20201112 12:27:48.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.341" endtime="20201112 12:27:48.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.828" endtime="20201112 12:27:48.367"></status>
</kw>
<msg timestamp="20201112 12:27:48.367" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.377" endtime="20201112 12:27:50.498"></status>
</kw>
<msg timestamp="20201112 12:27:50.499" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2922373, 'wakeups': [2932386, 2942386, 2952386, 2962386, 2972386, 2982...</msg>
<status status="PASS" starttime="20201112 12:27:48.374" endtime="20201112 12:27:50.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.505" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2922373, 'wakeups': [2932386, 2942386, 2952386, 2962386, 2972386, 2982...</msg>
<status status="PASS" starttime="20201112 12:27:50.502" endtime="20201112 12:27:50.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.508" endtime="20201112 12:27:50.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.371" endtime="20201112 12:27:50.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.369" endtime="20201112 12:27:50.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:50.520" level="INFO">${RESULT} = {'timer-count': 1, 'start-time': 2922373, 'timer-interval': 10000, 'wakeups': [2932386, 2942386, 2952386, 2962386, 2972386, 2982386, 2992386, 3002386, 3012386, 3022386, 3032386, 3042386, 3052386, 3062...</msg>
<status status="PASS" starttime="20201112 12:27:50.515" endtime="20201112 12:27:50.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.528" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:50.526" endtime="20201112 12:27:50.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.532" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:50.531" endtime="20201112 12:27:50.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.521" endtime="20201112 12:27:50.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.538" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:50.536" endtime="20201112 12:27:50.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.540" level="INFO">VALUE: 2922373</msg>
<status status="PASS" starttime="20201112 12:27:50.539" endtime="20201112 12:27:50.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.534" endtime="20201112 12:27:50.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.545" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:50.544" endtime="20201112 12:27:50.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.547" level="INFO">VALUE: [2932386, 2942386, 2952386, 2962386, 2972386, 2982386, 2992386, 3002386, 3012386, 3022386, 3032386, 3042386, 3052386, 3062386, 3072386, 3082386, 3092386, 3102386, 3112386, 3122386, 3132386, 3142386, 3152386, 3162386, 3172386, 3182386, 3192386, 3202386, 3212386, 3222386, 3232386, 3242386, 3252386, 3262386, 3272386, 3282386, 3292386, 3302386, 3312386, 3322386, 3332386, 3342386, 3352386, 3362386, 3372386, 3382386, 3392386, 3402386, 3412386, 3422386, 3432386, 3442386, 3452386, 3462386, 3472386, 3482386, 3492386, 3502386, 3512386, 3522386, 3532386, 3542386, 3552386, 3562386, 3572386, 3582386, 3592386, 3602386, 3612386, 3622386, 3632386, 3642386, 3652386, 3662386, 3672386, 3682386, 3692386, 3702386, 3712386, 3722386, 3732386, 3742386, 3752386, 3762386, 3772386, 3782386, 3792386, 3802386, 3812386, 3822386, 3832386, 3842386, 3852386, 3862386, 3872386, 3882386, 3892386, 3902386, 3912386, 3922386]</msg>
<status status="PASS" starttime="20201112 12:27:50.546" endtime="20201112 12:27:50.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.542" endtime="20201112 12:27:50.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.555" endtime="20201112 12:27:50.847"></status>
</kw>
<msg timestamp="20201112 12:27:50.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020786917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030800875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.553" endtime="20201112 12:27:50.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020786917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030800875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.851" endtime="20201112 12:27:50.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.859" endtime="20201112 12:27:50.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.551" endtime="20201112 12:27:50.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.549" endtime="20201112 12:27:50.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:50.889" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:50.863" endtime="20201112 12:27:50.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.893" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:50.892" endtime="20201112 12:27:50.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.896" level="INFO">VALUE: 0.020786917</msg>
<status status="PASS" starttime="20201112 12:27:50.895" endtime="20201112 12:27:50.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.890" endtime="20201112 12:27:50.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.901" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:50.900" endtime="20201112 12:27:50.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.903" level="INFO">VALUE: [0.030800875, 0.040802083, 0.050803167, 0.060804389, 0.070805472, 0.080806694, 0.090807778, 0.100809, 0.110810153, 0.120811347, 0.130812389, 0.140813653, 0.15081475, 0.160815917, 0.170817056, 0.180818222, 0.190819319, 0.200820542, 0.210821611, 0.220822833, 0.230823944, 0.240825153, 0.250826236, 0.260827458, 0.270828542, 0.280829764, 0.290830847, 0.300832069, 0.310833167, 0.320834431, 0.330835486, 0.340836681, 0.350837778, 0.360839, 0.370840097, 0.380841319, 0.390842403, 0.400843694, 0.410844708, 0.420845917, 0.430847014, 0.440848236, 0.450849333, 0.460850556, 0.470851625, 0.480852847, 0.490853944, 0.500855167, 0.51085625, 0.520857514, 0.530858556, 0.540859778, 0.550860861, 0.560862097, 0.570863181, 0.580864389, 0.5908655, 0.600866694, 0.610867806, 0.620869028, 0.630870111, 0.640871333, 0.650872403, 0.660873625, 0.670874722, 0.680875931, 0.690877042, 0.700878236, 0.710879333, 0.720880556, 0.730881639, 0.740882917, 0.750883958, 0.760885167, 0.770886292, 0.780887472, 0.790888569, 0.800889847, 0.810890903, 0.820892097, 0.830893222, 0.840894403, 0.8508955, 0.860896708, 0.870897819, 0.880899097, 0.890900125, 0.900901333, 0.910902417, 0.920903639, 0.930904736, 0.940905944, 0.950907042, 0.960908264, 0.970909361, 0.980910583, 0.990911653, 1.000912875, 1.010913986, 1.020915194] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:50.902" endtime="20201112 12:27:50.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.897" endtime="20201112 12:27:50.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.907" endtime="20201112 12:27:50.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:50.910" endtime="20201112 12:27:50.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.909" endtime="20201112 12:27:50.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.905" endtime="20201112 12:27:50.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.368" endtime="20201112 12:27:50.931"></status>
</kw>
<msg timestamp="20201112 12:27:50.931" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.940" endtime="20201112 12:27:53.054"></status>
</kw>
<msg timestamp="20201112 12:27:53.054" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5485428, 'wakeups': [5495441, 5505441, 5515441, 5525441, 5535441, 5545...</msg>
<status status="PASS" starttime="20201112 12:27:50.938" endtime="20201112 12:27:53.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.057" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5485428, 'wakeups': [5495441, 5505441, 5515441, 5525441, 5535441, 5545...</msg>
<status status="PASS" starttime="20201112 12:27:53.056" endtime="20201112 12:27:53.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.058" endtime="20201112 12:27:53.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.935" endtime="20201112 12:27:53.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.933" endtime="20201112 12:27:53.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:53.064" level="INFO">${RESULT} = {'timer-count': 1, 'start-time': 5485428, 'timer-interval': 10000, 'wakeups': [5495441, 5505441, 5515441, 5525441, 5535441, 5545441, 5555441, 5565441, 5575441, 5585441, 5595441, 5605441, 5615441, 5625...</msg>
<status status="PASS" starttime="20201112 12:27:53.062" endtime="20201112 12:27:53.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.068" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:53.067" endtime="20201112 12:27:53.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.071" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:53.069" endtime="20201112 12:27:53.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.065" endtime="20201112 12:27:53.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.077" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:53.075" endtime="20201112 12:27:53.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.080" level="INFO">VALUE: 5485428</msg>
<status status="PASS" starttime="20201112 12:27:53.079" endtime="20201112 12:27:53.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.073" endtime="20201112 12:27:53.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.085" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:53.084" endtime="20201112 12:27:53.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.087" level="INFO">VALUE: [5495441, 5505441, 5515441, 5525441, 5535441, 5545441, 5555441, 5565441, 5575441, 5585441, 5595441, 5605441, 5615441, 5625441, 5635441, 5645441, 5655441, 5665441, 5675441, 5685441, 5695441, 5705441, 5715441, 5725441, 5735441, 5745441, 5755441, 5765441, 5775441, 5785441, 5795441, 5805441, 5815441, 5825441, 5835441, 5845441, 5855441, 5865441, 5875441, 5885441, 5895441, 5905441, 5915441, 5925441, 5935441, 5945441, 5955441, 5965441, 5975441, 5985441, 5995441, 6005441, 6015441, 6025441, 6035441, 6045441, 6055441, 6065441, 6075441, 6085441, 6095441, 6105441, 6115441, 6125441, 6135441, 6145441, 6155441, 6165441, 6175441, 6185441, 6195441, 6205441, 6215441, 6225441, 6235441, 6245441, 6255441, 6265441, 6275441, 6285441, 6295441, 6305441, 6315441, 6325441, 6335441, 6345441, 6355441, 6365441, 6375441, 6385441, 6395441, 6405441, 6415441, 6425441, 6435441, 6445441, 6455441, 6465441, 6475441, 6485441]</msg>
<status status="PASS" starttime="20201112 12:27:53.086" endtime="20201112 12:27:53.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.081" endtime="20201112 12:27:53.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.095" endtime="20201112 12:27:53.388"></status>
</kw>
<msg timestamp="20201112 12:27:53.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019905875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029919875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.093" endtime="20201112 12:27:53.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019905875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029919875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.393" endtime="20201112 12:27:53.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.401" endtime="20201112 12:27:53.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.091" endtime="20201112 12:27:53.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.088" endtime="20201112 12:27:53.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:53.429" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:53.404" endtime="20201112 12:27:53.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.433" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:53.432" endtime="20201112 12:27:53.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.436" level="INFO">VALUE: 0.019905875</msg>
<status status="PASS" starttime="20201112 12:27:53.435" endtime="20201112 12:27:53.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.430" endtime="20201112 12:27:53.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.441" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:53.440" endtime="20201112 12:27:53.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.444" level="INFO">VALUE: [0.029919875, 0.039921111, 0.049922181, 0.059923417, 0.069924486, 0.079925708, 0.089926792, 0.099928014, 0.109929111, 0.119930306, 0.129931403, 0.139932611, 0.149933708, 0.159934917, 0.169936014, 0.179937222, 0.189938306, 0.199939542, 0.209940611, 0.219941875, 0.229942944, 0.239944153, 0.249945222, 0.259946486, 0.269947528, 0.27994875, 0.289949861, 0.299951069, 0.309952167, 0.319953361, 0.329954472, 0.339955667, 0.349956764, 0.359957972, 0.369959069, 0.379960278, 0.389961375, 0.399962583, 0.409963736, 0.419964917, 0.429965986, 0.439967222, 0.449968292, 0.459969514, 0.469970597, 0.479971833, 0.489972903, 0.499974125, 0.509975236, 0.519976444, 0.529977542, 0.539978736, 0.549979847, 0.559981042, 0.569982153, 0.579983389, 0.589984444, 0.599985694, 0.60998675, 0.619987972, 0.629989069, 0.639990278, 0.649991361, 0.659992597, 0.669993667, 0.679994889, 0.689995986, 0.699997194, 0.709998278, 0.719999514, 0.730000583, 0.740001806, 0.750002903, 0.760004111, 0.770005208, 0.7800065, 0.790007528, 0.800008722, 0.810009819, 0.820011028, 0.830012125, 0.840013347, 0.850014431, 0.860015653, 0.870016736, 0.880017958, 0.890019042, 0.900020264, 0.910021347, 0.920022569, 0.930023708, 0.940024875, 0.950025958, 0.960027181, 0.970028264, 0.980029486, 0.990030611, 1.000031792, 1.010032889, 1.020034111] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:53.442" endtime="20201112 12:27:53.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.437" endtime="20201112 12:27:53.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.447" endtime="20201112 12:27:53.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:53.451" endtime="20201112 12:27:53.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.450" endtime="20201112 12:27:53.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.446" endtime="20201112 12:27:53.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.932" endtime="20201112 12:27:53.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.823" endtime="20201112 12:27:53.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.821" endtime="20201112 12:27:53.473"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:53.475" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.484" endtime="20201112 12:27:55.605"></status>
</kw>
<msg timestamp="20201112 12:27:55.607" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8029858, 'wakeups': [8039882, 8049882, 8059882, 8069882, 8079882, 8089...</msg>
<status status="PASS" starttime="20201112 12:27:53.482" endtime="20201112 12:27:55.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.613" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8029858, 'wakeups': [8039882, 8049882, 8059882, 8069882, 8079882, 8089...</msg>
<status status="PASS" starttime="20201112 12:27:55.609" endtime="20201112 12:27:55.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.615" endtime="20201112 12:27:55.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.479" endtime="20201112 12:27:55.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.477" endtime="20201112 12:27:55.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.627" level="INFO">${RESULT} = {'timer-count': 2, 'start-time': 8029858, 'timer-interval': 10000, 'wakeups': [8039882, 8049882, 8059882, 8069882, 8079882, 8089882, 8099882, 8109882, 8119882, 8129882, 8139882, 8149882, 8159882, 8169...</msg>
<status status="PASS" starttime="20201112 12:27:55.623" endtime="20201112 12:27:55.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.634" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:55.633" endtime="20201112 12:27:55.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.636" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:55.635" endtime="20201112 12:27:55.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.629" endtime="20201112 12:27:55.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.641" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:55.640" endtime="20201112 12:27:55.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.643" level="INFO">VALUE: 8029858</msg>
<status status="PASS" starttime="20201112 12:27:55.642" endtime="20201112 12:27:55.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.637" endtime="20201112 12:27:55.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.648" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:55.647" endtime="20201112 12:27:55.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.651" level="INFO">VALUE: [8039882, 8049882, 8059882, 8069882, 8079882, 8089882, 8099882, 8109882, 8119882, 8129882, 8139882, 8149882, 8159882, 8169882, 8179882, 8189882, 8199882, 8209882, 8219882, 8229882, 8239882, 8249882, 8259882, 8269882, 8279882, 8289882, 8299882, 8309882, 8319882, 8329882, 8339882, 8349882, 8359882, 8369882, 8379882, 8389882, 8399882, 8409882, 8419882, 8429882, 8439882, 8449882, 8459882, 8469882, 8479882, 8489882, 8499882, 8509882, 8519882, 8529882, 8539882, 8549882, 8559882, 8569882, 8579882, 8589882, 8599882, 8609882, 8619882, 8629882, 8639882, 8649882, 8659882, 8669882, 8679882, 8689882, 8699882, 8709882, 8719882, 8729882, 8739882, 8749882, 8759882, 8769882, 8779882, 8789882, 8799882, 8809882, 8819882, 8829882, 8839882, 8849882, 8859882, 8869882, 8879882, 8889882, 8899882, 8909882, 8919882, 8929882, 8939882, 8949882, 8959882, 8969882, 8979882, 8989882, 8999882, 9009882, 9019882, 9029882]</msg>
<status status="PASS" starttime="20201112 12:27:55.650" endtime="20201112 12:27:55.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.645" endtime="20201112 12:27:55.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.658" endtime="20201112 12:27:55.952"></status>
</kw>
<msg timestamp="20201112 12:27:55.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023409181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033435597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.657" endtime="20201112 12:27:55.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023409181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033435597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.956" endtime="20201112 12:27:55.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.964" endtime="20201112 12:27:55.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.654" endtime="20201112 12:27:55.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.652" endtime="20201112 12:27:55.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.993" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:55.968" endtime="20201112 12:27:55.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.998" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:55.997" endtime="20201112 12:27:55.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.000" level="INFO">VALUE: 0.023409181</msg>
<status status="PASS" starttime="20201112 12:27:55.999" endtime="20201112 12:27:56.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.994" endtime="20201112 12:27:56.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.006" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:56.005" endtime="20201112 12:27:56.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.008" level="INFO">VALUE: [0.033435597, 0.043436847, 0.053437875, 0.063439111, 0.073440181, 0.083441389, 0.093442514, 0.103443708, 0.113444778, 0.123446028, 0.133447097, 0.143448361, 0.153449389, 0.163450611, 0.173451694, 0.183452903, 0.193454, 0.203455222, 0.213456306, 0.223457514, 0.233458611, 0.243459833, 0.253460958, 0.263462139, 0.273463264, 0.283464417, 0.293465514, 0.30346675, 0.313467819, 0.323469028, 0.333470194, 0.343471333, 0.353472444, 0.363473653, 0.373474778, 0.383475944, 0.393477028, 0.403478278, 0.413479333, 0.423480556, 0.433481653, 0.443482861, 0.453483958, 0.463485181, 0.473486264, 0.483487486, 0.493488556, 0.503489819, 0.513490861, 0.523492083, 0.533493167, 0.543494389, 0.553495486, 0.563496736, 0.573497778, 0.583499, 0.593500083, 0.603501306, 0.613502403, 0.623503611, 0.633504708, 0.643505903, 0.653507, 0.663508222, 0.673509306, 0.683510514, 0.693511611, 0.703512833, 0.713513917, 0.723515125, 0.733516208, 0.743517431, 0.753518528, 0.76351975, 0.773520819, 0.783522042, 0.793523139, 0.803524389, 0.813525431, 0.823526681, 0.833527736, 0.843528958, 0.853530083, 0.863531264, 0.873532361, 0.883533611, 0.893534653, 0.903535889, 0.913536958, 0.923538167, 0.933539264, 0.943540486, 0.953541583, 0.963542778, 0.973543889, 0.983545083, 0.993546181, 1.003547403, 1.013548486, 1.023549694] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:56.007" endtime="20201112 12:27:56.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.002" endtime="20201112 12:27:56.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.011" endtime="20201112 12:27:56.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:56.015" endtime="20201112 12:27:56.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.013" endtime="20201112 12:27:56.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.009" endtime="20201112 12:27:56.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.476" endtime="20201112 12:27:56.035"></status>
</kw>
<msg timestamp="20201112 12:27:56.036" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.044" endtime="20201112 12:27:58.178"></status>
</kw>
<msg timestamp="20201112 12:27:58.179" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10590043, 'wakeups': [10600068, 10610067, 10620067, 10630067, 10640067...</msg>
<status status="PASS" starttime="20201112 12:27:56.042" endtime="20201112 12:27:58.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.186" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10590043, 'wakeups': [10600068, 10610067, 10620067, 10630067, 10640067...</msg>
<status status="PASS" starttime="20201112 12:27:58.182" endtime="20201112 12:27:58.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.188" endtime="20201112 12:27:58.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.040" endtime="20201112 12:27:58.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.038" endtime="20201112 12:27:58.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:58.200" level="INFO">${RESULT} = {'timer-count': 2, 'start-time': 10590043, 'timer-interval': 10000, 'wakeups': [10600068, 10610067, 10620067, 10630067, 10640067, 10650067, 10660067, 10670067, 10680067, 10690067, 10700067, 10710067, ...</msg>
<status status="PASS" starttime="20201112 12:27:58.196" endtime="20201112 12:27:58.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.209" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:58.208" endtime="20201112 12:27:58.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.211" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:58.210" endtime="20201112 12:27:58.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.202" endtime="20201112 12:27:58.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.216" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:58.215" endtime="20201112 12:27:58.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.218" level="INFO">VALUE: 10590043</msg>
<status status="PASS" starttime="20201112 12:27:58.217" endtime="20201112 12:27:58.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.212" endtime="20201112 12:27:58.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.223" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:58.222" endtime="20201112 12:27:58.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.225" level="INFO">VALUE: [10600068, 10610067, 10620067, 10630067, 10640067, 10650067, 10660067, 10670067, 10680067, 10690067, 10700067, 10710067, 10720067, 10730067, 10740067, 10750067, 10760067, 10770067, 10780067, 10790067, 10800067, 10810067, 10820067, 10830067, 10840067, 10850067, 10860067, 10870067, 10880067, 10890067, 10900067, 10910067, 10920067, 10930067, 10940067, 10950067, 10960067, 10970067, 10980067, 10990067, 11000067, 11010067, 11020067, 11030067, 11040067, 11050067, 11060067, 11070067, 11080067, 11090067, 11100067, 11110067, 11120067, 11130067, 11140067, 11150067, 11160067, 11170067, 11180067, 11190067, 11200067, 11210067, 11220067, 11230067, 11240067, 11250067, 11260067, 11270067, 11280067, 11290067, 11300067, 11310067, 11320067, 11330067, 11340067, 11350067, 11360067, 11370067, 11380067, 11390067, 11400067, 11410067, 11420067, 11430067, 11440067, 11450067, 11460067, 11470067, 11480067, 11490067, 11500067, 11510067, 11520067, 11530067, 11540067, 11550067, 11560067, 11570067, 11580067, 11590067]</msg>
<status status="PASS" starttime="20201112 12:27:58.224" endtime="20201112 12:27:58.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.220" endtime="20201112 12:27:58.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.233" endtime="20201112 12:27:58.525"></status>
</kw>
<msg timestamp="20201112 12:27:58.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020512611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030539639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.232" endtime="20201112 12:27:58.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020512611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030539639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.529" endtime="20201112 12:27:58.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.536" endtime="20201112 12:27:58.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.229" endtime="20201112 12:27:58.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.227" endtime="20201112 12:27:58.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:58.565" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:58.540" endtime="20201112 12:27:58.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.569" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:58.568" endtime="20201112 12:27:58.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.571" level="INFO">VALUE: 0.020512611</msg>
<status status="PASS" starttime="20201112 12:27:58.570" endtime="20201112 12:27:58.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.566" endtime="20201112 12:27:58.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.577" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:58.576" endtime="20201112 12:27:58.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.580" level="INFO">VALUE: [0.030539639, 0.040539833, 0.050540931, 0.060542139, 0.070543222, 0.080544486, 0.090545583, 0.100546736, 0.110547819, 0.120549042, 0.130550125, 0.140551333, 0.150552444, 0.160553639, 0.170554722, 0.180555944, 0.190557069, 0.200558236, 0.210559375, 0.220560542, 0.230561639, 0.240562847, 0.250563944, 0.260565153, 0.27056625, 0.280567458, 0.290568542, 0.300569764, 0.310570847, 0.320572056, 0.330573139, 0.340574361, 0.350575458, 0.360576667, 0.37057775, 0.380578972, 0.390580125, 0.400581264, 0.410582361, 0.420583583, 0.430584653, 0.440585903, 0.450586958, 0.460588208, 0.470589319, 0.480590486, 0.490591583, 0.500592792, 0.510593889, 0.520595083, 0.530596208, 0.540597403, 0.550598486, 0.560599694, 0.570600792, 0.580602014, 0.590603097, 0.600604347, 0.610605444, 0.620606611, 0.630607694, 0.640608903, 0.65061, 0.660611222, 0.670612292, 0.680613528, 0.690614625, 0.700615806, 0.710616972, 0.720618111, 0.730619194, 0.740620431, 0.7506215, 0.760622722, 0.770623806, 0.780625042, 0.790626125, 0.800627333, 0.810628417, 0.820629625, 0.830630722, 0.840631931, 0.850633028, 0.860634278, 0.870635361, 0.880636542, 0.890637625, 0.900638833, 0.910639944, 0.920641139, 0.93064225, 0.940643458, 0.950644528, 0.960645764, 0.970646847, 0.980648069, 0.990649139, 1.000650375, 1.010651486, 1.020652653] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:58.578" endtime="20201112 12:27:58.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.573" endtime="20201112 12:27:58.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.583" endtime="20201112 12:27:58.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:58.586" endtime="20201112 12:27:58.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.585" endtime="20201112 12:27:58.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.581" endtime="20201112 12:27:58.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.036" endtime="20201112 12:27:58.607"></status>
</kw>
<msg timestamp="20201112 12:27:58.608" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.616" endtime="20201112 12:28:00.749"></status>
</kw>
<msg timestamp="20201112 12:28:00.751" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13161226, 'wakeups': [13171251, 13181250, 13191250, 13201250, 13211250...</msg>
<status status="PASS" starttime="20201112 12:27:58.614" endtime="20201112 12:28:00.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.757" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13161226, 'wakeups': [13171251, 13181250, 13191250, 13201250, 13211250...</msg>
<status status="PASS" starttime="20201112 12:28:00.753" endtime="20201112 12:28:00.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.759" endtime="20201112 12:28:00.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.612" endtime="20201112 12:28:00.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.610" endtime="20201112 12:28:00.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:00.771" level="INFO">${RESULT} = {'timer-count': 2, 'start-time': 13161226, 'timer-interval': 10000, 'wakeups': [13171251, 13181250, 13191250, 13201250, 13211250, 13221250, 13231250, 13241250, 13251250, 13261250, 13271250, 13281250, ...</msg>
<status status="PASS" starttime="20201112 12:28:00.767" endtime="20201112 12:28:00.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.776" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:00.775" endtime="20201112 12:28:00.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.779" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:00.778" endtime="20201112 12:28:00.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.773" endtime="20201112 12:28:00.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.784" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:28:00.783" endtime="20201112 12:28:00.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.787" level="INFO">VALUE: 13161226</msg>
<status status="PASS" starttime="20201112 12:28:00.785" endtime="20201112 12:28:00.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.780" endtime="20201112 12:28:00.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.792" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:00.791" endtime="20201112 12:28:00.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.795" level="INFO">VALUE: [13171251, 13181250, 13191250, 13201250, 13211250, 13221250, 13231250, 13241250, 13251250, 13261250, 13271250, 13281250, 13291250, 13301250, 13311250, 13321250, 13331250, 13341250, 13351250, 13361250, 13371250, 13381250, 13391250, 13401250, 13411250, 13421250, 13431250, 13441250, 13451250, 13461250, 13471250, 13481250, 13491250, 13501250, 13511250, 13521250, 13531250, 13541250, 13551250, 13561250, 13571250, 13581250, 13591250, 13601250, 13611250, 13621250, 13631250, 13641250, 13651250, 13661250, 13671250, 13681250, 13691250, 13701250, 13711250, 13721250, 13731250, 13741250, 13751250, 13761250, 13771250, 13781250, 13791250, 13801250, 13811250, 13821250, 13831250, 13841250, 13851250, 13861250, 13871250, 13881250, 13891250, 13901250, 13911250, 13921250, 13931250, 13941250, 13951250, 13961250, 13971250, 13981250, 13991250, 14001250, 14011250, 14021250, 14031250, 14041250, 14051250, 14061250, 14071250, 14081250, 14091250, 14101250, 14111250, 14121250, 14131250, 14141250, 14151250, 14161250]</msg>
<status status="PASS" starttime="20201112 12:28:00.794" endtime="20201112 12:28:00.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.789" endtime="20201112 12:28:00.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.803" endtime="20201112 12:28:01.095"></status>
</kw>
<msg timestamp="20201112 12:28:01.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029882153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.801" endtime="20201112 12:28:01.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029882153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.099" endtime="20201112 12:28:01.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.107" endtime="20201112 12:28:01.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.798" endtime="20201112 12:28:01.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.797" endtime="20201112 12:28:01.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:01.138" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:01.110" endtime="20201112 12:28:01.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.145" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:28:01.143" endtime="20201112 12:28:01.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.148" level="INFO">VALUE: 0.019855417</msg>
<status status="PASS" starttime="20201112 12:28:01.147" endtime="20201112 12:28:01.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.140" endtime="20201112 12:28:01.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.156" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:01.154" endtime="20201112 12:28:01.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.161" level="INFO">VALUE: [0.029882153, 0.039882431, 0.049883458, 0.059884667, 0.06988575, 0.079886986, 0.089888056, 0.099889264, 0.109890347, 0.119891556, 0.129892653, 0.139893875, 0.149894944, 0.159896167, 0.169897264, 0.179898472, 0.189899542, 0.199900764, 0.209901861, 0.219903056, 0.229904153, 0.239905361, 0.249906444, 0.259907681, 0.26990875, 0.279909958, 0.289911056, 0.299912292, 0.309913347, 0.319914583, 0.329915653, 0.339916875, 0.349917958, 0.359919181, 0.369920292, 0.379921486, 0.389922556, 0.399923764, 0.409924861, 0.419926069, 0.429927153, 0.439928389, 0.449929458, 0.459930667, 0.469931792, 0.479932972, 0.489934056, 0.499935278, 0.509936375, 0.519937569, 0.529938681, 0.539939931, 0.549940972, 0.559942181, 0.569943264, 0.579944486, 0.589945569, 0.599946778, 0.609947861, 0.619949083, 0.629950181, 0.639951375, 0.649952486, 0.659953681, 0.669954792, 0.679955986, 0.689957083, 0.699958292, 0.709959375, 0.719960583, 0.729961681, 0.739962889, 0.749964, 0.759965181, 0.769966278, 0.779967486, 0.789968639, 0.799969792, 0.809970875, 0.819972097, 0.829973194, 0.839974389, 0.849975486, 0.859976708, 0.869977792, 0.879979, 0.889980097, 0.899981292, 0.909982403, 0.919983653, 0.929984681, 0.939985972, 0.949986986, 0.959988278, 0.969989292, 0.9799905, 0.989991583, 0.999992806, 1.009993931, 1.019995097] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:01.158" endtime="20201112 12:28:01.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.150" endtime="20201112 12:28:01.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.166" endtime="20201112 12:28:01.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:01.172" endtime="20201112 12:28:01.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.170" endtime="20201112 12:28:01.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.164" endtime="20201112 12:28:01.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.608" endtime="20201112 12:28:01.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.474" endtime="20201112 12:28:01.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.473" endtime="20201112 12:28:01.194"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:01.196" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.205" endtime="20201112 12:28:03.339"></status>
</kw>
<msg timestamp="20201112 12:28:03.340" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15749908, 'wakeups': [15759947, 15769947, 15779947, 15789947, 15799947...</msg>
<status status="PASS" starttime="20201112 12:28:01.203" endtime="20201112 12:28:03.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.344" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15749908, 'wakeups': [15759947, 15769947, 15779947, 15789947, 15799947...</msg>
<status status="PASS" starttime="20201112 12:28:03.342" endtime="20201112 12:28:03.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.345" endtime="20201112 12:28:03.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.200" endtime="20201112 12:28:03.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.198" endtime="20201112 12:28:03.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:03.350" level="INFO">${RESULT} = {'timer-count': 3, 'start-time': 15749908, 'timer-interval': 10000, 'wakeups': [15759947, 15769947, 15779947, 15789947, 15799947, 15809947, 15819947, 15829947, 15839947, 15849947, 15859947, 15869947, ...</msg>
<status status="PASS" starttime="20201112 12:28:03.348" endtime="20201112 12:28:03.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.355" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:03.354" endtime="20201112 12:28:03.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.357" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:03.356" endtime="20201112 12:28:03.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.351" endtime="20201112 12:28:03.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.362" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:03.361" endtime="20201112 12:28:03.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.364" level="INFO">VALUE: 15749908</msg>
<status status="PASS" starttime="20201112 12:28:03.363" endtime="20201112 12:28:03.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.358" endtime="20201112 12:28:03.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.369" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:03.368" endtime="20201112 12:28:03.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.371" level="INFO">VALUE: [15759947, 15769947, 15779947, 15789947, 15799947, 15809947, 15819947, 15829947, 15839947, 15849947, 15859947, 15869947, 15879947, 15889947, 15899947, 15909947, 15919947, 15929947, 15939947, 15949947, 15959947, 15969947, 15979947, 15989947, 15999947, 16009947, 16019947, 16029947, 16039947, 16049947, 16059947, 16069947, 16079947, 16089947, 16099947, 16109947, 16119947, 16129947, 16139947, 16149947, 16159947, 16169947, 16179947, 16189947, 16199947, 16209947, 16219947, 16229947, 16239947, 16249947, 16259947, 16269947, 16279947, 16289947, 16299947, 16309947, 16319947, 16329947, 16339947, 16349947, 16359947, 16369947, 16379947, 16389947, 16399947, 16409947, 16419947, 16429947, 16439947, 16449947, 16459947, 16469947, 16479947, 16489947, 16499947, 16509947, 16519947, 16529947, 16539947, 16549947, 16559947, 16569947, 16579947, 16589947, 16599947, 16609947, 16619947, 16629947, 16639947, 16649947, 16659947, 16669947, 16679947, 16689947, 16699947, 16709947, 16719947, 16729947, 16739947, 16749947]</msg>
<status status="PASS" starttime="20201112 12:28:03.370" endtime="20201112 12:28:03.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.365" endtime="20201112 12:28:03.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.379" endtime="20201112 12:28:03.672"></status>
</kw>
<msg timestamp="20201112 12:28:03.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023177389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033218514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.377" endtime="20201112 12:28:03.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023177389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033218514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.676" endtime="20201112 12:28:03.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.684" endtime="20201112 12:28:03.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.375" endtime="20201112 12:28:03.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.373" endtime="20201112 12:28:03.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:03.711" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:03.687" endtime="20201112 12:28:03.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.716" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:03.715" endtime="20201112 12:28:03.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.718" level="INFO">VALUE: 0.023177389</msg>
<status status="PASS" starttime="20201112 12:28:03.717" endtime="20201112 12:28:03.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.712" endtime="20201112 12:28:03.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.723" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:03.722" endtime="20201112 12:28:03.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.725" level="INFO">VALUE: [0.033218514, 0.043219583, 0.053220667, 0.063221875, 0.073222958, 0.083224167, 0.09322525, 0.103226458, 0.113227556, 0.123228778, 0.133229847, 0.143231056, 0.153232139, 0.163233347, 0.173234444, 0.183235667, 0.19323675, 0.203237944, 0.213239028, 0.22324025, 0.233241333, 0.243242556, 0.253243625, 0.263244833, 0.273245944, 0.283247153, 0.293248222, 0.303249431, 0.313250528, 0.323251764, 0.333252819, 0.343254028, 0.353255125, 0.363256333, 0.373257472, 0.383258681, 0.393259764, 0.403260931, 0.413262028, 0.423263264, 0.433264333, 0.443265542, 0.453266611, 0.463267819, 0.473268958, 0.483270139, 0.493271208, 0.503272417, 0.5132735, 0.523274736, 0.533275833, 0.543277014, 0.553278097, 0.563279347, 0.573280403, 0.583281611, 0.593282694, 0.603283986, 0.613285, 0.623286222, 0.633287361, 0.643288514, 0.653289611, 0.663290806, 0.673291903, 0.683293111, 0.693294208, 0.703295403, 0.713296514, 0.723297708, 0.733298792, 0.743300014, 0.753301083, 0.763302306, 0.773303403, 0.783304597, 0.793305708, 0.803306903, 0.813308, 0.823309194, 0.833310278, 0.8433115, 0.853312583, 0.863313792, 0.873314875, 0.883316139, 0.893317181, 0.903318389, 0.913319472, 0.923320708, 0.933321792, 0.943322986, 0.953324083, 0.963325361, 0.973326389, 0.983327583, 0.993328681, 1.003329889, 1.013330972, 1.023332181] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:03.724" endtime="20201112 12:28:03.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.719" endtime="20201112 12:28:03.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.729" endtime="20201112 12:28:03.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:03.732" endtime="20201112 12:28:03.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.731" endtime="20201112 12:28:03.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.727" endtime="20201112 12:28:03.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.197" endtime="20201112 12:28:03.753"></status>
</kw>
<msg timestamp="20201112 12:28:03.753" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.763" endtime="20201112 12:28:05.893"></status>
</kw>
<msg timestamp="20201112 12:28:05.893" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18307840, 'wakeups': [18317879, 18327879, 18337879, 18347879, 18357879...</msg>
<status status="PASS" starttime="20201112 12:28:03.760" endtime="20201112 12:28:05.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.897" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18307840, 'wakeups': [18317879, 18327879, 18337879, 18347879, 18357879...</msg>
<status status="PASS" starttime="20201112 12:28:05.894" endtime="20201112 12:28:05.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.898" endtime="20201112 12:28:05.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.757" endtime="20201112 12:28:05.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.755" endtime="20201112 12:28:05.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:05.903" level="INFO">${RESULT} = {'timer-count': 3, 'start-time': 18307840, 'timer-interval': 10000, 'wakeups': [18317879, 18327879, 18337879, 18347879, 18357879, 18367879, 18377879, 18387879, 18397879, 18407879, 18417879, 18427879, ...</msg>
<status status="PASS" starttime="20201112 12:28:05.901" endtime="20201112 12:28:05.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.908" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:05.907" endtime="20201112 12:28:05.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.910" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:05.909" endtime="20201112 12:28:05.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.904" endtime="20201112 12:28:05.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.915" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:05.914" endtime="20201112 12:28:05.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.917" level="INFO">VALUE: 18307840</msg>
<status status="PASS" starttime="20201112 12:28:05.916" endtime="20201112 12:28:05.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.911" endtime="20201112 12:28:05.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.922" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:05.921" endtime="20201112 12:28:05.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.924" level="INFO">VALUE: [18317879, 18327879, 18337879, 18347879, 18357879, 18367879, 18377879, 18387879, 18397879, 18407879, 18417879, 18427879, 18437879, 18447879, 18457879, 18467879, 18477879, 18487879, 18497879, 18507879, 18517879, 18527879, 18537879, 18547879, 18557879, 18567879, 18577879, 18587879, 18597879, 18607879, 18617879, 18627879, 18637879, 18647879, 18657879, 18667879, 18677879, 18687879, 18697879, 18707879, 18717879, 18727879, 18737879, 18747879, 18757879, 18767879, 18777879, 18787879, 18797879, 18807879, 18817879, 18827879, 18837879, 18847879, 18857879, 18867879, 18877879, 18887879, 18897879, 18907879, 18917879, 18927879, 18937879, 18947879, 18957879, 18967879, 18977879, 18987879, 18997879, 19007879, 19017879, 19027879, 19037879, 19047879, 19057879, 19067879, 19077879, 19087879, 19097879, 19107879, 19117879, 19127879, 19137879, 19147879, 19157879, 19167879, 19177879, 19187879, 19197879, 19207879, 19217879, 19227879, 19237879, 19247879, 19257879, 19267879, 19277879, 19287879, 19297879, 19307879]</msg>
<status status="PASS" starttime="20201112 12:28:05.923" endtime="20201112 12:28:05.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.919" endtime="20201112 12:28:05.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.932" endtime="20201112 12:28:06.225"></status>
</kw>
<msg timestamp="20201112 12:28:06.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020651, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030692139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:05.930" endtime="20201112 12:28:06.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020651, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030692139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:06.229" endtime="20201112 12:28:06.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.236" endtime="20201112 12:28:06.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.928" endtime="20201112 12:28:06.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.926" endtime="20201112 12:28:06.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:06.265" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:06.240" endtime="20201112 12:28:06.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.277" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:06.276" endtime="20201112 12:28:06.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.279" level="INFO">VALUE: 0.020651</msg>
<status status="PASS" starttime="20201112 12:28:06.278" endtime="20201112 12:28:06.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.273" endtime="20201112 12:28:06.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.285" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:06.284" endtime="20201112 12:28:06.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.287" level="INFO">VALUE: [0.030692139, 0.040693194, 0.050694306, 0.060695514, 0.070696597, 0.080697819, 0.090698917, 0.100700139, 0.11070125, 0.120702458, 0.130703556, 0.140704778, 0.150705889, 0.160707111, 0.170708194, 0.180709417, 0.190710528, 0.200711819, 0.210712833, 0.220714056, 0.230715181, 0.240716375, 0.250717472, 0.260718722, 0.270719792, 0.280721097, 0.290722125, 0.300723333, 0.310724431, 0.320725653, 0.330726764, 0.340728028, 0.350729125, 0.360730292, 0.370731389, 0.380732611, 0.390733722, 0.400734931, 0.410736042, 0.42073725, 0.430738361, 0.440739569, 0.450740681, 0.460741903, 0.470742986, 0.480744208, 0.490745319, 0.500746569, 0.510747611, 0.520748847, 0.530749958, 0.540751208, 0.55075225, 0.560753486, 0.570754597, 0.580755792, 0.590756889, 0.600758111, 0.610759208, 0.620760458, 0.630761583, 0.640762833, 0.650763847, 0.660765083, 0.670766167, 0.680767375, 0.690768486, 0.700769694, 0.710770819, 0.720772028, 0.730773194, 0.740774347, 0.750775431, 0.760776653, 0.77077775, 0.780778986, 0.790780069, 0.800781292, 0.810782389, 0.820783625, 0.830784708, 0.840785931, 0.850787056, 0.86078825, 0.870789347, 0.880790583, 0.890791653, 0.900792875, 0.910793972, 0.920795194, 0.930796292, 0.940797514, 0.950798611, 0.960799861, 0.970800931, 0.980802167, 0.99080325, 1.000804486, 1.010805569, 1.020806806] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:06.286" endtime="20201112 12:28:06.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.281" endtime="20201112 12:28:06.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.290" endtime="20201112 12:28:06.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:06.294" endtime="20201112 12:28:06.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.292" endtime="20201112 12:28:06.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.288" endtime="20201112 12:28:06.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.754" endtime="20201112 12:28:06.315"></status>
</kw>
<msg timestamp="20201112 12:28:06.315" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.323" endtime="20201112 12:28:08.450"></status>
</kw>
<msg timestamp="20201112 12:28:08.450" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20868398, 'wakeups': [20878437, 20888437, 20898437, 20908437, 20918437...</msg>
<status status="PASS" starttime="20201112 12:28:06.322" endtime="20201112 12:28:08.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.453" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20868398, 'wakeups': [20878437, 20888437, 20898437, 20908437, 20918437...</msg>
<status status="PASS" starttime="20201112 12:28:08.452" endtime="20201112 12:28:08.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.454" endtime="20201112 12:28:08.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.319" endtime="20201112 12:28:08.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.317" endtime="20201112 12:28:08.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:08.460" level="INFO">${RESULT} = {'timer-count': 3, 'start-time': 20868398, 'timer-interval': 10000, 'wakeups': [20878437, 20888437, 20898437, 20908437, 20918437, 20928437, 20938437, 20948437, 20958437, 20968437, 20978437, 20988437, ...</msg>
<status status="PASS" starttime="20201112 12:28:08.458" endtime="20201112 12:28:08.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.464" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:08.463" endtime="20201112 12:28:08.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.466" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:08.465" endtime="20201112 12:28:08.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.461" endtime="20201112 12:28:08.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.473" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:08.471" endtime="20201112 12:28:08.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.475" level="INFO">VALUE: 20868398</msg>
<status status="PASS" starttime="20201112 12:28:08.474" endtime="20201112 12:28:08.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.468" endtime="20201112 12:28:08.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.480" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:08.479" endtime="20201112 12:28:08.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.483" level="INFO">VALUE: [20878437, 20888437, 20898437, 20908437, 20918437, 20928437, 20938437, 20948437, 20958437, 20968437, 20978437, 20988437, 20998437, 21008437, 21018437, 21028437, 21038437, 21048437, 21058437, 21068437, 21078437, 21088437, 21098437, 21108437, 21118437, 21128437, 21138437, 21148437, 21158437, 21168437, 21178437, 21188437, 21198437, 21208437, 21218437, 21228437, 21238437, 21248437, 21258437, 21268437, 21278437, 21288437, 21298437, 21308437, 21318437, 21328437, 21338437, 21348437, 21358437, 21368437, 21378437, 21388437, 21398437, 21408437, 21418437, 21428437, 21438437, 21448437, 21458437, 21468437, 21478437, 21488437, 21498437, 21508437, 21518437, 21528437, 21538437, 21548437, 21558437, 21568437, 21578437, 21588437, 21598437, 21608437, 21618437, 21628437, 21638437, 21648437, 21658437, 21668437, 21678437, 21688437, 21698437, 21708437, 21718437, 21728437, 21738437, 21748437, 21758437, 21768437, 21778437, 21788437, 21798437, 21808437, 21818437, 21828437, 21838437, 21848437, 21858437, 21868437]</msg>
<status status="PASS" starttime="20201112 12:28:08.482" endtime="20201112 12:28:08.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.477" endtime="20201112 12:28:08.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.490" endtime="20201112 12:28:08.782"></status>
</kw>
<msg timestamp="20201112 12:28:08.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019868333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029909417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.489" endtime="20201112 12:28:08.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019868333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029909417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.786" endtime="20201112 12:28:08.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.794" endtime="20201112 12:28:08.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.486" endtime="20201112 12:28:08.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.484" endtime="20201112 12:28:08.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:08.822" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:08.797" endtime="20201112 12:28:08.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.826" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:08.825" endtime="20201112 12:28:08.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.828" level="INFO">VALUE: 0.019868333</msg>
<status status="PASS" starttime="20201112 12:28:08.827" endtime="20201112 12:28:08.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.823" endtime="20201112 12:28:08.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.834" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:08.833" endtime="20201112 12:28:08.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.837" level="INFO">VALUE: [0.029909417, 0.039910486, 0.049911611, 0.059912875, 0.069913917, 0.079915111, 0.089916208, 0.099917472, 0.109918514, 0.11991975, 0.129920903, 0.139922097, 0.149923139, 0.159924361, 0.169925542, 0.179926681, 0.189927778, 0.199928986, 0.209930097, 0.219931319, 0.229932458, 0.239933625, 0.249934708, 0.259935931, 0.269937042, 0.27993825, 0.289939347, 0.299940569, 0.309941681, 0.319942944, 0.329943972, 0.339945208, 0.349946292, 0.359947583, 0.369948625, 0.379949833, 0.389950931, 0.399952139, 0.409953264, 0.419954458, 0.429955556, 0.439956819, 0.449957889, 0.459959083, 0.469960181, 0.479961417, 0.489962514, 0.499963722, 0.509964833, 0.519966097, 0.529967125, 0.539968347, 0.549969458, 0.559970681, 0.569971806, 0.579973, 0.589974097, 0.599975319, 0.609976403, 0.619977611, 0.629978708, 0.639979944, 0.649981042, 0.65998225, 0.669983347, 0.679984556, 0.689985653, 0.699986889, 0.709988, 0.719989208, 0.729990306, 0.739991514, 0.749992597, 0.759993833, 0.769994931, 0.779996139, 0.789997319, 0.799998486, 0.809999556, 0.820000778, 0.830001917, 0.840003097, 0.850004181, 0.860005403, 0.8700065, 0.880007722, 0.890008833, 0.900010056, 0.910011125, 0.920012361, 0.930013444, 0.940014667, 0.950015764, 0.960016986, 0.970018069, 0.980019292, 0.990020389, 1.000021611, 1.010022708, 1.020023931] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:08.836" endtime="20201112 12:28:08.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.830" endtime="20201112 12:28:08.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.841" endtime="20201112 12:28:08.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:08.844" endtime="20201112 12:28:08.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.843" endtime="20201112 12:28:08.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.839" endtime="20201112 12:28:08.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.315" endtime="20201112 12:28:08.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.195" endtime="20201112 12:28:08.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.194" endtime="20201112 12:28:08.865"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:08.868" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.876" endtime="20201112 12:28:11.004"></status>
</kw>
<msg timestamp="20201112 12:28:11.005" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23421580, 'wakeups': [23431637, 23441635, 23451635, 23461635, 23471635...</msg>
<status status="PASS" starttime="20201112 12:28:08.875" endtime="20201112 12:28:11.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.008" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23421580, 'wakeups': [23431637, 23441635, 23451635, 23461635, 23471635...</msg>
<status status="PASS" starttime="20201112 12:28:11.006" endtime="20201112 12:28:11.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.009" endtime="20201112 12:28:11.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.872" endtime="20201112 12:28:11.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.870" endtime="20201112 12:28:11.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:11.014" level="INFO">${RESULT} = {'timer-count': 4, 'start-time': 23421580, 'timer-interval': 10000, 'wakeups': [23431637, 23441635, 23451635, 23461635, 23471635, 23481635, 23491635, 23501635, 23511635, 23521635, 23531635, 23541635, ...</msg>
<status status="PASS" starttime="20201112 12:28:11.012" endtime="20201112 12:28:11.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.019" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:11.018" endtime="20201112 12:28:11.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.021" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:11.020" endtime="20201112 12:28:11.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.015" endtime="20201112 12:28:11.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.026" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:11.025" endtime="20201112 12:28:11.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.028" level="INFO">VALUE: 23421580</msg>
<status status="PASS" starttime="20201112 12:28:11.027" endtime="20201112 12:28:11.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.022" endtime="20201112 12:28:11.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.033" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:11.032" endtime="20201112 12:28:11.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.035" level="INFO">VALUE: [23431637, 23441635, 23451635, 23461635, 23471635, 23481635, 23491635, 23501635, 23511635, 23521635, 23531635, 23541635, 23551635, 23561635, 23571635, 23581635, 23591635, 23601635, 23611635, 23621635, 23631635, 23641635, 23651635, 23661635, 23671635, 23681635, 23691635, 23701635, 23711635, 23721635, 23731635, 23741635, 23751635, 23761635, 23771635, 23781635, 23791635, 23801635, 23811635, 23821635, 23831635, 23841635, 23851635, 23861635, 23871635, 23881635, 23891635, 23901635, 23911635, 23921635, 23931635, 23941635, 23951635, 23961635, 23971635, 23981635, 23991635, 24001635, 24011635, 24021635, 24031635, 24041635, 24051635, 24061635, 24071635, 24081635, 24091635, 24101635, 24111635, 24121635, 24131635, 24141635, 24151635, 24161635, 24171635, 24181635, 24191635, 24201635, 24211635, 24221635, 24231635, 24241635, 24251635, 24261635, 24271635, 24281635, 24291635, 24301635, 24311635, 24321635, 24331635, 24341635, 24351635, 24361635, 24371635, 24381635, 24391635, 24401635, 24411635, 24421635]</msg>
<status status="PASS" starttime="20201112 12:28:11.034" endtime="20201112 12:28:11.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.029" endtime="20201112 12:28:11.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.044" endtime="20201112 12:28:11.338"></status>
</kw>
<msg timestamp="20201112 12:28:11.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032602153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.042" endtime="20201112 12:28:11.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032602153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.342" endtime="20201112 12:28:11.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.350" endtime="20201112 12:28:11.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.039" endtime="20201112 12:28:11.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.037" endtime="20201112 12:28:11.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:11.378" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:11.353" endtime="20201112 12:28:11.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.382" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:11.381" endtime="20201112 12:28:11.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.385" level="INFO">VALUE: 0.022544056</msg>
<status status="PASS" starttime="20201112 12:28:11.384" endtime="20201112 12:28:11.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.379" endtime="20201112 12:28:11.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.390" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:11.389" endtime="20201112 12:28:11.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.392" level="INFO">VALUE: [0.032602153, 0.04260175, 0.052602847, 0.062604069, 0.072605153, 0.082606389, 0.092607458, 0.102608681, 0.112609778, 0.122611, 0.132612097, 0.142613306, 0.152614389, 0.162615611, 0.172616708, 0.182617931, 0.192619014, 0.202620236, 0.212621333, 0.222622556, 0.232623639, 0.242624861, 0.252625958, 0.262627181, 0.272628278, 0.2826295, 0.292630597, 0.302631833, 0.312632903, 0.322634139, 0.332635208, 0.342636444, 0.352637528, 0.362638764, 0.372639889, 0.382641069, 0.392642153, 0.402643375, 0.412644472, 0.422645764, 0.432646792, 0.442648042, 0.452649139, 0.462650319, 0.472651431, 0.482652639, 0.492653722, 0.502654958, 0.512656042, 0.522657333, 0.532658361, 0.542659583, 0.552660694, 0.562661903, 0.572663, 0.582664222, 0.592665333, 0.602666514, 0.612667611, 0.622668833, 0.632669931, 0.642671167, 0.652672236, 0.662673472, 0.672674556, 0.682675778, 0.692676958, 0.702678111, 0.712679194, 0.722680417, 0.732681514, 0.742682722, 0.752683819, 0.762685083, 0.772686139, 0.782687347, 0.792688458, 0.802689681, 0.812690764, 0.822691986, 0.832693069, 0.842694361, 0.852695389, 0.862696611, 0.872697694, 0.882698917, 0.892700028, 0.902701236, 0.912702347, 0.922703556, 0.932704708, 0.942705917, 0.952706958, 0.962708194, 0.972709278, 0.982710486, 0.992711597, 1.002712861, 1.012713903, 1.022715153] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:11.391" endtime="20201112 12:28:11.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.386" endtime="20201112 12:28:11.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.395" endtime="20201112 12:28:11.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:11.399" endtime="20201112 12:28:11.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.397" endtime="20201112 12:28:11.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.394" endtime="20201112 12:28:11.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.869" endtime="20201112 12:28:11.420"></status>
</kw>
<msg timestamp="20201112 12:28:11.420" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.430" endtime="20201112 12:28:13.559"></status>
</kw>
<msg timestamp="20201112 12:28:13.560" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25979261, 'wakeups': [25989318, 25999316, 26009316, 26019316, 26029316...</msg>
<status status="PASS" starttime="20201112 12:28:11.427" endtime="20201112 12:28:13.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.563" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25979261, 'wakeups': [25989318, 25999316, 26009316, 26019316, 26029316...</msg>
<status status="PASS" starttime="20201112 12:28:13.561" endtime="20201112 12:28:13.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.564" endtime="20201112 12:28:13.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.424" endtime="20201112 12:28:13.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.422" endtime="20201112 12:28:13.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:13.569" level="INFO">${RESULT} = {'timer-count': 4, 'start-time': 25979261, 'timer-interval': 10000, 'wakeups': [25989318, 25999316, 26009316, 26019316, 26029316, 26039316, 26049316, 26059316, 26069316, 26079316, 26089316, 26099316, ...</msg>
<status status="PASS" starttime="20201112 12:28:13.567" endtime="20201112 12:28:13.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.574" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:13.573" endtime="20201112 12:28:13.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.576" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:13.575" endtime="20201112 12:28:13.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.570" endtime="20201112 12:28:13.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.581" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:13.580" endtime="20201112 12:28:13.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.583" level="INFO">VALUE: 25979261</msg>
<status status="PASS" starttime="20201112 12:28:13.582" endtime="20201112 12:28:13.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.577" endtime="20201112 12:28:13.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.588" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:13.587" endtime="20201112 12:28:13.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.590" level="INFO">VALUE: [25989318, 25999316, 26009316, 26019316, 26029316, 26039316, 26049316, 26059316, 26069316, 26079316, 26089316, 26099316, 26109316, 26119316, 26129316, 26139316, 26149316, 26159316, 26169316, 26179316, 26189316, 26199316, 26209316, 26219316, 26229316, 26239316, 26249316, 26259316, 26269316, 26279316, 26289316, 26299316, 26309316, 26319316, 26329316, 26339316, 26349316, 26359316, 26369316, 26379316, 26389316, 26399316, 26409316, 26419316, 26429316, 26439316, 26449316, 26459316, 26469316, 26479316, 26489316, 26499316, 26509316, 26519316, 26529316, 26539316, 26549316, 26559316, 26569316, 26579316, 26589316, 26599316, 26609316, 26619316, 26629316, 26639316, 26649316, 26659316, 26669316, 26679316, 26689316, 26699316, 26709316, 26719316, 26729316, 26739316, 26749316, 26759316, 26769316, 26779316, 26789316, 26799316, 26809316, 26819316, 26829316, 26839316, 26849316, 26859316, 26869316, 26879316, 26889316, 26899316, 26909316, 26919316, 26929316, 26939316, 26949316, 26959316, 26969316, 26979316]</msg>
<status status="PASS" starttime="20201112 12:28:13.589" endtime="20201112 12:28:13.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.584" endtime="20201112 12:28:13.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.598" endtime="20201112 12:28:13.891"></status>
</kw>
<msg timestamp="20201112 12:28:13.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0252925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035350958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:13.596" endtime="20201112 12:28:13.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0252925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035350958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:13.895" endtime="20201112 12:28:13.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.903" endtime="20201112 12:28:13.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.594" endtime="20201112 12:28:13.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.592" endtime="20201112 12:28:13.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:13.931" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:13.907" endtime="20201112 12:28:13.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.936" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:13.935" endtime="20201112 12:28:13.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.938" level="INFO">VALUE: 0.0252925</msg>
<status status="PASS" starttime="20201112 12:28:13.937" endtime="20201112 12:28:13.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.932" endtime="20201112 12:28:13.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.944" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:13.943" endtime="20201112 12:28:13.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.946" level="INFO">VALUE: [0.035350958, 0.045350514, 0.055351611, 0.065352833, 0.075353958, 0.085355139, 0.095356236, 0.105357472, 0.115358569, 0.12535975, 0.135360847, 0.145362069, 0.155363167, 0.165364403, 0.1753655, 0.185366694, 0.195367792, 0.205369, 0.215370083, 0.225371319, 0.235372417, 0.245373625, 0.255374708, 0.265375931, 0.275377042, 0.285378264, 0.295379375, 0.305380569, 0.315381653, 0.325382889, 0.335383972, 0.345385181, 0.355386278, 0.365387514, 0.375388597, 0.385389806, 0.395390903, 0.405392125, 0.415393208, 0.425394431, 0.435395542, 0.44539675, 0.455397833, 0.465399056, 0.475400153, 0.485401375, 0.495402472, 0.505403694, 0.515404778, 0.525406, 0.535407083, 0.545408319, 0.555409403, 0.565410625, 0.575411708, 0.585412931, 0.595414028, 0.60541525, 0.615416361, 0.625417556, 0.635418667, 0.645419875, 0.655420958, 0.665422181, 0.675423292, 0.6854245, 0.695425583, 0.705426819, 0.715427903, 0.725429125, 0.735430208, 0.745431431, 0.755432542, 0.76543375, 0.775434847, 0.785436069, 0.795437167, 0.805438389, 0.815439472, 0.825440681, 0.835441792, 0.845443014, 0.855444111, 0.865445319, 0.875446403, 0.885447625, 0.895448708, 0.905449931, 0.915451028, 0.92545225, 0.935453347, 0.945454556, 0.955455653, 0.965456875, 0.975457972, 0.985459194, 0.995460278, 1.005461514, 1.015462597, 1.025463806] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:13.945" endtime="20201112 12:28:13.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.940" endtime="20201112 12:28:13.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.949" endtime="20201112 12:28:13.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:13.953" endtime="20201112 12:28:13.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.951" endtime="20201112 12:28:13.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.947" endtime="20201112 12:28:13.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.421" endtime="20201112 12:28:13.973"></status>
</kw>
<msg timestamp="20201112 12:28:13.974" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.982" endtime="20201112 12:28:16.113"></status>
</kw>
<msg timestamp="20201112 12:28:16.114" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28527062, 'wakeups': [28537118, 28547117, 28557117, 28567117, 28577117...</msg>
<status status="PASS" starttime="20201112 12:28:13.980" endtime="20201112 12:28:16.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.120" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28527062, 'wakeups': [28537118, 28547117, 28557117, 28567117, 28577117...</msg>
<status status="PASS" starttime="20201112 12:28:16.116" endtime="20201112 12:28:16.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.123" endtime="20201112 12:28:16.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.978" endtime="20201112 12:28:16.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.976" endtime="20201112 12:28:16.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:16.134" level="INFO">${RESULT} = {'timer-count': 4, 'start-time': 28527062, 'timer-interval': 10000, 'wakeups': [28537118, 28547117, 28557117, 28567117, 28577117, 28587117, 28597117, 28607117, 28617117, 28627117, 28637117, 28647117, ...</msg>
<status status="PASS" starttime="20201112 12:28:16.130" endtime="20201112 12:28:16.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.144" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:16.142" endtime="20201112 12:28:16.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.148" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:16.146" endtime="20201112 12:28:16.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.136" endtime="20201112 12:28:16.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.155" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:16.154" endtime="20201112 12:28:16.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.159" level="INFO">VALUE: 28527062</msg>
<status status="PASS" starttime="20201112 12:28:16.158" endtime="20201112 12:28:16.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.151" endtime="20201112 12:28:16.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.164" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:16.163" endtime="20201112 12:28:16.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.166" level="INFO">VALUE: [28537118, 28547117, 28557117, 28567117, 28577117, 28587117, 28597117, 28607117, 28617117, 28627117, 28637117, 28647117, 28657117, 28667117, 28677117, 28687117, 28697117, 28707117, 28717117, 28727117, 28737117, 28747117, 28757117, 28767117, 28777117, 28787117, 28797117, 28807117, 28817117, 28827117, 28837117, 28847117, 28857117, 28867117, 28877117, 28887117, 28897117, 28907117, 28917117, 28927117, 28937117, 28947117, 28957117, 28967117, 28977117, 28987117, 28997117, 29007117, 29017117, 29027117, 29037117, 29047117, 29057117, 29067117, 29077117, 29087117, 29097117, 29107117, 29117117, 29127117, 29137117, 29147117, 29157117, 29167117, 29177117, 29187117, 29197117, 29207117, 29217117, 29227117, 29237117, 29247117, 29257117, 29267117, 29277117, 29287117, 29297117, 29307117, 29317117, 29327117, 29337117, 29347117, 29357117, 29367117, 29377117, 29387117, 29397117, 29407117, 29417117, 29427117, 29437117, 29447117, 29457117, 29467117, 29477117, 29487117, 29497117, 29507117, 29517117, 29527117]</msg>
<status status="PASS" starttime="20201112 12:28:16.165" endtime="20201112 12:28:16.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.160" endtime="20201112 12:28:16.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.174" endtime="20201112 12:28:16.465"></status>
</kw>
<msg timestamp="20201112 12:28:16.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029804319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:16.172" endtime="20201112 12:28:16.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029804319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:16.469" endtime="20201112 12:28:16.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.477" endtime="20201112 12:28:16.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.169" endtime="20201112 12:28:16.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.168" endtime="20201112 12:28:16.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:16.504" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:16.480" endtime="20201112 12:28:16.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.508" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:16.507" endtime="20201112 12:28:16.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.511" level="INFO">VALUE: 0.019746556</msg>
<status status="PASS" starttime="20201112 12:28:16.510" endtime="20201112 12:28:16.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.505" endtime="20201112 12:28:16.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.516" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:16.515" endtime="20201112 12:28:16.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.523" level="INFO">VALUE: [0.029804319, 0.039804917, 0.049806, 0.059807236, 0.069808306, 0.079809583, 0.089810639, 0.099811833, 0.109812917, 0.119814167, 0.129815236, 0.139816444, 0.149817542, 0.15981875, 0.169819847, 0.179821083, 0.189822181, 0.199823375, 0.209824458, 0.219825681, 0.229826778, 0.239827986, 0.249829083, 0.259830319, 0.269831403, 0.279832611, 0.289833722, 0.299834917, 0.309836014, 0.319837278, 0.329838333, 0.339839556, 0.349840639, 0.359841847, 0.369842944, 0.379844167, 0.38984525, 0.399846472, 0.409847569, 0.419848833, 0.429849861, 0.439851139, 0.449852181, 0.459853403, 0.469854486, 0.479855708, 0.489856792, 0.499858014, 0.509859125, 0.519860319, 0.529861431, 0.539862639, 0.549863722, 0.559864944, 0.569866083, 0.57986725, 0.589868361, 0.599869583, 0.609870653, 0.619871875, 0.629872972, 0.639874194, 0.649875278, 0.659876542, 0.669877639, 0.679878819, 0.689879972, 0.699881111, 0.709882236, 0.719883431, 0.729884528, 0.739885736, 0.749886819, 0.759888042, 0.769889194, 0.779890347, 0.789891444, 0.799892681, 0.809893806, 0.819894972, 0.829896083, 0.839897278, 0.849898375, 0.859899597, 0.869900681, 0.879901917, 0.889903028, 0.899904264, 0.909905319, 0.919906542, 0.929907625, 0.939908833, 0.949909931, 0.959911139, 0.969912236, 0.9799135, 0.989914556, 0.999915778, 1.009916903, 1.019918069] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:16.518" endtime="20201112 12:28:16.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.512" endtime="20201112 12:28:16.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.526" endtime="20201112 12:28:16.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:16.530" endtime="20201112 12:28:16.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.528" endtime="20201112 12:28:16.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.525" endtime="20201112 12:28:16.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.974" endtime="20201112 12:28:16.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.867" endtime="20201112 12:28:16.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.866" endtime="20201112 12:28:16.551"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:16.553" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.562" endtime="20201112 12:28:18.683"></status>
</kw>
<msg timestamp="20201112 12:28:18.684" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31106374, 'wakeups': [31116448, 31126447, 31136447, 31146447, 31156447...</msg>
<status status="PASS" starttime="20201112 12:28:16.560" endtime="20201112 12:28:18.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.690" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31106374, 'wakeups': [31116448, 31126447, 31136447, 31146447, 31156447...</msg>
<status status="PASS" starttime="20201112 12:28:18.686" endtime="20201112 12:28:18.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.692" endtime="20201112 12:28:18.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.557" endtime="20201112 12:28:18.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.555" endtime="20201112 12:28:18.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:18.703" level="INFO">${RESULT} = {'timer-count': 5, 'start-time': 31106374, 'timer-interval': 10000, 'wakeups': [31116448, 31126447, 31136447, 31146447, 31156447, 31166447, 31176447, 31186447, 31196447, 31206447, 31216447, 31226447, ...</msg>
<status status="PASS" starttime="20201112 12:28:18.699" endtime="20201112 12:28:18.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.712" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:18.709" endtime="20201112 12:28:18.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.715" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:18.714" endtime="20201112 12:28:18.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.705" endtime="20201112 12:28:18.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.720" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:18.719" endtime="20201112 12:28:18.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.722" level="INFO">VALUE: 31106374</msg>
<status status="PASS" starttime="20201112 12:28:18.721" endtime="20201112 12:28:18.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.716" endtime="20201112 12:28:18.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.727" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:18.726" endtime="20201112 12:28:18.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.729" level="INFO">VALUE: [31116448, 31126447, 31136447, 31146447, 31156447, 31166447, 31176447, 31186447, 31196447, 31206447, 31216447, 31226447, 31236447, 31246447, 31256447, 31266447, 31276447, 31286447, 31296447, 31306447, 31316447, 31326447, 31336447, 31346447, 31356447, 31366447, 31376447, 31386447, 31396447, 31406447, 31416447, 31426447, 31436447, 31446447, 31456447, 31466447, 31476447, 31486447, 31496447, 31506447, 31516447, 31526447, 31536447, 31546447, 31556447, 31566447, 31576447, 31586447, 31596447, 31606447, 31616447, 31626447, 31636447, 31646447, 31656447, 31666447, 31676447, 31686447, 31696447, 31706447, 31716447, 31726447, 31736447, 31746447, 31756447, 31766447, 31776447, 31786447, 31796447, 31806447, 31816447, 31826447, 31836447, 31846447, 31856447, 31866447, 31876447, 31886447, 31896447, 31906447, 31916447, 31926447, 31936447, 31946447, 31956447, 31966447, 31976447, 31986447, 31996447, 32006447, 32016447, 32026447, 32036447, 32046447, 32056447, 32066447, 32076447, 32086447, 32096447, 32106447]</msg>
<status status="PASS" starttime="20201112 12:28:18.728" endtime="20201112 12:28:18.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.723" endtime="20201112 12:28:18.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.737" endtime="20201112 12:28:19.028"></status>
</kw>
<msg timestamp="20201112 12:28:19.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032046764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:18.735" endtime="20201112 12:28:19.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032046764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:19.032" endtime="20201112 12:28:19.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.040" endtime="20201112 12:28:19.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.733" endtime="20201112 12:28:19.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.731" endtime="20201112 12:28:19.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:19.067" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:19.043" endtime="20201112 12:28:19.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.072" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:19.071" endtime="20201112 12:28:19.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.074" level="INFO">VALUE: 0.021971347</msg>
<status status="PASS" starttime="20201112 12:28:19.073" endtime="20201112 12:28:19.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.068" endtime="20201112 12:28:19.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.080" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:19.078" endtime="20201112 12:28:19.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.082" level="INFO">VALUE: [0.032046764, 0.042046583, 0.052047694, 0.062048889, 0.072049986, 0.082051194, 0.092052292, 0.1020535, 0.112054597, 0.122055806, 0.132056944, 0.142058111, 0.152059264, 0.162060417, 0.172061514, 0.182062722, 0.192063819, 0.202065028, 0.212066125, 0.222067375, 0.232068431, 0.242069653, 0.252070778, 0.262071958, 0.272073097, 0.282074264, 0.292075347, 0.302076597, 0.312077736, 0.322078875, 0.332079972, 0.342081194, 0.352082347, 0.362083514, 0.372084583, 0.382085806, 0.392086889, 0.402088111, 0.412089222, 0.422090417, 0.432091514, 0.442092722, 0.452093833, 0.462095042, 0.472096139, 0.482097389, 0.492098431, 0.502099667, 0.512100764, 0.522101958, 0.532103097, 0.542104278, 0.552105361, 0.562106569, 0.572107667, 0.582108903, 0.592109972, 0.602111194, 0.612112278, 0.6221135, 0.632114597, 0.642115819, 0.652116944, 0.662118111, 0.672119208, 0.682120431, 0.692121514, 0.702122736, 0.712123819, 0.722125111, 0.732126125, 0.742127361, 0.752128444, 0.762129653, 0.77213075, 0.782131972, 0.792133056, 0.802134278, 0.812135389, 0.822136583, 0.832137681, 0.842138931, 0.852140042, 0.862141194, 0.872142292, 0.882143528, 0.892144597, 0.902145819, 0.912146972, 0.922148125, 0.932149208, 0.942150444, 0.952151569, 0.962152736, 0.972153833, 0.982155042, 0.992156153, 1.002157361, 1.012158458, 1.022159681] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:19.081" endtime="20201112 12:28:19.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.075" endtime="20201112 12:28:19.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.085" endtime="20201112 12:28:19.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:19.089" endtime="20201112 12:28:19.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.087" endtime="20201112 12:28:19.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.083" endtime="20201112 12:28:19.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.554" endtime="20201112 12:28:19.110"></status>
</kw>
<msg timestamp="20201112 12:28:19.110" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.119" endtime="20201112 12:28:21.254"></status>
</kw>
<msg timestamp="20201112 12:28:21.255" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33664306, 'wakeups': [33674380, 33684379, 33694379, 33704379, 33714379...</msg>
<status status="PASS" starttime="20201112 12:28:19.118" endtime="20201112 12:28:21.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.261" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33664306, 'wakeups': [33674380, 33684379, 33694379, 33704379, 33714379...</msg>
<status status="PASS" starttime="20201112 12:28:21.257" endtime="20201112 12:28:21.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.264" endtime="20201112 12:28:21.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.114" endtime="20201112 12:28:21.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.112" endtime="20201112 12:28:21.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:21.272" level="INFO">${RESULT} = {'timer-count': 5, 'start-time': 33664306, 'timer-interval': 10000, 'wakeups': [33674380, 33684379, 33694379, 33704379, 33714379, 33724379, 33734379, 33744379, 33754379, 33764379, 33774379, 33784379, ...</msg>
<status status="PASS" starttime="20201112 12:28:21.270" endtime="20201112 12:28:21.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.277" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:21.276" endtime="20201112 12:28:21.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.279" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:21.278" endtime="20201112 12:28:21.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.273" endtime="20201112 12:28:21.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.284" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:21.283" endtime="20201112 12:28:21.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.286" level="INFO">VALUE: 33664306</msg>
<status status="PASS" starttime="20201112 12:28:21.285" endtime="20201112 12:28:21.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.280" endtime="20201112 12:28:21.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.291" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:21.290" endtime="20201112 12:28:21.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.293" level="INFO">VALUE: [33674380, 33684379, 33694379, 33704379, 33714379, 33724379, 33734379, 33744379, 33754379, 33764379, 33774379, 33784379, 33794379, 33804379, 33814379, 33824379, 33834379, 33844379, 33854379, 33864379, 33874379, 33884379, 33894379, 33904379, 33914379, 33924379, 33934379, 33944379, 33954379, 33964379, 33974379, 33984379, 33994379, 34004379, 34014379, 34024379, 34034379, 34044379, 34054379, 34064379, 34074379, 34084379, 34094379, 34104379, 34114379, 34124379, 34134379, 34144379, 34154379, 34164379, 34174379, 34184379, 34194379, 34204379, 34214379, 34224379, 34234379, 34244379, 34254379, 34264379, 34274379, 34284379, 34294379, 34304379, 34314379, 34324379, 34334379, 34344379, 34354379, 34364379, 34374379, 34384379, 34394379, 34404379, 34414379, 34424379, 34434379, 34444379, 34454379, 34464379, 34474379, 34484379, 34494379, 34504379, 34514379, 34524379, 34534379, 34544379, 34554379, 34564379, 34574379, 34584379, 34594379, 34604379, 34614379, 34624379, 34634379, 34644379, 34654379, 34664379]</msg>
<status status="PASS" starttime="20201112 12:28:21.292" endtime="20201112 12:28:21.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.287" endtime="20201112 12:28:21.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.301" endtime="20201112 12:28:21.593"></status>
</kw>
<msg timestamp="20201112 12:28:21.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020849972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030925375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:21.299" endtime="20201112 12:28:21.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020849972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030925375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:21.597" endtime="20201112 12:28:21.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.604" endtime="20201112 12:28:21.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.297" endtime="20201112 12:28:21.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.295" endtime="20201112 12:28:21.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:21.632" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:21.607" endtime="20201112 12:28:21.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.636" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:21.635" endtime="20201112 12:28:21.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.638" level="INFO">VALUE: 0.020849972</msg>
<status status="PASS" starttime="20201112 12:28:21.637" endtime="20201112 12:28:21.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.633" endtime="20201112 12:28:21.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.644" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:21.643" endtime="20201112 12:28:21.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:21.646" level="INFO">VALUE: [0.030925375, 0.040925278, 0.050926347, 0.060927556, 0.070928667, 0.080929861, 0.090930944, 0.100932167, 0.110933264, 0.120934472, 0.130935569, 0.140936778, 0.150937875, 0.160939139, 0.170940167, 0.180941403, 0.190942528, 0.200943681, 0.210944778, 0.220945986, 0.230947097, 0.240948306, 0.250949389, 0.260950681, 0.270951694, 0.280952903, 0.290954014, 0.300955208, 0.310956292, 0.320957514, 0.330958625, 0.340959819, 0.350960917, 0.360962139, 0.370963222, 0.380964472, 0.390965528, 0.40096675, 0.410967861, 0.420969056, 0.430970139, 0.440971347, 0.450972444, 0.460973667, 0.470974778, 0.480975972, 0.490977056, 0.500978278, 0.510979361, 0.520980583, 0.530981694, 0.540982875, 0.550984028, 0.560985181, 0.570986306, 0.580987528, 0.590988583, 0.600989806, 0.610990903, 0.620992097, 0.630993194, 0.640994403, 0.650995514, 0.660996722, 0.670997806, 0.680999014, 0.691000111, 0.701001319, 0.711002417, 0.721003625, 0.731004736, 0.741006, 0.751007083, 0.761008236, 0.771009333, 0.781010542, 0.791011653, 0.801012847, 0.811013944, 0.821015167, 0.831016264, 0.841017458, 0.851018556, 0.861019778, 0.871020861, 0.881022083, 0.891023181, 0.901024403, 0.911025486, 0.921026681, 0.931027806, 0.941028986, 0.951030097, 0.961031292, 0.971032431, 0.981033611, 0.991034694, 1.001035903, 1.011037014, 1.021038264] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:21.645" endtime="20201112 12:28:21.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.640" endtime="20201112 12:28:21.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.649" endtime="20201112 12:28:21.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:21.652" endtime="20201112 12:28:21.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.651" endtime="20201112 12:28:21.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.647" endtime="20201112 12:28:21.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.111" endtime="20201112 12:28:21.673"></status>
</kw>
<msg timestamp="20201112 12:28:21.673" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:21.681" endtime="20201112 12:28:23.801"></status>
</kw>
<msg timestamp="20201112 12:28:23.802" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36225740, 'wakeups': [36235813, 36245813, 36255813, 36265813, 36275813...</msg>
<status status="PASS" starttime="20201112 12:28:21.679" endtime="20201112 12:28:23.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.809" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36225740, 'wakeups': [36235813, 36245813, 36255813, 36265813, 36275813...</msg>
<status status="PASS" starttime="20201112 12:28:23.804" endtime="20201112 12:28:23.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.811" endtime="20201112 12:28:23.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.677" endtime="20201112 12:28:23.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.675" endtime="20201112 12:28:23.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:23.822" level="INFO">${RESULT} = {'timer-count': 5, 'start-time': 36225740, 'timer-interval': 10000, 'wakeups': [36235813, 36245813, 36255813, 36265813, 36275813, 36285813, 36295813, 36305813, 36315813, 36325813, 36335813, 36345813, ...</msg>
<status status="PASS" starttime="20201112 12:28:23.818" endtime="20201112 12:28:23.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.827" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:23.826" endtime="20201112 12:28:23.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.829" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:23.828" endtime="20201112 12:28:23.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.823" endtime="20201112 12:28:23.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.835" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:23.834" endtime="20201112 12:28:23.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.837" level="INFO">VALUE: 36225740</msg>
<status status="PASS" starttime="20201112 12:28:23.836" endtime="20201112 12:28:23.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.831" endtime="20201112 12:28:23.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.842" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:23.841" endtime="20201112 12:28:23.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.844" level="INFO">VALUE: [36235813, 36245813, 36255813, 36265813, 36275813, 36285813, 36295813, 36305813, 36315813, 36325813, 36335813, 36345813, 36355813, 36365813, 36375813, 36385813, 36395813, 36405813, 36415813, 36425813, 36435813, 36445813, 36455813, 36465813, 36475813, 36485813, 36495813, 36505813, 36515813, 36525813, 36535813, 36545813, 36555813, 36565813, 36575813, 36585813, 36595813, 36605813, 36615813, 36625813, 36635813, 36645813, 36655813, 36665813, 36675813, 36685813, 36695813, 36705813, 36715813, 36725813, 36735813, 36745813, 36755813, 36765813, 36775813, 36785813, 36795813, 36805813, 36815813, 36825813, 36835813, 36845813, 36855813, 36865813, 36875813, 36885813, 36895813, 36905813, 36915813, 36925813, 36935813, 36945813, 36955813, 36965813, 36975813, 36985813, 36995813, 37005813, 37015813, 37025813, 37035813, 37045813, 37055813, 37065813, 37075813, 37085813, 37095813, 37105813, 37115813, 37125813, 37135813, 37145813, 37155813, 37165813, 37175813, 37185813, 37195813, 37205813, 37215813, 37225813]</msg>
<status status="PASS" starttime="20201112 12:28:23.843" endtime="20201112 12:28:23.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.839" endtime="20201112 12:28:23.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.851" endtime="20201112 12:28:24.141"></status>
</kw>
<msg timestamp="20201112 12:28:24.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019201653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029276681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:23.850" endtime="20201112 12:28:24.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019201653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029276681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:24.145" endtime="20201112 12:28:24.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.152" endtime="20201112 12:28:24.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.847" endtime="20201112 12:28:24.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.846" endtime="20201112 12:28:24.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:24.179" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:24.156" endtime="20201112 12:28:24.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.184" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:24.183" endtime="20201112 12:28:24.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.186" level="INFO">VALUE: 0.019201653</msg>
<status status="PASS" starttime="20201112 12:28:24.185" endtime="20201112 12:28:24.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.180" endtime="20201112 12:28:24.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.192" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:24.191" endtime="20201112 12:28:24.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.194" level="INFO">VALUE: [0.029276681, 0.039277556, 0.049278653, 0.059279847, 0.069280944, 0.079282153, 0.08928325, 0.099284458, 0.109285542, 0.11928675, 0.129287847, 0.139289056, 0.149290139, 0.159291375, 0.169292458, 0.179293653, 0.18929475, 0.199296014, 0.209297042, 0.219298278, 0.229299347, 0.239300583, 0.249301653, 0.259302861, 0.269303972, 0.279305167, 0.289306278, 0.299307472, 0.309308569, 0.319309778, 0.329310861, 0.339312083, 0.349313181, 0.359314389, 0.369315472, 0.379316681, 0.389317819, 0.399319028, 0.409320083, 0.419321292, 0.429322375, 0.439323597, 0.449324681, 0.459325903, 0.469327014, 0.479328208, 0.489329306, 0.499330514, 0.509331597, 0.519332819, 0.529333903, 0.539335111, 0.549336222, 0.559337431, 0.569338514, 0.579339722, 0.589340806, 0.599342056, 0.609343111, 0.619344347, 0.629345431, 0.639346625, 0.649347736, 0.659348931, 0.669350069, 0.679351236, 0.689352333, 0.699353556, 0.709354639, 0.719355875, 0.729356931, 0.739358181, 0.74935925, 0.759360444, 0.769361542, 0.77936275, 0.789363861, 0.799365056, 0.809366139, 0.819367361, 0.829368458, 0.839369667, 0.84937075, 0.859371972, 0.869373056, 0.879374278, 0.889375431, 0.899376583, 0.909377667, 0.919378889, 0.929379958, 0.939381181, 0.949382347, 0.9593835, 0.969384569, 0.979385806, 0.989386889, 0.999388097, 1.009389181, 1.019390403] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:24.193" endtime="20201112 12:28:24.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.187" endtime="20201112 12:28:24.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.197" endtime="20201112 12:28:24.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:24.200" endtime="20201112 12:28:24.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.199" endtime="20201112 12:28:24.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.195" endtime="20201112 12:28:24.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:21.674" endtime="20201112 12:28:24.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.552" endtime="20201112 12:28:24.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.551" endtime="20201112 12:28:24.221"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:24.224" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.232" endtime="20201112 12:28:26.352"></status>
</kw>
<msg timestamp="20201112 12:28:26.354" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38776548, 'wakeups': [38786643, 38796643, 38806643, 38816643, 38826643...</msg>
<status status="PASS" starttime="20201112 12:28:24.230" endtime="20201112 12:28:26.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.359" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38776548, 'wakeups': [38786643, 38796643, 38806643, 38816643, 38826643...</msg>
<status status="PASS" starttime="20201112 12:28:26.356" endtime="20201112 12:28:26.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.362" endtime="20201112 12:28:26.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.228" endtime="20201112 12:28:26.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.226" endtime="20201112 12:28:26.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:26.372" level="INFO">${RESULT} = {'timer-count': 6, 'start-time': 38776548, 'timer-interval': 10000, 'wakeups': [38786643, 38796643, 38806643, 38816643, 38826643, 38836643, 38846643, 38856643, 38866643, 38876643, 38886643, 38896643, ...</msg>
<status status="PASS" starttime="20201112 12:28:26.368" endtime="20201112 12:28:26.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.381" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:26.379" endtime="20201112 12:28:26.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.383" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:26.382" endtime="20201112 12:28:26.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.374" endtime="20201112 12:28:26.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.387" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:26.386" endtime="20201112 12:28:26.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.390" level="INFO">VALUE: 38776548</msg>
<status status="PASS" starttime="20201112 12:28:26.389" endtime="20201112 12:28:26.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.384" endtime="20201112 12:28:26.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.394" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:26.393" endtime="20201112 12:28:26.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.396" level="INFO">VALUE: [38786643, 38796643, 38806643, 38816643, 38826643, 38836643, 38846643, 38856643, 38866643, 38876643, 38886643, 38896643, 38906643, 38916643, 38926643, 38936643, 38946643, 38956643, 38966643, 38976643, 38986643, 38996643, 39006643, 39016643, 39026643, 39036643, 39046643, 39056643, 39066643, 39076643, 39086643, 39096643, 39106643, 39116643, 39126643, 39136643, 39146643, 39156643, 39166643, 39176643, 39186643, 39196643, 39206643, 39216643, 39226643, 39236643, 39246643, 39256643, 39266643, 39276643, 39286643, 39296643, 39306643, 39316643, 39326643, 39336643, 39346643, 39356643, 39366643, 39376643, 39386643, 39396643, 39406643, 39416643, 39426643, 39436643, 39446643, 39456643, 39466643, 39476643, 39486643, 39496643, 39506643, 39516643, 39526643, 39536643, 39546643, 39556643, 39566643, 39576643, 39586643, 39596643, 39606643, 39616643, 39626643, 39636643, 39646643, 39656643, 39666643, 39676643, 39686643, 39696643, 39706643, 39716643, 39726643, 39736643, 39746643, 39756643, 39766643, 39776643]</msg>
<status status="PASS" starttime="20201112 12:28:26.395" endtime="20201112 12:28:26.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.391" endtime="20201112 12:28:26.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.405" endtime="20201112 12:28:26.695"></status>
</kw>
<msg timestamp="20201112 12:28:26.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032008972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:26.403" endtime="20201112 12:28:26.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032008972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:26.698" endtime="20201112 12:28:26.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.706" endtime="20201112 12:28:26.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.400" endtime="20201112 12:28:26.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.398" endtime="20201112 12:28:26.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:26.732" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:26.709" endtime="20201112 12:28:26.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.737" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:26.736" endtime="20201112 12:28:26.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.739" level="INFO">VALUE: 0.021911833</msg>
<status status="PASS" starttime="20201112 12:28:26.738" endtime="20201112 12:28:26.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.733" endtime="20201112 12:28:26.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.744" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:26.743" endtime="20201112 12:28:26.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:26.746" level="INFO">VALUE: [0.032008972, 0.042010097, 0.052011194, 0.062012347, 0.072013486, 0.082014639, 0.092015764, 0.102016931, 0.112018083, 0.122019236, 0.132020333, 0.142021528, 0.152022611, 0.162023847, 0.172024917, 0.182026125, 0.192027222, 0.202028431, 0.212029514, 0.222030722, 0.232031833, 0.242033028, 0.252034111, 0.262035333, 0.272036417, 0.282037667, 0.292038722, 0.302039986, 0.312041014, 0.322042278, 0.332043333, 0.342044556, 0.352045653, 0.362046847, 0.372047917, 0.382049139, 0.392050236, 0.402051444, 0.412052556, 0.422053736, 0.432054833, 0.442056056, 0.452057125, 0.462058347, 0.472059431, 0.482060639, 0.492061722, 0.502062944, 0.512064028, 0.522065236, 0.532066333, 0.542067583, 0.552068639, 0.562069847, 0.572070931, 0.582072167, 0.592073236, 0.602074458, 0.612075542, 0.622076764, 0.632077833, 0.642079056, 0.652080139, 0.662081347, 0.672082444, 0.682083653, 0.692084736, 0.702085958, 0.712087042, 0.722088333, 0.732089361, 0.742090569, 0.752091639, 0.762092861, 0.772093944, 0.782095167, 0.79209625, 0.802097528, 0.812098542, 0.822099778, 0.832100847, 0.842102056, 0.852103153, 0.862104361, 0.872105444, 0.882106708, 0.89210775, 0.902108972, 0.912110069, 0.922111278, 0.932112403, 0.942113583, 0.952114653, 0.962115889, 0.972116958, 0.982118167, 0.992119306, 1.002120528, 1.012121556, 1.022122778] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:26.745" endtime="20201112 12:28:26.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.740" endtime="20201112 12:28:26.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.750" endtime="20201112 12:28:26.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:26.753" endtime="20201112 12:28:26.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.752" endtime="20201112 12:28:26.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.748" endtime="20201112 12:28:26.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.225" endtime="20201112 12:28:26.774"></status>
</kw>
<msg timestamp="20201112 12:28:26.774" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:26.783" endtime="20201112 12:28:28.918"></status>
</kw>
<msg timestamp="20201112 12:28:28.919" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41327980, 'wakeups': [41338075, 41348075, 41358075, 41368075, 41378075...</msg>
<status status="PASS" starttime="20201112 12:28:26.782" endtime="20201112 12:28:28.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.926" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41327980, 'wakeups': [41338075, 41348075, 41358075, 41368075, 41378075...</msg>
<status status="PASS" starttime="20201112 12:28:28.922" endtime="20201112 12:28:28.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.928" endtime="20201112 12:28:28.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.778" endtime="20201112 12:28:28.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.776" endtime="20201112 12:28:28.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:28.937" level="INFO">${RESULT} = {'timer-count': 6, 'start-time': 41327980, 'timer-interval': 10000, 'wakeups': [41338075, 41348075, 41358075, 41368075, 41378075, 41388075, 41398075, 41408075, 41418075, 41428075, 41438075, 41448075, ...</msg>
<status status="PASS" starttime="20201112 12:28:28.935" endtime="20201112 12:28:28.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.942" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:28.941" endtime="20201112 12:28:28.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.944" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:28.943" endtime="20201112 12:28:28.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.938" endtime="20201112 12:28:28.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.949" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:28.948" endtime="20201112 12:28:28.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.951" level="INFO">VALUE: 41327980</msg>
<status status="PASS" starttime="20201112 12:28:28.950" endtime="20201112 12:28:28.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.945" endtime="20201112 12:28:28.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.956" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:28.955" endtime="20201112 12:28:28.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.958" level="INFO">VALUE: [41338075, 41348075, 41358075, 41368075, 41378075, 41388075, 41398075, 41408075, 41418075, 41428075, 41438075, 41448075, 41458075, 41468075, 41478075, 41488075, 41498075, 41508075, 41518075, 41528075, 41538075, 41548075, 41558075, 41568075, 41578075, 41588075, 41598075, 41608075, 41618075, 41628075, 41638075, 41648075, 41658075, 41668075, 41678075, 41688075, 41698075, 41708075, 41718075, 41728075, 41738075, 41748075, 41758075, 41768075, 41778075, 41788075, 41798075, 41808075, 41818075, 41828075, 41838075, 41848075, 41858075, 41868075, 41878075, 41888075, 41898075, 41908075, 41918075, 41928075, 41938075, 41948075, 41958075, 41968075, 41978075, 41988075, 41998075, 42008075, 42018075, 42028075, 42038075, 42048075, 42058075, 42068075, 42078075, 42088075, 42098075, 42108075, 42118075, 42128075, 42138075, 42148075, 42158075, 42168075, 42178075, 42188075, 42198075, 42208075, 42218075, 42228075, 42238075, 42248075, 42258075, 42268075, 42278075, 42288075, 42298075, 42308075, 42318075, 42328075]</msg>
<status status="PASS" starttime="20201112 12:28:28.957" endtime="20201112 12:28:28.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.953" endtime="20201112 12:28:28.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.966" endtime="20201112 12:28:29.258"></status>
</kw>
<msg timestamp="20201112 12:28:29.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020637125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030734278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:28.965" endtime="20201112 12:28:29.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020637125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030734278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:29.262" endtime="20201112 12:28:29.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.270" endtime="20201112 12:28:29.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.962" endtime="20201112 12:28:29.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.960" endtime="20201112 12:28:29.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:29.298" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:29.273" endtime="20201112 12:28:29.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.303" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:29.302" endtime="20201112 12:28:29.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.305" level="INFO">VALUE: 0.020637125</msg>
<status status="PASS" starttime="20201112 12:28:29.304" endtime="20201112 12:28:29.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.299" endtime="20201112 12:28:29.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.311" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:29.310" endtime="20201112 12:28:29.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.313" level="INFO">VALUE: [0.030734278, 0.040735319, 0.050736403, 0.060737625, 0.070738722, 0.080739917, 0.090741014, 0.100742208, 0.110743333, 0.120744542, 0.130745597, 0.140746806, 0.150747903, 0.160749111, 0.170750208, 0.180751403, 0.190752486, 0.200753708, 0.210754792, 0.220756056, 0.230757083, 0.240758292, 0.250759403, 0.260760653, 0.270761681, 0.280762889, 0.290763972, 0.300765208, 0.310766292, 0.3207675, 0.330768569, 0.340769833, 0.350770889, 0.360772083, 0.370773167, 0.380774389, 0.390775472, 0.400776694, 0.410777778, 0.420778986, 0.430780125, 0.440781292, 0.450782431, 0.460783597, 0.470784667, 0.480785903, 0.490786986, 0.500788236, 0.510789264, 0.520790486, 0.530791639, 0.540792792, 0.550793861, 0.560795083, 0.570796167, 0.580797375, 0.590798472, 0.600799694, 0.610800778, 0.620801972, 0.630803056, 0.640804278, 0.650805361, 0.660806569, 0.670807667, 0.680808889, 0.690809958, 0.700811167, 0.710812264, 0.720813472, 0.730814569, 0.740815778, 0.750816861, 0.760818069, 0.770819167, 0.780820375, 0.790821458, 0.800822667, 0.81082375, 0.820824972, 0.830826056, 0.840827264, 0.850828389, 0.860829583, 0.870830653, 0.880831861, 0.890832958, 0.900834167, 0.910835264, 0.920836458, 0.930837556, 0.940838764, 0.950839847, 0.960841069, 0.970842153, 0.980843361, 0.990844514, 1.000845681, 1.010846764, 1.020847972] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:29.312" endtime="20201112 12:28:29.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.306" endtime="20201112 12:28:29.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.316" endtime="20201112 12:28:29.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:29.320" endtime="20201112 12:28:29.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.318" endtime="20201112 12:28:29.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.314" endtime="20201112 12:28:29.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:26.775" endtime="20201112 12:28:29.340"></status>
</kw>
<msg timestamp="20201112 12:28:29.341" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.349" endtime="20201112 12:28:31.482"></status>
</kw>
<msg timestamp="20201112 12:28:31.483" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43893538, 'wakeups': [43903634, 43913633, 43923633, 43933633, 43943633...</msg>
<status status="PASS" starttime="20201112 12:28:29.347" endtime="20201112 12:28:31.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.490" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43893538, 'wakeups': [43903634, 43913633, 43923633, 43933633, 43943633...</msg>
<status status="PASS" starttime="20201112 12:28:31.486" endtime="20201112 12:28:31.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.492" endtime="20201112 12:28:31.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.345" endtime="20201112 12:28:31.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.343" endtime="20201112 12:28:31.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:31.497" level="INFO">${RESULT} = {'timer-count': 6, 'start-time': 43893538, 'timer-interval': 10000, 'wakeups': [43903634, 43913633, 43923633, 43933633, 43943633, 43953633, 43963633, 43973633, 43983633, 43993633, 44003633, 44013633, ...</msg>
<status status="PASS" starttime="20201112 12:28:31.495" endtime="20201112 12:28:31.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.502" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:31.501" endtime="20201112 12:28:31.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.504" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:31.503" endtime="20201112 12:28:31.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.498" endtime="20201112 12:28:31.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.509" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:31.508" endtime="20201112 12:28:31.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.512" level="INFO">VALUE: 43893538</msg>
<status status="PASS" starttime="20201112 12:28:31.511" endtime="20201112 12:28:31.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.505" endtime="20201112 12:28:31.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.517" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:31.516" endtime="20201112 12:28:31.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.520" level="INFO">VALUE: [43903634, 43913633, 43923633, 43933633, 43943633, 43953633, 43963633, 43973633, 43983633, 43993633, 44003633, 44013633, 44023633, 44033633, 44043633, 44053633, 44063633, 44073633, 44083633, 44093633, 44103633, 44113633, 44123633, 44133633, 44143633, 44153633, 44163633, 44173633, 44183633, 44193633, 44203633, 44213633, 44223633, 44233633, 44243633, 44253633, 44263633, 44273633, 44283633, 44293633, 44303633, 44313633, 44323633, 44333633, 44343633, 44353633, 44363633, 44373633, 44383633, 44393633, 44403633, 44413633, 44423633, 44433633, 44443633, 44453633, 44463633, 44473633, 44483633, 44493633, 44503633, 44513633, 44523633, 44533633, 44543633, 44553633, 44563633, 44573633, 44583633, 44593633, 44603633, 44613633, 44623633, 44633633, 44643633, 44653633, 44663633, 44673633, 44683633, 44693633, 44703633, 44713633, 44723633, 44733633, 44743633, 44753633, 44763633, 44773633, 44783633, 44793633, 44803633, 44813633, 44823633, 44833633, 44843633, 44853633, 44863633, 44873633, 44883633, 44893633]</msg>
<status status="PASS" starttime="20201112 12:28:31.519" endtime="20201112 12:28:31.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.514" endtime="20201112 12:28:31.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.527" endtime="20201112 12:28:31.823"></status>
</kw>
<msg timestamp="20201112 12:28:31.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029884306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:31.526" endtime="20201112 12:28:31.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029884306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:31.827" endtime="20201112 12:28:31.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.835" endtime="20201112 12:28:31.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.523" endtime="20201112 12:28:31.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.521" endtime="20201112 12:28:31.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:31.863" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:31.839" endtime="20201112 12:28:31.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.868" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:31.867" endtime="20201112 12:28:31.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.870" level="INFO">VALUE: 0.019786833</msg>
<status status="PASS" starttime="20201112 12:28:31.869" endtime="20201112 12:28:31.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.864" endtime="20201112 12:28:31.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.876" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:31.875" endtime="20201112 12:28:31.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:31.879" level="INFO">VALUE: [0.029884306, 0.039884319, 0.049885417, 0.059886625, 0.069887694, 0.079888903, 0.089889986, 0.099891194, 0.109892278, 0.1198935, 0.129894569, 0.139895792, 0.149896875, 0.159898083, 0.169899167, 0.179900389, 0.189901472, 0.199902681, 0.209903778, 0.219904972, 0.229906056, 0.239907278, 0.249908361, 0.259909569, 0.269910681, 0.279911861, 0.289912958, 0.299914153, 0.309915236, 0.319916472, 0.329917556, 0.33991875, 0.349919833, 0.359921056, 0.369922153, 0.379923347, 0.389924431, 0.399925639, 0.409926778, 0.419927944, 0.429929028, 0.439930236, 0.449931319, 0.459932528, 0.469933694, 0.479934833, 0.489935917, 0.499937139, 0.509938208, 0.5199395, 0.529940514, 0.539941722, 0.549942819, 0.559944014, 0.569945111, 0.579946389, 0.589947417, 0.599948625, 0.609949708, 0.619950917, 0.629952, 0.639953208, 0.649954306, 0.659955569, 0.669956611, 0.679957847, 0.689958889, 0.699960125, 0.709961181, 0.719962403, 0.7299635, 0.739964694, 0.749965778, 0.759967, 0.769968083, 0.779969292, 0.789970375, 0.799971583, 0.809972694, 0.819973931, 0.829974986, 0.839976181, 0.849977333, 0.859978486, 0.869979569, 0.879980778, 0.889981931, 0.899983083, 0.909984194, 0.919985375, 0.929986458, 0.939987694, 0.949988778, 0.959989986, 0.969991069, 0.979992278, 0.989993361, 0.999994556, 1.009995653, 1.019996861] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:31.877" endtime="20201112 12:28:31.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.872" endtime="20201112 12:28:31.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.882" endtime="20201112 12:28:31.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:31.886" endtime="20201112 12:28:31.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.884" endtime="20201112 12:28:31.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.880" endtime="20201112 12:28:31.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.341" endtime="20201112 12:28:31.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.223" endtime="20201112 12:28:31.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.222" endtime="20201112 12:28:31.907"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:31.909" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:31.918" endtime="20201112 12:28:34.049"></status>
</kw>
<msg timestamp="20201112 12:28:34.051" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46462338, 'wakeups': [46472456, 46482454, 46492454, 46502454, 46512454...</msg>
<status status="PASS" starttime="20201112 12:28:31.916" endtime="20201112 12:28:34.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.057" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46462338, 'wakeups': [46472456, 46482454, 46492454, 46502454, 46512454...</msg>
<status status="PASS" starttime="20201112 12:28:34.053" endtime="20201112 12:28:34.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.060" endtime="20201112 12:28:34.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.914" endtime="20201112 12:28:34.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.912" endtime="20201112 12:28:34.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:34.066" level="INFO">${RESULT} = {'timer-count': 7, 'start-time': 46462338, 'timer-interval': 10000, 'wakeups': [46472456, 46482454, 46492454, 46502454, 46512454, 46522454, 46532454, 46542454, 46552454, 46562454, 46572454, 46582454, ...</msg>
<status status="PASS" starttime="20201112 12:28:34.064" endtime="20201112 12:28:34.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.075" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:34.074" endtime="20201112 12:28:34.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.077" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:34.076" endtime="20201112 12:28:34.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.071" endtime="20201112 12:28:34.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.082" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:34.081" endtime="20201112 12:28:34.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.084" level="INFO">VALUE: 46462338</msg>
<status status="PASS" starttime="20201112 12:28:34.083" endtime="20201112 12:28:34.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.078" endtime="20201112 12:28:34.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.089" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:34.088" endtime="20201112 12:28:34.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.092" level="INFO">VALUE: [46472456, 46482454, 46492454, 46502454, 46512454, 46522454, 46532454, 46542454, 46552454, 46562454, 46572454, 46582454, 46592454, 46602454, 46612454, 46622454, 46632454, 46642454, 46652454, 46662454, 46672454, 46682454, 46692454, 46702454, 46712454, 46722454, 46732454, 46742454, 46752454, 46762454, 46772454, 46782454, 46792454, 46802454, 46812454, 46822454, 46832454, 46842454, 46852454, 46862454, 46872454, 46882454, 46892454, 46902454, 46912454, 46922454, 46932454, 46942454, 46952454, 46962454, 46972454, 46982454, 46992454, 47002454, 47012454, 47022454, 47032454, 47042454, 47052454, 47062454, 47072454, 47082454, 47092454, 47102454, 47112454, 47122454, 47132454, 47142454, 47152454, 47162454, 47172454, 47182454, 47192454, 47202454, 47212454, 47222454, 47232454, 47242454, 47252454, 47262454, 47272454, 47282454, 47292454, 47302454, 47312454, 47322454, 47332454, 47342454, 47352454, 47362454, 47372454, 47382454, 47392454, 47402454, 47412454, 47422454, 47432454, 47442454, 47452454, 47462454]</msg>
<status status="PASS" starttime="20201112 12:28:34.090" endtime="20201112 12:28:34.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.086" endtime="20201112 12:28:34.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.101" endtime="20201112 12:28:34.393"></status>
</kw>
<msg timestamp="20201112 12:28:34.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02254525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032664611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:34.098" endtime="20201112 12:28:34.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02254525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032664611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:34.397" endtime="20201112 12:28:34.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.405" endtime="20201112 12:28:34.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.095" endtime="20201112 12:28:34.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.093" endtime="20201112 12:28:34.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:34.433" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:34.409" endtime="20201112 12:28:34.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.438" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:34.437" endtime="20201112 12:28:34.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.440" level="INFO">VALUE: 0.02254525</msg>
<status status="PASS" starttime="20201112 12:28:34.439" endtime="20201112 12:28:34.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.434" endtime="20201112 12:28:34.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.446" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:34.444" endtime="20201112 12:28:34.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.448" level="INFO">VALUE: [0.032664611, 0.042664264, 0.052665361, 0.062666583, 0.072667681, 0.082668889, 0.092669986, 0.102671222, 0.112672306, 0.122673514, 0.132674611, 0.142675847, 0.152676917, 0.162678139, 0.17267925, 0.182680458, 0.192681556, 0.202682778, 0.212683931, 0.222685083, 0.232686181, 0.242687417, 0.2526885, 0.262689722, 0.272690819, 0.282692042, 0.292693125, 0.302694347, 0.312695444, 0.322696667, 0.332697764, 0.342699028, 0.352700111, 0.362701306, 0.372702417, 0.382703625, 0.392704708, 0.402705931, 0.412707028, 0.422708264, 0.432709361, 0.442710597, 0.452711667, 0.462712903, 0.472713972, 0.482715278, 0.492716292, 0.502717514, 0.512718611, 0.522719833, 0.532720931, 0.542722153, 0.552723278, 0.562724486, 0.572725556, 0.582726778, 0.592727875, 0.602729181, 0.612730194, 0.622731417, 0.632732514, 0.642733736, 0.652734819, 0.662736056, 0.672737139, 0.682738361, 0.692739458, 0.702740694, 0.712741778, 0.722743, 0.732744097, 0.742745319, 0.752746431, 0.762747639, 0.772748722, 0.782749958, 0.792751056, 0.802752278, 0.812753361, 0.822754583, 0.832755667, 0.842756889, 0.852757986, 0.862759222, 0.872760319, 0.882761542, 0.892762625, 0.902763847, 0.912765014, 0.922766167, 0.93276725, 0.942768472, 0.952769569, 0.962770792, 0.972771903, 0.982773111, 0.992774208, 1.002775431, 1.012776542, 1.022777778] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:34.447" endtime="20201112 12:28:34.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.441" endtime="20201112 12:28:34.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.452" endtime="20201112 12:28:34.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:34.455" endtime="20201112 12:28:34.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.454" endtime="20201112 12:28:34.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.450" endtime="20201112 12:28:34.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.910" endtime="20201112 12:28:34.476"></status>
</kw>
<msg timestamp="20201112 12:28:34.476" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.485" endtime="20201112 12:28:36.607"></status>
</kw>
<msg timestamp="20201112 12:28:36.608" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49029899, 'wakeups': [49040017, 49050015, 49060015, 49070015, 49080015...</msg>
<status status="PASS" starttime="20201112 12:28:34.484" endtime="20201112 12:28:36.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.611" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49029899, 'wakeups': [49040017, 49050015, 49060015, 49070015, 49080015...</msg>
<status status="PASS" starttime="20201112 12:28:36.609" endtime="20201112 12:28:36.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.612" endtime="20201112 12:28:36.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.480" endtime="20201112 12:28:36.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.478" endtime="20201112 12:28:36.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:36.617" level="INFO">${RESULT} = {'timer-count': 7, 'start-time': 49029899, 'timer-interval': 10000, 'wakeups': [49040017, 49050015, 49060015, 49070015, 49080015, 49090015, 49100015, 49110015, 49120015, 49130015, 49140015, 49150015, ...</msg>
<status status="PASS" starttime="20201112 12:28:36.615" endtime="20201112 12:28:36.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.622" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:36.621" endtime="20201112 12:28:36.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.624" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:36.623" endtime="20201112 12:28:36.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.618" endtime="20201112 12:28:36.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.629" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:36.628" endtime="20201112 12:28:36.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.631" level="INFO">VALUE: 49029899</msg>
<status status="PASS" starttime="20201112 12:28:36.630" endtime="20201112 12:28:36.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.625" endtime="20201112 12:28:36.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.636" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:36.635" endtime="20201112 12:28:36.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.639" level="INFO">VALUE: [49040017, 49050015, 49060015, 49070015, 49080015, 49090015, 49100015, 49110015, 49120015, 49130015, 49140015, 49150015, 49160015, 49170015, 49180015, 49190015, 49200015, 49210015, 49220015, 49230015, 49240015, 49250015, 49260015, 49270015, 49280015, 49290015, 49300015, 49310015, 49320015, 49330015, 49340015, 49350015, 49360015, 49370015, 49380015, 49390015, 49400015, 49410015, 49420015, 49430015, 49440015, 49450015, 49460015, 49470015, 49480015, 49490015, 49500015, 49510015, 49520015, 49530015, 49540015, 49550015, 49560015, 49570015, 49580015, 49590015, 49600015, 49610015, 49620015, 49630015, 49640015, 49650015, 49660015, 49670015, 49680015, 49690015, 49700015, 49710015, 49720015, 49730015, 49740015, 49750015, 49760015, 49770015, 49780015, 49790015, 49800015, 49810015, 49820015, 49830015, 49840015, 49850015, 49860015, 49870015, 49880015, 49890015, 49900015, 49910015, 49920015, 49930015, 49940015, 49950015, 49960015, 49970015, 49980015, 49990015, 50000015, 50010015, 50020015, 50030015]</msg>
<status status="PASS" starttime="20201112 12:28:36.638" endtime="20201112 12:28:36.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.633" endtime="20201112 12:28:36.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.647" endtime="20201112 12:28:36.939"></status>
</kw>
<msg timestamp="20201112 12:28:36.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020616931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0307365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:36.645" endtime="20201112 12:28:36.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020616931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0307365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:36.943" endtime="20201112 12:28:36.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.951" endtime="20201112 12:28:36.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.642" endtime="20201112 12:28:36.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.641" endtime="20201112 12:28:36.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:36.978" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:36.954" endtime="20201112 12:28:36.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.983" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:36.981" endtime="20201112 12:28:36.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.985" level="INFO">VALUE: 0.020616931</msg>
<status status="PASS" starttime="20201112 12:28:36.984" endtime="20201112 12:28:36.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.979" endtime="20201112 12:28:36.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.990" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:36.989" endtime="20201112 12:28:36.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:36.992" level="INFO">VALUE: [0.0307365, 0.040736208, 0.050737319, 0.060738528, 0.070739625, 0.080740847, 0.090741931, 0.100743167, 0.110744236, 0.120745458, 0.130746556, 0.140747778, 0.150748875, 0.160750097, 0.170751194, 0.180752444, 0.1907535, 0.200754722, 0.210755806, 0.220757069, 0.230758125, 0.240759361, 0.250760431, 0.260761653, 0.27076275, 0.280764014, 0.290765069, 0.300766292, 0.310767389, 0.320768597, 0.330769694, 0.340770931, 0.350772028, 0.360773292, 0.370774375, 0.380775542, 0.390776639, 0.400777861, 0.410778958, 0.420780181, 0.430781264, 0.440782486, 0.450783583, 0.460784875, 0.470785903, 0.480787181, 0.490788208, 0.500789444, 0.510790528, 0.52079175, 0.530792847, 0.540794069, 0.550795208, 0.560796375, 0.570797472, 0.580798694, 0.590799792, 0.600801014, 0.610802097, 0.620803319, 0.630804417, 0.640805639, 0.650806736, 0.660807972, 0.670809042, 0.680810264, 0.690811375, 0.700812583, 0.710813681, 0.720814903, 0.730815986, 0.740817222, 0.750818306, 0.760819597, 0.770820625, 0.780821903, 0.790822931, 0.800824167, 0.81082525, 0.8208265, 0.830827569, 0.840828792, 0.850829875, 0.860831097, 0.870832194, 0.880833431, 0.890834514, 0.900835736, 0.910836819, 0.920838069, 0.930839153, 0.940840361, 0.950841486, 0.960842681, 0.970843778, 0.980845028, 0.990846097, 1.000847319, 1.010848458, 1.020849625] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:36.991" endtime="20201112 12:28:36.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.986" endtime="20201112 12:28:36.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.995" endtime="20201112 12:28:36.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:36.998" endtime="20201112 12:28:37.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.997" endtime="20201112 12:28:37.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.993" endtime="20201112 12:28:37.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.477" endtime="20201112 12:28:37.020"></status>
</kw>
<msg timestamp="20201112 12:28:37.021" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.028" endtime="20201112 12:28:39.152"></status>
</kw>
<msg timestamp="20201112 12:28:39.153" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51572950, 'wakeups': [51583068, 51593066, 51603066, 51613066, 51623066...</msg>
<status status="PASS" starttime="20201112 12:28:37.027" endtime="20201112 12:28:39.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.157" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51572950, 'wakeups': [51583068, 51593066, 51603066, 51613066, 51623066...</msg>
<status status="PASS" starttime="20201112 12:28:39.155" endtime="20201112 12:28:39.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.158" endtime="20201112 12:28:39.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.024" endtime="20201112 12:28:39.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.023" endtime="20201112 12:28:39.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:39.164" level="INFO">${RESULT} = {'timer-count': 7, 'start-time': 51572950, 'timer-interval': 10000, 'wakeups': [51583068, 51593066, 51603066, 51613066, 51623066, 51633066, 51643066, 51653066, 51663066, 51673066, 51683066, 51693066, ...</msg>
<status status="PASS" starttime="20201112 12:28:39.162" endtime="20201112 12:28:39.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.168" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:39.167" endtime="20201112 12:28:39.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.170" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:39.169" endtime="20201112 12:28:39.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.165" endtime="20201112 12:28:39.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.176" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:39.175" endtime="20201112 12:28:39.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.178" level="INFO">VALUE: 51572950</msg>
<status status="PASS" starttime="20201112 12:28:39.177" endtime="20201112 12:28:39.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.173" endtime="20201112 12:28:39.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.183" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:39.182" endtime="20201112 12:28:39.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.185" level="INFO">VALUE: [51583068, 51593066, 51603066, 51613066, 51623066, 51633066, 51643066, 51653066, 51663066, 51673066, 51683066, 51693066, 51703066, 51713066, 51723066, 51733066, 51743066, 51753066, 51763066, 51773066, 51783066, 51793066, 51803066, 51813066, 51823066, 51833066, 51843066, 51853066, 51863066, 51873066, 51883066, 51893066, 51903066, 51913066, 51923066, 51933066, 51943066, 51953066, 51963066, 51973066, 51983066, 51993066, 52003066, 52013066, 52023066, 52033066, 52043066, 52053066, 52063066, 52073066, 52083066, 52093066, 52103066, 52113066, 52123066, 52133066, 52143066, 52153066, 52163066, 52173066, 52183066, 52193066, 52203066, 52213066, 52223066, 52233066, 52243066, 52253066, 52263066, 52273066, 52283066, 52293066, 52303066, 52313066, 52323066, 52333066, 52343066, 52353066, 52363066, 52373066, 52383066, 52393066, 52403066, 52413066, 52423066, 52433066, 52443066, 52453066, 52463066, 52473066, 52483066, 52493066, 52503066, 52513066, 52523066, 52533066, 52543066, 52553066, 52563066, 52573066]</msg>
<status status="PASS" starttime="20201112 12:28:39.184" endtime="20201112 12:28:39.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.180" endtime="20201112 12:28:39.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.192" endtime="20201112 12:28:39.484"></status>
</kw>
<msg timestamp="20201112 12:28:39.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029779569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:39.191" endtime="20201112 12:28:39.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029779569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:39.494" endtime="20201112 12:28:39.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.501" endtime="20201112 12:28:39.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.188" endtime="20201112 12:28:39.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.187" endtime="20201112 12:28:39.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:39.529" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:39.505" endtime="20201112 12:28:39.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.534" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:39.533" endtime="20201112 12:28:39.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.536" level="INFO">VALUE: 0.019660361</msg>
<status status="PASS" starttime="20201112 12:28:39.535" endtime="20201112 12:28:39.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.530" endtime="20201112 12:28:39.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.541" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:39.540" endtime="20201112 12:28:39.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:39.543" level="INFO">VALUE: [0.029779569, 0.039779306, 0.049780403, 0.059781653, 0.069782722, 0.079783931, 0.089785028, 0.099786236, 0.109787347, 0.119788556, 0.129789653, 0.139790875, 0.149791972, 0.159793181, 0.169794264, 0.179795528, 0.189796583, 0.199797806, 0.209798903, 0.219800111, 0.229801194, 0.239802417, 0.249803514, 0.259804736, 0.269805819, 0.279807056, 0.289808167, 0.299809375, 0.309810444, 0.319811667, 0.329812778, 0.339813986, 0.349815125, 0.359816292, 0.369817403, 0.379818611, 0.389819694, 0.399820931, 0.409822042, 0.419823264, 0.429824319, 0.439825556, 0.449826639, 0.459827889, 0.469828986, 0.479830167, 0.489831278, 0.4998325, 0.509833597, 0.519834792, 0.529835958, 0.539837125, 0.549838208, 0.559839417, 0.569840528, 0.579841736, 0.589842833, 0.599844111, 0.609845139, 0.619846389, 0.629847458, 0.639848694, 0.649849764, 0.659850986, 0.669852083, 0.679853319, 0.689854403, 0.699855611, 0.709856708, 0.719858, 0.729859028, 0.73986025, 0.749861389, 0.759862569, 0.769863694, 0.779864875, 0.789865972, 0.799867194, 0.809868278, 0.8198695, 0.829870583, 0.839871833, 0.849872917, 0.859874125, 0.869875208, 0.879876486, 0.889877528, 0.89987875, 0.909879833, 0.919881056, 0.929882153, 0.939883375, 0.949884472, 0.959885694, 0.969886778, 0.979888, 0.989889097, 0.999890333, 1.009891403, 1.019892625] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:39.542" endtime="20201112 12:28:39.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.537" endtime="20201112 12:28:39.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.546" endtime="20201112 12:28:39.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:39.550" endtime="20201112 12:28:39.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.548" endtime="20201112 12:28:39.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.545" endtime="20201112 12:28:39.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.021" endtime="20201112 12:28:39.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.908" endtime="20201112 12:28:39.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:31.907" endtime="20201112 12:28:39.571"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:39.574" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:39.582" endtime="20201112 12:28:41.704"></status>
</kw>
<msg timestamp="20201112 12:28:41.706" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54125882, 'wakeups': [54136021, 54146022, 54156022, 54166022, 54176022...</msg>
<status status="PASS" starttime="20201112 12:28:39.580" endtime="20201112 12:28:41.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.711" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54125882, 'wakeups': [54136021, 54146022, 54156022, 54166022, 54176022...</msg>
<status status="PASS" starttime="20201112 12:28:41.708" endtime="20201112 12:28:41.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.713" endtime="20201112 12:28:41.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.577" endtime="20201112 12:28:41.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.575" endtime="20201112 12:28:41.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:41.718" level="INFO">${RESULT} = {'timer-count': 8, 'start-time': 54125882, 'timer-interval': 10000, 'wakeups': [54136021, 54146022, 54156022, 54166022, 54176022, 54186022, 54196022, 54206022, 54216022, 54226022, 54236022, 54246022, ...</msg>
<status status="PASS" starttime="20201112 12:28:41.716" endtime="20201112 12:28:41.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.722" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:41.721" endtime="20201112 12:28:41.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.724" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:41.723" endtime="20201112 12:28:41.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.719" endtime="20201112 12:28:41.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.729" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:41.728" endtime="20201112 12:28:41.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.731" level="INFO">VALUE: 54125882</msg>
<status status="PASS" starttime="20201112 12:28:41.730" endtime="20201112 12:28:41.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.726" endtime="20201112 12:28:41.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.736" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:41.735" endtime="20201112 12:28:41.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.738" level="INFO">VALUE: [54136021, 54146022, 54156022, 54166022, 54176022, 54186022, 54196022, 54206022, 54216022, 54226022, 54236022, 54246022, 54256022, 54266022, 54276022, 54286022, 54296022, 54306022, 54316022, 54326022, 54336022, 54346022, 54356022, 54366022, 54376022, 54386022, 54396022, 54406022, 54416022, 54426022, 54436022, 54446022, 54456022, 54466022, 54476022, 54486022, 54496022, 54506022, 54516022, 54526022, 54536022, 54546022, 54556022, 54566022, 54576022, 54586022, 54596022, 54606022, 54616022, 54626022, 54636022, 54646022, 54656022, 54666022, 54676022, 54686022, 54696022, 54706022, 54716022, 54726022, 54736022, 54746022, 54756022, 54766022, 54776022, 54786022, 54796022, 54806022, 54816022, 54826022, 54836022, 54846022, 54856022, 54866022, 54876022, 54886022, 54896022, 54906022, 54916022, 54926022, 54936022, 54946022, 54956022, 54966022, 54976022, 54986022, 54996022, 55006022, 55016022, 55026022, 55036022, 55046022, 55056022, 55066022, 55076022, 55086022, 55096022, 55106022, 55116022, 55126022]</msg>
<status status="PASS" starttime="20201112 12:28:41.737" endtime="20201112 12:28:41.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.732" endtime="20201112 12:28:41.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.747" endtime="20201112 12:28:42.037"></status>
</kw>
<msg timestamp="20201112 12:28:42.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022023153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032164167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:41.745" endtime="20201112 12:28:42.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022023153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032164167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:42.041" endtime="20201112 12:28:42.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.048" endtime="20201112 12:28:42.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.742" endtime="20201112 12:28:42.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.740" endtime="20201112 12:28:42.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:42.075" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:42.051" endtime="20201112 12:28:42.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.080" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:42.079" endtime="20201112 12:28:42.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.082" level="INFO">VALUE: 0.022023153</msg>
<status status="PASS" starttime="20201112 12:28:42.081" endtime="20201112 12:28:42.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.076" endtime="20201112 12:28:42.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.087" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:42.086" endtime="20201112 12:28:42.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.090" level="INFO">VALUE: [0.032164167, 0.042166028, 0.052167097, 0.062168361, 0.072169417, 0.082170667, 0.092171708, 0.102172931, 0.112174056, 0.122175236, 0.132176347, 0.142177597, 0.152178639, 0.162179944, 0.172180958, 0.182182222, 0.192183306, 0.202184472, 0.212185583, 0.222186792, 0.232187875, 0.242189111, 0.252190194, 0.262191403, 0.2721925, 0.282193722, 0.292194819, 0.302196028, 0.312197125, 0.322198333, 0.332199444, 0.342200667, 0.352201736, 0.362202958, 0.372204056, 0.382205292, 0.392206389, 0.402207597, 0.412208667, 0.422209889, 0.432210986, 0.442212264, 0.452213292, 0.462214514, 0.472215611, 0.482216819, 0.492217917, 0.502219139, 0.512220236, 0.522221444, 0.532222569, 0.54222375, 0.552224861, 0.562226069, 0.572227167, 0.582228444, 0.5922295, 0.602230708, 0.612231778, 0.622233042, 0.632234125, 0.642235319, 0.652236403, 0.662237625, 0.672238708, 0.682239931, 0.692241028, 0.702242306, 0.712243333, 0.722244556, 0.732245653, 0.742246875, 0.752247958, 0.762249181, 0.772250278, 0.782251542, 0.792252639, 0.802253792, 0.812254889, 0.822256125, 0.832257264, 0.842258431, 0.852259514, 0.862260736, 0.872261833, 0.882263042, 0.892264139, 0.902265347, 0.912266458, 0.922267667, 0.932268764, 0.94227, 0.952271069, 0.962272278, 0.972273375, 0.982274611, 0.992275722, 1.002276972, 1.012278014, 1.022279222] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:42.089" endtime="20201112 12:28:42.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.083" endtime="20201112 12:28:42.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.093" endtime="20201112 12:28:42.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:42.097" endtime="20201112 12:28:42.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.095" endtime="20201112 12:28:42.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.092" endtime="20201112 12:28:42.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.574" endtime="20201112 12:28:42.119"></status>
</kw>
<msg timestamp="20201112 12:28:42.119" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.127" endtime="20201112 12:28:44.250"></status>
</kw>
<msg timestamp="20201112 12:28:44.251" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56671316, 'wakeups': [56681456, 56691456, 56701456, 56711456, 56721456...</msg>
<status status="PASS" starttime="20201112 12:28:42.126" endtime="20201112 12:28:44.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.257" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56671316, 'wakeups': [56681456, 56691456, 56701456, 56711456, 56721456...</msg>
<status status="PASS" starttime="20201112 12:28:44.253" endtime="20201112 12:28:44.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.259" endtime="20201112 12:28:44.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.123" endtime="20201112 12:28:44.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.121" endtime="20201112 12:28:44.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:44.268" level="INFO">${RESULT} = {'timer-count': 8, 'start-time': 56671316, 'timer-interval': 10000, 'wakeups': [56681456, 56691456, 56701456, 56711456, 56721456, 56731456, 56741456, 56751456, 56761456, 56771456, 56781456, 56791456, ...</msg>
<status status="PASS" starttime="20201112 12:28:44.266" endtime="20201112 12:28:44.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.272" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:44.271" endtime="20201112 12:28:44.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.274" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:44.273" endtime="20201112 12:28:44.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.269" endtime="20201112 12:28:44.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.279" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:44.278" endtime="20201112 12:28:44.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.281" level="INFO">VALUE: 56671316</msg>
<status status="PASS" starttime="20201112 12:28:44.281" endtime="20201112 12:28:44.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.276" endtime="20201112 12:28:44.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.286" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:44.285" endtime="20201112 12:28:44.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.288" level="INFO">VALUE: [56681456, 56691456, 56701456, 56711456, 56721456, 56731456, 56741456, 56751456, 56761456, 56771456, 56781456, 56791456, 56801456, 56811456, 56821456, 56831456, 56841456, 56851456, 56861456, 56871456, 56881456, 56891456, 56901456, 56911456, 56921456, 56931456, 56941456, 56951456, 56961456, 56971456, 56981456, 56991456, 57001456, 57011456, 57021456, 57031456, 57041456, 57051456, 57061456, 57071456, 57081456, 57091456, 57101456, 57111456, 57121456, 57131456, 57141456, 57151456, 57161456, 57171456, 57181456, 57191456, 57201456, 57211456, 57221456, 57231456, 57241456, 57251456, 57261456, 57271456, 57281456, 57291456, 57301456, 57311456, 57321456, 57331456, 57341456, 57351456, 57361456, 57371456, 57381456, 57391456, 57401456, 57411456, 57421456, 57431456, 57441456, 57451456, 57461456, 57471456, 57481456, 57491456, 57501456, 57511456, 57521456, 57531456, 57541456, 57551456, 57561456, 57571456, 57581456, 57591456, 57601456, 57611456, 57621456, 57631456, 57641456, 57651456, 57661456, 57671456]</msg>
<status status="PASS" starttime="20201112 12:28:44.287" endtime="20201112 12:28:44.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.283" endtime="20201112 12:28:44.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.296" endtime="20201112 12:28:44.586"></status>
</kw>
<msg timestamp="20201112 12:28:44.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019329694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029471083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:44.294" endtime="20201112 12:28:44.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019329694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029471083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:44.590" endtime="20201112 12:28:44.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.597" endtime="20201112 12:28:44.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.292" endtime="20201112 12:28:44.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.290" endtime="20201112 12:28:44.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:44.625" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:44.601" endtime="20201112 12:28:44.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.629" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:44.628" endtime="20201112 12:28:44.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.631" level="INFO">VALUE: 0.019329694</msg>
<status status="PASS" starttime="20201112 12:28:44.630" endtime="20201112 12:28:44.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.626" endtime="20201112 12:28:44.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.637" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:44.636" endtime="20201112 12:28:44.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:44.639" level="INFO">VALUE: [0.029471083, 0.039471944, 0.049473014, 0.059474236, 0.069475319, 0.079476542, 0.089477681, 0.099478847, 0.109479986, 0.119481194, 0.12948225, 0.139483458, 0.149484569, 0.159485778, 0.169486875, 0.179488069, 0.189489208, 0.199490375, 0.209491486, 0.219492708, 0.229493792, 0.239495, 0.249496153, 0.259497306, 0.269498417, 0.279499625, 0.289500708, 0.299501931, 0.309503014, 0.319504236, 0.329505333, 0.339506569, 0.349507639, 0.359508847, 0.369509958, 0.379511181, 0.38951225, 0.399513472, 0.409514556, 0.419515792, 0.429516889, 0.439518097, 0.449519181, 0.459520403, 0.4695215, 0.479522708, 0.489523806, 0.499525014, 0.509526125, 0.519527319, 0.529528417, 0.539529653, 0.549530722, 0.559531958, 0.569533056, 0.579534264, 0.589535347, 0.599536569, 0.609537667, 0.619538889, 0.629539972, 0.639541181, 0.649542292, 0.6595435, 0.669544583, 0.679545819, 0.689546889, 0.699548125, 0.709549222, 0.719550431, 0.729551528, 0.739552778, 0.749553819, 0.759555042, 0.769556139, 0.779557375, 0.789558444, 0.799559653, 0.809560764, 0.819561972, 0.829563069, 0.839564278, 0.849565375, 0.859566583, 0.869567722, 0.879568917, 0.889569986, 0.899571208, 0.909572319, 0.919573528, 0.929574639, 0.939575819, 0.949576931, 0.959578139, 0.969579222, 0.979580458, 0.989581542, 0.99958275, 1.009583847, 1.019585056] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:44.638" endtime="20201112 12:28:44.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.633" endtime="20201112 12:28:44.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.646" endtime="20201112 12:28:44.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:44.649" endtime="20201112 12:28:44.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.648" endtime="20201112 12:28:44.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.644" endtime="20201112 12:28:44.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.120" endtime="20201112 12:28:44.670"></status>
</kw>
<msg timestamp="20201112 12:28:44.670" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:44.678" endtime="20201112 12:28:46.802"></status>
</kw>
<msg timestamp="20201112 12:28:46.803" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59222748, 'wakeups': [59232888, 59242888, 59252888, 59262888, 59272888...</msg>
<status status="PASS" starttime="20201112 12:28:44.677" endtime="20201112 12:28:46.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.809" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59222748, 'wakeups': [59232888, 59242888, 59252888, 59262888, 59272888...</msg>
<status status="PASS" starttime="20201112 12:28:46.805" endtime="20201112 12:28:46.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.811" endtime="20201112 12:28:46.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.674" endtime="20201112 12:28:46.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.672" endtime="20201112 12:28:46.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:46.822" level="INFO">${RESULT} = {'timer-count': 8, 'start-time': 59222748, 'timer-interval': 10000, 'wakeups': [59232888, 59242888, 59252888, 59262888, 59272888, 59282888, 59292888, 59302888, 59312888, 59322888, 59332888, 59342888, ...</msg>
<status status="PASS" starttime="20201112 12:28:46.818" endtime="20201112 12:28:46.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.826" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:46.825" endtime="20201112 12:28:46.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.828" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:46.827" endtime="20201112 12:28:46.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.822" endtime="20201112 12:28:46.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.833" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:46.832" endtime="20201112 12:28:46.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.835" level="INFO">VALUE: 59222748</msg>
<status status="PASS" starttime="20201112 12:28:46.834" endtime="20201112 12:28:46.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.829" endtime="20201112 12:28:46.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.840" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:46.839" endtime="20201112 12:28:46.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.842" level="INFO">VALUE: [59232888, 59242888, 59252888, 59262888, 59272888, 59282888, 59292888, 59302888, 59312888, 59322888, 59332888, 59342888, 59352888, 59362888, 59372888, 59382888, 59392888, 59402888, 59412888, 59422888, 59432888, 59442888, 59452888, 59462888, 59472888, 59482888, 59492888, 59502888, 59512888, 59522888, 59532888, 59542888, 59552888, 59562888, 59572888, 59582888, 59592888, 59602888, 59612888, 59622888, 59632888, 59642888, 59652888, 59662888, 59672888, 59682888, 59692888, 59702888, 59712888, 59722888, 59732888, 59742888, 59752888, 59762888, 59772888, 59782888, 59792888, 59802888, 59812888, 59822888, 59832888, 59842888, 59852888, 59862888, 59872888, 59882888, 59892888, 59902888, 59912888, 59922888, 59932888, 59942888, 59952888, 59962888, 59972888, 59982888, 59992888, 60002888, 60012888, 60022888, 60032888, 60042888, 60052888, 60062888, 60072888, 60082888, 60092888, 60102888, 60112888, 60122888, 60132888, 60142888, 60152888, 60162888, 60172888, 60182888, 60192888, 60202888, 60212888, 60222888]</msg>
<status status="PASS" starttime="20201112 12:28:46.841" endtime="20201112 12:28:46.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.836" endtime="20201112 12:28:46.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.850" endtime="20201112 12:28:47.141"></status>
</kw>
<msg timestamp="20201112 12:28:47.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019459722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029601125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:46.848" endtime="20201112 12:28:47.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019459722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029601125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:47.144" endtime="20201112 12:28:47.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.152" endtime="20201112 12:28:47.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.845" endtime="20201112 12:28:47.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.843" endtime="20201112 12:28:47.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:47.179" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:47.155" endtime="20201112 12:28:47.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.184" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:47.183" endtime="20201112 12:28:47.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.186" level="INFO">VALUE: 0.019459722</msg>
<status status="PASS" starttime="20201112 12:28:47.185" endtime="20201112 12:28:47.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.180" endtime="20201112 12:28:47.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.191" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:47.190" endtime="20201112 12:28:47.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.193" level="INFO">VALUE: [0.029601125, 0.039601986, 0.049603042, 0.059604333, 0.069605347, 0.079606556, 0.089607653, 0.099608861, 0.109609986, 0.119611167, 0.129612264, 0.139613486, 0.149614556, 0.159615792, 0.169616875, 0.179618083, 0.189619181, 0.199620389, 0.209621486, 0.219622694, 0.229623778, 0.239625069, 0.249626097, 0.259627306, 0.269628403, 0.279629667, 0.289630722, 0.299631917, 0.309633, 0.319634222, 0.329635306, 0.339636528, 0.349637667, 0.359638833, 0.369639931, 0.379641139, 0.389642264, 0.399643458, 0.409644542, 0.41964575, 0.429646847, 0.439648056, 0.449649167, 0.459650375, 0.469651458, 0.479652708, 0.489653764, 0.499654986, 0.509656069, 0.519657292, 0.529658389, 0.539659611, 0.549660681, 0.559661903, 0.569663056, 0.579664208, 0.589665292, 0.599666528, 0.609667597, 0.619668819, 0.629669958, 0.639671139, 0.649672222, 0.6596735, 0.669674528, 0.679675736, 0.689676833, 0.699678042, 0.709679153, 0.719680347, 0.729681444, 0.739682667, 0.74968375, 0.759684972, 0.769686111, 0.779687278, 0.789688375, 0.799689597, 0.809690667, 0.819691889, 0.829692986, 0.839694208, 0.849695319, 0.8596965, 0.869697583, 0.879698806, 0.889699889, 0.899701125, 0.909702264, 0.919703431, 0.929704514, 0.939705764, 0.949706819, 0.959708042, 0.969709153, 0.979710333, 0.989711444, 0.999712639, 1.00971375, 1.019714986] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:47.192" endtime="20201112 12:28:47.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.187" endtime="20201112 12:28:47.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.196" endtime="20201112 12:28:47.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:47.200" endtime="20201112 12:28:47.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.198" endtime="20201112 12:28:47.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.195" endtime="20201112 12:28:47.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:44.671" endtime="20201112 12:28:47.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.572" endtime="20201112 12:28:47.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:39.571" endtime="20201112 12:28:47.221"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:47.223" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.232" endtime="20201112 12:28:49.355"></status>
</kw>
<msg timestamp="20201112 12:28:49.356" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61776304, 'wakeups': [61786466, 61796469, 61806469, 61816469, 61826469...</msg>
<status status="PASS" starttime="20201112 12:28:47.230" endtime="20201112 12:28:49.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.362" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61776304, 'wakeups': [61786466, 61796469, 61806469, 61816469, 61826469...</msg>
<status status="PASS" starttime="20201112 12:28:49.358" endtime="20201112 12:28:49.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.364" endtime="20201112 12:28:49.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.227" endtime="20201112 12:28:49.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.225" endtime="20201112 12:28:49.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:49.375" level="INFO">${RESULT} = {'timer-count': 9, 'start-time': 61776304, 'timer-interval': 10000, 'wakeups': [61786466, 61796469, 61806469, 61816469, 61826469, 61836469, 61846469, 61856469, 61866469, 61876469, 61886469, 61896469, ...</msg>
<status status="PASS" starttime="20201112 12:28:49.371" endtime="20201112 12:28:49.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.380" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:49.379" endtime="20201112 12:28:49.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.382" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:49.381" endtime="20201112 12:28:49.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.376" endtime="20201112 12:28:49.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.388" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:49.386" endtime="20201112 12:28:49.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.390" level="INFO">VALUE: 61776304</msg>
<status status="PASS" starttime="20201112 12:28:49.389" endtime="20201112 12:28:49.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.383" endtime="20201112 12:28:49.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.395" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:49.394" endtime="20201112 12:28:49.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.397" level="INFO">VALUE: [61786466, 61796469, 61806469, 61816469, 61826469, 61836469, 61846469, 61856469, 61866469, 61876469, 61886469, 61896469, 61906469, 61916469, 61926469, 61936469, 61946469, 61956469, 61966469, 61976469, 61986469, 61996469, 62006469, 62016469, 62026469, 62036469, 62046469, 62056469, 62066469, 62076469, 62086469, 62096469, 62106469, 62116469, 62126469, 62136469, 62146469, 62156469, 62166469, 62176469, 62186469, 62196469, 62206469, 62216469, 62226469, 62236469, 62246469, 62256469, 62266469, 62276469, 62286469, 62296469, 62306469, 62316469, 62326469, 62336469, 62346469, 62356469, 62366469, 62376469, 62386469, 62396469, 62406469, 62416469, 62426469, 62436469, 62446469, 62456469, 62466469, 62476469, 62486469, 62496469, 62506469, 62516469, 62526469, 62536469, 62546469, 62556469, 62566469, 62576469, 62586469, 62596469, 62606469, 62616469, 62626469, 62636469, 62646469, 62656469, 62666469, 62676469, 62686469, 62696469, 62706469, 62716469, 62726469, 62736469, 62746469, 62756469, 62766469, 62776469]</msg>
<status status="PASS" starttime="20201112 12:28:49.396" endtime="20201112 12:28:49.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.392" endtime="20201112 12:28:49.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.405" endtime="20201112 12:28:49.695"></status>
</kw>
<msg timestamp="20201112 12:28:49.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03288475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:49.403" endtime="20201112 12:28:49.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03288475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:49.699" endtime="20201112 12:28:49.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.706" endtime="20201112 12:28:49.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.400" endtime="20201112 12:28:49.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.399" endtime="20201112 12:28:49.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:49.738" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:49.714" endtime="20201112 12:28:49.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.742" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:49.741" endtime="20201112 12:28:49.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.744" level="INFO">VALUE: 0.022720514</msg>
<status status="PASS" starttime="20201112 12:28:49.743" endtime="20201112 12:28:49.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.739" endtime="20201112 12:28:49.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.750" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:49.749" endtime="20201112 12:28:49.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:49.753" level="INFO">VALUE: [0.03288475, 0.042888847, 0.052889931, 0.062891153, 0.072892222, 0.082893444, 0.092894542, 0.102895736, 0.112896861, 0.122898069, 0.132899125, 0.142900347, 0.152901486, 0.162902653, 0.172903736, 0.182904958, 0.192906069, 0.202907264, 0.212908347, 0.222909569, 0.232910653, 0.242911861, 0.252912944, 0.262914167, 0.272915319, 0.282916486, 0.292917556, 0.302918792, 0.312919875, 0.322921083, 0.332922208, 0.342923403, 0.3529245, 0.362925694, 0.372926778, 0.382928014, 0.392929097, 0.402930292, 0.412931389, 0.422932597, 0.432933694, 0.442934903, 0.452936, 0.462937222, 0.472938306, 0.482939514, 0.492940653, 0.502941847, 0.512942931, 0.522944125, 0.532945222, 0.542946431, 0.552947514, 0.562948736, 0.572949861, 0.582951056, 0.592952139, 0.602953361, 0.612954444, 0.622955653, 0.632956736, 0.642957972, 0.652959042, 0.662960264, 0.672961347, 0.682962583, 0.692963653, 0.702964875, 0.712965958, 0.722967208, 0.732968264, 0.742969528, 0.752970583, 0.762971792, 0.772972889, 0.782974083, 0.792975194, 0.802976389, 0.812977486, 0.822978708, 0.832979819, 0.842981, 0.852982097, 0.862983306, 0.872984403, 0.882985611, 0.892986694, 0.902987917, 0.912989, 0.922990236, 0.932991319, 0.942992542, 0.952993611, 0.962994833, 0.972995986, 0.982997153, 0.992998222, 1.002999444, 1.013000528, 1.023001792] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:49.752" endtime="20201112 12:28:49.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.746" endtime="20201112 12:28:49.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.756" endtime="20201112 12:28:49.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:49.759" endtime="20201112 12:28:49.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.758" endtime="20201112 12:28:49.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.754" endtime="20201112 12:28:49.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.224" endtime="20201112 12:28:49.780"></status>
</kw>
<msg timestamp="20201112 12:28:49.780" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:49.788" endtime="20201112 12:28:51.911"></status>
</kw>
<msg timestamp="20201112 12:28:51.912" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64332242, 'wakeups': [64342411, 64352408, 64362407, 64372407, 64382407...</msg>
<status status="PASS" starttime="20201112 12:28:49.786" endtime="20201112 12:28:51.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.918" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64332242, 'wakeups': [64342411, 64352408, 64362407, 64372407, 64382407...</msg>
<status status="PASS" starttime="20201112 12:28:51.915" endtime="20201112 12:28:51.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.921" endtime="20201112 12:28:51.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.784" endtime="20201112 12:28:51.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.782" endtime="20201112 12:28:51.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:51.931" level="INFO">${RESULT} = {'timer-count': 9, 'start-time': 64332242, 'timer-interval': 10000, 'wakeups': [64342411, 64352408, 64362407, 64372407, 64382407, 64392407, 64402407, 64412407, 64422407, 64432407, 64442407, 64452407, ...</msg>
<status status="PASS" starttime="20201112 12:28:51.927" endtime="20201112 12:28:51.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.936" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:51.935" endtime="20201112 12:28:51.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.938" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:51.937" endtime="20201112 12:28:51.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.932" endtime="20201112 12:28:51.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.943" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:51.942" endtime="20201112 12:28:51.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.945" level="INFO">VALUE: 64332242</msg>
<status status="PASS" starttime="20201112 12:28:51.944" endtime="20201112 12:28:51.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.939" endtime="20201112 12:28:51.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.949" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:51.948" endtime="20201112 12:28:51.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.952" level="INFO">VALUE: [64342411, 64352408, 64362407, 64372407, 64382407, 64392407, 64402407, 64412407, 64422407, 64432407, 64442407, 64452407, 64462407, 64472407, 64482407, 64492407, 64502407, 64512407, 64522407, 64532407, 64542407, 64552407, 64562407, 64572407, 64582407, 64592407, 64602407, 64612407, 64622407, 64632407, 64642407, 64652407, 64662407, 64672407, 64682407, 64692407, 64702407, 64712407, 64722407, 64732407, 64742407, 64752407, 64762407, 64772407, 64782407, 64792407, 64802407, 64812407, 64822407, 64832407, 64842407, 64852407, 64862407, 64872407, 64882407, 64892407, 64902407, 64912407, 64922407, 64932407, 64942407, 64952407, 64962407, 64972407, 64982407, 64992407, 65002407, 65012407, 65022407, 65032407, 65042407, 65052407, 65062407, 65072407, 65082407, 65092407, 65102407, 65112407, 65122407, 65132407, 65142407, 65152407, 65162407, 65172407, 65182407, 65192407, 65202407, 65212407, 65222407, 65232407, 65242407, 65252407, 65262407, 65272407, 65282407, 65292407, 65302407, 65312407, 65322407, 65332407]</msg>
<status status="PASS" starttime="20201112 12:28:51.951" endtime="20201112 12:28:51.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.946" endtime="20201112 12:28:51.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.959" endtime="20201112 12:28:52.250"></status>
</kw>
<msg timestamp="20201112 12:28:52.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019330417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029501278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:51.957" endtime="20201112 12:28:52.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019330417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029501278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:52.254" endtime="20201112 12:28:52.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.262" endtime="20201112 12:28:52.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.955" endtime="20201112 12:28:52.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.953" endtime="20201112 12:28:52.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:52.288" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:52.265" endtime="20201112 12:28:52.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.293" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:52.292" endtime="20201112 12:28:52.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.295" level="INFO">VALUE: 0.019330417</msg>
<status status="PASS" starttime="20201112 12:28:52.294" endtime="20201112 12:28:52.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.289" endtime="20201112 12:28:52.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.300" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:52.299" endtime="20201112 12:28:52.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.303" level="INFO">VALUE: [0.029501278, 0.039499083, 0.049499194, 0.059500361, 0.069501458, 0.079502667, 0.089503792, 0.099504972, 0.109506083, 0.119507264, 0.129508347, 0.139509569, 0.149510653, 0.159511861, 0.169512972, 0.179514167, 0.18951525, 0.199516472, 0.209517556, 0.219518778, 0.229519875, 0.239521069, 0.249522167, 0.259523389, 0.269524472, 0.279525708, 0.289526764, 0.299527972, 0.309529125, 0.319530278, 0.329531375, 0.339532597, 0.349533667, 0.359534889, 0.369535986, 0.379537181, 0.389538278, 0.3995395, 0.409540583, 0.419541806, 0.429542875, 0.439544097, 0.449545181, 0.459546417, 0.469547486, 0.479548736, 0.489549792, 0.499551, 0.509552083, 0.519553319, 0.529554403, 0.539555625, 0.549556708, 0.559557917, 0.569559028, 0.579560236, 0.589561319, 0.599562597, 0.609563597, 0.619564819, 0.629565903, 0.639567153, 0.649568208, 0.659569431, 0.669570514, 0.679571722, 0.689572819, 0.699574028, 0.709575125, 0.719576417, 0.729577486, 0.739578625, 0.749579736, 0.759580931, 0.769582042, 0.779583264, 0.789584319, 0.799585542, 0.809586625, 0.819587833, 0.829588931, 0.839590139, 0.84959125, 0.859592444, 0.869593542, 0.879594764, 0.889595833, 0.899597111, 0.909598153, 0.919599347, 0.929600458, 0.939601653, 0.949602736, 0.959604014, 0.969605056, 0.979606264, 0.989607347, 0.999608569, 1.009609653, 1.019610861] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:52.302" endtime="20201112 12:28:52.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.296" endtime="20201112 12:28:52.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.306" endtime="20201112 12:28:52.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:52.309" endtime="20201112 12:28:52.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.308" endtime="20201112 12:28:52.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.304" endtime="20201112 12:28:52.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:49.781" endtime="20201112 12:28:52.330"></status>
</kw>
<msg timestamp="20201112 12:28:52.330" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.339" endtime="20201112 12:28:54.462"></status>
</kw>
<msg timestamp="20201112 12:28:54.464" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66883172, 'wakeups': [66893334, 66903337, 66913337, 66923337, 66933337...</msg>
<status status="PASS" starttime="20201112 12:28:52.337" endtime="20201112 12:28:54.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.470" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66883172, 'wakeups': [66893334, 66903337, 66913337, 66923337, 66933337...</msg>
<status status="PASS" starttime="20201112 12:28:54.466" endtime="20201112 12:28:54.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.472" endtime="20201112 12:28:54.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.334" endtime="20201112 12:28:54.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.332" endtime="20201112 12:28:54.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:54.484" level="INFO">${RESULT} = {'timer-count': 9, 'start-time': 66883172, 'timer-interval': 10000, 'wakeups': [66893334, 66903337, 66913337, 66923337, 66933337, 66943337, 66953337, 66963337, 66973337, 66983337, 66993337, 67003337, ...</msg>
<status status="PASS" starttime="20201112 12:28:54.480" endtime="20201112 12:28:54.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.493" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:54.491" endtime="20201112 12:28:54.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.498" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:54.496" endtime="20201112 12:28:54.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.486" endtime="20201112 12:28:54.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.508" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:54.506" endtime="20201112 12:28:54.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.512" level="INFO">VALUE: 66883172</msg>
<status status="PASS" starttime="20201112 12:28:54.510" endtime="20201112 12:28:54.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.501" endtime="20201112 12:28:54.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.517" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:54.516" endtime="20201112 12:28:54.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.519" level="INFO">VALUE: [66893334, 66903337, 66913337, 66923337, 66933337, 66943337, 66953337, 66963337, 66973337, 66983337, 66993337, 67003337, 67013337, 67023337, 67033337, 67043337, 67053337, 67063337, 67073337, 67083337, 67093337, 67103337, 67113337, 67123337, 67133337, 67143337, 67153337, 67163337, 67173337, 67183337, 67193337, 67203337, 67213337, 67223337, 67233337, 67243337, 67253337, 67263337, 67273337, 67283337, 67293337, 67303337, 67313337, 67323337, 67333337, 67343337, 67353337, 67363337, 67373337, 67383337, 67393337, 67403337, 67413337, 67423337, 67433337, 67443337, 67453337, 67463337, 67473337, 67483337, 67493337, 67503337, 67513337, 67523337, 67533337, 67543337, 67553337, 67563337, 67573337, 67583337, 67593337, 67603337, 67613337, 67623337, 67633337, 67643337, 67653337, 67663337, 67673337, 67683337, 67693337, 67703337, 67713337, 67723337, 67733337, 67743337, 67753337, 67763337, 67773337, 67783337, 67793337, 67803337, 67813337, 67823337, 67833337, 67843337, 67853337, 67863337, 67873337, 67883337]</msg>
<status status="PASS" starttime="20201112 12:28:54.518" endtime="20201112 12:28:54.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.513" endtime="20201112 12:28:54.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.527" endtime="20201112 12:28:54.817"></status>
</kw>
<msg timestamp="20201112 12:28:54.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030403014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:54.525" endtime="20201112 12:28:54.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030403014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:54.820" endtime="20201112 12:28:54.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.828" endtime="20201112 12:28:54.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.523" endtime="20201112 12:28:54.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.521" endtime="20201112 12:28:54.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:54.856" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:54.831" endtime="20201112 12:28:54.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.861" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:54.860" endtime="20201112 12:28:54.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.863" level="INFO">VALUE: 0.020238792</msg>
<status status="PASS" starttime="20201112 12:28:54.862" endtime="20201112 12:28:54.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.857" endtime="20201112 12:28:54.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.868" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:54.867" endtime="20201112 12:28:54.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:54.870" level="INFO">VALUE: [0.030403014, 0.040407125, 0.05040825, 0.060409403, 0.0704105, 0.080411722, 0.090412806, 0.100414083, 0.110415083, 0.120416306, 0.130417389, 0.140418611, 0.150419681, 0.160420958, 0.170422, 0.180423194, 0.190424292, 0.200425556, 0.210426583, 0.220427806, 0.230428889, 0.240430097, 0.250431194, 0.260432403, 0.270433486, 0.280434694, 0.290435778, 0.300437083, 0.310438097, 0.320439306, 0.330440375, 0.340441625, 0.350442681, 0.360443903, 0.370444986, 0.380446194, 0.390447306, 0.4004485, 0.410449583, 0.420450792, 0.430451889, 0.440453111, 0.450454208, 0.460455403, 0.4704565, 0.480457708, 0.490458806, 0.50046, 0.510461083, 0.520462319, 0.530463417, 0.540464597, 0.550465694, 0.560466903, 0.570467986, 0.580469208, 0.590470319, 0.6004715, 0.610472611, 0.620473875, 0.630474889, 0.640476111, 0.650477194, 0.660478458, 0.670479514, 0.680480764, 0.690481792, 0.700483028, 0.710484097, 0.720485319, 0.730486403, 0.740487667, 0.750488694, 0.760489917, 0.770491014, 0.780492208, 0.790493319, 0.800494542, 0.810495611, 0.820496819, 0.830497917, 0.840499111, 0.850500194, 0.860501417, 0.8705025, 0.880503722, 0.890504819, 0.900506028, 0.910507111, 0.920508333, 0.930509417, 0.940510625, 0.950511708, 0.960512931, 0.970514014, 0.980515222, 0.990516306, 1.000517542, 1.010518611, 1.020519833] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:54.869" endtime="20201112 12:28:54.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.864" endtime="20201112 12:28:54.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.873" endtime="20201112 12:28:54.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:54.877" endtime="20201112 12:28:54.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.875" endtime="20201112 12:28:54.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.872" endtime="20201112 12:28:54.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.331" endtime="20201112 12:28:54.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.222" endtime="20201112 12:28:54.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.221" endtime="20201112 12:28:54.902"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:54.905" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:54.913" endtime="20201112 12:28:57.035"></status>
</kw>
<msg timestamp="20201112 12:28:57.036" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69456834, 'wakeups': [69467031, 69477025, 69487025, 69497025, 695070...</msg>
<status status="PASS" starttime="20201112 12:28:54.911" endtime="20201112 12:28:57.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.041" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69456834, 'wakeups': [69467031, 69477025, 69487025, 69497025, 695070...</msg>
<status status="PASS" starttime="20201112 12:28:57.038" endtime="20201112 12:28:57.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.042" endtime="20201112 12:28:57.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.909" endtime="20201112 12:28:57.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.907" endtime="20201112 12:28:57.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:57.048" level="INFO">${RESULT} = {'timer-count': 10, 'start-time': 69456834, 'timer-interval': 10000, 'wakeups': [69467031, 69477025, 69487025, 69497025, 69507025, 69517025, 69527025, 69537025, 69547025, 69557025, 69567025, 69577025,...</msg>
<status status="PASS" starttime="20201112 12:28:57.046" endtime="20201112 12:28:57.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.052" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:57.051" endtime="20201112 12:28:57.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.054" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:57.053" endtime="20201112 12:28:57.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.049" endtime="20201112 12:28:57.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.060" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:57.059" endtime="20201112 12:28:57.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.062" level="INFO">VALUE: 69456834</msg>
<status status="PASS" starttime="20201112 12:28:57.061" endtime="20201112 12:28:57.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.055" endtime="20201112 12:28:57.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.067" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:57.066" endtime="20201112 12:28:57.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.069" level="INFO">VALUE: [69467031, 69477025, 69487025, 69497025, 69507025, 69517025, 69527025, 69537025, 69547025, 69557025, 69567025, 69577025, 69587025, 69597025, 69607025, 69617025, 69627025, 69637025, 69647025, 69657025, 69667025, 69677025, 69687025, 69697025, 69707025, 69717025, 69727025, 69737025, 69747025, 69757025, 69767025, 69777025, 69787025, 69797025, 69807025, 69817025, 69827025, 69837025, 69847025, 69857025, 69867025, 69877025, 69887025, 69897025, 69907025, 69917025, 69927025, 69937025, 69947025, 69957025, 69967025, 69977025, 69987025, 69997025, 70007025, 70017025, 70027025, 70037025, 70047025, 70057025, 70067025, 70077025, 70087025, 70097025, 70107025, 70117025, 70127025, 70137025, 70147025, 70157025, 70167025, 70177025, 70187025, 70197025, 70207025, 70217025, 70227025, 70237025, 70247025, 70257025, 70267025, 70277025, 70287025, 70297025, 70307025, 70317025, 70327025, 70337025, 70347025, 70357025, 70367025, 70377025, 70387025, 70397025, 70407025, 70417025, 70427025, 70437025, 70447025, 70457025]</msg>
<status status="PASS" starttime="20201112 12:28:57.068" endtime="20201112 12:28:57.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.064" endtime="20201112 12:28:57.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.077" endtime="20201112 12:28:57.367"></status>
</kw>
<msg timestamp="20201112 12:28:57.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026608083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036806972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:57.075" endtime="20201112 12:28:57.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026608083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036806972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:57.371" endtime="20201112 12:28:57.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.379" endtime="20201112 12:28:57.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.072" endtime="20201112 12:28:57.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.071" endtime="20201112 12:28:57.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:57.406" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:57.382" endtime="20201112 12:28:57.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.410" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:57.409" endtime="20201112 12:28:57.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.412" level="INFO">VALUE: 0.026608083</msg>
<status status="PASS" starttime="20201112 12:28:57.411" endtime="20201112 12:28:57.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.407" endtime="20201112 12:28:57.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.418" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:57.417" endtime="20201112 12:28:57.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:57.421" level="INFO">VALUE: [0.036806972, 0.046801833, 0.056802931, 0.066804139, 0.076805208, 0.086806444, 0.096807514, 0.106808722, 0.116809806, 0.126811014, 0.136812097, 0.146813306, 0.156814403, 0.166815625, 0.176816694, 0.186817903, 0.196819, 0.206820194, 0.216821278, 0.226822514, 0.236823597, 0.246824792, 0.256825875, 0.266827097, 0.276828194, 0.286829389, 0.296830486, 0.306831694, 0.316832792, 0.326834056, 0.336835069, 0.346836306, 0.356837375, 0.366838583, 0.376839667, 0.386840889, 0.396841972, 0.406843194, 0.416844278, 0.426845486, 0.436846583, 0.446847778, 0.456848875, 0.466850083, 0.476851181, 0.486852431, 0.496853458, 0.506854667, 0.516855778, 0.526856986, 0.536858056, 0.546859264, 0.556860361, 0.566861583, 0.576862653, 0.586863917, 0.596865, 0.606866167, 0.61686725, 0.626868458, 0.636869556, 0.646870764, 0.656871847, 0.666873056, 0.676874153, 0.686875361, 0.696876444, 0.706877653, 0.716878736, 0.726879986, 0.736881042, 0.746882264, 0.756883333, 0.766884556, 0.776885639, 0.786886847, 0.796887931, 0.806889208, 0.816890236, 0.826891444, 0.836892556, 0.846893792, 0.856894833, 0.866896056, 0.876897125, 0.886898347, 0.896899431, 0.906900639, 0.916901722, 0.926902944, 0.936904028, 0.946905236, 0.956906333, 0.966907542, 0.976908639, 0.986909875, 0.996910917, 1.006912139, 1.016913236, 1.026914431] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:57.420" endtime="20201112 12:28:57.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.414" endtime="20201112 12:28:57.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.424" endtime="20201112 12:28:57.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:57.427" endtime="20201112 12:28:57.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.425" endtime="20201112 12:28:57.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.422" endtime="20201112 12:28:57.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.905" endtime="20201112 12:28:57.448"></status>
</kw>
<msg timestamp="20201112 12:28:57.448" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:57.456" endtime="20201112 12:28:59.579"></status>
</kw>
<msg timestamp="20201112 12:28:59.581" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71999894, 'wakeups': [72010091, 72020085, 72030085, 72040085, 720500...</msg>
<status status="PASS" starttime="20201112 12:28:57.454" endtime="20201112 12:28:59.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.587" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71999894, 'wakeups': [72010091, 72020085, 72030085, 72040085, 720500...</msg>
<status status="PASS" starttime="20201112 12:28:59.583" endtime="20201112 12:28:59.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:59.589" endtime="20201112 12:28:59.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.452" endtime="20201112 12:28:59.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.450" endtime="20201112 12:28:59.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:59.598" level="INFO">${RESULT} = {'timer-count': 10, 'start-time': 71999894, 'timer-interval': 10000, 'wakeups': [72010091, 72020085, 72030085, 72040085, 72050085, 72060085, 72070085, 72080085, 72090085, 72100085, 72110085, 72120085,...</msg>
<status status="PASS" starttime="20201112 12:28:59.596" endtime="20201112 12:28:59.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.602" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:59.601" endtime="20201112 12:28:59.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.604" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:59.603" endtime="20201112 12:28:59.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.599" endtime="20201112 12:28:59.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.609" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:59.608" endtime="20201112 12:28:59.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.612" level="INFO">VALUE: 71999894</msg>
<status status="PASS" starttime="20201112 12:28:59.610" endtime="20201112 12:28:59.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.606" endtime="20201112 12:28:59.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.617" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:59.616" endtime="20201112 12:28:59.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.620" level="INFO">VALUE: [72010091, 72020085, 72030085, 72040085, 72050085, 72060085, 72070085, 72080085, 72090085, 72100085, 72110085, 72120085, 72130085, 72140085, 72150085, 72160085, 72170085, 72180085, 72190085, 72200085, 72210085, 72220085, 72230085, 72240085, 72250085, 72260085, 72270085, 72280085, 72290085, 72300085, 72310085, 72320085, 72330085, 72340085, 72350085, 72360085, 72370085, 72380085, 72390085, 72400085, 72410085, 72420085, 72430085, 72440085, 72450085, 72460085, 72470085, 72480085, 72490085, 72500085, 72510085, 72520085, 72530085, 72540085, 72550085, 72560085, 72570085, 72580085, 72590085, 72600085, 72610085, 72620085, 72630085, 72640085, 72650085, 72660085, 72670085, 72680085, 72690085, 72700085, 72710085, 72720085, 72730085, 72740085, 72750085, 72760085, 72770085, 72780085, 72790085, 72800085, 72810085, 72820085, 72830085, 72840085, 72850085, 72860085, 72870085, 72880085, 72890085, 72900085, 72910085, 72920085, 72930085, 72940085, 72950085, 72960085, 72970085, 72980085, 72990085, 73000085]</msg>
<status status="PASS" starttime="20201112 12:28:59.618" endtime="20201112 12:28:59.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.613" endtime="20201112 12:28:59.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:59.629" endtime="20201112 12:28:59.919"></status>
</kw>
<msg timestamp="20201112 12:28:59.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019340597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0295395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:59.626" endtime="20201112 12:28:59.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019340597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0295395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:59.923" endtime="20201112 12:28:59.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:59.931" endtime="20201112 12:28:59.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.623" endtime="20201112 12:28:59.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.621" endtime="20201112 12:28:59.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:59.958" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:59.934" endtime="20201112 12:28:59.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.967" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:59.966" endtime="20201112 12:28:59.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.969" level="INFO">VALUE: 0.019340597</msg>
<status status="PASS" starttime="20201112 12:28:59.968" endtime="20201112 12:28:59.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.964" endtime="20201112 12:28:59.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.975" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:59.974" endtime="20201112 12:28:59.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:59.977" level="INFO">VALUE: [0.0295395, 0.039534361, 0.049535444, 0.059536681, 0.06953775, 0.079539, 0.089540014, 0.099541236, 0.109542319, 0.119543542, 0.129544611, 0.139545819, 0.149546917, 0.159548111, 0.169549264, 0.179550403, 0.189551486, 0.199552722, 0.209553792, 0.219555042, 0.229556083, 0.239557292, 0.249558375, 0.259559583, 0.269560681, 0.279561889, 0.289563042, 0.299564181, 0.309565264, 0.3195665, 0.329567569, 0.339568778, 0.349569861, 0.359571083, 0.369572153, 0.379573389, 0.389574458, 0.399575667, 0.409576806, 0.419577972, 0.429579069, 0.439580264, 0.449581375, 0.459582583, 0.469583681, 0.479584903, 0.489586, 0.499587236, 0.509588333, 0.519589556, 0.529590653, 0.539591889, 0.549592986, 0.559594194, 0.569595292, 0.579596542, 0.589597639, 0.599598833, 0.609599958, 0.619601167, 0.629602264, 0.639603486, 0.649604597, 0.659605806, 0.669606889, 0.679608125, 0.689609292, 0.699610444, 0.709611528, 0.71961275, 0.729613861, 0.739615097, 0.749616167, 0.759617389, 0.769618486, 0.779619708, 0.789620819, 0.799622042, 0.809623125, 0.819624361, 0.829625458, 0.839626681, 0.849627764, 0.859628986, 0.869630083, 0.879631347, 0.889632403, 0.899633625, 0.909634736, 0.919635972, 0.929637042, 0.939638264, 0.949639361, 0.959640583, 0.969641681, 0.979642917, 0.989644014, 0.999645264, 1.009646319, 1.019647542] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:59.976" endtime="20201112 12:28:59.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.971" endtime="20201112 12:28:59.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:59.980" endtime="20201112 12:28:59.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:59.983" endtime="20201112 12:29:00.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.982" endtime="20201112 12:29:00.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.978" endtime="20201112 12:29:00.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:57.448" endtime="20201112 12:29:00.004"></status>
</kw>
<msg timestamp="20201112 12:29:00.004" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.013" endtime="20201112 12:29:02.137"></status>
</kw>
<msg timestamp="20201112 12:29:02.139" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74557323, 'wakeups': [74567520, 74577514, 74587514, 74597514, 746075...</msg>
<status status="PASS" starttime="20201112 12:29:00.012" endtime="20201112 12:29:02.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.145" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74557323, 'wakeups': [74567520, 74577514, 74587514, 74597514, 746075...</msg>
<status status="PASS" starttime="20201112 12:29:02.141" endtime="20201112 12:29:02.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:02.147" endtime="20201112 12:29:02.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.008" endtime="20201112 12:29:02.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.006" endtime="20201112 12:29:02.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:02.155" level="INFO">${RESULT} = {'timer-count': 10, 'start-time': 74557323, 'timer-interval': 10000, 'wakeups': [74567520, 74577514, 74587514, 74597514, 74607514, 74617514, 74627514, 74637514, 74647514, 74657514, 74667514, 74677514,...</msg>
<status status="PASS" starttime="20201112 12:29:02.153" endtime="20201112 12:29:02.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.159" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:02.158" endtime="20201112 12:29:02.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.161" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:02.160" endtime="20201112 12:29:02.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.156" endtime="20201112 12:29:02.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.166" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:29:02.165" endtime="20201112 12:29:02.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.168" level="INFO">VALUE: 74557323</msg>
<status status="PASS" starttime="20201112 12:29:02.167" endtime="20201112 12:29:02.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.163" endtime="20201112 12:29:02.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.173" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:02.172" endtime="20201112 12:29:02.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.175" level="INFO">VALUE: [74567520, 74577514, 74587514, 74597514, 74607514, 74617514, 74627514, 74637514, 74647514, 74657514, 74667514, 74677514, 74687514, 74697514, 74707514, 74717514, 74727514, 74737514, 74747514, 74757514, 74767514, 74777514, 74787514, 74797514, 74807514, 74817514, 74827514, 74837514, 74847514, 74857514, 74867514, 74877514, 74887514, 74897514, 74907514, 74917514, 74927514, 74937514, 74947514, 74957514, 74967514, 74977514, 74987514, 74997514, 75007514, 75017514, 75027514, 75037514, 75047514, 75057514, 75067514, 75077514, 75087514, 75097514, 75107514, 75117514, 75127514, 75137514, 75147514, 75157514, 75167514, 75177514, 75187514, 75197514, 75207514, 75217514, 75227514, 75237514, 75247514, 75257514, 75267514, 75277514, 75287514, 75297514, 75307514, 75317514, 75327514, 75337514, 75347514, 75357514, 75367514, 75377514, 75387514, 75397514, 75407514, 75417514, 75427514, 75437514, 75447514, 75457514, 75467514, 75477514, 75487514, 75497514, 75507514, 75517514, 75527514, 75537514, 75547514, 75557514]</msg>
<status status="PASS" starttime="20201112 12:29:02.174" endtime="20201112 12:29:02.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.170" endtime="20201112 12:29:02.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:02.183" endtime="20201112 12:29:02.475"></status>
</kw>
<msg timestamp="20201112 12:29:02.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020403181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030601722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:02.182" endtime="20201112 12:29:02.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020403181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030601722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:02.479" endtime="20201112 12:29:02.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:02.486" endtime="20201112 12:29:02.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.179" endtime="20201112 12:29:02.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.177" endtime="20201112 12:29:02.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:02.514" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:02.490" endtime="20201112 12:29:02.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.518" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:29:02.517" endtime="20201112 12:29:02.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.520" level="INFO">VALUE: 0.020403181</msg>
<status status="PASS" starttime="20201112 12:29:02.519" endtime="20201112 12:29:02.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.515" endtime="20201112 12:29:02.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.526" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:02.525" endtime="20201112 12:29:02.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:02.528" level="INFO">VALUE: [0.030601722, 0.040596611, 0.050597792, 0.060598931, 0.070600069, 0.080601236, 0.090602347, 0.100603556, 0.110604667, 0.120605861, 0.130606972, 0.140608236, 0.150609264, 0.160610486, 0.170611583, 0.180612819, 0.190613931, 0.200615139, 0.210616222, 0.220617431, 0.230618528, 0.24061975, 0.250620847, 0.260622069, 0.270623167, 0.280624389, 0.290625472, 0.300626708, 0.310627792, 0.320629014, 0.330630181, 0.340631347, 0.350632417, 0.360633667, 0.370634736, 0.380636014, 0.390637056, 0.400638278, 0.410639375, 0.420640583, 0.430641681, 0.440642903, 0.450644, 0.460645222, 0.470646319, 0.480647542, 0.490648639, 0.500649861, 0.510650944, 0.520652181, 0.530653278, 0.540654486, 0.550655583, 0.560656806, 0.570657903, 0.580659167, 0.590660208, 0.600661472, 0.610662528, 0.62066375, 0.630664847, 0.640666056, 0.650667181, 0.660668375, 0.670669472, 0.680670694, 0.690671792, 0.700673014, 0.710674181, 0.720675319, 0.730676417, 0.740677639, 0.75067875, 0.760679958, 0.770681069, 0.780682278, 0.790683375, 0.800684597, 0.810685681, 0.820686903, 0.830688, 0.840689222, 0.850690319, 0.860691542, 0.870692639, 0.880693861, 0.890694986, 0.900696181, 0.910697278, 0.920698542, 0.930699583, 0.940700806, 0.950701917, 0.960703125, 0.970704222, 0.980705431, 0.990706528, 1.000707764, 1.010708847, 1.020710097] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:02.527" endtime="20201112 12:29:02.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.522" endtime="20201112 12:29:02.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:02.531" endtime="20201112 12:29:02.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:02.535" endtime="20201112 12:29:02.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.533" endtime="20201112 12:29:02.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:02.530" endtime="20201112 12:29:02.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.005" endtime="20201112 12:29:02.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.903" endtime="20201112 12:29:02.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:54.902" endtime="20201112 12:29:02.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.820" endtime="20201112 12:29:02.556"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:45.741" endtime="20201112 12:29:02.557" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:27:44.341" endtime="20201112 12:29:02.560"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:25:58.900" endtime="20201112 12:29:02.575"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
